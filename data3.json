[{"repo": "/hunzaboy/CSS-Checkbox-Library", "language": "HTML", "readme_contents": "<a href=\"https://hunzaboy.github.io/CSS-Checkbox-Library/\">Click Here for Demo</a>\n\n# Tons of Checkboxes\nA huge collection of pure css checkboxes.\n\n<img src=\"https://hunzaboy.github.io/CSS-Checkbox-Library/screen.png\">\n\n<a href=\"https://hunzaboy.github.io/CSS-Checkbox-Library/\">Click Here for Demo</a>\n\n## Compatible\nIE9+, Chrome 49+, Firefox 52+, Safari 5+\n\n## How to use\n1. Install via NPM  `npm i css-checkbox-library` or Download the Zip\n2. Import the `checkboxes.min.css` or `checkboxes.css` file from the `dist` folder.\n3. Use the checkbox design you like with the following markup. In the example below the class `ckbx-square-1` is important.\n\n```HTML\n<div class=\"ckbx-square-1\">\n  <input type=\"checkbox\" checked id=\"ckbx-square-1-2\" value=\"0\" name=\"ckbx-square-1\">\n  <label for=\"ckbx-square-1-2\"></label>\n</div>\n```\n\nThat's it. \n\n<strong>You can checkout the <a href=\"https://hunzaboy.github.io/CSS-Checkbox-Library/\">DEMO</a> to get HTML Code for each design. Just press the HTML button.</strong>\n\n<a href='https://ko-fi.com/W7W112WHD' target='_blank'><img height='36' style='border:0px;height:36px;' src='https://az743702.vo.msecnd.net/cdn/kofi1.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' /></a>\n\n## Todo\n\n- [x] ~~Circles, Squares~~\n- [x] ~~Toggles~~\n- [x] HTML Code Snippet\n- [x] Added Different Sizes\n- [ ] Color Variations\n- [ ] More Animations\n- [ ] Just for Fun Toggles\n"}, {"repo": "/fent/node-ytdl-core", "language": "HTML", "readme_contents": "# node-ytdl-core\n[![Dependency Status](https://david-dm.org/fent/node-ytdl-core.svg)](https://david-dm.org/fent/node-ytdl-core)\n[![codecov](https://codecov.io/gh/fent/node-ytdl-core/branch/master/graph/badge.svg)](https://codecov.io/gh/fent/node-ytdl-core)\n[![Discord](https://img.shields.io/discord/484464227067887645.svg)](https://discord.gg/V3vSCs7)\n\nYet another youtube downloading module. Written with only Javascript and a node-friendly streaming interface.\n\n# Support\nYou can contact us for support on our [chat server](https://discord.gg/V3vSCs7)\n\n# Usage\n\n```js\nconst fs = require('fs');\nconst ytdl = require('ytdl-core');\n// TypeScript: import ytdl from 'ytdl-core'; with --esModuleInterop\n// TypeScript: import * as ytdl from 'ytdl-core'; with --allowSyntheticDefaultImports\n// TypeScript: import ytdl = require('ytdl-core'); with neither of the above\n\nytdl('http://www.youtube.com/watch?v=A02s8omM_hI')\n  .pipe(fs.createWriteStream('video.flv'));\n```\n\n\n# API\n### ytdl(url, [options])\n\nAttempts to download a video from the given url. Returns a [readable stream](https://nodejs.org/api/stream.html#stream_class_stream_readable). `options` can have the following keys\n\n* `quality` - Video quality to download. Can be an [itag value](http://en.wikipedia.org/wiki/YouTube#Quality_and_formats), a list of itag values, or `highest`/`lowest`/`highestaudio`/`lowestaudio`/`highestvideo`/`lowestvideo`. `highestaudio`/`lowestaudio`/`highestvideo`/`lowestvideo` all prefer audio/video only respectively. Defaults to `highest`.\n* `filter` - Used to decide what format to download. Can be `audioandvideo` to filter formats that contain both video and audio, `video` to filter for formats that contain video, or `videoonly` for formats that contain video and no additional audio track. Can also be `audio` or `audioonly`. You can give a filtering function that gets called with each format available. This function is given the `format` object as its first argument, and should return true if the format is preferable.\n* `format` - Primarily used to download specific video or audio streams. This can be a specific `format` object returned from `getInfo`.\n  * Supplying this option will ignore the `filter` and `quality` options since the format is explicitly provided.\n* `range` - A byte range in the form `{start: INT, end: INT}` that specifies part of the file to download, ie {start: 10355705, end: 12452856}.\n  * This downloads a portion of the file, and not a separately spliced video.\n* `begin` - What time in the video to begin. Supports formats `00:00:00.000`, `0ms, 0s, 0m, 0h`, or number of milliseconds. Example: `1:30`, `05:10.123`, `10m30s`. For live videos, this also accepts a unix timestamp or Date, and defaults to `Date.now()`.\n  * This option is not very reliable, see [#129](https://github.com/fent/node-ytdl-core/issues/129), [#219](https://github.com/fent/node-ytdl-core/issues/219).\n* `liveBuffer` - How much time buffer to use for live videos in milliseconds. Default is `20000`.\n* `requestOptions` - Anything to merge into the request options which [miniget](https://github.com/fent/node-miniget) is called with, such as headers.\n* `highWaterMark` - How much of the video download to buffer into memory. See [node's docs](https://nodejs.org/api/stream.html#stream_constructor_new_stream_writable_options) for more.\n* `lang` - The 2 character symbol of a language. Default is `en`.\n\n```js\n// Example with `filter` option.\nytdl(url, { filter: (format) => format.container === 'mp4' })\n  .pipe(fs.createWriteStream('video.mp4'));\n```\n\n#### Event: info\n* [`ytdl.videoInfo`](example/info.json) - Info.\n* [`ytdl.videoFormat`](typings/index.d.ts#L22) - Video Format.\n\nEmitted when the a video's `info` hash is fetched, along with the chosen format metadata to download. `format.url` might be different if `start` was given.\n\n#### Event: response\n* [`http.ServerResponse`](https://nodejs.org/api/http.html#http_class_http_serverresponse) - Response.\n\nEmitted when the video response has been found and has started downloading or after any successful reconnects. Can be used to get the size of the download.\n\n#### Event: progress\n* `number` - Chunk byte length.\n* `number` - Total bytes or segments downloaded.\n* `number` - Total bytes or segments.\n\nEmitted whenever a new chunk is received. Passes values describing the download progress.\n\n### Stream#destroy()\n\nCall to abort and stop downloading a video.\n\n### ytdl.getBasicInfo(url, [options], [callback(err, info)])\n\nUse this if you only want to get metainfo from a video. If `callback` isn't given, returns a promise.\n\n### ytdl.getInfo(url, [options], [callback(err, info)])\n\nGets metainfo from a video. Includes additional formats, and ready to download deciphered URL. This is what the `ytdl()` function uses internally. If `callback` isn't given, returns a promise.\n\n### ytdl.downloadFromInfo(info, options)\n\nOnce you have received metadata from a video with the `ytdl.getInfo` function, you may pass that information along with other options to this function.\n\n### ytdl.chooseFormat(formats, options)\n\nCan be used if you'd like to choose a format yourself with the [options above](#ytdlurl-options).\n\n```js\n// Example of choosing a video format.\nytdl.getInfo(videoID, (err, info) => {\n  if (err) throw err;\n  let format = ytdl.chooseFormat(info.formats, { quality: '134' });\n  if (format) {\n    console.log('Format found!');\n  }\n});\n```\n\n### ytdl.filterFormats(formats, filter)\n\nIf you'd like to work with only some formats, you can use the [`filter` option above](#ytdlurl-options).\n\n```js\n// Example of filtering the formats to audio only.\nytdl.getInfo(videoID, (err, info) => {\n  if (err) throw err;\n  let audioFormats = ytdl.filterFormats(info.formats, 'audioonly');\n  console.log('Formats with only audio: ' + audioFormats.length);\n});\n```\n\n### ytdl.validateID(id)\n\nReturns true if the given string satisfies YouTube's ID format.\n\n### ytdl.validateURL(url)\n\nReturns true if able to parse out a valid video ID.\n\n### ytdl.getURLVideoID(url)\n\nReturns a video ID from a YouTube URL.\n\n### ytdl.getVideoID(str)\n\nSame as the above `ytdl.getURLVideoID()`, but can be called with the video ID directly, in which case it returns it. This is what ytdl uses internally.\n\n## Limitations\n\nytdl cannot download videos that fall into the following\n* Regionally restricted (requires a [proxy](example/proxy.js))\n* Private\n* Rentals\n\nYouTube intentionally rate limits downloads, particularly audio only formats, likely to prevent bandwidth abuse. The download rate is still faster than a media player can play the video, even on 2x. See [#294](https://github.com/fent/node-ytdl-core/issues/294).\n\nGenerated download links are valid for 6 hours, for the same IP address.\n\n## Handling Separate Streams\n\nTypically 1080p or better video does not have audio encoded with it. The audio must be downloaded separately and merged via an appropriate encoding library. `ffmpeg` is the most widely used tool, with many [Node.js modules available](https://www.npmjs.com/search?q=ffmpeg). Use the `format` objects returned from `ytdl.getInfo` to download specific streams to combine to fit your needs. Look at [example/ffmpeg.js](example/ffmpeg.js) for an example on doing this.\n\n## What if it stops working?\n\nYoutube updates their website all the time, it's not that rare for this to stop working. If it doesn't work for you and you're using the latest version, feel free to open up an issue. Make sure to check if there isn't one already with the same error.\n\nIf you'd like to help fix the issue, look at the type of error first. The most common one is\n\n    Could not extract signature deciphering actions\n\nRun the tests at `test/irl-test.js` just to make sure that this is actually an issue with ytdl-core.\n\n    mocha test/irl-test.js\n\nThese tests are not mocked, and they actually try to start downloading a few videos. If these fail, then it's time to debug.\n\nFor getting started with that, you can look at the `extractActions()` function in [`/lib/sig.js`](https://github.com/fent/node-ytdl-core/blob/master/lib/sig.js).\n\n\n# Install\n\n```bash\nnpm install ytdl-core@latest\n```\n\nOr for Yarn users:\n```bash\nyarn add ytdl-core@latest\n```\n\nIf you're using a bot or app that uses ytdl-core, it may be dependent on an older version. Make sure you're installing the latest version of ytdl-core to keep up with the latest fixes.\n\n# Related Projects\n\n- [ytdl](https://github.com/fent/node-ytdl) - A cli wrapper of this.\n- [pully](https://github.com/JimmyBoh/pully) - Another cli wrapper of this aimed at high quality formats.\n- [ytsr](https://github.com/TimeForANinja/node-ytsr) - YouTube video search results.\n- [ytpl](https://github.com/TimeForANinja/node-ytpl) - YouTube playlist and channel resolver.\n\n\n# Tests\nTests are written with [mocha](https://mochajs.org)\n\n```bash\nnpm test\n```\n"}, {"repo": "/CocoaPods/CocoaPods", "language": "Ruby", "readme_contents": "![CocoaPods Logo](https://raw.github.com/CocoaPods/shared_resources/master/assets/cocoapods-banner-readme.png)\n\n### CocoaPods: The Cocoa dependency manager\n\n[![Build Status](http://img.shields.io/travis/CocoaPods/CocoaPods/master.svg?style=flat)](https://travis-ci.org/CocoaPods/CocoaPods)\n[![Gem Version](http://img.shields.io/gem/v/cocoapods.svg?style=flat)](http://badge.fury.io/rb/cocoapods)\n[![Code Climate](http://img.shields.io/codeclimate/github/CocoaPods/CocoaPods.svg?style=flat)](https://codeclimate.com/github/CocoaPods/CocoaPods)\n\nCocoaPods manages dependencies for your Xcode projects.\n\nYou specify the dependencies for your project in a simple text file: your `Podfile`. \nCocoaPods recursively resolves dependencies between libraries, fetches \nsource code for all dependencies, and creates and maintains an Xcode \nworkspace to build your project. The latest released Xcode versions and the \nprior version are supported.\n\nInstalling and updating CocoaPods is very easy. Don't miss the [Installation\nguide](https://guides.cocoapods.org/using/getting-started.html#installation) and the\n[Getting Started guide](https://guides.cocoapods.org/using/getting-started.html).\n\n## Project Goals\n\nCocoaPods aims to improve the engagement with, and discoverability \nof, third party open-source Cocoa libraries. These\nproject goals influence and drive the design of CocoaPods:\n\n- Create and share libraries, and use them in your own projects,\n  without creating extra work for library authors. Integrate\n  non-CocoaPods libraries and hack on your own fork of any\n  CocoaPods library with a simple transparent `Podspec` standard.\n- Allow library authors to structure their libraries however they like.\n- Save time for library authors by automating a lot of Xcode work not \n  related to their libraries' functionality.\n- Support any source management system. (Currently supported are `git`, \n  `svn`, `mercurial`, `bazaar`, and various types of archives downloaded over HTTP.)\n- Promote a culture of distributed collaboration on pods, but also provide\n  features only possible with a centralised solution to foster a community.\n- Build tools on top of the core Cocoa development system, including those \n  typically deployed to other operating systems, such as web-services.\n- Provide opinionated and automated integration, but make it completely\n  optional. You may manually integrate your CocoaPods dependencies\n  into your Xcode project as you see fit, with or without a workspace.\n- Solve everyday problems for Cocoa and Xcode developers.\n\n## Sponsors\n\nLovingly sponsored by a collection of companies, see the footer of [CocoaPods.org](https://cocoapods.org) for an up-to-date list. \n\n## Collaborate\n\nAll CocoaPods development happens on GitHub. Contributions make for good karma and\nwe [welcome new](https://blog.cocoapods.org/starting-open-source/) contributors with joy. We take contributors seriously, and thus have a \ncontributor [code of conduct](CODE_OF_CONDUCT.md).\n\n## Links\n\n| Link | Description |\n| :----- | :------ |\n[CocoaPods.org](https://cocoapods.org/) | Homepage and search for Pods.\n[@CocoaPods](https://twitter.com/CocoaPods) | Follow CocoaPods on Twitter to stay up to date.\n[Blog](https://blog.cocoapods.org) | The CocoaPods blog.\n[Mailing List](https://groups.google.com/group/cocoapods) | Feel free to ask any kind of question.\n[Guides](https://guides.cocoapods.org) | Everything you want to know about CocoaPods.\n[Changelog](https://github.com/CocoaPods/CocoaPods/blob/master/CHANGELOG.md) | See the changes introduced in each CocoaPods version.\n[New Pods RSS](https://feeds.cocoapods.org/new-pods.rss) | Don't miss any new Pods.\n[Code of Conduct](CODE_OF_CONDUCT.md) | Find out the standards we hold ourselves to.\n\n## Projects\n\nCocoaPods is composed of the following projects:\n\n| Status | Project | Description | Info |\n| :----- | :------ | :--- | :--- |\n| [![Build Status](http://img.shields.io/travis/CocoaPods/CocoaPods/master.svg?style=flat)](https://travis-ci.org/CocoaPods/CocoaPods) | [CocoaPods](https://github.com/CocoaPods/CocoaPods) | The CocoaPods command line tool. | [guides](https://guides.cocoapods.org)\n| [![Build Status](http://img.shields.io/travis/CocoaPods/Core/master.svg?style=flat)](https://travis-ci.org/CocoaPods/Core) | [CocoaPods Core](https://github.com/CocoaPods/Core) | Support for working with specifications and podfiles. | [docs](https://guides.cocoapods.org/contributing/components.html)\n| [![Build Status](http://img.shields.io/travis/CocoaPods/cocoapods-downloader/master.svg?style=flat)](https://travis-ci.org/CocoaPods/cocoapods-downloader) |[CocoaPods Downloader](https://github.com/CocoaPods/cocoapods-downloader) |  Downloaders for various source types. |  [docs](https://www.rubydoc.info/gems/cocoapods-downloader)\n| [![Build Status](http://img.shields.io/travis/CocoaPods/Xcodeproj/master.svg?style=flat)](https://travis-ci.org/CocoaPods/Xcodeproj) | [Xcodeproj](https://github.com/CocoaPods/Xcodeproj) | Create and modify Xcode projects from Ruby. |  [docs](https://www.rubydoc.info/gems/xcodeproj)\n| [![Build Status](http://img.shields.io/travis/CocoaPods/CLAide/master.svg?style=flat)](https://travis-ci.org/CocoaPods/CLAide) | [CLAide](https://github.com/CocoaPods/CLAide) | A small command-line interface framework.  | [docs](https://www.rubydoc.info/gems/claide)\n| [![Build Status](http://img.shields.io/travis/CocoaPods/Molinillo/master.svg?style=flat)](https://travis-ci.org/CocoaPods/Molinillo) | [Molinillo](https://github.com/CocoaPods/Molinillo) | A powerful generic dependency resolver.  | [docs](https://www.rubydoc.info/gems/molinillo)\n| [![Build Status](http://img.shields.io/travis/CocoaPods/CocoaPods-app/master.svg?style=flat)](https://travis-ci.org/CocoaPods/CocoaPods-app) | [CocoaPods.app](https://github.com/CocoaPods/CocoaPods-app) | A full-featured and standalone installation of CocoaPods.  | [info](https://cocoapods.org/app)\n|  | [Master Repo ](https://github.com/CocoaPods/Specs) | Master repository of specifications. | [guides](https://guides.cocoapods.org/making/specs-and-specs-repo.html)\n"}, {"repo": "/sux13/DataScienceSpCourseNotes", "language": "HTML", "readme_contents": "# Data Science Specialization Course Notes\n\nI have compiled notes for all 9 courses of the Johns Hopkins Unversity/Coursera Data Science Specialization. The notes are all written in **R Markdown** format and cover all concepts convered in class, as well as additional examples I have compiled from lecture, my own exploration, _StackOverflow_, and _Khan Academy_. These documents are intended to be comprehensive sources of reference for future use and they have served me wonderfully in completing the assignments for each course. So I hope you will find them helpful as well. \n\nThey are by no means perfect, so feel free to correct, contribute (send a pull request), or use them in anyway you would like. \n\nYou will find **HTML**, **PDF**, and **R Markdown** files here in this repository in each of the corresponding folders. You can view the HTML versions [here](http://sux13.github.io/DataScienceSpCourseNotes/)\n\nIf you have any questions, drop me an email at s.xing@me.com\n"}, {"repo": "/explosion/spaCy", "language": "Python", "readme_contents": "<a href=\"https://explosion.ai\"><img src=\"https://explosion.ai/assets/img/logo.svg\" width=\"125\" height=\"125\" align=\"right\" /></a>\n\n# spaCy: Industrial-strength NLP\n\nspaCy is a library for advanced Natural Language Processing in Python and\nCython. It's built on the very latest research, and was designed from day one to\nbe used in real products. spaCy comes with\n[pretrained statistical models](https://spacy.io/models) and word vectors, and\ncurrently supports tokenization for **50+ languages**. It features\nstate-of-the-art speed, convolutional **neural network models** for tagging,\nparsing and **named entity recognition** and easy **deep learning** integration.\nIt's commercial open-source software, released under the MIT license.\n\n\ud83d\udcab **Version 2.2 out now!**\n[Check out the release notes here.](https://github.com/explosion/spaCy/releases)\n\n[![Azure Pipelines](<https://img.shields.io/azure-devops/build/explosion-ai/public/8/master.svg?logo=azure-pipelines&style=flat-square&label=build+(3.x)>)](https://dev.azure.com/explosion-ai/public/_build?definitionId=8)\n[![Travis Build Status](<https://img.shields.io/travis/explosion/spaCy/master.svg?style=flat-square&logo=travis-ci&logoColor=white&label=build+(2.7)>)](https://travis-ci.org/explosion/spaCy)\n[![Current Release Version](https://img.shields.io/github/release/explosion/spacy.svg?style=flat-square&logo=github)](https://github.com/explosion/spaCy/releases)\n[![pypi Version](https://img.shields.io/pypi/v/spacy.svg?style=flat-square&logo=pypi&logoColor=white)](https://pypi.org/project/spacy/)\n[![conda Version](https://img.shields.io/conda/vn/conda-forge/spacy.svg?style=flat-square&logo=conda-forge&logoColor=white)](https://anaconda.org/conda-forge/spacy)\n[![Python wheels](https://img.shields.io/badge/wheels-%E2%9C%93-4c1.svg?longCache=true&style=flat-square&logo=python&logoColor=white)](https://github.com/explosion/wheelwright/releases)\n[![PyPi downloads](https://img.shields.io/pypi/dm/spacy?style=flat-square&logo=pypi&logoColor=white)](https://pypi.org/project/spacy/)\n[![Conda downloads](https://img.shields.io/conda/dn/conda-forge/spacy?style=flat-square&logo=conda-forge&logoColor=white)](https://anaconda.org/conda-forge/spacy)\n[![Model downloads](https://img.shields.io/github/downloads/explosion/spacy-models/total?style=flat-square&label=model+downloads)](https://github.com/explosion/spacy-models/releases)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg?style=flat-square)](https://github.com/ambv/black)\n[![spaCy on Twitter](https://img.shields.io/twitter/follow/spacy_io.svg?style=social&label=Follow)](https://twitter.com/spacy_io)\n\n## \ud83d\udcd6 Documentation\n\n| Documentation   |                                                                |\n| --------------- | -------------------------------------------------------------- |\n| [spaCy 101]     | New to spaCy? Here's everything you need to know!              |\n| [Usage Guides]  | How to use spaCy and its features.                             |\n| [New in v2.2]   | New features, backwards incompatibilities and migration guide. |\n| [API Reference] | The detailed reference for spaCy's API.                        |\n| [Models]        | Download statistical language models for spaCy.                |\n| [Universe]      | Libraries, extensions, demos, books and courses.               |\n| [Changelog]     | Changes and version history.                                   |\n| [Contribute]    | How to contribute to the spaCy project and code base.          |\n\n[spacy 101]: https://spacy.io/usage/spacy-101\n[new in v2.2]: https://spacy.io/usage/v2-2\n[usage guides]: https://spacy.io/usage/\n[api reference]: https://spacy.io/api/\n[models]: https://spacy.io/models\n[universe]: https://spacy.io/universe\n[changelog]: https://spacy.io/usage#changelog\n[contribute]: https://github.com/explosion/spaCy/blob/master/CONTRIBUTING.md\n\n## \ud83d\udcac Where to ask questions\n\nThe spaCy project is maintained by [@honnibal](https://github.com/honnibal) and\n[@ines](https://github.com/ines), along with core contributors\n[@svlandeg](https://github.com/svlandeg) and\n[@adrianeboyd](https://github.com/adrianeboyd). Please understand that we won't\nbe able to provide individual support via email. We also believe that help is\nmuch more valuable if it's shared publicly, so that more people can benefit from\nit.\n\n| Type                     | Platforms                                              |\n| ------------------------ | ------------------------------------------------------ |\n| \ud83d\udea8 **Bug Reports**       | [GitHub Issue Tracker]                                 |\n| \ud83c\udf81 **Feature Requests**  | [GitHub Issue Tracker]                                 |\n| \ud83d\udc69\u200d\ud83d\udcbb **Usage Questions**   | [Stack Overflow] \u00b7 [Gitter Chat] \u00b7 [Reddit User Group] |\n| \ud83d\uddef **General Discussion** | [Gitter Chat] \u00b7 [Reddit User Group]                    |\n\n[github issue tracker]: https://github.com/explosion/spaCy/issues\n[stack overflow]: https://stackoverflow.com/questions/tagged/spacy\n[gitter chat]: https://gitter.im/explosion/spaCy\n[reddit user group]: https://www.reddit.com/r/spacynlp\n\n## Features\n\n- Non-destructive **tokenization**\n- **Named entity** recognition\n- Support for **50+ languages**\n- pretrained [statistical models](https://spacy.io/models) and word vectors\n- State-of-the-art speed\n- Easy **deep learning** integration\n- Part-of-speech tagging\n- Labelled dependency parsing\n- Syntax-driven sentence segmentation\n- Built in **visualizers** for syntax and NER\n- Convenient string-to-hash mapping\n- Export to numpy data arrays\n- Efficient binary serialization\n- Easy **model packaging** and deployment\n- Robust, rigorously evaluated accuracy\n\n\ud83d\udcd6 **For more details, see the\n[facts, figures and benchmarks](https://spacy.io/usage/facts-figures).**\n\n## Install spaCy\n\nFor detailed installation instructions, see the\n[documentation](https://spacy.io/usage).\n\n- **Operating system**: macOS / OS X \u00b7 Linux \u00b7 Windows (Cygwin, MinGW, Visual\n  Studio)\n- **Python version**: Python 2.7, 3.5+ (only 64 bit)\n- **Package managers**: [pip] \u00b7 [conda] (via `conda-forge`)\n\n[pip]: https://pypi.org/project/spacy/\n[conda]: https://anaconda.org/conda-forge/spacy\n\n### pip\n\nUsing pip, spaCy releases are available as source packages and binary wheels (as\nof `v2.0.13`).\n\n```bash\npip install spacy\n```\n\nTo install additional data tables for lemmatization in **spaCy v2.2+** you can\nrun `pip install spacy[lookups]` or install\n[`spacy-lookups-data`](https://github.com/explosion/spacy-lookups-data)\nseparately. The lookups package is needed to create blank models with\nlemmatization data, and to lemmatize in languages that don't yet come with\npretrained models and aren't powered by third-party libraries.\n\nWhen using pip it is generally recommended to install packages in a virtual\nenvironment to avoid modifying system state:\n\n```bash\npython -m venv .env\nsource .env/bin/activate\npip install spacy\n```\n\n### conda\n\nThanks to our great community, we've finally re-added conda support. You can now\ninstall spaCy via `conda-forge`:\n\n```bash\nconda install -c conda-forge spacy\n```\n\nFor the feedstock including the build recipe and configuration, check out\n[this repository](https://github.com/conda-forge/spacy-feedstock). Improvements\nand pull requests to the recipe and setup are always appreciated.\n\n### Updating spaCy\n\nSome updates to spaCy may require downloading new statistical models. If you're\nrunning spaCy v2.0 or higher, you can use the `validate` command to check if\nyour installed models are compatible and if not, print details on how to update\nthem:\n\n```bash\npip install -U spacy\npython -m spacy validate\n```\n\nIf you've trained your own models, keep in mind that your training and runtime\ninputs must match. After updating spaCy, we recommend **retraining your models**\nwith the new version.\n\n\ud83d\udcd6 **For details on upgrading from spaCy 1.x to spaCy 2.x, see the\n[migration guide](https://spacy.io/usage/v2#migrating).**\n\n## Download models\n\nAs of v1.7.0, models for spaCy can be installed as **Python packages**. This\nmeans that they're a component of your application, just like any other module.\nModels can be installed using spaCy's `download` command, or manually by\npointing pip to a path or URL.\n\n| Documentation          |                                                               |\n| ---------------------- | ------------------------------------------------------------- |\n| [Available Models]     | Detailed model descriptions, accuracy figures and benchmarks. |\n| [Models Documentation] | Detailed usage instructions.                                  |\n\n[available models]: https://spacy.io/models\n[models documentation]: https://spacy.io/docs/usage/models\n\n```bash\n# download best-matching version of specific model for your spaCy installation\npython -m spacy download en_core_web_sm\n\n# pip install .tar.gz archive from path or URL\npip install /Users/you/en_core_web_sm-2.2.0.tar.gz\npip install https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-2.2.0/en_core_web_sm-2.2.0.tar.gz\n```\n\n### Loading and using models\n\nTo load a model, use `spacy.load()` with the model name, a shortcut link or a\npath to the model data directory.\n\n```python\nimport spacy\nnlp = spacy.load(\"en_core_web_sm\")\ndoc = nlp(\"This is a sentence.\")\n```\n\nYou can also `import` a model directly via its full name and then call its\n`load()` method with no arguments.\n\n```python\nimport spacy\nimport en_core_web_sm\n\nnlp = en_core_web_sm.load()\ndoc = nlp(\"This is a sentence.\")\n```\n\n\ud83d\udcd6 **For more info and examples, check out the\n[models documentation](https://spacy.io/docs/usage/models).**\n\n## Compile from source\n\nThe other way to install spaCy is to clone its\n[GitHub repository](https://github.com/explosion/spaCy) and build it from\nsource. That is the common way if you want to make changes to the code base.\nYou'll need to make sure that you have a development environment consisting of a\nPython distribution including header files, a compiler,\n[pip](https://pip.pypa.io/en/latest/installing/),\n[virtualenv](https://virtualenv.pypa.io/en/latest/) and\n[git](https://git-scm.com) installed. The compiler part is the trickiest. How to\ndo that depends on your system. See notes on Ubuntu, OS X and Windows for\ndetails.\n\n```bash\n# make sure you are using the latest pip\npython -m pip install -U pip\ngit clone https://github.com/explosion/spaCy\ncd spaCy\n\npython -m venv .env\nsource .env/bin/activate\nexport PYTHONPATH=`pwd`\npip install -r requirements.txt\npython setup.py build_ext --inplace\n```\n\nCompared to regular install via pip, [requirements.txt](requirements.txt)\nadditionally installs developer dependencies such as Cython. For more details\nand instructions, see the documentation on\n[compiling spaCy from source](https://spacy.io/usage#source) and the\n[quickstart widget](https://spacy.io/usage#section-quickstart) to get the right\ncommands for your platform and Python version.\n\n### Ubuntu\n\nInstall system-level dependencies via `apt-get`:\n\n```bash\nsudo apt-get install build-essential python-dev git\n```\n\n### macOS / OS X\n\nInstall a recent version of [XCode](https://developer.apple.com/xcode/),\nincluding the so-called \"Command Line Tools\". macOS and OS X ship with Python\nand git preinstalled.\n\n### Windows\n\nInstall a version of the\n[Visual C++ Build Tools](https://visualstudio.microsoft.com/visual-cpp-build-tools/)\nor [Visual Studio Express](https://visualstudio.microsoft.com/vs/express/) that\nmatches the version that was used to compile your Python interpreter. For\nofficial distributions these are VS 2008 (Python 2.7), VS 2010 (Python 3.4) and\nVS 2015 (Python 3.5).\n\n## Run tests\n\nspaCy comes with an [extensive test suite](spacy/tests). In order to run the\ntests, you'll usually want to clone the repository and build spaCy from source.\nThis will also install the required development dependencies and test utilities\ndefined in the `requirements.txt`.\n\nAlternatively, you can find out where spaCy is installed and run `pytest` on\nthat directory. Don't forget to also install the test utilities via spaCy's\n`requirements.txt`:\n\n```bash\npython -c \"import os; import spacy; print(os.path.dirname(spacy.__file__))\"\npip install -r path/to/requirements.txt\npython -m pytest <spacy-directory>\n```\n\nSee [the documentation](https://spacy.io/usage#tests) for more details and\nexamples.\n"}, {"repo": "/CoinCapDev/CoinCap.io", "language": "HTML", "readme_contents": "# CoinCap.io\n\n## This API will continue to operate as it has, but will be shut down on March 1, 2019. Our new API is: https://docs.coincap.io/\n\n---\n\n## REST URLs\n\n#### /coins  \n- Description: Array of all supported coins\n- URL: http://coincap.io/coins\n- Response: \n    ```JSON\n    [\"300\", \"611\", \"808\", \"888\", \"INPAY\", \"XNG\", \"ARGUS\", \"DBIX\", \"DAR\", \"HMQ\"]\n    ```\n\n#### /map  \n- Description: JSON object of Coin symbols/names and known aliases\n- URL: http://coincap.io/map\n- Response: \n    ```JSON\n    [\n        {\n            \"aliases\": [],\n            \"name\": \"300 Token\",\n            \"symbol\": \"300\"\n        },\n        {\n            \"aliases\": [],\n            \"name\": \"SixEleven\",\n            \"symbol\": \"611\"\n        },\n        {\n            \"aliases\": [],\n            \"name\": \"808Coin\",\n            \"symbol\": \"808\"\n        }\n    ]\n     ```\n\n#### /front \n- Description: Front Page Data of current coin stats\n- URL: http://coincap.io/front\n- Response:\n    ```JSON\n    [\n        {\n            \"cap24hrChange\": -6.05,\n            \"long\": \"Bitcoin\",\n            \"mktcap\": 65173805891.25,\n            \"perc\": -6.05,\n            \"price\": 3934.85,\n            \"shapeshift\": true,\n            \"short\": \"BTC\",\n            \"supply\": 16563225,\n            \"usdVolume\": 2337600000,\n            \"volume\": 2337600000,\n            \"vwapData\": 3997.5639538606733,\n            \"vwapDataBTC\": 3997.5639538606733\n        },\n        {\n            \"cap24hrChange\": -6.59,\n            \"long\": \"Ethereum\",\n            \"mktcap\": 26016428866.32,\n            \"perc\": -6.59,\n            \"price\": 275.02,\n            \"shapeshift\": true,\n            \"short\": \"ETH\",\n            \"supply\": 94598316,\n            \"usdVolume\": 945732000,\n            \"volume\": 945732000,\n            \"vwapData\": 278.03921067242516,\n            \"vwapDataBTC\": 278.03921067242516\n        }\n    ]\n    ```\n\n#### /global \n- Description: Global data\n- URL: http://coincap.io/global\n- Response:\n    ```JSON\n    {\n        \"altCap\": 70056946653.0021,\n        \"bitnodesCount\": 9350,\n        \"btcCap\": 65003614189.66167,\n        \"btcPrice\": 3924.57472440673,\n        \"dom\": 69.48,\n        \"totalCap\": 135060560842.66382,\n        \"volumeAlt\": 578834063.4608318,\n        \"volumeBtc\": 1317521389.0430577,\n        \"volumeTotal\": 1896355452.5038888\n    }\n    ```\n\n#### /page/:coin  \n- Description: must search by symbol ex BTC returns all data on a specific coin\n- URL: http://coincap.io/page/ETC\n    ```JSON\n    {\n        \"altCap\": 70977893975.02808,\n        \"bitnodesCount\": 9350,\n        \"btcCap\": 65149292318.25,\n        \"btcPrice\": 3933.37,\n        \"dom\": 69.49,\n        \"totalCap\": 136127186293.27805,\n        \"volumeAlt\": 579507047.7508223,\n        \"volumeBtc\": 1319701715.2883158,\n        \"volumeTotal\": 1899208763.0391374,\n        \"id\": \"ETC\",\n        \"_id\": \"c2f0fa55-495c-41e2-ad77-c66545b6d584\",\n        \"cap24hrChange\": -2.45,\n        \"display_name\": \"Ethereum Classic\",\n        \"status\": \"available\",\n        \"supply\": 95478079,\n        \"volume\": 106044000,\n        \"vwap_h24\": 14.584250499041465,\n        \"price_btc\": 0.003659301940567121,\n        \"price_eth\": 0.052350773626971485,\n        \"price_eur\": 12.076,\n        \"price_usd\": 14.334776791590517,\n        \"price_ltc\": 0.2325328883760402,\n        \"price_zec\": 0.06845529547566803,\n        \"market_cap\": 1368656950.954846,\n        \"type\": \"cmc\",\n        \"price\": 14.1888\n    }\n    ```\n\n#### /history/:coin \n- Description: Returns all history on a coin\n- URL: http://coincap.io/history/BTC\n- Response: \n    ```javascript\n    {\n        \"market_cap\": [\n            [\n                1504664370000,  // unix time (milliseconds)\n                74300994770     // market cap\n            ],\n            [\n                1504750775000,\n                74594182198\n            ]\n        ],\n        \"price\" : [\n            [\n                1504750775000,\n                4507.45 \n            ],\n            [\n                1504839280000,\n                4599.26\n            ]\n        ],\n        \"volume\": [\n            [\n                1504750775000,  \n                2095800000   \n            ],\n            [\n                1504839280000,\n                1752760000\n            ]\n        ]\n    }\n    ```\n\n#### /history/1day/:coin \n- Description: Returns 1 day of price history for a given coin\n- URL: http://coincap.io/history/1day/BTC\n\n#### /history/7day/:coin \n- Description: Returns 7 days of price history for a given coin\n- URL: http://coincap.io/history/7day/BTC\n\n#### /history/30day/:coin \n- Description: Returns 30 days day of price history for a given coin\n- URL: http://coincap.io/history/30day/BTC\n\n#### /history/90day/:coin \n- Description: Returns 90 days of price history for a given coin\n- URL: http://coincap.io/history/90day/DOGE\n\n#### /history/180day/:coin \n- Description: Returns 180 days of price history for a given coin\n- URL: http://coincap.io/history/180day/BTC\n\n\n#### /history/365day/:coin \n- Description: Returns a years of price history for a given coin\n- URL: http://coincap.io/history/365day/BTC\n\n### Socket API\n    https://coincap.io\n\n\nTo connect to CoinCap WebSockets you must use socket.io-client 1.4.6 or another\nwebsocket client compatiable with that version of Socket.io\n\n\n[Sample code attached](https://github.com/CoinCapDev/CoinCap/blob/master/subscribe.html)\n\n#### Socket Response\n```JSON\n{\n\t\"coin\": \"XMR\",\n\t\"exchange_id\": \"bittrex\",\n\t\"market_id\": \"ETH_XMR\",\n\t\"message\": {\n\t\t\"coin\": \"XMR\",\n\t\t\"msg\": {\n\t\t\t\"cap24hrChange\": -6.96,\n\t\t\t\"long\": \"Monero\",\n\t\t\t\"mktcap\": 1581966162.9998832,\n\t\t\t\"perc\": -6.96,\n\t\t\t\"price\": 113.18142493836066,\n\t\t\t\"shapeshift\": true,\n\t\t\t\"short\": \"XMR\",\n\t\t\t\"supply\": 15074975,\n\t\t\t\"usdVolume\": 46837300,\n\t\t\t\"volume\": 46837300,\n\t\t\t\"vwapData\": 109.52716734604815,\n\t\t\t\"vwapDataBTC\": 109.52716734604815\n\t\t}\n\t},\n\t\"msg\": {\n\t\t\"cap24hrChange\": -6.96,\n\t\t\"long\": \"Monero\",\n\t\t\"mktcap\": 1581966162.9998832,\n\t\t\"perc\": -6.96,\n\t\t\"price\": 113.18142493836066,\n\t\t\"shapeshift\": true,\n\t\t\"short\": \"XMR\",\n\t\t\"supply\": 15074975,\n\t\t\"usdVolume\": 46837300,\n\t\t\"volume\": 46837300,\n\t\t\"vwapData\": 109.52716734604815,\n\t\t\"vwapDataBTC\": 109.52716734604815\n\t}\n}\n```\n\n\n"}, {"repo": "/dotnet/core", "language": "Shell", "readme_contents": "\ufeff# .NET Core Home\n\nThe dotnet/core repository is a good starting point for .NET Core.\n\nThe latest major release is [.NET Core 3.1](release-notes/3.1). The latest patch updates are listed in [.NET Core release notes](release-notes/README.md).\n\n## Download the latest .NET Core SDK\n\n* [.NET Core 3.1 SDK](release-notes/3.1/README.md)\n\n## .NET Core Releases and Daily Builds\n\n* [.NET Core released builds](release-notes/README.md)\n* [.NET Core daily builds](daily-builds.md)\n\n## Learn about .NET Core\n\n* [Learn about .NET Core](https://docs.microsoft.com/dotnet/core)\n* [.NET Core Roadmap](https://github.com/dotnet/core/blob/master/roadmap.md)\n* [Learn about the .NET platform](https://docs.microsoft.com/dotnet/standard/)\n* [.NET Core release notes](https://github.com/dotnet/core/blob/master/release-notes/README.md)\n* [.NET Core Announcements](https://github.com/dotnet/announcements)\n* [.NET Core blog](https://blogs.msdn.microsoft.com/dotnet/tag/net-core/)\n\n## Getting help\n\n* [File a .NET Core issue](https://github.com/dotnet/core/issues)\n* [File an ASP.NET Core issue](https://github.com/aspnet/home/issues)\n* [File an issue for other components](Documentation/core-repos.md)\n* [Ask on Stack Overflow](https://stackoverflow.com/questions/tagged/.net-core)\n* [Contact Microsoft Support](https://support.microsoft.com/contactus/)\n* [VS Developer Community Portal](https://developercommunity.visualstudio.com/) for \"full\" .NET Framework feedback (or via [Report a Problem](https://aka.ms/vs-rap) tool)\n\n## How to Engage, Contribute and Provide Feedback\n\nThe .NET Core team encourages [contributions](https://github.com/dotnet/coreclr/blob/master/Documentation/project-docs/contributing.md), both issues and PRs. The first step is finding the [.NET Core repository](Documentation/core-repos.md) that you want to contribute to.\n\n### Community\n\nThis project uses the [.NET Foundation Code of Conduct](https://dotnetfoundation.org/code-of-conduct) to define expected conduct in our community.\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting a project maintainer at conduct@dotnetfoundation.org.\n\n## .NET Foundation\n\nThe .NET Core platform is part of the [.NET Foundation](http://www.dotnetfoundation.org).\n\n## Licenses\n\n.NET Core repos typically use either the [MIT](LICENSE.TXT) or\n[Apache 2](http://www.apache.org/licenses/LICENSE-2.0) licenses for code.\nSome projects license documentation and other forms of content under\n[Creative Commons Attribution 4.0](http://creativecommons.org/licenses/by/4.0/).\n\nSee specific [repos](Documentation/core-repos.md) to understand the license used.\n"}, {"repo": "/NVIDIA-developer-blog/code-samples", "language": "HTML", "readme_contents": "Parallel Forall Code Samples\n============================\n\nThis repository contains CUDA, OpenACC, Python, MATLAB, and other source code examples from the NVIDIA [Parallel Forall Blog](http://developer.nvidia.com/parallel-forall).\n\nLicense\n-------\n\nThese examples are released under the BSD open source license.  Refer to license.txt in this directory for full details.\n\nList of Code Samples\n--------------------\nposts/002-openacc-example: An example of [OpenACC Directives programming].\n"}, {"repo": "/lancopku/pkuseg-python", "language": "Python", "readme_contents": "# pkuseg\uff1a\u4e00\u4e2a\u591a\u9886\u57df\u4e2d\u6587\u5206\u8bcd\u5de5\u5177\u5305 [**(English Version)**](readme/readme_english.md)\r\n\r\npkuseg \u662f\u57fa\u4e8e\u8bba\u6587[[Luo et. al, 2019](#\u8bba\u6587\u5f15\u7528)]\u7684\u5de5\u5177\u5305\u3002\u5176\u7b80\u5355\u6613\u7528\uff0c\u652f\u6301\u7ec6\u5206\u9886\u57df\u5206\u8bcd\uff0c\u6709\u6548\u63d0\u5347\u4e86\u5206\u8bcd\u51c6\u786e\u5ea6\u3002\r\n\r\n\r\n\r\n## \u76ee\u5f55\r\n\r\n* [\u4e3b\u8981\u4eae\u70b9](#\u4e3b\u8981\u4eae\u70b9)\r\n* [\u7f16\u8bd1\u548c\u5b89\u88c5](#\u7f16\u8bd1\u548c\u5b89\u88c5)\r\n* [\u5404\u7c7b\u5206\u8bcd\u5de5\u5177\u5305\u7684\u6027\u80fd\u5bf9\u6bd4](#\u5404\u7c7b\u5206\u8bcd\u5de5\u5177\u5305\u7684\u6027\u80fd\u5bf9\u6bd4)\r\n* [\u4f7f\u7528\u65b9\u5f0f](#\u4f7f\u7528\u65b9\u5f0f)\r\n* [\u8bba\u6587\u5f15\u7528](#\u8bba\u6587\u5f15\u7528)\r\n* [\u4f5c\u8005](#\u4f5c\u8005)\r\n* [\u5e38\u89c1\u95ee\u9898\u53ca\u89e3\u7b54](#\u5e38\u89c1\u95ee\u9898\u53ca\u89e3\u7b54)\r\n\r\n\r\n\r\n## \u4e3b\u8981\u4eae\u70b9\r\n\r\npkuseg\u5177\u6709\u5982\u4e0b\u51e0\u4e2a\u7279\u70b9\uff1a\r\n\r\n1. \u591a\u9886\u57df\u5206\u8bcd\u3002\u4e0d\u540c\u4e8e\u4ee5\u5f80\u7684\u901a\u7528\u4e2d\u6587\u5206\u8bcd\u5de5\u5177\uff0c\u6b64\u5de5\u5177\u5305\u540c\u65f6\u81f4\u529b\u4e8e\u4e3a\u4e0d\u540c\u9886\u57df\u7684\u6570\u636e\u63d0\u4f9b\u4e2a\u6027\u5316\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u3002\u6839\u636e\u5f85\u5206\u8bcd\u6587\u672c\u7684\u9886\u57df\u7279\u70b9\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u7531\u5730\u9009\u62e9\u4e0d\u540c\u7684\u6a21\u578b\u3002 \u6211\u4eec\u76ee\u524d\u652f\u6301\u4e86\u65b0\u95fb\u9886\u57df\uff0c\u7f51\u7edc\u9886\u57df\uff0c\u533b\u836f\u9886\u57df\uff0c\u65c5\u6e38\u9886\u57df\uff0c\u4ee5\u53ca\u6df7\u5408\u9886\u57df\u7684\u5206\u8bcd\u9884\u8bad\u7ec3\u6a21\u578b\u3002\u5728\u4f7f\u7528\u4e2d\uff0c\u5982\u679c\u7528\u6237\u660e\u786e\u5f85\u5206\u8bcd\u7684\u9886\u57df\uff0c\u53ef\u52a0\u8f7d\u5bf9\u5e94\u7684\u6a21\u578b\u8fdb\u884c\u5206\u8bcd\u3002\u5982\u679c\u7528\u6237\u65e0\u6cd5\u786e\u5b9a\u5177\u4f53\u9886\u57df\uff0c\u63a8\u8350\u4f7f\u7528\u5728\u6df7\u5408\u9886\u57df\u4e0a\u8bad\u7ec3\u7684\u901a\u7528\u6a21\u578b\u3002\u5404\u9886\u57df\u5206\u8bcd\u6837\u4f8b\u53ef\u53c2\u8003 [**example.txt**](https://github.com/lancopku/pkuseg-python/blob/master/example.txt)\u3002\r\n2. \u66f4\u9ad8\u7684\u5206\u8bcd\u51c6\u786e\u7387\u3002\u76f8\u6bd4\u4e8e\u5176\u4ed6\u7684\u5206\u8bcd\u5de5\u5177\u5305\uff0c\u5f53\u4f7f\u7528\u76f8\u540c\u7684\u8bad\u7ec3\u6570\u636e\u548c\u6d4b\u8bd5\u6570\u636e\uff0cpkuseg\u53ef\u4ee5\u53d6\u5f97\u66f4\u9ad8\u7684\u5206\u8bcd\u51c6\u786e\u7387\u3002\r\n3. \u652f\u6301\u7528\u6237\u81ea\u8bad\u7ec3\u6a21\u578b\u3002\u652f\u6301\u7528\u6237\u4f7f\u7528\u5168\u65b0\u7684\u6807\u6ce8\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\u3002\r\n4. \u652f\u6301\u8bcd\u6027\u6807\u6ce8\u3002\r\n\r\n\r\n## \u7f16\u8bd1\u548c\u5b89\u88c5\r\n\r\n- \u76ee\u524d**\u4ec5\u652f\u6301python3**\r\n- **\u4e3a\u4e86\u83b7\u5f97\u597d\u7684\u6548\u679c\u548c\u901f\u5ea6\uff0c\u5f3a\u70c8\u5efa\u8bae\u5927\u5bb6\u901a\u8fc7pip install\u66f4\u65b0\u5230\u76ee\u524d\u7684\u6700\u65b0\u7248\u672c**\r\n\r\n1. \u901a\u8fc7PyPI\u5b89\u88c5(\u81ea\u5e26\u6a21\u578b\u6587\u4ef6)\uff1a\r\n\t```\r\n\tpip3 install pkuseg\r\n\t\u4e4b\u540e\u901a\u8fc7import pkuseg\u6765\u5f15\u7528\r\n\t```\r\n   **\u5efa\u8bae\u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c**\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u5f00\u7bb1\u4f53\u9a8c\uff1a\r\n   \t```\r\n\tpip3 install -U pkuseg\r\n\t```\r\n2. \u5982\u679cPyPI\u5b98\u65b9\u6e90\u4e0b\u8f7d\u901f\u5ea6\u4e0d\u7406\u60f3\uff0c\u5efa\u8bae\u4f7f\u7528\u955c\u50cf\u6e90\uff0c\u6bd4\u5982\uff1a   \r\n   \u521d\u6b21\u5b89\u88c5\uff1a\r\n\t```\r\n\tpip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple pkuseg\r\n\t```\r\n   \u66f4\u65b0\uff1a\r\n\t```\r\n\tpip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple -U pkuseg\r\n\t```\r\n   \r\n3. \u5982\u679c\u4e0d\u4f7f\u7528pip\u5b89\u88c5\u65b9\u5f0f\uff0c\u9009\u62e9\u4eceGitHub\u4e0b\u8f7d\uff0c\u53ef\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\uff1a\r\n\t```\r\n\tpython setup.py build_ext -i\r\n\t```\r\n\t\r\n   GitHub\u7684\u4ee3\u7801\u5e76\u4e0d\u5305\u62ec\u9884\u8bad\u7ec3\u6a21\u578b\uff0c\u56e0\u6b64\u9700\u8981\u7528\u6237\u81ea\u884c\u4e0b\u8f7d\u6216\u8bad\u7ec3\u6a21\u578b\uff0c\u9884\u8bad\u7ec3\u6a21\u578b\u53ef\u8be6\u89c1[release](https://github.com/lancopku/pkuseg-python/releases)\u3002\u4f7f\u7528\u65f6\u9700\u8bbe\u5b9a\"model_name\"\u4e3a\u6a21\u578b\u6587\u4ef6\u3002\r\n\r\n\u6ce8\u610f\uff1a**\u5b89\u88c5\u65b9\u5f0f1\u548c2\u76ee\u524d\u4ec5\u652f\u6301linux(ubuntu)\u3001mac\u3001windows 64 \u4f4d\u7684python3\u7248\u672c**\u3002\u5982\u679c\u975e\u4ee5\u4e0a\u7cfb\u7edf\uff0c\u8bf7\u4f7f\u7528\u5b89\u88c5\u65b9\u5f0f3\u8fdb\u884c\u672c\u5730\u7f16\u8bd1\u5b89\u88c5\u3002\r\n\t\r\n\r\n## \u5404\u7c7b\u5206\u8bcd\u5de5\u5177\u5305\u7684\u6027\u80fd\u5bf9\u6bd4\r\n\r\n\u6211\u4eec\u9009\u62e9jieba\u3001THULAC\u7b49\u56fd\u5185\u4ee3\u8868\u5206\u8bcd\u5de5\u5177\u5305\u4e0epkuseg\u505a\u6027\u80fd\u6bd4\u8f83\uff0c\u8be6\u7ec6\u8bbe\u7f6e\u53ef\u53c2\u8003[\u5b9e\u9a8c\u73af\u5883](readme/environment.md)\u3002\r\n\r\n\r\n\r\n#### \u7ec6\u9886\u57df\u8bad\u7ec3\u53ca\u6d4b\u8bd5\u7ed3\u679c\r\n\r\n\u4ee5\u4e0b\u662f\u5728\u4e0d\u540c\u6570\u636e\u96c6\u4e0a\u7684\u5bf9\u6bd4\u7ed3\u679c\uff1a\r\n\r\n| MSRA   | Precision | Recall |   F-score |\r\n| :----- | --------: | -----: | --------: |\r\n| jieba  |     87.01 |  89.88 |     88.42 |\r\n| THULAC |     95.60 |  95.91 |     95.71 |\r\n| pkuseg |     96.94 |  96.81 | **96.88** |\r\n\r\n\r\n| WEIBO  | Precision | Recall |   F-score |\r\n| :----- | --------: | -----: | --------: |\r\n| jieba  |     87.79 |  87.54 |     87.66 |\r\n| THULAC |     93.40 |  92.40 |     92.87 |\r\n| pkuseg |     93.78 |  94.65 | **94.21** |\r\n\r\n\r\n\r\n\r\n#### \u9ed8\u8ba4\u6a21\u578b\u5728\u4e0d\u540c\u9886\u57df\u7684\u6d4b\u8bd5\u6548\u679c\r\n\r\n\u8003\u8651\u5230\u5f88\u591a\u7528\u6237\u5728\u5c1d\u8bd5\u5206\u8bcd\u5de5\u5177\u7684\u65f6\u5019\uff0c\u5927\u591a\u6570\u65f6\u5019\u4f1a\u4f7f\u7528\u5de5\u5177\u5305\u81ea\u5e26\u6a21\u578b\u6d4b\u8bd5\u3002\u4e3a\u4e86\u76f4\u63a5\u5bf9\u6bd4\u201c\u521d\u59cb\u201d\u6027\u80fd\uff0c\u6211\u4eec\u4e5f\u6bd4\u8f83\u4e86\u5404\u4e2a\u5de5\u5177\u5305\u7684\u9ed8\u8ba4\u6a21\u578b\u5728\u4e0d\u540c\u9886\u57df\u7684\u6d4b\u8bd5\u6548\u679c\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u6837\u7684\u6bd4\u8f83\u53ea\u662f\u4e3a\u4e86\u8bf4\u660e\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7684\u6548\u679c\uff0c\u5e76\u4e0d\u4e00\u5b9a\u662f\u516c\u5e73\u7684\u3002\r\n\r\n| Default | MSRA  | CTB8  | PKU   | WEIBO | All Average |\r\n| ------- | :---: | :---: | :---: | :---: | :---------: |\r\n| jieba  | 81.45 | 79.58 | 81.83 | 83.56 | 81.61       |\r\n| THULAC |\t85.55 | 87.84 | 92.29 | 86.65 | 88.08 |\r\n| pkuseg | 87.29 | 91.77 | 92.68 | 93.43 | **91.29**   |\r\n\r\n\u5176\u4e2d\uff0c`All Average`\u663e\u793a\u7684\u662f\u5728\u6240\u6709\u6d4b\u8bd5\u96c6\u4e0aF-score\u7684\u5e73\u5747\u3002\r\n\r\n\u66f4\u591a\u8be6\u7ec6\u6bd4\u8f83\u53ef\u53c2\u89c1[\u548c\u73b0\u6709\u5de5\u5177\u5305\u7684\u6bd4\u8f83](readme/comparison.md)\u3002\r\n\r\n## \u4f7f\u7528\u65b9\u5f0f\r\n\r\n#### \u4ee3\u7801\u793a\u4f8b\r\n\r\n\u4ee5\u4e0b\u4ee3\u7801\u793a\u4f8b\u9002\u7528\u4e8epython\u4ea4\u4e92\u5f0f\u73af\u5883\u3002\r\n\r\n\u4ee3\u7801\u793a\u4f8b1\uff1a\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u8fdb\u884c\u5206\u8bcd\uff08**\u5982\u679c\u7528\u6237\u65e0\u6cd5\u786e\u5b9a\u5206\u8bcd\u9886\u57df\uff0c\u63a8\u8350\u4f7f\u7528\u9ed8\u8ba4\u6a21\u578b\u5206\u8bcd**\uff09\r\n```python3\r\nimport pkuseg\r\n\r\nseg = pkuseg.pkuseg()           # \u4ee5\u9ed8\u8ba4\u914d\u7f6e\u52a0\u8f7d\u6a21\u578b\r\ntext = seg.cut('\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8')  # \u8fdb\u884c\u5206\u8bcd\r\nprint(text)\r\n```\r\n\r\n\u4ee3\u7801\u793a\u4f8b2\uff1a\u7ec6\u9886\u57df\u5206\u8bcd\uff08**\u5982\u679c\u7528\u6237\u660e\u786e\u5206\u8bcd\u9886\u57df\uff0c\u63a8\u8350\u4f7f\u7528\u7ec6\u9886\u57df\u6a21\u578b\u5206\u8bcd**\uff09\r\n```python3\r\nimport pkuseg\r\n\r\nseg = pkuseg.pkuseg(model_name='medicine')  # \u7a0b\u5e8f\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u6240\u5bf9\u5e94\u7684\u7ec6\u9886\u57df\u6a21\u578b\r\ntext = seg.cut('\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8')              # \u8fdb\u884c\u5206\u8bcd\r\nprint(text)\r\n```\r\n\r\n\u4ee3\u7801\u793a\u4f8b3\uff1a\u5206\u8bcd\u540c\u65f6\u8fdb\u884c\u8bcd\u6027\u6807\u6ce8\uff0c\u5404\u8bcd\u6027\u6807\u7b7e\u7684\u8be6\u7ec6\u542b\u4e49\u53ef\u53c2\u8003 [tags.txt](https://github.com/lancopku/pkuseg-python/blob/master/tags.txt)\r\n```python3\r\nimport pkuseg\r\n\r\nseg = pkuseg.pkuseg(postag=True)  # \u5f00\u542f\u8bcd\u6027\u6807\u6ce8\u529f\u80fd\r\ntext = seg.cut('\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8')    # \u8fdb\u884c\u5206\u8bcd\u548c\u8bcd\u6027\u6807\u6ce8\r\nprint(text)\r\n```\r\n\r\n\r\n\u4ee3\u7801\u793a\u4f8b4\uff1a\u5bf9\u6587\u4ef6\u5206\u8bcd\r\n```python3\r\nimport pkuseg\r\n\r\n# \u5bf9input.txt\u7684\u6587\u4ef6\u5206\u8bcd\u8f93\u51fa\u5230output.txt\u4e2d\r\n# \u5f0020\u4e2a\u8fdb\u7a0b\r\npkuseg.test('input.txt', 'output.txt', nthread=20)     \r\n```\r\n\r\n\u5176\u4ed6\u4f7f\u7528\u793a\u4f8b\u53ef\u53c2\u89c1[\u8be6\u7ec6\u4ee3\u7801\u793a\u4f8b](readme/interface.md)\u3002\r\n\r\n\r\n\r\n#### \u53c2\u6570\u8bf4\u660e\r\n\r\n\u6a21\u578b\u914d\u7f6e\r\n```\r\npkuseg.pkuseg(model_name = \"default\", user_dict = \"default\", postag = False)\r\n\tmodel_name\t\t\u6a21\u578b\u8def\u5f84\u3002\r\n\t\t\t        \"default\"\uff0c\u9ed8\u8ba4\u53c2\u6570\uff0c\u8868\u793a\u4f7f\u7528\u6211\u4eec\u9884\u8bad\u7ec3\u597d\u7684\u6df7\u5408\u9886\u57df\u6a21\u578b(\u4ec5\u5bf9pip\u4e0b\u8f7d\u7684\u7528\u6237)\u3002\r\n\t\t\t\t\"news\", \u4f7f\u7528\u65b0\u95fb\u9886\u57df\u6a21\u578b\u3002\r\n\t\t\t\t\"web\", \u4f7f\u7528\u7f51\u7edc\u9886\u57df\u6a21\u578b\u3002\r\n\t\t\t\t\"medicine\", \u4f7f\u7528\u533b\u836f\u9886\u57df\u6a21\u578b\u3002\r\n\t\t\t\t\"tourism\", \u4f7f\u7528\u65c5\u6e38\u9886\u57df\u6a21\u578b\u3002\r\n\t\t\t        model_path, \u4ece\u7528\u6237\u6307\u5b9a\u8def\u5f84\u52a0\u8f7d\u6a21\u578b\u3002\r\n\tuser_dict\t\t\u8bbe\u7f6e\u7528\u6237\u8bcd\u5178\u3002\r\n\t\t\t\t\"default\", \u9ed8\u8ba4\u53c2\u6570\uff0c\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u8bcd\u5178\u3002\r\n\t\t\t\tNone, \u4e0d\u4f7f\u7528\u8bcd\u5178\u3002\r\n\t\t\t\tdict_path, \u5728\u4f7f\u7528\u9ed8\u8ba4\u8bcd\u5178\u7684\u540c\u65f6\u4f1a\u989d\u5916\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178\uff0c\u53ef\u4ee5\u586b\u81ea\u5df1\u7684\u7528\u6237\u8bcd\u5178\u7684\u8def\u5f84\uff0c\u8bcd\u5178\u683c\u5f0f\u4e3a\u4e00\u884c\u4e00\u4e2a\u8bcd\uff08\u5982\u679c\u9009\u62e9\u8fdb\u884c\u8bcd\u6027\u6807\u6ce8\u5e76\u4e14\u5df2\u77e5\u8be5\u8bcd\u7684\u8bcd\u6027\uff0c\u5219\u5728\u8be5\u884c\u5199\u4e0b\u8bcd\u548c\u8bcd\u6027\uff0c\u4e2d\u95f4\u7528tab\u5b57\u7b26\u9694\u5f00\uff09\u3002\r\n\tpostag\t\t        \u662f\u5426\u8fdb\u884c\u8bcd\u6027\u5206\u6790\u3002\r\n\t\t\t\tFalse, \u9ed8\u8ba4\u53c2\u6570\uff0c\u53ea\u8fdb\u884c\u5206\u8bcd\uff0c\u4e0d\u8fdb\u884c\u8bcd\u6027\u6807\u6ce8\u3002\r\n\t\t\t\tTrue, \u4f1a\u5728\u5206\u8bcd\u7684\u540c\u65f6\u8fdb\u884c\u8bcd\u6027\u6807\u6ce8\u3002\r\n```\r\n\r\n\u5bf9\u6587\u4ef6\u8fdb\u884c\u5206\u8bcd\r\n```\r\npkuseg.test(readFile, outputFile, model_name = \"default\", user_dict = \"default\", postag = False, nthread = 10)\r\n\treadFile\t\t\u8f93\u5165\u6587\u4ef6\u8def\u5f84\u3002\r\n\toutputFile\t\t\u8f93\u51fa\u6587\u4ef6\u8def\u5f84\u3002\r\n\tmodel_name\t\t\u6a21\u578b\u8def\u5f84\u3002\u540cpkuseg.pkuseg\r\n\tuser_dict\t\t\u8bbe\u7f6e\u7528\u6237\u8bcd\u5178\u3002\u540cpkuseg.pkuseg\r\n\tpostag\t\t\t\u8bbe\u7f6e\u662f\u5426\u5f00\u542f\u8bcd\u6027\u5206\u6790\u529f\u80fd\u3002\u540cpkuseg.pkuseg\r\n\tnthread\t\t\t\u6d4b\u8bd5\u65f6\u5f00\u7684\u8fdb\u7a0b\u6570\u3002\r\n```\r\n\r\n\u6a21\u578b\u8bad\u7ec3\r\n```\r\npkuseg.train(trainFile, testFile, savedir, train_iter = 20, init_model = None)\r\n\ttrainFile\t\t\u8bad\u7ec3\u6587\u4ef6\u8def\u5f84\u3002\r\n\ttestFile\t\t\u6d4b\u8bd5\u6587\u4ef6\u8def\u5f84\u3002\r\n\tsavedir\t\t\t\u8bad\u7ec3\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84\u3002\r\n\ttrain_iter\t\t\u8bad\u7ec3\u8f6e\u6570\u3002\r\n\tinit_model\t\t\u521d\u59cb\u5316\u6a21\u578b\uff0c\u9ed8\u8ba4\u4e3aNone\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u521d\u59cb\u5316\uff0c\u7528\u6237\u53ef\u4ee5\u586b\u81ea\u5df1\u60f3\u8981\u521d\u59cb\u5316\u7684\u6a21\u578b\u7684\u8def\u5f84\u5982init_model='./models/'\u3002\r\n```\r\n\r\n\r\n\r\n#### \u591a\u8fdb\u7a0b\u5206\u8bcd\r\n\r\n\u5f53\u5c06\u4ee5\u4e0a\u4ee3\u7801\u793a\u4f8b\u7f6e\u4e8e\u6587\u4ef6\u4e2d\u8fd0\u884c\u65f6\uff0c\u5982\u6d89\u53ca\u591a\u8fdb\u7a0b\u529f\u80fd\uff0c\u8bf7\u52a1\u5fc5\u4f7f\u7528`if __name__ == '__main__'`\u4fdd\u62a4\u5168\u5c40\u8bed\u53e5\uff0c\u8be6\u89c1[\u591a\u8fdb\u7a0b\u5206\u8bcd](readme/multiprocess.md)\u3002\r\n\r\n\r\n\r\n## \u9884\u8bad\u7ec3\u6a21\u578b\r\n\r\n\u4ecepip\u5b89\u88c5\u7684\u7528\u6237\u5728\u4f7f\u7528\u7ec6\u9886\u57df\u5206\u8bcd\u529f\u80fd\u65f6\uff0c\u53ea\u9700\u8981\u8bbe\u7f6emodel_name\u5b57\u6bb5\u4e3a\u5bf9\u5e94\u7684\u9886\u57df\u5373\u53ef\uff0c\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u5bf9\u5e94\u7684\u7ec6\u9886\u57df\u6a21\u578b\u3002\r\n\r\n\u4ecegithub\u4e0b\u8f7d\u7684\u7528\u6237\u5219\u9700\u8981\u81ea\u5df1\u4e0b\u8f7d\u5bf9\u5e94\u7684\u9884\u8bad\u7ec3\u6a21\u578b\uff0c\u5e76\u8bbe\u7f6emodel_name\u5b57\u6bb5\u4e3a\u9884\u8bad\u7ec3\u6a21\u578b\u8def\u5f84\u3002\u9884\u8bad\u7ec3\u6a21\u578b\u53ef\u4ee5\u5728[release](https://github.com/lancopku/pkuseg-python/releases)\u90e8\u5206\u4e0b\u8f7d\u3002\u4ee5\u4e0b\u662f\u5bf9\u9884\u8bad\u7ec3\u6a21\u578b\u7684\u8bf4\u660e\uff1a\r\n\r\n- **news**: \u5728MSRA\uff08\u65b0\u95fb\u8bed\u6599\uff09\u4e0a\u8bad\u7ec3\u7684\u6a21\u578b\u3002\r\n\r\n- **web**: \u5728\u5fae\u535a\uff08\u7f51\u7edc\u6587\u672c\u8bed\u6599\uff09\u4e0a\u8bad\u7ec3\u7684\u6a21\u578b\u3002\r\n\r\n- **medicine**: \u5728\u533b\u836f\u9886\u57df\u4e0a\u8bad\u7ec3\u7684\u6a21\u578b\u3002\r\n\r\n- **tourism**: \u5728\u65c5\u6e38\u9886\u57df\u4e0a\u8bad\u7ec3\u7684\u6a21\u578b\u3002\r\n\r\n- **mixed**: \u6df7\u5408\u6570\u636e\u96c6\u8bad\u7ec3\u7684\u901a\u7528\u6a21\u578b\u3002\u968fpip\u5305\u9644\u5e26\u7684\u662f\u6b64\u6a21\u578b\u3002\r\n\r\n\r\n\r\n\u6b22\u8fce\u66f4\u591a\u7528\u6237\u53ef\u4ee5\u5206\u4eab\u81ea\u5df1\u8bad\u7ec3\u597d\u7684\u7ec6\u5206\u9886\u57df\u6a21\u578b\u3002\r\n\r\n\r\n\r\n## \u7248\u672c\u5386\u53f2\r\n\r\n\u8be6\u89c1[\u7248\u672c\u5386\u53f2](readme/history.md)\u3002\r\n\r\n\r\n## \u5f00\u6e90\u534f\u8bae\r\n1. \u672c\u4ee3\u7801\u91c7\u7528MIT\u8bb8\u53ef\u8bc1\u3002\r\n2. \u6b22\u8fce\u5bf9\u8be5\u5de5\u5177\u5305\u63d0\u51fa\u4efb\u4f55\u5b9d\u8d35\u610f\u89c1\u548c\u5efa\u8bae\uff0c\u8bf7\u53d1\u90ae\u4ef6\u81f3jingjingxu@pku.edu.cn\u3002\r\n\r\n\r\n\r\n## \u8bba\u6587\u5f15\u7528\r\n\r\n\u8be5\u4ee3\u7801\u5305\u4e3b\u8981\u57fa\u4e8e\u4ee5\u4e0b\u79d1\u7814\u8bba\u6587\uff0c\u5982\u4f7f\u7528\u4e86\u672c\u5de5\u5177\uff0c\u8bf7\u5f15\u7528\u4ee5\u4e0b\u8bba\u6587\uff1a\r\n* Ruixuan Luo, Jingjing Xu, Yi Zhang, Xuancheng Ren, Xu Sun. [PKUSEG: A Toolkit for Multi-Domain Chinese Word Segmentation](https://arxiv.org/abs/1906.11455). Arxiv. 2019.\r\n\r\n```\r\n\r\n@article{pkuseg,\r\n  author = {Luo, Ruixuan and Xu, Jingjing and Zhang, Yi and Ren, Xuancheng and Sun, Xu},\r\n  journal = {CoRR},\r\n  title = {PKUSEG: A Toolkit for Multi-Domain Chinese Word Segmentation.},\r\n  url = {https://arxiv.org/abs/1906.11455},\r\n  volume = {abs/1906.11455},\r\n  year = 2019\r\n}\r\n```\r\n\r\n## \u5176\u4ed6\u76f8\u5173\u8bba\u6587\r\n\r\n* Xu Sun, Houfeng Wang, Wenjie Li. Fast Online Training with Frequency-Adaptive Learning Rates for Chinese Word Segmentation and New Word Detection. ACL. 2012.\r\n* Jingjing Xu and Xu Sun. Dependency-based gated recursive neural network for chinese word segmentation. ACL. 2016.\r\n* Jingjing Xu and Xu Sun. Transfer learning for low-resource chinese word segmentation with a novel neural network. NLPCC. 2017.\r\n\r\n## \u5e38\u89c1\u95ee\u9898\u53ca\u89e3\u7b54\r\n\r\n\r\n1. [\u4e3a\u4ec0\u4e48\u8981\u53d1\u5e03pkuseg\uff1f](https://github.com/lancopku/pkuseg-python/wiki/FAQ#1-\u4e3a\u4ec0\u4e48\u8981\u53d1\u5e03pkuseg)\r\n2. [pkuseg\u4f7f\u7528\u4e86\u54ea\u4e9b\u6280\u672f\uff1f](https://github.com/lancopku/pkuseg-python/wiki/FAQ#2-pkuseg\u4f7f\u7528\u4e86\u54ea\u4e9b\u6280\u672f)\r\n3. [\u65e0\u6cd5\u4f7f\u7528\u591a\u8fdb\u7a0b\u5206\u8bcd\u548c\u8bad\u7ec3\u529f\u80fd\uff0c\u63d0\u793aRuntimeError\u548cBrokenPipeError\u3002](https://github.com/lancopku/pkuseg-python/wiki/FAQ#3-\u65e0\u6cd5\u4f7f\u7528\u591a\u8fdb\u7a0b\u5206\u8bcd\u548c\u8bad\u7ec3\u529f\u80fd\u63d0\u793aruntimeerror\u548cbrokenpipeerror)\r\n4. [\u662f\u5982\u4f55\u8ddf\u5176\u5b83\u5de5\u5177\u5305\u5728\u7ec6\u9886\u57df\u6570\u636e\u4e0a\u8fdb\u884c\u6bd4\u8f83\u7684\uff1f](https://github.com/lancopku/pkuseg-python/wiki/FAQ#4-\u662f\u5982\u4f55\u8ddf\u5176\u5b83\u5de5\u5177\u5305\u5728\u7ec6\u9886\u57df\u6570\u636e\u4e0a\u8fdb\u884c\u6bd4\u8f83\u7684)\r\n5. [\u5728\u9ed1\u76d2\u6d4b\u8bd5\u96c6\u4e0a\u8fdb\u884c\u6bd4\u8f83\u7684\u8bdd\uff0c\u6548\u679c\u5982\u4f55\uff1f](https://github.com/lancopku/pkuseg-python/wiki/FAQ#5-\u5728\u9ed1\u76d2\u6d4b\u8bd5\u96c6\u4e0a\u8fdb\u884c\u6bd4\u8f83\u7684\u8bdd\u6548\u679c\u5982\u4f55)\r\n6. [\u5982\u679c\u6211\u4e0d\u4e86\u89e3\u5f85\u5206\u8bcd\u8bed\u6599\u7684\u6240\u5c5e\u9886\u57df\u5462\uff1f](https://github.com/lancopku/pkuseg-python/wiki/FAQ#6-\u5982\u679c\u6211\u4e0d\u4e86\u89e3\u5f85\u5206\u8bcd\u8bed\u6599\u7684\u6240\u5c5e\u9886\u57df\u5462)\r\n7. [\u5982\u4f55\u770b\u5f85\u5728\u4e00\u4e9b\u7279\u5b9a\u6837\u4f8b\u4e0a\u7684\u5206\u8bcd\u7ed3\u679c\uff1f](https://github.com/lancopku/pkuseg-python/wiki/FAQ#7-\u5982\u4f55\u770b\u5f85\u5728\u4e00\u4e9b\u7279\u5b9a\u6837\u4f8b\u4e0a\u7684\u5206\u8bcd\u7ed3\u679c)\r\n8. [\u5173\u4e8e\u8fd0\u884c\u901f\u5ea6\u95ee\u9898\uff1f](https://github.com/lancopku/pkuseg-python/wiki/FAQ#8-\u5173\u4e8e\u8fd0\u884c\u901f\u5ea6\u95ee\u9898)\r\n9. [\u5173\u4e8e\u591a\u8fdb\u7a0b\u901f\u5ea6\u95ee\u9898\uff1f](https://github.com/lancopku/pkuseg-python/wiki/FAQ#9-\u5173\u4e8e\u591a\u8fdb\u7a0b\u901f\u5ea6\u95ee\u9898)\r\n\r\n\r\n## \u81f4\u8c22\r\n\r\n\u611f\u8c22\u4fde\u58eb\u6c76\u6559\u6388\uff08\u5317\u4eac\u5927\u5b66\u8ba1\u7b97\u8bed\u8a00\u6240\uff09\u4e0e\u90b1\u7acb\u5764\u535a\u58eb\u63d0\u4f9b\u7684\u8bad\u7ec3\u6570\u636e\u96c6\uff01\r\n\r\n## \u4f5c\u8005\r\n\r\nRuixuan Luo \uff08\u7f57\u777f\u8f69\uff09,  Jingjing Xu\uff08\u8bb8\u6676\u6676\uff09, Xuancheng Ren\uff08\u4efb\u5ba3\u4e1e\uff09, Yi Zhang\uff08\u5f20\u827a\uff09, Bingzhen Wei\uff08\u4f4d\u51b0\u9547\uff09\uff0c Xu Sun \uff08\u5b59\u6829\uff09  \r\n\r\n\u5317\u4eac\u5927\u5b66 [\u8bed\u8a00\u8ba1\u7b97\u4e0e\u673a\u5668\u5b66\u4e60\u7814\u7a76\u7ec4](http://lanco.pku.edu.cn/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}, {"repo": "/arogozhnikov/python3_with_pleasure", "language": null, "readme_contents": "# Migrating to Python 3 with pleasure\n## A short guide on features of Python 3 for data scientists\n\nPython became a mainstream language for machine learning and other scientific fields that heavily operate with data;\nit boasts various deep learning frameworks and well-established set of tools for data processing and visualization.\n\nHowever, Python ecosystem co-exists in Python 2 and Python 3, and Python 2 is still used among data scientists.\nBy the end of 2019 the scientific stack will [stop supporting Python2](http://www.python3statement.org).\nAs for numpy, after 2018 any new feature releases will only support [Python3](https://github.com/numpy/numpy/blob/master/doc/neps/dropping-python2.7-proposal.rst). *Update (Sep 2018): same story now with pandas, matplotlib, ipython, jupyter notebook and jupyter lab.*\n\nTo make the transition less frustrating, I've collected a bunch of Python 3 features that you may find useful.\n\n<img src='https://uploads.toptal.io/blog/image/92216/toptal-blog-image-1457618659472-be2f380fe3aad41333427ecd5a1ec5c5.jpg' width=400 />\n\nImage from [Dario Bertini post (toptal)](https://www.toptal.com/python/python-3-is-it-worth-the-switch)\n\n## Better paths handling with `pathlib`\n\n`pathlib` is a default module in python3, that helps you to avoid tons of `os.path.join`s:\n\n```python\nfrom pathlib import Path\n\ndataset = 'wiki_images'\ndatasets_root = Path('/path/to/datasets/')\n\ntrain_path = datasets_root / dataset / 'train'\ntest_path = datasets_root / dataset / 'test'\n\nfor image_path in train_path.iterdir():\n    with image_path.open() as f: # note, open is a method of Path object\n        # do something with an image\n```\n\nPreviously it was always tempting to use string concatenation (concise, but obviously bad),\nnow with `pathlib` the code is safe, concise, and readable.\n\nAlso `pathlib.Path` has a bunch of methods and properties, that every python novice previously had to google:\n\n```python\np.exists()\np.is_dir()\np.parts\np.with_name('sibling.png') # only change the name, but keep the folder\np.with_suffix('.jpg') # only change the extension, but keep the folder and the name\np.chmod(mode)\np.rmdir()\n```\n\n`pathlib` should save you lots of time,\nplease see [docs](https://docs.python.org/3/library/pathlib.html) and [reference](https://pymotw.com/3/pathlib/) for more.\n\n\n## Type hinting is now part of the language\n\nExample of type hinting in pycharm: <br/>\n<img src='images/pycharm-type-hinting.png' />\n\nPython is not just a language for small scripts anymore,\ndata pipelines these days include numerous steps each involving different frameworks (and sometimes very different logic).\n\nType hinting was introduced to help with growing complexity of programs, so machines could help with code verification.\nPreviously different modules used custom ways to point [types in docstrings](https://www.jetbrains.com/help/pycharm/type-hinting-in-pycharm.html#legacy)\n(Hint: pycharm can convert old docstrings to fresh type hinting).\n\nAs a simple example, the following code may work with different types of data (that's what we like about python data stack).\n```python\ndef repeat_each_entry(data):\n    \"\"\" Each entry in the data is doubled\n    <blah blah nobody reads the documentation till the end>\n    \"\"\"\n    index = numpy.repeat(numpy.arange(len(data)), 2)\n    return data[index]\n```\n\nThis code e.g. works for `numpy.array` (incl. multidimensional ones), `astropy.Table` and `astropy.Column`, `bcolz`, `cupy`, `mxnet.ndarray` and others.\n\nThis code will work for `pandas.Series`, but in the wrong way:\n```python\nrepeat_each_entry(pandas.Series(data=[0, 1, 2], index=[3, 4, 5])) # returns Series with Nones inside\n```\n\nThis was two lines of code. Imagine how unpredictable behavior of a complex system, because just one function may misbehave.\nStating explicitly which types a method expects is very helpful in large systems, this will warn you if a function was passed unexpected arguments.\n\n```python\ndef repeat_each_entry(data: Union[numpy.ndarray, bcolz.carray]):\n```\n\nIf you have a significant codebase, hinting tools like [MyPy](http://mypy.readthedocs.io) are likely to become part of your continuous integration pipeline.\nA webinar [\"Putting Type Hints to Work\"](https://www.youtube.com/watch?v=JqBCFfiE11g) by Daniel Pyrathon is good for a brief introduction.\n\nSidenote: unfortunately, hinting is not yet powerful enough to provide fine-grained typing for ndarrays/tensors, but [maybe we'll have it once](https://github.com/numpy/numpy/issues/7370), and this will be a great feature for DS.\n\n## Type hinting \u2192 type checking in runtime\n\nBy default, function annotations do not influence how your code is working, but merely help you to point code intentions.\n\nHowever, you can enforce type checking in runtime with tools like ... [enforce](https://github.com/RussBaz/enforce),\nthis can help you in debugging (there are many cases when type hinting is not working).\n\n```python\n@enforce.runtime_validation\ndef foo(text: str) -> None:\n    print(text)\n\nfoo('Hi') # ok\nfoo(5)    # fails\n\n\n@enforce.runtime_validation\ndef any2(x: List[bool]) -> bool:\n    return any(x)\n\nany ([False, False, True, False]) # True\nany2([False, False, True, False]) # True\n\nany (['False']) # True\nany2(['False']) # fails\n\nany ([False, None, \"\", 0]) # False\nany2([False, None, \"\", 0]) # fails\n\n```\n\n## <strike>Other usages of function annotations</strike>\n\n*Update: starting from python 3.7 this behavior was [depreciated](https://www.python.org/dev/peps/pep-0563/#non-typing-usage-of-annotations), and function annotations should be used for type hinting only. Python 4 will not support other usages of annotations.*\n\nAs mentioned before, annotations do not influence code execution, but rather provide some meta-information,\nand you can use it as you wish.\n\nFor instance, measurement units are a common pain in scientific areas, `astropy` package [provides a simple decorator](http://docs.astropy.org/en/stable/units/quantity.html#functions-that-accept-quantities) to control units of input quantities and convert output to required units\n```python\n# Python 3\nfrom astropy import units as u\n@u.quantity_input()\ndef frequency(speed: u.meter / u.s, wavelength: u.nm) -> u.terahertz:\n    return speed / wavelength\n\nfrequency(speed=300_000 * u.km / u.s, wavelength=555 * u.nm)\n# output: 540.5405405405404 THz, frequency of green visible light\n```\n\nIf you're processing tabular scientific data in python (not necessarily astronomical), you should give `astropy` a shot.\n\nYou can also define your application-specific decorators to perform control / conversion of inputs and output in the same manner.\n\n## Matrix multiplication with @\n\nLet's implement one of the simplest ML models &mdash; a linear regression with l2 regularization (a.k.a. ridge regression):\n\n```python\n# l2-regularized linear regression: || AX - y ||^2 + alpha * ||x||^2 -> min\n\n# Python 2\nX = np.linalg.inv(np.dot(A.T, A) + alpha * np.eye(A.shape[1])).dot(A.T.dot(y))\n# Python 3\nX = np.linalg.inv(A.T @ A + alpha * np.eye(A.shape[1])) @ (A.T @ y)\n```\n\nThe code with `@` becomes more readable and more translatable between deep learning frameworks: same code `X @ W + b[None, :]` for a single layer of perceptron works in `numpy`, `cupy`, `pytorch`, `tensorflow` (and other frameworks that operate with tensors).\n\n## Globbing with `**`\n\nRecursive folder globbing is not easy in Python 2, even though the [glob2](https://github.com/miracle2k/python-glob2) custom module exists that overcomes this. A recursive flag is supported since Python 3.5:\n\n```python\nimport glob\n\n# Python 2\nfound_images = (\n    glob.glob('/path/*.jpg')\n  + glob.glob('/path/*/*.jpg')\n  + glob.glob('/path/*/*/*.jpg')\n  + glob.glob('/path/*/*/*/*.jpg')\n  + glob.glob('/path/*/*/*/*/*.jpg'))\n\n# Python 3\nfound_images = glob.glob('/path/**/*.jpg', recursive=True)\n```\n\nA better option is to use `pathlib` in python3 (minus one import!):\n```python\n# Python 3\nfound_images = pathlib.Path('/path/').glob('**/*.jpg')\n```\nNote: there are [minor differences](https://github.com/arogozhnikov/python3_with_pleasure/issues/16) between `glob.glob`, `Path.glob` and bash globbing.\n\n## Print is a function now\n\nYes, code now has these annoying parentheses, but there are some advantages:\n\n- simple syntax for using file descriptor:\n    ```python\n    print >>sys.stderr, \"critical error\"      # Python 2\n    print(\"critical error\", file=sys.stderr)  # Python 3\n    ```\n- printing tab-aligned tables without `str.join`:\n    ```python\n    # Python 3\n    print(*array, sep='\\t')\n    print(batch, epoch, loss, accuracy, time, sep='\\t')\n    ```\n- hacky suppressing / redirection of printing output:\n    ```python\n    # Python 3\n    _print = print # store the original print function\n    def print(*args, **kargs):\n        pass  # do something useful, e.g. store output to some file\n    ```\n    In jupyter it is desirable to log each output to a separate file (to track what's happening after you got disconnected), so you can override `print` now.\n\n    Below you can see a context manager that temporarily overrides behavior of print:\n    ```python\n    @contextlib.contextmanager\n    def replace_print():\n        import builtins\n        _print = print # saving old print function\n        # or use some other function here\n        builtins.print = lambda *args, **kwargs: _print('new printing', *args, **kwargs)\n        yield\n        builtins.print = _print\n\n    with replace_print():\n        <code here will invoke other print function>\n    ```\n    It is *not* a recommended approach, but a small dirty hack that is now possible.\n- `print` can participate in list comprehensions and other language constructs\n    ```python\n    # Python 3\n    result = process(x) if is_valid(x) else print('invalid item: ', x)\n    ```\n\n\n## Underscores in Numeric Literal (Thousands Separator)\n\n[PEP-515](https://www.python.org/dev/peps/pep-0515/ \"PEP-515\") introduced underscores in Numeric Literals.\nIn Python3, underscores can be used to group digits visually in integral, floating-point, and complex number literals.\n\n```python\n# grouping decimal numbers by thousands\none_million = 1_000_000\n\n# grouping hexadecimal addresses by words\naddr = 0xCAFE_F00D\n\n# grouping bits into nibbles in a binary literal\nflags = 0b_0011_1111_0100_1110\n\n# same, for string conversions\nflags = int('0b_1111_0000', 2)\n```\n\n## f-strings for simple and reliable formatting\n\nThe default formatting system provides a flexibility that is not required in data experiments.\nThe resulting code is either too verbose or too fragile towards any changes.\n\nQuite typically data scientists outputs some logging information iteratively in a fixed format.\nIt is common to have a code like:\n\n```python\n# Python 2\nprint '{batch:3} {epoch:3} / {total_epochs:3}  accuracy: {acc_mean:0.4f}\u00b1{acc_std:0.4f} time: {avg_time:3.2f}'.format(\n    batch=batch, epoch=epoch, total_epochs=total_epochs,\n    acc_mean=numpy.mean(accuracies), acc_std=numpy.std(accuracies),\n    avg_time=time / len(data_batch)\n)\n\n# Python 2 (too error-prone during fast modifications, please avoid):\nprint '{:3} {:3} / {:3}  accuracy: {:0.4f}\u00b1{:0.4f} time: {:3.2f}'.format(\n    batch, epoch, total_epochs, numpy.mean(accuracies), numpy.std(accuracies),\n    time / len(data_batch)\n)\n```\n\nSample output:\n```\n120  12 / 300  accuracy: 0.8180\u00b10.4649 time: 56.60\n```\n\n**f-strings** aka formatted string literals were introduced in Python 3.6:\n```python\n# Python 3.6+\nprint(f'{batch:3} {epoch:3} / {total_epochs:3}  accuracy: {numpy.mean(accuracies):0.4f}\u00b1{numpy.std(accuracies):0.4f} time: {time / len(data_batch):3.2f}')\n```\n\n\n## Explicit difference between 'true division' and 'floor division'\n\nFor data science this is definitely a handy change \n\n```python\ndata = pandas.read_csv('timing.csv')\nvelocity = data['distance'] / data['time']\n```\n\nResults in Python 2 depend on whether 'time' and 'distance' (e.g. measured in meters and seconds) are stored as integers.\nIn Python 3, the result is correct in both cases, because the result of division is float.\n\nAnother case is floor division, which is now an explicit operation:\n\n```python\nn_gifts = money // gift_price  # correct for int and float arguments\n```\n\nIn a nutshell:\n\n```python\n>>> from operator import truediv, floordiv\n>>> truediv.__doc__, floordiv.__doc__\n('truediv(a, b) -- Same as a / b.', 'floordiv(a, b) -- Same as a // b.')\n>>> (3 / 2), (3 // 2), (3.0 // 2.0)\n(1.5, 1, 1.0)\n```\n\nNote, that this applies both to built-in types and to custom types provided by data packages (e.g. `numpy` or `pandas`).\n\n\n## Strict ordering\n\n```python\n# All these comparisons are illegal in Python 3\n3 < '3'\n2 < None\n(3, 4) < (3, None)\n(4, 5) < [4, 5]\n\n# False in both Python 2 and Python 3\n(4, 5) == [4, 5]\n```\n\n- prevents from occasional sorting of instances of different types\n  ```python\n  sorted([2, '1', 3])  # invalid for Python 3, in Python 2 returns [2, 3, '1']\n  ```\n- helps to spot some problems that arise when processing raw data\n\nSidenote: proper check for None is (in both Python versions)\n```python\nif a is not None:\n  pass\n\nif a: # WRONG check for None\n  pass\n```\n\n\n## Unicode for NLP\n\n```python\ns = '\u60a8\u597d'\nprint(len(s))\nprint(s[:2])\n```\nOutput:\n- Python 2: `6\\n\ufffd\ufffd`\n- Python 3: `2\\n\u60a8\u597d`.\n\n```python\nx = u'\u0441\u043e'\nx += 'co' # ok\nx += '\u0441\u043e' # fail\n```\nPython 2 fails, Python 3 works as expected (because I've used russian letters in strings).\n\nIn Python 3 `str`s are unicode strings, and it is more convenient for NLP processing of non-english texts.\n\nThere are other funny things, for instance:\n```python\n'a' < type < u'a'  # Python 2: True\n'a' < u'a'         # Python 2: False\n```\n\n```python\nfrom collections import Counter\nCounter('M\u00f6belst\u00fcck')\n```\n\n- Python 2: `Counter({'\\xc3': 2, 'b': 1, 'e': 1, 'c': 1, 'k': 1, 'M': 1, 'l': 1, 's': 1, 't': 1, '\\xb6': 1, '\\xbc': 1})`\n- Python 3: `Counter({'M': 1, '\u00f6': 1, 'b': 1, 'e': 1, 'l': 1, 's': 1, 't': 1, '\u00fc': 1, 'c': 1, 'k': 1})`\n\nYou can handle all of this in Python 2 properly, but Python 3 is more friendly.\n\n## Preserving order of dictionaries and **kwargs\n\nIn CPython 3.6+ dicts behave like `OrderedDict` by default (and [this is guaranteed in Python 3.7+](https://stackoverflow.com/questions/39980323/are-dictionaries-ordered-in-python-3-6)).\nThis preserves order during dict comprehensions (and other operations, e.g. during json serialization/deserialization)\n\n```python\nimport json\nx = {str(i):i for i in range(5)}\njson.loads(json.dumps(x))\n# Python 2\n{u'1': 1, u'0': 0, u'3': 3, u'2': 2, u'4': 4}\n# Python 3\n{'0': 0, '1': 1, '2': 2, '3': 3, '4': 4}\n```\n\nSame applies to `**kwargs` (in Python 3.6+), they're kept in the same order as they appear in parameters.\nOrder is crucial when it comes to data pipelines, previously we had to write it in a cumbersome manner:\n```python\nfrom torch import nn\n\n# Python 2\nmodel = nn.Sequential(OrderedDict([\n          ('conv1', nn.Conv2d(1,20,5)),\n          ('relu1', nn.ReLU()),\n          ('conv2', nn.Conv2d(20,64,5)),\n          ('relu2', nn.ReLU())\n        ]))\n\n# Python 3.6+, how it *can* be done, not supported right now in pytorch\nmodel = nn.Sequential(\n    conv1=nn.Conv2d(1,20,5),\n    relu1=nn.ReLU(),\n    conv2=nn.Conv2d(20,64,5),\n    relu2=nn.ReLU())\n)\n```\n\nDid you notice? Uniqueness of names is also checked automatically.\n\n\n## Iterable unpacking\n\n```python\n# handy when amount of additional stored info may vary between experiments, but the same code can be used in all cases\nmodel_paramteres, optimizer_parameters, *other_params = load(checkpoint_name)\n\n# picking two last values from a sequence\n*prev, next_to_last, last = values_history\n\n# This also works with any iterables, so if you have a function that yields e.g. qualities,\n# below is a simple way to take only last two values from a list\n*prev, next_to_last, last = iter_train(args)\n```\n\n## Default pickle engine provides better compression for arrays\n\nPickling is a mechanism to pass data between threads / processes, in particular used inside `multiprocessing` package. \n\n```python\n# Python 2\nimport cPickle as pickle\nimport numpy\nprint len(pickle.dumps(numpy.random.normal(size=[1000, 1000])))\n# result: 23691675\n\n# Python 3\nimport pickle\nimport numpy\nlen(pickle.dumps(numpy.random.normal(size=[1000, 1000])))\n# result: 8000162\n```\n\nThree times less space. And it is *much* faster.\nActually similar compression (but not speed) is achievable with `protocol=2` parameter, but developers typically ignore this option (or simply are not aware of it). \n\nNote: pickle is [not safe](https://docs.python.org/3/library/pickle.html) (and not quite transferrable), so never unpickle data received from an untrusted or unauthenticated source.\n\n## Safer comprehensions\n\n```python\nlabels = <initial_value>\npredictions = [model.predict(data) for data, labels in dataset]\n\n# labels are overwritten in Python 2\n# labels are not affected by comprehension in Python 3\n```\n\n## Super, simply super()\n\nPython 2 `super(...)` was a frequent source of mistakes in code.\n\n```python\n# Python 2\nclass MySubClass(MySuperClass):\n    def __init__(self, name, **options):\n        super(MySubClass, self).__init__(name='subclass', **options)\n\n# Python 3\nclass MySubClass(MySuperClass):\n    def __init__(self, name, **options):\n        super().__init__(name='subclass', **options)\n```\n\nMore on `super` and method resolution order on [stackoverflow](https://stackoverflow.com/questions/576169/understanding-python-super-with-init-methods).\n\n## Better IDE suggestions with variable annotations\n\nThe most enjoyable thing about programming in languages like Java, C# and alike is that IDE can make very good suggestions,\nbecause type of each identifier is known before executing a program.\n\nIn python this is hard to achieve, but annotations will help you\n- write your expectations in a clear form\n- and get good suggestions from IDE\n\n<img src='images/variable_annotations.png' /><br />\nThis is an example of PyCharm suggestions with variable annotations.\nThis works even in situations when functions you use are not annotated (e.g. due to backward compatibility).\n\n## Multiple unpacking\n\nHere is how you merge two dicts now:\n```python\nx = dict(a=1, b=2)\ny = dict(b=3, d=4)\n# Python 3.5+\nz = {**x, **y}\n# z = {'a': 1, 'b': 3, 'd': 4}, note that value for `b` is taken from the latter dict.\n```\n\nSee [this thread at StackOverflow](https://stackoverflow.com/questions/38987/how-to-merge-two-dictionaries-in-a-single-expression) for a comparison with Python 2.\n\nThe same approach also works for lists, tuples, and sets (`a`, `b`, `c` are any iterables):\n```python\n[*a, *b, *c] # list, concatenating\n(*a, *b, *c) # tuple, concatenating\n{*a, *b, *c} # set, union\n```\n\nFunctions also [support multiple unpacking](https://docs.python.org/3/whatsnew/3.5.html#whatsnew-pep-448) for `*args` and `**kwargs`:\n```python\n# Python 3.5+\ndo_something(**{**default_settings, **custom_settings})\n\n# Also possible, this code also checks there is no intersection between keys of dictionaries\ndo_something(**first_args, **second_args)\n```\n\n## Future-proof APIs with keyword-only arguments\n\nLet's consider this snippet\n```python\nmodel = sklearn.svm.SVC(2, 'poly', 2, 4, 0.5)\n```\nObviously, an author of this code didn't get the Python style of coding yet (most probably, just jumped from cpp or rust).\nUnfortunately, this is not just question of taste, because changing the order of arguments (adding/deleting) in `SVC` will break this code. In particular, `sklearn` does some reordering/renaming from time to time of numerous algorithm parameters to provide consistent API. Each such refactoring may drive to broken code.\n\nIn Python 3, library authors may demand explicitly named parameters by using `*`:\n```python\nclass SVC(BaseSVC):\n    def __init__(self, *, C=1.0, kernel='rbf', degree=3, gamma='auto', coef0=0.0, ... )\n```\n- users have to specify names of parameters `sklearn.svm.SVC(C=2, kernel='poly', degree=2, gamma=4, coef0=0.5)` now\n- this mechanism provides a great combination of reliability and flexibility of APIs\n\n## Data classes\n\nPython 3.7 introduces data classes, a good replacement for `namedtuple` in most cases.\n```python\n@dataclass\nclass Person:\n    name: str\n    age: int\n\n@dataclass\nclass Coder(Person):\n    preferred_language: str = 'Python 3'\n```\n\n`dataclass` decorator takes the job of implementing routine methods for you (initialization, representation, comparison, and hashing when applicable). \nLet's name some features:\n- data classes can be both mutable and immutable\n- default values for fields are supported\n- inheritance\n- data classes are still old good classes: you can define new methods and override existing\n- post-init processing (e.g. to verify consistency) \n\nGeir Arne Hjelle gives a good overview of dataclasses [in his post](https://realpython.com/python-data-classes/).\n\n\n\n\n## Customizing access to module attributes\n\nIn Python you can control attribute access and hinting with `__getattr__` and `__dir__` for any object. Since python 3.7 you can do it for modules too.\n\nA natural example is implementing a `random` submodule of tensor libraries, which is typically a shortcut to skip initialization and passing of RandomState objects. Here's implementation for numpy:  \n```python\n# nprandom.py\nimport numpy\n__random_state = numpy.random.RandomState()\n\ndef __getattr__(name):\n    return getattr(__random_state, name)\n\ndef __dir__():\n    return dir(__random_state)\n    \ndef seed(seed):\n    __random_state = numpy.random.RandomState(seed=seed)\n```\n\nOne can also mix this way functionalities of different objects/submodules. Compare with tricks in [pytorch](https://github.com/pytorch/pytorch/blob/3ce17bf8f6a2c4239085191ea60d6ee51cd620a5/torch/__init__.py#L253-L256) and [cupy](https://github.com/cupy/cupy/blob/94592ecac8152d5f4a56a129325cc91d184480ad/cupy/random/distributions.py).\n\nAdditionally, now one can\n- use it for [lazy loading of submodules](https://snarky.ca/lazy-importing-in-python-3-7/). For example, `import tensorflow` takes **~150MB** of RAM is imports all submodules (and dependencies). \n- use this for [deprecations in API](https://www.python.org/dev/peps/pep-0562/)\n- introduce runtime routing between submodules\n\n## Built-in breakpoint()\n\nJust write `breakpoint()` in the code to invoke debugger.\n```python\n# Python 3.7+, not all IDEs support this at the moment\nfoo()\nbreakpoint()\nbar()\n```\n\nFor remote debugging you may want to try [combining breakpoint() with `web-pdb`](https://hackernoon.com/python-3-7s-new-builtin-breakpoint-a-quick-tour-4f1aebc444c)\n\n\n## Minor: constants in `math` module\n\n```python\n# Python 3\nmath.inf # Infinite float\nmath.nan # not a number\n\nmax_quality = -math.inf  # no more magic initial values!\n\nfor model in trained_models:\n    max_quality = max(max_quality, compute_quality(model, data))\n```\n\n## Minor: single integer type\n\nPython 2 provides two basic integer types, which are `int` (64-bit signed integer) and `long` for long arithmetics (quite confusing after C++).\n\nPython 3 has a single type `int`, which incorporates long arithmetics.\n\nHere is how you check that value is integer:\n\n```python\nisinstance(x, numbers.Integral) # Python 2, the canonical way\nisinstance(x, (long, int))      # Python 2\nisinstance(x, int)              # Python 3, easier to remember\n```\n\nUpdate: first check also works for *other integral types*, such as `numpy.int32`, `numpy.int64`, but others don't. So they're not equivalent.\n\n\n## Other stuff\n\n- `Enum`s are theoretically useful, but\n    - string-typing is already widely adopted in the python data stack\n    - `Enum`s don't seem to interplay with numpy and categorical from pandas\n- coroutines also *sound* very promising for data pipelining (see [slides](http://www.dabeaz.com/coroutines/Coroutines.pdf) by David Beazley), but I don't see their adoption in the wild.\n- Python 3 has [stable ABI](https://www.python.org/dev/peps/pep-0384/)\n- Python 3 supports unicode identifies (so `\u03c9 = \u0394\u03c6 / \u0394t` is ok), but you'd [better use good old ASCII names](https://stackoverflow.com/a/29855176/498892)\n- some libraries e.g. [jupyterhub](https://github.com/jupyterhub/jupyterhub) (jupyter in cloud), django and fresh ipython only support Python 3, so features that sound useless for you are useful for libraries you'll probably want to use once.\n\n\n### Problems for code migration specific for data science (and how to resolve those)\n\n- support for nested arguments [was dropped](https://www.python.org/dev/peps/pep-3113/)\n  ```python\n  map(lambda x, (y, z): x, z, dict.items())\n  ```\n\n  However, it is still perfectly working with different comprehensions:\n  ```python\n  {x:z for x, (y, z) in d.items()}\n  ```\n  In general, comprehensions are also better 'translatable' between Python 2 and 3.\n\n- `map()`, `.keys()`, `.values()`, `.items()`, etc. return iterators, not lists. Main problems with iterators are:\n  - no trivial slicing\n  - can't be iterated twice\n\n  Almost all of the problems are resolved by converting result to list.\n\n- see [Python FAQ: How do I port to Python 3?](https://eev.ee/blog/2016/07/31/python-faq-how-do-i-port-to-python-3/) when in trouble\n\n### Main problems for teaching machine learning and data science with python\n\nCourse authors should spend time in the first lectures to explain what is an iterator,\nwhy it can't be sliced / concatenated / multiplied / iterated twice like a string (and how to deal with it).\n\nI think most course authors would be happy to avoid these details, but now it is hardly possible.\n\n# Conclusion\n\nPython 2 and Python 3 have co-existed for almost 10 years, but we *should* move to Python 3.\n\nResearch and production code should become a bit shorter, more readable, and significantly safer after moving to Python 3-only codebase.\n\nRight now most libraries support both Python versions.\nAnd I can't wait for the bright moment when packages drop support for Python 2 and enjoy new language features.\n\nFollowing migrations are promised to be smoother: [\"we will never do this kind of backwards-incompatible change again\"](https://snarky.ca/why-python-3-exists/)\n\n### Links\n\n- [Key differences between Python 2.7 and Python 3.x](http://sebastianraschka.com/Articles/2014_python_2_3_key_diff.html)\n- [Python FAQ: How do I port to Python 3?](https://eev.ee/blog/2016/07/31/python-faq-how-do-i-port-to-python-3/)\n- [10 awesome features of Python that you can't use because you refuse to upgrade to Python 3](http://www.asmeurer.com/python3-presentation/slides.html)\n- [Trust me, python 3.3 is better than 2.7 (video)](http://pyvideo.org/pycon-us-2013/python-33-trust-me-its-better-than-27.html)\n- [Python 3 for scientists](http://python-3-for-scientists.readthedocs.io/en/latest/)\n\n### License\n\nThis text was published by [Alex Rogozhnikov](https://arogozhnikov.github.io/about/) and [contributors](https://github.com/arogozhnikov/python3_with_pleasure/graphs/contributors) under [CC BY-SA 3.0 License](https://creativecommons.org/licenses/by-sa/3.0/) (excluding images).\n"}, {"repo": "/lawlite19/MachineLearning_Python", "language": "Python", "readme_contents": "\u673a\u5668\u5b66\u4e60\u7b97\u6cd5Python\u5b9e\u73b0\n=========\n\n[![MIT license](https://img.shields.io/dub/l/vibe-d.svg)](https://github.com/lawlite19/MachineLearning_Python/blob/master/LICENSE)\n\n## \u76ee\u5f55\n* [\u673a\u5668\u5b66\u4e60\u7b97\u6cd5Python\u5b9e\u73b0](#\u673a\u5668\u5b66\u4e60\u7b97\u6cd5python\u5b9e\u73b0)\n\t* [\u4e00\u3001\u7ebf\u6027\u56de\u5f52](#\u4e00\u7ebf\u6027\u56de\u5f52)\n\t\t* [1\u3001\u4ee3\u4ef7\u51fd\u6570](#1\u4ee3\u4ef7\u51fd\u6570)\n\t\t* [2\u3001\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5](#2\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5)\n\t\t* [3\u3001\u5747\u503c\u5f52\u4e00\u5316](#3\u5747\u503c\u5f52\u4e00\u5316)\n\t\t* [4\u3001\u6700\u7ec8\u8fd0\u884c\u7ed3\u679c](#4\u6700\u7ec8\u8fd0\u884c\u7ed3\u679c)\n\t\t* [5\u3001\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u7ebf\u6027\u6a21\u578b\u5b9e\u73b0](#5\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u7ebf\u6027\u6a21\u578b\u5b9e\u73b0)\n\t* [\u4e8c\u3001\u903b\u8f91\u56de\u5f52](#\u4e8c\u903b\u8f91\u56de\u5f52)\n\t\t* [1\u3001\u4ee3\u4ef7\u51fd\u6570](#1\u4ee3\u4ef7\u51fd\u6570)\n\t\t* [2\u3001\u68af\u5ea6](#2\u68af\u5ea6)\n\t\t* [3\u3001\u6b63\u5219\u5316](#3\u6b63\u5219\u5316)\n\t\t* [4\u3001S\u578b\u51fd\u6570\uff08\u5373\uff09](#4s\u578b\u51fd\u6570\u5373)\n\t\t* [5\u3001\u6620\u5c04\u4e3a\u591a\u9879\u5f0f](#5\u6620\u5c04\u4e3a\u591a\u9879\u5f0f)\n\t\t* [6\u3001\u4f7f\u7528\u7684\u4f18\u5316\u65b9\u6cd5](#6\u4f7f\u7528scipy\u7684\u4f18\u5316\u65b9\u6cd5)\n\t\t* [7\u3001\u8fd0\u884c\u7ed3\u679c](#7\u8fd0\u884c\u7ed3\u679c)\n\t\t* [8\u3001\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u903b\u8f91\u56de\u5f52\u6a21\u578b\u5b9e\u73b0](#8\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u903b\u8f91\u56de\u5f52\u6a21\u578b\u5b9e\u73b0)\n\t* [\u903b\u8f91\u56de\u5f52_\u624b\u5199\u6570\u5b57\u8bc6\u522b_OneVsAll](#\u903b\u8f91\u56de\u5f52_\u624b\u5199\u6570\u5b57\u8bc6\u522b_onevsall)\n\t\t* [1\u3001\u968f\u673a\u663e\u793a100\u4e2a\u6570\u5b57](#1\u968f\u673a\u663e\u793a100\u4e2a\u6570\u5b57)\n\t\t* [2\u3001OneVsAll](#2onevsall)\n\t\t* [3\u3001\u624b\u5199\u6570\u5b57\u8bc6\u522b](#3\u624b\u5199\u6570\u5b57\u8bc6\u522b)\n\t\t* [4\u3001\u9884\u6d4b](#4\u9884\u6d4b)\n\t\t* [5\u3001\u8fd0\u884c\u7ed3\u679c](#5\u8fd0\u884c\u7ed3\u679c)\n\t\t* [6\u3001\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u903b\u8f91\u56de\u5f52\u6a21\u578b\u5b9e\u73b0](#6\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u903b\u8f91\u56de\u5f52\u6a21\u578b\u5b9e\u73b0)\n\t* [\u4e09\u3001BP\u795e\u7ecf\u7f51\u7edc](#\u4e09bp\u795e\u7ecf\u7f51\u7edc)\n\t\t* [1\u3001\u795e\u7ecf\u7f51\u7edcmodel](#1\u795e\u7ecf\u7f51\u7edcmodel)\n\t\t* [2\u3001\u4ee3\u4ef7\u51fd\u6570](#2\u4ee3\u4ef7\u51fd\u6570)\n\t\t* [3\u3001\u6b63\u5219\u5316](#3\u6b63\u5219\u5316)\n\t\t* [4\u3001\u53cd\u5411\u4f20\u64adBP](#4\u53cd\u5411\u4f20\u64adbp)\n\t\t* [5\u3001BP\u53ef\u4ee5\u6c42\u68af\u5ea6\u7684\u539f\u56e0](#5bp\u53ef\u4ee5\u6c42\u68af\u5ea6\u7684\u539f\u56e0)\n\t\t* [6\u3001\u68af\u5ea6\u68c0\u67e5](#6\u68af\u5ea6\u68c0\u67e5)\n\t\t* [7\u3001\u6743\u91cd\u7684\u968f\u673a\u521d\u59cb\u5316](#7\u6743\u91cd\u7684\u968f\u673a\u521d\u59cb\u5316)\n\t\t* [8\u3001\u9884\u6d4b](#8\u9884\u6d4b)\n\t\t* [9\u3001\u8f93\u51fa\u7ed3\u679c](#9\u8f93\u51fa\u7ed3\u679c)\n\t* [\u56db\u3001SVM\u652f\u6301\u5411\u91cf\u673a](#\u56dbsvm\u652f\u6301\u5411\u91cf\u673a)\n\t\t* [1\u3001\u4ee3\u4ef7\u51fd\u6570](#1\u4ee3\u4ef7\u51fd\u6570)\n\t\t* [2\u3001Large Margin](#2large-margin)\n\t\t* [3\u3001SVM Kernel\uff08\u6838\u51fd\u6570\uff09](#3svm-kernel\u6838\u51fd\u6570)\n\t\t* [4\u3001\u4f7f\u7528\u4e2d\u7684\u6a21\u578b\u4ee3\u7801](#4\u4f7f\u7528scikit-learn\u4e2d\u7684svm\u6a21\u578b\u4ee3\u7801)\n\t\t* [5\u3001\u8fd0\u884c\u7ed3\u679c](#5\u8fd0\u884c\u7ed3\u679c)\n\t* [\u4e94\u3001K-Means\u805a\u7c7b\u7b97\u6cd5](#\u4e94k-means\u805a\u7c7b\u7b97\u6cd5)\n\t\t* [1\u3001\u805a\u7c7b\u8fc7\u7a0b](#1\u805a\u7c7b\u8fc7\u7a0b)\n\t\t* [2\u3001\u76ee\u6807\u51fd\u6570](#2\u76ee\u6807\u51fd\u6570)\n\t\t* [3\u3001\u805a\u7c7b\u4e2d\u5fc3\u7684\u9009\u62e9](#3\u805a\u7c7b\u4e2d\u5fc3\u7684\u9009\u62e9)\n\t\t* [4\u3001\u805a\u7c7b\u4e2a\u6570K\u7684\u9009\u62e9](#4\u805a\u7c7b\u4e2a\u6570k\u7684\u9009\u62e9)\n\t\t* [5\u3001\u5e94\u7528\u2014\u2014\u56fe\u7247\u538b\u7f29](#5\u5e94\u7528\u56fe\u7247\u538b\u7f29)\n\t\t* [6\u3001\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u7ebf\u6027\u6a21\u578b\u5b9e\u73b0\u805a\u7c7b](#6\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u7ebf\u6027\u6a21\u578b\u5b9e\u73b0\u805a\u7c7b)\n\t\t* [7\u3001\u8fd0\u884c\u7ed3\u679c](#7\u8fd0\u884c\u7ed3\u679c)\n\t* [\u516d\u3001PCA\u4e3b\u6210\u5206\u5206\u6790\uff08\u964d\u7ef4\uff09](#\u516dpca\u4e3b\u6210\u5206\u5206\u6790\u964d\u7ef4)\n\t\t* [1\u3001\u7528\u5904](#1\u7528\u5904)\n\t\t* [2\u30012D-->1D\uff0cnD-->kD](#22d--1dnd--kd)\n\t\t* [3\u3001\u4e3b\u6210\u5206\u5206\u6790PCA\u4e0e\u7ebf\u6027\u56de\u5f52\u7684\u533a\u522b](#3\u4e3b\u6210\u5206\u5206\u6790pca\u4e0e\u7ebf\u6027\u56de\u5f52\u7684\u533a\u522b)\n\t\t* [4\u3001PCA\u964d\u7ef4\u8fc7\u7a0b](#4pca\u964d\u7ef4\u8fc7\u7a0b)\n\t\t* [5\u3001\u6570\u636e\u6062\u590d](#5\u6570\u636e\u6062\u590d)\n\t\t* [6\u3001\u4e3b\u6210\u5206\u4e2a\u6570\u7684\u9009\u62e9\uff08\u5373\u8981\u964d\u7684\u7ef4\u5ea6\uff09](#6\u4e3b\u6210\u5206\u4e2a\u6570\u7684\u9009\u62e9\u5373\u8981\u964d\u7684\u7ef4\u5ea6)\n\t\t* [7\u3001\u4f7f\u7528\u5efa\u8bae](#7\u4f7f\u7528\u5efa\u8bae)\n\t\t* [8\u3001\u8fd0\u884c\u7ed3\u679c](#8\u8fd0\u884c\u7ed3\u679c)\n\t\t* [9\u3001\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684PCA\u5b9e\u73b0\u964d\u7ef4](#9\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684pca\u5b9e\u73b0\u964d\u7ef4)\n\t* [\u4e03\u3001\u5f02\u5e38\u68c0\u6d4b Anomaly Detection](#\u4e03\u5f02\u5e38\u68c0\u6d4b-anomaly-detection)\n\t\t* [1\u3001\u9ad8\u65af\u5206\u5e03\uff08\u6b63\u6001\u5206\u5e03\uff09](#1\u9ad8\u65af\u5206\u5e03\u6b63\u6001\u5206\u5e03gaussian-distribution)\n\t\t* [2\u3001\u5f02\u5e38\u68c0\u6d4b\u7b97\u6cd5](#2\u5f02\u5e38\u68c0\u6d4b\u7b97\u6cd5)\n\t\t* [3\u3001\u8bc4\u4ef7\u7684\u597d\u574f\uff0c\u4ee5\u53ca\u7684\u9009\u53d6](#3\u8bc4\u4ef7px\u7684\u597d\u574f\u4ee5\u53ca\u03b5\u7684\u9009\u53d6)\n\t\t* [4\u3001\u9009\u62e9\u4f7f\u7528\u4ec0\u4e48\u6837\u7684feature\uff08\u5355\u5143\u9ad8\u65af\u5206\u5e03\uff09](#4\u9009\u62e9\u4f7f\u7528\u4ec0\u4e48\u6837\u7684feature\u5355\u5143\u9ad8\u65af\u5206\u5e03)\n\t\t* [5\u3001\u591a\u5143\u9ad8\u65af\u5206\u5e03](#5\u591a\u5143\u9ad8\u65af\u5206\u5e03)\n\t\t* [6\u3001\u5355\u5143\u548c\u591a\u5143\u9ad8\u65af\u5206\u5e03\u7279\u70b9](#6\u5355\u5143\u548c\u591a\u5143\u9ad8\u65af\u5206\u5e03\u7279\u70b9)\n\t\t* [7\u3001\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c](#7\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c)\n\n## \u4e00\u3001[\u7ebf\u6027\u56de\u5f52](/LinearRegression)\n- [\u5168\u90e8\u4ee3\u7801](/LinearRegression/LinearRegression.py)\n\n### 1\u3001\u4ee3\u4ef7\u51fd\u6570\n- ![J(\\theta ) = \\frac{1}{{2{\\text{m}}}}\\sum\\limits_{i = 1}^m {{{({h_\\theta }({x^{(i)}}) - {y^{(i)}})}^2}} ](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%5Ctheta%20%29%20%3D%20%5Cfrac%7B1%7D%7B%7B2%7B%5Ctext%7Bm%7D%7D%7D%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%7B%7B%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20-%20%7By%5E%7B%28i%29%7D%7D%29%7D%5E2%7D%7D%20)\n- \u5176\u4e2d\uff1a\n![{h_\\theta }(x) = {\\theta _0} + {\\theta _1}{x_1} + {\\theta _2}{x_2} + ...](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bh_%5Ctheta%20%7D%28x%29%20%3D%20%7B%5Ctheta%20_0%7D%20%2B%20%7B%5Ctheta%20_1%7D%7Bx_1%7D%20%2B%20%7B%5Ctheta%20_2%7D%7Bx_2%7D%20%2B%20...)\n\n- \u4e0b\u9762\u5c31\u662f\u8981\u6c42\u51fatheta\uff0c\u4f7f\u4ee3\u4ef7\u6700\u5c0f\uff0c\u5373\u4ee3\u8868\u6211\u4eec\u62df\u5408\u51fa\u6765\u7684\u65b9\u7a0b\u8ddd\u79bb\u771f\u5b9e\u503c\u6700\u8fd1\n- \u5171\u6709m\u6761\u6570\u636e\uff0c\u5176\u4e2d![{{{({h_\\theta }({x^{(i)}}) - {y^{(i)}})}^2}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%7B%7B%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20-%20%7By%5E%7B%28i%29%7D%7D%29%7D%5E2%7D%7D)\u4ee3\u8868\u6211\u4eec\u8981\u62df\u5408\u51fa\u6765\u7684\u65b9\u7a0b\u5230\u771f\u5b9e\u503c\u8ddd\u79bb\u7684\u5e73\u65b9\uff0c\u5e73\u65b9\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u53ef\u80fd\u6709\u8d1f\u503c\uff0c\u6b63\u8d1f\u53ef\u80fd\u4f1a\u62b5\u6d88\n- \u524d\u9762\u6709\u7cfb\u6570`2`\u7684\u539f\u56e0\u662f\u4e0b\u9762\u6c42\u68af\u5ea6\u662f\u5bf9\u6bcf\u4e2a\u53d8\u91cf\u6c42\u504f\u5bfc\uff0c`2`\u53ef\u4ee5\u6d88\u53bb\n\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u8ba1\u7b97\u4ee3\u4ef7\u51fd\u6570\ndef computerCost(X,y,theta):\n    m = len(y)\n    J = 0\n    \n    J = (np.transpose(X*theta-y))*(X*theta-y)/(2*m) #\u8ba1\u7b97\u4ee3\u4ef7J\n    return J\n```\n - \u6ce8\u610f\u8fd9\u91cc\u7684X\u662f\u771f\u5b9e\u6570\u636e\u524d\u52a0\u4e86\u4e00\u52171\uff0c\u56e0\u4e3a\u6709theta(0)\n\n### 2\u3001\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\n- \u4ee3\u4ef7\u51fd\u6570\u5bf9![{{\\theta _j}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%7B%5Ctheta%20_j%7D%7D)\u6c42\u504f\u5bfc\u5f97\u5230\uff1a   \n![\\frac{{\\partial J(\\theta )}}{{\\partial {\\theta _j}}} = \\frac{1}{m}\\sum\\limits_{i = 1}^m {[({h_\\theta }({x^{(i)}}) - {y^{(i)}})x_j^{(i)}]} ](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Cfrac%7B%7B%5Cpartial%20J%28%5Ctheta%20%29%7D%7D%7B%7B%5Cpartial%20%7B%5Ctheta%20_j%7D%7D%7D%20%3D%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20-%20%7By%5E%7B%28i%29%7D%7D%29x_j%5E%7B%28i%29%7D%5D%7D%20)\n- \u6240\u4ee5\u5bf9theta\u7684\u66f4\u65b0\u53ef\u4ee5\u5199\u4e3a\uff1a   \n![{\\theta _j} = {\\theta _j} - \\alpha \\frac{1}{m}\\sum\\limits_{i = 1}^m {[({h_\\theta }({x^{(i)}}) - {y^{(i)}})x_j^{(i)}]} ](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Ctheta%20_j%7D%20%3D%20%7B%5Ctheta%20_j%7D%20-%20%5Calpha%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20-%20%7By%5E%7B%28i%29%7D%7D%29x_j%5E%7B%28i%29%7D%5D%7D%20)\n- \u5176\u4e2d![\\alpha ](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Calpha%20)\u4e3a\u5b66\u4e60\u901f\u7387\uff0c\u63a7\u5236\u68af\u5ea6\u4e0b\u964d\u7684\u901f\u5ea6\uff0c\u4e00\u822c\u53d6**0.01,0.03,0.1,0.3.....**\n- \u4e3a\u4ec0\u4e48\u68af\u5ea6\u4e0b\u964d\u53ef\u4ee5\u9010\u6b65\u51cf\u5c0f\u4ee3\u4ef7\u51fd\u6570\n - \u5047\u8bbe\u51fd\u6570`f(x)`\n - \u6cf0\u52d2\u5c55\u5f00\uff1a`f(x+\u25b3x)=f(x)+f'(x)*\u25b3x+o(\u25b3x)`\n - \u4ee4\uff1a`\u25b3x=-\u03b1*f'(x)`   ,\u5373\u8d1f\u68af\u5ea6\u65b9\u5411\u4e58\u4ee5\u4e00\u4e2a\u5f88\u5c0f\u7684\u6b65\u957f`\u03b1`\n - \u5c06`\u25b3x`\u4ee3\u5165\u6cf0\u52d2\u5c55\u5f00\u5f0f\u4e2d\uff1a`f(x+\u25b3x)=f(x)-\u03b1*[f'(x)]\u00b2+o(\u25b3x)`\n - \u53ef\u4ee5\u770b\u51fa\uff0c`\u03b1`\u662f\u53d6\u5f97\u5f88\u5c0f\u7684\u6b63\u6570\uff0c`[f'(x)]\u00b2`\u4e5f\u662f\u6b63\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f97\u51fa\uff1a`f(x+\u25b3x)<=f(x)`\n - \u6240\u4ee5\u6cbf\u7740**\u8d1f\u68af\u5ea6**\u653e\u4e0b\uff0c\u51fd\u6570\u5728\u51cf\u5c0f\uff0c\u591a\u7ef4\u60c5\u51b5\u4e00\u6837\u3002\n- \u5b9e\u73b0\u4ee3\u7801\n```\n# \u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\ndef gradientDescent(X,y,theta,alpha,num_iters):\n    m = len(y)      \n    n = len(theta)\n    \n    temp = np.matrix(np.zeros((n,num_iters)))   # \u6682\u5b58\u6bcf\u6b21\u8fed\u4ee3\u8ba1\u7b97\u7684theta\uff0c\u8f6c\u5316\u4e3a\u77e9\u9635\u5f62\u5f0f\n    \n    \n    J_history = np.zeros((num_iters,1)) #\u8bb0\u5f55\u6bcf\u6b21\u8fed\u4ee3\u8ba1\u7b97\u7684\u4ee3\u4ef7\u503c\n    \n    for i in range(num_iters):  # \u904d\u5386\u8fed\u4ee3\u6b21\u6570    \n        h = np.dot(X,theta)     # \u8ba1\u7b97\u5185\u79ef\uff0cmatrix\u53ef\u4ee5\u76f4\u63a5\u4e58\n        temp[:,i] = theta - ((alpha/m)*(np.dot(np.transpose(X),h-y)))   #\u68af\u5ea6\u7684\u8ba1\u7b97\n        theta = temp[:,i]\n        J_history[i] = computerCost(X,y,theta)      #\u8c03\u7528\u8ba1\u7b97\u4ee3\u4ef7\u51fd\u6570\n        print '.',      \n    return theta,J_history  \n```\n\n### 3\u3001\u5747\u503c\u5f52\u4e00\u5316\n- \u76ee\u7684\u662f\u4f7f\u6570\u636e\u90fd\u7f29\u653e\u5230\u4e00\u4e2a\u8303\u56f4\u5185\uff0c\u4fbf\u4e8e\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\n- ![{x_i} = \\frac{{{x_i} - {\\mu _i}}}{{{s_i}}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bx_i%7D%20%3D%20%5Cfrac%7B%7B%7Bx_i%7D%20-%20%7B%5Cmu%20_i%7D%7D%7D%7B%7B%7Bs_i%7D%7D%7D)\n- \u5176\u4e2d ![{{\\mu _i}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%7B%5Cmu%20_i%7D%7D) \u4e3a\u6240\u6709\u6b64feture\u6570\u636e\u7684\u5e73\u5747\u503c\n- ![{{s_i}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%7Bs_i%7D%7D)\u53ef\u4ee5\u662f**\u6700\u5927\u503c-\u6700\u5c0f\u503c**\uff0c\u4e5f\u53ef\u4ee5\u662f\u8fd9\u4e2afeature\u5bf9\u5e94\u7684\u6570\u636e\u7684**\u6807\u51c6\u5dee**\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u5f52\u4e00\u5316feature\ndef featureNormaliza(X):\n    X_norm = np.array(X)            #\u5c06X\u8f6c\u5316\u4e3anumpy\u6570\u7ec4\u5bf9\u8c61\uff0c\u624d\u53ef\u4ee5\u8fdb\u884c\u77e9\u9635\u7684\u8fd0\u7b97\n    #\u5b9a\u4e49\u6240\u9700\u53d8\u91cf\n    mu = np.zeros((1,X.shape[1]))   \n    sigma = np.zeros((1,X.shape[1]))\n    \n    mu = np.mean(X_norm,0)          # \u6c42\u6bcf\u4e00\u5217\u7684\u5e73\u5747\u503c\uff080\u6307\u5b9a\u4e3a\u5217\uff0c1\u4ee3\u8868\u884c\uff09\n    sigma = np.std(X_norm,0)        # \u6c42\u6bcf\u4e00\u5217\u7684\u6807\u51c6\u5dee\n    for i in range(X.shape[1]):     # \u904d\u5386\u5217\n        X_norm[:,i] = (X_norm[:,i]-mu[i])/sigma[i]  # \u5f52\u4e00\u5316\n    \n    return X_norm,mu,sigma\n```\n- \u6ce8\u610f\u9884\u6d4b\u7684\u65f6\u5019\u4e5f\u9700\u8981\u5747\u503c\u5f52\u4e00\u5316\u6570\u636e\n\n### 4\u3001\u6700\u7ec8\u8fd0\u884c\u7ed3\u679c\n- \u4ee3\u4ef7\u968f\u8fed\u4ee3\u6b21\u6570\u7684\u53d8\u5316   \n![enter description here][1]\n\n\n### 5\u3001[\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u7ebf\u6027\u6a21\u578b\u5b9e\u73b0](/LinearRegression/LinearRegression_scikit-learn.py)\n- \u5bfc\u5165\u5305\n```\nfrom sklearn import linear_model\nfrom sklearn.preprocessing import StandardScaler    #\u5f15\u5165\u7f29\u653e\u7684\u5305\n```\n- \u5f52\u4e00\u5316\n```\n    # \u5f52\u4e00\u5316\u64cd\u4f5c\n    scaler = StandardScaler()   \n    scaler.fit(X)\n    x_train = scaler.transform(X)\n    x_test = scaler.transform(np.array([1650,3]))\n```\n- \u7ebf\u6027\u6a21\u578b\u62df\u5408\n```\n    # \u7ebf\u6027\u6a21\u578b\u62df\u5408\n    model = linear_model.LinearRegression()\n    model.fit(x_train, y)\n``` \n- \u9884\u6d4b\n```\n    #\u9884\u6d4b\u7ed3\u679c\n    result = model.predict(x_test)\n```\n\n-------------------\n\n  \n## \u4e8c\u3001[\u903b\u8f91\u56de\u5f52](/LogisticRegression)\n- [\u5168\u90e8\u4ee3\u7801](/LogisticRegression/LogisticRegression.py)\n\n### 1\u3001\u4ee3\u4ef7\u51fd\u6570\n- ![\\left\\{ \\begin{gathered}\n  J(\\theta ) = \\frac{1}{m}\\sum\\limits_{i = 1}^m {\\cos t({h_\\theta }({x^{(i)}}),{y^{(i)}})}  \\hfill \\\\\n  \\cos t({h_\\theta }(x),y) = \\left\\{ {\\begin{array}{c}    { - \\log ({h_\\theta }(x))} \\\\    { - \\log (1 - {h_\\theta }(x))}  \\end{array} \\begin{array}{c}    {y = 1} \\\\    {y = 0}  \\end{array} } \\right. \\hfill \\\\ \n\\end{gathered}  \\right.](http://latex.codecogs.com/gif.latex?%5Clarge%20%5Cleft%5C%7B%20%5Cbegin%7Bgathered%7D%20J%28%5Ctheta%20%29%20%3D%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5Ccos%20t%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%2C%7By%5E%7B%28i%29%7D%7D%29%7D%20%5Chfill%20%5C%5C%20%5Ccos%20t%28%7Bh_%5Ctheta%20%7D%28x%29%2Cy%29%20%3D%20%5Cleft%5C%7B%20%7B%5Cbegin%7Barray%7D%7Bc%7D%20%7B%20-%20%5Clog%20%28%7Bh_%5Ctheta%20%7D%28x%29%29%7D%20%5C%5C%20%7B%20-%20%5Clog%20%281%20-%20%7Bh_%5Ctheta%20%7D%28x%29%29%7D%20%5Cend%7Barray%7D%20%5Cbegin%7Barray%7D%7Bc%7D%20%7By%20%3D%201%7D%20%5C%5C%20%7By%20%3D%200%7D%20%5Cend%7Barray%7D%20%7D%20%5Cright.%20%5Chfill%20%5C%5C%20%5Cend%7Bgathered%7D%20%5Cright.)\n- \u53ef\u4ee5\u7efc\u5408\u8d77\u6765\u4e3a\uff1a\n![J(\\theta ) =  - \\frac{1}{m}\\sum\\limits_{i = 1}^m {[{y^{(i)}}\\log ({h_\\theta }({x^{(i)}}) + (1 - } {y^{(i)}})\\log (1 - {h_\\theta }({x^{(i)}})]](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%5Ctheta%20%29%20%3D%20%20-%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%7By%5E%7B%28i%29%7D%7D%5Clog%20%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20%2B%20%281%20-%20%7D%20%7By%5E%7B%28i%29%7D%7D%29%5Clog%20%281%20-%20%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%5D)\n\u5176\u4e2d\uff1a\n![{h_\\theta }(x) = \\frac{1}{{1 + {e^{ - x}}}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bh_%5Ctheta%20%7D%28x%29%20%3D%20%5Cfrac%7B1%7D%7B%7B1%20%2B%20%7Be%5E%7B%20-%20x%7D%7D%7D%7D)\n- \u4e3a\u4ec0\u4e48\u4e0d\u7528\u7ebf\u6027\u56de\u5f52\u7684\u4ee3\u4ef7\u51fd\u6570\u8868\u793a\uff0c\u56e0\u4e3a\u7ebf\u6027\u56de\u5f52\u7684\u4ee3\u4ef7\u51fd\u6570\u53ef\u80fd\u662f\u975e\u51f8\u7684\uff0c\u5bf9\u4e8e\u5206\u7c7b\u95ee\u9898\uff0c\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u5f88\u96be\u5f97\u5230\u6700\u5c0f\u503c\uff0c\u4e0a\u9762\u7684\u4ee3\u4ef7\u51fd\u6570\u662f\u51f8\u51fd\u6570\n- ![{ - \\log ({h_\\theta }(x))}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%20-%20%5Clog%20%28%7Bh_%5Ctheta%20%7D%28x%29%29%7D)\u7684\u56fe\u50cf\u5982\u4e0b\uff0c\u5373`y=1`\u65f6\uff1a\n![enter description here][2]\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53![{{h_\\theta }(x)}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%7Bh_%5Ctheta%20%7D%28x%29%7D)\u8d8b\u4e8e`1`\uff0c`y=1`,\u4e0e\u9884\u6d4b\u503c\u4e00\u81f4\uff0c\u6b64\u65f6\u4ed8\u51fa\u7684\u4ee3\u4ef7`cost`\u8d8b\u4e8e`0`\uff0c\u82e5![{{h_\\theta }(x)}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%7Bh_%5Ctheta%20%7D%28x%29%7D)\u8d8b\u4e8e`0`\uff0c`y=1`,\u6b64\u65f6\u7684\u4ee3\u4ef7`cost`\u503c\u975e\u5e38\u5927\uff0c\u6211\u4eec\u6700\u7ec8\u7684\u76ee\u7684\u662f\u6700\u5c0f\u5316\u4ee3\u4ef7\u503c\n- \u540c\u7406![{ - \\log (1 - {h_\\theta }(x))}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%20-%20%5Clog%20%281%20-%20%7Bh_%5Ctheta%20%7D%28x%29%29%7D)\u7684\u56fe\u50cf\u5982\u4e0b\uff08`y=0`\uff09\uff1a   \n![enter description here][3]\n\n### 2\u3001\u68af\u5ea6\n- \u540c\u6837\u5bf9\u4ee3\u4ef7\u51fd\u6570\u6c42\u504f\u5bfc\uff1a\n![\\frac{{\\partial J(\\theta )}}{{\\partial {\\theta _j}}} = \\frac{1}{m}\\sum\\limits_{i = 1}^m {[({h_\\theta }({x^{(i)}}) - {y^{(i)}})x_j^{(i)}]} ](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Cfrac%7B%7B%5Cpartial%20J%28%5Ctheta%20%29%7D%7D%7B%7B%5Cpartial%20%7B%5Ctheta%20_j%7D%7D%7D%20%3D%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20-%20%7By%5E%7B%28i%29%7D%7D%29x_j%5E%7B%28i%29%7D%5D%7D%20)   \n\u53ef\u4ee5\u770b\u51fa\u4e0e\u7ebf\u6027\u56de\u5f52\u7684\u504f\u5bfc\u6570\u4e00\u81f4\n- \u63a8\u5230\u8fc7\u7a0b\n![enter description here][4]\n\n### 3\u3001\u6b63\u5219\u5316\n- \u76ee\u7684\u662f\u4e3a\u4e86\u9632\u6b62\u8fc7\u62df\u5408\n- \u5728\u4ee3\u4ef7\u51fd\u6570\u4e2d\u52a0\u4e0a\u4e00\u9879![J(\\theta ) =  - \\frac{1}{m}\\sum\\limits_{i = 1}^m {[{y^{(i)}}\\log ({h_\\theta }({x^{(i)}}) + (1 - } {y^{(i)}})\\log (1 - {h_\\theta }({x^{(i)}})] + \\frac{\\lambda }{{2m}}\\sum\\limits_{j = 1}^n {\\theta _j^2} ](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%5Ctheta%20%29%20%3D%20%20-%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%7By%5E%7B%28i%29%7D%7D%5Clog%20%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20%2B%20%281%20-%20%7D%20%7By%5E%7B%28i%29%7D%7D%29%5Clog%20%281%20-%20%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%5D%20%2B%20%5Cfrac%7B%5Clambda%20%7D%7B%7B2m%7D%7D%5Csum%5Climits_%7Bj%20%3D%201%7D%5En%20%7B%5Ctheta%20_j%5E2%7D%20)\n- \u6ce8\u610fj\u662f\u91cd1\u5f00\u59cb\u7684\uff0c\u56e0\u4e3atheta(0)\u4e3a\u4e00\u4e2a\u5e38\u6570\u9879\uff0cX\u4e2d\u6700\u524d\u9762\u4e00\u5217\u4f1a\u52a0\u4e0a1\u52171\uff0c\u6240\u4ee5\u4e58\u79ef\u8fd8\u662ftheta(0),feature\u6ca1\u6709\u5173\u7cfb\uff0c\u6ca1\u6709\u5fc5\u8981\u6b63\u5219\u5316\n- \u6b63\u5219\u5316\u540e\u7684\u4ee3\u4ef7\uff1a\n```\n# \u4ee3\u4ef7\u51fd\u6570\ndef costFunction(initial_theta,X,y,inital_lambda):\n    m = len(y)\n    J = 0\n    \n    h = sigmoid(np.dot(X,initial_theta))    # \u8ba1\u7b97h(z)\n    theta1 = initial_theta.copy()           # \u56e0\u4e3a\u6b63\u5219\u5316j=1\u4ece1\u5f00\u59cb\uff0c\u4e0d\u5305\u542b0\uff0c\u6240\u4ee5\u590d\u5236\u4e00\u4efd\uff0c\u524dtheta(0)\u503c\u4e3a0 \n    theta1[0] = 0   \n    \n    temp = np.dot(np.transpose(theta1),theta1)\n    J = (-np.dot(np.transpose(y),np.log(h))-np.dot(np.transpose(1-y),np.log(1-h))+temp*inital_lambda/2)/m   # \u6b63\u5219\u5316\u7684\u4ee3\u4ef7\u65b9\u7a0b\n    return J\n```\n- \u6b63\u5219\u5316\u540e\u7684\u4ee3\u4ef7\u7684\u68af\u5ea6\n```\n# \u8ba1\u7b97\u68af\u5ea6\ndef gradient(initial_theta,X,y,inital_lambda):\n    m = len(y)\n    grad = np.zeros((initial_theta.shape[0]))\n    \n    h = sigmoid(np.dot(X,initial_theta))# \u8ba1\u7b97h(z)\n    theta1 = initial_theta.copy()\n    theta1[0] = 0\n\n    grad = np.dot(np.transpose(X),h-y)/m+inital_lambda/m*theta1 #\u6b63\u5219\u5316\u7684\u68af\u5ea6\n    return grad  \n```\n\n### 4\u3001S\u578b\u51fd\u6570\uff08\u5373![{{h_\\theta }(x)}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%7Bh_%5Ctheta%20%7D%28x%29%7D)\uff09\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# S\u578b\u51fd\u6570    \ndef sigmoid(z):\n    h = np.zeros((len(z),1))    # \u521d\u59cb\u5316\uff0c\u4e0ez\u7684\u957f\u5ea6\u4e00\u7f6e\n    \n    h = 1.0/(1.0+np.exp(-z))\n    return h\n```\n\n### 5\u3001\u6620\u5c04\u4e3a\u591a\u9879\u5f0f\n- \u56e0\u4e3a\u6570\u636e\u7684feture\u53ef\u80fd\u5f88\u5c11\uff0c\u5bfc\u81f4\u504f\u5dee\u5927\uff0c\u6240\u4ee5\u521b\u9020\u51fa\u4e00\u4e9bfeture\u7ed3\u5408\n- eg:\u6620\u5c04\u4e3a2\u6b21\u65b9\u7684\u5f62\u5f0f:![1 + {x_1} + {x_2} + x_1^2 + {x_1}{x_2} + x_2^2](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=1%20%2B%20%7Bx_1%7D%20%2B%20%7Bx_2%7D%20%2B%20x_1%5E2%20%2B%20%7Bx_1%7D%7Bx_2%7D%20%2B%20x_2%5E2)\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u6620\u5c04\u4e3a\u591a\u9879\u5f0f \ndef mapFeature(X1,X2):\n    degree = 3;                     # \u6620\u5c04\u7684\u6700\u9ad8\u6b21\u65b9\n    out = np.ones((X1.shape[0],1))  # \u6620\u5c04\u540e\u7684\u7ed3\u679c\u6570\u7ec4\uff08\u53d6\u4ee3X\uff09\n    '''\n    \u8fd9\u91cc\u4ee5degree=2\u4e3a\u4f8b\uff0c\u6620\u5c04\u4e3a1,x1,x2,x1^2,x1,x2,x2^2\n    '''\n    for i in np.arange(1,degree+1): \n        for j in range(i+1):\n            temp = X1**(i-j)*(X2**j)    #\u77e9\u9635\u76f4\u63a5\u4e58\u76f8\u5f53\u4e8ematlab\u4e2d\u7684\u70b9\u4e58.*\n            out = np.hstack((out, temp.reshape(-1,1)))\n    return out\n```\n\n### 6\u3001\u4f7f\u7528`scipy`\u7684\u4f18\u5316\u65b9\u6cd5\n- \u68af\u5ea6\u4e0b\u964d\u4f7f\u7528`scipy`\u4e2d`optimize`\u4e2d\u7684`fmin_bfgs`\u51fd\u6570\n- \u8c03\u7528scipy\u4e2d\u7684\u4f18\u5316\u7b97\u6cd5fmin_bfgs\uff08\u62df\u725b\u987f\u6cd5Broyden-Fletcher-Goldfarb-Shanno\n - costFunction\u662f\u81ea\u5df1\u5b9e\u73b0\u7684\u4e00\u4e2a\u6c42\u4ee3\u4ef7\u7684\u51fd\u6570\uff0c\n - initial_theta\u8868\u793a\u521d\u59cb\u5316\u7684\u503c,\n - fprime\u6307\u5b9acostFunction\u7684\u68af\u5ea6\n - args\u662f\u5176\u4f59\u6d4b\u53c2\u6570\uff0c\u4ee5\u5143\u7ec4\u7684\u5f62\u5f0f\u4f20\u5165\uff0c\u6700\u540e\u4f1a\u5c06\u6700\u5c0f\u5316costFunction\u7684theta\u8fd4\u56de \n```\n    result = optimize.fmin_bfgs(costFunction, initial_theta, fprime=gradient, args=(X,y,initial_lambda))    \n```   \n\n### 7\u3001\u8fd0\u884c\u7ed3\u679c\n- data1\u51b3\u7b56\u8fb9\u754c\u548c\u51c6\u786e\u5ea6  \n![enter description here][5]\n![enter description here][6]\n- data2\u51b3\u7b56\u8fb9\u754c\u548c\u51c6\u786e\u5ea6  \n![enter description here][7]\n![enter description here][8]\n\n### 8\u3001[\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u903b\u8f91\u56de\u5f52\u6a21\u578b\u5b9e\u73b0](/LogisticRegression/LogisticRegression_scikit-learn.py)\n- \u5bfc\u5165\u5305\n```\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cross_validation import train_test_split\nimport numpy as np\n```\n- \u5212\u5206\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\n```\n    # \u5212\u5206\u4e3a\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\n    x_train,x_test,y_train,y_test = train_test_split(X,y,test_size=0.2)\n```\n- \u5f52\u4e00\u5316\n```\n    # \u5f52\u4e00\u5316\n    scaler = StandardScaler()\n    x_train = scaler.fit_transform(x_train)\n    x_test = scaler.fit_transform(x_test)\n```\n- \u903b\u8f91\u56de\u5f52\n```\n    #\u903b\u8f91\u56de\u5f52\n    model = LogisticRegression()\n    model.fit(x_train,y_train)\n``` \n- \u9884\u6d4b\n```\n    # \u9884\u6d4b\n    predict = model.predict(x_test)\n    right = sum(predict == y_test)\n    \n    predict = np.hstack((predict.reshape(-1,1),y_test.reshape(-1,1)))   # \u5c06\u9884\u6d4b\u503c\u548c\u771f\u5b9e\u503c\u653e\u5728\u4e00\u5757\uff0c\u597d\u89c2\u5bdf\n    print predict\n    print ('\u6d4b\u8bd5\u96c6\u51c6\u786e\u7387\uff1a%f%%'%(right*100.0/predict.shape[0]))          #\u8ba1\u7b97\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u51c6\u786e\u5ea6\n```\n\n\n-------------\n\n## [\u903b\u8f91\u56de\u5f52_\u624b\u5199\u6570\u5b57\u8bc6\u522b_OneVsAll](/LogisticRegression)\n- [\u5168\u90e8\u4ee3\u7801](/LogisticRegression/LogisticRegression_OneVsAll.py)\n\n### 1\u3001\u968f\u673a\u663e\u793a100\u4e2a\u6570\u5b57\n- \u6211\u6ca1\u6709\u4f7f\u7528scikit-learn\u4e2d\u7684\u6570\u636e\u96c6\uff0c\u50cf\u7d20\u662f20*20px\uff0c\u5f69\u8272\u56fe\u5982\u4e0b\n![enter description here][9]\n\u7070\u5ea6\u56fe\uff1a\n![enter description here][10]\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u663e\u793a100\u4e2a\u6570\u5b57\ndef display_data(imgData):\n    sum = 0\n    '''\n    \u663e\u793a100\u4e2a\u6570\uff08\u82e5\u662f\u4e00\u4e2a\u4e00\u4e2a\u7ed8\u5236\u5c06\u4f1a\u975e\u5e38\u6162\uff0c\u53ef\u4ee5\u5c06\u8981\u753b\u7684\u6570\u5b57\u6574\u7406\u597d\uff0c\u653e\u5230\u4e00\u4e2a\u77e9\u9635\u4e2d\uff0c\u663e\u793a\u8fd9\u4e2a\u77e9\u9635\u5373\u53ef\uff09\n    - \u521d\u59cb\u5316\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\n    - \u5c06\u6bcf\u884c\u7684\u6570\u636e\u8c03\u6574\u6210\u56fe\u50cf\u7684\u77e9\u9635\uff0c\u653e\u8fdb\u4e8c\u7ef4\u6570\u7ec4\n    - \u663e\u793a\u5373\u53ef\n    '''\n    pad = 1\n    display_array = -np.ones((pad+10*(20+pad),pad+10*(20+pad)))\n    for i in range(10):\n        for j in range(10):\n            display_array[pad+i*(20+pad):pad+i*(20+pad)+20,pad+j*(20+pad):pad+j*(20+pad)+20] = (imgData[sum,:].reshape(20,20,order=\"F\"))    # order=F\u6307\u5b9a\u4ee5\u5217\u4f18\u5148\uff0c\u5728matlab\u4e2d\u662f\u8fd9\u6837\u7684\uff0cpython\u4e2d\u9700\u8981\u6307\u5b9a\uff0c\u9ed8\u8ba4\u4ee5\u884c\n            sum += 1\n            \n    plt.imshow(display_array,cmap='gray')   #\u663e\u793a\u7070\u5ea6\u56fe\u50cf\n    plt.axis('off')\n    plt.show()\n```\n\n### 2\u3001OneVsAll\n- \u5982\u4f55\u5229\u7528\u903b\u8f91\u56de\u5f52\u89e3\u51b3\u591a\u5206\u7c7b\u7684\u95ee\u9898\uff0cOneVsAll\u5c31\u662f\u628a\u5f53\u524d\u67d0\u4e00\u7c7b\u770b\u6210\u4e00\u7c7b\uff0c\u5176\u4ed6\u6240\u6709\u7c7b\u522b\u770b\u4f5c\u4e00\u7c7b\uff0c\u8fd9\u6837\u6709\u6210\u4e86\u4e8c\u5206\u7c7b\u7684\u95ee\u9898\u4e86\n- \u5982\u4e0b\u56fe\uff0c\u628a\u9014\u4e2d\u7684\u6570\u636e\u5206\u6210\u4e09\u7c7b\uff0c\u5148\u628a\u7ea2\u8272\u7684\u770b\u6210\u4e00\u7c7b\uff0c\u628a\u5176\u4ed6\u7684\u770b\u4f5c\u53e6\u5916\u4e00\u7c7b\uff0c\u8fdb\u884c\u903b\u8f91\u56de\u5f52\uff0c\u7136\u540e\u628a\u84dd\u8272\u7684\u770b\u6210\u4e00\u7c7b\uff0c\u5176\u4ed6\u7684\u518d\u770b\u6210\u4e00\u7c7b\uff0c\u4ee5\u6b64\u7c7b\u63a8...\n![enter description here][11]\n- \u53ef\u4ee5\u770b\u51fa\u5927\u4e8e2\u7c7b\u7684\u60c5\u51b5\u4e0b\uff0c\u6709\u591a\u5c11\u7c7b\u5c31\u8981\u8fdb\u884c\u591a\u5c11\u6b21\u7684\u903b\u8f91\u56de\u5f52\u5206\u7c7b\n\n### 3\u3001\u624b\u5199\u6570\u5b57\u8bc6\u522b\n- \u5171\u67090-9\uff0c10\u4e2a\u6570\u5b57\uff0c\u9700\u898110\u6b21\u5206\u7c7b\n- \u7531\u4e8e**\u6570\u636e\u96c6y**\u7ed9\u51fa\u7684\u662f`0,1,2...9`\u7684\u6570\u5b57\uff0c\u800c\u8fdb\u884c\u903b\u8f91\u56de\u5f52\u9700\u8981`0/1`\u7684label\u6807\u8bb0\uff0c\u6240\u4ee5\u9700\u8981\u5bf9y\u5904\u7406\n- \u8bf4\u4e00\u4e0b\u6570\u636e\u96c6\uff0c\u524d`500`\u4e2a\u662f`0`,`500-1000`\u662f`1`,`...`,\u6240\u4ee5\u5982\u4e0b\u56fe\uff0c\u5904\u7406\u540e\u7684`y`\uff0c**\u524d500\u884c\u7684\u7b2c\u4e00\u5217\u662f1\uff0c\u5176\u4f59\u90fd\u662f0,500-1000\u884c\u7b2c\u4e8c\u5217\u662f1\uff0c\u5176\u4f59\u90fd\u662f0....**\n![enter description here][12]\n- \u7136\u540e\u8c03\u7528**\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5**\u6c42\u89e3`theta`\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u6c42\u6bcf\u4e2a\u5206\u7c7b\u7684theta\uff0c\u6700\u540e\u8fd4\u56de\u6240\u6709\u7684all_theta    \ndef oneVsAll(X,y,num_labels,Lambda):\n    # \u521d\u59cb\u5316\u53d8\u91cf\n    m,n = X.shape\n    all_theta = np.zeros((n+1,num_labels))  # \u6bcf\u4e00\u5217\u5bf9\u5e94\u76f8\u5e94\u5206\u7c7b\u7684theta,\u517110\u5217\n    X = np.hstack((np.ones((m,1)),X))       # X\u524d\u8865\u4e0a\u4e00\u52171\u7684\u504f\u7f6ebias\n    class_y = np.zeros((m,num_labels))      # \u6570\u636e\u7684y\u5bf9\u5e940-9\uff0c\u9700\u8981\u6620\u5c04\u4e3a0/1\u7684\u5173\u7cfb\n    initial_theta = np.zeros((n+1,1))       # \u521d\u59cb\u5316\u4e00\u4e2a\u5206\u7c7b\u7684theta\n    \n    # \u6620\u5c04y\n    for i in range(num_labels):\n        class_y[:,i] = np.int32(y==i).reshape(1,-1) # \u6ce8\u610freshape(1,-1)\u624d\u53ef\u4ee5\u8d4b\u503c\n    \n    #np.savetxt(\"class_y.csv\", class_y[0:600,:], delimiter=',')    \n    \n    '''\u904d\u5386\u6bcf\u4e2a\u5206\u7c7b\uff0c\u8ba1\u7b97\u5bf9\u5e94\u7684theta\u503c'''\n    for i in range(num_labels):\n        result = optimize.fmin_bfgs(costFunction, initial_theta, fprime=gradient, args=(X,class_y[:,i],Lambda)) # \u8c03\u7528\u68af\u5ea6\u4e0b\u964d\u7684\u4f18\u5316\u65b9\u6cd5\n        all_theta[:,i] = result.reshape(1,-1)   # \u653e\u5165all_theta\u4e2d\n        \n    all_theta = np.transpose(all_theta) \n    return all_theta\n```\n\n### 4\u3001\u9884\u6d4b\n- \u4e4b\u524d\u8bf4\u8fc7\uff0c\u9884\u6d4b\u7684\u7ed3\u679c\u662f\u4e00\u4e2a**\u6982\u7387\u503c**\uff0c\u5229\u7528\u5b66\u4e60\u51fa\u6765\u7684`theta`\u4ee3\u5165\u9884\u6d4b\u7684**S\u578b\u51fd\u6570**\u4e2d\uff0c\u6bcf\u884c\u7684\u6700\u5927\u503c\u5c31\u662f\u662f\u67d0\u4e2a\u6570\u5b57\u7684\u6700\u5927\u6982\u7387\uff0c\u6240\u5728\u7684**\u5217\u53f7**\u5c31\u662f\u9884\u6d4b\u7684\u6570\u5b57\u7684\u771f\u5b9e\u503c,\u56e0\u4e3a\u5728\u5206\u7c7b\u65f6\uff0c\u6240\u6709\u4e3a`0`\u7684\u5c06`y`\u6620\u5c04\u5728\u7b2c\u4e00\u5217\uff0c\u4e3a1\u7684\u6620\u5c04\u5728\u7b2c\u4e8c\u5217\uff0c\u4f9d\u6b21\u7c7b\u63a8\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u9884\u6d4b\ndef predict_oneVsAll(all_theta,X):\n    m = X.shape[0]\n    num_labels = all_theta.shape[0]\n    p = np.zeros((m,1))\n    X = np.hstack((np.ones((m,1)),X))   #\u5728X\u6700\u524d\u9762\u52a0\u4e00\u52171\n    \n    h = sigmoid(np.dot(X,np.transpose(all_theta)))  #\u9884\u6d4b\n\n    '''\n    \u8fd4\u56deh\u4e2d\u6bcf\u4e00\u884c\u6700\u5927\u503c\u6240\u5728\u7684\u5217\u53f7\n    - np.max(h, axis=1)\u8fd4\u56deh\u4e2d\u6bcf\u4e00\u884c\u7684\u6700\u5927\u503c\uff08\u662f\u67d0\u4e2a\u6570\u5b57\u7684\u6700\u5927\u6982\u7387\uff09\n    - \u6700\u540ewhere\u627e\u5230\u7684\u6700\u5927\u6982\u7387\u6240\u5728\u7684\u5217\u53f7\uff08\u5217\u53f7\u5373\u662f\u5bf9\u5e94\u7684\u6570\u5b57\uff09\n    '''\n    p = np.array(np.where(h[0,:] == np.max(h, axis=1)[0]))  \n    for i in np.arange(1, m):\n        t = np.array(np.where(h[i,:] == np.max(h, axis=1)[i]))\n        p = np.vstack((p,t))\n    return p\n```\n\n### 5\u3001\u8fd0\u884c\u7ed3\u679c\n- 10\u6b21\u5206\u7c7b\uff0c\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u5ea6\uff1a   \n![enter description here][13]\n\n### 6\u3001[\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u903b\u8f91\u56de\u5f52\u6a21\u578b\u5b9e\u73b0](/LogisticRegression/LogisticRegression_OneVsAll_scikit-learn.py)\n- 1\u3001\u5bfc\u5165\u5305\n```\nfrom scipy import io as spio\nimport numpy as np\nfrom sklearn import svm\nfrom sklearn.linear_model import LogisticRegression\n```\n- 2\u3001\u52a0\u8f7d\u6570\u636e\n```\n    data = loadmat_data(\"data_digits.mat\") \n    X = data['X']   # \u83b7\u53d6X\u6570\u636e\uff0c\u6bcf\u4e00\u884c\u5bf9\u5e94\u4e00\u4e2a\u6570\u5b5720x20px\n    y = data['y']   # \u8fd9\u91cc\u8bfb\u53d6mat\u6587\u4ef6y\u7684shape=(5000, 1)\n    y = np.ravel(y) # \u8c03\u7528sklearn\u9700\u8981\u8f6c\u5316\u6210\u4e00\u7ef4\u7684(5000,)\n```\n- 3\u3001\u62df\u5408\u6a21\u578b\n```\n    model = LogisticRegression()\n    model.fit(X, y) # \u62df\u5408\n```\n- 4\u3001\u9884\u6d4b\n```\n    predict = model.predict(X) #\u9884\u6d4b\n    \n    print u\"\u9884\u6d4b\u51c6\u786e\u5ea6\u4e3a\uff1a%f%%\"%np.mean(np.float64(predict == y)*100)\n```\n- 5\u3001\u8f93\u51fa\u7ed3\u679c\uff08\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u5ea6\uff09\n![enter description here][14]\n\n\n----------\n\n## \u4e09\u3001BP\u795e\u7ecf\u7f51\u7edc\n- [\u5168\u90e8\u4ee3\u7801](/NeuralNetwok/NeuralNetwork.py)\n\n### 1\u3001\u795e\u7ecf\u7f51\u7edcmodel\n- \u5148\u4ecb\u7ecd\u4e2a\u4e09\u5c42\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u5982\u4e0b\u56fe\u6240\u793a\n - \u8f93\u5165\u5c42\uff08input layer\uff09\u6709\u4e09\u4e2aunits\uff08![{x_0}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bx_0%7D)\u4e3a\u8865\u4e0a\u7684bias\uff0c\u901a\u5e38\u8bbe\u4e3a`1`\uff09\n - ![a_i^{(j)}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=a_i%5E%7B%28j%29%7D)\u8868\u793a\u7b2c`j`\u5c42\u7684\u7b2c`i`\u4e2a\u6fc0\u52b1\uff0c\u4e5f\u79f0\u4e3a\u4e3a\u5355\u5143unit\n - ![{\\theta ^{(j)}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Ctheta%20%5E%7B%28j%29%7D%7D)\u4e3a\u7b2c`j`\u5c42\u5230\u7b2c`j+1`\u5c42\u6620\u5c04\u7684\u6743\u91cd\u77e9\u9635\uff0c\u5c31\u662f\u6bcf\u6761\u8fb9\u7684\u6743\u91cd\n![enter description here][15]\n\n- \u6240\u4ee5\u53ef\u4ee5\u5f97\u5230\uff1a\n - \u9690\u542b\u5c42\uff1a  \n![a_1^{(2)} = g(\\theta _{10}^{(1)}{x_0} + \\theta _{11}^{(1)}{x_1} + \\theta _{12}^{(1)}{x_2} + \\theta _{13}^{(1)}{x_3})](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=a_1%5E%7B%282%29%7D%20%3D%20g%28%5Ctheta%20_%7B10%7D%5E%7B%281%29%7D%7Bx_0%7D%20%2B%20%5Ctheta%20_%7B11%7D%5E%7B%281%29%7D%7Bx_1%7D%20%2B%20%5Ctheta%20_%7B12%7D%5E%7B%281%29%7D%7Bx_2%7D%20%2B%20%5Ctheta%20_%7B13%7D%5E%7B%281%29%7D%7Bx_3%7D%29)   \n![a_2^{(2)} = g(\\theta _{20}^{(1)}{x_0} + \\theta _{21}^{(1)}{x_1} + \\theta _{22}^{(1)}{x_2} + \\theta _{23}^{(1)}{x_3})](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=a_2%5E%7B%282%29%7D%20%3D%20g%28%5Ctheta%20_%7B20%7D%5E%7B%281%29%7D%7Bx_0%7D%20%2B%20%5Ctheta%20_%7B21%7D%5E%7B%281%29%7D%7Bx_1%7D%20%2B%20%5Ctheta%20_%7B22%7D%5E%7B%281%29%7D%7Bx_2%7D%20%2B%20%5Ctheta%20_%7B23%7D%5E%7B%281%29%7D%7Bx_3%7D%29)   \n![a_3^{(2)} = g(\\theta _{30}^{(1)}{x_0} + \\theta _{31}^{(1)}{x_1} + \\theta _{32}^{(1)}{x_2} + \\theta _{33}^{(1)}{x_3})](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=a_3%5E%7B%282%29%7D%20%3D%20g%28%5Ctheta%20_%7B30%7D%5E%7B%281%29%7D%7Bx_0%7D%20%2B%20%5Ctheta%20_%7B31%7D%5E%7B%281%29%7D%7Bx_1%7D%20%2B%20%5Ctheta%20_%7B32%7D%5E%7B%281%29%7D%7Bx_2%7D%20%2B%20%5Ctheta%20_%7B33%7D%5E%7B%281%29%7D%7Bx_3%7D%29)\n - \u8f93\u51fa\u5c42   \n![{h_\\theta }(x) = a_1^{(3)} = g(\\theta _{10}^{(2)}a_0^{(2)} + \\theta _{11}^{(2)}a_1^{(2)} + \\theta _{12}^{(2)}a_2^{(2)} + \\theta _{13}^{(2)}a_3^{(2)})](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bh_%5Ctheta%20%7D%28x%29%20%3D%20a_1%5E%7B%283%29%7D%20%3D%20g%28%5Ctheta%20_%7B10%7D%5E%7B%282%29%7Da_0%5E%7B%282%29%7D%20%2B%20%5Ctheta%20_%7B11%7D%5E%7B%282%29%7Da_1%5E%7B%282%29%7D%20%2B%20%5Ctheta%20_%7B12%7D%5E%7B%282%29%7Da_2%5E%7B%282%29%7D%20%2B%20%5Ctheta%20_%7B13%7D%5E%7B%282%29%7Da_3%5E%7B%282%29%7D%29) \u5176\u4e2d\uff0c**S\u578b\u51fd\u6570**![g(z) = \\frac{1}{{1 + {e^{ - z}}}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=g%28z%29%20%3D%20%5Cfrac%7B1%7D%7B%7B1%20%2B%20%7Be%5E%7B%20-%20z%7D%7D%7D%7D)\uff0c\u4e5f\u6210\u4e3a**\u6fc0\u52b1\u51fd\u6570**\n- \u53ef\u4ee5\u770b\u51fa![{\\theta ^{(1)}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Ctheta%20%5E%7B%281%29%7D%7D) \u4e3a3x4\u7684\u77e9\u9635\uff0c![{\\theta ^{(2)}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Ctheta%20%5E%7B%282%29%7D%7D)\u4e3a1x4\u7684\u77e9\u9635\n - ![{\\theta ^{(j)}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Ctheta%20%5E%7B%28j%29%7D%7D) ==\u300b`j+1`\u7684\u5355\u5143\u6570x\uff08`j`\u5c42\u7684\u5355\u5143\u6570+1\uff09\n\n### 2\u3001\u4ee3\u4ef7\u51fd\u6570\n- \u5047\u8bbe\u6700\u540e\u8f93\u51fa\u7684![{h_\\Theta }(x) \\in {R^K}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bh_%5CTheta%20%7D%28x%29%20%5Cin%20%7BR%5EK%7D)\uff0c\u5373\u4ee3\u8868\u8f93\u51fa\u5c42\u6709K\u4e2a\u5355\u5143\n- ![J(\\Theta ) =  - \\frac{1}{m}\\sum\\limits_{i = 1}^m {\\sum\\limits_{k = 1}^K {[y_k^{(i)}\\log {{({h_\\Theta }({x^{(i)}}))}_k}} }  + (1 - y_k^{(i)})\\log {(1 - {h_\\Theta }({x^{(i)}}))_k}]](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%5CTheta%20%29%20%3D%20%20-%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5Csum%5Climits_%7Bk%20%3D%201%7D%5EK%20%7B%5By_k%5E%7B%28i%29%7D%5Clog%20%7B%7B%28%7Bh_%5CTheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%29%7D_k%7D%7D%20%7D%20%20%2B%20%281%20-%20y_k%5E%7B%28i%29%7D%29%5Clog%20%7B%281%20-%20%7Bh_%5CTheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%29_k%7D%5D) \u5176\u4e2d\uff0c![{({h_\\Theta }(x))_i}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%28%7Bh_%5CTheta%20%7D%28x%29%29_i%7D)\u4ee3\u8868\u7b2c`i`\u4e2a\u5355\u5143\u8f93\u51fa\n- \u4e0e\u903b\u8f91\u56de\u5f52\u7684\u4ee3\u4ef7\u51fd\u6570![J(\\theta ) =  - \\frac{1}{m}\\sum\\limits_{i = 1}^m {[{y^{(i)}}\\log ({h_\\theta }({x^{(i)}}) + (1 - } {y^{(i)}})\\log (1 - {h_\\theta }({x^{(i)}})]](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%5Ctheta%20%29%20%3D%20%20-%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%7By%5E%7B%28i%29%7D%7D%5Clog%20%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20%2B%20%281%20-%20%7D%20%7By%5E%7B%28i%29%7D%7D%29%5Clog%20%281%20-%20%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%5D)\u5dee\u4e0d\u591a\uff0c\u5c31\u662f\u7d2f\u52a0\u4e0a\u6bcf\u4e2a\u8f93\u51fa\uff08\u5171\u6709K\u4e2a\u8f93\u51fa\uff09\n\n\n\n### 3\u3001\u6b63\u5219\u5316\n- `L`-->\u6240\u6709\u5c42\u7684\u4e2a\u6570\n- ![{S_l}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7BS_l%7D)-->\u7b2c`l`\u5c42unit\u7684\u4e2a\u6570\n- \u6b63\u5219\u5316\u540e\u7684**\u4ee3\u4ef7\u51fd\u6570**\u4e3a  \n![enter description here][16]\n - ![\\theta ](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Ctheta%20)\u5171\u6709`L-1`\u5c42\uff0c\n - \u7136\u540e\u662f\u7d2f\u52a0\u5bf9\u5e94\u6bcf\u4e00\u5c42\u7684theta\u77e9\u9635\uff0c\u6ce8\u610f\u4e0d\u5305\u542b\u52a0\u4e0a\u504f\u7f6e\u9879\u5bf9\u5e94\u7684theta(0)\n- \u6b63\u5219\u5316\u540e\u7684\u4ee3\u4ef7\u51fd\u6570\u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u4ee3\u4ef7\u51fd\u6570\ndef nnCostFunction(nn_params,input_layer_size,hidden_layer_size,num_labels,X,y,Lambda):\n    length = nn_params.shape[0] # theta\u7684\u4e2d\u957f\u5ea6\n    # \u8fd8\u539ftheta1\u548ctheta2\n    Theta1 = nn_params[0:hidden_layer_size*(input_layer_size+1)].reshape(hidden_layer_size,input_layer_size+1)\n    Theta2 = nn_params[hidden_layer_size*(input_layer_size+1):length].reshape(num_labels,hidden_layer_size+1)\n    \n    # np.savetxt(\"Theta1.csv\",Theta1,delimiter=',')\n    \n    m = X.shape[0]\n    class_y = np.zeros((m,num_labels))      # \u6570\u636e\u7684y\u5bf9\u5e940-9\uff0c\u9700\u8981\u6620\u5c04\u4e3a0/1\u7684\u5173\u7cfb\n    # \u6620\u5c04y\n    for i in range(num_labels):\n        class_y[:,i] = np.int32(y==i).reshape(1,-1) # \u6ce8\u610freshape(1,-1)\u624d\u53ef\u4ee5\u8d4b\u503c\n     \n    '''\u53bb\u6389theta1\u548ctheta2\u7684\u7b2c\u4e00\u5217\uff0c\u56e0\u4e3a\u6b63\u5219\u5316\u65f6\u4ece1\u5f00\u59cb'''    \n    Theta1_colCount = Theta1.shape[1]    \n    Theta1_x = Theta1[:,1:Theta1_colCount]\n    Theta2_colCount = Theta2.shape[1]    \n    Theta2_x = Theta2[:,1:Theta2_colCount]\n    # \u6b63\u5219\u5316\u5411theta^2\n    term = np.dot(np.transpose(np.vstack((Theta1_x.reshape(-1,1),Theta2_x.reshape(-1,1)))),np.vstack((Theta1_x.reshape(-1,1),Theta2_x.reshape(-1,1))))\n    \n    '''\u6b63\u5411\u4f20\u64ad,\u6bcf\u6b21\u9700\u8981\u8865\u4e0a\u4e00\u52171\u7684\u504f\u7f6ebias'''\n    a1 = np.hstack((np.ones((m,1)),X))      \n    z2 = np.dot(a1,np.transpose(Theta1))    \n    a2 = sigmoid(z2)\n    a2 = np.hstack((np.ones((m,1)),a2))\n    z3 = np.dot(a2,np.transpose(Theta2))\n    h  = sigmoid(z3)    \n    '''\u4ee3\u4ef7'''    \n    J = -(np.dot(np.transpose(class_y.reshape(-1,1)),np.log(h.reshape(-1,1)))+np.dot(np.transpose(1-class_y.reshape(-1,1)),np.log(1-h.reshape(-1,1)))-Lambda*term/2)/m   \n    \n    return np.ravel(J)\n```\n\n### 4\u3001\u53cd\u5411\u4f20\u64adBP\n- \u4e0a\u9762\u6b63\u5411\u4f20\u64ad\u53ef\u4ee5\u8ba1\u7b97\u5f97\u5230`J(\u03b8)`,\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\u8fd8\u9700\u8981\u6c42\u5b83\u7684\u68af\u5ea6\n- BP\u53cd\u5411\u4f20\u64ad\u7684\u76ee\u7684\u5c31\u662f\u6c42\u4ee3\u4ef7\u51fd\u6570\u7684\u68af\u5ea6\n- \u5047\u8bbe4\u5c42\u7684\u795e\u7ecf\u7f51\u7edc,![\\delta _{\\text{j}}^{(l)}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Cdelta%20_%7B%5Ctext%7Bj%7D%7D%5E%7B%28l%29%7D)\u8bb0\u4e3a-->`l`\u5c42\u7b2c`j`\u4e2a\u5355\u5143\u7684\u8bef\u5dee\n - ![\\delta _{\\text{j}}^{(4)} = a_j^{(4)} - {y_i}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Cdelta%20_%7B%5Ctext%7Bj%7D%7D%5E%7B%284%29%7D%20%3D%20a_j%5E%7B%284%29%7D%20-%20%7By_i%7D)\u300a===\u300b![{\\delta ^{(4)}} = {a^{(4)}} - y](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Cdelta%20%5E%7B%284%29%7D%7D%20%3D%20%7Ba%5E%7B%284%29%7D%7D%20-%20y)\uff08\u5411\u91cf\u5316\uff09\n - ![{\\delta ^{(3)}} = {({\\theta ^{(3)}})^T}{\\delta ^{(4)}}.*{g^}({a^{(3)}})](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Cdelta%20%5E%7B%283%29%7D%7D%20%3D%20%7B%28%7B%5Ctheta%20%5E%7B%283%29%7D%7D%29%5ET%7D%7B%5Cdelta%20%5E%7B%284%29%7D%7D.%2A%7Bg%5E%7D%28%7Ba%5E%7B%283%29%7D%7D%29)\n - ![{\\delta ^{(2)}} = {({\\theta ^{(2)}})^T}{\\delta ^{(3)}}.*{g^}({a^{(2)}})](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Cdelta%20%5E%7B%282%29%7D%7D%20%3D%20%7B%28%7B%5Ctheta%20%5E%7B%282%29%7D%7D%29%5ET%7D%7B%5Cdelta%20%5E%7B%283%29%7D%7D.%2A%7Bg%5E%7D%28%7Ba%5E%7B%282%29%7D%7D%29)\n - \u6ca1\u6709![{\\delta ^{(1)}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Cdelta%20%5E%7B%281%29%7D%7D)\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u8f93\u5165\u6ca1\u6709\u8bef\u5dee\n- \u56e0\u4e3aS\u578b\u51fd\u6570![{\\text{g(z)}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Ctext%7Bg%28z%29%7D%7D)\u7684\u5bfc\u6570\u4e3a\uff1a![{g^}(z){\\text{ = g(z)(1 - g(z))}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bg%5E%7D%28z%29%7B%5Ctext%7B%20%3D%20g%28z%29%281%20-%20g%28z%29%29%7D%7D)\uff0c\u6240\u4ee5\u4e0a\u9762\u7684![{g^}({a^{(3)}})](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bg%5E%7D%28%7Ba%5E%7B%283%29%7D%7D%29)\u548c![{g^}({a^{(2)}})](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bg%5E%7D%28%7Ba%5E%7B%282%29%7D%7D%29)\u53ef\u4ee5\u5728\u524d\u5411\u4f20\u64ad\u4e2d\u8ba1\u7b97\u51fa\u6765\n\n- \u53cd\u5411\u4f20\u64ad\u8ba1\u7b97\u68af\u5ea6\u7684\u8fc7\u7a0b\u4e3a\uff1a\n - ![\\Delta _{ij}^{(l)} = 0](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5CDelta%20_%7Bij%7D%5E%7B%28l%29%7D%20%3D%200)\uff08![\\Delta ](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5CDelta%20)\u662f\u5927\u5199\u7684![\\delta ](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Cdelta%20)\uff09\n - for i=1-m:     \n -![{a^{(1)}} = {x^{(i)}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Ba%5E%7B%281%29%7D%7D%20%3D%20%7Bx%5E%7B%28i%29%7D%7D)       \n-\u6b63\u5411\u4f20\u64ad\u8ba1\u7b97![{a^{(l)}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Ba%5E%7B%28l%29%7D%7D)\uff08l=2,3,4...L\uff09      \n-\u53cd\u5411\u8ba1\u7b97![{\\delta ^{(L)}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Cdelta%20%5E%7B%28L%29%7D%7D)\u3001![{\\delta ^{(L - 1)}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Cdelta%20%5E%7B%28L%20-%201%29%7D%7D)...![{\\delta ^{(2)}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Cdelta%20%5E%7B%282%29%7D%7D)\uff1b       \n-![\\Delta _{ij}^{(l)} = \\Delta _{ij}^{(l)} + a_j^{(l)}{\\delta ^{(l + 1)}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5CDelta%20_%7Bij%7D%5E%7B%28l%29%7D%20%3D%20%5CDelta%20_%7Bij%7D%5E%7B%28l%29%7D%20%2B%20a_j%5E%7B%28l%29%7D%7B%5Cdelta%20%5E%7B%28l%20%2B%201%29%7D%7D)          \n-![D_{ij}^{(l)} = \\frac{1}{m}\\Delta _{ij}^{(l)} + \\lambda \\theta _{ij}^l\\begin{array}{c}    {}&amp; {(j \\ne 0)}  \\end{array} ](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=D_%7Bij%7D%5E%7B%28l%29%7D%20%3D%20%5Cfrac%7B1%7D%7Bm%7D%5CDelta%20_%7Bij%7D%5E%7B%28l%29%7D%20%2B%20%5Clambda%20%5Ctheta%20_%7Bij%7D%5El%5Cbegin%7Barray%7D%7Bc%7D%20%20%20%20%7B%7D%26%20%7B%28j%20%5Cne%200%29%7D%20%20%5Cend%7Barray%7D%20)      \n![D_{ij}^{(l)} = \\frac{1}{m}\\Delta _{ij}^{(l)} + \\lambda \\theta _{ij}^lj = 0\\begin{array}{c}    {}&amp; {j = 0}  \\end{array} ](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=D_%7Bij%7D%5E%7B%28l%29%7D%20%3D%20%5Cfrac%7B1%7D%7Bm%7D%5CDelta%20_%7Bij%7D%5E%7B%28l%29%7D%20%2B%20%5Clambda%20%5Ctheta%20_%7Bij%7D%5Elj%20%3D%200%5Cbegin%7Barray%7D%7Bc%7D%20%20%20%20%7B%7D%26%20%7Bj%20%3D%200%7D%20%20%5Cend%7Barray%7D%20)     \n\n- \u6700\u540e![\\frac{{\\partial J(\\Theta )}}{{\\partial \\Theta _{ij}^{(l)}}} = D_{ij}^{(l)}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Cfrac%7B%7B%5Cpartial%20J%28%5CTheta%20%29%7D%7D%7B%7B%5Cpartial%20%5CTheta%20_%7Bij%7D%5E%7B%28l%29%7D%7D%7D%20%3D%20D_%7Bij%7D%5E%7B%28l%29%7D)\uff0c\u5373\u5f97\u5230\u4ee3\u4ef7\u51fd\u6570\u7684\u68af\u5ea6\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u68af\u5ea6\ndef nnGradient(nn_params,input_layer_size,hidden_layer_size,num_labels,X,y,Lambda):\n    length = nn_params.shape[0]\n    Theta1 = nn_params[0:hidden_layer_size*(input_layer_size+1)].reshape(hidden_layer_size,input_layer_size+1).copy()   # \u8fd9\u91cc\u4f7f\u7528copy\u51fd\u6570\uff0c\u5426\u5219\u4e0b\u9762\u4fee\u6539Theta\u7684\u503c\uff0cnn_params\u4e5f\u4f1a\u4e00\u8d77\u4fee\u6539\n    Theta2 = nn_params[hidden_layer_size*(input_layer_size+1):length].reshape(num_labels,hidden_layer_size+1).copy()\n    m = X.shape[0]\n    class_y = np.zeros((m,num_labels))      # \u6570\u636e\u7684y\u5bf9\u5e940-9\uff0c\u9700\u8981\u6620\u5c04\u4e3a0/1\u7684\u5173\u7cfb    \n    # \u6620\u5c04y\n    for i in range(num_labels):\n        class_y[:,i] = np.int32(y==i).reshape(1,-1) # \u6ce8\u610freshape(1,-1)\u624d\u53ef\u4ee5\u8d4b\u503c\n     \n    '''\u53bb\u6389theta1\u548ctheta2\u7684\u7b2c\u4e00\u5217\uff0c\u56e0\u4e3a\u6b63\u5219\u5316\u65f6\u4ece1\u5f00\u59cb'''\n    Theta1_colCount = Theta1.shape[1]    \n    Theta1_x = Theta1[:,1:Theta1_colCount]\n    Theta2_colCount = Theta2.shape[1]    \n    Theta2_x = Theta2[:,1:Theta2_colCount]\n    \n    Theta1_grad = np.zeros((Theta1.shape))  #\u7b2c\u4e00\u5c42\u5230\u7b2c\u4e8c\u5c42\u7684\u6743\u91cd\n    Theta2_grad = np.zeros((Theta2.shape))  #\u7b2c\u4e8c\u5c42\u5230\u7b2c\u4e09\u5c42\u7684\u6743\u91cd\n      \n   \n    '''\u6b63\u5411\u4f20\u64ad\uff0c\u6bcf\u6b21\u9700\u8981\u8865\u4e0a\u4e00\u52171\u7684\u504f\u7f6ebias'''\n    a1 = np.hstack((np.ones((m,1)),X))\n    z2 = np.dot(a1,np.transpose(Theta1))\n    a2 = sigmoid(z2)\n    a2 = np.hstack((np.ones((m,1)),a2))\n    z3 = np.dot(a2,np.transpose(Theta2))\n    h  = sigmoid(z3)\n    \n    \n    '''\u53cd\u5411\u4f20\u64ad\uff0cdelta\u4e3a\u8bef\u5dee\uff0c'''\n    delta3 = np.zeros((m,num_labels))\n    delta2 = np.zeros((m,hidden_layer_size))\n    for i in range(m):\n        #delta3[i,:] = (h[i,:]-class_y[i,:])*sigmoidGradient(z3[i,:])  # \u5747\u65b9\u8bef\u5dee\u7684\u8bef\u5dee\u7387\n        delta3[i,:] = h[i,:]-class_y[i,:]                              # \u4ea4\u53c9\u71b5\u8bef\u5dee\u7387\n        Theta2_grad = Theta2_grad+np.dot(np.transpose(delta3[i,:].reshape(1,-1)),a2[i,:].reshape(1,-1))\n        delta2[i,:] = np.dot(delta3[i,:].reshape(1,-1),Theta2_x)*sigmoidGradient(z2[i,:])\n        Theta1_grad = Theta1_grad+np.dot(np.transpose(delta2[i,:].reshape(1,-1)),a1[i,:].reshape(1,-1))\n    \n    Theta1[:,0] = 0\n    Theta2[:,0] = 0          \n    '''\u68af\u5ea6'''\n    grad = (np.vstack((Theta1_grad.reshape(-1,1),Theta2_grad.reshape(-1,1)))+Lambda*np.vstack((Theta1.reshape(-1,1),Theta2.reshape(-1,1))))/m\n    return np.ravel(grad)\n```\n\n### 5\u3001BP\u53ef\u4ee5\u6c42\u68af\u5ea6\u7684\u539f\u56e0\n- \u5b9e\u9645\u662f\u5229\u7528\u4e86`\u94fe\u5f0f\u6c42\u5bfc`\u6cd5\u5219\n- \u56e0\u4e3a\u4e0b\u4e00\u5c42\u7684\u5355\u5143\u5229\u7528\u4e0a\u4e00\u5c42\u7684\u5355\u5143\u4f5c\u4e3a\u8f93\u5165\u8fdb\u884c\u8ba1\u7b97\n- \u5927\u4f53\u7684\u63a8\u5bfc\u8fc7\u7a0b\u5982\u4e0b\uff0c\u6700\u7ec8\u6211\u4eec\u662f\u60f3\u9884\u6d4b\u51fd\u6570\u4e0e\u5df2\u77e5\u7684`y`\u975e\u5e38\u63a5\u8fd1\uff0c\u6c42\u5747\u65b9\u5dee\u7684\u68af\u5ea6\u6cbf\u7740\u6b64\u68af\u5ea6\u65b9\u5411\u53ef\u4f7f\u4ee3\u4ef7\u51fd\u6570\u6700\u5c0f\u5316\u3002\u53ef\u5bf9\u7167\u4e0a\u9762\u6c42\u68af\u5ea6\u7684\u8fc7\u7a0b\u3002\n![enter description here][17]\n- \u6c42\u8bef\u5dee\u66f4\u8be6\u7ec6\u7684\u63a8\u5bfc\u8fc7\u7a0b\uff1a\n![enter description here][18]\n\n### 6\u3001\u68af\u5ea6\u68c0\u67e5\n- \u68c0\u67e5\u5229\u7528`BP`\u6c42\u7684\u68af\u5ea6\u662f\u5426\u6b63\u786e\n- \u5229\u7528\u5bfc\u6570\u7684\u5b9a\u4e49\u9a8c\u8bc1\uff1a\n![\\frac{{dJ(\\theta )}}{{d\\theta }} \\approx \\frac{{J(\\theta  + \\varepsilon ) - J(\\theta  - \\varepsilon )}}{{2\\varepsilon }}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Cfrac%7B%7BdJ%28%5Ctheta%20%29%7D%7D%7B%7Bd%5Ctheta%20%7D%7D%20%5Capprox%20%5Cfrac%7B%7BJ%28%5Ctheta%20%20%2B%20%5Cvarepsilon%20%29%20-%20J%28%5Ctheta%20%20-%20%5Cvarepsilon%20%29%7D%7D%7B%7B2%5Cvarepsilon%20%7D%7D)\n- \u6c42\u51fa\u6765\u7684\u6570\u503c\u68af\u5ea6\u5e94\u8be5\u4e0eBP\u6c42\u51fa\u7684\u68af\u5ea6\u975e\u5e38\u63a5\u8fd1\n- \u9a8c\u8bc1BP\u6b63\u786e\u540e\u5c31\u4e0d\u9700\u8981\u518d\u6267\u884c\u9a8c\u8bc1\u68af\u5ea6\u7684\u7b97\u6cd5\u4e86\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u68c0\u9a8c\u68af\u5ea6\u662f\u5426\u8ba1\u7b97\u6b63\u786e\n# \u68c0\u9a8c\u68af\u5ea6\u662f\u5426\u8ba1\u7b97\u6b63\u786e\ndef checkGradient(Lambda = 0):\n    '''\u6784\u9020\u4e00\u4e2a\u5c0f\u578b\u7684\u795e\u7ecf\u7f51\u7edc\u9a8c\u8bc1\uff0c\u56e0\u4e3a\u6570\u503c\u6cd5\u8ba1\u7b97\u68af\u5ea6\u5f88\u6d6a\u8d39\u65f6\u95f4\uff0c\u800c\u4e14\u9a8c\u8bc1\u6b63\u786e\u540e\u4e4b\u540e\u5c31\u4e0d\u518d\u9700\u8981\u9a8c\u8bc1\u4e86'''\n    input_layer_size = 3\n    hidden_layer_size = 5\n    num_labels = 3\n    m = 5\n    initial_Theta1 = debugInitializeWeights(input_layer_size,hidden_layer_size); \n    initial_Theta2 = debugInitializeWeights(hidden_layer_size,num_labels)\n    X = debugInitializeWeights(input_layer_size-1,m)\n    y = 1+np.transpose(np.mod(np.arange(1,m+1), num_labels))# \u521d\u59cb\u5316y\n    \n    y = y.reshape(-1,1)\n    nn_params = np.vstack((initial_Theta1.reshape(-1,1),initial_Theta2.reshape(-1,1)))  #\u5c55\u5f00theta \n    '''BP\u6c42\u51fa\u68af\u5ea6'''\n    grad = nnGradient(nn_params, input_layer_size, hidden_layer_size, \n                     num_labels, X, y, Lambda)  \n    '''\u4f7f\u7528\u6570\u503c\u6cd5\u8ba1\u7b97\u68af\u5ea6'''\n    num_grad = np.zeros((nn_params.shape[0]))\n    step = np.zeros((nn_params.shape[0]))\n    e = 1e-4\n    for i in range(nn_params.shape[0]):\n        step[i] = e\n        loss1 = nnCostFunction(nn_params-step.reshape(-1,1), input_layer_size, hidden_layer_size, \n                              num_labels, X, y, \n                              Lambda)\n        loss2 = nnCostFunction(nn_params+step.reshape(-1,1), input_layer_size, hidden_layer_size, \n                              num_labels, X, y, \n                              Lambda)\n        num_grad[i] = (loss2-loss1)/(2*e)\n        step[i]=0\n    # \u663e\u793a\u4e24\u5217\u6bd4\u8f83\n    res = np.hstack((num_grad.reshape(-1,1),grad.reshape(-1,1)))\n    print res\n```\n\n### 7\u3001\u6743\u91cd\u7684\u968f\u673a\u521d\u59cb\u5316\n- \u795e\u7ecf\u7f51\u7edc\u4e0d\u80fd\u50cf\u903b\u8f91\u56de\u5f52\u90a3\u6837\u521d\u59cb\u5316`theta`\u4e3a`0`,\u56e0\u4e3a\u82e5\u662f\u6bcf\u6761\u8fb9\u7684\u6743\u91cd\u90fd\u4e3a0\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u90fd\u662f\u76f8\u540c\u7684\u8f93\u51fa\uff0c\u5728\u53cd\u5411\u4f20\u64ad\u4e2d\u4e5f\u4f1a\u5f97\u5230\u540c\u6837\u7684\u68af\u5ea6\uff0c\u6700\u7ec8\u53ea\u4f1a\u9884\u6d4b\u4e00\u79cd\u7ed3\u679c\u3002\n- \u6240\u4ee5\u5e94\u8be5\u521d\u59cb\u5316\u4e3a\u63a5\u8fd10\u7684\u6570\n- \u5b9e\u73b0\u4ee3\u7801\n```\n# \u968f\u673a\u521d\u59cb\u5316\u6743\u91cdtheta\ndef randInitializeWeights(L_in,L_out):\n    W = np.zeros((L_out,1+L_in))    # \u5bf9\u5e94theta\u7684\u6743\u91cd\n    epsilon_init = (6.0/(L_out+L_in))**0.5\n    W = np.random.rand(L_out,1+L_in)*2*epsilon_init-epsilon_init # np.random.rand(L_out,1+L_in)\u4ea7\u751fL_out*(1+L_in)\u5927\u5c0f\u7684\u968f\u673a\u77e9\u9635\n    return W\n```\n\n### 8\u3001\u9884\u6d4b\n- \u6b63\u5411\u4f20\u64ad\u9884\u6d4b\u7ed3\u679c\n- \u5b9e\u73b0\u4ee3\u7801\n```\n# \u9884\u6d4b\ndef predict(Theta1,Theta2,X):\n    m = X.shape[0]\n    num_labels = Theta2.shape[0]\n    #p = np.zeros((m,1))\n    '''\u6b63\u5411\u4f20\u64ad\uff0c\u9884\u6d4b\u7ed3\u679c'''\n    X = np.hstack((np.ones((m,1)),X))\n    h1 = sigmoid(np.dot(X,np.transpose(Theta1)))\n    h1 = np.hstack((np.ones((m,1)),h1))\n    h2 = sigmoid(np.dot(h1,np.transpose(Theta2)))\n    \n    '''\n    \u8fd4\u56deh\u4e2d\u6bcf\u4e00\u884c\u6700\u5927\u503c\u6240\u5728\u7684\u5217\u53f7\n    - np.max(h, axis=1)\u8fd4\u56deh\u4e2d\u6bcf\u4e00\u884c\u7684\u6700\u5927\u503c\uff08\u662f\u67d0\u4e2a\u6570\u5b57\u7684\u6700\u5927\u6982\u7387\uff09\n    - \u6700\u540ewhere\u627e\u5230\u7684\u6700\u5927\u6982\u7387\u6240\u5728\u7684\u5217\u53f7\uff08\u5217\u53f7\u5373\u662f\u5bf9\u5e94\u7684\u6570\u5b57\uff09\n    '''\n    #np.savetxt(\"h2.csv\",h2,delimiter=',')\n    p = np.array(np.where(h2[0,:] == np.max(h2, axis=1)[0]))  \n    for i in np.arange(1, m):\n        t = np.array(np.where(h2[i,:] == np.max(h2, axis=1)[i]))\n        p = np.vstack((p,t))\n    return p \n```\n\n### 9\u3001\u8f93\u51fa\u7ed3\u679c\n- \u68af\u5ea6\u68c0\u67e5\uff1a     \n![enter description here][19]\n- \u968f\u673a\u663e\u793a100\u4e2a\u624b\u5199\u6570\u5b57     \n![enter description here][20]\n- \u663e\u793atheta1\u6743\u91cd     \n![enter description here][21]\n- \u8bad\u7ec3\u96c6\u9884\u6d4b\u51c6\u786e\u5ea6     \n![enter description here][22]\n- \u5f52\u4e00\u5316\u540e\u8bad\u7ec3\u96c6\u9884\u6d4b\u51c6\u786e\u5ea6     \n![enter description here][23]\n\n--------------------\n\n## \u56db\u3001SVM\u652f\u6301\u5411\u91cf\u673a\n\n### 1\u3001\u4ee3\u4ef7\u51fd\u6570\n- \u5728\u903b\u8f91\u56de\u5f52\u4e2d\uff0c\u6211\u4eec\u7684\u4ee3\u4ef7\u4e3a\uff1a   \n![\\cos t({h_\\theta }(x),y) = \\left\\{ {\\begin{array}{c}    { - \\log ({h_\\theta }(x))} \\\\    { - \\log (1 - {h_\\theta }(x))}  \\end{array} \\begin{array}{c}    {y = 1} \\\\    {y = 0}  \\end{array} } \\right.](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Ccos%20t%28%7Bh_%5Ctheta%20%7D%28x%29%2Cy%29%20%3D%20%5Cleft%5C%7B%20%7B%5Cbegin%7Barray%7D%7Bc%7D%20%20%20%20%7B%20-%20%5Clog%20%28%7Bh_%5Ctheta%20%7D%28x%29%29%7D%20%5C%5C%20%20%20%20%7B%20-%20%5Clog%20%281%20-%20%7Bh_%5Ctheta%20%7D%28x%29%29%7D%20%20%5Cend%7Barray%7D%20%5Cbegin%7Barray%7D%7Bc%7D%20%20%20%20%7By%20%3D%201%7D%20%5C%5C%20%20%20%20%7By%20%3D%200%7D%20%20%5Cend%7Barray%7D%20%7D%20%5Cright.)\uff0c    \n\u5176\u4e2d\uff1a![{h_\\theta }({\\text{z}}) = \\frac{1}{{1 + {e^{ - z}}}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bh_%5Ctheta%20%7D%28%7B%5Ctext%7Bz%7D%7D%29%20%3D%20%5Cfrac%7B1%7D%7B%7B1%20%2B%20%7Be%5E%7B%20-%20z%7D%7D%7D%7D)\uff0c![z = {\\theta ^T}x](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=z%20%3D%20%7B%5Ctheta%20%5ET%7Dx)\n- \u5982\u56fe\u6240\u793a\uff0c\u5982\u679c`y=1`\uff0c`cost`\u4ee3\u4ef7\u51fd\u6570\u5982\u56fe\u6240\u793a    \n![enter description here][24]    \n\u6211\u4eec\u60f3\u8ba9![{\\theta ^T}x &gt;  &gt; 0](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Ctheta%20%5ET%7Dx%20%3E%20%20%3E%200)\uff0c\u5373`z>>0`\uff0c\u8fd9\u6837\u7684\u8bdd`cost`\u4ee3\u4ef7\u51fd\u6570\u624d\u4f1a\u8d8b\u4e8e\u6700\u5c0f\uff08\u8fd9\u662f\u6211\u4eec\u60f3\u8981\u7684\uff09\uff0c\u6240\u4ee5\u7528\u9014\u4e2d**\u7ea2\u8272**\u7684\u51fd\u6570![\\cos {t_1}(z)](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Ccos%20%7Bt_1%7D%28z%29)\u4ee3\u66ff\u903b\u8f91\u56de\u5f52\u4e2d\u7684cost\n- \u5f53`y=0`\u65f6\u540c\u6837\uff0c\u7528![\\cos {t_0}(z)](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Ccos%20%7Bt_0%7D%28z%29)\u4ee3\u66ff\n![enter description here][25]\n- \u6700\u7ec8\u5f97\u5230\u7684\u4ee3\u4ef7\u51fd\u6570\u4e3a\uff1a    \n![J(\\theta ) = C\\sum\\limits_{i = 1}^m {[{y^{(i)}}\\cos {t_1}({\\theta ^T}{x^{(i)}}) + (1 - {y^{(i)}})\\cos {t_0}({\\theta ^T}{x^{(i)}})} ] + \\frac{1}{2}\\sum\\limits_{j = 1}^{\\text{n}} {\\theta _j^2} ](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%5Ctheta%20%29%20%3D%20C%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%7By%5E%7B%28i%29%7D%7D%5Ccos%20%7Bt_1%7D%28%7B%5Ctheta%20%5ET%7D%7Bx%5E%7B%28i%29%7D%7D%29%20%2B%20%281%20-%20%7By%5E%7B%28i%29%7D%7D%29%5Ccos%20%7Bt_0%7D%28%7B%5Ctheta%20%5ET%7D%7Bx%5E%7B%28i%29%7D%7D%29%7D%20%5D%20%2B%20%5Cfrac%7B1%7D%7B2%7D%5Csum%5Climits_%7Bj%20%3D%201%7D%5E%7B%5Ctext%7Bn%7D%7D%20%7B%5Ctheta%20_j%5E2%7D%20)   \n\u6700\u540e\u6211\u4eec\u60f3\u8981![\\mathop {\\min }\\limits_\\theta  J(\\theta )](http://latex.codecogs.com/gif.latex?%5Clarge%20%5Cmathop%20%7B%5Cmin%20%7D%5Climits_%5Ctheta%20J%28%5Ctheta%20%29)\n- \u4e4b\u524d\u6211\u4eec\u903b\u8f91\u56de\u5f52\u4e2d\u7684\u4ee3\u4ef7\u51fd\u6570\u4e3a\uff1a   \n![J(\\theta ) =  - \\frac{1}{m}\\sum\\limits_{i = 1}^m {[{y^{(i)}}\\log ({h_\\theta }({x^{(i)}}) + (1 - } {y^{(i)}})\\log (1 - {h_\\theta }({x^{(i)}})] + \\frac{\\lambda }{{2m}}\\sum\\limits_{j = 1}^n {\\theta _j^2} ](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%5Ctheta%20%29%20%3D%20%20-%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%7By%5E%7B%28i%29%7D%7D%5Clog%20%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20%2B%20%281%20-%20%7D%20%7By%5E%7B%28i%29%7D%7D%29%5Clog%20%281%20-%20%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%5D%20%2B%20%5Cfrac%7B%5Clambda%20%7D%7B%7B2m%7D%7D%5Csum%5Climits_%7Bj%20%3D%201%7D%5En%20%7B%5Ctheta%20_j%5E2%7D%20)   \n\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u91cc\u7684![C = \\frac{m}{\\lambda }](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=C%20%3D%20%5Cfrac%7Bm%7D%7B%5Clambda%20%7D)\uff0c\u53ea\u662f\u8868\u8fbe\u5f62\u5f0f\u95ee\u9898\uff0c\u8fd9\u91cc`C`\u7684\u503c\u8d8a\u5927\uff0cSVM\u7684\u51b3\u7b56\u8fb9\u754c\u7684`margin`\u4e5f\u8d8a\u5927\uff0c\u4e0b\u9762\u4f1a\u8bf4\u660e\n\n### 2\u3001Large Margin\n- \u5982\u4e0b\u56fe\u6240\u793a,SVM\u5206\u7c7b\u4f1a\u4f7f\u7528\u6700\u5927\u7684`margin`\u5c06\u5176\u5206\u5f00    \n![enter description here][26]\n- \u5148\u8bf4\u4e00\u4e0b\u5411\u91cf\u5185\u79ef\n - ![u = \\left[ {\\begin{array}{c}    {{u_1}} \\\\    {{u_2}}  \\end{array} } \\right]](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=u%20%3D%20%5Cleft%5B%20%7B%5Cbegin%7Barray%7D%7Bc%7D%20%20%20%20%7B%7Bu_1%7D%7D%20%5C%5C%20%20%20%20%7B%7Bu_2%7D%7D%20%20%5Cend%7Barray%7D%20%7D%20%5Cright%5D)\uff0c![v = \\left[ {\\begin{array}{c}    {{v_1}} \\\\    {{v_2}}  \\end{array} } \\right]](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=v%20%3D%20%5Cleft%5B%20%7B%5Cbegin%7Barray%7D%7Bc%7D%20%20%20%20%7B%7Bv_1%7D%7D%20%5C%5C%20%20%20%20%7B%7Bv_2%7D%7D%20%20%5Cend%7Barray%7D%20%7D%20%5Cright%5D)    \n - ![||u||](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7C%7Cu%7C%7C)\u8868\u793a`u`\u7684**\u6b27\u51e0\u91cc\u5f97\u8303\u6570**\uff08\u6b27\u5f0f\u8303\u6570\uff09\uff0c![||u||{\\text{ = }}\\sqrt {{\\text{u}}_1^2 + u_2^2} ](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7C%7Cu%7C%7C%7B%5Ctext%7B%20%3D%20%7D%7D%5Csqrt%20%7B%7B%5Ctext%7Bu%7D%7D_1%5E2%20%2B%20u_2%5E2%7D%20)\n - `\u5411\u91cfV`\u5728`\u5411\u91cfu`\u4e0a\u7684\u6295\u5f71\u7684\u957f\u5ea6\u8bb0\u4e3a`p`\uff0c\u5219\uff1a\u5411\u91cf\u5185\u79ef\uff1a    \n ![{{\\text{u}}^T}v = p||u|| = {u_1}{v_1} + {u_2}{v_2}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%7B%5Ctext%7Bu%7D%7D%5ET%7Dv%20%3D%20p%7C%7Cu%7C%7C%20%3D%20%7Bu_1%7D%7Bv_1%7D%20%2B%20%7Bu_2%7D%7Bv_2%7D)      \n ![enter description here][27]  \n\u6839\u636e\u5411\u91cf\u5939\u89d2\u516c\u5f0f\u63a8\u5bfc\u4e00\u4e0b\u5373\u53ef\uff0c![\\cos \\theta  = \\frac{{\\overrightarrow {\\text{u}} \\overrightarrow v }}{{|\\overrightarrow {\\text{u}} ||\\overrightarrow v |}}](http://latex.codecogs.com/gif.latex?%5Clarge%20%5Ccos%20%5Ctheta%20%3D%20%5Cfrac%7B%7B%5Coverrightarrow%20%7B%5Ctext%7Bu%7D%7D%20%5Coverrightarrow%20v%20%7D%7D%7B%7B%7C%5Coverrightarrow%20%7B%5Ctext%7Bu%7D%7D%20%7C%7C%5Coverrightarrow%20v%20%7C%7D%7D)\n\n- \u524d\u9762\u8bf4\u8fc7\uff0c\u5f53`C`\u8d8a\u5927\u65f6\uff0c`margin`\u4e5f\u5c31\u8d8a\u5927\uff0c\u6211\u4eec\u7684\u76ee\u7684\u662f\u6700\u5c0f\u5316\u4ee3\u4ef7\u51fd\u6570`J(\u03b8)`,\u5f53`margin`\u6700\u5927\u65f6\uff0c`C`\u7684\u4e58\u79ef\u9879![\\sum\\limits_{i = 1}^m {[{y^{(i)}}\\cos {t_1}({\\theta ^T}{x^{(i)}}) + (1 - {y^{(i)}})\\cos {t_0}({\\theta ^T}{x^{(i)}})} ]](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%7By%5E%7B%28i%29%7D%7D%5Ccos%20%7Bt_1%7D%28%7B%5Ctheta%20%5ET%7D%7Bx%5E%7B%28i%29%7D%7D%29%20%2B%20%281%20-%20%7By%5E%7B%28i%29%7D%7D%29%5Ccos%20%7Bt_0%7D%28%7B%5Ctheta%20%5ET%7D%7Bx%5E%7B%28i%29%7D%7D%29%7D%20%5D)\u8981\u5f88\u5c0f\uff0c\u6240\u4ee5\u8fd1\u4f3c\u4e3a\uff1a   \n![J(\\theta ) = C0 + \\frac{1}{2}\\sum\\limits_{j = 1}^{\\text{n}} {\\theta _j^2}  = \\frac{1}{2}\\sum\\limits_{j = 1}^{\\text{n}} {\\theta _j^2}  = \\frac{1}{2}(\\theta _1^2 + \\theta _2^2) = \\frac{1}{2}{\\sqrt {\\theta _1^2 + \\theta _2^2} ^2}](http://latex.codecogs.com/gif.latex?%5Clarge%20J%28%5Ctheta%20%29%20%3D%20C0%20&plus;%20%5Cfrac%7B1%7D%7B2%7D%5Csum%5Climits_%7Bj%20%3D%201%7D%5E%7B%5Ctext%7Bn%7D%7D%20%7B%5Ctheta%20_j%5E2%7D%20%3D%20%5Cfrac%7B1%7D%7B2%7D%5Csum%5Climits_%7Bj%20%3D%201%7D%5E%7B%5Ctext%7Bn%7D%7D%20%7B%5Ctheta%20_j%5E2%7D%20%3D%20%5Cfrac%7B1%7D%7B2%7D%28%5Ctheta%20_1%5E2%20&plus;%20%5Ctheta%20_2%5E2%29%20%3D%20%5Cfrac%7B1%7D%7B2%7D%7B%5Csqrt%20%7B%5Ctheta%20_1%5E2%20&plus;%20%5Ctheta%20_2%5E2%7D%20%5E2%7D)\uff0c      \n\u6211\u4eec\u6700\u540e\u7684\u76ee\u7684\u5c31\u662f\u6c42\u4f7f\u4ee3\u4ef7\u6700\u5c0f\u7684`\u03b8`\n- \u7531   \n![\\left\\{ {\\begin{array}{c}    {{\\theta ^T}{x^{(i)}} \\geqslant 1} \\\\    {{\\theta ^T}{x^{(i)}} \\leqslant  - 1}  \\end{array} } \\right.\\begin{array}{c}    {({y^{(i)}} = 1)} \\\\    {({y^{(i)}} = 0)}  \\end{array} ](http://latex.codecogs.com/gif.latex?%5Clarge%20%5Cleft%5C%7B%20%7B%5Cbegin%7Barray%7D%7Bc%7D%20%7B%7B%5Ctheta%20%5ET%7D%7Bx%5E%7B%28i%29%7D%7D%20%5Cgeqslant%201%7D%20%5C%5C%20%7B%7B%5Ctheta%20%5ET%7D%7Bx%5E%7B%28i%29%7D%7D%20%5Cleqslant%20-%201%7D%20%5Cend%7Barray%7D%20%7D%20%5Cright.%5Cbegin%7Barray%7D%7Bc%7D%20%7B%28%7By%5E%7B%28i%29%7D%7D%20%3D%201%29%7D%20%5C%5C%20%7B%28%7By%5E%7B%28i%29%7D%7D%20%3D%200%29%7D%20%5Cend%7Barray%7D)\u53ef\u4ee5\u5f97\u5230\uff1a    \n![\\left\\{ {\\begin{array}{c}    {{p^{(i)}}||\\theta || \\geqslant 1} \\\\    {{p^{(i)}}||\\theta || \\leqslant  - 1}  \\end{array} } \\right.\\begin{array}{c}    {({y^{(i)}} = 1)} \\\\    {({y^{(i)}} = 0)}  \\end{array} ](http://latex.codecogs.com/gif.latex?%5Clarge%20%5Cleft%5C%7B%20%7B%5Cbegin%7Barray%7D%7Bc%7D%20%7B%7Bp%5E%7B%28i%29%7D%7D%7C%7C%5Ctheta%20%7C%7C%20%5Cgeqslant%201%7D%20%5C%5C%20%7B%7Bp%5E%7B%28i%29%7D%7D%7C%7C%5Ctheta%20%7C%7C%20%5Cleqslant%20-%201%7D%20%5Cend%7Barray%7D%20%7D%20%5Cright.%5Cbegin%7Barray%7D%7Bc%7D%20%7B%28%7By%5E%7B%28i%29%7D%7D%20%3D%201%29%7D%20%5C%5C%20%7B%28%7By%5E%7B%28i%29%7D%7D%20%3D%200%29%7D%20%5Cend%7Barray%7D)\uff0c`p`\u5373\u4e3a`x`\u5728`\u03b8`\u4e0a\u7684\u6295\u5f71\n- \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5047\u8bbe\u51b3\u7b56\u8fb9\u754c\u5982\u56fe\uff0c\u627e\u5176\u4e2d\u7684\u4e00\u4e2a\u70b9\uff0c\u5230`\u03b8`\u4e0a\u7684\u6295\u5f71\u4e3a`p`,\u5219![p||\\theta || \\geqslant 1](http://latex.codecogs.com/gif.latex?%5Clarge%20p%7C%7C%5Ctheta%20%7C%7C%20%5Cgeqslant%201)\u6216\u8005![p||\\theta || \\leqslant  - 1](http://latex.codecogs.com/gif.latex?%5Clarge%20p%7C%7C%5Ctheta%20%7C%7C%20%5Cleqslant%20-%201)\uff0c\u82e5\u662f`p`\u5f88\u5c0f\uff0c\u5219\u9700\u8981![||\\theta ||](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7C%7C%5Ctheta%20%7C%7C)\u5f88\u5927\uff0c\u8fd9\u4e0e\u6211\u4eec\u8981\u6c42\u7684`\u03b8`\u4f7f![||\\theta || = \\frac{1}{2}\\sqrt {\\theta _1^2 + \\theta _2^2} ](http://latex.codecogs.com/gif.latex?%5Clarge%20%7C%7C%5Ctheta%20%7C%7C%20%3D%20%5Cfrac%7B1%7D%7B2%7D%5Csqrt%20%7B%5Ctheta%20_1%5E2%20&plus;%20%5Ctheta%20_2%5E2%7D)\u6700\u5c0f\u76f8\u8fdd\u80cc\uff0c**\u6240\u4ee5**\u6700\u540e\u6c42\u7684\u662f`large margin`   \n![enter description here][28]\n\n### 3\u3001SVM Kernel\uff08\u6838\u51fd\u6570\uff09\n- \u5bf9\u4e8e\u7ebf\u6027\u53ef\u5206\u7684\u95ee\u9898\uff0c\u4f7f\u7528**\u7ebf\u6027\u6838\u51fd\u6570**\u5373\u53ef\n- \u5bf9\u4e8e\u7ebf\u6027\u4e0d\u53ef\u5206\u7684\u95ee\u9898\uff0c\u5728\u903b\u8f91\u56de\u5f52\u4e2d\uff0c\u6211\u4eec\u662f\u5c06`feature`\u6620\u5c04\u4e3a\u4f7f\u7528\u591a\u9879\u5f0f\u7684\u5f62\u5f0f![1 + {x_1} + {x_2} + x_1^2 + {x_1}{x_2} + x_2^2](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=1%20%2B%20%7Bx_1%7D%20%2B%20%7Bx_2%7D%20%2B%20x_1%5E2%20%2B%20%7Bx_1%7D%7Bx_2%7D%20%2B%20x_2%5E2)\uff0c`SVM`\u4e2d\u4e5f\u6709**\u591a\u9879\u5f0f\u6838\u51fd\u6570**\uff0c\u4f46\u662f\u66f4\u5e38\u7528\u7684\u662f**\u9ad8\u65af\u6838\u51fd\u6570**\uff0c\u4e5f\u79f0\u4e3a**RBF\u6838**\n- \u9ad8\u65af\u6838\u51fd\u6570\u4e3a\uff1a![f(x) = {e^{ - \\frac{{||x - u|{|^2}}}{{2{\\sigma ^2}}}}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=f%28x%29%20%3D%20%7Be%5E%7B%20-%20%5Cfrac%7B%7B%7C%7Cx%20-%20u%7C%7B%7C%5E2%7D%7D%7D%7B%7B2%7B%5Csigma%20%5E2%7D%7D%7D%7D%7D)     \n\u5047\u8bbe\u5982\u56fe\u51e0\u4e2a\u70b9\uff0c\n![enter description here][29]\n\u4ee4\uff1a   \n![{f_1} = similarity(x,{l^{(1)}}) = {e^{ - \\frac{{||x - {l^{(1)}}|{|^2}}}{{2{\\sigma ^2}}}}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bf_1%7D%20%3D%20similarity%28x%2C%7Bl%5E%7B%281%29%7D%7D%29%20%3D%20%7Be%5E%7B%20-%20%5Cfrac%7B%7B%7C%7Cx%20-%20%7Bl%5E%7B%281%29%7D%7D%7C%7B%7C%5E2%7D%7D%7D%7B%7B2%7B%5Csigma%20%5E2%7D%7D%7D%7D%7D)   \n![{f_2} = similarity(x,{l^{(2)}}) = {e^{ - \\frac{{||x - {l^{(2)}}|{|^2}}}{{2{\\sigma ^2}}}}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bf_2%7D%20%3D%20similarity%28x%2C%7Bl%5E%7B%282%29%7D%7D%29%20%3D%20%7Be%5E%7B%20-%20%5Cfrac%7B%7B%7C%7Cx%20-%20%7Bl%5E%7B%282%29%7D%7D%7C%7B%7C%5E2%7D%7D%7D%7B%7B2%7B%5Csigma%20%5E2%7D%7D%7D%7D%7D)\n.\n.\n.\n- \u53ef\u4ee5\u770b\u51fa\uff0c\u82e5\u662f`x`\u4e0e![{l^{(1)}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bl%5E%7B%281%29%7D%7D)\u8ddd\u79bb\u8f83\u8fd1\uff0c==\u300b![{f_1} \\approx {e^0} = 1](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bf_1%7D%20%5Capprox%20%7Be%5E0%7D%20%3D%201)\uff0c\uff08\u5373\u76f8\u4f3c\u5ea6\u8f83\u5927\uff09   \n\u82e5\u662f`x`\u4e0e![{l^{(1)}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bl%5E%7B%281%29%7D%7D)\u8ddd\u79bb\u8f83\u8fdc\uff0c==\u300b![{f_2} \\approx {e^{ - \\infty }} = 0](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bf_2%7D%20%5Capprox%20%7Be%5E%7B%20-%20%5Cinfty%20%7D%7D%20%3D%200)\uff0c\uff08\u5373\u76f8\u4f3c\u5ea6\u8f83\u4f4e\uff09\n- \u9ad8\u65af\u6838\u51fd\u6570\u7684`\u03c3`\u8d8a\u5c0f\uff0c`f`\u4e0b\u964d\u7684\u8d8a\u5feb      \n![enter description here][30]\n![enter description here][31]\n\n- \u5982\u4f55\u9009\u62e9\u521d\u59cb\u7684![{l^{(1)}}{l^{(2)}}{l^{(3)}}...](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bl%5E%7B%281%29%7D%7D%7Bl%5E%7B%282%29%7D%7D%7Bl%5E%7B%283%29%7D%7D...)\n - \u8bad\u7ec3\u96c6\uff1a![(({x^{(1)}},{y^{(1)}}),({x^{(2)}},{y^{(2)}}),...({x^{(m)}},{y^{(m)}}))](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%28%28%7Bx%5E%7B%281%29%7D%7D%2C%7By%5E%7B%281%29%7D%7D%29%2C%28%7Bx%5E%7B%282%29%7D%7D%2C%7By%5E%7B%282%29%7D%7D%29%2C...%28%7Bx%5E%7B%28m%29%7D%7D%2C%7By%5E%7B%28m%29%7D%7D%29%29)\n - \u9009\u62e9\uff1a![{l^{(1)}} = {x^{(1)}},{l^{(2)}} = {x^{(2)}}...{l^{(m)}} = {x^{(m)}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bl%5E%7B%281%29%7D%7D%20%3D%20%7Bx%5E%7B%281%29%7D%7D%2C%7Bl%5E%7B%282%29%7D%7D%20%3D%20%7Bx%5E%7B%282%29%7D%7D...%7Bl%5E%7B%28m%29%7D%7D%20%3D%20%7Bx%5E%7B%28m%29%7D%7D)\n - \u5bf9\u4e8e\u7ed9\u51fa\u7684`x`\uff0c\u8ba1\u7b97`f`,\u4ee4\uff1a![f_0^{(i)} = 1](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=f_0%5E%7B%28i%29%7D%20%3D%201)\u6240\u4ee5\uff1a![{f^{(i)}} \\in {R^{m + 1}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bf%5E%7B%28i%29%7D%7D%20%5Cin%20%7BR%5E%7Bm%20%2B%201%7D%7D)\n - \u6700\u5c0f\u5316`J`\u6c42\u51fa`\u03b8`\uff0c          \n ![J(\\theta ) = C\\sum\\limits_{i = 1}^m {[{y^{(i)}}\\cos {t_1}({\\theta ^T}{f^{(i)}}) + (1 - {y^{(i)}})\\cos {t_0}({\\theta ^T}{f^{(i)}})} ] + \\frac{1}{2}\\sum\\limits_{j = 1}^{\\text{n}} {\\theta _j^2} ](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%5Ctheta%20%29%20%3D%20C%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%7By%5E%7B%28i%29%7D%7D%5Ccos%20%7Bt_1%7D%28%7B%5Ctheta%20%5ET%7D%7Bf%5E%7B%28i%29%7D%7D%29%20%2B%20%281%20-%20%7By%5E%7B%28i%29%7D%7D%29%5Ccos%20%7Bt_0%7D%28%7B%5Ctheta%20%5ET%7D%7Bf%5E%7B%28i%29%7D%7D%29%7D%20%5D%20%2B%20%5Cfrac%7B1%7D%7B2%7D%5Csum%5Climits_%7Bj%20%3D%201%7D%5E%7B%5Ctext%7Bn%7D%7D%20%7B%5Ctheta%20_j%5E2%7D%20)\n - \u5982\u679c![{\\theta ^T}f \\geqslant 0](http://latex.codecogs.com/gif.latex?%5Clarge%20%7B%5Ctheta%20%5ET%7Df%20%5Cgeqslant%200)\uff0c==\u300b\u9884\u6d4b`y=1`\n\n### 4\u3001\u4f7f\u7528`scikit-learn`\u4e2d\u7684`SVM`\u6a21\u578b\u4ee3\u7801\n- [\u5168\u90e8\u4ee3\u7801](/SVM/SVM_scikit-learn.py)\n- \u7ebf\u6027\u53ef\u5206\u7684,\u6307\u5b9a\u6838\u51fd\u6570\u4e3a`linear`\uff1a\n```\n    '''data1\u2014\u2014\u7ebf\u6027\u5206\u7c7b'''\n    data1 = spio.loadmat('data1.mat')\n    X = data1['X']\n    y = data1['y']\n    y = np.ravel(y)\n    plot_data(X,y)\n    \n    model = svm.SVC(C=1.0,kernel='linear').fit(X,y) # \u6307\u5b9a\u6838\u51fd\u6570\u4e3a\u7ebf\u6027\u6838\u51fd\u6570\n```\n- \u975e\u7ebf\u6027\u53ef\u5206\u7684\uff0c\u9ed8\u8ba4\u6838\u51fd\u6570\u4e3a`rbf`\n```\n    '''data2\u2014\u2014\u975e\u7ebf\u6027\u5206\u7c7b'''\n    data2 = spio.loadmat('data2.mat')\n    X = data2['X']\n    y = data2['y']\n    y = np.ravel(y)\n    plt = plot_data(X,y)\n    plt.show()\n    \n    model = svm.SVC(gamma=100).fit(X,y)     # gamma\u4e3a\u6838\u51fd\u6570\u7684\u7cfb\u6570\uff0c\u503c\u8d8a\u5927\u62df\u5408\u7684\u8d8a\u597d\n```\n### 5\u3001\u8fd0\u884c\u7ed3\u679c\n- \u7ebf\u6027\u53ef\u5206\u7684\u51b3\u7b56\u8fb9\u754c\uff1a    \n![enter description here][32]\n- \u7ebf\u6027\u4e0d\u53ef\u5206\u7684\u51b3\u7b56\u8fb9\u754c\uff1a   \n![enter description here][33]\n\n--------------------------\n\n## \u4e94\u3001K-Means\u805a\u7c7b\u7b97\u6cd5\n- [\u5168\u90e8\u4ee3\u7801](/K-Means/K-Menas.py)\n\n### 1\u3001\u805a\u7c7b\u8fc7\u7a0b\n- \u805a\u7c7b\u5c5e\u4e8e\u65e0\u76d1\u7763\u5b66\u4e60\uff0c\u4e0d\u77e5\u9053y\u7684\u6807\u8bb0\u5206\u4e3aK\u7c7b\n- K-Means\u7b97\u6cd5\u5206\u4e3a\u4e24\u4e2a\u6b65\u9aa4\n - \u7b2c\u4e00\u6b65\uff1a\u7c07\u5206\u914d\uff0c\u968f\u673a\u9009`K`\u4e2a\u70b9\u4f5c\u4e3a\u4e2d\u5fc3\uff0c\u8ba1\u7b97\u5230\u8fd9`K`\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u5206\u4e3a`K`\u4e2a\u7c07\n - \u7b2c\u4e8c\u6b65\uff1a\u79fb\u52a8\u805a\u7c7b\u4e2d\u5fc3\uff1a\u91cd\u65b0\u8ba1\u7b97\u6bcf\u4e2a**\u7c07**\u7684\u4e2d\u5fc3\uff0c\u79fb\u52a8\u4e2d\u5fc3\uff0c\u91cd\u590d\u4ee5\u4e0a\u6b65\u9aa4\u3002\n- \u5982\u4e0b\u56fe\u6240\u793a\uff1a\n - \u968f\u673a\u5206\u914d\u7684\u805a\u7c7b\u4e2d\u5fc3  \n ![enter description here][34]\n - \u91cd\u65b0\u8ba1\u7b97\u805a\u7c7b\u4e2d\u5fc3\uff0c\u79fb\u52a8\u4e00\u6b21  \n ![enter description here][35]\n - \u6700\u540e`10`\u6b65\u4e4b\u540e\u7684\u805a\u7c7b\u4e2d\u5fc3  \n ![enter description here][36]\n\n- \u8ba1\u7b97\u6bcf\u6761\u6570\u636e\u5230\u54ea\u4e2a\u4e2d\u5fc3\u6700\u8fd1\u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u627e\u5230\u6bcf\u6761\u6570\u636e\u8ddd\u79bb\u54ea\u4e2a\u7c7b\u4e2d\u5fc3\u6700\u8fd1    \ndef findClosestCentroids(X,initial_centroids):\n    m = X.shape[0]                  # \u6570\u636e\u6761\u6570\n    K = initial_centroids.shape[0]  # \u7c7b\u7684\u603b\u6570\n    dis = np.zeros((m,K))           # \u5b58\u50a8\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u5206\u522b\u5230K\u4e2a\u7c7b\u7684\u8ddd\u79bb\n    idx = np.zeros((m,1))           # \u8981\u8fd4\u56de\u7684\u6bcf\u6761\u6570\u636e\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\n    \n    '''\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u5230\u6bcf\u4e2a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb'''\n    for i in range(m):\n        for j in range(K):\n            dis[i,j] = np.dot((X[i,:]-initial_centroids[j,:]).reshape(1,-1),(X[i,:]-initial_centroids[j,:]).reshape(-1,1))\n    \n    '''\u8fd4\u56dedis\u6bcf\u4e00\u884c\u7684\u6700\u5c0f\u503c\u5bf9\u5e94\u7684\u5217\u53f7\uff0c\u5373\u4e3a\u5bf9\u5e94\u7684\u7c7b\u522b\n    - np.min(dis, axis=1)\u8fd4\u56de\u6bcf\u4e00\u884c\u7684\u6700\u5c0f\u503c\n    - np.where(dis == np.min(dis, axis=1).reshape(-1,1)) \u8fd4\u56de\u5bf9\u5e94\u6700\u5c0f\u503c\u7684\u5750\u6807\n     - \u6ce8\u610f\uff1a\u53ef\u80fd\u6700\u5c0f\u503c\u5bf9\u5e94\u7684\u5750\u6807\u6709\u591a\u4e2a\uff0cwhere\u90fd\u4f1a\u627e\u51fa\u6765\uff0c\u6240\u4ee5\u8fd4\u56de\u65f6\u8fd4\u56de\u524dm\u4e2a\u9700\u8981\u7684\u5373\u53ef\uff08\u56e0\u4e3a\u5bf9\u4e8e\u591a\u4e2a\u6700\u5c0f\u503c\uff0c\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u90fd\u53ef\u4ee5\uff09\n    '''  \n    dummy,idx = np.where(dis == np.min(dis, axis=1).reshape(-1,1))\n    return idx[0:dis.shape[0]]  # \u6ce8\u610f\u622a\u53d6\u4e00\u4e0b\n```\n- \u8ba1\u7b97\u7c7b\u4e2d\u5fc3\u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u8ba1\u7b97\u7c7b\u4e2d\u5fc3\ndef computerCentroids(X,idx,K):\n    n = X.shape[1]\n    centroids = np.zeros((K,n))\n    for i in range(K):\n        centroids[i,:] = np.mean(X[np.ravel(idx==i),:], axis=0).reshape(1,-1)   # \u7d22\u5f15\u8981\u662f\u4e00\u7ef4\u7684,axis=0\u4e3a\u6bcf\u4e00\u5217\uff0cidx==i\u4e00\u6b21\u627e\u51fa\u5c5e\u4e8e\u54ea\u4e00\u7c7b\u7684\uff0c\u7136\u540e\u8ba1\u7b97\u5747\u503c\n    return centroids\n```\n\n### 2\u3001\u76ee\u6807\u51fd\u6570\n- \u4e5f\u53eb\u505a**\u5931\u771f\u4ee3\u4ef7\u51fd\u6570**\n- ![J({c^{(1)}}, \\cdots ,{c^{(m)}},{u_1}, \\cdots ,{u_k}) = \\frac{1}{m}\\sum\\limits_{i = 1}^m {||{x^{(i)}} - {u_{{c^{(i)}}}}|{|^2}} ](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%7Bc%5E%7B%281%29%7D%7D%2C%20%5Ccdots%20%2C%7Bc%5E%7B%28m%29%7D%7D%2C%7Bu_1%7D%2C%20%5Ccdots%20%2C%7Bu_k%7D%29%20%3D%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%7C%7C%7Bx%5E%7B%28i%29%7D%7D%20-%20%7Bu_%7B%7Bc%5E%7B%28i%29%7D%7D%7D%7D%7C%7B%7C%5E2%7D%7D%20)\n- \u6700\u540e\u6211\u4eec\u60f3\u5f97\u5230\uff1a  \n![enter description here][37]\n- \u5176\u4e2d![{c^{(i)}}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bc%5E%7B%28i%29%7D%7D)\u8868\u793a\u7b2c`i`\u6761\u6570\u636e\u8ddd\u79bb\u54ea\u4e2a\u7c7b\u4e2d\u5fc3\u6700\u8fd1\uff0c\n- \u5176\u4e2d![{u_i}](http://chart.apis.google.com/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bu_i%7D)\u5373\u4e3a\u805a\u7c7b\u7684\u4e2d\u5fc3\n\n### 3\u3001\u805a\u7c7b\u4e2d\u5fc3\u7684\u9009\u62e9\n- \u968f\u673a\u521d\u59cb\u5316\uff0c\u4ece\u7ed9\u5b9a\u7684\u6570\u636e\u4e2d\u968f\u673a\u62bd\u53d6K\u4e2a\u4f5c\u4e3a\u805a\u7c7b\u4e2d\u5fc3\n- \u968f\u673a\u4e00\u6b21\u7684\u7ed3\u679c\u53ef\u80fd\u4e0d\u597d\uff0c\u53ef\u4ee5\u968f\u673a\u591a\u6b21\uff0c\u6700\u540e\u53d6\u4f7f\u4ee3\u4ef7\u51fd\u6570\u6700\u5c0f\u7684\u4f5c\u4e3a\u4e2d\u5fc3\n- \u5b9e\u73b0\u4ee3\u7801\uff1a(\u8fd9\u91cc\u968f\u673a\u4e00\u6b21)\n```\n# \u521d\u59cb\u5316\u7c7b\u4e2d\u5fc3--\u968f\u673a\u53d6K\u4e2a\u70b9\u4f5c\u4e3a\u805a\u7c7b\u4e2d\u5fc3\ndef kMeansInitCentroids(X,K):\n    m = X.shape[0]\n    m_arr = np.arange(0,m)      # \u751f\u62100-m-1\n    centroids = np.zeros((K,X.shape[1]))\n    np.random.shuffle(m_arr)    # \u6253\u4e71m_arr\u987a\u5e8f    \n    rand_indices = m_arr[:K]    # \u53d6\u524dK\u4e2a\n    centroids = X[rand_indices,:]\n    return centroids\n```\n\n### 4\u3001\u805a\u7c7b\u4e2a\u6570K\u7684\u9009\u62e9\n- \u805a\u7c7b\u662f\u4e0d\u77e5\u9053y\u7684label\u7684\uff0c\u6240\u4ee5\u4e0d\u77e5\u9053\u771f\u6b63\u7684\u805a\u7c7b\u4e2a\u6570\n- \u8098\u90e8\u6cd5\u5219\uff08Elbow method\uff09\n - \u4f5c\u4ee3\u4ef7\u51fd\u6570`J`\u548c`K`\u7684\u56fe\uff0c\u82e5\u662f\u51fa\u73b0\u4e00\u4e2a\u62d0\u70b9\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c`K`\u5c31\u53d6\u62d0\u70b9\u5904\u7684\u503c\uff0c\u4e0b\u56fe\u6b64\u65f6`K=3`\n ![enter description here][38]\n - \u82e5\u662f\u5f88\u5e73\u6ed1\u5c31\u4e0d\u660e\u786e\uff0c\u4eba\u4e3a\u9009\u62e9\u3002\n- \u7b2c\u4e8c\u79cd\u5c31\u662f\u4eba\u4e3a\u89c2\u5bdf\u9009\u62e9\n\n### 5\u3001\u5e94\u7528\u2014\u2014\u56fe\u7247\u538b\u7f29\n- \u5c06\u56fe\u7247\u7684\u50cf\u7d20\u5206\u4e3a\u82e5\u5e72\u7c7b\uff0c\u7136\u540e\u7528\u8fd9\u4e2a\u7c7b\u4ee3\u66ff\u539f\u6765\u7684\u50cf\u7d20\u503c\n- \u6267\u884c\u805a\u7c7b\u7684\u7b97\u6cd5\u4ee3\u7801\uff1a\n```\n# \u805a\u7c7b\u7b97\u6cd5\ndef runKMeans(X,initial_centroids,max_iters,plot_process):\n    m,n = X.shape                   # \u6570\u636e\u6761\u6570\u548c\u7ef4\u5ea6\n    K = initial_centroids.shape[0]  # \u7c7b\u6570\n    centroids = initial_centroids   # \u8bb0\u5f55\u5f53\u524d\u7c7b\u4e2d\u5fc3\n    previous_centroids = centroids  # \u8bb0\u5f55\u4e0a\u4e00\u6b21\u7c7b\u4e2d\u5fc3\n    idx = np.zeros((m,1))           # \u6bcf\u6761\u6570\u636e\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\n    \n    for i in range(max_iters):      # \u8fed\u4ee3\u6b21\u6570\n        print u'\u8fed\u4ee3\u8ba1\u7b97\u6b21\u6570\uff1a%d'%(i+1)\n        idx = findClosestCentroids(X, centroids)\n        if plot_process:    # \u5982\u679c\u7ed8\u5236\u56fe\u50cf\n            plt = plotProcessKMeans(X,centroids,previous_centroids) # \u753b\u805a\u7c7b\u4e2d\u5fc3\u7684\u79fb\u52a8\u8fc7\u7a0b\n            previous_centroids = centroids  # \u91cd\u7f6e\n        centroids = computerCentroids(X, idx, K)    # \u91cd\u65b0\u8ba1\u7b97\u7c7b\u4e2d\u5fc3\n    if plot_process:    # \u663e\u793a\u6700\u7ec8\u7684\u7ed8\u5236\u7ed3\u679c\n        plt.show()\n    return centroids,idx    # \u8fd4\u56de\u805a\u7c7b\u4e2d\u5fc3\u548c\u6570\u636e\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\n```\n\n### 6\u3001[\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u7ebf\u6027\u6a21\u578b\u5b9e\u73b0\u805a\u7c7b](/K-Means/K-Means_scikit-learn.py)\n\n- \u5bfc\u5165\u5305\n```\n    from sklearn.cluster import KMeans\n```\n- \u4f7f\u7528\u6a21\u578b\u62df\u5408\u6570\u636e\n```\n    model = KMeans(n_clusters=3).fit(X) # n_clusters\u6307\u5b9a3\u7c7b\uff0c\u62df\u5408\u6570\u636e\n```\n- \u805a\u7c7b\u4e2d\u5fc3\n```\n    centroids = model.cluster_centers_  # \u805a\u7c7b\u4e2d\u5fc3\n```\n\n### 7\u3001\u8fd0\u884c\u7ed3\u679c\n- \u4e8c\u7ef4\u6570\u636e\u7c7b\u4e2d\u5fc3\u7684\u79fb\u52a8  \n![enter description here][39]\n- \u56fe\u7247\u538b\u7f29  \n![enter description here][40]\n\n\n----------------------\n\n## \u516d\u3001PCA\u4e3b\u6210\u5206\u5206\u6790\uff08\u964d\u7ef4\uff09\n- [\u5168\u90e8\u4ee3\u7801](/PCA/PCA.py)\n\n### 1\u3001\u7528\u5904\n- \u6570\u636e\u538b\u7f29\uff08Data Compression\uff09,\u4f7f\u7a0b\u5e8f\u8fd0\u884c\u66f4\u5feb\n- \u53ef\u89c6\u5316\u6570\u636e\uff0c\u4f8b\u5982`3D-->2D`\u7b49\n- ......\n\n### 2\u30012D-->1D\uff0cnD-->kD\n- \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6240\u6709\u6570\u636e\u70b9\u53ef\u4ee5\u6295\u5f71\u5230\u4e00\u6761\u76f4\u7ebf\uff0c\u662f**\u6295\u5f71\u8ddd\u79bb\u7684\u5e73\u65b9\u548c**\uff08\u6295\u5f71\u8bef\u5dee\uff09\u6700\u5c0f\n![enter description here][41]\n- \u6ce8\u610f\u6570\u636e\u9700\u8981`\u5f52\u4e00\u5316`\u5904\u7406\n- \u601d\u8def\u662f\u627e`1`\u4e2a`\u5411\u91cfu`,\u6240\u6709\u6570\u636e\u6295\u5f71\u5230\u4e0a\u9762\u4f7f\u6295\u5f71\u8ddd\u79bb\u6700\u5c0f\n- \u90a3\u4e48`nD-->kD`\u5c31\u662f\u627e`k`\u4e2a\u5411\u91cf![$${u^{(1)}},{u^{(2)}} \\ldots {u^{(k)}}$$](http://latex.codecogs.com/gif.latex?%24%24%7Bu%5E%7B%281%29%7D%7D%2C%7Bu%5E%7B%282%29%7D%7D%20%5Cldots%20%7Bu%5E%7B%28k%29%7D%7D%24%24)\uff0c\u6240\u6709\u6570\u636e\u6295\u5f71\u5230\u4e0a\u9762\u4f7f\u6295\u5f71\u8bef\u5dee\u6700\u5c0f\n - eg:3D-->2D,2\u4e2a\u5411\u91cf![$${u^{(1)}},{u^{(2)}}$$](http://latex.codecogs.com/gif.latex?%24%24%7Bu%5E%7B%281%29%7D%7D%2C%7Bu%5E%7B%282%29%7D%7D%24%24)\u5c31\u4ee3\u8868\u4e00\u4e2a\u5e73\u9762\u4e86\uff0c\u6240\u6709\u70b9\u6295\u5f71\u5230\u8fd9\u4e2a\u5e73\u9762\u7684\u6295\u5f71\u8bef\u5dee\u6700\u5c0f\u5373\u53ef\n\n### 3\u3001\u4e3b\u6210\u5206\u5206\u6790PCA\u4e0e\u7ebf\u6027\u56de\u5f52\u7684\u533a\u522b\n- \u7ebf\u6027\u56de\u5f52\u662f\u627e`x`\u4e0e`y`\u7684\u5173\u7cfb\uff0c\u7136\u540e\u7528\u4e8e\u9884\u6d4b`y`\n- `PCA`\u662f\u627e\u4e00\u4e2a\u6295\u5f71\u9762\uff0c\u6700\u5c0f\u5316data\u5230\u8fd9\u4e2a\u6295\u5f71\u9762\u7684\u6295\u5f71\u8bef\u5dee\n\n### 4\u3001PCA\u964d\u7ef4\u8fc7\u7a0b\n- \u6570\u636e\u9884\u5904\u7406\uff08\u5747\u503c\u5f52\u4e00\u5316\uff09\n - \u516c\u5f0f\uff1a![$${\\rm{x}}_j^{(i)} = {{{\\rm{x}}_j^{(i)} - {u_j}} \\over {{s_j}}}$$](http://latex.codecogs.com/gif.latex?%24%24%7B%5Crm%7Bx%7D%7D_j%5E%7B%28i%29%7D%20%3D%20%7B%7B%7B%5Crm%7Bx%7D%7D_j%5E%7B%28i%29%7D%20-%20%7Bu_j%7D%7D%20%5Cover%20%7B%7Bs_j%7D%7D%7D%24%24)\n - \u5c31\u662f\u51cf\u53bb\u5bf9\u5e94feature\u7684\u5747\u503c\uff0c\u7136\u540e\u9664\u4ee5\u5bf9\u5e94\u7279\u5f81\u7684\u6807\u51c6\u5dee\uff08\u4e5f\u53ef\u4ee5\u662f\u6700\u5927\u503c-\u6700\u5c0f\u503c\uff09\n - \u5b9e\u73b0\u4ee3\u7801\uff1a\n ```\n     # \u5f52\u4e00\u5316\u6570\u636e\n    def featureNormalize(X):\n        '''\uff08\u6bcf\u4e00\u4e2a\u6570\u636e-\u5f53\u524d\u5217\u7684\u5747\u503c\uff09/\u5f53\u524d\u5217\u7684\u6807\u51c6\u5dee'''\n        n = X.shape[1]\n        mu = np.zeros((1,n));\n        sigma = np.zeros((1,n))\n        \n        mu = np.mean(X,axis=0)\n        sigma = np.std(X,axis=0)\n        for i in range(n):\n            X[:,i] = (X[:,i]-mu[i])/sigma[i]\n        return X,mu,sigma\n ```\n- \u8ba1\u7b97`\u534f\u65b9\u5dee\u77e9\u9635\u03a3`\uff08Covariance Matrix\uff09\uff1a![$$\\Sigma  = {1 \\over m}\\sum\\limits_{i = 1}^n {{x^{(i)}}{{({x^{(i)}})}^T}} $$](http://latex.codecogs.com/gif.latex?%24%24%5CSigma%20%3D%20%7B1%20%5Cover%20m%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5En%20%7B%7Bx%5E%7B%28i%29%7D%7D%7B%7B%28%7Bx%5E%7B%28i%29%7D%7D%29%7D%5ET%7D%7D%20%24%24)\n - \u6ce8\u610f\u8fd9\u91cc\u7684`\u03a3`\u548c\u6c42\u548c\u7b26\u53f7\u4e0d\u540c\n - \u534f\u65b9\u5dee\u77e9\u9635`\u5bf9\u79f0\u6b63\u5b9a`\uff08\u4e0d\u7406\u89e3\u6b63\u5b9a\u7684\u770b\u770b\u7ebf\u4ee3\uff09\n - \u5927\u5c0f\u4e3a`nxn`,`n`\u4e3a`feature`\u7684\u7ef4\u5ea6\n - \u5b9e\u73b0\u4ee3\u7801\uff1a\n ```\n Sigma = np.dot(np.transpose(X_norm),X_norm)/m  # \u6c42Sigma\n ```\n- \u8ba1\u7b97`\u03a3`\u7684\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\n - \u53ef\u4ee5\u662f\u7528`svd`\u5947\u5f02\u503c\u5206\u89e3\u51fd\u6570\uff1a`U,S,V = svd(\u03a3)`\n - \u8fd4\u56de\u7684\u662f\u4e0e`\u03a3`\u540c\u6837\u5927\u5c0f\u7684\u5bf9\u89d2\u9635`S`\uff08\u7531`\u03a3`\u7684\u7279\u5f81\u503c\u7ec4\u6210\uff09[**\u6ce8\u610f**\uff1a`matlab`\u4e2d\u51fd\u6570\u8fd4\u56de\u7684\u662f\u5bf9\u89d2\u9635\uff0c\u5728`python`\u4e2d\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u8282\u7701\u7a7a\u95f4]\n - \u8fd8\u6709\u4e24\u4e2a**\u9149\u77e9\u9635**U\u548cV\uff0c\u4e14![$$\\Sigma  = US{V^T}$$](http://latex.codecogs.com/gif.latex?%24%24%5CSigma%20%3D%20US%7BV%5ET%7D%24%24)\n - ![enter description here][42]\n - **\u6ce8\u610f**\uff1a`svd`\u51fd\u6570\u6c42\u51fa\u7684`S`\u662f\u6309\u7279\u5f81\u503c\u964d\u5e8f\u6392\u5217\u7684\uff0c\u82e5\u4e0d\u662f\u4f7f\u7528`svd`,\u9700\u8981\u6309**\u7279\u5f81\u503c**\u5927\u5c0f\u91cd\u65b0\u6392\u5217`U`\n- \u964d\u7ef4\n - \u9009\u53d6`U`\u4e2d\u7684\u524d`K`\u5217\uff08\u5047\u8bbe\u8981\u964d\u4e3a`K`\u7ef4\uff09\n - ![enter description here][43]\n - `Z`\u5c31\u662f\u5bf9\u5e94\u964d\u7ef4\u4e4b\u540e\u7684\u6570\u636e\n - \u5b9e\u73b0\u4ee3\u7801\uff1a\n ```\n     # \u6620\u5c04\u6570\u636e\n    def projectData(X_norm,U,K):\n        Z = np.zeros((X_norm.shape[0],K))\n        \n        U_reduce = U[:,0:K]          # \u53d6\u524dK\u4e2a\n        Z = np.dot(X_norm,U_reduce) \n        return Z\n ```\n- \u8fc7\u7a0b\u603b\u7ed3\uff1a\n - `Sigma = X'*X/m`\n - `U,S,V = svd(Sigma)`\n - `Ureduce = U[:,0:k]`\n - `Z = Ureduce'*x`\n\n### 5\u3001\u6570\u636e\u6062\u590d\n - \u56e0\u4e3a\uff1a![$${Z^{(i)}} = U_{reduce}^T*{X^{(i)}}$$](http://latex.codecogs.com/gif.latex?%5Cfn_cm%20%24%24%7BZ%5E%7B%28i%29%7D%7D%20%3D%20U_%7Breduce%7D%5ET*%7BX%5E%7B%28i%29%7D%7D%24%24)\n - \u6240\u4ee5\uff1a![$${X_{approx}} = {(U_{reduce}^T)^{ - 1}}Z$$](http://latex.codecogs.com/gif.latex?%5Cfn_cm%20%24%24%7BX_%7Bapprox%7D%7D%20%3D%20%7B%28U_%7Breduce%7D%5ET%29%5E%7B%20-%201%7D%7DZ%24%24)     \uff08\u6ce8\u610f\u8fd9\u91cc\u662fX\u7684\u8fd1\u4f3c\u503c\uff09\n - \u53c8\u56e0\u4e3a`Ureduce`\u4e3a\u6b63\u5b9a\u77e9\u9635\uff0c\u3010\u6b63\u5b9a\u77e9\u9635\u6ee1\u8db3\uff1a![$$A{A^T} = {A^T}A = E$$](http://latex.codecogs.com/gif.latex?%5Cfn_cm%20%24%24A%7BA%5ET%7D%20%3D%20%7BA%5ET%7DA%20%3D%20E%24%24)\uff0c\u6240\u4ee5\uff1a![$${A^{ - 1}} = {A^T}$$](http://latex.codecogs.com/gif.latex?%5Cfn_cm%20%24%24%7BA%5E%7B%20-%201%7D%7D%20%3D%20%7BA%5ET%7D%24%24)\u3011\uff0c\u6240\u4ee5\u8fd9\u91cc\uff1a\n - ![$${X_{approx}} = {(U_{reduce}^{ - 1})^{ - 1}}Z = {U_{reduce}}Z$$](http://latex.codecogs.com/gif.latex?%5Cfn_cm%20%24%24%7BX_%7Bapprox%7D%7D%20%3D%20%7B%28U_%7Breduce%7D%5E%7B%20-%201%7D%29%5E%7B%20-%201%7D%7DZ%20%3D%20%7BU_%7Breduce%7D%7DZ%24%24)\n - \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n    # \u6062\u590d\u6570\u636e \n    def recoverData(Z,U,K):\n        X_rec = np.zeros((Z.shape[0],U.shape[0]))\n        U_recude = U[:,0:K]\n        X_rec = np.dot(Z,np.transpose(U_recude))  # \u8fd8\u539f\u6570\u636e\uff08\u8fd1\u4f3c\uff09\n        return X_rec\n```\n\n### 6\u3001\u4e3b\u6210\u5206\u4e2a\u6570\u7684\u9009\u62e9\uff08\u5373\u8981\u964d\u7684\u7ef4\u5ea6\uff09\n- \u5982\u4f55\u9009\u62e9\n - **\u6295\u5f71\u8bef\u5dee**\uff08project error\uff09\uff1a![$${1 \\over m}\\sum\\limits_{i = 1}^m {||{x^{(i)}} - x_{approx}^{(i)}|{|^2}} $$](http://latex.codecogs.com/gif.latex?%5Cfn_cm%20%24%24%7B1%20%5Cover%20m%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%7C%7C%7Bx%5E%7B%28i%29%7D%7D%20-%20x_%7Bapprox%7D%5E%7B%28i%29%7D%7C%7B%7C%5E2%7D%7D%20%24%24)\n - **\u603b\u53d8\u5dee**\uff08total variation\uff09:![$${1 \\over m}\\sum\\limits_{i = 1}^m {||{x^{(i)}}|{|^2}} $$](http://latex.codecogs.com/gif.latex?%5Cfn_cm%20%24%24%7B1%20%5Cover%20m%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%7C%7C%7Bx%5E%7B%28i%29%7D%7D%7C%7B%7C%5E2%7D%7D%20%24%24)\n - \u82e5**\u8bef\u5dee\u7387**\uff08error ratio\uff09\uff1a![$${{{1 \\over m}\\sum\\limits_{i = 1}^m {||{x^{(i)}} - x_{approx}^{(i)}|{|^2}} } \\over {{1 \\over m}\\sum\\limits_{i = 1}^m {||{x^{(i)}}|{|^2}} }} \\le 0.01$$](http://latex.codecogs.com/gif.latex?%5Cfn_cm%20%24%24%7B%7B%7B1%20%5Cover%20m%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%7C%7C%7Bx%5E%7B%28i%29%7D%7D%20-%20x_%7Bapprox%7D%5E%7B%28i%29%7D%7C%7B%7C%5E2%7D%7D%20%7D%20%5Cover%20%7B%7B1%20%5Cover%20m%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%7C%7C%7Bx%5E%7B%28i%29%7D%7D%7C%7B%7C%5E2%7D%7D%20%7D%7D%20%5Cle%200.01%24%24)\uff0c\u5219\u79f0`99%`\u4fdd\u7559\u5dee\u5f02\u6027\n - \u8bef\u5dee\u7387\u4e00\u822c\u53d6`1%\uff0c5%\uff0c10%`\u7b49\n- \u5982\u4f55\u5b9e\u73b0\n - \u82e5\u662f\u4e00\u4e2a\u4e2a\u8bd5\u7684\u8bdd\u4ee3\u4ef7\u592a\u5927\n - \u4e4b\u524d`U,S,V = svd(Sigma)`,\u6211\u4eec\u5f97\u5230\u4e86`S`\uff0c\u8fd9\u91cc\u8bef\u5dee\u7387error ratio:    \n ![$$error{\\kern 1pt} \\;ratio = 1 - {{\\sum\\limits_{i = 1}^k {{S_{ii}}} } \\over {\\sum\\limits_{i = 1}^n {{S_{ii}}} }} \\le threshold$$](http://latex.codecogs.com/gif.latex?%5Cfn_cm%20%24%24error%7B%5Ckern%201pt%7D%20%5C%3Bratio%20%3D%201%20-%20%7B%7B%5Csum%5Climits_%7Bi%20%3D%201%7D%5Ek%20%7B%7BS_%7Bii%7D%7D%7D%20%7D%20%5Cover%20%7B%5Csum%5Climits_%7Bi%20%3D%201%7D%5En%20%7B%7BS_%7Bii%7D%7D%7D%20%7D%7D%20%5Cle%20threshold%24%24)\n - \u53ef\u4ee5\u4e00\u70b9\u70b9\u589e\u52a0`K`\u5c1d\u8bd5\u3002\n\n### 7\u3001\u4f7f\u7528\u5efa\u8bae\n- \u4e0d\u8981\u4f7f\u7528PCA\u53bb\u89e3\u51b3\u8fc7\u62df\u5408\u95ee\u9898`Overfitting`\uff0c\u8fd8\u662f\u4f7f\u7528\u6b63\u5219\u5316\u7684\u65b9\u6cd5\uff08\u5982\u679c\u4fdd\u7559\u4e86\u5f88\u9ad8\u7684\u5dee\u5f02\u6027\u8fd8\u662f\u53ef\u4ee5\u7684\uff09\n- \u53ea\u6709\u5728\u539f\u6570\u636e\u4e0a\u6709\u597d\u7684\u7ed3\u679c\uff0c\u4f46\u662f\u8fd0\u884c\u5f88\u6162\uff0c\u624d\u8003\u8651\u4f7f\u7528PCA\n\n### 8\u3001\u8fd0\u884c\u7ed3\u679c\n- 2\u7ef4\u6570\u636e\u964d\u4e3a1\u7ef4\n - \u8981\u6295\u5f71\u7684\u65b9\u5411     \n![enter description here][44]\n - 2D\u964d\u4e3a1D\u53ca\u5bf9\u5e94\u5173\u7cfb        \n![enter description here][45]\n- \u4eba\u8138\u6570\u636e\u964d\u7ef4\n - \u539f\u59cb\u6570\u636e         \n ![enter description here][46]\n - \u53ef\u89c6\u5316\u90e8\u5206`U`\u77e9\u9635\u4fe1\u606f    \n ![enter description here][47]\n - \u6062\u590d\u6570\u636e    \n ![enter description here][48]\n\n### 9\u3001[\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684PCA\u5b9e\u73b0\u964d\u7ef4](/PCA/PCA.py_scikit-learn.py)\n- \u5bfc\u5165\u9700\u8981\u7684\u5305\uff1a\n```\n#-*- coding: utf-8 -*-\n# Author:bob\n# Date:2016.12.22\nimport numpy as np\nfrom matplotlib import pyplot as plt\nfrom scipy import io as spio\nfrom sklearn.decomposition import pca\nfrom sklearn.preprocessing import StandardScaler\n```\n- \u5f52\u4e00\u5316\u6570\u636e\n```\n    '''\u5f52\u4e00\u5316\u6570\u636e\u5e76\u4f5c\u56fe'''\n    scaler = StandardScaler()\n    scaler.fit(X)\n    x_train = scaler.transform(X)\n```\n- \u4f7f\u7528PCA\u6a21\u578b\u62df\u5408\u6570\u636e\uff0c\u5e76\u964d\u7ef4\n - `n_components`\u5bf9\u5e94\u8981\u5c06\u7684\u7ef4\u5ea6\n```\n    '''\u62df\u5408\u6570\u636e'''\n    K=1 # \u8981\u964d\u7684\u7ef4\u5ea6\n    model = pca.PCA(n_components=K).fit(x_train)   # \u62df\u5408\u6570\u636e\uff0cn_components\u5b9a\u4e49\u8981\u964d\u7684\u7ef4\u5ea6\n    Z = model.transform(x_train)    # transform\u5c31\u4f1a\u6267\u884c\u964d\u7ef4\u64cd\u4f5c\n```\n\n- \u6570\u636e\u6062\u590d\n - `model.components_`\u4f1a\u5f97\u5230\u964d\u7ef4\u4f7f\u7528\u7684`U`\u77e9\u9635 \n```\n    '''\u6570\u636e\u6062\u590d\u5e76\u4f5c\u56fe'''\n    Ureduce = model.components_     # \u5f97\u5230\u964d\u7ef4\u7528\u7684Ureduce\n    x_rec = np.dot(Z,Ureduce)       # \u6570\u636e\u6062\u590d\n```\n\n\n\n---------------------------------------------------------------\n\n\n## \u4e03\u3001\u5f02\u5e38\u68c0\u6d4b Anomaly Detection\n- [\u5168\u90e8\u4ee3\u7801](/AnomalyDetection/AnomalyDetection.py)\n\n### 1\u3001\u9ad8\u65af\u5206\u5e03\uff08\u6b63\u6001\u5206\u5e03\uff09`Gaussian distribution` \n- \u5206\u5e03\u51fd\u6570\uff1a![$$p(x) = {1 \\over {\\sqrt {2\\pi } \\sigma }}{e^{ - {{{{(x - u)}^2}} \\over {2{\\sigma ^2}}}}}$$](http://latex.codecogs.com/png.latex?%5Cfn_cm%20%24%24p%28x%29%20%3D%20%7B1%20%5Cover%20%7B%5Csqrt%20%7B2%5Cpi%20%7D%20%5Csigma%20%7D%7D%7Be%5E%7B%20-%20%7B%7B%7B%7B%28x%20-%20u%29%7D%5E2%7D%7D%20%5Cover%20%7B2%7B%5Csigma%20%5E2%7D%7D%7D%7D%7D%24%24)\n - \u5176\u4e2d\uff0c`u`\u4e3a\u6570\u636e\u7684**\u5747\u503c**\uff0c`\u03c3`\u4e3a\u6570\u636e\u7684**\u6807\u51c6\u5dee**\n - `\u03c3`\u8d8a**\u5c0f**\uff0c\u5bf9\u5e94\u7684\u56fe\u50cf\u8d8a**\u5c16**\n- \u53c2\u6570\u4f30\u8ba1\uff08`parameter estimation`\uff09\n - ![$$u = {1 \\over m}\\sum\\limits_{i = 1}^m {{x^{(i)}}} $$](http://latex.codecogs.com/png.latex?%5Cfn_cm%20%24%24u%20%3D%20%7B1%20%5Cover%20m%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%7Bx%5E%7B%28i%29%7D%7D%7D%20%24%24)\n - ![$${\\sigma ^2} = {1 \\over m}\\sum\\limits_{i = 1}^m {{{({x^{(i)}} - u)}^2}} $$](http://latex.codecogs.com/png.latex?%5Cfn_cm%20%24%24%7B%5Csigma%20%5E2%7D%20%3D%20%7B1%20%5Cover%20m%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%7B%7B%28%7Bx%5E%7B%28i%29%7D%7D%20-%20u%29%7D%5E2%7D%7D%20%24%24)\n\n### 2\u3001\u5f02\u5e38\u68c0\u6d4b\u7b97\u6cd5\n- \u4f8b\u5b50\n - \u8bad\u7ec3\u96c6\uff1a![$$\\{ {x^{(1)}},{x^{(2)}}, \\cdots {x^{(m)}}\\} $$](http://latex.codecogs.com/png.latex?%5Cfn_cm%20%24%24%5C%7B%20%7Bx%5E%7B%281%29%7D%7D%2C%7Bx%5E%7B%282%29%7D%7D%2C%20%5Ccdots%20%7Bx%5E%7B%28m%29%7D%7D%5C%7D%20%24%24),\u5176\u4e2d![$$x \\in {R^n}$$](http://latex.codecogs.com/png.latex?%5Cfn_cm%20%24%24x%20%5Cin%20%7BR%5En%7D%24%24)\n - \u5047\u8bbe![$${x_1},{x_2} \\cdots {x_n}$$](http://latex.codecogs.com/png.latex?%5Cfn_cm%20%24%24%7Bx_1%7D%2C%7Bx_2%7D%20%5Ccdots%20%7Bx_n%7D%24%24)\u76f8\u4e92\u72ec\u7acb\uff0c\u5efa\u7acbmodel\u6a21\u578b\uff1a![$$p(x) = p({x_1};{u_1},\\sigma _1^2)p({x_2};{u_2},\\sigma _2^2) \\cdots p({x_n};{u_n},\\sigma _n^2) = \\prod\\limits_{j = 1}^n {p({x_j};{u_j},\\sigma _j^2)} $$](http://latex.codecogs.com/png.latex?%5Cfn_cm%20%24%24p%28x%29%20%3D%20p%28%7Bx_1%7D%3B%7Bu_1%7D%2C%5Csigma%20_1%5E2%29p%28%7Bx_2%7D%3B%7Bu_2%7D%2C%5Csigma%20_2%5E2%29%20%5Ccdots%20p%28%7Bx_n%7D%3B%7Bu_n%7D%2C%5Csigma%20_n%5E2%29%20%3D%20%5Cprod%5Climits_%7Bj%20%3D%201%7D%5En%20%7Bp%28%7Bx_j%7D%3B%7Bu_j%7D%2C%5Csigma%20_j%5E2%29%7D%20%24%24)\n- \u8fc7\u7a0b\n - \u9009\u62e9\u5177\u6709\u4ee3\u8868\u5f02\u5e38\u7684`feature`:xi\n - \u53c2\u6570\u4f30\u8ba1\uff1a![$${u_1},{u_2}, \\cdots ,{u_n};\\sigma _1^2,\\sigma _2^2 \\cdots ,\\sigma _n^2$$](http://latex.codecogs.com/png.latex?%5Cfn_cm%20%24%24%7Bu_1%7D%2C%7Bu_2%7D%2C%20%5Ccdots%20%2C%7Bu_n%7D%3B%5Csigma%20_1%5E2%2C%5Csigma%20_2%5E2%20%5Ccdots%20%2C%5Csigma%20_n%5E2%24%24)\n - \u8ba1\u7b97`p(x)`,\u82e5\u662f`P(x)<\u03b5`\u5219\u8ba4\u4e3a\u5f02\u5e38\uff0c\u5176\u4e2d`\u03b5`\u4e3a\u6211\u4eec\u8981\u6c42\u7684\u6982\u7387\u7684\u4e34\u754c\u503c`threshold`\n- \u8fd9\u91cc\u53ea\u662f**\u5355\u5143\u9ad8\u65af\u5206\u5e03**\uff0c\u5047\u8bbe\u4e86`feature`\u4e4b\u95f4\u662f\u72ec\u7acb\u7684\uff0c\u4e0b\u9762\u4f1a\u8bb2\u5230**\u591a\u5143\u9ad8\u65af\u5206\u5e03**\uff0c\u4f1a\u81ea\u52a8\u6355\u6349\u5230`feature`\u4e4b\u95f4\u7684\u5173\u7cfb\n- **\u53c2\u6570\u4f30\u8ba1**\u5b9e\u73b0\u4ee3\u7801\n```\n# \u53c2\u6570\u4f30\u8ba1\u51fd\u6570\uff08\u5c31\u662f\u6c42\u5747\u503c\u548c\u65b9\u5dee\uff09\ndef estimateGaussian(X):\n    m,n = X.shape\n    mu = np.zeros((n,1))\n    sigma2 = np.zeros((n,1))\n    \n    mu = np.mean(X, axis=0) # axis=0\u8868\u793a\u5217\uff0c\u6bcf\u5217\u7684\u5747\u503c\n    sigma2 = np.var(X,axis=0) # \u6c42\u6bcf\u5217\u7684\u65b9\u5dee\n    return mu,sigma2\n```\n\n### 3\u3001\u8bc4\u4ef7`p(x)`\u7684\u597d\u574f\uff0c\u4ee5\u53ca`\u03b5`\u7684\u9009\u53d6\n- \u5bf9**\u504f\u659c\u6570\u636e**\u7684\u9519\u8bef\u5ea6\u91cf\n - \u56e0\u4e3a\u6570\u636e\u53ef\u80fd\u662f\u975e\u5e38**\u504f\u659c**\u7684\uff08\u5c31\u662f`y=1`\u7684\u4e2a\u6570\u975e\u5e38\u5c11\uff0c(`y=1`\u8868\u793a\u5f02\u5e38)\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528`Precision/Recall`\uff0c\u8ba1\u7b97`F1Score`(\u5728**CV\u4ea4\u53c9\u9a8c\u8bc1\u96c6**\u4e0a)\n - \u4f8b\u5982\uff1a\u9884\u6d4b\u764c\u75c7\uff0c\u5047\u8bbe\u6a21\u578b\u53ef\u4ee5\u5f97\u5230`99%`\u80fd\u591f\u9884\u6d4b\u6b63\u786e\uff0c`1%`\u7684\u9519\u8bef\u7387\uff0c\u4f46\u662f\u5b9e\u9645\u764c\u75c7\u7684\u6982\u7387\u5f88\u5c0f\uff0c\u53ea\u6709`0.5%`\uff0c\u90a3\u4e48\u6211\u4eec\u59cb\u7ec8\u9884\u6d4b\u6ca1\u6709\u764c\u75c7y=0\u53cd\u800c\u53ef\u4ee5\u5f97\u5230\u66f4\u5c0f\u7684\u9519\u8bef\u7387\u3002\u4f7f\u7528`error rate`\u6765\u8bc4\u4f30\u5c31\u4e0d\u79d1\u5b66\u4e86\u3002\n - \u5982\u4e0b\u56fe\u8bb0\u5f55\uff1a    \n ![enter description here][49]\n - ![$$\\Pr ecision = {{TP} \\over {TP + FP}}$$](http://latex.codecogs.com/png.latex?%5Cfn_cm%20%24%24%5CPr%20ecision%20%3D%20%7B%7BTP%7D%20%5Cover%20%7BTP%20&plus;%20FP%7D%7D%24%24) \uff0c\u5373\uff1a**\u6b63\u786e\u9884\u6d4b\u6b63\u6837\u672c/\u6240\u6709\u9884\u6d4b\u6b63\u6837\u672c**\n - ![$${\\mathop{\\rm Re}\\nolimits} {\\rm{call}} = {{TP} \\over {TP + FN}}$$](http://latex.codecogs.com/png.latex?%5Cfn_cm%20%24%24%7B%5Cmathop%7B%5Crm%20Re%7D%5Cnolimits%7D%20%7B%5Crm%7Bcall%7D%7D%20%3D%20%7B%7BTP%7D%20%5Cover%20%7BTP%20&plus;%20FN%7D%7D%24%24) \uff0c\u5373\uff1a**\u6b63\u786e\u9884\u6d4b\u6b63\u6837\u672c/\u771f\u5b9e\u503c\u4e3a\u6b63\u6837\u672c**\n - \u603b\u662f\u8ba9`y=1`(\u8f83\u5c11\u7684\u7c7b)\uff0c\u8ba1\u7b97`Precision`\u548c`Recall`\n - ![$${F_1}Score = 2{{PR} \\over {P + R}}$$](http://latex.codecogs.com/png.latex?%5Cfn_cm%20%24%24%7BF_1%7DScore%20%3D%202%7B%7BPR%7D%20%5Cover%20%7BP%20&plus;%20R%7D%7D%24%24)\n - \u8fd8\u662f\u4ee5\u764c\u75c7\u9884\u6d4b\u4e3a\u4f8b\uff0c\u5047\u8bbe\u9884\u6d4b\u90fd\u662fno-cancer\uff0cTN=199\uff0cFN=1\uff0cTP=0\uff0cFP=0\uff0c\u6240\u4ee5\uff1aPrecision=0/0\uff0cRecall=0/1=0\uff0c\u5c3d\u7ba1accuracy=199/200=99.5%\uff0c\u4f46\u662f\u4e0d\u53ef\u4fe1\u3002\n\n- `\u03b5`\u7684\u9009\u53d6\n - \u5c1d\u8bd5\u591a\u4e2a`\u03b5`\u503c\uff0c\u4f7f`F1Score`\u7684\u503c\u9ad8\n- \u5b9e\u73b0\u4ee3\u7801\n```\n# \u9009\u62e9\u6700\u4f18\u7684epsilon\uff0c\u5373\uff1a\u4f7fF1Score\u6700\u5927    \ndef selectThreshold(yval,pval):\n    '''\u521d\u59cb\u5316\u6240\u9700\u53d8\u91cf'''\n    bestEpsilon = 0.\n    bestF1 = 0.\n    F1 = 0.\n    step = (np.max(pval)-np.min(pval))/1000\n    '''\u8ba1\u7b97'''\n    for epsilon in np.arange(np.min(pval),np.max(pval),step):\n        cvPrecision = pval<epsilon\n        tp = np.sum((cvPrecision == 1) & (yval == 1).ravel()).astype(float)  # sum\u6c42\u548c\u662fint\u578b\u7684\uff0c\u9700\u8981\u8f6c\u4e3afloat\n        fp = np.sum((cvPrecision == 1) & (yval == 0).ravel()).astype(float)\n        fn = np.sum((cvPrecision == 0) & (yval == 1).ravel()).astype(float)\n        precision = tp/(tp+fp)  # \u7cbe\u51c6\u5ea6\n        recision = tp/(tp+fn)   # \u53ec\u56de\u7387\n        F1 = (2*precision*recision)/(precision+recision)  # F1Score\u8ba1\u7b97\u516c\u5f0f\n        if F1 > bestF1:  # \u4fee\u6539\u6700\u4f18\u7684F1 Score\n            bestF1 = F1\n            bestEpsilon = epsilon\n    return bestEpsilon,bestF1\n```\n\n### 4\u3001\u9009\u62e9\u4f7f\u7528\u4ec0\u4e48\u6837\u7684feature\uff08\u5355\u5143\u9ad8\u65af\u5206\u5e03\uff09\n- \u5982\u679c\u4e00\u4e9b\u6570\u636e\u4e0d\u662f\u6ee1\u8db3\u9ad8\u65af\u5206\u5e03\u7684\uff0c\u53ef\u4ee5\u53d8\u5316\u4e00\u4e0b\u6570\u636e\uff0c\u4f8b\u5982`log(x+C),x^(1/2)`\u7b49\n- \u5982\u679c`p(x)`\u7684\u503c\u65e0\u8bba\u5f02\u5e38\u4e0e\u5426\u90fd\u5f88\u5927\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u7ec4\u5408\u591a\u4e2a`feature`,(\u56e0\u4e3afeature\u4e4b\u95f4\u53ef\u80fd\u662f\u6709\u5173\u7cfb\u7684)\n\n### 5\u3001\u591a\u5143\u9ad8\u65af\u5206\u5e03\n- \u5355\u5143\u9ad8\u65af\u5206\u5e03\u5b58\u5728\u7684\u95ee\u9898\n - \u5982\u4e0b\u56fe\uff0c\u7ea2\u8272\u7684\u70b9\u4e3a\u5f02\u5e38\u70b9\uff0c\u5176\u4ed6\u7684\u90fd\u662f\u6b63\u5e38\u70b9\uff08\u6bd4\u5982CPU\u548cmemory\u7684\u53d8\u5316\uff09   \n ![enter description here][50]\n - x1\u5bf9\u5e94\u7684\u9ad8\u65af\u5206\u5e03\u5982\u4e0b\uff1a   \n ![enter description here][51]\n - x2\u5bf9\u5e94\u7684\u9ad8\u65af\u5206\u5e03\u5982\u4e0b\uff1a   \n ![enter description here][52]\n - \u53ef\u4ee5\u770b\u51fa\u5bf9\u5e94\u7684p(x1)\u548cp(x2)\u7684\u503c\u53d8\u5316\u5e76\u4e0d\u5927\uff0c\u5c31\u4e0d\u4f1a\u8ba4\u4e3a\u5f02\u5e38\n - \u56e0\u4e3a\u6211\u4eec\u8ba4\u4e3afeature\u4e4b\u95f4\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u5982\u4e0a\u56fe\u662f\u4ee5**\u6b63\u5706**\u7684\u65b9\u5f0f\u6269\u5c55\n- \u591a\u5143\u9ad8\u65af\u5206\u5e03\n - ![$$x \\in {R^n}$$](http://latex.codecogs.com/png.latex?%5Cfn_cm%20%24%24x%20%5Cin%20%7BR%5En%7D%24%24)\uff0c\u5e76\u4e0d\u662f\u5efa\u7acb`p(x1),p(x2)...p(xn)`\uff0c\u800c\u662f\u7edf\u4e00\u5efa\u7acb`p(x)`\n - \u5176\u4e2d\u53c2\u6570\uff1a![$$\\mu  \\in {R^n},\\Sigma  \\in {R^{n \\times {\\rm{n}}}}$$](http://latex.codecogs.com/png.latex?%5Cfn_cm%20%24%24%5Cmu%20%5Cin%20%7BR%5En%7D%2C%5CSigma%20%5Cin%20%7BR%5E%7Bn%20%5Ctimes%20%7B%5Crm%7Bn%7D%7D%7D%7D%24%24),`\u03a3`\u4e3a**\u534f\u65b9\u5dee\u77e9\u9635**\n - ![$$p(x) = {1 \\over {{{(2\\pi )}^{{n \\over 2}}}|\\Sigma {|^{{1 \\over 2}}}}}{e^{ - {1 \\over 2}{{(x - u)}^T}{\\Sigma ^{ - 1}}(x - u)}}$$](http://latex.codecogs.com/png.latex?%5Cfn_cm%20%24%24p%28x%29%20%3D%20%7B1%20%5Cover%20%7B%7B%7B%282%5Cpi%20%29%7D%5E%7B%7Bn%20%5Cover%202%7D%7D%7D%7C%5CSigma%20%7B%7C%5E%7B%7B1%20%5Cover%202%7D%7D%7D%7D%7D%7Be%5E%7B%20-%20%7B1%20%5Cover%202%7D%7B%7B%28x%20-%20u%29%7D%5ET%7D%7B%5CSigma%20%5E%7B%20-%201%7D%7D%28x%20-%20u%29%7D%7D%24%24)\n - \u540c\u6837\uff0c`|\u03a3|`\u8d8a\u5c0f\uff0c`p(x)`\u8d8a\u5c16\n - \u4f8b\u5982\uff1a    \n ![enter description here][53]\uff0c  \n \u8868\u793ax1,x2**\u6b63\u76f8\u5173**\uff0c\u5373x1\u8d8a\u5927\uff0cx2\u4e5f\u5c31\u8d8a\u5927\uff0c\u5982\u4e0b\u56fe\uff0c\u4e5f\u5c31\u53ef\u4ee5\u5c06\u7ea2\u8272\u7684\u5f02\u5e38\u70b9\u68c0\u67e5\u51fa\u4e86\n ![enter description here][54]      \n \u82e5\uff1a   \n  ![enter description here][55]\uff0c   \n \u8868\u793ax1,x2**\u8d1f\u76f8\u5173**\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u591a\u5143\u9ad8\u65af\u5206\u5e03\u51fd\u6570    \ndef multivariateGaussian(X,mu,Sigma2):\n    k = len(mu)\n    if (Sigma2.shape[0]>1):\n        Sigma2 = np.diag(Sigma2)\n    '''\u591a\u5143\u9ad8\u65af\u5206\u5e03\u51fd\u6570'''    \n    X = X-mu\n    argu = (2*np.pi)**(-k/2)*np.linalg.det(Sigma2)**(-0.5)\n    p = argu*np.exp(-0.5*np.sum(np.dot(X,np.linalg.inv(Sigma2))*X,axis=1))  # axis\u8868\u793a\u6bcf\u884c\n    return p\n```\n### 6\u3001\u5355\u5143\u548c\u591a\u5143\u9ad8\u65af\u5206\u5e03\u7279\u70b9\n- \u5355\u5143\u9ad8\u65af\u5206\u5e03\n - \u4eba\u4e3a\u53ef\u4ee5\u6355\u6349\u5230`feature`\u4e4b\u95f4\u7684\u5173\u7cfb\u65f6\u53ef\u4ee5\u4f7f\u7528\n - \u8ba1\u7b97\u91cf\u5c0f\n- \u591a\u5143\u9ad8\u65af\u5206\u5e03\n - \u81ea\u52a8\u6355\u6349\u5230\u76f8\u5173\u7684feature\n - \u8ba1\u7b97\u91cf\u5927\uff0c\u56e0\u4e3a\uff1a![$$\\Sigma  \\in {R^{n \\times {\\rm{n}}}}$$](http://latex.codecogs.com/png.latex?%5Cfn_cm%20%24%24%5CSigma%20%5Cin%20%7BR%5E%7Bn%20%5Ctimes%20%7B%5Crm%7Bn%7D%7D%7D%7D%24%24)\n - `m>n`\u6216`\u03a3`\u53ef\u9006\u65f6\u53ef\u4ee5\u4f7f\u7528\u3002\uff08\u82e5\u4e0d\u53ef\u9006\uff0c\u53ef\u80fd\u6709\u5197\u4f59\u7684x\uff0c\u56e0\u4e3a\u7ebf\u6027\u76f8\u5173\uff0c\u4e0d\u53ef\u9006\uff0c\u6216\u8005\u5c31\u662fm<n\uff09\n\n### 7\u3001\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\n- \u663e\u793a\u6570\u636e     \n![enter description here][56]\n- \u7b49\u9ad8\u7ebf      \n![enter description here][57]\n- \u5f02\u5e38\u70b9\u6807\u6ce8   \n![enter description here][58]\n\n\n\n----------------------------------\n\n\n  [1]: ./images/LinearRegression_01.png \"LinearRegression_01.png\"\n  [2]: ./images/LogisticRegression_01.png \"LogisticRegression_01.png\"\n  [3]: ./images/LogisticRegression_02.png \"LogisticRegression_02.png\"\n  [4]: ./images/LogisticRegression_03.jpg \"LogisticRegression_03.jpg\"\n  [5]: ./images/LogisticRegression_04.png \"LogisticRegression_04.png\"\n  [6]: ./images/LogisticRegression_05.png \"LogisticRegression_05.png\"\n  [7]: ./images/LogisticRegression_06.png \"LogisticRegression_06.png\"\n  [8]: ./images/LogisticRegression_07.png \"LogisticRegression_07.png\"\n  [9]: ./images/LogisticRegression_08.png \"LogisticRegression_08.png\"\n  [10]: ./images/LogisticRegression_09.png \"LogisticRegression_09.png\"\n  [11]: ./images/LogisticRegression_11.png \"LogisticRegression_11.png\"\n  [12]: ./images/LogisticRegression_10.png \"LogisticRegression_10.png\"\n  [13]: ./images/LogisticRegression_12.png \"LogisticRegression_12.png\"\n  [14]: ./images/LogisticRegression_13.png \"LogisticRegression_13.png\"\n  [15]: ./images/NeuralNetwork_01.png \"NeuralNetwork_01.png\"\n  [16]: ./images/NeuralNetwork_02.png \"NeuralNetwork_02.png\"\n  [17]: ./images/NeuralNetwork_03.jpg \"NeuralNetwork_03.jpg\"\n  [18]: ./images/NeuralNetwork_04.png \"NeuralNetwork_04.png\"\n  [19]: ./images/NeuralNetwork_05.png \"NeuralNetwork_05.png\"\n  [20]: ./images/NeuralNetwork_06.png \"NeuralNetwork_06.png\"\n  [21]: ./images/NeuralNetwork_07.png \"NeuralNetwork_07.png\"\n  [22]: ./images/NeuralNetwork_08.png \"NeuralNetwork_08.png\"\n  [23]: ./images/NeuralNetwork_09.png \"NeuralNetwork_09.png\"\n  [24]: ./images/SVM_01.png \"SVM_01.png\"\n  [25]: ./images/SVM_02.png \"SVM_02.png\"\n  [26]: ./images/SVM_03.png \"SVM_03.png\"\n  [27]: ./images/SVM_04.png \"SVM_04.png\"\n  [28]: ./images/SVM_05.png \"SVM_05.png\"\n  [29]: ./images/SVM_06.png \"SVM_06.png\"\n  [30]: ./images/SVM_07.png \"SVM_07.png\"\n  [31]: ./images/SVM_08.png \"SVM_08.png\"\n  [32]: ./images/SVM_09.png \"SVM_09.png\"\n  [33]: ./images/SVM_10.png \"SVM_10.png\"\n  [34]: ./images/K-Means_01.png \"K-Means_01.png\"\n  [35]: ./images/K-Means_02.png \"K-Means_02.png\"\n  [36]: ./images/K-Means_03.png \"K-Means_03.png\"\n  [37]: ./images/K-Means_07.png \"K-Means_07.png\"\n  [38]: ./images/K-Means_04.png \"K-Means_04.png\"\n  [39]: ./images/K-Means_05.png \"K-Means_05.png\"\n  [40]: ./images/K-Means_06.png \"K-Means_06.png\"\n  [41]: ./images/PCA_01.png \"PCA_01.png\"\n  [42]: ./images/PCA_02.png \"PCA_02.png\"\n  [43]: ./images/PCA_03.png \"PCA_03.png\"\n  [44]: ./images/PCA_04.png \"PCA_04.png\"\n  [45]: ./images/PCA_05.png \"PCA_05.png\"\n  [46]: ./images/PCA_06.png \"PCA_06.png\"\n  [47]: ./images/PCA_07.png \"PCA_07.png\"\n  [48]: ./images/PCA_08.png \"PCA_08.png\"\n  [49]: ./images/AnomalyDetection_01.png \"AnomalyDetection_01.png\"\n  [50]: ./images/AnomalyDetection_04.png \"AnomalyDetection_04.png\"\n  [51]: ./images/AnomalyDetection_02.png \"AnomalyDetection_02.png\"\n  [52]: ./images/AnomalyDetection_03.png \"AnomalyDetection_03.png\"\n  [53]: ./images/AnomalyDetection_05.png \"AnomalyDetection_05.png\"\n  [54]: ./images/AnomalyDetection_07.png \"AnomalyDetection_07.png\"\n  [55]: ./images/AnomalyDetection_06.png \"AnomalyDetection_06.png\"\n  [56]: ./images/AnomalyDetection_08.png \"AnomalyDetection_08.png\"\n  [57]: ./images/AnomalyDetection_09.png \"AnomalyDetection_09.png\"\n  [58]: ./images/AnomalyDetection_10.png \"AnomalyDetection_10.png\"\n"}, {"repo": "/ft-interactive/chart-doctor", "language": "HTML", "readme_contents": "# chart-doctor\nSample files to accompany the FT's [Chart Doctor](http://www.ft.com/chart-doctor) feature.\n\n## Licence\nThis software is published by the Financial Times under the [MIT licence](http://opensource.org/licenses/MIT). \n\nPlease note the MIT licence includes only the software, and does not cover any FT content made available using the software, which is copyright &copy; The Financial Times Limited, all rights reserved. For more information about re-publishing FT content, please contact our [syndication department](http://syndication.ft.com/).\n"}, {"repo": "/InterviewMap/CS-Interview-Knowledge-Map", "language": null, "readme_contents": "<img align=\"center\" src='./InterviewMap.png' />\n\n<h1 align=\"center\">\n  Interview Map\n</h1>\n\n<h4 align=\"center\">This is a map that can help you prepare better for the next interview</h4>\n\n<p align=\"center\">\n  <a href=\"https://gitter.im/interview-map/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link\"><img src=\"https://img.shields.io/gitter/room/nwjs/nw.js.svg\" alt=\"Gitter\"></a>\n  <a href=\"https://t.me/joinchat/GULTjw9enq3J4NQ6Yh5Ntw\"><img src=\"https://img.shields.io/badge/chat-Telegram-brightgreen.svg\" alt=\"Telegram\"></a>\n</p>\n\n## Foreword\n\n> When you are old, looking back on your life, you will find out: when to study abroad, when to decide on your first occupation, when to choose the other half to fall in love with, when to marry; all of these are great changes in fate. We were just standing at the three-forked intersection and seeing the wind blow the clouds and sails. The day you made your choice was a quite dull and peaceful day in the diary, and it was thought to be an ordinary day in your life.\n> A project to change the interview \u2014 Interview Map.\n\n\nThe best job-hopping months, September and October, are coming\uff08in Chinese, there is an idiom called \"Golden September and Silver October\u201d). Most people will be eager to prepare for and to pursue better job opportunities. The interview will be their biggest challenge.\n\nFor the interview, the usual accumulation of learning is necessary, but the preparation before the interview is also crucial.\n\nA few months ago, I set up a small team. It took us half a year to search for interview questions from big companies, filtering out nearly 100 knowledge points, writing the content and translating it all into English. Today, we finally release the first version and the total number of words has reached more than 100,000 so far.\n\nWe think that rote learning of the interview questions is not very useful. Only when you are familiar with the various knowledge points and are capable of integrating them, can you get through the interviews. This InterviewMap currently contains nearly a hundred high-frequency knowledge points. No matter the preparation before the interview or the study, we believe that it will help you. The current content includes JS, network, browser related, performance optimization, security, framework, Git, data structures, algorithms, etc. Whether it is basic or advanced learning or source code interpretation, you can get a satisfactory answer in this InterviewMap, and we hope that the InterviewMap can help you better prepare for your interview.\n\nThe contents of the repository will update continuously, and more content will be added into the repository later, such as system design, the blockchain, operating and support, backend, etc. Of course, these are not my strengths, and I will invite friends who have good experience in this area to write this content.\n\n\n# Outline\n![mind](https://yck-1254263422.cos.ap-shanghai.myqcloud.com/blog/2019-06-01-043136.png)\n\n\n## Contributing\nIf you find something wrong with the knowledge point or there\u2019s a bug in the code, you are welcome to submit an English [issue](https://github.com/InterviewMap/CS-Interview-Knowledge-Map/issues/new). If your English is not good, please discuss it in  [this issue](https://github.com/InterviewMap/CS-Interview-Knowledge-Map/issues/18).\n\nIf you think you know of a good knowledge point to contribute, or would like to participate in translation and proofreading, you are welcome to submit a [PR](https://github.com/InterviewMap/CS-Interview-Knowledge-Map/pulls), or you can contact me at <zx597813039@gmail.com>.\n\n## Todo\n\n* Complete the content about CSS\n* Complete the content about Webpack\n* Complete the content about the mini program (WeiXin)\n* Improve the content of the framework\n\nThe above content is expected to be updated completely in September, and you are welcome to participate in the construction of this interviewmap.\n\n## Reading\n\n[Online version is clearer to read](https://yuchengkai.cn/docs/).\n\n## Communicate and share\nIf you want to communicate and discuss the content of this interviewmap with others, you can join [communicate group](https://github.com/InterviewMap/CS-Interview-Knowledge-Map/issues/19) or [gitter](https://gitter.im/interview-map/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link).\n\n\n## Support us\nIf the interviewmap helps you with your interview or study, you can [support our work](https://github.com/InterviewMap/CS-Interview-Knowledge-Map/issues/20).\n\n\n## License\n[MIT](LICENSE). Copyright (c)\n"}, {"repo": "/nosir/cleave.js", "language": "JavaScript", "readme_contents": "# Cleave.js\n\n[![Travis](https://img.shields.io/travis/nosir/cleave.js.svg?maxAge=2592000)](https://travis-ci.org/nosir/cleave.js)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/b1c0b0da42fa418f887076a3f7352aea)](https://www.codacy.com/app/nosir/cleave-js?utm_source=github.com&utm_medium=referral&utm_content=nosir/cleave.js&utm_campaign=badger)\n[![npm version](https://badge.fury.io/js/cleave.js.svg)](https://badge.fury.io/js/cleave.js)\n[![npm downloads](https://img.shields.io/npm/dm/cleave.js.svg)](https://www.npmjs.com/package/cleave.js)\n[![Documents](https://img.shields.io/badge/documents-check-3362c2.svg)](https://github.com/nosir/cleave.js/blob/master/doc/doc.md)\n\nCleave.js has a simple purpose: to help you format input text content automatically.\n\n## Features\n\n- Credit card number formatting\n- Phone number formatting (i18n js lib separated for each country to reduce size)\n- Date formatting\n- Numeral formatting\n- Custom delimiter, prefix and blocks pattern\n- CommonJS / AMD mode\n- ReactJS component\n- AngularJS directive (1.x)\n- ES Module\n\n**TL;DR** [the demo page](http://nosir.github.io/cleave.js/)\n\n## Why?\n\nThe idea is to provide an easy way to increase input field readability by formatting your typed data. By using this library, you won't need to write any mind-blowing regular expressions or mask patterns to format input text.\n\nHowever, this isn't meant to replace any validation or mask library, you should still sanitize and validate your data in backend.\n\n## Installation\n\n#### npm\n\n```bash\nnpm install --save cleave.js\n```\n\n#### CDN\n\ncleave.js is available on [jsDelivr](https://www.jsdelivr.com/package/npm/cleave.js) and on [cdnjs.com](https://cdnjs.com/libraries/cleave.js)\n\n#### old school\nGrab file from [dist](https://github.com/nosir/cleave.js/tree/master/dist) directory\n\n## Usage\n\nSimply include\n\n```html\n<script src=\"cleave.min.js\"></script>\n<script src=\"cleave-phone.{country}.js\"></script>\n```\n\n> `cleave-phone.{country}.js` addon is only required when phone shortcut mode is enabled. See more in documentation: [phone lib addon](https://github.com/nosir/cleave.js/blob/master/doc/phone-lib-addon.md) section\n\nThen have a text field\n\n```html\n<input class=\"input-phone\" type=\"text\"/>\n```\n\nNow in your JavaScript\n\n```js\nvar cleave = new Cleave('.input-phone', {\n    phone: true,\n    phoneRegionCode: '{country}'\n});\n```\n\n> `.input-element` here is a unique DOM element. If you want to apply Cleave for multiple elements, you need to give different CSS selectors and apply to each of them, effectively, you might want to create individual instance by a loop, e.g. [loop  solution](https://github.com/nosir/cleave.js/issues/138#issuecomment-268024840)\n\nMore examples: [the demo page](http://nosir.github.io/cleave.js/)\n\n#### CommonJS\n```js\nvar Cleave = require('cleave.js');\nrequire('cleave.js/dist/addons/cleave-phone.{country}');\n\nvar cleave = new Cleave(...)\n```\n\n#### AMD\n\n```js\nrequire(['cleave.js/dist/cleave.min', 'cleave.js/dist/addons/cleave-phone.{country}'], function (Cleave) {\n    var cleave = new Cleave(...)\n});\n```\n\n#### ES Module\n```js\n// Rollup, WebPack\nimport Cleave from 'cleave.js';\nvar cleave = new Cleave(...)\n\n// Browser\nimport Cleave from 'node_modules/cleave.js/dist/cleave-esm.min.js';\nvar cleave = new Cleave(...)\n```\n\n#### TypeScript\n\nTypes are contributed by the community and are available via `npm install --save-dev @types/cleave.js`. Once installed, you can import Cleave like the following:\n\n```ts\nimport Cleave = require('cleave.js');\n```\n\nTypes for the React-component are also available and can be imported in the same way.\n\n```ts\nimport Cleave = require('cleave.js/react');\n```\n\n## ReactJS component usage\n\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Cleave from 'cleave.js/react';\n```\n\nThen in JSX:\n\n```js\nclass MyComponent extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.onCreditCardChange = this.onCreditCardChange.bind(this);\n        this.onCreditCardFocus = this.onCreditCardFocus.bind(this);\n    }\n\n    onCreditCardChange(event) {\n        // formatted pretty value\n        console.log(event.target.value);\n\n        // raw value\n        console.log(event.target.rawValue);\n    }\n\n    onCreditCardFocus(event) {\n        // update some state\n    }\n\n    render() {\n        return (\n            <Cleave placeholder=\"Enter your credit card number\"\n                options={{creditCard: true}}\n                onFocus={this.onCreditCardFocus}\n                onChange={this.onCreditCardChange} />\n        );\n    }\n}\n```\n\nAs you can see, here you simply use `<Cleave/>` as a normal `<input/>` field\n\n- Attach HTML `<input/>` attributes\n- Pass in the custom `options` prop\n- Add ReactJS `onChange` event listener\n\nAdvanced usage:\n\n- [How to pass default value](https://github.com/nosir/cleave.js/blob/master/doc/reactjs-component-usage.md#how-to-pass-default-value)\n- [How to get ref of cleave instance and call methods](https://github.com/nosir/cleave.js/blob/master/doc/reactjs-component-usage.md#how-to-call-public-methods)\n- [How to update raw value](https://github.com/nosir/cleave.js/blob/master/doc/reactjs-component-usage.md#how-to-update-raw-value)\n- [How to get ref of the input field](https://github.com/nosir/cleave.js/blob/master/doc/reactjs-component-usage.md#how-to-get-ref-of-the-input-field)\n- [How to use it with redux form](https://github.com/nosir/cleave.js/blob/master/doc/reactjs-component-usage.md#how-to-use-it-with-redux-form)\n\nUsage for `Webpack`, `Browserify` and more in documentation: [ReactJS component usage](https://github.com/nosir/cleave.js/blob/master/doc/reactjs-component-usage.md)\n\n## AngularJS directive usage\n\nFirst include the directive module:\n\n```html\n<script src=\"cleave.js/dist/cleave-angular.min.js\"></script>\n<script src=\"cleave.js/dist/addons/cleave-phone.{country}.js\"></script>\n```\n\nAnd in your model:\n\n```js\nangular.module('app', ['cleave.js'])\n\n.controller('AppController', function($scope) {\n    $scope.onCreditCardTypeChanged = function(type) {\n        $scope.model.creditCardType = type;\n    };\n\n    $scope.model = {\n        rawValue: ''\n    };\n\n    $scope.options = {\n        creditCard: {\n            creditCard: true,\n            onCreditCardTypeChanged: $scope.onCreditCardTypeChanged\n        }\n    };\n});\n```\n\nThen easily you can apply `cleave` directive to `input` field:\n\n```html\n<div ng-controller=\"AppController\">\n    <input ng-model=\"model.rawValue\" ng-whatever=\"...\" type=\"text\" placeholder=\"Enter credit card number\"\n        cleave=\"options.creditCard\"/>\n</div>\n```\n\nMore usage in documentation: [Angular directive usage](https://github.com/nosir/cleave.js/blob/master/doc/angularjs-directive-usage.md)\n\n## jQuery fn usage\nPlease check [here](https://github.com/nosir/cleave.js/issues/341)\n\n## Playground\n\n- [Plain JSFiddle (Basic usage)](https://jsfiddle.net/nosir/kbaxx64s/)\n- [Plain JSFiddle (More examples)](https://jsfiddle.net/nosir/aLnhdf3z/)\n- [React JSFiddle](https://jsfiddle.net/nosir/gLLsrxxf/)\n- [Angular JSFiddle](https://jsfiddle.net/nosir/q58sh22t/)\n\n## Documentation\n\n- [JavaScript API](https://github.com/nosir/cleave.js/blob/master/doc/js-api.md)\n    - [Constructor](https://github.com/nosir/cleave.js/blob/master/doc/constructor.md)\n    - [Options](https://github.com/nosir/cleave.js/blob/master/doc/options.md)\n    - [Public methods](https://github.com/nosir/cleave.js/blob/master/doc/public-methods.md)\n- [Phone lib addon](https://github.com/nosir/cleave.js/blob/master/doc/phone-lib-addon.md)\n- [ReactJS component usage](https://github.com/nosir/cleave.js/blob/master/doc/reactjs-component-usage.md)\n- [AngularJS directive usage](https://github.com/nosir/cleave.js/blob/master/doc/angularjs-directive-usage.md)\n\n## Run tasks\n\n```bash\nnpm install\n```\n\nBuild assets\n\n```bash\ngulp build\n```\n\nRun tests\n\n```bash\ngulp test\n```\n\nLint\n\n```bash\ngulp eslint\n```\n\nPublish (build, tests & lint)\n\n```bash\ngulp publish\n```\n\n> For contributors, please run `gulp publish` to ensure your PR passes tests and lint, also we have a [not in the plan](https://github.com/nosir/cleave.js/blob/master/doc/not-in-the-plan.md) list you may concern.\n\n## Get in touch\n- Twitter: [@rison](https://twitter.com/rison)\n\n## References\n\n- Payment credit card number IIN https://en.wikipedia.org/wiki/Payment_card_number#Issuer_identification_number_.28IIN.29\n- Google phone numbers formatting https://github.com/googlei18n/libphonenumber\n- Decimal mark and thousands separating style https://en.wikipedia.org/wiki/Decimal_mark#Examples_of_use\n\n## Licence\n\nCleave.js is licensed under the [Apache License Version 2.0](http://www.apache.org/licenses/LICENSE-2.0)\n\n- Google [libphonenumber](https://github.com/googlei18n/libphonenumber) is included under its [Apache License Version 2.0](http://www.apache.org/licenses/LICENSE-2.0)\n\n[![Analytics](https://ga-beacon.appspot.com/UA-79828599-1/cleave.js?pixel)](https://github.com/igrigorik/ga-beacon)\n"}, {"repo": "/ccgus/fmdb", "language": "Objective-C", "readme_contents": "# FMDB v2.7\n<!--[![Platform](https://img.shields.io/cocoapods/p/FMDB.svg?style=flat)](http://cocoadocs.org/docsets/Alamofire)-->\n[![CocoaPods Compatible](https://img.shields.io/cocoapods/v/FMDB.svg)](https://img.shields.io/cocoapods/v/FMDB.svg)\n[![Carthage Compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)\n\nThis is an Objective-C wrapper around SQLite: http://sqlite.org/\n\n## The FMDB Mailing List:\nhttp://groups.google.com/group/fmdb\n\n## Read the SQLite FAQ:\nhttp://www.sqlite.org/faq.html\n\nSince FMDB is built on top of SQLite, you're going to want to read this page top to bottom at least once.  And while you're there, make sure to bookmark the SQLite Documentation page: http://www.sqlite.org/docs.html\n\n## Contributing\nDo you have an awesome idea that deserves to be in FMDB?  You might consider pinging ccgus first to make sure he hasn't already ruled it out for some reason.  Otherwise pull requests are great, and make sure you stick to the local coding conventions.  However, please be patient and if you haven't heard anything from ccgus for a week or more, you might want to send a note asking what's up.\n\n## Installing\n\n### CocoaPods\n\n[![Dependency Status](https://www.versioneye.com/objective-c/fmdb/2.3/badge.svg?style=flat)](https://www.versioneye.com/objective-c/fmdb/2.3)\n[![Reference Status](https://www.versioneye.com/objective-c/fmdb/reference_badge.svg?style=flat)](https://www.versioneye.com/objective-c/fmdb/references)\n\nFMDB can be installed using [CocoaPods](https://cocoapods.org/).\n\nIf you haven't done so already, you might want to initialize the project, to have it produce a `Podfile` template for you:\n\n```\n$ pod init\n```\n\nThen, edit the `Podfile`, adding `FMDB`:\n\n```ruby\n# Uncomment the next line to define a global platform for your project\n# platform :ios, '9.0'\n\ntarget 'MyApp' do\n    # Comment the next line if you're not using Swift and don't want to use dynamic frameworks\n    use_frameworks!\n\n    # Pods for MyApp2\n\n    pod 'FMDB'\n    # pod 'FMDB/FTS'   # FMDB with FTS\n    # pod 'FMDB/standalone'   # FMDB with latest SQLite amalgamation source\n    # pod 'FMDB/standalone/FTS'   # FMDB with latest SQLite amalgamation source and FTS\n    # pod 'FMDB/SQLCipher'   # FMDB with SQLCipher\nend\n```\n\nThen install the pods:\n\n```\n$ pod install\n```\n\nThen open the `.xcworkspace` rather than the `.xcodeproj`.\n\nFor more information on Cocoapods visit https://cocoapods.org.\n\n**If using FMDB with [SQLCipher](https://www.zetetic.net/sqlcipher/) you must use the FMDB/SQLCipher subspec. The FMDB/SQLCipher subspec declares SQLCipher as a dependency, allowing FMDB to be compiled with the `-DSQLITE_HAS_CODEC` flag.**\n\n### Carthage\n\nOnce you make sure you have [the latest version of Carthage](https://github.com/Carthage/Carthage/releases), you can open up a command line terminal, navigate to your project's main directory, and then do the following commands:\n\n```\n$ echo ' github \"ccgus/fmdb\" ' > ./Cartfile\n$ carthage update\n```\n\nYou can then configure your project as outlined in Carthage's [Getting Started](https://github.com/Carthage/Carthage#getting-started) (i.e. for iOS, adding the framework to the \"Link Binary with Libraries\" in your target and adding the `copy-frameworks` script; in macOS, adding the framework to the list of \"Embedded Binaries\").\n\n## FMDB Class Reference:\nhttp://ccgus.github.io/fmdb/html/index.html\n\n## Automatic Reference Counting (ARC) or Manual Memory Management?\nYou can use either style in your Cocoa project.  FMDB will figure out which you are using at compile time and do the right thing.\n\n## What's New in FMDB 2.7\n\nFMDB 2.7 attempts to support a more natural interface. This represents a fairly significant change for Swift developers (audited for nullability; shifted to properties in external interfaces where possible rather than methods; etc.). For Objective-C developers, this should be a fairly seamless transition (unless you were using the ivars that were previously exposed in the public interface, which you shouldn't have been doing, anyway!). \n\n### Nullability and Swift Optionals\n\nFMDB 2.7 is largely the same as prior versions, but has been audited for nullability. For Objective-C users, this simply means that if you perform a static analysis of your FMDB-based project, you may receive more meaningful warnings as you review your project, but there are likely to be few, if any, changes necessary in your code.\n\nFor Swift users, this nullability audit results in changes that are not entirely backward compatible with FMDB 2.6, but is a little more Swifty. Before FMDB was audited for nullability, Swift was forced to defensively assume that variables were optional, but the library now more accurately knows which properties and method parameters are optional, and which are not.\n\nThis means, though, that Swift code written for FMDB 2.7 may require changes. For example, consider the following Swift 3/Swift 4 code for FMDB 2.6:\n\n```swift\nqueue.inTransaction { db, rollback in\n    do {\n        guard let db == db else {\n            // handle error here\n            return\n        }\n\n        try db.executeUpdate(\"INSERT INTO foo (bar) VALUES (?)\", values: [1])\n        try db.executeUpdate(\"INSERT INTO foo (bar) VALUES (?)\", values: [2])\n    } catch {\n        rollback?.pointee = true\n    }\n}\n```\n\nBecause FMDB 2.6 was not audited for nullability, Swift inferred that `db` and `rollback` were optionals. But, now, in FMDB 2.7, Swift now knows that, for example, neither `db` nor `rollback` above can be `nil`, so they are no longer optionals. Thus it becomes:\n\n```swift\nqueue.inTransaction { db, rollback in\n    do {\n        try db.executeUpdate(\"INSERT INTO foo (bar) VALUES (?)\", values: [1])\n        try db.executeUpdate(\"INSERT INTO foo (bar) VALUES (?)\", values: [2])\n    } catch {\n        rollback.pointee = true\n    }\n}\n```\n\n### Custom Functions\n\nIn the past, when writing custom functions, you would have to generally include your own `@autoreleasepool` block to avoid problems when writing functions that scanned through a large table. Now, FMDB will automatically wrap it in an autorelease pool, so you don't have to.\n\nAlso, in the past, when retrieving the values passed to the function, you had to drop down to the SQLite C API and include your own `sqlite3_value_XXX` calls. There are now `FMDatabase` methods, `valueInt`, `valueString`, etc., so you can stay within Swift and/or Objective-C, without needing to call the C functions yourself. Likewise, when specifying the return values, you no longer need to call `sqlite3_result_XXX` C API, but rather you can use `FMDatabase` methods, `resultInt`, `resultString`, etc. There is a new `enum` for `valueType` called `SqliteValueType`, which can be used for checking the type of parameter passed to the custom function.\n\nThus, you can do something like (as of Swift 3):\n\n```swift\ndb.makeFunctionNamed(\"RemoveDiacritics\", arguments: 1) { context, argc, argv in\n    guard db.valueType(argv[0]) == .text || db.valueType(argv[0]) == .null else {\n        db.resultError(\"Expected string parameter\", context: context)\n        return\n    }\n\n    if let string = db.valueString(argv[0])?.folding(options: .diacriticInsensitive, locale: nil) {\n        db.resultString(string, context: context)\n    } else {\n        db.resultNull(context: context)\n    }\n}\n```\n\nAnd you can then use that function in your SQL (in this case, matching both \"Jose\" and \"Jos\u00e9\"):\n\n```sql\nSELECT * FROM employees WHERE RemoveDiacritics(first_name) LIKE 'jose'\n```\n\nNote, the method `makeFunctionNamed:maximumArguments:withBlock:` has been renamed to `makeFunctionNamed:arguments:block:`, to more accurately reflect the functional intent of the second parameter.\n\n### API Changes\n\nIn addition to the `makeFunctionNamed` noted above, there are a few other API changes. Specifically, \n\n - To become consistent with the rest of the API, the methods `objectForColumnName` and `UTF8StringForColumnName` have been renamed to `objectForColumn` and `UTF8StringForColumn`.\n\n - Note, the `objectForColumn` (and the associted subscript operator) now returns `nil` if an invalid column name/index is passed to it. It used to return `NSNull`.\n\n - To avoid confusion with `FMDatabaseQueue` method `inTransaction`, which performs transactions, the `FMDatabase` method to determine whether you are in a transaction or not, `inTransaction`, has been replaced with a read-only property, `isInTransaction`. \n\n - Several functions have been converted to properties, namely, `databasePath`, `maxBusyRetryTimeInterval`, `shouldCacheStatements`, `sqliteHandle`, `hasOpenResultSets`, `lastInsertRowId`, `changes`, `goodConnection`, `columnCount`, `resultDictionary`, `applicationID`, `applicationIDString`, `userVersion`, `countOfCheckedInDatabases`, `countOfCheckedOutDatabases`, and `countOfOpenDatabases`. For Objective-C users, this has little material impact, but for Swift users, it results in a slightly more natural interface. Note: For Objective-C developers, previously versions of FMDB exposed many ivars (but we hope you weren't using them directly, anyway!), but the implmentation details for these are no longer exposed.\n\n### URL Methods\n\nIn keeping with Apple's shift from paths to URLs, there are now `NSURL` renditions of the various `init` methods, previously only accepting paths. \n\n## Usage\nThere are three main classes in FMDB:\n\n1. `FMDatabase` - Represents a single SQLite database.  Used for executing SQL statements.\n2. `FMResultSet` - Represents the results of executing a query on an `FMDatabase`.\n3. `FMDatabaseQueue` - If you're wanting to perform queries and updates on multiple threads, you'll want to use this class.  It's described in the \"Thread Safety\" section below.\n\n### Database Creation\nAn `FMDatabase` is created with a path to a SQLite database file.  This path can be one of these three:\n\n1. A file system path.  The file does not have to exist on disk.  If it does not exist, it is created for you.\n2. An empty string (`@\"\"`).  An empty database is created at a temporary location.  This database is deleted when the `FMDatabase` connection is closed.\n3. `NULL`.  An in-memory database is created.  This database will be destroyed when the `FMDatabase` connection is closed.\n\n(For more information on temporary and in-memory databases, read the sqlite documentation on the subject: http://www.sqlite.org/inmemorydb.html)\n\n```objc\nNSString *path = [NSTemporaryDirectory() stringByAppendingPathComponent:@\"tmp.db\"];\nFMDatabase *db = [FMDatabase databaseWithPath:path];\n```\n\n### Opening\n\nBefore you can interact with the database, it must be opened.  Opening fails if there are insufficient resources or permissions to open and/or create the database.\n\n```objc\nif (![db open]) {\n    // [db release];   // uncomment this line in manual referencing code; in ARC, this is not necessary/permitted\n    db = nil;\n    return;\n}\n```\n\n### Executing Updates\n\nAny sort of SQL statement which is not a `SELECT` statement qualifies as an update.  This includes `CREATE`, `UPDATE`, `INSERT`, `ALTER`, `COMMIT`, `BEGIN`, `DETACH`, `DELETE`, `DROP`, `END`, `EXPLAIN`, `VACUUM`, and `REPLACE` statements (plus many more).  Basically, if your SQL statement does not begin with `SELECT`, it is an update statement.\n\nExecuting updates returns a single value, a `BOOL`.  A return value of `YES` means the update was successfully executed, and a return value of `NO` means that some error was encountered.  You may invoke the `-lastErrorMessage` and `-lastErrorCode` methods to retrieve more information.\n\n### Executing Queries\n\nA `SELECT` statement is a query and is executed via one of the `-executeQuery...` methods.\n\nExecuting queries returns an `FMResultSet` object if successful, and `nil` upon failure.  You should use the `-lastErrorMessage` and `-lastErrorCode` methods to determine why a query failed.\n\nIn order to iterate through the results of your query, you use a `while()` loop.  You also need to \"step\" from one record to the other.  With FMDB, the easiest way to do that is like this:\n\n```objc\nFMResultSet *s = [db executeQuery:@\"SELECT * FROM myTable\"];\nwhile ([s next]) {\n    //retrieve values for each record\n}\n```\n\nYou must always invoke `-[FMResultSet next]` before attempting to access the values returned in a query, even if you're only expecting one:\n\n```objc\nFMResultSet *s = [db executeQuery:@\"SELECT COUNT(*) FROM myTable\"];\nif ([s next]) {\n    int totalCount = [s intForColumnIndex:0];\n}\n```\n\n`FMResultSet` has many methods to retrieve data in an appropriate format:\n\n- `intForColumn:`\n- `longForColumn:`\n- `longLongIntForColumn:`\n- `boolForColumn:`\n- `doubleForColumn:`\n- `stringForColumn:`\n- `dateForColumn:`\n- `dataForColumn:`\n- `dataNoCopyForColumn:`\n- `UTF8StringForColumn:`\n- `objectForColumn:`\n\nEach of these methods also has a `{type}ForColumnIndex:` variant that is used to retrieve the data based on the position of the column in the results, as opposed to the column's name.\n\nTypically, there's no need to `-close` an `FMResultSet` yourself, since that happens when either the result set is exhausted. However, if you only pull out a single request or any other number of requests which don't exhaust the result set, you will need to call the `-close` method on the `FMResultSet`.\n\n### Closing\n\nWhen you have finished executing queries and updates on the database, you should `-close` the `FMDatabase` connection so that SQLite will relinquish any resources it has acquired during the course of its operation.\n\n```objc\n[db close];\n```\n\n### Transactions\n\n`FMDatabase` can begin and commit a transaction by invoking one of the appropriate methods or executing a begin/end transaction statement.\n\n### Multiple Statements and Batch Stuff\n\nYou can use `FMDatabase`'s executeStatements:withResultBlock: to do multiple statements in a string:\n\n```objc\nNSString *sql = @\"create table bulktest1 (id integer primary key autoincrement, x text);\"\n                 \"create table bulktest2 (id integer primary key autoincrement, y text);\"\n                 \"create table bulktest3 (id integer primary key autoincrement, z text);\"\n                 \"insert into bulktest1 (x) values ('XXX');\"\n                 \"insert into bulktest2 (y) values ('YYY');\"\n                 \"insert into bulktest3 (z) values ('ZZZ');\";\n\nsuccess = [db executeStatements:sql];\n\nsql = @\"select count(*) as count from bulktest1;\"\n       \"select count(*) as count from bulktest2;\"\n       \"select count(*) as count from bulktest3;\";\n\nsuccess = [self.db executeStatements:sql withResultBlock:^int(NSDictionary *dictionary) {\n    NSInteger count = [dictionary[@\"count\"] integerValue];\n    XCTAssertEqual(count, 1, @\"expected one record for dictionary %@\", dictionary);\n    return 0;\n}];\n```\n\n### Data Sanitization\n\nWhen providing a SQL statement to FMDB, you should not attempt to \"sanitize\" any values before insertion.  Instead, you should use the standard SQLite binding syntax:\n\n```sql\nINSERT INTO myTable VALUES (?, ?, ?, ?)\n```\n\nThe `?` character is recognized by SQLite as a placeholder for a value to be inserted.  The execution methods all accept a variable number of arguments (or a representation of those arguments, such as an `NSArray`, `NSDictionary`, or a `va_list`), which are properly escaped for you.\n\nAnd, to use that SQL with the `?` placeholders from Objective-C:\n\n```objc\nNSInteger identifier = 42;\nNSString *name = @\"Liam O'Flaherty (\\\"the famous Irish author\\\")\";\nNSDate *date = [NSDate date];\nNSString *comment = nil;\n\nBOOL success = [db executeUpdate:@\"INSERT INTO authors (identifier, name, date, comment) VALUES (?, ?, ?, ?)\", @(identifier), name, date, comment ?: [NSNull null]];\nif (!success) {\n    NSLog(@\"error = %@\", [db lastErrorMessage]);\n}\n```\n\n> **Note:** Fundamental data types, like the `NSInteger` variable `identifier`, should be as a `NSNumber` objects, achieved by using the `@` syntax, shown above. Or you can use the `[NSNumber numberWithInt:identifier]` syntax, too.\n>\n> Likewise, SQL `NULL` values should be inserted as `[NSNull null]`. For example, in the case of `comment` which might be `nil` (and is in this example), you can use the `comment ?: [NSNull null]` syntax, which will insert the string if `comment` is not `nil`, but will insert `[NSNull null]` if it is `nil`.\n\nIn Swift, you would use `executeUpdate(values:)`, which not only is a concise Swift syntax, but also `throws` errors for proper error handling:\n\n```swift\ndo {\n    let identifier = 42\n    let name = \"Liam O'Flaherty (\\\"the famous Irish author\\\")\"\n    let date = Date()\n    let comment: String? = nil\n\n    try db.executeUpdate(\"INSERT INTO authors (identifier, name, date, comment) VALUES (?, ?, ?, ?)\", values: [identifier, name, date, comment ?? NSNull()])\n} catch {\n    print(\"error = \\(error)\")\n}\n```\n\n> **Note:** In Swift, you don't have to wrap fundamental numeric types like you do in Objective-C. But if you are going to insert an optional string, you would probably use the `comment ?? NSNull()` syntax (i.e., if it is `nil`, use `NSNull`, otherwise use the string).\n\nAlternatively, you may use named parameters syntax:\n\n```sql\nINSERT INTO authors (identifier, name, date, comment) VALUES (:identifier, :name, :date, :comment)\n```\n\nThe parameters *must* start with a colon. SQLite itself supports other characters, but internally the dictionary keys are prefixed with a colon, do **not** include the colon in your dictionary keys.\n\n```objc\nNSDictionary *arguments = @{@\"identifier\": @(identifier), @\"name\": name, @\"date\": date, @\"comment\": comment ?: [NSNull null]};\nBOOL success = [db executeUpdate:@\"INSERT INTO authors (identifier, name, date, comment) VALUES (:identifier, :name, :date, :comment)\" withParameterDictionary:arguments];\nif (!success) {\n    NSLog(@\"error = %@\", [db lastErrorMessage]);\n}\n```\n\nThe key point is that one should not use `NSString` method `stringWithFormat` to manually insert values into the SQL statement, itself. Nor should one Swift string interpolation to insert values into the SQL. Use `?` placeholders for values to be inserted into the database (or used in `WHERE` clauses in `SELECT` statements).\n\n<h2 id=\"threads\">Using FMDatabaseQueue and Thread Safety.</h2>\n\nUsing a single instance of `FMDatabase` from multiple threads at once is a bad idea.  It has always been OK to make a `FMDatabase` object *per thread*.  Just don't share a single instance across threads, and definitely not across multiple threads at the same time.  Bad things will eventually happen and you'll eventually get something to crash, or maybe get an exception, or maybe meteorites will fall out of the sky and hit your Mac Pro.  *This would suck*.\n\n**So don't instantiate a single `FMDatabase` object and use it across multiple threads.**\n\nInstead, use `FMDatabaseQueue`. Instantiate a single `FMDatabaseQueue` and use it across multiple threads. The `FMDatabaseQueue` object will synchronize and coordinate access across the multiple threads. Here's how to use it:\n\nFirst, make your queue.\n\n```objc\nFMDatabaseQueue *queue = [FMDatabaseQueue databaseQueueWithPath:aPath];\n```\n\nThen use it like so:\n\n\n```objc\n[queue inDatabase:^(FMDatabase *db) {\n    [db executeUpdate:@\"INSERT INTO myTable VALUES (?)\", @1];\n    [db executeUpdate:@\"INSERT INTO myTable VALUES (?)\", @2];\n    [db executeUpdate:@\"INSERT INTO myTable VALUES (?)\", @3];\n\n    FMResultSet *rs = [db executeQuery:@\"select * from foo\"];\n    while ([rs next]) {\n        \u2026\n    }\n}];\n```\n\nAn easy way to wrap things up in a transaction can be done like this:\n\n```objc\n[queue inTransaction:^(FMDatabase *db, BOOL *rollback) {\n    [db executeUpdate:@\"INSERT INTO myTable VALUES (?)\", @1];\n    [db executeUpdate:@\"INSERT INTO myTable VALUES (?)\", @2];\n    [db executeUpdate:@\"INSERT INTO myTable VALUES (?)\", @3];\n\n    if (whoopsSomethingWrongHappened) {\n        *rollback = YES;\n        return;\n    }\n\n    // etc ...\n}];\n```\n\nThe Swift equivalent would be:\n\n```swift\nqueue.inTransaction { db, rollback in\n    do {\n        try db.executeUpdate(\"INSERT INTO myTable VALUES (?)\", values: [1])\n        try db.executeUpdate(\"INSERT INTO myTable VALUES (?)\", values: [2])\n        try db.executeUpdate(\"INSERT INTO myTable VALUES (?)\", values: [3])\n\n        if whoopsSomethingWrongHappened {\n            rollback.pointee = true\n            return\n        }\n\n        // etc ...\n    } catch {\n        rollback.pointee = true\n        print(error)\n    }\n}\n```\n\n(Note, as of Swift 3, use `pointee`. But in Swift 2.3, use `memory` rather than `pointee`.)\n\n`FMDatabaseQueue` will run the blocks on a serialized queue (hence the name of the class).  So if you call `FMDatabaseQueue`'s methods from multiple threads at the same time, they will be executed in the order they are received.  This way queries and updates won't step on each other's toes, and every one is happy.\n\n**Note:** The calls to `FMDatabaseQueue`'s methods are blocking.  So even though you are passing along blocks, they will **not** be run on another thread.\n\n## Making custom sqlite functions, based on blocks.\n\nYou can do this!  For an example, look for `-makeFunctionNamed:` in main.m\n\n## Swift\n\nYou can use FMDB in Swift projects too.\n\nTo do this, you must:\n\n1. Copy the relevant `.m` and `.h` files from the FMDB `src` folder into your project.\n\n You can copy all of them (which is easiest), or only the ones you need. Likely you will need [`FMDatabase`](http://ccgus.github.io/fmdb/html/Classes/FMDatabase.html) and [`FMResultSet`](http://ccgus.github.io/fmdb/html/Classes/FMResultSet.html) at a minimum. [`FMDatabaseAdditions`](http://ccgus.github.io/fmdb/html/Categories/FMDatabase+FMDatabaseAdditions.html) provides some very useful convenience methods, so you will likely want that, too. If you are doing multithreaded access to a database, [`FMDatabaseQueue`](http://ccgus.github.io/fmdb/html/Classes/FMDatabaseQueue.html) is quite useful, too. If you choose to not copy all of the files from the `src` directory, though, you may want to update `FMDB.h` to only reference the files that you included in your project.\n\n Note, if you're copying all of the files from the `src` folder into to your project (which is recommended), you may want to drag the individual files into your project, not the folder, itself, because if you drag the folder, you won't be prompted to add the bridging header (see next point).\n\n2. If prompted to create a \"bridging header\", you should do so. If not prompted and if you don't already have a bridging header, add one.\n\n For more information on bridging headers, see [Swift and Objective-C in the Same Project](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/BuildingCocoaApps/MixandMatch.html#//apple_ref/doc/uid/TP40014216-CH10-XID_76).\n\n3. In your bridging header, add a line that says:\n    ```objc\n    #import \"FMDB.h\"\n    ```\n\n4. Use the variations of `executeQuery` and `executeUpdate` with the `sql` and `values` parameters with `try` pattern, as shown below. These renditions of `executeQuery` and `executeUpdate` both `throw` errors in true Swift fashion.\n\nIf you do the above, you can then write Swift code that uses `FMDatabase`. For example, as of Swift 3:\n\n```swift\nlet fileURL = try! FileManager.default\n    .url(for: .applicationSupportDirectory, in: .userDomainMask, appropriateFor: nil, create: true)\n    .appendingPathComponent(\"test.sqlite\")\n\nlet database = FMDatabase(url: fileURL)\n\nguard database.open() else {\n    print(\"Unable to open database\")\n    return\n}\n\ndo {\n    try database.executeUpdate(\"create table test(x text, y text, z text)\", values: nil)\n    try database.executeUpdate(\"insert into test (x, y, z) values (?, ?, ?)\", values: [\"a\", \"b\", \"c\"])\n    try database.executeUpdate(\"insert into test (x, y, z) values (?, ?, ?)\", values: [\"e\", \"f\", \"g\"])\n\n    let rs = try database.executeQuery(\"select x, y, z from test\", values: nil)\n    while rs.next() {\n        if let x = rs.string(forColumn: \"x\"), let y = rs.string(forColumn: \"y\"), let z = rs.string(forColumn: \"z\") {\n            print(\"x = \\(x); y = \\(y); z = \\(z)\")\n        }\n    }\n} catch {\n    print(\"failed: \\(error.localizedDescription)\")\n}\n\ndatabase.close()\n```\n\n## History\n\nThe history and changes are availbe on its [GitHub page](https://github.com/ccgus/fmdb) and are summarized in the \"CHANGES_AND_TODO_LIST.txt\" file.\n\n## Contributors\n\nThe contributors to FMDB are contained in the \"Contributors.txt\" file.\n\n## Additional projects using FMDB, which might be interesting to the discerning developer.\n\n * FMDBMigrationManager, A SQLite schema migration management system for FMDB: https://github.com/layerhq/FMDBMigrationManager\n * FCModel, An alternative to Core Data for people who like having direct SQL access: https://github.com/marcoarment/FCModel\n\n## Quick notes on FMDB's coding style\n\nSpaces, not tabs.  Square brackets, not dot notation.  Look at what FMDB already does with curly brackets and such, and stick to that style.\n\n## Reporting bugs\n\nReduce your bug down to the smallest amount of code possible.  You want to make it super easy for the developers to see and reproduce your bug.  If it helps, pretend that the person who can fix your bug is active on shipping 3 major products, works on a handful of open source projects, has a newborn baby, and is generally very very busy.\n\nAnd we've even added a template function to main.m (FMDBReportABugFunction) in the FMDB distribution to help you out:\n\n* Open up fmdb project in Xcode.\n* Open up main.m and modify the FMDBReportABugFunction to reproduce your bug.\n    * Setup your table(s) in the code.\n    * Make your query or update(s).\n    * Add some assertions which demonstrate the bug.\n\nThen you can bring it up on the FMDB mailing list by showing your nice and compact FMDBReportABugFunction, or you can report the bug via the github FMDB bug reporter.\n\n**Optional:**\n\nFigure out where the bug is, fix it, and send a patch in or bring that up on the mailing list.  Make sure all the other tests run after your modifications.\n\n## Support\n\nThe support channels for FMDB are the mailing list (see above), filing a bug here, or maybe on Stack Overflow.  So that is to say, support is provided by the community and on a voluntary basis.\n\nFMDB development is overseen by Gus Mueller of Flying Meat.  If FMDB been helpful to you, consider purchasing an app from FM or telling all your friends about it.\n\n## License\n\nThe license for FMDB is contained in the \"License.txt\" file.\n\nIf you happen to come across either Gus Mueller or Rob Ryan in a bar, you might consider purchasing a drink of their choosing if FMDB has been useful to you.\n\n(The drink is for them of course, shame on you for trying to keep it.)\n"}, {"repo": "/jrjohansson/scientific-python-lectures", "language": "Jupyter Notebook", "readme_contents": "Lectures on scientific computing with Python\n============================================\n\n<a href=\"https://notebooks.azure.com/import/gh/jrjohansson/scientific-python-lectures\"><img src=\"https://notebooks.azure.com/launch.png\" /></a>\n\nA set of lectures on scientific computing with Python, using IPython notebooks.\n\nTo open these notebooks in IPython, download the files to a directory on your computer and from that directory run:\n\n    $ ipython notebook\n\nThis will open a new page in your browser with a list of the available notebooks.\n\nShould this error `[TerminalIPythonApp] WARNING | File not found: u'notebook'` pop up, please install Jupyter by following the [instructions](http://jupyter.readthedocs.io/en/latest/install.html) and execute the following command to run the notebook:\n\n    $ jupyter notebook\n\n\nOnline read-only versions\n=========================\n\nUse the following links:\n\n* [Lecture-0 Scientific Computing with Python](http://nbviewer.ipython.org/urls/raw.github.com/jrjohansson/scientific-python-lectures/master/Lecture-0-Scientific-Computing-with-Python.ipynb)\n* [Lecture-1 Introduction to Python Programming](http://nbviewer.ipython.org/urls/raw.github.com/jrjohansson/scientific-python-lectures/master/Lecture-1-Introduction-to-Python-Programming.ipynb)\n* [Lecture-2 Numpy - multidimensional data arrays](http://nbviewer.ipython.org/urls/raw.github.com/jrjohansson/scientific-python-lectures/master/Lecture-2-Numpy.ipynb)\n* [Lecture-3 Scipy - Library of scientific algorithms](http://nbviewer.ipython.org/urls/raw.github.com/jrjohansson/scientific-python-lectures/master/Lecture-3-Scipy.ipynb)\n* [Lecture-4 Matplotlib - 2D and 3D plotting](http://nbviewer.ipython.org/urls/raw.github.com/jrjohansson/scientific-python-lectures/master/Lecture-4-Matplotlib.ipynb)\n* [Lecture-5 Sympy - Symbolic algebra](http://nbviewer.ipython.org/urls/raw.github.com/jrjohansson/scientific-python-lectures/master/Lecture-5-Sympy.ipynb)\n* [Lecture-6A C and Fortran integration](http://nbviewer.ipython.org/urls/raw.github.com/jrjohansson/scientific-python-lectures/master/Lecture-6A-Fortran-and-C.ipynb)\n* [Lecture-6B HPC](http://nbviewer.ipython.org/urls/raw.github.com/jrjohansson/scientific-python-lectures/master/Lecture-6B-HPC.ipynb)\n* [Lecture-7 Revision Control Software](http://nbviewer.ipython.org/urls/raw.github.com/jrjohansson/scientific-python-lectures/master/Lecture-7-Revision-Control-Software.ipynb)\n\nA PDF file containing all the lectures is available here: [Scientific Computing with Python](http://raw.github.com/jrjohansson/scientific-python-lectures/master/Scientific-Computing-with-Python.pdf)\n\n\nLicense\n=======\n\nThis work is licensed under a [Creative Commons Attribution 3.0 Unported License.](http://creativecommons.org/licenses/by/3.0/)\n"}, {"repo": "/Binaryify/NeteaseCloudMusicApi", "language": "JavaScript", "readme_contents": "# \u7f51\u6613\u4e91\u97f3\u4e50 API\n\n\u7f51\u6613\u4e91\u97f3\u4e50 Node.js API service\n\n<p>\n<a href=\"https://www.npmjs.com/package/NeteaseCloudMusicApi\"><img src=\"https://img.shields.io/npm/v/NeteaseCloudMusicApi.svg\" alt=\"Version\"></a>\n<a href=\"https://www.npmjs.com/package/NeteaseCloudMusicApi\"><img src=\"https://img.shields.io/npm/l/NeteaseCloudMusicApi.svg\" alt=\"License\"></a>\n<a href=\"https://www.npmjs.com/package/NeteaseCloudMusicApi\"><img src=\"https://img.shields.io/david/dev/binaryify/NeteaseCloudMusicApi.svg\" alt=\"devDependencies\" ></a>\n<a href=\"https://www.npmjs.com/package/NeteaseCloudMusicApi\"><img src=\"https://img.shields.io/david/binaryify/NeteaseCloudMusicApi.svg\" alt=\"devDependencies\" ></a>\n<a href=\"https://codeclimate.com/github/Binaryify/NeteaseCloudMusicApi\"><img src=\"https://codeclimate.com/github/Binaryify/NeteaseCloudMusicApi/badges/gpa.svg\" /></a>\n</p>\n\n## \u7075\u611f\u6765\u81ea\n\n[disoul/electron-cloud-music](https://github.com/disoul/electron-cloud-music)\n\n[darknessomi/musicbox](https://github.com/darknessomi/musicbox)\n\n[sqaiyan/netmusic-node](https://github.com/sqaiyan/netmusic-node)\n\n## \u529f\u80fd\u7279\u6027\n\n\n1. \u767b\u5f55\n2. \u5237\u65b0\u767b\u5f55\n3. \u53d1\u9001\u9a8c\u8bc1\u7801\n4. \u6821\u9a8c\u9a8c\u8bc1\u7801\n5. \u6ce8\u518c(\u4fee\u6539\u5bc6\u7801)\n6. \u83b7\u53d6\u7528\u6237\u4fe1\u606f , \u6b4c\u5355\uff0c\u6536\u85cf\uff0cmv, dj \u6570\u91cf\n7. \u83b7\u53d6\u7528\u6237\u6b4c\u5355\n8. \u83b7\u53d6\u7528\u6237\u7535\u53f0\n9. \u83b7\u53d6\u7528\u6237\u5173\u6ce8\u5217\u8868\n10. \u83b7\u53d6\u7528\u6237\u7c89\u4e1d\u5217\u8868\n11. \u83b7\u53d6\u7528\u6237\u52a8\u6001\n12. \u83b7\u53d6\u7528\u6237\u64ad\u653e\u8bb0\u5f55\n13. \u83b7\u53d6\u7cbe\u54c1\u6b4c\u5355\n14. \u83b7\u53d6\u6b4c\u5355\u8be6\u60c5\n15. \u641c\u7d22\n16. \u641c\u7d22\u5efa\u8bae\n17. \u83b7\u53d6\u6b4c\u8bcd\n18. \u6b4c\u66f2\u8bc4\u8bba\n19. \u6536\u85cf\u5355\u66f2\u5230\u6b4c\u5355\n20. \u4e13\u8f91\u8bc4\u8bba\n21. \u6b4c\u5355\u8bc4\u8bba\n22. mv \u8bc4\u8bba\n23. \u7535\u53f0\u8282\u76ee\u8bc4\u8bba\n24. banner\n25. \u83b7\u53d6\u6b4c\u66f2\u8be6\u60c5\n26. \u83b7\u53d6\u4e13\u8f91\u5185\u5bb9\n27. \u83b7\u53d6\u6b4c\u624b\u5355\u66f2\n28. \u83b7\u53d6\u6b4c\u624b mv\n29. \u83b7\u53d6\u6b4c\u624b\u4e13\u8f91\n30. \u83b7\u53d6\u6b4c\u624b\u63cf\u8ff0\n31. \u83b7\u53d6\u76f8\u4f3c\u6b4c\u624b\n32. \u83b7\u53d6\u76f8\u4f3c\u6b4c\u5355\n33. \u76f8\u4f3c mv\n34. \u83b7\u53d6\u76f8\u4f3c\u97f3\u4e50\n35. \u83b7\u53d6\u6700\u8fd1 5 \u4e2a\u542c\u4e86\u8fd9\u9996\u6b4c\u7684\u7528\u6237\n36. \u83b7\u53d6\u6bcf\u65e5\u63a8\u8350\u6b4c\u5355\n37. \u83b7\u53d6\u6bcf\u65e5\u63a8\u8350\u6b4c\u66f2\n38. \u79c1\u4eba FM\n39. \u7b7e\u5230\n40. \u559c\u6b22\u97f3\u4e50\n41. \u5783\u573e\u6876\n42. \u6b4c\u5355 ( \u7f51\u53cb\u7cbe\u9009\u789f )\n43. \u65b0\u789f\u4e0a\u67b6\n44. \u70ed\u95e8\u6b4c\u624b\n45. \u6700\u65b0 mv\n46. \u63a8\u8350 mv\n47. \u63a8\u8350\u6b4c\u5355\n48. \u63a8\u8350\u65b0\u97f3\u4e50\n49. \u63a8\u8350\u7535\u53f0\n50. \u63a8\u8350\u8282\u76ee\n51. \u72ec\u5bb6\u653e\u9001\n52. mv \u6392\u884c\n53. \u83b7\u53d6 mv \u6570\u636e\n54. \u64ad\u653e mv/\u89c6\u9891\n55. \u6392\u884c\u699c\n56. \u6b4c\u624b\u699c\n57. \u4e91\u76d8\n58. \u7535\u53f0 - \u63a8\u8350\n59. \u7535\u53f0 - \u5206\u7c7b\n60. \u7535\u53f0 - \u5206\u7c7b\u63a8\u8350\n61. \u7535\u53f0 - \u8ba2\u9605\n62. \u7535\u53f0 - \u8be6\u60c5\n63. \u7535\u53f0 - \u8282\u76ee\n64. \u7ed9\u8bc4\u8bba\u70b9\u8d5e\n65. \u83b7\u53d6\u52a8\u6001\n66. \u70ed\u641c\u5217\u8868(\u7b80\u7565)\n67. \u53d1\u9001\u79c1\u4fe1\n68. \u53d1\u9001\u79c1\u4fe1\u6b4c\u5355\n69. \u65b0\u5efa\u6b4c\u5355\n70. \u6536\u85cf/\u53d6\u6d88\u6536\u85cf\u6b4c\u5355\n71. \u6b4c\u5355\u5206\u7c7b\n72. \u6536\u85cf\u7684\u6b4c\u624b\u5217\u8868\n73. \u8ba2\u9605\u7684\u7535\u53f0\u5217\u8868\n74. \u76f8\u5173\u6b4c\u5355\u63a8\u8350\n75. \u4ed8\u8d39\u7cbe\u9009\u63a5\u53e3\n76. \u97f3\u4e50\u662f\u5426\u53ef\u7528\u68c0\u67e5\u63a5\u53e3\n77. \u767b\u5f55\u72b6\u6001\n78. \u83b7\u53d6\u89c6\u9891\u64ad\u653e\u5730\u5740\n79. \u53d1\u9001/\u5220\u9664\u8bc4\u8bba\n80. \u70ed\u95e8\u8bc4\u8bba\n81. \u89c6\u9891\u8bc4\u8bba\n82. \u9000\u51fa\u767b\u5f55\n83. \u6240\u6709\u699c\u5355\n84. \u6240\u6709\u699c\u5355\u5185\u5bb9\u6458\u8981\n85. \u6536\u85cf\u89c6\u9891\n86. \u6536\u85cf MV\n87. \u89c6\u9891\u8be6\u60c5\n88. \u76f8\u5173\u89c6\u9891\n89. \u5173\u6ce8\u7528\u6237\n90. \u65b0\u6b4c\u901f\u9012\n91. \u559c\u6b22\u97f3\u4e50\u5217\u8868(\u65e0\u5e8f)\n92. \u6536\u85cf\u7684 MV \u5217\u8868\n93. \u83b7\u53d6\u6700\u65b0\u4e13\u8f91\n94. \u542c\u6b4c\u6253\u5361\n95. \u83b7\u53d6\u89c6\u9891\u6807\u7b7e\u4e0b\u7684\u89c6\u9891\n96. \u5df2\u6536\u85cf\u4e13\u8f91\u5217\u8868\n97. \u83b7\u53d6\u52a8\u6001\u8bc4\u8bba\n98. \u6b4c\u5355\u6536\u85cf\u8005\u5217\u8868\n99. \u4e91\u76d8\u6b4c\u66f2\u5220\u9664\n100. \u70ed\u95e8\u8bdd\u9898\n101. \u7535\u53f0 - \u63a8\u8350\u7c7b\u578b\n102. \u7535\u53f0 - \u975e\u70ed\u95e8\u7c7b\u578b\n103. \u7535\u53f0 - \u4eca\u65e5\u4f18\u9009\n104. \u5fc3\u52a8\u6a21\u5f0f/\u667a\u80fd\u64ad\u653e\n105. \u8f6c\u53d1\u52a8\u6001\n106. \u5220\u9664\u52a8\u6001\n107. \u5206\u4eab\u6b4c\u66f2\u3001\u6b4c\u5355\u3001mv\u3001\u7535\u53f0\u3001\u7535\u53f0\u8282\u76ee\u5230\u52a8\u6001\n108. \u901a\u77e5-\u79c1\u4fe1\n109. \u901a\u77e5-\u8bc4\u8bba\n110. \u901a\u77e5-@\u6211\n111. \u901a\u77e5-\u901a\u77e5\n112. \u8bbe\u7f6e\n113. \u4e91\u76d8\u6570\u636e\u8be6\u60c5\n114. \u79c1\u4fe1\u5185\u5bb9\n115. \u6211\u7684\u6570\u5b57\u4e13\u8f91\n116. batch\u6279\u91cf\u8bf7\u6c42\u63a5\u53e3\n117. \u83b7\u53d6\u89c6\u9891\u6807\u7b7e\u5217\u8868\n118. \u5168\u90e8mv\n119. \u7f51\u6613\u51fa\u54c1mv\n120. \u6536\u85cf/\u53d6\u6d88\u6536\u85cf\u4e13\u8f91\n121. \u4e13\u8f91\u52a8\u6001\u4fe1\u606f\n122. \u70ed\u641c\u5217\u8868(\u8be6\u7ec6)\n123. \u66f4\u6362\u7ed1\u5b9a\u624b\u673a\n124. \u68c0\u6d4b\u624b\u673a\u53f7\u7801\u662f\u5426\u5df2\u6ce8\u518c\n125. \u521d\u59cb\u5316\u6635\u79f0\n126. \u66f4\u65b0\u6b4c\u5355\u63cf\u8ff0\n127. \u66f4\u65b0\u6b4c\u5355\u540d\n128. \u66f4\u65b0\u6b4c\u5355\u6807\u7b7e\n129. \u9ed8\u8ba4\u641c\u7d22\u5173\u952e\u8bcd\n130. \u5220\u9664\u6b4c\u5355\n131. \u7535\u53f0banner\n132. \u7528\u6237\u7535\u53f0\n133. \u70ed\u95e8\u7535\u53f0\n134. \u7535\u53f0 - \u8282\u76ee\u8be6\u60c5\n135. \u7535\u53f0 - \u8282\u76ee\u699c\n136. \u7535\u53f0 - \u65b0\u664b\u7535\u53f0\u699c/\u70ed\u95e8\u7535\u53f0\u699c\n137. \u7c7b\u522b\u70ed\u95e8\u7535\u53f0\n138. \u4e91\u6751\u70ed\u8bc4\n139. \u7535\u53f024\u5c0f\u65f6\u8282\u76ee\u699c\n140. \u7535\u53f024\u5c0f\u65f6\u4e3b\u64ad\u699c\n141. \u7535\u53f0\u6700\u70ed\u4e3b\u64ad\u699c\n142. \u7535\u53f0\u4e3b\u64ad\u65b0\u4eba\u699c\n143. \u7535\u53f0\u4ed8\u8d39\u7cbe\u54c1\u699c\n144. \u6b4c\u624b\u70ed\u95e850\u9996\u6b4c\u66f2\n\n## \u73af\u5883\u8981\u6c42\n\n\u9700\u8981 NodeJS 8.12+ \u73af\u5883\n\n## \u5b89\u88c5\n\n```shell\n$ git clone git@github.com:Binaryify/NeteaseCloudMusicApi.git\n$ npm install\n```\n\n## \u8fd0\u884c\n\n```shell\n$ node app.js\n```\n\n\u670d\u52a1\u5668\u542f\u52a8\u9ed8\u8ba4\u7aef\u53e3\u4e3a 3000,\u82e5\u4e0d\u60f3\u4f7f\u7528 3000 \u7aef\u53e3,\u53ef\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4: Mac/Linux\n\n```shell\n$ PORT=4000 node app.js\n```\n\nwindows \u4e0b\u4f7f\u7528 git-bash \u6216\u8005 cmder \u7b49\u7ec8\u7aef\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4:\n\n```shell\n$ set PORT=4000 && node app.js\n```\n\n## \u4f7f\u7528\u6587\u6863\n\n[\u6587\u6863\u5730\u5740](https://binaryify.github.io/NeteaseCloudMusicApi)\n\n![\u6587\u6863](https://raw.githubusercontent.com/Binaryify/NeteaseCloudMusicApi/master/static/docs.png)\n\n## \u66f4\u65b0\u65e5\u5fd7\n\n[changelog](https://github.com/Binaryify/NeteaseCloudMusicApi/blob/master/CHANGELOG.MD)\n\n## \u5355\u5143\u6d4b\u8bd5\n\n```shell\n$ npm test\n```\n\n![\u5355\u5143\u6d4b\u8bd5](https://raw.githubusercontent.com/Binaryify/NeteaseCloudMusicApi/master/static/screenshot1.png)\n![\u5355\u5143\u6d4b\u8bd5](https://raw.githubusercontent.com/Binaryify/NeteaseCloudMusicApi/master/static/screenshot2.png)\n\n## \u8d21\u732e\u8005\n![](https://opencollective.com/NeteaseCloudMusicApi/contributors.svg?width=890)\n\n\n## License\n\n[The MIT License (MIT)](https://github.com/Binaryify/NeteaseCloudMusicApi/blob/master/LICENSE)\n"}, {"repo": "/ghinda/css-toggle-switch", "language": "HTML", "readme_contents": "# CSS Toggle Switch\n\n[![Build Status](https://travis-ci.org/ghinda/css-toggle-switch.png)](https://travis-ci.org/ghinda/css-toggle-switch)\n[![Downloads](https://img.shields.io/npm/dt/css-toggle-switch.svg)](https://www.npmjs.com/package/css-toggle-switch)\n[![Get help on Codementor](https://cdn.codementor.io/badges/get_help_github.svg)](https://www.codementor.io/ionutcolceriu?utm_source=github&utm_medium=button&utm_term=ionutcolceriu&utm_campaign=github)\n\nCSS Toggle Switches are a set of accessible CSS-only *switch* components, created from standard form controls in the markup.\n\nYou can use them standalone, or with [Bootstrap](http://getbootstrap.com/) or [Foundation](http://foundation.zurb.com/).\n\n## Install\n\nDownload from the [project page](http://ghinda.net/css-toggle-switch/).\n\nWith [Bower](http://bower.io/): `bower install --save css-toggle-switch`\n\nWith [npm](https://www.npmjs.com/package/css-toggle-switch): `npm install --save css-toggle-switch`\n\nFrom [jsDelivr](https://www.jsdelivr.com/projects/css-toggle-switch)\n\n```\n<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/css-toggle-switch@latest/dist/toggle-switch.css\" />\n```\n\n\n## How to use it\n\nJust include `toggle-switch.css`, and use the markup from the [documentation](http://ghinda.net/css-toggle-switch/).\n\n### Scaling\n\nBy default, the switches will scale along with the font size on their parent, because they're built using `em`s.\n\nIf you want to switches to scale using `rem`s, you can include the `toggle-switch-rem.css` file (without including `toggle-switch.css`).\n\nIf you don't need the switches to scale at all, you can use the the `toggle-switch-px.css` file.\n\n\n## Switches\n\n### Light switch\n\nUse the light switch, instead of a checkbox, for simple *On/Off* options.\n\n### Toggle switch\n\nUse the toggle switches, instead of radio buttons, for two or more, specific options.\n\n\n## Browser support\n\nThe toggle switches work on all modern browsers, including mobile ones(even proxy-browsers like Opera Mini).\n\n**Browsers without support for media-queries, such as IE8 and bellow, get standard form elements.**\n\nThe `onclick=\"\"` attribute is required for older iOS and Opera Mini support.\n\n## Development\n\nYou'll need Grunt:\n\n```\n  grunt server\n```\n\nThen\n\n```\n  http://localhost:9000/\n```\n\nDon't use the `gh-pages` branch. It's used only for hosting the documentation website.\n\n\n## License\n\nCSS Toggle Switch is a project by [Ionu\u021b Colceriu](http://ghinda.net), licensed under the [MIT license](LICENSE).\n"}, {"repo": "/colah/colah.github.io", "language": "HTML", "readme_contents": "error: no README"}, {"repo": "/cayleygraph/cayley", "language": "Go", "readme_contents": "<div align=\"center\">\n  <a href=\"https://github.com/cayleygraph/cayley\">\n    <img width=\"200\" src=\"https://github.com/cayleygraph/branding/raw/master/cayley_bottom.png\" alt=\"Cayley\">\n  </a>\n</div>\n\n[![Build Status](https://travis-ci.com/cayleygraph/cayley.svg?branch=master)](https://travis-ci.com/cayleygraph/cayley)\n[![Container Repository](https://img.shields.io/docker/cloud/build/cayleygraph/cayley \"Container Repository\")](https://hub.docker.com/r/cayleygraph/cayley)\n\nCayley is an open-source database for [Linked Data](https://www.w3.org/standards/semanticweb/data). It is inspired by the graph database behind Google's [Knowledge Graph](https://en.wikipedia.org/wiki/Knowledge_Graph) (formerly [Freebase](http://freebase.com)).\n\n[![Get it from the Snap Store](https://snapcraft.io/static/images/badges/en/snap-store-white.svg)](https://snapcraft.io/cayley)\n\n## [Documentation](https://cayley.gitbook.io/cayley/)\n\n## Features\n\n- Built-in query editor, visualizer and REPL\n- Multiple query languages:\n  - [Gizmo](./docs/gizmoapi.md): query language inspired by [Gremlin](http://gremlindocs.com/)\n  - [GraphQL](./docs/graphql.md)-inspired query language\n  - [MQL](./docs/mql.md): simplified version for [Freebase](https://en.wikipedia.org/wiki/Freebase) fans\n- Modular: easy to connect to your favorite programming languages and back-end stores\n- Production ready: well tested and used by various companies for their production workloads\n- Fast: optimized specifically for usage in applications\n\n### Performance\n\nRough performance testing shows that, on 2014 consumer hardware and an average disk, 134m quads in LevelDB is no problem and a multi-hop intersection query -- films starring X and Y -- takes ~150ms.\n\n## Community\n\n- Website: [cayley.io](https://cayley.io)\n- Slack: [cayleygraph.slack.com](https://cayleygraph.slack.com) -- Invite [here](https://cayley-slackin.herokuapp.com/)\n- Discourse list: [discourse.cayley.io](https://discourse.cayley.io) (Also acts as mailing list, enable mailing list mode)\n- Twitter: [@cayleygraph](https://twitter.com/cayleygraph)\n- Involvement: [Contribute](./docs/contributing.md)\n"}, {"repo": "/jasonslyvia/a-cartoon-intro-to-redux-cn", "language": "HTML", "readme_contents": "# \u300a\u770b\u6f2b\u753b\uff0c\u5b66 Redux\u300b \u2014\u2014 A cartoon intro to Redux\n\n> \u4e0d\u5199\u4e00\u884c\u4ee3\u7801\uff0c\u8f7b\u677e\u770b\u61c2 Redux \u539f\u7406\u3002 [\u539f\u6587](https://code-cartoons.com/a-cartoon-intro-to-redux-3afb775501a6)\n>\n> \u5982\u679c\u4f60\u6709\u4efb\u4f55\u7591\u60d1\uff0c\u4e0d\u59a8\u5728 [Issues](https://github.com/jasonslyvia/a-cartoon-intro-to-redux-cn/issues) \u4e2d\u63d0\u51fa\u3002\n\nFlux \u67b6\u6784\u5df2\u7136\u8ba9\u4eba\u89c9\u5f97\u6709\u4e9b\u8ff7\u60d1\uff0c\u800c\u6bd4 Flux \u66f4\u8ba9\u4eba\u6478\u4e0d\u7740\u5934\u8111\u7684\u662f Flux \u4e0e Redux \u7684\u533a\u522b\u3002Redux \u662f\u4e00\u4e2a\u57fa\u4e8e Flux \u601d\u60f3\u7684\u65b0\u67b6\u6784\u65b9\u5f0f\uff0c\u672c\u6587\u5c06\u63a2\u8ba8\u5b83\u4eec\u7684\u533a\u522b\u3002\n\n\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u770b\u8fc7[\u8fd9\u7bc7\u5173\u4e8e Flux \u7684\u6587\u7ae0](https://code-cartoons.com/a-cartoon-guide-to-flux-6157355ab207)\uff08\u8bd1\u8005\u6ce8\uff1a\u4e5f\u53ef\u4ee5\u53c2\u8003[\u8fd9\u7bc7](https://www.zhihu.com/question/33864532/answer/57657275)\uff09\uff0c\u4f60\u5e94\u8be5\u5148\u9605\u8bfb\u4e00\u4e0b\u3002\n\n## \u4e3a\u4ec0\u4e48\u8981\u6539\u53d8 Flux\uff1f\n\nRedux \u89e3\u51b3\u7684\u95ee\u9898\u548c Flux \u4e00\u6837\uff0c\u4f46 Redux \u80fd\u505a\u7684\u8fd8\u6709\u66f4\u591a\u3002\n\n\u548c Flux \u4e00\u6837\uff0cRedux \u8ba9\u5e94\u7528\u7684\u72b6\u6001\u53d8\u5316\u53d8\u5f97\u66f4\u52a0\u53ef\u9884\u6d4b\u3002\u5982\u679c\u4f60\u60f3\u6539\u53d8\u5e94\u7528\u7684\u72b6\u6001\uff0c\u5c31\u5fc5\u987b dispatch \u4e00\u4e2a action\u3002\u4f60\u6ca1\u6709\u529e\u6cd5\u76f4\u63a5\u6539\u53d8\u5e94\u7528\u7684\u72b6\u6001\uff0c\u56e0\u4e3a\u4fdd\u5b58\u8fd9\u4e9b\u72b6\u6001\u7684\u4e1c\u897f\uff08\u79f0\u4e3a store\uff09\u53ea\u6709 getter \u800c\u6ca1\u6709 setter\u3002\u5bf9\u4e8e Flux \u548c Redux \u6765\u8bf4\uff0c\u8fd9\u4e9b\u6982\u5ff5\u90fd\u662f\u76f8\u4f3c\u7684\u3002\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8981\u65b0\u8bbe\u8ba1\u4e00\u79cd\u67b6\u6784\u5462\uff1fRedux \u7684\u521b\u9020\u8005 Dan Abramov \u53d1\u73b0\u4e86\u6539\u8fdb Flux \u67b6\u6784\u7684\u53ef\u80fd\u3002\u4ed6\u60f3\u8981\u4e00\u4e2a\u66f4\u597d\u7684\u5f00\u53d1\u8005\u5de5\u5177\u6765\u8c03\u8bd5 Flux \u5e94\u7528\u3002\u4ed6\u53d1\u73b0\u5982\u679c\u7a0d\u5fae\u5bf9 Flux \u67b6\u6784\u8fdb\u884c\u4e00\u4e9b\u8c03\u6574\uff0c\u5c31\u53ef\u4ee5\u5f00\u53d1\u51fa\u4e00\u6b3e\u66f4\u597d\u7528\u7684\u5f00\u53d1\u8005\u5de5\u5177\uff0c\u540c\u65f6\u4f9d\u7136\u80fd\u4eab\u53d7 Flux \u67b6\u6784\u5e26\u7ed9\u4f60\u7684\u53ef\u9884\u6d4b\u6027\u3002\n\n\u786e\u5207\u7684\u8bf4\uff0c\u4ed6\u60f3\u8981\u7684\u5f00\u53d1\u8005\u5de5\u5177\u5305\u542b\u4e86\u4ee3\u7801\u70ed\u66ff\u6362\uff08hot reload\uff09\u548c\u65f6\u95f4\u65c5\u884c\uff08time travel\uff09\u529f\u80fd\u3002\u7136\u800c\u8981\u60f3\u5728 Flux \u67b6\u6784\u4e0a\u5b9e\u73b0\u8fd9\u4e9b\u529f\u80fd\uff0c\u786e\u5b9e\u6709\u4e9b\u9ebb\u70e6\u3002\n\n### \u95ee\u98981\uff1astore \u7684\u4ee3\u7801\u65e0\u6cd5\u88ab\u70ed\u66ff\u6362\uff0c\u9664\u975e\u6e05\u7a7a\u5f53\u524d\u7684\u72b6\u6001\n\n\u5728 Flux \u4e2d\uff0cstore \u5305\u542b\u4e86\u4e24\u6837\u4e1c\u897f\uff1a\n\n 1. \u6539\u53d8\u72b6\u6001\u7684\u903b\u8f91\n 2. \u5f53\u524d\u7684\u72b6\u6001\n\n\u5728\u4e00\u4e2a store \u4e2d\u540c\u65f6\u4fdd\u5b58\u8fd9\u4e24\u6837\u4e1c\u897f\u5c06\u4f1a\u5bfc\u81f4\u4ee3\u7801\u70ed\u66ff\u6362\u529f\u80fd\u51fa\u73b0\u95ee\u9898\u3002\u5f53\u4f60\u70ed\u66ff\u6362\u6389 store \u7684\u4ee3\u7801\u60f3\u8981\u770b\u770b\u65b0\u7684\u72b6\u6001\u6539\u53d8\u903b\u8f91\u662f\u5426\u751f\u6548\u65f6\uff0c\u4f60\u5c31\u4e22\u5931\u4e86 store \u4e2d\u4fdd\u5b58\u7684\u5f53\u524d\u72b6\u6001\u3002\u6b64\u5916\uff0c\u4f60\u8fd8\u628a store \u4e0e Flux \u67b6\u6784\u4e2d\u5176\u5b83\u7ec4\u4ef6\u4ea7\u751f\u5173\u7cfb\u7684\u4e8b\u4ef6\u7cfb\u7edf\u641e\u4e71\u4e86\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*L66K9uCQjjHmpAwT-a9C5Q.png)\n\n**\u89e3\u51b3\u65b9\u6848**\n\n\u5c06\u8fd9\u4e24\u6837\u4e1c\u897f\u5206\u5f00\u5904\u7406\u3002\u8ba9\u4e00\u4e2a\u5bf9\u8c61\u6765\u4fdd\u5b58\u72b6\u6001\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u5728\u70ed\u66ff\u6362\u4ee3\u7801\u7684\u65f6\u5019\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\u8ba9\u53e6\u4e00\u4e2a\u5bf9\u8c61\u5305\u542b\u6240\u6709\u6539\u53d8\u72b6\u6001\u7684\u903b\u8f91\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u88ab\u70ed\u66ff\u6362\u56e0\u4e3a\u5b83\u4e0d\u7528\u5173\u5fc3\u4efb\u4f55\u4fdd\u5b58\u72b6\u6001\u76f8\u5173\u7684\u4e8b\u60c5\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*nBsGCWmJTR-Zj7aXeIE8yg.png)\n\n### \u95ee\u98982\uff1a\u6bcf\u6b21\u89e6\u53d1 action \u65f6\u72b6\u6001\u5bf9\u8c61\u90fd\u88ab\u76f4\u63a5\u6539\u5199\u4e86\n\n\u65f6\u95f4\u65c5\u884c\u8c03\u8bd5\u6cd5\u7684\u7279\u6027\u662f\uff1a\u4f60\u80fd\u638c\u63e1\u72b6\u6001\u5bf9\u8c61\u7684\u6bcf\u4e00\u6b21\u53d8\u5316\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u4f60\u5c31\u80fd\u8f7b\u677e\u7684\u8df3\u56de\u5230\u8fd9\u4e2a\u5bf9\u8c61\u4e4b\u524d\u7684\u67d0\u4e2a\u72b6\u6001\uff08\u60f3\u8c61\u4e00\u4e2a\u64a4\u9500\u529f\u80fd\uff09\u3002\n\n\u8981\u5b9e\u73b0\u8fd9\u6837\u7684\u529f\u80fd\uff0c\u6bcf\u6b21\u72b6\u6001\u6539\u53d8\u4e4b\u540e\uff0c\u4f60\u90fd\u9700\u8981\u628a\u65e7\u7684\u72b6\u6001\u4fdd\u5b58\u5728\u4e00\u4e2a\u6570\u7ec4\u4e2d\u3002\u4f46\u662f\u7531\u4e8e JavaScript \u7684\u5bf9\u8c61\u5f15\u7528\u7279\u6027\uff0c\u7b80\u5355\u7684\u628a\u4e00\u4e2a\u5bf9\u8c61\u653e\u8fdb\u6570\u7ec4\u4e2d\u5e76\u4e0d\u80fd\u5b9e\u73b0\u6211\u4eec\u9700\u8981\u7684\u529f\u80fd\u3002\u8fd9\u6837\u505a\u4e0d\u80fd\u521b\u5efa\u4e00\u4e2a\u5feb\u7167\uff08snapshot\uff09\uff0c\u800c\u53ea\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u6307\u9488\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002\n\n\u6240\u4ee5\u8981\u60f3\u5b9e\u73b0\u65f6\u95f4\u65c5\u884c\u7279\u6027\uff0c\u6bcf\u4e00\u4e2a\u72b6\u6001\u6539\u53d8\u7684\u7248\u672c\u90fd\u9700\u8981\u4fdd\u5b58\u5728\u4e0d\u540c\u7684 JavaScript \u5bf9\u8c61\u4e2d\uff0c\u8fd9\u6837\u4f60\u624d\u4e0d\u4f1a\u4e0d\u5c0f\u5fc3\u6539\u53d8\u4e86\u67d0\u4e2a\u5386\u53f2\u7248\u672c\u7684\u72b6\u6001\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*4zODv5vgvKsi6Ts7TihsoA.png)\n\n**\u89e3\u51b3\u65b9\u6848**\n\n\u5f53\u4e00\u4e2a action \u9700\u8981 store \u54cd\u5e94\u65f6\uff0c\u4e0d\u8981\u76f4\u63a5\u4fee\u6539 store \u4e2d\u7684\u72b6\u6001\uff0c\u800c\u662f\u5c06\u72b6\u6001\u62f7\u8d1d\u4e00\u4efd\u5e76\u5728\u8fd9\u4efd\u62f7\u8d1d\u7684\u72b6\u6001\u4e0a\u505a\u51fa\u4fee\u6539\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*wLRhZ0wtI0duLsigdxL1CA.png)\n\n### \u95ee\u98983\uff1a\u6ca1\u6709\u5408\u9002\u7684\u4f4d\u7f6e\u5f15\u5165\u7b2c\u4e09\u65b9\u63d2\u4ef6\n\n\u5f53\u4f60\u5728\u5199\u4e00\u4e9b\u8c03\u8bd5\u6027\u5de5\u5177\u65f6\uff0c\u4f60\u5e0c\u671b\u5b83\u4eec\u80fd\u591f\u66f4\u52a0\u901a\u7528\u3002\u4e00\u4e2a\u4f7f\u7528\u8be5\u5de5\u5177\u7684\u7528\u6237\u5e94\u8be5\u53ef\u4ee5\u76f4\u63a5\u5f15\u5165\u8fd9\u4e2a\u5de5\u5177\u800c\u4e0d\u9700\u8981\u505a\u989d\u5916\u7684\u5305\u88c5\u6216\u6865\u63a5\u3002\n\n\u8981\u5b9e\u73b0\u8fd9\u6837\u7684\u7279\u6027\uff0cFlux \u67b6\u6784\u9700\u8981\u4e00\u4e2a\u6269\u5c55\u70b9\u3002\n\n\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5c31\u662f\u65e5\u5fd7\u3002\u6bd4\u5982\u8bf4\u4f60\u5e0c\u671b console.log() \u6bcf\u4e00\u4e2a\u89e6\u53d1\u7684 action \u540c\u65f6 console.log() \u8fd9\u4e2a action \u88ab\u54cd\u5e94\u5b8c\u6210\u540e\u7684\u72b6\u6001\u3002\u5728 Flux \u4e2d\uff0c\u4f60\u53ea\u80fd\u8ba2\u9605\uff08subscribe\uff09 dispatcher \u7684\u66f4\u65b0\u548c\u6bcf\u4e00\u4e2a store \u7684\u53d8\u52a8\u3002\u4f46\u662f\u8fd9\u6837\u5c31\u4fb5\u5165\u4e86\u4e1a\u52a1\u4ee3\u7801\uff0c\u8fd9\u6837\u7684\u65e5\u5fd7\u529f\u80fd\u4e0d\u662f\u4e00\u4e2a\u7b2c\u4e09\u65b9\u63d2\u4ef6\u80fd\u591f\u8f7b\u6613\u5b9e\u73b0\u7684\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*MG736zGtLMBbSkhwu4D3cA.png)\n\n**\u89e3\u51b3\u65b9\u6848**\n\n\u5c06\u8fd9\u4e2a\u67b6\u6784\u7684\u90e8\u5206\u529f\u80fd\u5305\u88c5\u8fdb\u5176\u4ed6\u7684\u5bf9\u8c61\u4e2d\u5c06\u4f7f\u5f97\u6211\u4eec\u7684\u9700\u6c42\u53d8\u5f97\u66f4\u5bb9\u6613\u5b9e\u73b0\u3002\u8fd9\u4e9b\u300c\u5176\u4ed6\u5bf9\u8c61\u300d\u5728\u67b6\u6784\u539f\u6709\u7684\u529f\u80fd\u57fa\u7840\u4e4b\u4e0a\u6dfb\u52a0\u4e86\u81ea\u5df1\u7684\u529f\u80fd\u3002\u4f60\u53ef\u4ee5\u628a\u8fd9\u79cd\u6269\u5c55\u70b9\u770b\u505a\u662f\u4e00\u4e2a\u589e\u5f3a\u5668\uff08enhancers\uff09\u6216\u8005\u9ad8\u9636\u5bf9\u8c61\uff08higher order objects\uff09\uff0c\u4ea6\u6216\u8005\u4e2d\u95f4\u4ef6\uff08middleware\uff09\u3002\n\n\u6b64\u5916\uff0c\u4f7f\u7528\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\u6765\u7ec4\u7ec7\u6240\u6709\u6539\u53d8\u72b6\u6001\u7684\u903b\u8f91\uff0c\u8fd9\u6837\u5f53\u72b6\u6001\u53d1\u751f\u6539\u53d8\u7684\u65f6\u5019 store \u53ea\u4f1a\u89e6\u53d1\u4e00\u4e2a\u4e8b\u4ef6\u6765\u901a\u77e5\u89c6\u56fe\u5c42\uff08view\uff09\uff0c\u800c\u8fd9\u4e00\u4e2a\u4e8b\u4ef6\u4f1a\u88ab\u6574\u68f5\u6811\u4e2d\u7684\u6240\u6709\u903b\u8f91\u5904\u7406\uff08\u8bd1\u8005\u6ce8\uff1a\u300c\u5904\u7406\u300d\u4e0d\u4ee3\u8868\u4e00\u5b9a\u4f1a\u6539\u53d8\u72b6\u6001\uff0c\u8fd9\u4e9b\u6539\u53d8\u72b6\u6001\u7684\u903b\u8f91\u672c\u8d28\u4e0a\u662f\u51fd\u6570\uff0c\u51fd\u6570\u5185\u90e8\u4f1a\u6839\u636e action \u7684\u7c7b\u578b\u7b49\u6765\u786e\u5b9a\u662f\u5426\u5bf9\u72b6\u6001\u8fdb\u884c\u6539\u53d8\uff09\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*5JaZSc3Jsn9PJY7daEDVDA.png)\n\n*\u6ce8\u610f\uff1a\u5c31\u4e0a\u8ff0\u8fd9\u4e9b\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\u6765\u8bf4\uff0c\u6211\u4e3b\u8981\u5728\u5173\u6ce8\u5f00\u53d1\u8005\u5de5\u5177\u8fd9\u4e00\u4f7f\u7528\u573a\u666f\u3002\u5b9e\u9645\u4e0a\uff0c\u5bf9 Flux \u505a\u51fa\u7684\u8fd9\u4e9b\u6539\u53d8\u5728\u5176\u4ed6\u573a\u666f\u4e2d\u4e5f\u975e\u5e38\u6709\u5e2e\u52a9\u3002\u5728\u4e0a\u8ff0\u4e09\u70b9\u4e4b\u5916\uff0cFlux \u548c Redux \u8fd8\u6709\u66f4\u591a\u7684\u4e0d\u540c\u70b9\u3002\u6bd4\u5982\uff0c\u76f8\u6bd4\u4e8e Flux\uff0cRedux \u7cbe\u7b80\u4e86\u6574\u4e2a\u67b6\u6784\u7684\u5197\u4f59\u4ee3\u7801\uff0c\u5e76\u4e14\u590d\u7528 store \u7684\u903b\u8f91\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a [Redux \u4f18\u70b9\u7684\u5217\u8868](http://stackoverflow.com/a/32920459)\u53ef\u4f9b\u53c2\u8003\u3002\n\n\u90a3\u4e48\u8ba9\u6211\u4eec\u6765\u770b\u770b Redux \u662f\u600e\u4e48\u8ba9\u8fd9\u4e9b\u7279\u6027\u53d8\u4e3a\u73b0\u5b9e\u7684\u3002\n\n## \u65b0\u7684\u89d2\u8272\n\n\u4ece Flux \u6f14\u8fdb\u5230 Redux\uff0c\u6574\u4e2a\u67b6\u6784\u4e2d\u7684\u89d2\u8272\u53d1\u751f\u4e86\u4e9b\u8bb8\u7684\u53d8\u5316\u3002\n\n### Action creators\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1200/1*Uljrrh4Z7UiUwk8AjUO9PA.png)\n\nRedux \u4fdd\u7559\u4e86 Flux \u4e2d action creator \u7684\u6982\u5ff5\u3002\u6bcf\u5f53\u4f60\u60f3\u8981\u6539\u53d8\u5e94\u7528\u4e2d\u7684\u72b6\u6001\u65f6\uff0c\u4f60\u5c31\u8981 dispatch \u4e00\u4e2a action\uff0c\u8fd9\u4e5f\u662f\u552f\u4e00\u6539\u53d8\u72b6\u6001\u7684\u65b9\u6cd5\u3002\n\n\u5c31\u50cf\u6211\u5728[\u8fd9\u7bc7\u5173\u4e8e Flux \u7684\u6587\u7ae0](https://code-cartoons.com/a-cartoon-guide-to-flux-6157355ab207)\u4e2d\u63d0\u5230\u7684\u4e00\u6837\uff0c\u6211\u628a action creator \u770b\u505a\u662f\u4e00\u4e2a\u62a5\u52a1\u5458\uff08\u8d1f\u8d23\u53d1\u7535\u62a5\u7684\u4eba\uff0ctelegraph operator\uff09\uff0c\u4f60\u627e\u5230 action creator \u544a\u8bc9\u4ed6\u4f60\u5927\u81f4\u4e0a\u60f3\u8981\u4f20\u8fbe\u4ec0\u4e48\u4fe1\u606f\uff0caction creator \u5219\u4f1a\u628a\u8fd9\u4e9b\u4fe1\u606f\u683c\u5f0f\u5316\u4e3a\u4e00\u79cd\u6807\u51c6\u7684\u683c\u5f0f\uff0c\u4ee5\u4fbf\u7cfb\u7edf\u4e2d\u7684\u5176\u4ed6\u90e8\u5206\u80fd\u591f\u7406\u89e3\u3002\n\n\u4e0e Flux \u4e0d\u540c\u7684\u662f\uff0cRedux \u4e2d\u7684 action creator \u4e0d\u4f1a\u76f4\u63a5\u628a action \u53d1\u9001\u7ed9 dispatcher\uff0c\u800c\u662f\u8fd4\u56de\u4e00\u4e2a\u683c\u5f0f\u5316\u597d\u7684 JavaScript \u5bf9\u8c61\u3002\n\n### The store\n\n\u6211\u628a Flux \u4e2d store \u7684\u90a3\u4e00\u5957\u673a\u5236\u63cf\u8ff0\u4e3a\u4e00\u79cd\u63a7\u5236\u8fc7\u5ea6\u7684\u5b98\u50da\u4f53\u7cfb\u3002\u4f60\u4e0d\u80fd\u7b80\u5355\u76f4\u63a5\u7684\u4fee\u6539\u72b6\u6001\uff0c\u800c\u662f\u8981\u6c42\u6240\u6709\u7684\u72b6\u6001\u6539\u53d8\u90fd\u5fc5\u987b\u7531 store \u4eb2\u81ea\u4ea7\u751f\uff0c\u8fd8\u5fc5\u987b\u8981\u7ecf\u5386 action \u5206\u53d1\u90a3\u79cd\u5957\u8def\u3002\u5728 Redux \u4e2d\uff0cstore \u4f9d\u7136\u662f\u8fd9\u4e48\u7684\u5145\u6ee1\u63a7\u5236\u6b32\u548c\u5b98\u50da\u4e3b\u4e49\uff0c\u4f46\u662f\u53c8\u6709\u4e9b\u4e0d\u4e00\u6837\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1200/1*Gztc7THzxzOgJmGvJ95IQA.png)\n\n\u5728 Flux \u4e2d\uff0c\u4f60\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a store\uff0c\u6bcf\u4e00\u4e2a store \u90fd\u6709\u81ea\u5df1\u7684\u7edf\u6cbb\u6743\u3002\u6bcf\u4e2a store \u90fd\u4fdd\u5b58\u7740\u81ea\u5df1\u5bf9\u5e94\u7684\u90a3\u90e8\u5206\u72b6\u6001\uff0c\u4ee5\u53ca\u6240\u6709\u4fee\u6539\u8fd9\u4e9b\u72b6\u6001\u7684\u903b\u8f91\u3002\n\n\u800c Redux \u4e2d\u7684 store \u66f4\u559c\u6b22\u5c06\u6743\u529b\u4e0b\u653e\uff0c\u4e8b\u5b9e\u4e0a\u4e0d\u5f97\u4e0d\u8fd9\u4e48\u505a\u3002\u56e0\u4e3a\u5728 Redux \u4e2d\uff0c\u4f60\u53ea\u80fd\u6709\u4e00\u4e2a store\u2026\u2026\u6240\u4ee5\u5982\u679c\u4f60\u6253\u7b97\u50cf Flux \u90a3\u6837\u8ba9 store \u5b8c\u5168\u72ec\u7acb\u5904\u7406\u81ea\u5df1\u7684\u4e8b\u60c5\uff0c\u90a3\u4e48\u5728 Redux \u4e2d\uff0cstore \u91cc\u7684\u5de5\u4f5c\u91cf\u5c06\u53d8\u5f97\u975e\u5e38\u5927\u3002\n\n\u56e0\u6b64\uff0cRedux \u4e2d\u7684 store \u9996\u5148\u4f1a\u4fdd\u5b58\u6574\u4e2a\u5e94\u7528\u7684\u6240\u6709\u72b6\u6001\uff0c\u7136\u540e\u5c06\u300c\u5224\u65ad\u54ea\u4e00\u90e8\u5206\u72b6\u6001\u9700\u8981\u6539\u53d8\u300d\u7684\u4efb\u52a1\u5206\u914d\u4e0b\u53bb\u3002\u800c\u4ee5\u6839 reducer\uff08root reducer\uff09\u4e3a\u9996\u7684 reducer \u4eec\u5c06\u4f1a\u627f\u62c5\u8fd9\u4e2a\u4efb\u52a1\u3002\n\n\u4f60\u53ef\u80fd\u53d1\u73b0\u8fd9\u91cc\u597d\u50cf\u6ca1\u6709 dispatcher \u4ec0\u4e48\u4e8b\u3002\u662f\u7684\uff0c\u867d\u7136\u770b\u8d77\u6765\u6709\u70b9\u513f\u8d8a\u6743\uff0c\u4f46 Redux \u91cc\u7684 store \u5df2\u7ecf\u5b8c\u5168\u63a5\u7ba1\u4e86 dispatcher \u76f8\u5173\u7684\u5de5\u4f5c\u3002\n\n### The reducers\n\n\u5f53 store \u9700\u8981\u77e5\u9053\u4e00\u4e2a action \u89e6\u53d1\u540e\u72b6\u6001\u9700\u8981\u600e\u4e48\u6539\u53d8\u65f6\uff0c\u4ed6\u4f1a\u53bb\u8be2\u95ee reducer\u3002\u6839 reducer \u4f1a\u6839\u636e\u72b6\u6001\u5bf9\u8c61\u7684\u952e\uff08key\uff09\u5c06\u6574\u4e2a\u72b6\u6001\u6811\u8fdb\u884c\u62c6\u5206\uff0c\u7136\u540e\u5c06\u62c6\u5206\u540e\u7684\u6bcf\u4e00\u5757\u5b50\u72b6\u6001\u4f20\u5230\u77e5\u9053\u8be5\u600e\u4e48\u5bf9\u8fd9\u5757\u72b6\u6001\u8fdb\u884c\u54cd\u5e94\u7684\u5b50 reducer \u90a3\u91cc\u5904\u7406\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1200/1*Vocy_6Gl9PbFlCIJsE9r3A.png)\n\n\u6211\u628a reducers \u770b\u505a\u662f\u5bf9\u590d\u5370\u60c5\u6709\u72ec\u949f\u7684\u767d\u9886\u4eec\u3002\u4ed6\u4eec\u4e0d\u5e0c\u671b\u628a\u4efb\u4f55\u4e8b\u641e\u7838\uff0c\u56e0\u6b64\u4ed6\u4eec\u4e0d\u4f1a\u4fee\u6539\u4efb\u4f55\u4f20\u9012\u7ed9\u4ed6\u4eec\u7684\u6587\u4ef6\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4ed6\u4eec\u4f1a\u5bf9\u8fd9\u4e9b\u6587\u4ef6\u8fdb\u884c\u590d\u5370\uff0c\u7136\u540e\u5728\u590d\u5370\u4ef6\u4e0a\u8fdb\u884c\u4fee\u6539\u3002\uff08\u8bd1\u8005\u6ce8\uff1a\u5f53\u7136\uff0c\u5f53\u8fd9\u4e9b\u4fee\u6539\u540e\u7684\u590d\u5370\u4ef6\u5b9a\u7a3f\u540e\uff0c\u4ed6\u4eec\u4e5f\u4e0d\u4f1a\u518d\u53bb\u4fee\u6539\u8fd9\u4e9b\u590d\u5370\u4ef6\u3002\uff09\n\n\u8fd9\u662f Redux \u7684\u6838\u5fc3\u601d\u60f3\u4e4b\u4e00\u3002\u4e0d\u76f4\u63a5\u4fee\u6539\u6574\u4e2a\u5e94\u7528\u7684\u72b6\u6001\u6811\uff0c\u800c\u662f\u5c06\u72b6\u6001\u6811\u7684\u6bcf\u4e00\u90e8\u5206\u8fdb\u884c\u62f7\u8d1d\u5e76\u4fee\u6539\u62f7\u8d1d\u540e\u7684\u90e8\u5206\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u90e8\u5206\u91cd\u65b0\u7ec4\u5408\u6210\u4e00\u9897\u65b0\u7684\u72b6\u6001\u6811\u3002\n\n\u5b50 reducers \u4f1a\u628a\u4ed6\u4eec\u521b\u5efa\u7684\u526f\u672c\u4f20\u56de\u7ed9\u6839 reducer\uff0c\u800c\u6839 reducer \u4f1a\u628a\u8fd9\u4e9b\u526f\u672c\u7ec4\u5408\u8d77\u6765\u5f62\u6210\u4e00\u9897\u65b0\u7684\u72b6\u6001\u6811\u3002\u6700\u540e\u6839 reducer \u5c06\u65b0\u7684\u72b6\u6001\u6811\u4f20\u56de\u7ed9 store\uff0cstore \u518d\u5c06\u65b0\u7684\u72b6\u6001\u6811\u8bbe\u4e3a\u6700\u7ec8\u7684\u72b6\u6001\u3002\n\n\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u5c0f\u578b\u5e94\u7528\uff0c\u4f60\u53ef\u80fd\u53ea\u6709\u4e00\u4e2a reducer \u5bf9\u6574\u4e2a\u72b6\u6001\u6811\u8fdb\u884c\u62f7\u8d1d\u5e76\u4f5c\u51fa\u4fee\u6539\u3002\u53c8\u6216\u8005\u4f60\u6709\u4e00\u4e2a\u8d85\u5927\u7684\u5e94\u7528\uff0c\u4f60\u53ef\u80fd\u4f1a\u6709\u82e5\u5e72\u4e2a reducers \u5bf9\u6574\u4e2a\u72b6\u6001\u6811\u8fdb\u884c\u4fee\u6539\u3002\u8fd9\u4e5f\u662f Flux \u548c Redux \u7684\u53e6\u4e00\u5904\u533a\u522b\u3002\u5728 Flux \u4e2d\uff0cstore \u5e76\u4e0d\u9700\u8981\u4e0e\u5176\u4ed6 store \u4ea7\u751f\u5173\u8054\uff0c\u800c\u4e14 store \u7684\u7ed3\u6784\u662f\u6241\u5e73\u7684\u3002\u800c\u5728 Redux \u4e2d\uff0creducers \u662f\u6709\u5c42\u7ea7\u7ed3\u6784\u7684\u3002\u8fd9\u79cd\u5c42\u7ea7\u7ed3\u6784\u53ef\u4ee5\u6709\u82e5\u5e72\u5c42\uff0c\u5c31\u50cf\u7ec4\u4ef6\u7684\u5c42\u7ea7\u7ed3\u6784\u90a3\u6837\u3002\n\n### The views: \u667a\u80fd\u7ec4\u4ef6\uff08smart components\uff09\u548c\u6728\u5076\u7ec4\u4ef6(dumb components)\n\nFlux \u62e5\u6709\u63a7\u5236\u578b\u89c6\u56fe\uff08controller views\uff09 \u548c\u5e38\u89c4\u578b\u89c6\u56fe\uff08regular views\uff09\u3002\u63a7\u5236\u578b\u89c6\u56fe\u5c31\u50cf\u662f\u4e00\u4e2a\u7ecf\u7406\u4e00\u6837\uff0c\u7ba1\u7406\u7740 store \u548c\u5b50\u89c6\u56fe\uff08child views\uff09\u4e4b\u95f4\u7684\u901a\u4fe1\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1200/1*TgCkFcjlD9SxSrMvVX3DrA.png)\n\n\u5728 Redux \u4e2d\uff0c\u4e5f\u6709\u4e00\u4e2a\u7c7b\u4f3c\u7684\u6982\u5ff5\uff1a\u667a\u80fd\u7ec4\u4ef6\u548c\u6728\u5076\u7ec4\u4ef6\u3002\uff08\u8bd1\u8005\u6ce8\uff1a\u5728\u6700\u65b0\u7684 Redux \u6587\u6863\u4e2d\uff0c\u5b83\u4eec\u5206\u522b\u53eb\u505a\u5bb9\u5668\u578b\u7ec4\u4ef6 Container component \u548c\u5c55\u793a\u578b\u7ec4\u4ef6 Presentational component\uff09\u667a\u80fd\u7ec4\u4ef6\u7684\u804c\u8d23\u5c31\u50cf\u7ecf\u7406\u4e00\u6837\uff0c\u4f46\u662f\u6bd4\u8d77 Flux \u4e2d\u7684\u89d2\u8272\uff0cRedux \u5bf9\u7ecf\u7406\u7684\u804c\u8d23\u6709\u4e86\u66f4\u591a\u7684\u5b9a\u4e49\uff1a\n\n - \u667a\u80fd\u7ec4\u4ef6\u8d1f\u8d23\u6240\u6709\u7684 action \u76f8\u5173\u7684\u5de5\u4f5c\u3002\u5982\u679c\u667a\u80fd\u7ec4\u4ef6\u91cc\u5305\u542b\u7684\u4e00\u4e2a\u6728\u5076\u7ec4\u4ef6\u9700\u8981\u89e6\u53d1\u4e00\u4e2a action\uff0c\u667a\u80fd\u7ec4\u4ef6\u4f1a\u901a\u8fc7 props \u4f20\u4e00\u4e2a function \u7ed9\u6728\u5076\u7ec4\u4ef6\uff0c\u800c\u6728\u5076\u7ec4\u4ef6\u53ef\u4ee5\u5728\u9700\u8981\u89e6\u53d1 action \u65f6\u8c03\u7528\u8fd9\u4e2a function\u3002\n - \u667a\u80fd\u7ec4\u4ef6\u4e0d\u5b9a\u4e49 CSS \u6837\u5f0f\u3002\n - \u667a\u80fd\u7ec4\u4ef6\u51e0\u4e4e\u4e0d\u4f1a\u4ea7\u751f\u81ea\u5df1\u7684 DOM \u8282\u70b9\uff0c\u4ed6\u7684\u5de5\u4f5c\u662f\u7ec4\u7ec7\u82e5\u5e72\u7684\u6728\u5076\u7ec4\u4ef6\uff0c\u7531\u6728\u5076\u7ec4\u4ef6\u6765\u751f\u6210\u6700\u7ec8\u7684 DOM \u8282\u70b9\u3002\n\n\u6728\u5076\u7ec4\u4ef6\u4e0d\u4f1a\u76f4\u63a5\u4f9d\u8d56 action\uff08\u8bd1\u8005\u6ce8\uff1a\u5373\u4e0d\u4f1a\u5728\u6728\u5076\u7ec4\u4ef6\u91cc `require` action \u76f8\u5173\u7684\u6587\u4ef6\uff09\uff0c\u56e0\u4e3a\u6240\u6709\u7684 action \u90fd\u4f1a\u5f53\u505a props \u4f20\u4e0b\u6765\u3002\u8fd9\u610f\u5473\u7740\u6728\u5076\u7ec4\u4ef6\u53ef\u4ee5\u88ab\u4efb\u4f55\u4e00\u4e2a\u903b\u8f91\u4e0d\u540c\u7684 App \u62ff\u53bb\u4f7f\u7528\u3002\u540c\u65f6\u6728\u5076\u7ec4\u4ef6\u4e5f\u9700\u8981\u6709\u4e00\u5b9a\u7684\u6837\u5f0f\u6765\u8ba9\u81ea\u5df1\u53d8\u5f97\u597d\u770b\u4e00\u4e9b\uff08\u5f53\u7136\u4f60\u53ef\u4ee5\u8ba9\u6728\u5076\u7ec4\u4ef6\u63a5\u53d7\u67d0\u4e9b props \u4f5c\u4e3a\u8bbe\u7f6e\u6837\u5f0f\u7684\u53d8\u91cf\uff09\u3002\n\n### \u89c6\u56fe\u5c42\u7ed1\u5b9a\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1200/1*D1RcVrMV2rp6AH9hk5xZ8g.png)\n\n\u8981\u628a store \u7ed1\u5b9a\u5230\u89c6\u56fe\u4e0a\uff0cRedux \u8fd8\u9700\u8981\u4e00\u70b9\u5e2e\u52a9\u3002\u5982\u679c\u4f60\u5728\u4f7f\u7528 React\uff0c\u90a3\u4e48\u4f60\u9700\u8981\u4f7f\u7528 react-redux\u3002\n\n\u89c6\u56fe\u7ed1\u5b9a\u5de5\u4f5c\u6709\u70b9\u50cf\u4e3a\u7ec4\u4ef6\u6811\u670d\u52a1\u7684 IT \u90e8\u95e8\u3002IT \u90e8\u95e8\u786e\u4fdd\u6240\u6709\u7684\u7ec4\u4ef6\u90fd\u6b63\u786e\u7684\u7ed1\u5b9a\u5230 store \u4e0a\uff0c\u5e76\u5904\u7406\u5404\u79cd\u6280\u672f\u4e0a\u7684\u7ec6\u8282\uff0c\u4ee5\u786e\u4fdd\u4f59\u4e0b\u5c42\u7ea7\u7684\u7ec4\u4ef6\u5bf9\u7ed1\u5b9a\u76f8\u5173\u7684\u64cd\u4f5c\u6beb\u65e0\u611f\u77e5\u3002\n\n\u89c6\u56fe\u5c42\u7ed1\u5b9a\u5f15\u5165\u4e86\u4e09\u4e2a\u6982\u5ff5\uff1a\n\n 1. `<Provider>` \u7ec4\u4ef6\uff1a \u8fd9\u4e2a\u7ec4\u4ef6\u9700\u8981\u5305\u88f9\u5728\u6574\u4e2a\u7ec4\u4ef6\u6811\u7684\u6700\u5916\u5c42\u3002\u8fd9\u4e2a\u7ec4\u4ef6\u8ba9\u6839\u7ec4\u4ef6\u7684\u6240\u6709\u5b50\u5b59\u7ec4\u4ef6\u80fd\u591f\u8f7b\u677e\u7684\u4f7f\u7528 `connect()` \u65b9\u6cd5\u7ed1\u5b9a store\u3002\n 2. `connect()`\uff1a\u8fd9\u662f `react-redux` \u63d0\u4f9b\u7684\u4e00\u4e2a\u65b9\u6cd5\u3002\u5982\u679c\u4e00\u4e2a\u7ec4\u4ef6\u60f3\u8981\u54cd\u5e94\u72b6\u6001\u7684\u53d8\u5316\uff0c\u5c31\u628a\u81ea\u5df1\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9 connect() \u7684\u7ed3\u679c\uff08\u8bd1\u8005\u6ce8\uff1aconnect() \u8fd4\u56de\u7684\u4f9d\u7136\u662f\u4e00\u4e2a\u51fd\u6570\uff09\uff0cconnect() \u65b9\u6cd5\u4f1a\u5904\u7406\u4e0e store \u7ed1\u5b9a\u7684\u7ec6\u8282\uff0c\u5e76\u901a\u8fc7 selector \u786e\u5b9a\u8be5\u7ed1\u5b9a store \u4e2d\u54ea\u4e00\u90e8\u5206\u7684\u6570\u636e\u3002\n 3. `selector`\uff1a\u8fd9\u662f\u4f60\u81ea\u5df1\u7f16\u5199\u7684\u4e00\u4e2a\u51fd\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u58f0\u660e\u4e86\u4f60\u7684\u7ec4\u4ef6\u9700\u8981\u6574\u4e2a store \u4e2d\u7684\u54ea\u4e00\u90e8\u5206\u6570\u636e\u4f5c\u4e3a\u81ea\u5df1\u7684 props\u3002\n\n### \u6839\u7ec4\u4ef6\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1200/1*JXPeiNP-it60-QYKb-p2eQ.png)\n\n\u6240\u6709\u7684 React \u5e94\u7528\u90fd\u5b58\u5728\u4e00\u4e2a\u6839\u7ec4\u4ef6\uff08root component\uff09\u3002\u4ed6\u5176\u5b9e\u5c31\u662f\u6574\u4e2a\u7ec4\u4ef6\u6811\u6700\u5916\u5c42\u7684\u90a3\u4e2a\u7ec4\u4ef6\uff0c\u4f46\u662f\u5728 Redux \u4e2d\uff0c\u6839\u7ec4\u4ef6\u8fd8\u8981\u627f\u62c5\u989d\u5916\u7684\u4efb\u52a1\u3002\n\n\u6839\u7ec4\u4ef6\u627f\u62c5\u7684\u89d2\u8272\u6709\u70b9\u50cf\u4f01\u4e1a\u4e2d\u7684\u9ad8\u7ba1\uff0c\u4ed6\u5c06\u6574\u4e2a\u56e2\u961f\u6574\u5408\u5230\u4e00\u8d77\u6765\u5b8c\u6210\u67d0\u9879\u4efb\u52a1\u3002\u4ed6\u4f1a\u521b\u5efa store\uff0c\u5e76\u544a\u8bc9 store \u4f7f\u7528\u54ea\u4e9b reducers\uff0c\u5e76\u6700\u7ec8\u5b8c\u6210\u89c6\u56fe\u5c42\u7684\u7ed1\u5b9a\u3002\n\n\u5f53\u5b8c\u6210\u6574\u4e2a\u5e94\u7528\u7684\u521d\u59cb\u5316\u5de5\u4f5c\u540e\uff0c\u6839\u7ec4\u4ef6\u7684\u5c31\u4e0d\u518d\u63d2\u624b\u6574\u4e2a\u5e94\u7528\u7684\u8fd0\u884c\u8fc7\u7a0b\u4e86\u3002\u6bcf\u4e00\u6b21\u91cd\u65b0\u6e32\u67d3\uff08re-render\uff09\u90fd\u6ca1\u6709\u6839\u7ec4\u4ef6\u4ec0\u4e48\u4e8b\uff0c\u8fd9\u4e9b\u6d3b\u513f\u90fd\u7531\u6839\u7ec4\u4ef6\u4e0b\u9762\u7684\u5b50\u7ec4\u4ef6\u5b8c\u6210\uff0c\u5f53\u7136\u4e5f\u5c11\u4e0d\u4e86\u89c6\u56fe\u5c42\u7ed1\u5b9a\u7684\u529f\u52b3\u3002\n\n## Redux \u5b8c\u6210\u7684\u8fd0\u884c\u6d41\u7a0b\n\n\u8ba9\u6211\u4eec\u770b\u770b\u4e0a\u8ff0\u5404\u4e2a\u90e8\u5206\u662f\u600e\u6837\u7ec4\u5408\u6210\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884c\u7684\u5e94\u7528\u7684\u3002\n\n### \u914d\u7f6e\u73af\u8282\n\n\u5e94\u7528\u4e2d\u7684\u4e0d\u540c\u90e8\u5206\u9700\u8981\u5728\u914d\u7f6e\u73af\u8282\u4e2d\u6574\u5408\u5230\u4e00\u8d77\u3002\n\n(1) **\u51c6\u5907\u597d store\u3002**\u6839\u7ec4\u4ef6\u4f1a\u521b\u5efa store\uff0c\u5e76\u901a\u8fc7 createStore(reducer) \u65b9\u6cd5\u544a\u8bc9 store \u8be5\u4f7f\u7528\u54ea\u4e2a\u6839 reducer\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u6839 reducer \u4e5f\u901a\u8fc7 combineReducers() \u65b9\u6cd5\u7ec4\u5efa\u4e86\u4e00\u53ea\u5411\u81ea\u5df1\u6c47\u62a5\u7684 reducer \u56e2\u961f\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*8_fU31-jNQnQ0dp-wplm5w.png)\n\n(2) **\u8bbe\u7f6e store \u548c\u7ec4\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1\u3002**\u6839\u7ec4\u4ef6\u5c06\u5b83\u6240\u6709\u7684\u5b50\u7ec4\u4ef6\u5305\u88f9\u5728 `<Provider>` \u7ec4\u4ef6\u4e2d\uff0c\u5e76\u5efa\u7acb\u4e86 Provider \u4e0e store \u4e4b\u95f4\u7684\u8054\u7cfb\u3002\n\nProvider \u672c\u8d28\u4e0a\u521b\u5efa\u4e86\u4e00\u4e2a\u7528\u4e8e\u66f4\u65b0\u89c6\u56fe\u7ec4\u4ef6\u7684\u7f51\u7edc\u3002\u90a3\u4e9b\u667a\u80fd\u7ec4\u4ef6\u901a\u8fc7 connect() \u65b9\u6cd5\u8fde\u5165\u8fd9\u4e2a\u7f51\u7edc\uff0c\u4ee5\u6b64\u786e\u4fdd\u4ed6\u4eec\u80fd\u591f\u83b7\u53d6\u5230\u72b6\u6001\u7684\u66f4\u65b0\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*NYMutQLW8TcEgbO8VNeqHA.png)\n\n(3) **\u51c6\u5907\u597d action callback\u3002**\u4e3a\u4e86\u8ba9\u6728\u5076\u7ec4\u4ef6\u66f4\u597d\u7684\u5904\u7406 action\uff0c\u667a\u80fd\u7ec4\u4ef6\u53ef\u4ee5\u7528 `bindActionCreators()` \u65b9\u6cd5\u6765\u521b\u5efa action callback\u3002\u8fd9\u6837\u505a\u4e4b\u540e\uff0c\u667a\u80fd\u7ec4\u4ef6\u5c31\u80fd\u7ed9\u6728\u5076\u7ec4\u4ef6\u4f20\u5165\u4e00\u4e2a\u56de\u8c03\uff08callback\uff09\u3002\u5bf9\u5e94\u7684 action \u4f1a\u5728\u6728\u5076\u7ec4\u4ef6\u8c03\u7528\u8fd9\u4e2a\u56de\u8c03\u65f6\u88ab\u81ea\u52a8 dispatch\u3002\uff08\u8bd1\u8005\u6ce8\uff1a\u4f7f\u7528 bindActionCreators() \u4f7f\u5f97\u6728\u5076\u7ec4\u4ef6\u65e0\u9700\u5173\u5fc3 action \u7684 type \u7b49\u4fe1\u606f\uff0c\u53ea\u7528\u8c03\u7528 props \u4e2d\u7684\u67d0\u4e2a\u65b9\u6cd5\u4f20\u5165\u9700\u8981\u7684\u53c2\u6570\u4f5c\u4e3a action \u7684 payload \u5373\u53ef\uff09\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*aVoD3gGddKUy3VCxwylthQ.png)\n\n### \u6570\u636e\u6d41\n\n\u73b0\u5728\u6211\u4eec\u7684\u5e94\u7528\u5df2\u7ecf\u914d\u7f6e\u5b8c\u6210\uff0c\u7528\u6237\u53ef\u4ee5\u5f00\u59cb\u64cd\u4f5c\u4e86\u3002\u8ba9\u6211\u4eec\u89e6\u53d1\u4e00\u4e2a action\uff0c\u770b\u770b\u6570\u636e\u662f\u600e\u6837\u6d41\u52a8\u7684\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*GNDs7SY53lEhp7mX8V25lw.png)\n\n(1) \u89c6\u56fe\u53d1\u51fa\u4e86\u4e00\u4e2a action\uff0caction creator \u5c06\u8fd9\u4e2a action \u683c\u5f0f\u5316\u5e76\u8fd4\u56de\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*p4EkWE_8upZ97Z0IapKDcQ.png)\n\n(2) \u8fd9\u4e2a action \u8981\u4e48\u88ab\u81ea\u52a8 dispatch\uff08\u5982\u679c\u6211\u4eec\u5728\u914d\u7f6e\u9636\u6bb5\u4f7f\u7528\u4e86 bindActionCreators()\uff09\uff0c\u8981\u4e48\u7531\u89c6\u56fe\u5c42\u624b\u52a8 dispatch\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*zmFp3bmDq7b6Bvlo8Ineag.png)\n\n(3) store \u63a5\u53d7\u5230\u8fd9\u4e2a action \u540e\uff0c\u5c06\u5f53\u524d\u7684\u72b6\u6001\u6811\u548c\u8fd9\u4e2a action \u4f20\u7ed9\u6839 reducer\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*zrsSoAAyf4pqTMHiA6P8Ww.png)\n\n(4) \u6839 reducer \u5c06\u6574\u4e2a\u72b6\u6001\u6811\u5207\u5206\u6210\u4e00\u4e2a\u4e2a\u5c0f\u5757\uff0c\u7136\u540e\u5c06\u67d0\u4e00\u4e2a\u5c0f\u5757\u5206\u53d1\u7ed9\u77e5\u9053\u600e\u4e48\u5904\u7406\u8fd9\u90e8\u5206\u5185\u5bb9\u7684\u5b50 reducer\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*-S_dYe6BoQBgwSRpF7Hriw.png)\n\n(5) \u5b50 reducer \u5c06\u4f20\u5165\u7684\u4e00\u5c0f\u5757\u72b6\u6001\u6811\u8fdb\u884c\u62f7\u8d1d\uff0c\u7136\u540e\u5728\u526f\u672c\u4e0a\u8fdb\u884c\u4fee\u6539\uff0c\u5e76\u6700\u7ec8\u5c06\u4fee\u6539\u540e\u7684\u526f\u672c\u8fd4\u56de\u6839 reducer\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*_R-rGNfKr2Xu2FlXNZNPJg.png)\n\n(6) \u5f53\u6240\u6709\u7684\u5b50 reducer \u8fd4\u56de\u4ed6\u4eec\u4fee\u6539\u7684\u526f\u672c\u4e4b\u540e\uff0c\u6839 reducer \u5c06\u8fd9\u4e9b\u90e8\u5206\u518d\u6b21\u7ec4\u5408\u8d77\u6765\u5f62\u6210\u4e00\u9897\u65b0\u7684\u72b6\u6001\u6811\u3002\u7136\u540e\u6839 reducer \u5c06\u8fd9\u4e2a\u65b0\u7684\u72b6\u6001\u6811\u4ea4\u8fd8\u7ed9 store\uff0cstore \u518d\u628a\u81ea\u5df1\u7684\u72b6\u6001\u7f6e\u4e3a\u8fd9\u4e2a\u6700\u65b0\u7684\u72b6\u6001\u6811\u3002\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*bUMekI8QlEfFxSBCuVuIkw.png)\n\n(7) store \u544a\u8bc9\u89c6\u56fe\u5c42\u7ed1\u5b9a\uff1a\u300c\u72b6\u6001\u66f4\u65b0\u5566\u300d\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*x6vBvUlFJktJqty56jr0QQ.png)\n\n(8) \u89c6\u56fe\u5c42\u7ed1\u5b9a\u8ba9 store \u628a\u66f4\u65b0\u7684\u72b6\u6001\u4f20\u8fc7\u6765\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*qGatznV4QujuxGe49YfX5A.png)\n\n(9) \u89c6\u56fe\u5c42\u7ed1\u5b9a\u89e6\u53d1\u4e86\u4e00\u4e2a\u91cd\u65b0\u6e32\u67d3\u7684\u64cd\u4f5c\uff08re-render\uff09\n\n![](https://d262ilb51hltx0.cloudfront.net/max/1600/1*Je2mow8mjYLngXreGGlIEg.png)\n\n\u8fd9\u5c31\u662f\u6211\u6240\u7406\u89e3\u7684 Redux\uff0c\u5e0c\u671b\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\u3002\n\n## \u66f4\u591a\u8d44\u6e90\n\n - [Redux \u5b98\u65b9\u6587\u6863](http://rackt.org/redux/index.html)\n - [Redux \u5b98\u65b9\u6587\u6863\u4e2d\u6587\u7248](https://github.com/camsong/redux-in-chinese)\n - [The Evolution of Flux Frameworks](https://medium.com/@dan_abramov/the-evolution-of-flux-frameworks-6c16ad26bb31)\n - [Smart and Dumb Components](https://medium.com/@dan_abramov/smart-and-dumb-components-7ca2f9a7c7d0)\n - [The upsides of using Redux](http://stackoverflow.com/a/32920459)\n - [The downsides of using Redux](http://stackoverflow.com/a/32916602)\n - [\u5982\u4f55\u8bc4\u4ef7\u6570\u636e\u6d41\u7ba1\u7406\u67b6\u6784 Redux?](https://www.zhihu.com/question/38591713/answer/77634014)\n"}, {"repo": "/whxaxes/canvas-test", "language": "HTML", "readme_contents": "# canvas-test\r\n\r\n\u5174\u8da3\u4f7f\u7136\u5199\u7684canvas\u5c0f\u73a9\u610f<br>\r\n\r\n> \u672c\u9879\u76ee\u4e2d\u7684 demo \u5747\u4e3a\u81ea\u5df1\u7684\u5b66\u4e60 Canvas \u4e4b\u4f5c\uff0c\u90e8\u5206\u521b\u610f\u975e\u539f\u521b\u3002\r\n\r\n## \u5b89\u88c5\u4f9d\u8d56\r\n```\r\nnpm install\r\n```\r\n\r\n## \u8fd0\u884c\u670d\u52a1\r\n```\r\nnpm run server\r\n\r\nopen http://127.0.0.1:3030/menu.html\r\n```\r\n\r\n## \u6784\u5efamenu\u5217\u8868\r\n```\r\nnpm run build\r\n```\r\n\r\n## \u5728\u7ebf\u6548\u679c\u5217\u8868\r\n\r\n> \u5efa\u8bae\u7528`chrome`\u67e5\u770b\r\n\r\n[placeholder]:p\r\n\r\n| \u6807\u9898 |  |\r\n|:-------- |:--------:|\r\n| [\u7ebf\u6761\u65f6\u949f](http://whxaxes.github.io/canvas-test/src/Funny-demo/coolClock/index2.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Funny-demo/coolClock) |\r\n| [\u7c92\u5b50\u65f6\u949f](http://whxaxes.github.io/canvas-test/src/Funny-demo/coolClock/index.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Funny-demo/coolClock) |\r\n| [\u6a61\u76ae\u64e6\u6548\u679c](http://whxaxes.github.io/canvas-test/src/Funny-demo/clip/clip.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Funny-demo/clip) |\r\n| [LOW POLY\uff08\u56fe\u7247\u4e09\u89d2\u5316\uff09](http://whxaxes.github.io/canvas-test/src/Funny-demo/lowpoly/index.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Funny-demo/lowpoly) |\r\n| [\u53ef\u89c6\u5316\u97f3\u4e50\u64ad\u653e\u5668](http://whxaxes.github.io/canvas-test/src/Funny-demo/musicPlayer/index.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Funny-demo/musicPlayer) |\r\n| [\u653e\u70df\u82b1\u6a21\u62df](http://whxaxes.github.io/canvas-test/src/Funny-demo/shotFire/shotFire.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Funny-demo/shotFire) |\r\n| [\u7f51\u72b6\u7c92\u5b50\u6548\u679c1](http://whxaxes.github.io/canvas-test/src/Funny-demo/netparticle/net_1.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Funny-demo/netparticle) |\r\n| [\u7f51\u72b6\u7c92\u5b50\u6548\u679c2](http://whxaxes.github.io/canvas-test/src/Funny-demo/netparticle/net_2.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Funny-demo/netparticle) |\r\n| [\u56fe\u50cf\u62c9\u626f\u53d8\u5f62](http://whxaxes.github.io/canvas-test/src/Funny-demo/transform/demo1.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Funny-demo/transform) |\r\n| [\u56fe\u50cf3d\u53d8\u5f62](http://whxaxes.github.io/canvas-test/src/Funny-demo/transform/demo2.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Funny-demo/transform) |\r\n| [\u9ed1\u6d1e\u5438\u5f15](http://whxaxes.github.io/canvas-test/src/Particle-demo/blackhole/blackhole.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Particle-demo/blackhole) |\r\n| [\u64cd\u63a7\u6587\u5b57\u56fe\u7247\u7684\u6570\u636e](http://whxaxes.github.io/canvas-test/src/Particle-demo/imgdata/controlImgData.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Particle-demo/imgdata) |\r\n| [\u64cd\u63a7\u5b57\u4f53\u7684\u6570\u636e](http://whxaxes.github.io/canvas-test/src/Particle-demo/imgdata/controlImgData2.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Particle-demo/imgdata) |\r\n| [\u7c92\u5b50\u6210\u50cfdemo](http://whxaxes.github.io/canvas-test/src/Particle-demo/orangutan/index.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Particle-demo/orangutan) |\r\n| [\u7c92\u5b50\u52a8\u753b](http://whxaxes.github.io/canvas-test/src/Particle-demo/animateStep/index.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Particle-demo/animateStep) |\r\n| [\u98de\u673a\u6e38\u620f](http://whxaxes.github.io/canvas-test/src/Game-demo/planGame/index.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Game-demo/planGame) |\r\n| [\u63a5\u6c34\u7ba1\u6e38\u620f](http://whxaxes.github.io/canvas-test/src/Game-demo/connectPipe/easyPipes.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Game-demo/connectPipe) |\r\n| [FlyppyPeople](http://whxaxes.github.io/canvas-test/src/Game-demo/FlppyPeople/index.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Game-demo/FlppyPeople) |\r\n| [\u7b80\u5355\u8dd1\u9177\u6e38\u620f](http://whxaxes.github.io/canvas-test/src/Game-demo/runningMan/index.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Game-demo/runningMan) |\r\n| [\u7b80\u6613\u684c\u7403\u6e38\u620f](http://whxaxes.github.io/canvas-test/src/Game-demo/snooker/snooker.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Game-demo/snooker) |\r\n| [\u89c6\u9891\u62fc\u56fe](http://whxaxes.github.io/canvas-test/src/Game-demo/vedioPintu.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Game-demo) |\r\n| [3D\u65cb\u8f6c\u7403](http://whxaxes.github.io/canvas-test/src/3D-demo/3Dball.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/3D-demo) |\r\n| [3d\u7acb\u65b9\u4f53](http://whxaxes.github.io/canvas-test/src/3D-demo/3Dcube.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/3D-demo) |\r\n| [3d\u591a\u7acb\u65b9\u4f53](http://whxaxes.github.io/canvas-test/src/3D-demo/3Dcubes.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/3D-demo) |\r\n| [3D\u6807\u7b7e\u4e91](http://whxaxes.github.io/canvas-test/src/3D-demo/3Dtag.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/3D-demo) |\r\n| [\u4eff\u91cd\u529b\u5c0f\u7403](http://whxaxes.github.io/canvas-test/src/Other-demo/shotBall.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Other-demo) |\r\n| [\u7f13\u5b58\u6d4b\u8bd5(\u6709\u7f13\u5b58)](http://whxaxes.github.io/canvas-test/src/Other-demo/cache/test.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Other-demo/cache) |\r\n| [\u7f13\u5b58\u6d4b\u8bd5(\u65e0\u7f13\u5b58)](http://whxaxes.github.io/canvas-test/src/Other-demo/cache/test2.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Other-demo/cache) |\r\n| [Canvas\u65f6\u949f](http://whxaxes.github.io/canvas-test/src/Other-demo/clock.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Other-demo) |\r\n| [\u7ed8\u5236\u591a\u8fb9\u5f62](http://whxaxes.github.io/canvas-test/src/Other-demo/duobianxing.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Other-demo) |\r\n| [\u79d2\u8868](http://whxaxes.github.io/canvas-test/src/Other-demo/stopWatch.html) | [\u67e5\u770b\u4ee3\u7801](https://github.com/whxaxes/canvas-test/tree/master/src/Other-demo) |\r\n\r\n[/placeholder]:p\r\n\r\n## Author\r\nwhxaxes\r\n\r\n## LICENSE\r\nMIT\r\n\r\n\r\n"}, {"repo": "/nolanw/HTMLReader", "language": "HTML", "readme_contents": "# HTMLReader\n\nA [WHATWG-compliant HTML parser][whatwg-spec] with [CSS selectors][selectors-level-3] in Objective-C and Foundation. It parses HTML just like a browser.\n\n![Supports iOS, OS X, tvOS, and watchOS](https://img.shields.io/cocoapods/p/HTMLReader.svg)\n\n[selectors-level-3]: http://www.w3.org/TR/css3-selectors/\n[whatwg-spec]: http://whatwg.org/html\n\n## Usage\n\nA quick example of parsing an inline document and finding the bold text:\n\n```swift\nimport HTMLReader\n\nlet document = HTMLDocument(string: \"\"\"\n    <p>\n        Ahoy there, <b>sailor</b>!\n    </p>\n    \"\"\")\nprint(document.firstNode(matchingSelector: \"b\")?.textContent ?? \"\")\n// => sailor\n```\n\nManipulating a document is a little more involved, but entirely doable. Here we take the document from the first example and wrap the paragraph within a new element:\n\n```swift\nif\n    let p = document.firstNode(matchingSelector: \"p\"),\n    let parent = p.parent\n{\n    let wrapper = HTMLElement(tagName: \"div\", attributes: [\"class\": \"special\"])\n    let children = parent.mutableChildren\n    children.insert(wrapper, at: children.index(of: p))\n    p.parent = wrapper\n}\n\nprint(document.innerHTML)\n// => <html><head></head><body><div class=\"special\"><p>\\\n//        Ahoy there, <b>sailor</b>!\\\n//    </p></div></body></html>\n```\n\nFinally, the most involved example: fetching the main page for the HTMLReader repository and scraping the description of the project. (This is just an example; GitHub has a fabulous API that you should use if you want to find a repository's description!)\n\n```objc\n@import HTMLReader;\n\n// Load a web page.\nNSURL *url = [NSURL URLWithString:@\"https://github.com/nolanw/HTMLReader\"];\nNSURLSession *session = [NSURLSession sharedSession];\n[[session dataTaskWithURL:url completionHandler:\n  ^(NSData *data, NSURLResponse *response, NSError *error) {\n    NSString *contentType = nil;\n    if ([response isKindOfClass:[NSHTTPURLResponse class]]) {\n        NSDictionary *headers = [(NSHTTPURLResponse *)response allHeaderFields];\n        contentType = headers[@\"Content-Type\"];\n    }\n    HTMLDocument *home = [HTMLDocument documentWithData:data\n                                      contentTypeHeader:contentType];\n    HTMLElement *div = [home firstNodeMatchingSelector:@\".repository-meta-content\"];\n    NSCharacterSet *whitespace = [NSCharacterSet whitespaceAndNewlineCharacterSet];\n    NSLog(@\"%@\", [div.textContent stringByTrimmingCharactersInSet:whitespace]);\n    // => A WHATWG-compliant HTML parser in Objective-C.\n}] resume];\n```\n\n## Installation\n\nYou have choices:\n\n* Copy the files in the [Sources](Sources) folder into your project.\n* Add the following line to your [Cartfile][Carthage]:\n  \n  `github \"nolanw/HTMLReader\"`\n* Add the following line to your [Podfile][CocoaPods]:\n   \n   `pod \"HTMLReader\"`\n* Add the following line to your [Package.swift][Swift Package Manager]:\n    \n   `.package(url: \"https://github.com/nolanw/HTMLReader\", from: \"2.1.3\")`\n* Clone this repository (perhaps add it as a submodule) and add `HTMLReader.xcodeproj` to your project/workspace. Then add `HTMLReader.framework` to your app target. (Or, if you're targeting iOS earlier than 8.0: add `libHTMLReader.a` to your app target and `\"$(SYMROOT)/include\"` to your app target's Header Search Paths.)\n\nHTMLReader has no dependencies other than Foundation.\n\n[Carthage]: https://github.com/Carthage/Carthage#readme\n[CocoaPods]: http://docs.cocoapods.org/podfile.html#pod\n[Swift Package Manager]: https://swift.org/package-manager/#importing-dependencies\n\n## Why HTMLReader?\n\nI needed to scrape HTML like a browser. I couldn't find a good choice for iOS.\n\n## The Alternatives\n\n[libxml2][] ships with iOS. It parses some variant of HTML 4 (?) and does not handle new/broken markup like a modern browser.\n\nOther Objective-C and Swift libraries I come across (e.g. [Fuzi][], [hpple][], [Kanna][], [Ono][]) use libxml2 and inherit its shortcomings.\n\n[SwiftSoup][] is a Swift port of Jsoup. It didn't exist when I made HTMLReader. (To be fair, publicly, neither did Swift.)\n\nThere are C libraries such as [Gumbo][] or [Hubbub][], but you need to shuffle data to and from Objective-C or Swift. (Also Gumbo wasn't publicly announced until after HTMLReader was far along.)\n\n[WebKit][] ships with iOS, but its HTML parsing abilities are considered private API. I consider a round-trip through a web view inappropriate for parsing HTML. And I didn't make it very far into building my own copy of WebCore.\n\n[Google Toolbox for Mac][GTMNSString+HTML] will escape and unescape strings for HTML (e.g. `&amp;` \u21d4 `&`) but, again, not like a modern browser. For example, GTM will not unescape `&#65` (note the missing semicolon).\n\n[CFStringTransform][kCFStringTransformToXMLHex] does numeric entities via (the reversible) `kCFStringTransformToXMLHex`, but that rules out named entities.\n\n[Fuzi]: https://github.com/cezheng/Fuzi\n[GTMNSString+HTML]: https://code.google.com/p/google-toolbox-for-mac/source/browse/trunk/Foundation/GTMNSString%2BHTML.h\n[Gumbo]: https://github.com/google/gumbo-parser\n[hpple]: https://github.com/topfunky/hpple\n[Hubbub]: http://www.netsurf-browser.org/projects/hubbub/\n[Kanna]: https://github.com/tid-kijyun/Kanna\n[kCFStringTransformToXMLHex]: https://developer.apple.com/library/mac/documentation/corefoundation/Reference/CFMutableStringRef/Reference/reference.html#//apple_ref/doc/uid/20001504-CH2g-DontLinkElementID_46\n[libxml2]: http://www.xmlsoft.org/\n[Ono]: https://github.com/mattt/Ono\n[SwiftSoup]: https://github.com/scinfu/SwiftSoup\n[WebKit]: https://www.webkit.org/building/checkout.html\n\n## Does it work?\n\nHTMLReader continually runs [html5lib][html5lib-tests]'s tokenization and tree construction tests, ignoring the tests for `<template>` (which HTMLReader does not implement). Note that you need to check out the `HTMLReaderTests/html5lib` Git submodule in order to actually run these tests.\n\nHTMLReader is continually built and tested on iOS versions 8.4, 9.3, 10.3, and 11.0; built and tested on macOS versions 10.9, 10.10, 10.11, 10.12, and 10.13; built and tested on tvOS versions 9.2, 10.2, and 11.0; and built on watchOS versions 2.2, 3.2, and 4.0. It should work on down to iOS 5, macOS 10.7, tvOS 9.0, and watchOS 2.0, but there is no automated testing there (it's ok to file an issue though!).\n\nGiven all that:  [![Build Status](https://travis-ci.org/nolanw/HTMLReader.png?branch=master)](https://travis-ci.org/nolanw/HTMLReader)\n\nHTMLReader is used by at least [one shipping app][Awful].\n\n[Awful]: https://github.com/Awful/Awful.app\n[html5lib-tests]: https://github.com/html5lib/html5lib-tests\n\n## How fast is it?\n\nI'm not sure.\n\nIncluded in the project is a utility called [Benchmarker][]. It knows how to run three tests:\n\n* Parsing a large HTML file. In this case, the 7MB single-page HTML specification.\n* Escaping and unescaping entities in the large HTML file.\n* Running a bunch of CSS selectors. Basically copied from [a WebKit performance test][WebKit QuerySelector.html].\n\nChanges to HTMLReader should not cause these benchmarks to run slower. Ideally changes make them run faster!\n\n[Benchmarker]: Utilities/Benchmarker.m\n[WebKit QuerySelector.html]: https://trac.webkit.org/browser/trunk/PerformanceTests/CSS/QuerySelector.html\n\n## Bugs and Feature Requests\n\nBugs can be reported, and features can be requested, using the [issue tracker][Issues]. Or get in touch directly if you'd prefer.\n\n[Issues]: https://github.com/nolanw/HTMLReader/issues\n\n## License\n\nHTMLReader is in the public domain.\n\n## Acknowledgements\n\nHTMLReader is developed by [Nolan Waite](https://github.com/nolanw).\n\nThanks to [Chris Williams](https://github.com/ultramiraculous/) for contributing the implementation of CSS selectors.\n"}, {"repo": "/apollographql/apollo-client", "language": "TypeScript", "readme_contents": "# [Apollo Client](https://www.apollographql.com/client/) [![npm version](https://badge.fury.io/js/apollo-client.svg)](https://badge.fury.io/js/apollo-client) [![Open Source Helpers](https://www.codetriage.com/apollographql/apollo-client/badges/users.svg)](https://www.codetriage.com/apollographql/apollo-client) [![Join the community on Spectrum](https://withspectrum.github.io/badge/badge.svg)](https://spectrum.chat/apollo)\n\nApollo Client is a fully-featured caching GraphQL client with integrations for React, Angular, and more. It allows you to easily build UI components that fetch data via GraphQL. To get the most value out of `apollo-client`, you should use it with one of its view layer integrations.\n\nTo get started with the React integration, go to our [**React Apollo documentation website**](https://www.apollographql.com/docs/react/).\n\nApollo Client also has view layer integrations for [all the popular frontend frameworks](#learn-how-to-use-apollo-client-with-your-favorite-framework). For the best experience, make sure to use the view integration layer for your frontend framework of choice.\n\nApollo Client can be used in any JavaScript frontend where you want to use data from a GraphQL server. It's:\n\n1. **Incrementally adoptable**, so that you can drop it into an existing JavaScript app and start using GraphQL for just part of your UI.\n2. **Universally compatible**, so that Apollo works with any build setup, any GraphQL server, and any GraphQL schema.\n3. **Simple to get started with**, so you can start loading data right away and learn about advanced features later.\n4. **Inspectable and understandable**, so that you can have great developer tools to understand exactly what is happening in your app.\n5. **Built for interactive apps**, so your users can make changes and see them reflected in the UI immediately.\n6. **Small and flexible**, so you don't get stuff you don't need. The core is under 25kb compressed.\n7. **Community driven**, because Apollo is driven by the community and serves a variety of use cases. Everything is planned and developed in the open.\n\nGet started on the [home page](http://apollographql.com/client), which has great examples for a variety of frameworks.\n\n## Installation\n\n```bash\n# installing the preset package\nnpm install apollo-boost graphql-tag graphql --save\n# installing each piece independently\nnpm install apollo-client apollo-cache-inmemory apollo-link-http graphql-tag graphql --save\n```\n\nTo use this client in a web browser or mobile app, you'll need a build system capable of loading NPM packages on the client. Some common choices include Browserify, Webpack, and Meteor 1.3+.\n\nInstall the [Apollo Client Developer tools for Chrome](https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm) for a great GraphQL developer experience!\n\n## Usage\n\nYou get started by constructing an instance of the core class [`ApolloClient`][]. If you load `ApolloClient` from the [`apollo-boost`][] package, it will be configured with a few reasonable defaults such as our standard in-memory cache and a link to a GraphQL API at `/graphql`.\n\n```js\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient();\n```\n\n\nTo point `ApolloClient` at a different URL, add your GraphQL API's URL to the `uri` config property:\n\n```js\nimport ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://graphql.example.com'\n});\n```\n\nMost of the time you'll hook up your client to a frontend integration. But if you'd like to directly execute a query with your client, you may now call the `client.query` method like this:\n\n```js\nimport gql from 'graphql-tag';\n\nclient.query({\n  query: gql`\n    query TodoApp {\n      todos {\n        id\n        text\n        completed\n      }\n    }\n  `,\n})\n  .then(data => console.log(data))\n  .catch(error => console.error(error));\n```\n\nNow your client will be primed with some data in its cache. You can continue to make queries, or you can get your `client` instance to perform all sorts of advanced tasks on your GraphQL data. Such as [reactively watching queries with `watchQuery`][], [changing data on your server with `mutate`][], or [reading a fragment from your local cache with `readFragment`][].\n\nTo learn more about all of the features available to you through the `apollo-client` package, be sure to read through the [**`apollo-client` API reference**](https://www.apollographql.com/docs/react/api/apollo-client.html).\n\n[`ApolloClient`]: https://www.apollographql.com/docs/react/api/apollo-client.html\n[`apollo-boost`]: https://www.apollographql.com/docs/react/essentials/get-started.html#apollo-boost\n[reactively watching queries with `watchQuery`]: https://www.apollographql.com/docs/react/api/apollo-client.html#ApolloClient.watchQuery\n[changing data on your server with `mutate`]: https://www.apollographql.com/docs/react/essentials/mutations.html\n[reading a fragment from your local cache with `readFragment`]: https://www.apollographql.com/docs/react/advanced/caching.html#direct\n\n## Learn how to use Apollo Client with your favorite framework\n\n- [React](http://apollographql.com/docs/react/)\n- [Angular](http://apollographql.com/docs/angular/)\n- [Vue](https://github.com/Akryum/vue-apollo)\n- [Ember](https://github.com/bgentry/ember-apollo-client)\n- [Web Components](https://github.com/apollo-elements/apollo-elements)\n- [Meteor](http://apollographql.com/docs/react/recipes/meteor.html)\n- [Blaze](http://github.com/Swydo/blaze-apollo)\n- [Vanilla JS](https://www.apollographql.com/docs/react/api/apollo-client.html)\n- [Next.js](https://github.com/zeit/next.js/tree/master/examples/with-apollo)\n\n---\n\n## Contributing\n\n[![CircleCI](https://circleci.com/gh/apollographql/apollo-client.svg?style=svg)](https://circleci.com/gh/apollographql/apollo-client)\n[![codecov](https://codecov.io/gh/apollographql/apollo-client/branch/master/graph/badge.svg)](https://codecov.io/gh/apollographql/apollo-client)\n\n[Read the Apollo Contributor Guidelines.](CONTRIBUTING.md)\n\nRunning tests locally:\n\n```\nnpm install\nnpm test\n```\n\nThis project uses TypeScript for static typing and TSLint for linting. You can get both of these built into your editor with no configuration by opening this project in [Visual Studio Code](https://code.visualstudio.com/), an open source IDE which is available for free on all platforms.\n\n#### Important discussions\n\nIf you're getting booted up as a contributor, here are some discussions you should take a look at:\n\n1. [Static typing and why we went with TypeScript](https://github.com/apollostack/apollo-client/issues/6) also covered in [the Medium post](https://medium.com/apollo-stack/javascript-code-quality-with-free-tools-9a6d80e29f2d#.k32z401au)\n1. [Idea for pagination handling](https://github.com/apollostack/apollo-client/issues/26)\n1. [Discussion about interaction with Redux and domain vs. client state](https://github.com/apollostack/apollo-client/issues/98)\n1. [Long conversation about different client options, before this repo existed](https://github.com/apollostack/apollo/issues/1)\n\n## Maintainers\n\n- [@benjamn](https://github.com/benjamn) (Apollo)\n- [@hwillson](https://github.com/hwillson) (Apollo)\n"}, {"repo": "/android/architecture-components-samples", "language": "Kotlin", "readme_contents": "Android Architecture Components samples\n===================================\n\nA collection of samples using the [Architecture Components](https://developer.android.com/arch):\n\n- [Room](https://developer.android.com/topic/libraries/architecture/room)\n- [Lifecycle-aware components](https://developer.android.com/topic/libraries/architecture/lifecycle)\n- [ViewModels](https://developer.android.com/topic/libraries/architecture/viewmodel)\n- [LiveData](https://developer.android.com/topic/libraries/architecture/livedata)\n- [Paging](https://developer.android.com/topic/libraries/architecture/paging/)\n- [Navigation](https://developer.android.com/topic/libraries/architecture/navigation/)\n- [WorkManager](https://developer.android.com/topic/libraries/architecture/workmanager/)\n\n### Samples\n\n* **[BasicSample](https://github.com/googlesamples/android-architecture-components/blob/master/BasicSample)** - Shows how to persist data using a SQLite database and Room. Also uses ViewModels and LiveData.\n\n* **[PersistenceContentProviderSample](https://github.com/googlesamples/android-architecture-components/blob/master/PersistenceContentProviderSample)** - Shows how to expose data via a Content Provider using Room.\n\n* **[GithubBrowserSample](https://github.com/googlesamples/android-architecture-components/blob/master/GithubBrowserSample)** - An **advanced**  sample that uses the Architecture components, Dagger and the Github API, in Kotlin.\n\n* **[BasicRxJavaSample](https://github.com/googlesamples/android-architecture-components/blob/master/BasicRxJavaSample)** - Shows how to use Room with RxJava 2. Also uses ViewModels.\n\n* **[PersistenceMigrationsSample](https://github.com/googlesamples/android-architecture-components/blob/master/PersistenceMigrationsSample)** - Shows how to implement migrations in Room.\n\n* **[BasicRxJavaKotlinSample](https://github.com/googlesamples/android-architecture-components/blob/master/BasicRxJavaSampleKotlin)** - Shows\nhow to use ViewModels and Room together with RxJava, in Kotlin.\n\n * **[PagingSample](https://github.com/googlesamples/android-architecture-components/tree/master/PagingSample)** - Shows\n  how to use the Paging library with Room, in Kotlin.\n\n * **[PagingNetworkSample](https://github.com/googlesamples/android-architecture-components/tree/master/PagingWithNetworkSample)** - Shows\n  how to use the Paging library with a backend API via Retrofit, in Kotlin.\n\n* **[NavigationBasicSample](https://github.com/googlesamples/android-architecture-components/tree/master/NavigationBasicSample)** - Shows\n  how to use Navigation to perform navigation and deep linking in Kotlin.\n\n* **[NavigationAdvancedSample](https://github.com/googlesamples/android-architecture-components/tree/master/NavigationAdvancedSample)** - Shows\n  how to handle multiple back stacks with Navigation and a BottomNavigationView.\n  \n* **[WorkManagerSample](https://github.com/googlesamples/android-architecture-components/tree/master/WorkManagerSample)** - Shows\n  how to use WorkManager to do background work, in Kotlin.\n\n\n### Reporting Issues\n\nYou can report an [Issue](https://github.com/googlesamples/android-architecture-components/issues) on the samples using this repository. If you find an issue with the Architecture Components, report it using the [Architecture Components Issue Tracker](https://issuetracker.google.com/issues/new?component=197448&template=878802)\n\nLicense\n-------\n\nCopyright 2018 The Android Open Source Project, Inc.\n\nLicensed to the Apache Software Foundation (ASF) under one or more contributor\nlicense agreements.  See the NOTICE file distributed with this work for\nadditional information regarding copyright ownership.  The ASF licenses this\nfile to you under the Apache License, Version 2.0 (the \"License\"); you may not\nuse this file except in compliance with the License.  You may obtain a copy of\nthe License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\nWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the\nLicense for the specific language governing permissions and limitations under\nthe License.\n"}, {"repo": "/Homebrew/homebrew-cask", "language": "Ruby", "readme_contents": "# Homebrew Cask\n\n_\u201cTo install, drag this icon\u2026\u201d no more!_\n\nHomebrew Cask extends [Homebrew](https://brew.sh) and brings its elegance, simplicity, and speed to the installation and management of GUI macOS applications such as Atom and Google Chrome.\n\nWe do this by providing a friendly CLI workflow for the administration of macOS applications distributed as binaries.\n\n[![Join us on https://discourse.brew.sh](https://img.shields.io/badge/Discourse-forum-blue.svg)](https://discourse.brew.sh)\n\n## Let\u2019s try it!\n\nTo start using Homebrew Cask, you just need [Homebrew](https://brew.sh/) installed.\n\n<img src=\"https://i.imgur.com/bjr8UxZ.gif\" width=\"547\" alt=\"Installing and uninstalling Atom (animated gif)\">\n\nSlower, now:\n\n```\n$ brew cask install atom\n==> Satisfying dependencies\n==> Downloading https://github.com/atom/atom/releases/download/v1.35.1/atom-mac.zip\n==> Downloading from https://github-production-release-asset-2e65be.s3.amazonaws.co\n######################################################################## 100.0%\n==> Verifying SHA-256 checksum for Cask 'atom'.\n==> Installing Cask atom\n==> Moving App 'Atom.app' to '/Applications/Atom.app'.\n==> Linking Binary 'apm' to '/usr/local/bin/apm'.\n==> Linking Binary 'atom.sh' to '/usr/local/bin/atom'.\n\ud83c\udf7a  atom was successfully installed!\n```\n\nAnd there we have it. Atom installed with one quick command: no clicking, no dragging, no dropping.\n\n## Learn More\n\n* Find basic documentation on using Homebrew Cask in [USAGE.md](USAGE.md)\n* Want to contribute a Cask? Awesome! See [CONTRIBUTING.md](CONTRIBUTING.md)\n* Want to hack on our code? Also awesome! See [hacking.md](doc/development/hacking.md)\n* More project-related details and discussion are available in the [documentation](doc)\n\n## Reporting bugs\n\n[**If you ignore this guide, your issue may be closed without review**](doc/faq/closing_issues_without_review.md).\n\nBefore reporting a bug, run `brew update-reset && brew update` and try your command again. This is a fix-all that will reset the state of all your taps, ensuring the problem isn\u2019t an outdated setup on your side.\n\nIf your issue persists, [search for it](https://github.com/Homebrew/homebrew-cask/search?type=Issues) before opening a new one. If you find an open issue and have any new information, add it in a comment. If you find a closed issue, try the solutions there.\n\nIf the issue is still not solved, see the guides for common problems:\n\n* [Examples of common errors and their solutions](doc/reporting_bugs/error_examples.md)\n* [`curl` error](doc/reporting_bugs/curl_error.md)\n* [`Permission denied` error](doc/reporting_bugs/permission_denied_error.md)\n* [`Checksum does not match` error](doc/reporting_bugs/checksum_does_not_match_error.md)\n* [`source is not there` error](doc/reporting_bugs/source_is_not_there_error.md)\n* [`wrong number of arguments` error](doc/reporting_bugs/wrong_number_of_arguments_error.md)\n* [The app can\u2019t be opened because it is from an unidentified developer](doc/faq/the_app_cant_be_opened.md)\n* [My problem isn\u2019t listed](https://github.com/Homebrew/homebrew-cask/issues/new?template=01_bug_report.md)\n\n## Requests\n\n* Cask requests will be automatically closed. If you want a cask added, [submit a pull request](https://github.com/Homebrew/homebrew-cask/blob/master/CONTRIBUTING.md#adding-a-cask).\n* For a feature request, [use this template](https://github.com/Homebrew/homebrew-cask/issues/new?template=02_feature_request.md).\n\n## Questions? Wanna chat?\n\nWe\u2019re really rather friendly! Here are the best places to talk about the project:\n\n* If none of the templates above is appropriate, [open an issue](https://github.com/Homebrew/homebrew-cask/issues/new).\n* Join us on [discourse.brew.sh (forum)](https://discourse.brew.sh)\n\n## License\nCode is under the [BSD 2 Clause (NetBSD) license](LICENSE)\n"}, {"repo": "/ujjwalkarn/DataSciencePython", "language": "Python", "readme_contents": "# Python Data Science Tutorials \n- This repo contains a curated list of Python tutorials for Data Science, NLP and Machine Learning.\n\n- [**Curated list of R tutorials for Data Science, NLP and Machine Learning**](https://github.com/ujjwalkarn/DataScienceR).\n\n- [Comprehensive topic-wise list of Machine Learning and Deep Learning tutorials, codes, articles and other resources](https://github.com/ujjwalkarn/Machine-Learning-Tutorials/blob/master/README.md).\n\n## The Python Language\n- [Python 3 in one picture](https://fossbytes.com/wp-content/uploads/2015/09/python-3-in-one-pic.png)\n- [**Awesome Python**](https://github.com/vinta/awesome-python)\n- [**Jargon from the functional programming world in simple terms!**](https://github.com/hemanth/functional-programming-jargon)\n- [**Dive Into Python**](http://www.diveintopython.net/index.html)\n- [Learn Python Wiki on Reddit](https://www.reddit.com/r/learnpython/wiki/index)\n- [Learn 90% of Python in 90 Minutes](https://www.slideshare.net/MattHarrison4/learn-90)\n- [Highest Voted Python Questions](http://stackoverflow.com/questions/tagged/python?sort=votes&pageSize=50)\n- [Python Basic Concepts](https://github.com/gumption/Python_for_Data_Science/blob/master/3_Python_Basic_Concepts.ipynb)\n- [Quick Reference to Python](http://www.dataschool.io/python-quick-reference/)\n- [The Elements of Python Style](https://github.com/amontalenti/elements-of-python-style)\n- [**What does the yield keyword do in Python?**](http://stackoverflow.com/questions/231767/what-does-the-yield-keyword-do-in-python)\n- [Parsing values from a JSON file in Python](http://stackoverflow.com/questions/2835559/parsing-values-from-a-json-file-in-python)\n- [**Python Quora FAQs**](https://www.quora.com/topic/Python-programming-language-1)\n- [time-complexity of various operations - list/dict - in current CPython](https://wiki.python.org/moin/TimeComplexity)\n- Scripting in Python\n    - [Python Scripting Tutorial](http://www.dreamsyssoft.com/python-scripting-tutorial/intro-tutorial.php)\n    - [Scripting with Python](https://www.schrodinger.com//AcrobatFile.php?type=supportdocs&type2=&ident=404)\n    - [**Can I use Python as a bash replacement?**](http://stackoverflow.com/questions/209470/can-i-use-python-as-a-bash-replacement)\n\n## Useful Online Courses\n- [Learn Python (Codecademy)](https://www.codecademy.com/learn/python#)\n- [Free Interactive Course: Intro to Python for Data Science (DataCamp)](https://www.datacamp.com/courses/intro-to-python-for-data-science)\n- [Introduction to Computer Science and Programming Using Python (MIT)](https://www.edx.org/course/introduction-computer-science-mitx-6-00-1x-11)\n- [Python for Everybody](https://www.coursera.org/learn/python)\n- [Python Programming Essentials](https://www.coursera.org/learn/python-programming)\n\n## Data Science with Python\n- [**Data Science IPython Notebooks**](https://github.com/donnemartin/data-science-ipython-notebooks)\n- [Awesome Python - Data Analysis](https://github.com/vinta/awesome-python#science-and-data-analysis)\n- Statistics\n  - [Statistics and Data Science](https://github.com/svaksha/pythonidae/blob/master/Statistics.md)\n- [**An Introduction to Scientific Python (and a Bit of the Maths Behind It) \u2013 NumPy**](http://www.kdnuggets.com/2016/06/intro-scientific-python-numpy.html)\n- [Data Analysis and IPython Notebooks](https://github.com/kirang89/pycrumbs#data-analysis)\n- [Python for Data Science: Basic Concepts](https://github.com/gumption/Python_for_Data_Science/blob/master/2_Data_Science_Basic_Concepts.ipynb)\n- [Pycon India 2015 Notes](http://www.analyticsvidhya.com/blog/2015/10/notes-impressions-experience-excitement-pycon-india-2015/)\n- [**5 important Python Data Science advancements of 2015**](https://medium.com/@elgehelge/the-5-most-important-python-data-science-advancements-of-2015-a136482da89b#.sp2c1la9z)\n- [Data Exploration with Numpy cheat sheet](http://www.analyticsvidhya.com/blog/2015/07/11-steps-perform-data-analysis-pandas-python)\n- [Querying Craiglist with Python](http://chrisholdgraf.com/querying-craigslist-with-python/?imm_mid=0d8940&cmp=em-data-na-na-newsltr_20150916)\n- [**An introduction to Numpy and Scipy**](http://www.engr.ucsb.edu/~shell/che210d/numpy.pdf)\n- [Create NBA Shot Charts](http://savvastjortjoglou.com/nba-shot-sharts.html)\n- [PythoR- Python meets R](http://nipunbatra.github.io/2016/01/pythor/)\n- [**How do I learn data analysis with Python?**](https://www.quora.com/How-do-I-learn-data-analysis-with-Python?redirected_qid=2464720)\n- [What are some interesting things to do with Python?](https://www.quora.com/Python-programming-language-What-are-some-interesting-things-to-do-with-Python?redirected_qid=2324227)\n- [**Which is better for data analysis: R or Python?**](https://www.quora.com/Which-is-better-for-data-analysis-R-or-Python)\n- [**Web scraping in Python**](https://github.com/ujjwalkarn/Web-Scraping)\n- [The Guide to Learning Python for Data Science](http://www.datasciencecentral.com/profiles/blogs/the-guide-to-learning-python-for-data-science-2)\n- [Python For Data Science - A Cheat Sheet For Beginners](https://www.datacamp.com/community/tutorials/python-data-science-cheat-sheet-basics)\n- [Top voted Python data science questions](http://datascience.stackexchange.com/questions/tagged/python)\n- [Awesome Python - Data Visualization](https://github.com/vinta/awesome-python#data-visualization)\n- [Awesome Python - Map Reduce](https://github.com/vinta/awesome-python#mapreduce)\n\n## Pandas Library in Python\n- [Intro to pandas data structures](http://www.gregreda.com/2013/10/26/intro-to-pandas-data-structures/)\n- [Useful Pandas Cheatsheet](https://github.com/pandas-dev/pandas/blob/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf)\n- [An Introduction to Scientific Python \u2013 Pandas](http://www.datadependence.com/2016/05/scientific-python-pandas/)\n- [10 minutes to Pandas](http://pandas.pydata.org/pandas-docs/stable/10min.html)\n- [Useful Pandas Snippets](http://www.swegler.com/becky/blog/2014/08/06/useful-pandas-snippets/)\n- [Timeseries analysis using Pandas](http://nbviewer.jupyter.org/github/twiecki/financial-analysis-python-tutorial/blob/master/1.%20Pandas%20Basics.ipynb)\n- [Pandas Exercises - Practice your Pandas skills](https://github.com/guipsamora/pandas_exercises)\n- [Grouping in Pandas](http://blog.yhat.com/posts/grouping-pandas.html)\n- [**\u201cLarge data\u201d work flows using pandas**](http://stackoverflow.com/questions/14262433/large-data-work-flows-using-pandas)\n- [Easier data analysis with pandas (video series)](http://www.dataschool.io/easier-data-analysis-with-pandas/)\n- [Pandas Basics Cheat Sheet](https://www.datacamp.com/community/blog/python-pandas-cheat-sheet)\n- Quick Operations on a Pandas DataFrame\n    - [Renaming Columns in Pandas](http://stackoverflow.com/questions/11346283/renaming-columns-in-pandas) ([video](https://www.youtube.com/watch?v=0uBirYFhizE&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=5))\n    - [Deleting Columns from pandas DataFrame](http://stackoverflow.com/questions/13411544/delete-column-from-pandas-dataframe) ([video](https://www.youtube.com/watch?v=gnUKkS964WQ&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=6))\n    - [Adding new Column to existing DataFrame](http://stackoverflow.com/questions/12555323/adding-new-column-to-existing-dataframe-in-python-pandas)\n    - [Add one Row in a pandas.DataFrame](http://stackoverflow.com/questions/10715965/add-one-row-in-a-pandas-dataframe)\n    - [Changing the order of DataFrame Columns](http://stackoverflow.com/questions/13148429/how-to-change-the-order-of-dataframe-columns)\n    - [Changing data type of Columns](http://stackoverflow.com/questions/15891038/pandas-change-data-type-of-columns) ([video](https://www.youtube.com/watch?v=V0AWyzVMf54&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=13))\n    - [Getting a list of the column headers from a DataFrame](http://stackoverflow.com/questions/19482970/get-list-from-pandas-dataframe-column-headers)\n    - [Converting list of dictionaries to Dataframe](http://stackoverflow.com/questions/20638006/convert-list-of-dictionaries-to-dataframe)\n    - [Getting row count of pandas DataFrame](http://stackoverflow.com/questions/15943769/how-to-get-row-count-of-pandas-dataframe)\n    - [Most efficient way to loop through DataFrames](http://stackoverflow.com/questions/7837722/what-is-the-most-efficient-way-to-loop-through-dataframes-with-pandas)\n    - [Deleting DataFrame row based on column value](http://stackoverflow.com/questions/18172851/deleting-dataframe-row-in-pandas-based-on-column-value)\n    - [Dropping a list of rows from Pandas DataFrame](http://stackoverflow.com/questions/14661701/how-to-drop-a-list-of-rows-from-pandas-dataframe)\n    - [Sorting a DataFrame or a single column](https://www.youtube.com/watch?v=zY4doF6xSxY&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=7)\n    - [Filtering DataFrame rows by column value](https://www.youtube.com/watch?v=2AFGPdNn4FM&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=8)\n    - [Filtering DataFrame rows using multiple criteria](https://www.youtube.com/watch?v=YPItfQ87qjM&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=9)\n    - [Dropping all non-numeric columns from a DataFrame](https://youtu.be/B-r9VuK80dk?t=4m31s)\n    - [Counting and removing missing values](https://www.youtube.com/watch?v=fCMrO_VzeL8&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=16)\n    - [Selecting multiple rows and columns from a DataFrame](https://www.youtube.com/watch?v=xvpNA7bC8cs&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=19)\n    - [Reducing the size of a DataFrame](https://www.youtube.com/watch?v=wDYDYGyN_cw&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=21)\n\n## Machine Learning with Python\n- [AI, ML Related List](https://github.com/svaksha/pythonidae/blob/master/AI.md)\n- [Data Normalization in Python](http://blog.yhat.com/posts/data-normalization-in-python.html)\n- [**Python Machine Learning Book**](https://github.com/rasbt/python-machine-learning-book)\n- [Table of Contents and Code Notebooks](https://github.com/rasbt/python-machine-learning-book/blob/master/README.md#table-of-contents-and-code-notebooks)\n- [Machine Learning with scikit learn](http://www.dataschool.io/machine-learning-with-scikit-learn/)\n- [Machine Learning Algorithms Cheatsheet](http://www.analyticsvidhya.com/blog/2015/09/full-cheatsheet-machine-learning-algorithms/)\n- [**How to compute precision, recall, accuracy and f1-score for the multiclass case with scikit learn?**](http://stackoverflow.com/questions/31421413/how-to-compute-precision-recall-accuracy-and-f1-score-for-the-multiclass-case)\n- [One Hot Encoding for Machine learning in Python](http://stackoverflow.com/questions/17469835/one-hot-encoding-for-machine-learning)\n- [**Building a (semi) Autonomous Drone with Python**](http://blog.yhat.com/posts/autonomous-droning-with-python.html)\n- [Awesome Python - Machine Learning](https://github.com/vinta/awesome-python#machine-learning)\n- Computer Vision\n  - [Awesome Python - Computer Vision](https://github.com/vinta/awesome-python#computer-vision)\n\n## Scikit Learn\n- [scikit learn on Wikipedia](https://en.wikipedia.org/wiki/Scikit-learn)\n- [**Introduction to machine learning with scikit-learn**](https://github.com/justmarkham/scikit-learn-videos), [**Videos!**](http://blog.kaggle.com/author/kevin-markham/)\n- [**A Gentle Introduction to Scikit-Learn: A Python Machine Learning Library**](http://machinelearningmastery.com/a-gentle-introduction-to-scikit-learn-a-python-machine-learning-library/)\n- [**PyData Seattle 2015 Scikit-learn Tutorial**](https://github.com/jakevdp/sklearn_pydata2015), [sklearn_scipy2013](https://github.com/jakevdp/sklearn_scipy2013)\n- [SKLEARN BENCHMARKS: A centralized repository to report scikit-learn model performance across a variety of parameter settings and data sets](https://github.com/rhiever/sklearn-benchmarks), [Report results of sklearn benchmarks at openml.org](http://www.openml.org/)\n- [How to get most informative features for scikit-learn classifiers?](http://stackoverflow.com/questions/11116697/how-to-get-most-informative-features-for-scikit-learn-classifiers)\n- [**Code example to predict prices of Airbnb vacation rentals, using scikit-learn on Spark**](https://github.com/mapr-demos/spark-sklearn-airbnb-predict)\n- [**Machine Learning with scikit learn tutorial**](http://amueller.github.io/sklearn_tutorial/)\n- [Parallel and Large Scale Machine Learning with scikit-learn](https://speakerdeck.com/ogrisel/parallel-and-large-scale-machine-learning-with-scikit-learn), [Meetup](http://datasciencelondon.org/machine-learning-python-scikit-learn-ipython-dsldn-data-science-london-kaggle/)\n- [Saving classifier to disk in scikit-learn](http://stackoverflow.com/questions/10592605/save-classifier-to-disk-in-scikit-learn)\n\n\n## Linear Regression in Python\n- [Linear Regression in Python](http://nbviewer.ipython.org/github/justmarkham/DAT4/blob/master/notebooks/08_linear_regression.ipynb), [Blog Post](http://www.dataschool.io/linear-regression-in-python/)\n- [Linear Regression using Scikit Learn](http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LinearRegression.html)\n- [A friendly introduction to linear regression (using Python)](http://www.dataschool.io/linear-regression-in-python/)\n- [Linear Regression Example in Python](http://scipy-cookbook.readthedocs.io/items/LinearRegression.html)\n- [Regression analysis using Python StatsModels package](http://www.turingfinance.com/regression-analysis-using-python-statsmodels-and-quandl/)\n- [Run an OLS regression with Pandas Data Frame](http://stackoverflow.com/questions/19991445/run-an-ols-regression-with-pandas-data-frame)\n\n## Logistic Regression in Python\n- [Logistic Regression with scikit learn](http://www.dataschool.io/logistic-regression-in-python-using-scikit-learn/)\n- [Logistic Regression in Python](http://blog.yhat.com/posts/logistic-regression-and-python.html)\n- [Implementing the softmax function in Python](http://stackoverflow.com/questions/34968722/softmax-function-python)\n- [**What is the inverse of regularization strength in Logistic Regression? How should it affect my code?**](http://stackoverflow.com/questions/22851316/what-is-the-inverse-of-regularization-strength-in-logistic-regression-how-shoul)\n- [The Yhat Blog: Logistic Regression in Python](http://blog.yhat.com/posts/logistic-regression-and-python.html)\n- [Example of logistic regression in Python using scikit-learn](http://www.dataschool.io/logistic-regression-in-python-using-scikit-learn/)\n- [TUTORIAL ON LOGISTIC REGRESSION AND OPTIMIZATION IN PYTHON](https://learningwithdata.wordpress.com/2015/04/30/tutorial-on-logistic-regression-and-optimization-in-python/)\n- [Using Logistic Regression in Python for Data Science](http://www.dummies.com/how-to/content/using-logistic-regression-in-python-for-data-scien.html)\n\n## k Nearest Neighbours in Python\n- [A good tutorial on implementing K Nearest Neighbors using scikit learn](http://scikit-learn.org/stable/modules/neighbors.html)\n- [**Is it possible to specify your own distance function using scikit-learn K-Means Clustering?**](http://stackoverflow.com/questions/5529625/is-it-possible-to-specify-your-own-distance-function-using-scikit-learn-k-means)\n- [Tutorial To Implement k-Nearest Neighbors in Python From Scratch](http://machinelearningmastery.com/tutorial-to-implement-k-nearest-neighbors-in-python-from-scratch/)\n- [Implementing your own k-nearest neighbour algorithm using Python](https://blog.cambridgecoding.com/2016/01/16/machine-learning-under-the-hood-writing-your-own-k-nearest-neighbour-algorithm/)\n- [knn Python implementation on StackOverflow](http://stackoverflow.com/questions/5565935/k-nearest-neighbour-in-python)\n- [kNN with big sparse matrices in Python](http://stackoverflow.com/questions/20333092/knn-with-big-sparse-matrices-in-python)\n- [Sklearn kNN usage with a user defined metric](http://stackoverflow.com/questions/21052509/sklearn-knn-usage-with-a-user-defined-metric)\n\n\n## Neural Networks in Python\n- [Implementing a Neural Network from scratch in Python](http://www.wildml.com/2015/09/implementing-a-neural-network-from-scratch/), [Code](https://github.com/dennybritz/nn-from-scratch)\n- [A Neural Network in 11 lines of Python](http://iamtrask.github.io/2015/07/12/basic-python-network/)\n- [Speeding up your Neural Network with Theano and the gpu](http://www.wildml.com/2015/09/speeding-up-your-neural-network-with-theano-and-the-gpu/), [Code](https://github.com/dennybritz/nn-theano)\n- [What is the best neural network library for Python?](https://www.quora.com/What-is-the-best-neural-network-library-for-Python)\n- [Recurrent Neural Net Tutorial in Python Part 1](http://www.wildml.com/2015/09/recurrent-neural-networks-tutorial-part-1-introduction-to-rnns/), [Part 2](http://www.wildml.com/2015/09/recurrent-neural-networks-tutorial-part-2-implementing-a-language-model-rnn-with-python-numpy-and-theano/), [Code](https://github.com/dennybritz/rnn-tutorial-rnnlm/)\n- [PyBrain: modular Machine Learning Library for Python](http://pybrain.org/)\n- [Neural Networks Tutorial \u2013 a Pathway to Deep Learning](http://www.adventuresinmachinelearning.com/neural-networks-tutorial/)\n\n\n## Decision Trees in Python\n- [How to extract the decision rules from scikit-learn decision-tree?](http://stackoverflow.com/questions/20224526/how-to-extract-the-decision-rules-from-scikit-learn-decision-tree)\n- [**How do I find which attributes my tree splits on, when using scikit-learn?**](http://stackoverflow.com/questions/20156951/how-do-i-find-which-attributes-my-tree-splits-on-when-using-scikit-learn)\n- [Quora: What is a good Python library for decision trees?](https://www.quora.com/What-is-a-good-Python-library-for-decision-trees), [StackOverflow](http://stackoverflow.com/questions/3127922/what-is-a-good-python-library-for-decision-trees) \n- [Building Decision Trees in Python](http://www.onlamp.com/pub/a/python/2006/02/09/ai_decision_trees.html?page=1)\n- [Pure Python Decision Trees](http://kldavenport.com/pure-python-decision-trees/)\n- [Building a decision tree from scratch in Python - a beginner's tutorial](http://www.patricklamle.com/Tutorials/Decision%20tree%20python/tuto_decision%20tree.html)\n- [Using Python to Build and Use a Simple Decision Tree Classifier](https://github.com/gumption/Python_for_Data_Science/blob/master/4_Python_Simple_Decision_Tree.ipynb)\n- [Decision trees in python with scikit-learn and pandas](http://chrisstrelioff.ws/sandbox/2015/06/08/decision_trees_in_python_with_scikit_learn_and_pandas.html)\n- [Code for simple decision tree in Python](https://github.com/gumption/Python_for_Data_Science/blob/master/simple_decision_tree.py)\n- [Lesson notebook: Regression and Classification Trees](http://nbviewer.jupyter.org/github/justmarkham/DAT8/blob/master/notebooks/17_decision_trees.ipynb)\n- [Discover structure behind data with decision trees](http://vooban.com/en/tips-articles-geek-stuff/discover-structure-behind-data-with-decision-trees/)\n\n## Random Forest with Python\n- [Getting Started with Random Forests: Titanic Competition on Kaggle](https://www.kaggle.com/c/titanic/details/getting-started-with-random-forests), [Python sample code](https://www.kaggle.com/c/digit-recognizer/forums/t/2299/getting-started-python-sample-code-random-forest)\n- [RandomForestClassifier vs ExtraTreesClassifier in scikit learn](http://stackoverflow.com/questions/22409855/randomforestclassifier-vs-extratreesclassifier-in-scikit-learn)\n- [Powerful Guide to learn Random Forest](http://www.analyticsvidhya.com/blog/2015/09/random-forest-algorithm-multiple-challenges/)\n- [How are Feature Importances in RandomForestClassifier determined?](http://stackoverflow.com/questions/15810339/how-are-feature-importances-in-randomforestclassifier-determined)\n- [Random forest interpretation with scikit-learn](http://blog.datadive.net/random-forest-interpretation-with-scikit-learn/)\n- [Random Forests in Python Tutorial](http://blog.yhat.com/posts/random-forests-in-python.html)\n- [Unbalanced classification using RandomForestClassifier in sklearn](http://stackoverflow.com/questions/20082674/unbalanced-classification-using-randomforestclassifier-in-sklearn)\n- [Random Forest with categorical features in sklearn](http://stackoverflow.com/questions/24715230/random-forest-with-categorical-features-in-sklearn)\n- [How to output RandomForest Classifier from python?](http://stackoverflow.com/questions/23000693/how-to-output-randomforest-classifier-from-python)\n- [Lesson notebook: Ensembling, Bagging, and Random Forests](http://nbviewer.jupyter.org/github/justmarkham/DAT8/blob/master/notebooks/18_ensembling.ipynb)\n\n## Support Vector Machine in Python\n- [Fastest SVM implementation usable in Python](http://stackoverflow.com/questions/9299346/fastest-svm-implementation-usable-in-python)\n- [An example using python bindings for SVM library, LIBSVM](http://stackoverflow.com/questions/4214868/an-example-using-python-bindings-for-svm-library-libsvm)\n- [What is the best SVM library usable from Python?](https://www.quora.com/What-is-the-best-SVM-library-usable-from-Python)\n- [How does sklearn.svm.svc's function predict_proba() work internally?](http://stackoverflow.com/questions/15111408/how-does-sklearn-svm-svcs-function-predict-proba-work-internally)\n- [Support vector machine in Python using libsvm example of features](http://stackoverflow.com/questions/30991592/support-vector-machine-in-python-using-libsvm-example-of-features)\n- [Linear SVC Machine learning SVM example with Python](https://pythonprogramming.net/linear-svc-example-scikit-learn-svm-python/)\n- [Understanding Support Vector Machine algorithm from examples (along with code)](http://www.analyticsvidhya.com/blog/2015/10/understaing-support-vector-machine-example-code/)\n\n## NLP / Text Mining in Python\n- [**NLP with Python ORiley Book**](http://www.nltk.org/book_1ed/), [Python 3](http://www.nltk.org/book/)\n- [Awesome Python - NLP](https://github.com/vinta/awesome-python#natural-language-processing)\n- [Awesome Python - Text Processing](https://github.com/vinta/awesome-python#text-processing)\n- [Text Analytics : Intro and Tokenization](http://a4analytics.blogspot.sg/2015/03/text-mining-post-1.html)\n- [NLTK BOOK](http://www.nltk.org/book/ch01.html)\n- [Elegant N-gram Generation in Python](http://locallyoptimal.com/blog/2013/01/20/elegant-n-gram-generation-in-python/)\n- [**Computing N Grams using Python**](http://stackoverflow.com/questions/13423919/computing-n-grams-using-python)\n- [N-grams: Explanation + 2 applications](http://stackoverflow.com/questions/1032288/n-grams-explanation-2-applications)\n- [NLP Tutorial with Python](http://www.datasciencecentral.com/profiles/blogs/python-nlp-tools)\n\n## Sentiment Analysis with Python\n- [A Comprehensive Guide to Sentiment Analysis](https://monkeylearn.com/sentiment-analysis/)\n- [Twitter-Sentiment-Analysis](https://github.com/ujjwalkarn/Twitter-Sentiment-Analysis)\n- [Basic Sentiment Analysis with Python](http://fjavieralba.com/basic-sentiment-analysis-with-python.html)\n- [What is the best way to do Sentiment Analysis with Python?](https://www.quora.com/What-is-the-best-way-to-do-Sentiment-Analysis-with-Python-1)\n- [How to Calculate Twitter Sentiment Using AlchemyAPI with Python](http://www.alchemyapi.com/developers/getting-started-guide/twitter-sentiment-analysis)\n- [Second Try: Sentiment Analysis in Python](http://andybromberg.com/sentiment-analysis-python/)\n- [Sentiment Analysis with Python NLTK Text Classification](http://text-processing.com/demo/sentiment/)\n- Codes and Explanation\n    - [**Sentiment Analysis with bag-of-words**](http://ataspinar.com/2016/01/21/sentiment-analysis-with-bag-of-words/)\n    - [**Sentiment Analysis with Naive Bayes**](http://ataspinar.com/2016/02/15/sentiment-analysis-with-the-naive-bayes-classifier/)\n\n## Pickle: convert a python object into a character stream\n- [Python serialization - Why pickle?](http://stackoverflow.com/questions/8968884/python-serialization-why-pickle)\n- [**Serializing Python Objects**](http://www.diveinto.org/python3/serializing.html), [**Binary Files**](http://www.diveinto.org/python3/files.html#binary)\n- [What is Pickle in python ?](https://pythontips.com/2013/08/02/what-is-pickle-in-python/)\n- [How to cPickle dump and load separate dictionaries to the same file?](http://stackoverflow.com/questions/11641493/how-to-cpickle-dump-and-load-separate-dictionaries-to-the-same-file)\n- [**Understanding Pickling in Python**](http://stackoverflow.com/questions/7501947/understanding-pickling-in-python)\n\n## AutoML\n- [TPOT: A Python tool for automating data science](http://www.randalolson.com/2016/05/08/tpot-a-python-tool-for-automating-data-science/), [GitHub repo](https://github.com/rhiever/tpot)\n\n## Regex Related\n- [RegExr](http://regexr.com/)\n- [Regex101](https://regex101.com/)\n- [Pythex](http://pythex.org/)\n- [How to use Regular Expressions (Regex) in Microsoft Excel both in-cell and loops](http://stackoverflow.com/questions/22542834/how-to-use-regular-expressions-regex-in-microsoft-excel-both-in-cell-and-loops)\n- [Advanced Filters: Excel\u2019s Amazing Alternative To Regex](http://searchengineland.com/advanced-filters-excels-amazing-alternative-to-regex-143680)\n\n## Shell Scripting\n- [**Calling an external command in Python**](http://stackoverflow.com/questions/89228/calling-an-external-command-in-python)\n- [**Running shell command from Python and capturing the output**](http://stackoverflow.com/questions/4760215/running-shell-command-from-python-and-capturing-the-output)\n- [**Can I use Python as a bash replacement?**](http://stackoverflow.com/questions/209470/can-i-use-python-as-a-bash-replacement)\n- [Python Scripts as a Replacement for Bash Utility Scripts](http://www.linuxjournal.com/content/python-scripts-replacement-bash-utility-scripts)\n- [How to Write a Shell Script using Bash Shell in Ubuntu](https://www.youtube.com/watch?v=He-5BpUGSag)\n- Red Hat Magazine | Python for Bash scripters: A well-kept secret\n- [Embed bash in python](http://stackoverflow.com/questions/2651874/embed-bash-in-python)\n- [Bash2py: A Bash to Python Translator](https://cs.uwaterloo.ca/~ijdavis/bash2py-final.pdf)\n- [Beginners/BashScripting](https://help.ubuntu.com/community/Beginners/BashScripting)\n- [The Beginner\u2019s Guide to Shell Scripting: The Basics](http://www.howtogeek.com/67469/the-beginners-guide-to-shell-scripting-the-basics/)\n- [Linux Shell Scripting Tutorial v1.05r3 A Beginner's handbook](http://www.freeos.com/guides/lsst/)\n\n## Other good lists\n- [pycrumbs - Bits and bytes of Python from the Internet](https://github.com/kirang89/pycrumbs)\n- [python github projects - Collect and classify python projects on Github](https://github.com/checkcheckzz/python-github-projects)\n- [python reference - Useful functions, tutorials, and other Python-related things](https://github.com/rasbt/python_reference)\n- [pythonidae - Curated decibans of scientific programming resources in Python](https://github.com/svaksha/pythonidae)\n"}, {"repo": "/obsproject/obs-studio", "language": "C", "readme_contents": "OBS Studio <https://obsproject.com>\n===================================\n\n.. image:: https://travis-ci.org/obsproject/obs-studio.svg?branch=master\n   :alt: OBS Studio Build Status - Travis CI\n   :target: https://travis-ci.org/obsproject/obs-studio\n\n.. image:: https://ci.appveyor.com/api/projects/status/github/obsproject/obs-studio?branch=master&svg=true\n   :alt: OBS Studio Build Status - AppVeyor CI\n   :target: https://ci.appveyor.com/project/jp9000/obs-studio/branch/master\n\n.. image:: https://dev.azure.com/obsjim/obsjim/_apis/build/status/obsproject.obs-studio?branchName=master\n  :alt: OBS Studio Build Status - Azure Pipelines\n  :target: https://dev.azure.com/obsjim/obsjim/_build/latest?definitionId=1&branchName=master\n\n.. image:: https://discordapp.com/api/guilds/348973006581923840/widget.png?style=shield\n   :alt: OBS Studio Discord Server\n   :target: https://obsproject.com/discord\n\n.. image:: https://d322cqt584bo4o.cloudfront.net/obs-studio/localized.svg\n   :alt: OBS Studio Translation Project Progress\n   :target: https://crowdin.com/project/obs-studio\n\nWhat is OBS Studio?\n-------------------\n\n  OBS Studio is software designed for capturing, compositing, encoding,\n  recording, and streaming video content, efficiently.\n\n  It's distributed under the GNU General Public License v2 (or any later\n  version) - see the accompanying COPYING file for more details.\n\nQuick Links\n-----------\n\n - Website: https://obsproject.com\n\n - Help/Documentation/Guides: https://github.com/obsproject/obs-studio/wiki\n\n - Forums: https://obsproject.com/forum/\n\n - Build Instructions: https://github.com/obsproject/obs-studio/wiki/Install-Instructions\n\n - Developer/API Documentation: https://obsproject.com/docs\n\n - Donating/backing/sponsoring: https://obsproject.com/contribute\n\n - Bug Tracker: https://obsproject.com/mantis/\n\n   (Note: The bug tracker is linked to forum accounts.  To use the bug\n   tracker, log in to a forum account)\n\nContributing\n------------\n\n - If you would like to help fund or sponsor the project, you can do so\n   via `Patreon <https://www.patreon.com/obsproject>`_, `OpenCollective\n   <https://opencollective.com/obsproject>`_, or `PayPal\n   <https://www.paypal.me/obsproject>`_.  See our `contribute page\n   <https://obsproject.com/contribute>`_ for more information.\n\n - If you wish to contribute code to the project, please make sure to\n   read the coding and commit guidelines:\n   https://github.com/obsproject/obs-studio/blob/master/CONTRIBUTING.rst\n\n - Developer/API documentation can be found here:\n   https://obsproject.com/docs\n\n - If you wish to contribute translations, do not submit pull requests.\n   Instead, please use Crowdin.  For more information read this thread:\n   https://obsproject.com/forum/threads/how-to-contribute-translations-for-obs.16327/\n\n - Other ways to contribute are by helping people out with support on\n   our forums or in our community chat.  Please limit support to topics\n   you fully understand -- bad advice is worse than no advice.  When it\n   comes to something that you don't fully know or understand, please\n   defer to the official help or official channels.\n"}, {"repo": "/StefH/System.Linq.Dynamic.Core", "language": "HTML", "readme_contents": "# System.Linq.Dynamic.Core\nThis is a **.NET Core / Standard port** of the Microsoft assembly for the .Net 4.0 Dynamic language functionality.\n\n# Overview\nWith this library it's possible to write Dynamic LINQ queries (string based) on an `IQueryable`:\n``` c#\nvar query = db.Customers\n    .Where(\"City == @0 and Orders.Count >= @1\", \"London\", 10)\n    .OrderBy(\"CompanyName\")\n    .Select(\"new(CompanyName as Name, Phone)\");\n```\n\n# How to use\nThere are several documentation resources:\n- [Wiki][doc-wiki] : an overview from the basic functionality  (correctness ~ 80%)\n- [API Documentation][doc-api] : a low-level API description website with some code samples\n- DynamicLinqWebDocs (TODO)\n\n# Info\n| | |\n| --- | --- |\n| ***Project*** | &nbsp; |\n| &nbsp;&nbsp;**Chat** | [![Gitter](https://img.shields.io/gitter/room/system-linq-dynamic-core/Lobby.svg)](https://gitter.im/system-linq-dynamic-core/Lobby) |\n| &nbsp;&nbsp;**Issues** | [![GitHub issues](https://img.shields.io/github/issues/StefH/System.Linq.Dynamic.Core.svg)](https://github.com/StefH/System.Linq.Dynamic.Core/issues) |\n| | |\n| ***Quality*** | &nbsp; |\n| &nbsp;&nbsp;**Build Azure** | [![Build Status Azure](https://stef.visualstudio.com/System.Linq.Dynamic.Core/_apis/build/status/StefH.System.Linq.Dynamic.Core)](https://stef.visualstudio.com/System.Linq.Dynamic.Core/_build/latest?definitionId=12) |\n| &nbsp;&nbsp;**CodeFactor** | [![CodeFactor](https://www.codefactor.io/repository/github/stefh/system.linq.dynamic.core/badge)](https://www.codefactor.io/repository/github/stefh/system.linq.dynamic.core)\n| &nbsp;&nbsp;**Sonar Quality Gate** | [![Sonar Quality Gate](https://sonarcloud.io/api/project_badges/measure?project=system.linq.dynamic.core&metric=alert_status)](https://sonarcloud.io/project/issues?id=system.linq.dynamic.core) |\n| &nbsp;&nbsp;**Sonar Bugs** | [![Sonar Bugs](https://sonarcloud.io/api/project_badges/measure?project=system.linq.dynamic.core&metric=bugs)](https://sonarcloud.io/project/issues?id=system.linq.dynamic.core&resolved=false&types=BUG) |\n| &nbsp;&nbsp;**Sonar Code Smells** | [![Sonar Code Smells](https://sonarcloud.io/api/project_badges/measure?project=system.linq.dynamic.core&metric=code_smells)](https://sonarcloud.io/project/issues?id=system.linq.dynamic.core&resolved=false&types=CODE_SMELL) |\n| &nbsp;&nbsp;**Sonar Coverage** | [![Sonar Coverage](https://sonarcloud.io/api/project_badges/measure?project=system.linq.dynamic.core&metric=coverage)](https://sonarcloud.io/component_measures?id=system.linq.dynamic.core&metric=coverage) |\n| &nbsp;&nbsp;**Codecov** | [![codecov](https://codecov.io/gh/StefH/System.Linq.Dynamic.Core/branch/master/graph/badge.svg)](https://codecov.io/gh/StefH/System.Linq.Dynamic.Core) |\n| &nbsp;&nbsp;**Coveralls** | [![Coverage Status](https://coveralls.io/repos/github/StefH/System.Linq.Dynamic.Core/badge.svg?branch=master)](https://coveralls.io/github/StefH/System.Linq.Dynamic.Core?branch=master) |\n| |\n| ***Nuget*** | &nbsp; |\n| &nbsp;&nbsp;**System.Linq.Dynamic.Core** | [![NuGet](https://buildstats.info/nuget/System.Linq.Dynamic.Core)](https://www.nuget.org/packages/System.Linq.Dynamic.Core) |\n| &nbsp;&nbsp;**EntityFramework.DynamicLinq** | [![NuGet](https://buildstats.info/nuget/EntityFramework.DynamicLinq)](https://www.nuget.org/packages/EntityFramework.DynamicLinq) |\n| &nbsp;&nbsp;**Microsoft.EntityFrameworkCore.DynamicLinq** | [![NuGet](https://buildstats.info/nuget/Microsoft.EntityFrameworkCore.DynamicLinq)](https://www.nuget.org/packages/Microsoft.EntityFrameworkCore.DynamicLinq) |\n| &nbsp;&nbsp;**Z.EntityFramework.Classic.DynamicLinq** | [![NuGet](https://buildstats.info/nuget/Z.EntityFramework.Classic.DynamicLinq)](https://www.nuget.org/packages/Z.EntityFramework.Classic.DynamicLinq) |\n| ***MyGet (previews)*** | &nbsp; |\n| &nbsp;&nbsp;**System.Linq.Dynamic.Core** | [![MyGet](https://buildstats.info/myget/system-linq-dynamic-core/System.Linq.Dynamic.Core)](https://www.myget.org/feed/system-linq-dynamic-core/package/nuget/System.Linq.Dynamic.Core) |\n| &nbsp;&nbsp;**EntityFramework.DynamicLinq** | [![MyGet](https://buildstats.info/myget/system-linq-dynamic-core/EntityFramework.DynamicLinq)](https://www.myget.org/feed/system-linq-dynamic-core/package/nuget/EntityFramework.DynamicLinq) |\n| &nbsp;&nbsp;**Microsoft.EntityFrameworkCore.DynamicLinq** | [![MyGet](https://buildstats.info/myget/system-linq-dynamic-core/Microsoft.EntityFrameworkCore.DynamicLinq)](https://www.myget.org/feed/system-linq-dynamic-core/package/nuget/Microsoft.EntityFrameworkCore.DynamicLinq) |\n| &nbsp;&nbsp;**Z.EntityFramework.Classic.DynamicLinq** | [![MyGet](https://buildstats.info/myget/system-linq-dynamic-core/Z.EntityFramework.Classic.DynamicLinq)](https://www.myget.org/feed/system-linq-dynamic-core/package/nuget/Z.EntityFramework.Classic.DynamicLinq) |\n\n# Development Details\n\n## Frameworks\nThe following frameworks are supported:\n- net35, net40, net45, net46 and up\n- netstandard1.3 & netstandard2.0\n- uap10.0 (UAP 10.0.14393.0)\n\n## Fork details\nThis fork takes the basic library to a new level. Contains XML Documentation and examples on how to use it. Also adds unit testing to help ensure that it works properly.\n\nSome background:\nI forked from https://github.com/NArnott/System.Linq.Dynamic and added some more functionality there.<br>My fork is still visible on github [https://github.com/StefH/System.Linq.Dynamic], however I decided to start a new project + nuget to avoid confusion and create the project according to the new VS2017 + .NET Core rules / standards.\n\nHowever, currently there are multiple nuget packages and projects available:\n\n| Project | NuGet | Author | Comment |\n| ------- | ----- | ------ | ------- |\n| [kahanu/System.Linq.Dynamic][2a] | [System.Linq.Dynamic][2b] | @kahanu | - |\n| [kavun/System.Linq.Dynamic.3.5][3a] | [System.Linq.Dynamic.3.5/][3b] | @kavun | only 3.5 and VB.NET |\n| [NArnott/System.Linq.Dynamic][4a] | [System.Linq.Dynamic.Library][4b]  | @NArnott | removed from github + nuget ? |\n| [dynamiclinq.codeplex][5a] | - | dialectsoftware | - |\n| [dynamic-linq][6a] | - | scottgu | - |\n\n[2a]: https://github.com/kahanu/System.Linq.Dynamic\n[2b]: https://www.nuget.org/packages/System.Linq.Dynamic\n[3a]: https://github.com/kavun/System.Linq.Dynamic.3.5\n[3b]: https://www.nuget.org/packages/System.Linq.Dynamic.3.5/\n[4a]: https://github.com/NArnott/System.Linq.Dynamic\n[4b]: https://www.nuget.org/packages/System.Linq.Dynamic.Library\n[5a]: https://dynamiclinq.codeplex.com/\n[6a]: http://weblogs.asp.net/scottgu/dynamic-linq-part-1-using-the-linq-dynamic-query-library\n\n[doc-api]: http://stefh.github.io/System.Linq.Dynamic.Core\n[doc-wiki]: https://github.com/StefH/System.Linq.Dynamic.Core/wiki/Dynamic-Expressions\n"}, {"repo": "/isobar-us/code-standards", "language": "HTML", "readme_contents": "#  Isobar Front-end Development Standards and Guidelines\n\n## License:\n\nAll content licensed under Creative Commons Attribution 3.0 Unported License\n\n## Summary:\n\nThis document contains guidelines for web applications built by the Front-end development practice of Isobar. It is to be readily available to anyone who wishes to check or contribute to the iterative progress of our discipline's best practices.\n\nThis document's primary motivation is two-fold: \n\n 1. code consistency and \n 2. best practices. \n\nBy maintaining consistency in coding styles and conventions, we can ease the burden of legacy code maintenance, and mitigate risk of breakage in the future. By adhering to best practices, we ensure optimized page loading, performance and maintainable code.\n\nWe hope to encourage other developers to think about how to best standardize their approaches to development, to propose their own ideas for debate and for inclusion in our version of the document, and to adapt our standards for their own unique development practices. What better way of achieving consensus on how best to develop in our discipline than through feedback from members of that discipline themselves?\n\n## Intent for Build and Content\n\nWe hope to separate the structure of the document from the content contained in the standards themselves. Effectively, our goal is to be able to easily update the content without having to worry about the structure.\n\nThis also enables pull requests to focus on content and forks to the content to be easily re-branded.\n\n## Viewing the Document\n\nTo view the latest, you can just clone locally:\n\n```bash\ngit clone git://github.com/isobar-idev/code-standards.git\n```\n\nTo make changes using the process in place, please use the build process. The next few sections describe this build process.\n\n## Building the Document\n\n### Requirements\n\nThe build system uses [Grunt.js](http://gruntjs.com) via [Node.js](http://nodejs.org/) and [SASS](http://sass-lang.com/) via [libsass](http://libsass.org/).\n\nFirst, install [Node.js](http://nodejs.org) from their Web site.\n\n### Build Details\n\nWe are using [Grunt](https://github.com/gruntjs/) to run the [Assemble](https://github.com/assemble/assemble/) task to parse, populate variables, and combine files for the HTML, Markdown, and [Handlebars](http://handlebarsjs.com/) templates.\n\n> Note: [Assemble](http://assemble.io) is an exceptionally active and flexible framework for building static HTML pages. It allows the usage of Handlebars, Markdown, and HTML files so we can gradually migrate to Markdown content files over time.\n\n> We suggest you check out [Assemble](http://assemble.io) as well.\n\nThe Gruntfile (`grunt.js`) includes the build for the multi-lingual copies of the document. There is a variable for `standards.defaultLanguage` which will determine what language the default `index.html` is rendered in.\n\nTo start with a clean slate, the Gruntfile has a `cleanup` task which will remove the previously generated `index.html` and associated language files.\n\nThere is also a `watch` task if you like to work that way.\n\n### Execute the Build\n\nRun `'npm install'` from the command line of the project directory to install all the node dependencies. You may need to occasionally re-run this command as new dependencies are added.\n\n> Windows: You may need to manually run `npm install -g grunt` and `npm install -g grunt-cli` to correctly set the path variables required to run grunt from the command line.\n\nRun `'grunt'` from the command line of the project directory to run the build process.\n\n### Structure of Page Content\n\nThe `*.html` files in the root are generated via `grunt` and should not be edited directly. There is one file per language, by language code.\n\n```\n./en.html\n./es.html\n./ru.html\n...\n```\nFinally, the `standards.defaultLanguage` setting determines which `*.html` file will be copied to the `index.html` file.\n\n> Note: In the near future the layout and templates will be updated to include the i18l language menus. \n\n#### Content\n\nThe content is written in Markdown files and the build converts it to HTML. Example:\n\n```\n./src/content/[lang]/css.md\n./src/content/[lang]/general.md\n./src/content/[lang]/html.md\n```\n\n...and so on.\n\nEach of the `.md` files contained within these directories is a portion of the final output file. We have separated the different sections that make up the page into individual files so that it is easier to edit.\n\n#### Including A Content File\n\nThe content files are included as partials and the data and order is defined in the following folder and files:\n\n```\n./src/content/[lang]/build/[lang].hbs\n./src/content/[lang]/build/data.json\n```\n\nThe `data.json` file has special significance to Assemble, *do not rename this file*.\n\n#### Page Layout (Presentation)\n\nThe main layout is a Handlebars file that the content is injected into and language specific attributes are updated.\n\nThe file is `./src/_layouts/main.hbs`.\n\n### Structure of CSS\n\nThe CSS files are generated via LibSass from the SCSS files located in the SCSS folder, which is run as part of the Grunt task.\n\n\n### Deploy\n\nBecause github pages only serve static content, you must push your generated files to the gh-pages branch for updates to appear online. \n\n"}, {"repo": "/Pixabay/JavaScript-autoComplete", "language": "HTML", "readme_contents": "JavaScript-autoComplete\n===================\n\nAn extremely lightweight and powerful vanilla JavaScript completion suggester.\n\nTested in Firefox, Safari, Chrome, Opera, Internet Explorer 8+. No dependencies, written in plain JavaScript.\nReleased under the MIT License: http://www.opensource.org/licenses/mit-license.php\n\nThis plugin was developed by [Pixabay.com](https://pixabay.com/) - an international repository for sharing free public domain images.\nWe have implemented this piece of software in production on [plainJS](https://plainjs.com/) and we share it - in the spirit of Pixabay - freely with others.\n\n## Demo and Documentation\n\nhttps://goodies.pixabay.com/javascript/auto-complete/demo.html\n\n## Features\n\n* Lightweight: 5.4 kB of JavaScript - less than 2.4 kB gzipped\n* Fully flexible data source\n* Smart caching, delay and minimum character settings\n* Callbacks\n\n## Changelog\n\n### Version 1.0.4 - 2016/02/10\n\n* Included pull #6 and added offsetLeft/offsetTop as optional parameter for suggestions container.\n\n\n### Version 1.0.3 - 2015/11/02\n\n* Fixed #2: Unspecified error on IE 10.\n\n### Version 1.0.2 - 2015/08/15\n\n* Fixed: Hide suggestions on fast input.\n* Fixed: Select item with tab.\n* Fixed: Incorrect selection by mouse when suggestions are scrolled down.\n\n### Version 1.0.1 - 2015/06/08\n\n* Simplified code and minor bug fixes.\n\n### Version 1.0.0 - 2015/06/07\n\n* Prevent unnecessary search on pressing enter.\n\n### Version 1.0.0 beta - 2015/05/12\n\n* First release\n"}, {"repo": "/sydcanem/bootstrap-contextmenu", "language": "HTML", "readme_contents": "Bootstrap Context Menu\n======================\n\n#This project is unmaintained. Please use the alternative https://github.com/swisnl/jQuery-contextMenu.\n\nI have an issue with the plugin but I would still like to use it.\n\n-- Please fork the project and do your fixes.\n\nWhere can I get support if can't fix some issue?\n\n-- You can check the issues page or pull request page if someone has a fix for your problem and merge it with your fork.\n\nI still can't find fixes of my issues.\n\n-- Get plenty of sleep. :)\n\n\n## A context menu extension of Bootstrap made for everyone's convenience.\n\nSee a [demo page] [id].\n[id]:http://sydcanem.github.io/bootstrap-contextmenu/\n\nInstallation\n------------\n\n`bower install bootstrap-contextmenu`\n\nNote: Requires bootstrap.css\n\nUsage\n-----\n\n### Via data attributes\n\nAdd `data-toggle=\"context\"` to any element that needs a custom context menu and via CSS set `position: relative` to the element.\n\nPoint `data-target` attribute to your custom context menu.\n\n`<div class=\"context\" data-toggle=\"context\" data-target=\"#context-menu\"></div>`\n\n### Via Javascript\n\nCall the context menu via JavaScript:\n\n```js\n$('.context').contextmenu({\n  target:'#context-menu', \n  before: function(e,context) {\n    // execute code before context menu if shown\n  },\n  onItem: function(context,e) {\n    // execute on menu item selection\n  }\n})\n```\n\n### Options\n\n`target` - is the equivalent of the `data-target` attribute. It identifies the html of the menu that will be displayed. \n\n`before` - is a function that is called before the context menu is displayed. If this function returns false, the context menu will not be displayed. It is passed two parameters,\n\n  - `e` - the original event. (You can do an `e.preventDefault()` to cancel the browser event). \n  - `context` - the DOM element where right click occured.\n\n`onItem` - is a function that is called when a menu item is clicked. Useful when you want to execute a specific function when an item is clicked. It is passed two parameters,\n\n  - `context` - the DOM element where right click occured.\n  - `e` - the click event of the menu item, $(e.target) is the item element.\n\n`scopes` - DOM selector for dynamically added context elements. See [issue](https://github.com/sydcanem/bootstrap-contextmenu/issues/56).\n\n### Events\n\nAll events are fired at the context's menu. Check out `dropdown` plugin for\na complete description of events.\n\n- `show.bs.context` - This event fires immediately when the menu is opened. \n- `shown.bs.context` - This event is fired when the dropdown has been made visible to the user. \n- `hide.bs.context` - This event is fired immediately when the hide instance method has been called. \n- `hidden.bs.context` - This event is fired when the dropdown has finished being hidden from the user (will wait for CSS transitions, to complete).\n  \nSample\n\n```js\n$('#myMenu').on('show.bs.context',function () {\n  // do something...\n});\n```\n\nExample\n-------\n\nActivate and specify selector for context menu\n\n```js\n$('#main').contextmenu({'target':'#context-menu'});\n```\n\nActivate within a div, but not on spans\n\n```js\n$('#main').contextmenu({\n  target: '#context-menu2',\n  before: function (e, element, target) {\n      e.preventDefault();\n      if (e.target.tagName == 'SPAN') {\n          e.preventDefault();\n          this.closemenu();\n          return false;\n      }\n      return true;\n  }\n});\n```\n\nModify the menu dynamically\n\n```js\n$('#main').contextmenu({\n  target: \"#myMenu\",\n  before: function(e) { \n    this.getMenu().find(\"li\").eq(2).find('a').html(\"This was dynamically changed\");\n  }\n});\n```\n\nShow menu name on selection\n\n```js\n$('#main').contextmenu({\n  onItem: function(context, e) {\n    alert($(e.target).text());\n  }\n});\n```\n\n### Nice to have features:\n\n - Close and open animations\n - Keyboard shortcuts for menus\n\n### License\nMIT\n"}, {"repo": "/chrisalbon/code_py", "language": "HTML", "readme_contents": "code_py\n=======\n\nSome well commented data science related code snippets in (mostly) Python 3. It was created by [Chris Albon](http://www.chrisalbon.com).\n\nThis collection of snippits is not comprehensive, and is in many places repetitive.\n\nYou can view all the snippits in [iPython Notebook Viewer](http://nbviewer.ipython.org/github/chrisalbon/code_py/tree/master/).\n"}, {"repo": "/jmportilla/Complete-Python-Bootcamp", "language": "Jupyter Notebook", "readme_contents": "# Complete-Python-Bootcamp\n\n## Welcome to the Repository for the Complete Python Bootcamp!\n\nThis is the Repository for the Udemy course - \"Complete Python Bootcamp\".\n\nYou can purchase the course at a 50% discount by clicking [here](https://www.udemy.com/complete-python-bootcamp/?couponCode=PYTHON15). \nPurchasing the course grants access to all the screencast videos and the moderated discussion forums!\n\n\nIn this repo you will find all the accompanying Jupyter (p.k.a. iPython) Notebooks for the course. For quicker view rendering and simpler downloading procedures, you can check out this repo using [NbViewer](http://nbviewer.ipython.org/github/jmportilla/Complete-Python-Bootcamp/tree/master/).\n\n\nThen navigate to your desired lecture and enjoy! You can download the .ipynb files onto your own computer for convenience.\n\nEnjoy the course and thank you for enrolling!\n"}, {"repo": "/shadowsocksr-backup/shadowsocksr", "language": "Python", "readme_contents": "shadowsocks\n===========\n\n[![PyPI version]][PyPI]\n[![Build Status]][Travis CI]\n[![Coverage Status]][Coverage]\n\nA fast tunnel proxy that helps you bypass firewalls.\n\nServer\n------\n\n### Install\n\nDebian / Ubuntu:\n\n    apt-get install python-pip\n    pip install shadowsocks\n\nCentOS:\n\n    yum install python-setuptools && easy_install pip\n    pip install shadowsocks\n\nWindows:\n\nSee [Install Server on Windows]\n\n### Usage\n\n    ssserver -p 443 -k password -m aes-256-cfb\n\nTo run in the background:\n\n    sudo ssserver -p 443 -k password -m aes-256-cfb --user nobody -d start\n\nTo stop:\n\n    sudo ssserver -d stop\n\nTo check the log:\n\n    sudo less /var/log/shadowsocks.log\n\nCheck all the options via `-h`. You can also use a [Configuration] file\ninstead.\n\nClient\n------\n\n* [Windows] / [OS X]\n* [Android] / [iOS]\n* [OpenWRT]\n\nUse GUI clients on your local PC/phones. Check the README of your client\nfor more information.\n\nDocumentation\n-------------\n\nYou can find all the documentation in the [Wiki].\n\nLicense\n-------\n\nCopyright 2015 clowwindy\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may\nnot use this file except in compliance with the License. You may obtain\na copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\nWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\nLicense for the specific language governing permissions and limitations\nunder the License.\n\nBugs and Issues\n----------------\n\n* [Troubleshooting]\n* [Issue Tracker]\n* [Mailing list]\n\n\n\n[Android]:           https://github.com/shadowsocks/shadowsocks-android\n[Build Status]:      https://img.shields.io/travis/shadowsocks/shadowsocks/master.svg?style=flat\n[Configuration]:     https://github.com/shadowsocks/shadowsocks/wiki/Configuration-via-Config-File\n[Coverage Status]:   https://jenkins.shadowvpn.org/result/shadowsocks\n[Coverage]:          https://jenkins.shadowvpn.org/job/Shadowsocks/ws/PYENV/py34/label/linux/htmlcov/index.html\n[Debian sid]:        https://packages.debian.org/unstable/python/shadowsocks\n[iOS]:               https://github.com/shadowsocks/shadowsocks-iOS/wiki/Help\n[Issue Tracker]:     https://github.com/shadowsocks/shadowsocks/issues?state=open\n[Install Server on Windows]: https://github.com/shadowsocks/shadowsocks/wiki/Install-Shadowsocks-Server-on-Windows\n[Mailing list]:      https://groups.google.com/group/shadowsocks\n[OpenWRT]:           https://github.com/shadowsocks/openwrt-shadowsocks\n[OS X]:              https://github.com/shadowsocks/shadowsocks-iOS/wiki/Shadowsocks-for-OSX-Help\n[PyPI]:              https://pypi.python.org/pypi/shadowsocks\n[PyPI version]:      https://img.shields.io/pypi/v/shadowsocks.svg?style=flat\n[Travis CI]:         https://travis-ci.org/shadowsocks/shadowsocks\n[Troubleshooting]:   https://github.com/shadowsocks/shadowsocks/wiki/Troubleshooting\n[Wiki]:              https://github.com/shadowsocks/shadowsocks/wiki\n[Windows]:           https://github.com/shadowsocks/shadowsocks-csharp\n"}, {"repo": "/bear/python-twitter", "language": "Python", "readme_contents": "Python Twitter\n\nA Python wrapper around the Twitter API.\n\nBy the `Python-Twitter Developers <python-twitter@googlegroups.com>`_\n\n.. image:: https://img.shields.io/pypi/v/python-twitter.svg\n    :target: https://pypi.python.org/pypi/python-twitter/\n    :alt: Downloads\n\n.. image:: https://readthedocs.org/projects/python-twitter/badge/?version=latest\n    :target: http://python-twitter.readthedocs.org/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://circleci.com/gh/bear/python-twitter.svg?style=svg\n    :target: https://circleci.com/gh/bear/python-twitter\n    :alt: Circle CI\n\n.. image:: http://codecov.io/github/bear/python-twitter/coverage.svg?branch=master\n    :target: http://codecov.io/github/bear/python-twitter\n    :alt: Codecov\n\n.. image:: https://requires.io/github/bear/python-twitter/requirements.svg?branch=master\n     :target: https://requires.io/github/bear/python-twitter/requirements/?branch=master\n     :alt: Requirements Status\n\n.. image:: https://dependencyci.com/github/bear/python-twitter/badge\n     :target: https://dependencyci.com/github/bear/python-twitter\n     :alt: Dependency Status\n\n============\nIntroduction\n============\n\nThis library provides a pure Python interface for the `Twitter API <https://dev.twitter.com/>`_. It works with Python versions from 2.7+ and Python 3.\n\n`Twitter <http://twitter.com>`_ provides a service that allows people to connect via the web, IM, and SMS. Twitter exposes a `web services API <https://developer.twitter.com/en/docs>`_ and this library is intended to make it even easier for Python programmers to use.\n\n==========\nInstalling\n==========\n\nYou can install python-twitter using::\n\n    $ pip install python-twitter\n\n\nIf you are using python-twitter on Google App Engine, see `more information <GAE.rst>`_ about including 3rd party vendor library dependencies in your App Engine project.\n\n\n================\nGetting the code\n================\n\nThe code is hosted at https://github.com/bear/python-twitter\n\nCheck out the latest development version anonymously with::\n\n    $ git clone git://github.com/bear/python-twitter.git\n    $ cd python-twitter\n\nTo install dependencies, run either::\n\n\t$ make dev\n\nor::\n\n    $ pip install -Ur requirements.testing.txt\n    $ pip install -Ur requirements.txt\n\nNote that ```make dev``` will install into your local ```pyenv``` all of the versions needed for test runs using ```tox```.\n\nTo install the minimal dependencies for production use (i.e., what is installed\nwith ``pip install python-twitter``) run::\n\n    $ make env\n\nor::\n\n    $ pip install -Ur requirements.txt\n\n=============\nRunning Tests\n=============\nThe test suite can be run against a single Python version or against a range of them depending on which Makefile target you select.\n\nNote that tests require ```pip install pytest``` and optionally ```pip install pytest-cov``` (these are included if you have installed dependencies from ```requirements.testing.txt```)\n\nTo run the unit tests with a single Python version::\n\n    $ make test\n\nto also run code coverage::\n\n    $ make coverage\n\nTo run the unit tests against a set of Python versions::\n\n    $ make tox\n\n=============\nDocumentation\n=============\n\nView the latest python-twitter documentation at\nhttps://python-twitter.readthedocs.io. You can view Twitter's API documentation at: https://dev.twitter.com/overview/documentation\n\n=====\nUsing\n=====\n\nThe library provides a Python wrapper around the Twitter API and the Twitter data model. To get started, check out the examples in the examples/ folder or read the documentation at https://python-twitter.readthedocs.io which contains information about getting your authentication keys from Twitter and using the library.\n\n----\nUsing with Django\n----\n\nAdditional template tags that expand tweet urls and urlize tweet text. See the django template tags available for use with python-twitter: https://github.com/radzhome/python-twitter-django-tags\n\n------\nModels\n------\n\nThe library utilizes models to represent various data structures returned by Twitter. Those models are:\n    * twitter.Category\n    * twitter.DirectMessage\n    * twitter.Hashtag\n    * twitter.List\n    * twitter.Media\n    * twitter.Status\n    * twitter.Trend\n    * twitter.Url\n    * twitter.User\n    * twitter.UserStatus\n\nTo read the documentation for any of these models, run::\n\n    $ pydoc twitter.[model]\n\n---\nAPI\n---\n\nThe API is exposed via the ``twitter.Api`` class.\n\nThe python-twitter requires the use of OAuth keys for nearly all operations. As of Twitter's API v1.1, authentication is required for most, if not all, endpoints. Therefore, you will need to register an app with Twitter in order to use this library. Please see the \"Getting Started\" guide on https://python-twitter.readthedocs.io for more information.\n\nTo generate an Access Token you have to pick what type of access your application requires and then do one of the following:\n\n- `Generate a token to access your own account <https://dev.twitter.com/oauth/overview/application-owner-access-tokens>`_\n- `Generate a pin-based token <https://dev.twitter.com/oauth/pin-based>`_\n- use the helper script `get_access_token.py <https://github.com/bear/python-twitter/blob/master/get_access_token.py>`_\n\nFor full details see the `Twitter OAuth Overview <https://dev.twitter.com/oauth/overview>`_\n\nTo create an instance of the ``twitter.Api`` with login credentials (Twitter now requires an OAuth Access Token for all API calls)::\n\n    >>> import twitter\n    >>> api = twitter.Api(consumer_key='consumer_key',\n                          consumer_secret='consumer_secret',\n                          access_token_key='access_token',\n                          access_token_secret='access_token_secret')\n\nTo see if your credentials are successful::\n\n    >>> print(api.VerifyCredentials())\n    {\"id\": 16133, \"location\": \"Philadelphia\", \"name\": \"bear\"}\n\n**NOTE**: much more than the small sample given here will print\n\nTo fetch a single user's public status messages, where ``user`` is a Twitter user's screen name::\n\n    >>> statuses = api.GetUserTimeline(screen_name=user)\n    >>> print([s.text for s in statuses])\n\nTo fetch a list of a user's friends::\n\n    >>> users = api.GetFriends()\n    >>> print([u.name for u in users])\n\nTo post a Twitter status message::\n\n    >>> status = api.PostUpdate('I love python-twitter!')\n    >>> print(status.text)\n    I love python-twitter!\n\nThere are many more API methods, to read the full API documentation either\ncheck out the documentation on `readthedocs\n<https://python-twitter.readthedocs.io>`_, build the documentation locally\nwith::\n\n    $ make docs\n\nor check out the inline documentation with::\n\n    $ pydoc twitter.Api\n\n----\nTodo\n----\n\nPatches, pull requests, and bug reports are `welcome <https://github.com/bear/python-twitter/issues/new>`_, just please keep the style consistent with the original source.\n\nIn particular, having more example scripts would be a huge help. If you have\na program that uses python-twitter and would like a link in the documentation,\nsubmit a pull request against ``twitter/doc/getting_started.rst`` and add your\nprogram at the bottom.\n\nThe twitter.Status and ``twitter.User`` classes are going to be hard to keep in sync with the API if the API changes. More of the code could probably be written with introspection.\n\nThe ``twitter.Status`` and ``twitter.User`` classes could perform more validation on the property setters.\n\n----------------\nMore Information\n----------------\n\nPlease visit `the google group <http://groups.google.com/group/python-twitter>`_ for more discussion.\n\n------------\nContributors\n------------\n\nOriginally two libraries by DeWitt Clinton and Mike Taylor which were then merged into python-twitter.\n\nNow it's a full-on open source project with many contributors over time. See AUTHORS.rst for the complete list.\n\n-------\nLicense\n-------\n\n| Copyright 2007-2016 The Python-Twitter Developers\n|\n| Licensed under the Apache License, Version 2.0 (the 'License');\n| you may not use this file except in compliance with the License.\n| You may obtain a copy of the License at\n|\n|     http://www.apache.org/licenses/LICENSE-2.0\n|\n| Unless required by applicable law or agreed to in writing, software\n| distributed under the License is distributed on an 'AS IS' BASIS,\n| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n| See the License for the specific language governing permissions and\n| limitations under the License.\n"}, {"repo": "/kennethormandy/normalize-opentype.css", "language": "HTML", "readme_contents": "**Note** You might also like my more recent take on this project, [Utility OpenType](https://github.com/kennethormandy/utility-opentype): CSS utility classes for advanced typographic features.\n\n***\n\n[![Normalize-OpenType.css wordmark](assets/wordmark.png)](http://kennethormandy.com/journal/normalize-opentype-css)\n\n***\n\n# Normalize-OpenType.css\n\nAdds OpenType features\u2014ligatures, kerning, and more\u2014to [Normalize.css](https://github.com/necolas/normalize.css).\n\nRead the blog post: [Introducing Normalize-OpenType.css](http://kennethormandy.com/journal/normalize-opentype-css)\n\n[<img alt=\"Get the latest version of the CSS file\" src=\"assets/download.png\" width=\"150px\" />](https://raw.githubusercontent.com/kennethormandy/normalize-opentype.css/master/normalize-opentype.css)\n\n_Or use_\n\n```bash\nnpm install normalize-opentype.css\n```\n\n## Ligatures\n\nFirst, normalize basic ligatures across browsers, and then get fancier, discretionary ligatures on `<h1>`, `<h2>`, and `<h3>`s.\n\n![An example of basic and discretionary ligatures.](assets/example-1.png)\n\n## Numerals\n\nDifferent situations require different numerals, depending on the context. Normalize-OpenType.css takes care of this for you, so you don\u2019t need to know what combination of Proportional, Lining, Tabular, and Old-Style numerals you need to use.\n\n![An example of old-style, proportional numerals.](assets/example-2.png)\n\n![An example of tabular, lining numerals.](assets/example-3.png)\n\n## Small Capitals\n\nRegular capitals draw a lot of attention in body copy. With Normalize-OpenType.css, anything wrapped in `<abbr>` will use small capitals instead. This works especially well with [Typogr.js](https://github.com/ekalinin/typogr.js) and equivalents.\n\n![An example of small capitals.](assets/example-4.png)\n\n## Kerning\n\nKerning is turned on by default everywhere, and carefully turned off where it isn\u2019t appropriate. A monospaced typeface\u2019s application is ruined when automatic kerning is turned on. This is not the case with Normalize-OpenType.css; your code blocks have been preserved.\n\n![A kerning example.](assets/example-5.png)\n\n## \u2026and more\n\nThere\u2019s more optimisations included, so you don\u2019t have to think about them: Lining, tabular numerals in code blocks, uppercase fallbacks for small capitals, and proper subscript and superscripts.\n\n## Getting started\n\nNormalize-OpenType.css aims to be as easy to use as its namesake, Normalize.css. If it\u2019s not that easy, please [open an issue](https://github.com/kennethormandy/normalize-opentype.css/issues). Get the latest version of the CSS file here:\n\n[<img alt=\"Get the latest version of the CSS file\" src=\"assets/download.png\" width=\"150px\" />](https://raw.githubusercontent.com/kennethormandy/normalize-opentype.css/master/normalize-opentype.css)\n\nAlternatively, use the package manager and build tool of your choice:\n\n#### With npm\n\n```\nnpm install normalize-opentype.css\n```\n\n#### With Component\n\n```bash\ncomponent install kennethormandy/normalize-opentype.css\n```\n\n#### With bower\n\n```bash\nbower install normalize-opentype.css\n```\n\n### Include\n\nThough technically Normalize-OpenType.css is not dependent on Normalize.css, the intent expectation is that the former would not be used without the latter. If you\u2019re dropping in stylesheets:\n\n```html\n<link src=\"css/normalize.css\" rel=\"stylesheet\" />\n<link src=\"css/normalize-opentype.css\" rel=\"stylesheet\" />\n```\n\nIf you\u2019re using a preprocessor through something like [Harp](http://harpjs.com), you can import the files instead.\n\n```scss\n@import \"normalize\";\n@import \"normalize-opentype\";\n```\n\n### Caveats\n\nThis library does the best it can with what it has. In order to use any of these optimisations, they must also be available in the font you are using.\n\nI\u2019m working on some blog posts and documentation about this, and will be [sending them out via email](http://kennethormandy.com/journal/newsletter) if you\u2019re interested.\n\nThere\u2019s also a bug in Open Sans on Windows 7, with IE10 and 11, that\u2019s caused by `font-feature-settings`, which this stylesheet uses heavily. [We\u2019re keeping an eye on it.](https://github.com/kennethormandy/normalize-opentype.css/issues/4)\n\n## Running locally\n\nIf you\u2019d like to see the test suite, or just want to view things locally, use the following:\n\n```bash\ngit clone https://github.com/kennethormandy/normalize-opentype.css\ncd normalize-opentype.css\nnpm install\n```\nTo view the tests:\n\n```bash\nnpm test\n```\n\nTo compile any changes:\n\n```bash\nnpm build\n```\n\n## Contributing\n\nThanks for considering contributing! There\u2019s information about how to [get started with normalize-opentype here](CONTRIBUTING.md).\n\nIf you\u2019re new to all this GitHub, Open Source, JavaScript, Node.js, testing, wow all this stuff seems really difficult I just want to make my sites better stuff, I get it. I\u2019m still there, too. Feel free to [send me an email](mailto:kenneth@chloi.io) or [open an issue here](http://github.com/kennethormandy/normalize-opentype.css/issues) and I\u2019ll do my best to share some resources that have helped me out.\n\n## Colophon\n\nNormalize-OpenType.css\u2019 wordmark, examples, and some tests set in the [Klinic Slab](http://www.losttype.com/font_beta/?name=klinic), designed by [Joe Prince](https://dribbble.com/JoePrince). The manicules were designed by [Cade Cran](http://cadecran.com) for [Dan Gneiding](http://grayhood.com/)\u2019s [Dude Hank Pro](http://www.losttype.com/font/?name=hankpro). Both are available through the wonderful [Lost Type Co-op](http://losttype.com).\n\nAdditional tests use [Fira](https://github.com/mozilla/Fira) from Mozilla, and [Source Code Pro](https://github.com/adobe/source-code-pro) from Adobe.\n\n## License\n\n[The MIT License (MIT)](LICENSE.md)\n\nCopyright \u00a9 2014\u20132015 [Kenneth Ormandy](http://kennethormandy.com)\n"}, {"repo": "/googleapis/google-api-python-client", "language": "Python", "readme_contents": "# Google API Client\n\n[![PyPI version](https://badge.fury.io/py/google-api-python-client.svg)](https://badge.fury.io/py/google-api-python-client)\n\nThis is the Python client library for Google's discovery based APIs. To get started, please see the [docs folder](docs/README.md).\n\nThese client libraries are officially supported by Google.  However, the libraries are considered complete and are in maintenance mode. This means that we will address critical bugs and security issues but will not add any new features.\n\n## Documentation\n\nSee the [docs folder](docs/README.md) for more detailed instructions and additional documentation.\n\n## Google Cloud Platform\n\nFor Google Cloud Platform APIs such as Datastore, Cloud Storage or Pub/Sub, we recommend using [Cloud Client Libraries for Python](https://github.com/GoogleCloudPlatform/google-cloud-python) which is under active development.\n\n## Installation\n\nInstall this library in a [virtualenv](https://virtualenv.pypa.io/en/latest/) using pip. virtualenv is a tool to\ncreate isolated Python environments. The basic problem it addresses is one of\ndependencies and versions, and indirectly permissions.\n\nWith virtualenv, it's possible to install this library without needing system\ninstall permissions, and without clashing with the installed system\ndependencies.\n\n### Mac/Linux\n\n```\npip install virtualenv\nvirtualenv <your-env>\nsource <your-env>/bin/activate\n<your-env>/bin/pip install google-api-python-client\n```\n\n### Windows\n\n```\npip install virtualenv\nvirtualenv <your-env>\n<your-env>\\Scripts\\activate\n<your-env>\\Scripts\\pip.exe install google-api-python-client\n```\n\n## Supported Python Versions\n\nPython 3.4, 3.5, 3.6 and 3.7 are fully supported and tested. This library may work on later versions of 3, but we do not currently run tests against those versions\n\n## Deprecated Python Versions\n\nPython == 2.7\n\n## Third Party Libraries and Dependencies\n\nThe following libraries will be installed when you install the client library:\n* [httplib2](https://github.com/httplib2/httplib2)\n* [uritemplate](https://github.com/sigmavirus24/uritemplate)\n\nFor development you will also need the following libraries:\n* [WebTest](http://webtest.pythonpaste.org/en/latest/index.html)\n* [pycrypto](https://pypi.python.org/pypi/pycrypto)\n* [pyopenssl](https://pypi.python.org/pypi/pyOpenSSL)\n\n## Contributing\n\nPlease see the [contributing page](http://google.github.io/google-api-python-client/contributing.html) for more information. In particular, we love pull requests - but please make sure to sign the contributor license agreement.\n"}, {"repo": "/cod3rcursos/curso-react-redux", "language": "HTML", "readme_contents": "# Curso React-Redux\n"}, {"repo": "/googleapis/google-cloud-python", "language": "Python", "readme_contents": "Google Cloud Python Client\n==========================\n\nPython idiomatic clients for `Google Cloud Platform`_ services.\n\n.. _Google Cloud Platform: https://cloud.google.com/\n\n**Heads up**! These libraries are supported on App Engine standard's `Python 3 runtime`_ but are *not* supported on App Engine's `Python 2 runtime`_.\n\n.. _Python 3 runtime: https://cloud.google.com/appengine/docs/standard/python3\n.. _Python 2 runtime: https://cloud.google.com/appengine/docs/standard/python\n\nGeneral Availability\n--------------------\n\n**GA** (general availability) indicates that the client library for a\nparticular service is stable, and that the code surface will not change in\nbackwards-incompatible ways unless either absolutely necessary (e.g. because\nof critical security issues) or with an extensive deprecation period.\nIssues and requests against GA libraries are addressed with the highest\npriority.\n\n.. note::\n\n    Sub-components of GA libraries explicitly marked as beta in the\n    import path (e.g. ``google.cloud.language_v1beta2``) should be considered\n    to be beta.\n\nThe following client libraries have **GA** support:\n\n-  `Google BigQuery`_ (`BigQuery README`_, `BigQuery Documentation`_)\n-  `Google Cloud Bigtable`_ (`Bigtable README`_, `Bigtable Documentation`_)\n-  `Google Cloud Datastore`_ (`Datastore README`_, `Datastore Documentation`_)\n-  `Google Cloud KMS`_ (`KMS README`_, `KMS Documentation`_)\n-  `Google Cloud Natural Language`_ (`Natural Language README`_, `Natural Language Documentation`_)\n-  `Google Cloud Pub/Sub`_ (`Pub/Sub README`_, `Pub/Sub Documentation`_)\n-  `Google Cloud Scheduler`_ (`Scheduler README`_, `Scheduler Documentation`_)\n-  `Google Cloud Spanner`_ (`Spanner README`_, `Spanner Documentation`_)\n-  `Google Cloud Speech to Text`_ (`Speech to Text README`_, `Speech to Text Documentation`_)\n-  `Google Cloud Storage`_ (`Storage README`_, `Storage Documentation`_)\n-  `Google Cloud Tasks`_ (`Tasks README`_, `Tasks Documentation`_)\n-  `Google Cloud Translation`_ (`Translation README`_, `Translation Documentation`_)\n-  `Stackdriver Logging`_ (`Logging README`_, `Logging Documentation`_)\n\n.. _Google BigQuery: https://pypi.org/project/google-cloud-bigquery/\n.. _BigQuery README: https://github.com/googleapis/google-cloud-python/tree/master/bigquery\n.. _BigQuery Documentation: https://googleapis.dev/python/bigquery/latest\n\n.. _Google Cloud Bigtable: https://pypi.org/project/google-cloud-bigtable/\n.. _Bigtable README: https://github.com/googleapis/google-cloud-python/tree/master/bigtable\n.. _Bigtable Documentation: https://googleapis.dev/python/bigtable/latest\n\n.. _Google Cloud Datastore: https://pypi.org/project/google-cloud-datastore/\n.. _Datastore README: https://github.com/googleapis/google-cloud-python/tree/master/datastore\n.. _Datastore Documentation: https://googleapis.dev/python/datastore/latest \n\n.. _Google Cloud KMS: https://pypi.org/project/google-cloud-kms/\n.. _KMS README: https://github.com/googleapis/google-cloud-python/tree/master/kms\n.. _KMS Documentation: https://googleapis.dev/python/cloudkms/latest\n\n.. _Google Cloud Natural Language: https://pypi.org/project/google-cloud-language/\n.. _Natural Language README: https://github.com/googleapis/google-cloud-python/tree/master/language\n.. _Natural Language Documentation: https://googleapis.dev/python/language/latest\n\n.. _Google Cloud Pub/Sub: https://pypi.org/project/google-cloud-pubsub/\n.. _Pub/Sub README: https://github.com/googleapis/google-cloud-python/tree/master/pubsub\n.. _Pub/Sub Documentation: https://googleapis.dev/python/pubsub/latest\n\n.. _Google Cloud Spanner: https://pypi.org/project/google-cloud-spanner\n.. _Spanner README: https://github.com/googleapis/google-cloud-python/tree/master/spanner\n.. _Spanner Documentation: https://googleapis.dev/python/spanner/latest\n\n.. _Google Cloud Speech to Text: https://pypi.org/project/google-cloud-speech/\n.. _Speech to Text README: https://github.com/googleapis/google-cloud-python/tree/master/speech\n.. _Speech to Text Documentation: https://googleapis.dev/python/speech/latest\n\n.. _Google Cloud Storage: https://pypi.org/project/google-cloud-storage/\n.. _Storage README: https://github.com/googleapis/google-cloud-python/tree/master/storage\n.. _Storage Documentation: https://googleapis.dev/python/storage/latest\n\n.. _Google Cloud Tasks: https://pypi.org/project/google-cloud-tasks/\n.. _Tasks README: https://github.com/googleapis/google-cloud-python/tree/master/tasks\n.. _Tasks Documentation: https://googleapis.dev/python/cloudtasks/latest\n\n.. _Google Cloud Translation: https://pypi.org/project/google-cloud-translate/\n.. _Translation README: https://github.com/googleapis/google-cloud-python/tree/master/translate\n.. _Translation Documentation: https://googleapis.dev/python/translation/latest\n\n.. _Google Cloud Scheduler: https://pypi.org/project/google-cloud-scheduler/\n.. _Scheduler README: https://github.com/googleapis/google-cloud-python/tree/master/scheduler\n.. _Scheduler Documentation: https://googleapis.dev/python/cloudscheduler/latest\n\n.. _Stackdriver Logging: https://pypi.org/project/google-cloud-logging/\n.. _Logging README: https://github.com/googleapis/google-cloud-python/tree/master/logging\n.. _Logging Documentation: https://googleapis.dev/python/logging/latest\n\nBeta Support\n------------\n\n**Beta** indicates that the client library for a particular service is\nmostly stable and is being prepared for release. Issues and requests\nagainst beta libraries are addressed with a higher priority.\n\nThe following client libraries have **beta** support:\n\n-  `Google Cloud Firestore`_ (`Firestore README`_, `Firestore Documentation`_)\n-  `Google Cloud Video Intelligence`_ (`Video Intelligence README`_, `Video Intelligence Documentation`_)\n-  `Google Cloud Vision`_ (`Vision README`_, `Vision Documentation`_)\n\n.. _Google Cloud Firestore: https://pypi.org/project/google-cloud-firestore/\n.. _Firestore README: https://github.com/googleapis/google-cloud-python/tree/master/firestore\n.. _Firestore Documentation: https://googleapis.dev/python/firestore/latest\n\n.. _Google Cloud Video Intelligence: https://pypi.org/project/google-cloud-videointelligence\n.. _Video Intelligence README: https://github.com/googleapis/google-cloud-python/tree/master/videointelligence\n.. _Video Intelligence Documentation: https://googleapis.dev/python/videointelligence/latest\n\n.. _Google Cloud Vision: https://pypi.org/project/google-cloud-vision/\n.. _Vision README: https://github.com/googleapis/google-cloud-python/tree/master/vision\n.. _Vision Documentation: https://googleapis.dev/python/vision/latest\n\n\nAlpha Support\n-------------\n\n**Alpha** indicates that the client library for a particular service is\nstill a work-in-progress and is more likely to get backwards-incompatible\nupdates. See `versioning`_ for more details.\n\nThe following client libraries have **alpha** support:\n\n-  `Google Cloud Asset`_ (`Asset README`_, `Asset Documentation`_)\n-  `Google Cloud AutoML`_ (`AutoML README`_, `AutoML Documentation`_)\n-  `Google BigQuery Data Transfer`_ (`BigQuery Data Transfer README`_, `BigQuery Documentation`_)\n-  `Google Cloud Bigtable - HappyBase`_ (`HappyBase README`_, `HappyBase Documentation`_)\n-  `Google Cloud Build`_ (`Cloud Build README`_, `Cloud Build Documentation`_)\n-  `Google Cloud Container`_ (`Container README`_, `Container Documentation`_)\n-  `Google Cloud Container Analysis`_ (`Container Analysis README`_, `Container Analysis Documentation`_)\n-  `Google Cloud Dataproc`_ (`Dataproc README`_, `Dataproc Documentation`_)\n-  `Google Cloud DLP`_ (`DLP README`_, `DLP Documentation`_)\n-  `Google Cloud DNS`_ (`DNS README`_, `DNS Documentation`_)\n-  `Google Cloud IoT`_ (`IoT README`_, `IoT Documentation`_)\n-  `Google Cloud Memorystore for Redis`_ (`Redis README`_, `Redis Documentation`_)\n-  `Google Cloud Recommender`_ (`Recommender README`_, `Recommender Documentation`_)\n-  `Google Cloud Resource Manager`_ (`Resource Manager README`_, `Resource Manager Documentation`_)\n-  `Google Cloud Runtime Configuration`_ (`Runtime Config README`_, `Runtime Config Documentation`_)\n-  `Google Cloud Security Scanner`_ (`Security Scanner README`_ , `Security Scanner Documentation`_)\n-  `Google Cloud Trace`_ (`Trace README`_, `Trace Documentation`_)\n-  `Google Cloud Text-to-Speech`_ (`Text-to-Speech README`_, `Text-to-Speech Documentation`_)\n-  `Grafeas`_ (`Grafeas README`_, `Grafeas Documentation`_)\n-  `Stackdriver Error Reporting`_ (`Error Reporting README`_, `Error Reporting Documentation`_)\n-  `Stackdriver Monitoring`_ (`Monitoring README`_, `Monitoring Documentation`_)\n\n.. _Google Cloud Asset: https://pypi.org/project/google-cloud-asset/\n.. _Asset README: https://github.com/googleapis/google-cloud-python/blob/master/asset\n.. _Asset Documentation: https://googleapis.dev/python/cloudasset/latest\n\n.. _Google Cloud AutoML: https://pypi.org/project/google-cloud-automl/\n.. _AutoML README: https://github.com/googleapis/google-cloud-python/blob/master/automl\n.. _AutoML Documentation: https://googleapis.dev/python/automl/latest\n\n.. _Google BigQuery Data Transfer: https://pypi.org/project/google-cloud-bigquery-datatransfer/\n.. _BigQuery Data Transfer README: https://github.com/googleapis/google-cloud-python/tree/master/bigquery_datatransfer\n.. _BigQuery Documentation: https://googleapis.dev/python/bigquery/latest\n\n.. _Google Cloud Bigtable - HappyBase: https://pypi.org/project/google-cloud-happybase/\n.. _HappyBase README: https://github.com/googleapis/google-cloud-python-happybase\n.. _HappyBase Documentation: https://google-cloud-python-happybase.readthedocs.io/en/latest/\n\n.. _Google Cloud Build: https://pypi.org/project/google-cloud-build/\n.. _Cloud Build README: https://github.com/googleapis/google-cloud-python/cloudbuild\n.. _Cloud Build Documentation: https://googleapis.dev/python/cloudbuild/latest\n\n.. _Google Cloud Container: https://pypi.org/project/google-cloud-container/\n.. _Container README: https://github.com/googleapis/google-cloud-python/tree/master/container\n.. _Container Documentation: https://googleapis.dev/python/container/latest\n\n.. _Google Cloud Container Analysis: https://pypi.org/project/google-cloud-containeranalysis/\n.. _Container Analysis README: https://github.com/googleapis/google-cloud-python/tree/master/containeranalysis\n.. _Container Analysis Documentation: https://googleapis.dev/python/containeranalysis/latest\n\n.. _Google Cloud Dataproc: https://pypi.org/project/google-cloud-dataproc/\n.. _Dataproc README: https://github.com/googleapis/google-cloud-python/tree/master/dataproc\n.. _Dataproc Documentation: https://googleapis.dev/python/dataproc/latest\n\n.. _Google Cloud DLP: https://pypi.org/project/google-cloud-dlp/\n.. _DLP README: https://github.com/googleapis/google-cloud-python/tree/master/dlp\n.. _DLP Documentation: https://googleapis.dev/python/dlp/latest\n\n.. _Google Cloud DNS: https://pypi.org/project/google-cloud-dns/\n.. _DNS README: https://github.com/googleapis/google-cloud-python/tree/master/dns\n.. _DNS Documentation: https://googleapis.dev/python/dns/latest\n\n.. _Google Cloud IoT: https://pypi.org/project/google-cloud-iot/\n.. _IoT README: https://github.com/googleapis/google-cloud-python/tree/master/iot\n.. _IoT Documentation: https://googleapis.dev/python/cloudiot/latest\n\n.. _Google Cloud Memorystore for Redis: https://pypi.org/project/google-cloud-redis/\n.. _Redis README: https://github.com/googleapis/google-cloud-python/tree/master/redis\n.. _Redis Documentation: https://googleapis.dev/python/redis/latest\n\n.. _Google Cloud Recommender: https://pypi.org/project/google-cloud-recommender/\n.. _Recommender README: https://github.com/googleapis/google-cloud-python/tree/master/recommender\n.. _Recommender Documentation: https://googleapis.dev/python/recommender/latest\n\n.. _Google Cloud Resource Manager: https://pypi.org/project/google-cloud-resource-manager/\n.. _Resource Manager README: https://github.com/googleapis/google-cloud-python/tree/master/resource_manager\n.. _Resource Manager Documentation: https://googleapis.dev/python/cloudresourcemanager/latest\n\n.. _Google Cloud Runtime Configuration: https://pypi.org/project/google-cloud-runtimeconfig/\n.. _Runtime Config README: https://github.com/googleapis/google-cloud-python/tree/master/runtimeconfig\n.. _Runtime Config Documentation: https://googleapis.dev/python/runtimeconfig/latest\n\n.. _Google Cloud Security Scanner: https://pypi.org/project/google-cloud-websecurityscanner/\n.. _Security Scanner README: https://github.com/googleapis/google-cloud-python/blob/master/websecurityscanner\n.. _Security Scanner Documentation: https://googleapis.dev/python/websecurityscanner/latest\n\n.. _Google Cloud Text-to-Speech: https://pypi.org/project/google-cloud-texttospeech/\n.. _Text-to-Speech README: https://github.com/googleapis/google-cloud-python/tree/master/texttospeech\n.. _Text-to-Speech Documentation: https://googleapis.dev/python/texttospeech/latest\n\n.. _Google Cloud Trace: https://pypi.org/project/google-cloud-trace/\n.. _Trace README: https://github.com/googleapis/google-cloud-python/tree/master/trace\n.. _Trace Documentation: https://googleapis.dev/python/cloudtrace/latest\n\n.. _Grafeas: https://pypi.org/project/grafeas/\n.. _Grafeas README: https://github.com/googleapis/google-cloud-python/tree/master/grafeas\n.. _Grafeas Documentation: https://googleapis.dev/python/grafeas/latest\n\n.. _Stackdriver Error Reporting: https://pypi.org/project/google-cloud-error-reporting/\n.. _Error Reporting README: https://github.com/googleapis/google-cloud-python/tree/master/error_reporting\n.. _Error Reporting Documentation: https://googleapis.dev/python/clouderrorreporting/latest\n\n.. _Stackdriver Monitoring: https://pypi.org/project/google-cloud-monitoring/\n.. _Monitoring README: https://github.com/googleapis/google-cloud-python/tree/master/monitoring\n.. _Monitoring Documentation: https://googleapis.dev/python/monitoring/latest\n\n.. _versioning: https://github.com/googleapis/google-cloud-python/blob/master/CONTRIBUTING.rst#versioning\n\nIf you need support for other Google APIs, check out the\n`Google APIs Python Client library`_.\n\n.. _Google APIs Python Client library: https://github.com/google/google-api-python-client\n\n\nExample Applications\n--------------------\n\n-  `getting-started-python`_ - A sample and `tutorial`_ that demonstrates how to build a complete web application using Cloud Datastore, Cloud Storage, and Cloud Pub/Sub and deploy it to Google App Engine or Google Compute Engine.\n-  `google-cloud-python-expenses-demo`_ - A sample expenses demo using Cloud Datastore and Cloud Storage\n\n.. _getting-started-python: https://github.com/GoogleCloudPlatform/getting-started-python\n.. _tutorial: https://cloud.google.com/python\n.. _google-cloud-python-expenses-demo: https://github.com/GoogleCloudPlatform/google-cloud-python-expenses-demo\n\n\nAuthentication\n--------------\n\nWith ``google-cloud-python`` we try to make authentication as painless as possible.\nCheck out the `Authentication section`_ in our documentation to learn more.\nYou may also find the `authentication document`_ shared by all the\n``google-cloud-*`` libraries to be helpful.\n\n.. _Authentication section: https://googleapis.dev/python/google-api-core/latest/auth.html\n.. _authentication document: https://github.com/googleapis/google-cloud-common/tree/master/authentication\n\nContributing\n------------\n\nContributions to this library are always welcome and highly encouraged.\n\nSee the `CONTRIBUTING doc`_ for more information on how to get started.\n\n.. _CONTRIBUTING doc: https://github.com/googleapis/google-cloud-python/blob/master/CONTRIBUTING.rst\n\n\nCommunity\n---------\n\nGoogle Cloud Platform Python developers hang out in `Slack`_ in the ``#python``\nchannel, click here to `get an invitation`_.\n\n.. _Slack: https://googlecloud-community.slack.com\n.. _get an invitation: https://gcp-slack.appspot.com/\n\n\nLicense\n-------\n\nApache 2.0 - See `the LICENSE`_ for more information.\n\n.. _the LICENSE: https://github.com/googleapis/google-cloud-python/blob/master/LICENSE\n"}, {"repo": "/gitpython-developers/GitPython", "language": "Python", "readme_contents": "## GitPython\n\nGitPython is a python library used to interact with git repositories, high-level like git-porcelain,\nor low-level like git-plumbing.\n\nIt provides abstractions of git objects for easy access of repository data, and additionally\nallows you to access the git repository more directly using either a pure python implementation,\nor the faster, but more resource intensive *git command* implementation.\n\nThe object database implementation is optimized for handling large quantities of objects and large datasets,\nwhich is achieved by using low-level structures and data streaming.\n\n\n### REQUIREMENTS\n\nGitPython needs the `git` executable to be installed on the system and available\nin your `PATH` for most operations.\nIf it is not in your `PATH`, you can help GitPython find it by setting\nthe `GIT_PYTHON_GIT_EXECUTABLE=<path/to/git>` environment variable.\n\n* Git (1.7.x or newer)\n* Python 3 to 3.7.\n\nThe list of dependencies are listed in `./requirements.txt` and `./test-requirements.txt`.\nThe installer takes care of installing them for you.\n\n### INSTALL\n\nIf you have downloaded the source code:\n\n    python setup.py install\n\nor if you want to obtain a copy from the Pypi repository:\n\n    pip install GitPython\n\nBoth commands will install the required package dependencies.\n\nA distribution package can be obtained for manual installation at:\n\n    http://pypi.python.org/pypi/GitPython\n\nIf you like to clone from source, you can do it like so:\n\n```bash\ngit clone https://github.com/gitpython-developers/GitPython\ngit submodule update --init --recursive\n./init-tests-after-clone.sh\n```\n\n### Limitations\n\n#### Leakage of System Resources\n\nGitPython is not suited for long-running processes (like daemons) as it tends to\nleak system resources. It was written in a time where destructors (as implemented\nin the `__del__` method) still ran deterministically.\n\nIn case you still want to use it in such a context, you will want to search the\ncodebase for `__del__` implementations and call these yourself when you see fit.\n\nAnother way assure proper cleanup of resources is to factor out GitPython into a\nseparate process which can be dropped periodically.\n\n#### Windows support\n\nFor *Windows*, we do regularly test it on [Appveyor CI](https://www.appveyor.com/)\nbut not all test-cases pass - you may help improve them by exploring\n[Issue #525](https://github.com/gitpython-developers/GitPython/issues/525).\n\n### RUNNING TESTS\n\n*Important*: Right after cloning this repository, please be sure to have executed\nthe `./init-tests-after-clone.sh` script in the repository root. Otherwise\nyou will encounter test failures.\n\nOn *Windows*, make sure you have `git-daemon` in your PATH.  For MINGW-git, the `git-daemon.exe`\nexists in `Git\\mingw64\\libexec\\git-core\\`; CYGWIN has no daemon, but should get along fine\nwith MINGW's.\n\nThe easiest way to run tests is by using [tox](https://pypi.python.org/pypi/tox)\na wrapper around virtualenv. It will take care of setting up environments with the proper\ndependencies installed and execute test commands. To install it simply:\n\n    pip install tox\n\nThen run:\n\n    tox\n\n\nFor more fine-grained control, you can use `nose`.\n\n### Contributions\n\nPlease have a look at the [contributions file][contributing].\n\n### INFRASTRUCTURE\n\n* [User Documentation](http://gitpython.readthedocs.org)\n* [Questions and Answers](http://stackexchange.com/filters/167317/gitpython)\n * Please post on stackoverflow and use the `gitpython` tag\n* [Issue Tracker](https://github.com/gitpython-developers/GitPython/issues)\n  * Post reproducible bugs and feature requests as a new issue.\n    Please be sure to provide the following information if posting bugs:\n    * GitPython version (e.g. `import git; git.__version__`)\n    * Python version (e.g. `python --version`)\n    * The encountered stack-trace, if applicable\n    * Enough information to allow reproducing the issue\n\n### How to make a new release\n\n* Update/verify the **version** in the `VERSION` file\n* Update/verify that the `doc/source/changes.rst` changelog file was updated\n* Commit everything\n* Run `git tag -s <version>` to tag the version in Git\n* Run `make release`\n* Close the milestone mentioned in the _changelog_ and create a new one. _Do not reuse milestones by renaming them_.\n* set the upcoming version in the `VERSION` file, usually be\n  incrementing the patch level, and possibly by appending `-dev`. Probably you\n  want to `git push` once more.\n\n### How to verify a release\n\nPlease only use releases from `pypi` as you can verify the respective source\ntarballs.\n\nThis script shows how to verify the tarball was indeed created by the authors of\nthis project:\n\n```\ncurl https://pypi.python.org/packages/5b/38/0433c06feebbfbb51d644129dbe334031c33d55af0524326266f847ae907/GitPython-2.1.8-py2.py3-none-any.whl#md5=6b73ae86ee2dbab6da8652b2d875013a  > gitpython.whl\ncurl https://pypi.python.org/packages/5b/38/0433c06feebbfbb51d644129dbe334031c33d55af0524326266f847ae907/GitPython-2.1.8-py2.py3-none-any.whl.asc > gitpython-signature.asc\ngpg --verify gitpython-signature.asc gitpython.whl\n```\n\nwhich outputs\n\n```\ngpg: Signature made Mon Dec 11 17:34:17 2017 CET\ngpg:                using RSA key C3BC52BD76E2C23BAC6EC06A665F99FA9D99966C\ngpg:                issuer \"byronimo@gmail.com\"\ngpg: Good signature from \"Sebastian Thiel (I do trust in Rust!) <byronimo@gmail.com>\" [ultimate]\n```\n\nYou can verify that the keyid indeed matches the release-signature key provided in this\nrepository by looking at the keys details:\n\n```\ngpg --list-packets ./release-verification-key.asc\n```\n\nYou can verify that the commit adding it was also signed by it using:\n\n```\ngit show --show-signature  ./release-verification-key.asc\n```\n\nIf you would like to trust it permanently, you can import and sign it:\n\n```\ngpg --import ./release-verification-key.asc\ngpg --edit-key 88710E60\n\n> sign\n> save\n```\n\n### Projects using GitPython\n\n* [PyDriller](https://github.com/ishepard/pydriller)\n* [Kivy Designer](https://github.com/kivy/kivy-designer)\n* [Prowl](https://github.com/nettitude/Prowl)\n* [Python Taint](https://github.com/python-security/pyt)\n* [Buster](https://github.com/axitkhurana/buster)\n* [git-ftp](https://github.com/ezyang/git-ftp)\n* [Git-Pandas](https://github.com/wdm0006/git-pandas)\n* [PyGitUp](https://github.com/msiemens/PyGitUp)\n* [PyJFuzz](https://github.com/mseclab/PyJFuzz)\n* [Loki](https://github.com/Neo23x0/Loki)\n* [Omniwallet](https://github.com/OmniLayer/omniwallet)\n* [GitViper](https://github.com/BeayemX/GitViper)\n* [Git Gud](https://github.com/bthayer2365/git-gud)\n\n### LICENSE\n\nNew BSD License.  See the LICENSE file.\n\n### DEVELOPMENT STATUS\n\n[![codecov](https://codecov.io/gh/gitpython-developers/GitPython/branch/master/graph/badge.svg)](https://codecov.io/gh/gitpython-developers/GitPython)\n[![Build Status](https://travis-ci.org/gitpython-developers/GitPython.svg)](https://travis-ci.org/gitpython-developers/GitPython)\n[![Build status](https://ci.appveyor.com/api/projects/status/0f3pi3c00hajlrsd/branch/master?svg=true&passingText=windows%20OK&failingText=windows%20failed)](https://ci.appveyor.com/project/Byron/gitpython/branch/master)\n[![Code Climate](https://codeclimate.com/github/gitpython-developers/GitPython/badges/gpa.svg)](https://codeclimate.com/github/gitpython-developers/GitPython)\n[![Documentation Status](https://readthedocs.org/projects/gitpython/badge/?version=stable)](https://readthedocs.org/projects/gitpython/?badge=stable)\n[![Stories in Ready](https://badge.waffle.io/gitpython-developers/GitPython.png?label=ready&title=Ready)](https://waffle.io/gitpython-developers/GitPython)\n[![Packaging status](https://repology.org/badge/tiny-repos/python:gitpython.svg)](https://repology.org/metapackage/python:gitpython/versions)\n[![Throughput Graph](https://graphs.waffle.io/gitpython-developers/GitPython/throughput.svg)](https://waffle.io/gitpython-developers/GitPython/metrics/throughput)\n\n\nNow that there seems to be a massive user base, this should be motivation enough to let git-python\nreturn to a proper state, which means\n\n* no open pull requests\n* no open issues describing bugs\n\n[contributing]: https://github.com/gitpython-developers/GitPython/blob/master/CONTRIBUTING.md\n"}, {"repo": "/appium-boneyard/sample-code", "language": "HTML", "readme_contents": "**Refer https://github.com/appium/appium/tree/master/sample-code instead of this repository**\n\n# sample-code\n\nThis repository contains sample applications which are used mostly by appium functional tests.\n"}, {"repo": "/BlackrockDigital/startbootstrap-clean-blog-jekyll", "language": "HTML", "readme_contents": "# [Start Bootstrap - Clean Blog Jekyll](https://startbootstrap.com/template-overviews/clean-blog-jekyll/) - Official Jekyll Version\n\n[Clean Blog Jekyll](http://startbootstrap.com/template-overviews/clean-blog-jekyll/) is a stylish, responsive blog theme for [Bootstrap](http://getbootstrap.com/) created by [Start Bootstrap](http://startbootstrap.com/). This theme features a blog homepage, about page, contact page, and an example post page along with a working contact form powered by [Formspree](https://formspree.io/).\n\nThis repository holds the official Jekyll version of the Clean Blog theme on Start Bootstrap!\n\n## Preview\n\n[![Clean Blog (Jekyll) Preview](https://startbootstrap.com/assets/img/screenshots/themes/clean-blog-jekyll.png)](http://blackrockdigital.github.io/startbootstrap-clean-blog-jekyll/)\n\n**[View Live Preview](http://blackrockdigital.github.io/startbootstrap-clean-blog-jekyll/)**\n\n## Installation & Setup\n\n### Using RubyGems:\n\nWhen installing the theme using RubyGems, demo images, posts, and pages are not included. Follow the instructions below for complete setup.\n\n1. (Optional) Create a new Jekyll site: `jekyll new my-site`\n2. Replace the current theme in your `Gemfile` with `gem \"jekyll-theme-clean-blog\"`.\n3. Install the theme: `bundle install`\n4. Replace the current theme in your `_config.yml` file with `theme: jekyll-theme-clean-blog`.\n5. Build your site: `bundle exec jekyll serve`\n\nAssuming there are no errors and the site is building properly, follow these steps next:\n\n1. Create the following pages if they do not exist already (or change the extension of exisitig markdown files from `.md` to `.html`):\n   - `index.html` - set to `layout: home`\n   - `about.html` - set to `layout: page`\n   - `contact.html` - set to `layout: page`\n   - `posts/index.html` - set to `layout: page` (you will also need to create a `posts` directory)\n2. Configure the `index.html` front matter. Example:\n```\n---\nlayout: home\nbackground: '/PATH_TO_IMAGE'\n---\n```\n3. Configure the `about.html`, `contact.html`, and `posts/index.html` front matter. Example:\n```\n---\nlayout: page\ntitle: Page Title\ndescription: This is the page description.\nbackground: '/PATH_TO_IMAGE'\n---\n```\n4. For each post in the `_posts` directory, update the front matter. Example:\n```\n---\nlayout: post\ntitle: \"Post Title\"\nsubtitle: \"This is the post subtitle.\"\ndate: YYYY-MM-DD HH:MM:SS\nbackground: '/PATH_TO_IMAGE'\n---\n```\n\nFor reference, look at the [demo repository](https://github.com/BlackrockDigital/startbootstrap-clean-blog-jekyll) to see how the files are set up.\n\n5. Add the form to the `contact.html` page. Add the following code to your `contact.html` page:\n```\n<form name=\"sentMessage\" id=\"contactForm\" novalidate>\n  <div class=\"control-group\">\n    <div class=\"form-group floating-label-form-group controls\">\n      <label>Name</label>\n      <input type=\"text\" class=\"form-control\" placeholder=\"Name\" id=\"name\" required data-validation-required-message=\"Please enter your name.\">\n      <p class=\"help-block text-danger\"></p>\n    </div>\n  </div>\n  <div class=\"control-group\">\n    <div class=\"form-group floating-label-form-group controls\">\n      <label>Email Address</label>\n      <input type=\"email\" class=\"form-control\" placeholder=\"Email Address\" id=\"email\" required data-validation-required-message=\"Please enter your email address.\">\n      <p class=\"help-block text-danger\"></p>\n    </div>\n  </div>\n  <div class=\"control-group\">\n    <div class=\"form-group col-xs-12 floating-label-form-group controls\">\n      <label>Phone Number</label>\n      <input type=\"tel\" class=\"form-control\" placeholder=\"Phone Number\" id=\"phone\" required data-validation-required-message=\"Please enter your phone number.\">\n      <p class=\"help-block text-danger\"></p>\n    </div>\n  </div>\n  <div class=\"control-group\">\n    <div class=\"form-group floating-label-form-group controls\">\n      <label>Message</label>\n      <textarea rows=\"5\" class=\"form-control\" placeholder=\"Message\" id=\"message\" required data-validation-required-message=\"Please enter a message.\"></textarea>\n      <p class=\"help-block text-danger\"></p>\n    </div>\n  </div>\n  <br>\n  <div id=\"success\"></div>\n  <div class=\"form-group\">\n    <button type=\"submit\" class=\"btn btn-primary\" id=\"sendMessageButton\">Send</button>\n  </div>\n</form>\n```\n\nMake sure you have the `email` setting in your `_config.yml` file set to a working email address! Once this is set, fill out the form and then check your email, verify the email address using the link sent to you by Formspree, and then the form will be working!\n\n6. Build your site: `bundle exec jekyll serve`\n\n### Using Core Files\n\nWhen using the core files, the demo images, posts, and pages are all included with the download. After following the instructions below, you can then go and change the content of the pages and posts.\n\n1. [Download](https://github.com/BlackrockDigital/startbootstrap-clean-blog-jekyll/archive/master.zip) or Clone the repository.\n2. Update the following configuration settings in your `_config.yml` file:\n   - `baseurl`\n   - `url`\n   - `title`\n   - `email` (after setting this setting to a working email address, fill out the form on the contact page and send it - then check your email and verify the address and the form will send you messages when used)\n   - `description`\n   - `author`\n   - `twitter_username` (Optional)\n   - `facebook_username` (Optional)\n   - `github_username` (Optional)\n   - `linkedin_username` (Optional)\n3. Build your site: `bundle exec jekyll serve`\n\n## Bugs and Issues\n\nHave a bug or an issue with this template? [Open a new issue](https://github.com/BlackrockDigital/startbootstrap-clean-blog-jekyll/issues) here on GitHub!\n\n## About\n\nStart Bootstrap is an open source library of free Bootstrap templates and themes. All of the free templates and themes on Start Bootstrap are released under the MIT license, which means you can use them for any purpose, even for commercial projects.\n\n* https://startbootstrap.com\n* https://twitter.com/SBootstrap\n\nStart Bootstrap was created by and is maintained by **[David Miller](http://davidmiller.io/)**, Owner of [Blackrock Digital](http://blackrockdigital.io/).\n\n* http://davidmiller.io\n* https://twitter.com/davidmillerskt\n* https://github.com/davidtmiller\n\nStart Bootstrap is based on the [Bootstrap](http://getbootstrap.com/) framework created by [Mark Otto](https://twitter.com/mdo) and [Jacob Thorton](https://twitter.com/fat).\n\n## Copyright and License\n\nCopyright 2013-2019 Blackrock Digital LLC. Code released under the [MIT](https://github.com/BlackrockDigital/startbootstrap-clean-blog-jekyll/blob/gh-pages/LICENSE) license.\n"}, {"repo": "/omab/python-social-auth", "language": "Python", "readme_contents": "Python Social Auth\n==================\n\nPython Social Auth is an easy-to-setup social authentication/registration\nmechanism with support for several frameworks and auth providers.\n\nCrafted using base code from django-social-auth, it implements a common interface\nto define new authentication providers from third parties, and to bring support\nfor more frameworks and ORMs.\n\nDeprecation notice - 2016-12-03\n-------------------------------\n\nAs for Dec 03 2016, this library is now deprecated, the codebase was\nsplit and migrated into the `python-social-auth organization`_,\nwhere a more organized development process is expected to take place.\n\nDetails about moving towards the new setup is documented in the\n`migrating to social`_ document.\n\n.. _python-social-auth organization: https://github.com/python-social-auth\n.. _migrating to social: https://github.com/omab/python-social-auth/blob/master/MIGRATING_TO_SOCIAL.md\n"}, {"repo": "/getsentry/raven-python", "language": "Python", "readme_contents": ".. raw:: html\n\n    <p align=\"center\">\n      <a href=\"https://sentry.io\" target=\"_blank\" align=\"center\">\n        <img src=\"https://sentry-brand.storage.googleapis.com/sentry-logo-black.png\" width=\"280\">\n      </a>\n      <br>\n    </p>\n\nRaven - Sentry for Python\n=========================\n\n.. image:: https://img.shields.io/pypi/v/raven.svg\n    :target: https://pypi.python.org/pypi/raven\n    :alt: PyPi page link -- version\n\n.. image:: https://travis-ci.org/getsentry/raven-python.svg?branch=master\n    :target: https://travis-ci.org/getsentry/raven-python\n\n.. image:: https://img.shields.io/pypi/l/raven.svg\n    :target: https://pypi.python.org/pypi/raven\n    :alt: PyPi page link -- MIT licence\n\n.. image:: https://img.shields.io/pypi/pyversions/raven.svg\n    :target: https://pypi.python.org/pypi/raven\n    :alt: PyPi page link -- Python versions\n\n.. image:: https://codeclimate.com/github/getsentry/raven-python/badges/gpa.svg\n   :target: https://codeclimate.com/github/getsentry/raven-python\n   :alt: Code Climate\n\n\nRaven is the official legacy Python client for `Sentry`_, officially supports\nPython 2.6\u20132.7 & 3.3\u20133.7, and runs on PyPy and Google App Engine.\n\n**This SDK is being phased out for** `Sentry-Python <https://github.com/getsentry/sentry-python>`_.\n\nIt tracks errors and exceptions that happen during the\nexecution of your application and provides instant notification with detailed\ninformation needed to prioritize, identify, reproduce and fix each issue.\n\nIt provides full out-of-the-box support for many of the popular python frameworks, including\nDjango, and Flask. Raven also includes drop-in support for any WSGI-compatible\nweb application.\n\nYour application doesn't live on the web? No problem! Raven is easy to use in\nany Python application.\n\nFor more information, see our `Python Documentation`_ for framework integrations and other goodies.\n\n\nFeatures\n--------\n\n- Automatically report (un)handled exceptions and errors\n- Send customized diagnostic data\n- Process and sanitize data before sending it over the network\n\n\nQuickstart\n----------\n\nIt's really easy to get started with Raven. After you complete setting up a project in Sentry,\nyou\u2019ll be given a value which we call a DSN, or Data Source Name. You will need it to configure the client.\n\n\nInstall the latest package with *pip* and configure the client::\n\n    pip install raven --upgrade\n\nCreate a client and capture an example exception:\n\n.. sourcecode:: python\n\n    from raven import Client\n\n    client = Client('___DSN___')\n\n    try:\n        1 / 0\n    except ZeroDivisionError:\n        client.captureException()\n\n\nRaven Python is more than that however. Checkout our `Python Documentation`_.\n\n\nContributing\n------------\n\nRaven will continue to be maintained for bugfixes and contributions are more than welcome!  New features should only go into the new sentry-python SDK.\n\nThere are many ways to contribute:\n\n* Join in on discussions on our `Mailing List`_ or in our `IRC Channel`_.\n\n* Report bugs on our `Issue Tracker`_.\n\n* Submit a pull request!\n\n\nResources\n---------\n\n* `Sentry`_\n* `Python Documentation`_\n* `Issue Tracker`_\n* `Code`_ on Github\n* `Mailing List`_\n* `IRC Channel`_ (irc.freenode.net, #sentry)\n* `Travis CI`_\n\n.. _Sentry: https://getsentry.com/\n.. _Python Documentation: https://docs.getsentry.com/hosted/clients/python/\n.. _SDKs for other platforms: https://docs.sentry.io/#platforms\n.. _Issue Tracker: https://github.com/getsentry/raven-python/issues\n.. _Code: https://github.com/getsentry/raven-python\n.. _Mailing List: https://groups.google.com/group/getsentry\n.. _IRC Channel: irc://irc.freenode.net/sentry\n.. _Travis CI: http://travis-ci.org/getsentry/raven-python\n\n\n\n\n\nNot using Python? Check out our `SDKs for other platforms`_.\n"}, {"repo": "/jxnblk/colorable", "language": "HTML", "readme_contents": "# Colorable\n\nTake a set color palette and get contrast values for every possible combination \u2013 \nuseful for finding safe color combinations with predefined colors\nand includes pass/fail scores for the\n[WCAG accessibility guidelines](http://www.w3.org/TR/WCAG20/#visual-audio-contrast).\n\n## Getting Started\n\n```bash\nnpm i --save colorable\n```\n\n## Usage\n\nPass an array of color strings or an object with color strings as values. \n\n```js\nvar colorable = require('colorable')\n\nvar colors = {\n  red: 'red',\n  green: 'green',\n  blue: 'blue'\n}\n\nvar result = colorable(colors, { compact: true, threshold: 0 })\n```\n\nReturns an array of colors with combinations for all other colors and their\n[WCAG contrast](http://www.w3.org/TR/WCAG20/#visual-audio-contrast)\nvalues.\n\n```json\n[\n  {\n    \"hex\": \"#FF0000\",\n    \"name\": \"red\",\n    \"combinations\": [\n      {\n        \"hex\": \"#008000\",\n        \"name\": \"green\",\n        \"contrast\": 1.28483997166146,\n        \"accessibility\": {\n          \"aa\": false,\n          \"aaLarge\": false,\n          \"aaa\": false,\n          \"aaaLarge\": false\n        }\n      },\n      {\n        \"hex\": \"#0000FF\",\n        \"name\": \"blue\",\n        \"contrast\": 2.148936170212766,\n        \"accessibility\": {\n          \"aa\": false,\n          \"aaLarge\": false,\n          \"aaa\": false,\n          \"aaaLarge\": false\n        }\n      }\n    ]\n  },\n  ...\n]\n```\n\n### Accessibility object\n\nEach key is a boolean value indicating if the color contrast meets the following criteria:\n- `aa` - greater than 4.5 (for normal sized text)\n- `aaLarge` - greater than 3 ([for bold text or text larger than 24px](http://www.w3.org/TR/WCAG20/#larger-scaledef))\n- `aaa` - greater than 7 \n- `aaaLarge` - greater than 4.5 \n\n---\n\n## Options\n\n### `compact`\n\n_Type: Boolean (default: `false`)_\n\nIf set to `true`, the result will be a smaller object that only includes hex value color strings, a name for each color (if an object is passed to the function), contrast, and accessibility values.\nWhen set to `false`, the result also includes the entire [harthur/color](https://www.npmjs.com/package/color) object for each color, which includes other properties and methods for color manipulation.\n\n### `threshold`\n\n_Type: Number (default: `0`)_\n\nWhen set, the colorable function only returns combinations that have a contrast above this value. This is useful for only seeing combinations that pass a minimum contrast level.\n\n### `uniq`\n\n_Type: Boolean (default: true)_\n\nWhen set to `true`, the array of colors is passed through lodash.uniq to remove duplicates.\n\n\n---\n\nMIT License\n\n"}, {"repo": "/dianping/cat", "language": "Java", "readme_contents": "<img src=\"https://github.com/dianping/cat/raw/master/cat-home/src/main/webapp/images/logo/cat_logo03.png\" width=\"50%\">\n\n**CAT**\n [![GitHub stars](https://img.shields.io/github/stars/dianping/cat.svg?style=social&label=Star&)](https://github.com/dianping/cat/stargazers)\n [![GitHub forks](https://img.shields.io/github/forks/dianping/cat.svg?style=social&label=Fork&)](https://github.com/dianping/cat/fork)\n\n### CAT \u7b80\u4ecb \n\n- CAT \u662f\u57fa\u4e8e Java \u5f00\u53d1\u7684\u5b9e\u65f6\u5e94\u7528\u76d1\u63a7\u5e73\u53f0\uff0c\u4e3a\u7f8e\u56e2\u70b9\u8bc4\u63d0\u4f9b\u4e86\u5168\u9762\u7684\u5b9e\u65f6\u76d1\u63a7\u544a\u8b66\u670d\u52a1\u3002\n- CAT \u4f5c\u4e3a\u670d\u52a1\u7aef\u9879\u76ee\u57fa\u7840\u7ec4\u4ef6\uff0c\u63d0\u4f9b\u4e86 Java, C/C++, Node.js, Python, Go \u7b49\u591a\u8bed\u8a00\u5ba2\u6237\u7aef\uff0c\u5df2\u7ecf\u5728\u7f8e\u56e2\u70b9\u8bc4\u7684\u57fa\u7840\u67b6\u6784\u4e2d\u95f4\u4ef6\u6846\u67b6\uff08MVC\u6846\u67b6\uff0cRPC\u6846\u67b6\uff0c\u6570\u636e\u5e93\u6846\u67b6\uff0c\u7f13\u5b58\u6846\u67b6\u7b49\uff0c\u6d88\u606f\u961f\u5217\uff0c\u914d\u7f6e\u7cfb\u7edf\u7b49\uff09\u6df1\u5ea6\u96c6\u6210\uff0c\u4e3a\u7f8e\u56e2\u70b9\u8bc4\u5404\u4e1a\u52a1\u7ebf\u63d0\u4f9b\u7cfb\u7edf\u4e30\u5bcc\u7684\u6027\u80fd\u6307\u6807\u3001\u5065\u5eb7\u72b6\u51b5\u3001\u5b9e\u65f6\u544a\u8b66\u7b49\u3002\n- CAT \u5f88\u5927\u7684\u4f18\u52bf\u662f\u5b83\u662f\u4e00\u4e2a\u5b9e\u65f6\u7cfb\u7edf\uff0cCAT \u5927\u90e8\u5206\u7cfb\u7edf\u662f\u5206\u949f\u7ea7\u7edf\u8ba1\uff0c\u4f46\u662f\u4ece\u6570\u636e\u751f\u6210\u5230\u670d\u52a1\u7aef\u5904\u7406\u7ed3\u675f\u662f\u79d2\u7ea7\u522b\uff0c\u79d2\u7ea7\u5b9a\u4e49\u662f48\u5206\u949f40\u79d2\uff0c\u57fa\u672c\u4e0a\u770b\u523048\u5206\u949f38\u79d2\u6570\u636e\uff0c\u6574\u4f53\u62a5\u8868\u7684\u7edf\u8ba1\u7c92\u5ea6\u662f\u5206\u949f\u7ea7\uff1b\u7b2c\u4e8c\u4e2a\u4f18\u52bf\uff0c\u76d1\u63a7\u6570\u636e\u662f\u5168\u91cf\u7edf\u8ba1\uff0c\u5ba2\u6237\u7aef\u9884\u8ba1\u7b97\uff1b\u94fe\u8def\u6570\u636e\u662f\u91c7\u6837\u8ba1\u7b97\u3002\n\n### Cat \u4ea7\u54c1\u4ef7\u503c\n\n- \u51cf\u5c11\u6545\u969c\u53d1\u73b0\u65f6\u95f4\n- \u964d\u4f4e\u6545\u969c\u5b9a\u4f4d\u6210\u672c\n- \u8f85\u52a9\u5e94\u7528\u7a0b\u5e8f\u4f18\u5316\n\n### Cat \u4f18\u52bf\n\n- \u5b9e\u65f6\u5904\u7406\uff1a\u4fe1\u606f\u7684\u4ef7\u503c\u4f1a\u968f\u65f6\u95f4\u9510\u51cf\uff0c\u5c24\u5176\u662f\u4e8b\u6545\u5904\u7406\u8fc7\u7a0b\u4e2d\n- \u5168\u91cf\u6570\u636e\uff1a\u5168\u91cf\u91c7\u96c6\u6307\u6807\u6570\u636e\uff0c\u4fbf\u4e8e\u6df1\u5ea6\u5206\u6790\u6545\u969c\u6848\u4f8b\n- \u9ad8\u53ef\u7528\uff1a\u6545\u969c\u7684\u8fd8\u539f\u4e0e\u95ee\u9898\u5b9a\u4f4d\uff0c\u9700\u8981\u9ad8\u53ef\u7528\u76d1\u63a7\u6765\u652f\u6491\n- \u6545\u969c\u5bb9\u5fcd\uff1a\u6545\u969c\u4e0d\u5f71\u54cd\u4e1a\u52a1\u6b63\u5e38\u8fd0\u8f6c\u3001\u5bf9\u4e1a\u52a1\u900f\u660e\n- \u9ad8\u541e\u5410\uff1a\u6d77\u91cf\u76d1\u63a7\u6570\u636e\u7684\u6536\u96c6\uff0c\u9700\u8981\u9ad8\u541e\u5410\u80fd\u529b\u505a\u4fdd\u8bc1\n- \u53ef\u6269\u5c55\uff1a\u652f\u6301\u5206\u5e03\u5f0f\u3001\u8de8 IDC \u90e8\u7f72\uff0c\u6a2a\u5411\u6269\u5c55\u7684\u76d1\u63a7\u7cfb\u7edf\n\n### \u66f4\u65b0\u65e5\u5fd7\n\n- [**\u6700\u65b0\u7248\u672c\u7279\u6027\u4e00\u89c8**](https://github.com/dianping/cat/wiki/new)\n\n    - \u6ce8\u610fcat\u76843.0\u4ee3\u7801\u5206\u652f\u66f4\u65b0\u90fd\u53d1\u5e03\u5728master\u4e0a\uff0c\u5305\u62ec\u6700\u65b0\u6587\u6863\u4e5f\u90fd\u662f\u8fd9\u4e2a\u5206\u652f\n    - \u6ce8\u610f\u6587\u6863\u8bf7\u7528\u6700\u65b0master\u91cc\u9762\u7684\u4ee3\u7801\u6587\u6863\u4f5c\u4e3a\u6807\u51c6\uff0c\u4e00\u4e9b\u5f00\u6e90\u7f51\u7ad9\u4e0a\u9762\u4e00\u4e9b\u8001\u7248\u672c\u7684\u4e00\u4e9b\u914d\u7f6e\u5305\u62ec\u6570\u636e\u5e93\u7b49\u53ef\u80fd\u9047\u5230\u4e0d\u517c\u5bb9\u60c5\u51b5\uff0c\u8bf7\u4ee5master\u4ee3\u7801\u4e3a\u51c6\uff0c\u8fd9\u4efd\u6587\u6863\u90fd\u662f\u7f8e\u56e2\u70b9\u8bc4\u5185\u90e8\u540c\u5b66\u4e3a\u8fd9\u4e2a\u7248\u672c\u7edf\u4e00\u6574\u7406\u6c47\u603b\u3002\u5185\u90e8\u540c\u5b66\u5df2\u7ecf\u6838\u5bf9\uff0c\u5305\u62ec\u4e5f\u9a8c\u8bc1\u8fc7\uff0c\u5982\u679c\u9047\u5230\u4e00\u4e9b\u770b\u4e0d\u61c2\uff0c\u6216\u8005\u6a21\u7cca\u7684\u5730\u65b9\uff0c\u6b22\u8fce\u63d0\u4ea4PR\u3002\n    - \u591a\u8bed\u8a00\u5ba2\u6237\u7aef\uff1aJava\u3001C/C++\u3001Node.js\u3001Python\u3001Go [\u4f20\u9001\u95e8](https://github.com/dianping/cat/tree/master/lib)\n        \n        * [**Java**](https://github.com/dianping/cat/blob/master/lib/java)\n        * [**C**](https://github.com/dianping/cat/blob/master/lib/c)\n        * [**C++**](https://github.com/dianping/cat/blob/master/lib/cpp)\n        * [**Python**](https://github.com/dianping/cat/blob/master/lib/python)\n        * [**Go**](https://github.com/dianping/cat/blob/master/lib/go)\n        * [**Node.js**](https://github.com/dianping/cat/blob/master/lib/node.js)\n        \n    - \u6d88\u606f\u91c7\u6837\u805a\u5408\n    - \u5e8f\u5217\u5316\u534f\u8bae\u5347\u7ea7\n    - \u5168\u65b0\u6587\u4ef6\u5b58\u50a8\u5f15\u64ce\n   \n\n### \u76d1\u63a7\u6a21\u578b\uff1a\n\n\u652f\u6301 Transaction\u3001Event\u3001Heartbeat\u3001Metric \u56db\u79cd\u6d88\u606f\u6a21\u578b\u3002 [**\u6a21\u578b\u8bbe\u8ba1**](https://github.com/dianping/cat/wiki/model)\n\n### \u6a21\u5757\u7b80\u4ecb\n\n#### \u529f\u80fd\u6a21\u5757\n\n- cat-client: \u5ba2\u6237\u7aef\uff0c\u4e0a\u62a5\u76d1\u63a7\u6570\u636e\n- cat-consumer: \u670d\u52a1\u7aef\uff0c\u6536\u96c6\u76d1\u63a7\u6570\u636e\u8fdb\u884c\u7edf\u8ba1\u5206\u6790\uff0c\u6784\u5efa\u4e30\u5bcc\u7684\u7edf\u8ba1\u62a5\u8868\n- cat-alarm: \u5b9e\u65f6\u544a\u8b66\uff0c\u63d0\u4f9b\u62a5\u8868\u6307\u6807\u7684\u76d1\u63a7\u544a\u8b66\n- cat-hadoop: \u6570\u636e\u5b58\u50a8\uff0clogview \u5b58\u50a8\u81f3 Hdfs\n- cat-home: \u7ba1\u7406\u7aef\uff0c\u62a5\u8868\u5c55\u793a\u3001\u914d\u7f6e\u7ba1\u7406\u7b49\n\n> 1. \u6839\u76ee\u5f55\u4e0b cat-client \u6a21\u5757\u4ee5\u540e\u4e0d\u518d\u7ef4\u62a4\uff0c\u4e0b\u4e2a\u5927\u7248\u672c\u66f4\u65b0\u8ba1\u5212\u79fb\u9664\u3002\u65b0\u7248Java\u5ba2\u6237\u7aef\u53c2\u8003\uff1alib/java\n> 2. \u7ba1\u7406\u7aef\u3001\u670d\u52a1\u7aef\u3001\u544a\u8b66\u670d\u52a1\u5747\u4f7f\u7528 cat-home \u6a21\u5757\u90e8\u7f72\u5373\u53ef\n\n#### \u5176\u4ed6\u6a21\u5757\n\n- integration\uff1acat\u548c\u4e00\u4e9b\u7b2c\u4e09\u65b9\u5de5\u5177\u96c6\u6210\u7684\u5185\u5bb9\uff08\u6b64\u90e8\u5206\u4e00\u90e8\u5206\u662f\u7531\u793e\u533a\u8d21\u732e\uff0c\u4e00\u90e8\u5206\u5b98\u65b9\u8d21\u732e\uff09\n- lib\uff1aCAT \u7684\u5ba2\u6237\u7aef\uff0c\u5305\u62ec Java\u3001C/C++\u3001Python\u3001Node.js\u3001Go\n- script\uff1aCAT \u6570\u636e\u5e93\u811a\u672c\n\n### Quick Start\n\n- [\u90e8\u7f72FAQ](https://github.com/dianping/cat/wiki/cat_faq)\n\n#### \u670d\u52a1\u7aef\n\n- [\u96c6\u7fa4\u90e8\u7f72](https://github.com/dianping/cat/wiki/readme_server)\n- [\u62a5\u8868\u4ecb\u7ecd](https://github.com/dianping/cat/wiki/readme_report)\n- [\u914d\u7f6e\u624b\u518c](https://github.com/dianping/cat/wiki/readme_config)\n\n### \u9879\u76ee\u8bbe\u8ba1\n\n- [\u9879\u76ee\u67b6\u6784](https://github.com/dianping/cat/wiki/overall)\n- [\u5ba2\u6237\u7aef\u8bbe\u8ba1](https://github.com/dianping/cat/wiki/client)\n- [\u670d\u52a1\u7aef\u8bbe\u8ba1](https://github.com/dianping/cat/wiki/server)\n- [\u6a21\u578b\u8bbe\u8ba1](https://github.com/dianping/cat/wiki/model)\n\n### Copyright and License\n\n[Apache 2.0 License.](/LICENSE)\n\n### CAT \u63a5\u5165\u516c\u53f8\n\n![Alt text](cat-home/src/main/webapp/images/logo/companys.png)\n\n\u66f4\u591a\u63a5\u5165\u516c\u53f8\uff0c\u6b22\u8fce\u5728 <https://github.com/dianping/cat/issues/753> \u767b\u8bb0\n\n### \u8054\u7cfb\u6211\u4eec\n\n\u6211\u4eec\u9700\u8981\u77e5\u9053\u4f60\u5bf9Cat\u7684\u4e00\u4e9b\u770b\u6cd5\u4ee5\u53ca\u5efa\u8bae\uff1a\n\n- Mail: cat@dianping.com\uff0c\n- [**Issues**](https://github.com/dianping/cat/issues)\n"}, {"repo": "/cryogen-project/cryogen", "language": "HTML", "readme_contents": "<img src=\"https://raw.githubusercontent.com/lacarmen/cryogen/master/cryogen.png\"\n hspace=\"20\" align=\"left\" height=\"200\"/>\n\n<!-- Non-breaking space -->\n&nbsp;\n\nThis ReadMe only documents a subset of Cryogen's features. For additional documentation please see the [cryogen site](http://cryogenweb.org).\n\n<!-- Non-breaking space -->\n&nbsp;\n\n\n## Features\n\n* Blog posts and pages with Markdown (default) or AsciiDoc\n* Tags\n* Table of contents generation\n* Plain HTML page templates\n* Code syntax highlighting\n* Disqus support\n* Sitemap generation\n* RSS feed generation\n* Sass/SCSS compilation\n* Klipse Integration\n\n## Prerequisites\n\nYou will need [Leiningen][1] 2.5.0 or above installed.\n\n[1]: https://github.com/technomancy/leiningen\n\n## Usage\n\n### Creating a New Site\n\nA new site can be created using the Cryogen template as follows:\n\n```\nlein new cryogen my-blog\n```\n\n### Running the Server\n\nThe web server can be started from the `my-blog` directory using the `lein-ring` plugin:\n\n```\nlein ring server\n```\n\nThe server will watch for changes in the `content` and `themes` folders and recompile the content automatically.\n\nYou can also generate the content without bringing up a server via:\n\n```\nlein run\n```\n\n### Site Configuration\n\nThe site configuration file is found at `content/config.edn`, this file looks as follows:\n\n```clojure\n{:site-title                   \"My Awesome Blog\"\n :author                       \"Bob Bobbert\"\n :description                  \"This blog is awesome\"\n :site-url                     \"http://blogawesome.com/\"\n :post-root                    \"posts\"\n :page-root                    \"pages\"\n :post-root-uri                \"posts-output\"\n :page-root-uri                \"pages-output\"\n :tag-root-uri                 \"tags-output\"\n :author-root-uri              \"authors-output\"\n :public-dest                  \"public\"\n :blog-prefix                  \"/blog\"\n :rss-name                     \"feed.xml\"\n :rss-filters                  [\"cryogen\"]\n :recent-posts                 3\n :post-date-format             \"yyyy-MM-dd\"\n :archive-group-format         \"yyyy MMMM\"\n :sass-src                     []\n :sass-path                    \"sass\"\n :theme                        \"blue\"\n :resources                    [\"img\"]\n :keep-files                   [\".git\"]\n :disqus?                      false\n :disqus-shortname             \"\"\n :ignored-files                [#\"\\.#.*\" #\".*\\.swp$\"]\n :previews?                    false\n :posts-per-page               5\n :blocks-per-preview           2\n :clean-urls                   :trailing-slash\n :collapse-subdirs?            false\n :hide-future-posts?           true\n :klipse                       {}\n :description-include-elements #{:p :h1 :h2 :h3 :h4 :h5 :h6}\n :debug?                       false}\n```\n\nFor information about each key please see the [\"Configuration\"](http://cryogenweb.org/docs/configuration.html) portion of the Cryogen documentation site.\n\n### Switching between Markdown and AsciiDoc\n\nCryogen comes with Markdown support as default. If you want to use AsciiDoc instead, open the `project.clj` in your created blog (e.g. `my-blog`), and change the line in `:dependencies` that says `cryogen-markdown` to `cryogen-asciidoc`.\nInstead of looking for files ending in `.md` in the `content/md` directory, the compiler will now look for files ending in `.asc` in the `content/asc` directory.\n\n### Selecting a Theme\n\nThe Cryogen template comes with three themes in the `themes` folder. To change your blog's theme, change the value of the `:theme` key in `config.edn`. Note that the Nucleus theme is obtained from [downloadwebsitetemplates.co.uk](http://www.downloadwebsitetemplates.co.uk/template/nucleus/) that requires you to keep the footer, unless you make a donation on their website.\n\n### Customizing Layouts\n\nCryogen uses [Selmer](https://github.com/yogthos/Selmer) templating engine for layouts. Please refer to its documentation to see the supported tags and filters for the layouts.\n\nThe layouts are contained in the `themes/{theme}/html` folder of the project. By default, the `base.html` layout is used to provide the general layout for the site. This is where you would add static resources such as CSS and JavaScript assets as well as define headers and footers for your site.\n\nEach page layout should have a name that matches the `:layout` key in the page metadata and end with `.html`. Page layouts extend the base layout and should only contain the content relaveant to the page inside the `content` block.\nFor example, the `tag` layout is located in `tag.html` and looks as follows:\n\n```xml\n{% extends \"/html/base.html\" %}\n{% block content %}\n<div id=\"posts-by-tag\">\n    <h2>Posts tagged {{name}}</h2>\n    <ul>\n    {% for post in posts %}\n        <li>\n            <a href=\"{{post.uri}}\">{{post.title}}</a>\n        </li>\n    {% endfor %}\n    </ul>\n</div>\n{% endblock %}\n```\n\n### Code Syntax Highlighting\n\nCryogen uses [Highlight.js](https://highlightjs.org/) for code syntax highlighting. You can add more languages by replacing `themes/{theme}/js/highlight.pack.js` with a customized package from [here](https://highlightjs.org/download/).\n\nThe ` initHighlightingOnLoad` function is called in `themes/{theme}/html/base.html`.\n\n```xml\n<script>hljs.initHighlightingOnLoad();</script>\n```\n\n## Deploying Your Site\n\nThe generated static content will be found under the `public` folder. Simply copy the content to a static\nfolder for a server such as Nginx or Apache and your site is now ready for service.\n\nA sample Nginx configuration that's placed in `/etc/nginx/sites-available/default` can be seen below:\n\n```javascript\nserver {\n  listen 80 default_server;\n  listen [::]:80 default_server ipv6only=on;\n  server_name localhost <yoursite.com> <www.yoursite.com>;\n\n  access_log  /var/log/blog_access.log;\n  error_log   /var/log/blog_error.log;\n\n  location / {\n    alias       /var/blog/;\n    error_page  404 = /404.html;\n  }\n}\n```\n\nSimply set `yoursite.com` to the domain of your site in the above configuration and\nensure the static content is available at `/var/blog/`. Finally, place your custom error page\nin the `/var/blog/404.html` file.\n\nMore information on deployment can be found [here](http://cryogenweb.org/docs/deploying-to-github-pages.html).\n\n## Third Party Libraries\n\n#### https://github.com/greywolve/cryogen-markdown-external\n\nA Clojure library to provide Markdown rendering to the cryogen-core compiler by using an external command/program, such as pandoc.\n\n\n\n## Some Sites Made With Cryogen\n\n* [My personal blog](http://carmen.la/blog/archives)\n* [Cryogen Documentation Site](http://cryogenweb.org)\n* [Yogthos' blog](http://yogthos.net/)\n* [Chad Stovern's blog](http://www.chadstovern.com)\n* [szcz](http://www.szcz.org/)\n* [ISvit blog](https://blog.isvit.info)\n* [Lambda Funk](http://lambdafunk.com)\n* [DDFT.wiki](https://ddft.wiki)\n* [Ampersanda's blog](https://ampersanda.dev)\n* [irrelevancy universe](https://irrelevancy.neocities.org)\n\n## License\n\nCopyright \u00a9 2014-2017 Carmen La\n\nDistributed under the Eclipse Public License, the same as Clojure.\n"}, {"repo": "/grangier/python-goose", "language": "HTML", "readme_contents": "Python-Goose - Article Extractor |Build Status|\n===============================================\n\nIntro\n-----\n\nGoose was originally an article extractor written in Java that has most\nrecently (Aug2011) been converted to a `scala project <https://github.com/GravityLabs/goose>`_.\n\nThis is a complete rewrite in Python. The aim of the software is to\ntake any news article or article-type web page and not only extract what\nis the main body of the article but also all meta data and most probable\nimage candidate.\n\nGoose will try to extract the following information:\n\n-  Main text of an article\n-  Main image of article\n-  Any YouTube/Vimeo movies embedded in article\n-  Meta Description\n-  Meta tags\n\nThe Python version was rewritten by:\n\n-  Xavier Grangier\n\nLicensing\n---------\n\nIf you find Goose useful or have issues please drop me a line. I'd love\nto hear how you're using it or what features should be improved.\n\nGoose is licensed by Gravity.com under the Apache 2.0 license; see the\nLICENSE file for more details.\n\nSetup\n-----\n\n::\n\n    mkvirtualenv --no-site-packages goose\n    git clone https://github.com/grangier/python-goose.git\n    cd python-goose\n    pip install -r requirements.txt\n    python setup.py install\n\nTake it for a spin\n------------------\n\n::\n\n    >>> from goose import Goose\n    >>> url = 'http://edition.cnn.com/2012/02/22/world/europe/uk-occupy-london/index.html?hpt=ieu_c2'\n    >>> g = Goose()\n    >>> article = g.extract(url=url)\n    >>> article.title\n    u'Occupy London loses eviction fight'\n    >>> article.meta_description\n    \"Occupy London protesters who have been camped outside the landmark St. Paul's Cathedral for the past four months lost their court bid to avoid eviction Wednesday in a decision made by London's Court of Appeal.\"\n    >>> article.cleaned_text[:150]\n    (CNN) -- Occupy London protesters who have been camped outside the landmark St. Paul's Cathedral for the past four months lost their court bid to avoi\n    >>> article.top_image.src\n    http://i2.cdn.turner.com/cnn/dam/assets/111017024308-occupy-london-st-paul-s-cathedral-story-top.jpg\n\nConfiguration\n-------------\n\nThere are two ways to pass configuration to goose. The first one is to\npass goose a Configuration() object. The second one is to pass a\nconfiguration dict.\n\nFor instance, if you want to change the userAgent used by Goose just\npass:\n\n::\n\n    >>> g = Goose({'browser_user_agent': 'Mozilla'})\n\nSwitching parsers : Goose can now be used with lxml html parser or lxml\nsoup parser. By default the html parser is used. If you want to use the\nsoup parser pass it in the configuration dict :\n\n::\n\n    >>> g = Goose({'browser_user_agent': 'Mozilla', 'parser_class':'soup'})\n\nGoose is now language aware\n---------------------------\n\nFor example, scraping a Spanish content page with correct meta language\ntags:\n\n::\n\n    >>> from goose import Goose\n    >>> url = 'http://sociedad.elpais.com/sociedad/2012/10/27/actualidad/1351332873_157836.html'\n    >>> g = Goose()\n    >>> article = g.extract(url=url)\n    >>> article.title\n    u'Las listas de espera se agravan'\n    >>> article.cleaned_text[:150]\n    u'Los recortes pasan factura a los pacientes. De diciembre de 2010 a junio de 2012 las listas de espera para operarse aumentaron un 125%. Hay m\\xe1s ciudad'\n\nSome pages don't have correct meta language tags, you can force it using\nconfiguration :\n\n::\n\n    >>> from goose import Goose\n    >>> url = 'http://www.elmundo.es/elmundo/2012/10/28/espana/1351388909.html'\n    >>> g = Goose({'use_meta_language': False, 'target_language':'es'})\n    >>> article = g.extract(url=url)\n    >>> article.cleaned_text[:150]\n    u'Importante golpe a la banda terrorista ETA en Francia. La Guardia Civil ha detenido en un hotel de Macon, a 70 kil\\xf3metros de Lyon, a Izaskun Lesaka y '\n\nPassing {'use\\_meta\\_language': False, 'target\\_language':'es'} will\nforcibly select Spanish.\n\n\nVideo extraction\n----------------\n\n::\n\n    >>> import goose\n    >>> url = 'http://www.liberation.fr/politiques/2013/08/12/journee-de-jeux-pour-ayrault-dans-les-jardins-de-matignon_924350'\n    >>> g = goose.Goose({'target_language':'fr'})\n    >>> article = g.extract(url=url)\n    >>> article.movies\n    [<goose.videos.videos.Video object at 0x25f60d0>]\n    >>> article.movies[0].src\n    'http://sa.kewego.com/embed/vp/?language_code=fr&playerKey=1764a824c13c&configKey=dcc707ec373f&suffix=&sig=9bc77afb496s&autostart=false'\n    >>> article.movies[0].embed_code\n    '<iframe src=\"http://sa.kewego.com/embed/vp/?language_code=fr&amp;playerKey=1764a824c13c&amp;configKey=dcc707ec373f&amp;suffix=&amp;sig=9bc77afb496s&amp;autostart=false\" frameborder=\"0\" scrolling=\"no\" width=\"476\" height=\"357\"/>'\n    >>> article.movies[0].embed_type\n    'iframe'\n    >>> article.movies[0].width\n    '476'\n    >>> article.movies[0].height\n    '357'\n\n\nGoose in Chinese\n----------------\n\nSome users want to use Goose for Chinese content. Chinese word\nsegmentation is way more difficult to deal with than occidental\nlanguages. Chinese needs a dedicated StopWord analyser that need to be\npassed to the config object.\n\n::\n\n    >>> from goose import Goose\n    >>> from goose.text import StopWordsChinese\n    >>> url  = 'http://www.bbc.co.uk/zhongwen/simp/chinese_news/2012/12/121210_hongkong_politics.shtml'\n    >>> g = Goose({'stopwords_class': StopWordsChinese})\n    >>> article = g.extract(url=url)\n    >>> print article.cleaned_text[:150]\n    \u9999\u6e2f\u884c\u653f\u957f\u5b98\u6881\u632f\u82f1\u5728\u5404\u65b9\u538b\u529b\u4e0b\u5c31\u5176\u5927\u5b85\u7684\u8fdd\u7ae0\u5efa\u7b51\uff08\u50ed\u5efa\uff09\u95ee\u9898\u5230\u7acb\u6cd5\u4f1a\u63a5\u53d7\u8d28\u8be2\uff0c\u5e76\u5411\u9999\u6e2f\u6c11\u4f17\u9053\u6b49\u3002\n\n    \u6881\u632f\u82f1\u5728\u661f\u671f\u4e8c\uff0812\u670810\u65e5\uff09\u7684\u7b54\u95ee\u5927\u4f1a\u5f00\u59cb\u4e4b\u9645\u5728\u5176\u6f14\u8bf4\u4e2d\u9053\u6b49\uff0c\u4f46\u5f3a\u8c03\u4ed6\u5728\u8fdd\u7ae0\u5efa\u7b51\u95ee\u9898\u4e0a\u6ca1\u6709\u9690\u7792\u7684\u610f\u56fe\u548c\u52a8\u673a\u3002\n\n    \u4e00\u4e9b\u4eb2\u5317\u4eac\u9635\u8425\u8bae\u5458\u6b22\u8fce\u6881\u632f\u82f1\u9053\u6b49\uff0c\u4e14\u8ba4\u4e3a\u5e94\u80fd\u83b7\u5f97\u9999\u6e2f\u6c11\u4f17\u63a5\u53d7\uff0c\u4f46\u8fd9\u4e9b\u8bae\u5458\u4e5f\u8d28\u95ee\u6881\u632f\u82f1\u6709\n\nGoose in Arabic\n---------------\n\nIn order to use Goose in Arabic you have to use the StopWordsArabic\nclass.\n\n::\n\n    >>> from goose import Goose\n    >>> from goose.text import StopWordsArabic\n    >>> url = 'http://arabic.cnn.com/2013/middle_east/8/3/syria.clashes/index.html'\n    >>> g = Goose({'stopwords_class': StopWordsArabic})\n    >>> article = g.extract(url=url)\n    >>> print article.cleaned_text[:150]\n    \u062f\u0645\u0634\u0642\u060c \u0633\u0648\u0631\u064a\u0627 (CNN) -- \u0623\u0643\u062f\u062a \u062c\u0647\u0627\u062a \u0633\u0648\u0631\u064a\u0629 \u0645\u0639\u0627\u0631\u0636\u0629 \u0623\u0646 \u0641\u0635\u0627\u0626\u0644 \u0645\u0633\u0644\u062d\u0629 \u0645\u0639\u0627\u0631\u0636\u0629 \u0644\u0646\u0638\u0627\u0645 \u0627\u0644\u0631\u0626\u064a\u0633 \u0628\u0634\u0627\u0631 \u0627\u0644\u0623\u0633\u062f \u0648\u0639\u0644\u0649 \u0635\u0644\u0629 \u0628\u0640\"\u0627\u0644\u062c\u064a\u0634 \u0627\u0644\u062d\u0631\" \u062a\u0645\u0643\u0646\u062a \u0645\u0646 \u0627\u0644\u0633\u064a\u0637\u0631\u0629 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u062f\u0639\u0627\u062a \u0644\u0644\u0623\u0633\u0644\n\n\nGoose in Korean\n----------------\n\nIn order to use Goose in Korean you have to use the StopWordsKorean\nclass.\n\n::\n\n    >>> from goose import Goose\n    >>> from goose.text import StopWordsKorean\n    >>> url='http://news.donga.com/3/all/20131023/58406128/1'\n    >>> g = Goose({'stopwords_class':StopWordsKorean})\n    >>> article = g.extract(url=url)\n    >>> print article.cleaned_text[:150]\n    \uacbd\uae30\ub3c4 \uc6a9\uc778\uc5d0 \uc790\ub9ac \uc7a1\uc740 \ubbfc\uac04 \uc2dc\ud5d8\uc778\uc99d \uc804\ubb38\uae30\uc5c5 \u321c\ub514\uc9c0\ud138\uc774\uc5e0\uc528(www.digitalemc.com). \n    14\ub144\uc9f8 \uc138\uacc4 \uac01\uad6d\uc758 \ud1b5\uc2e0\u00b7\uc548\uc804\u00b7\uc804\ud30c \uaddc\uaca9 \uc2dc\ud5d8\uacfc \uc778\uc99d \ud55c \uc6b0\ubb3c\ub9cc \ud30c\uace0 \uc788\ub294 \uc774 \ud68c\uc0ac \ubc15\ucc44\uaddc \ub300\ud45c\uac00 \ub9cc\ub098\uae30\ub85c \ud55c \uc8fc\uc778\uacf5\uc774\ub2e4. \n    \uadf8\ub294 \uc804\uae30\uc804\uc790\u00b7\ubb34\uc120\ud1b5\uc2e0\u00b7\uc790\ub3d9\ucc28 \uc804\uc7a5\ud488 \ubd84\uc57c\uc5d0\n\n\nKnown issues\n------------\n\n- There are some issues with unicode URLs.\n- Cookie handling : Some websites need cookie handling. At the moment the only work around is to use the raw_html extraction. For instance:\n\n    >>> import urllib2\n    >>> import goose\n    >>> url = \"http://www.nytimes.com/2013/08/18/world/middleeast/pressure-by-us-failed-to-sway-egypts-leaders.html?hp\"\n    >>> opener = urllib2.build_opener(urllib2.HTTPCookieProcessor())\n    >>> response = opener.open(url)\n    >>> raw_html = response.read()\n    >>> g = goose.Goose()\n    >>> a = g.extract(raw_html=raw_html)\n    >>> a.cleaned_text\n    u'CAIRO \\u2014 For a moment, at least, American and European diplomats trying to defuse the volatile standoff in Egypt thought they had a breakthrough.\\n\\nAs t'\n\nTODO\n----\n\n-  Video html5 tag extraction\n\n\n.. |Build Status| image:: https://travis-ci.org/grangier/python-goose.png?branch=develop   :target: https://travis-ci.org/grangier/python-goose\n"}, {"repo": "/wesbos/css-grid", "language": "HTML", "readme_contents": "![](https://res.cloudinary.com/wesbos/image/upload/v1515524452/GRID-social-share_wlfzk3.png)\n\n# CSS Grid Video Course\n\nHey! These are the starter files and finished solutions. Grab the full course over at [CSSGrid.io](https://CSSGrid.io).\n\n## Course FAQ\n\n### Q: I'm getting Browsersync Couldn't open browser (if you are using BrowserSync in a headless environment, you might want to set the open option to false)\n\nThis is because some versions of Firefox are \"FirefoxDeveloperEdition\" and some new downloads are \"Firefox Developer Edition\". If you had downloaded the browser before the course, just remove the spaces from the package.json command so it says \"FirefoxDeveloperEdition\"\n\n### Q: I can't see the lines / numbers of Firefox' CSS Grid Inspection Tools\n\nMake sure to turn off both \"Use recommended performance settings\" & \"Use hardware acceleration when available\u201c within Preferences > Performance\n\n## Community CSS Grid Content\n\nFeel free to submit a PR adding a link to your own recaps, guides or reviews!\n\n* [Course Review](https://www.bencodezen.io/blog/review-css-grid-with-wes-bos/) by [@bencodezen](https://www.twitter.com/bencodezen)\n* [Recap and lessons learned](https://marcokuehbauch.com/blog/2018/learning-css-grid/) by [@mkuehb](https://twitter.com/Mkuehb)\n\n## A note on Pull Requests\n\nThese are meant to be 1:1 copies of what is done in the video. If you found a better / different way to do things, great, but I will be keeping them the same as the videos.\n\nThe starter files + solutions will be updated if/when the videos are updated.\n\nThanks!\n\n## Live editable examples\n\nI recommend you use the files in the repo, but if you prefer to use JSFiddle instead, here are all the starter files ready to go:\n\n02. [Starter Files and Tooling Setup](https://jsfiddle.net/6qvwur9q/)\n03. [CSS Grid Fundamentals](https://jsfiddle.net/qxxpgg4j/)\n04. [CSS Grid Dev Tools](https://jsfiddle.net/b55x8vh2/)\n05. [CSS Grid Implicit vs Explicit Tracks](https://jsfiddle.net/mon8xdgb/)\n06. [CSS grid-auto-flow Explained](https://jsfiddle.net/Loq4uj16/)\n07. [Sizing tracks in CSS Grid](https://jsfiddle.net/q8h3r8yb/)\n08. [CSS Grid repeat function](https://jsfiddle.net/8f8xyx86/)\n09. [Sizing Grid Items](https://jsfiddle.net/wqs6tcuk/)\n10. [Placing Grid Items](https://jsfiddle.net/hs5xhvpp/)\n11. [Spanning and Placing Cardio](https://jsfiddle.net/2z7z6o9k/)\n12. [auto-fit and auto-fill](https://jsfiddle.net/d1pLngzx/)\n13. [Using minmax() for Responsive Grids](https://jsfiddle.net/xthszm2j/)\n14. Grid Template Areas:\n    - [Area Line Names](https://jsfiddle.net/tkyxomht/)\n    - [Areas](https://jsfiddle.net/p0sn7L7v/)\n15. [Naming Lines in CSS Grid](https://jsfiddle.net/ygpmn0xh/)\n16. [grid-auto-flow dense Block Fitting](https://jsfiddle.net/sxj83p70/)\n17. [CSS Grid Alignment + Centering](https://jsfiddle.net/eyL9a2gv/)\n18. [Re-ordering Grid Items](https://jsfiddle.net/uscf9mk0/)\n19. [Nesting Grid with Album Layouts](https://jsfiddle.net/yn7jak0y/)\n20. [CSS Grid Image Gallery](https://jsfiddle.net/cbjzped2/)\n21. Flexbox vs CSS Grid:\n    - [Axis Flipping](https://jsfiddle.net/pt8hym9s/)\n    - [Controls on Right](https://jsfiddle.net/4o7gavuj/)\n    - [Flex on Item](https://jsfiddle.net/1u264ftd/)\n    - [Perfectly Centered](https://jsfiddle.net/sgbrtrjo/)\n    - [Self Control](https://jsfiddle.net/c6gg8pkn/)\n    - [Stacked Layout](https://jsfiddle.net/mnfm1sw0/)\n    - [Unknown Content Size](https://jsfiddle.net/4ze02bkj/)\n    - [Unknown Number of Items](https://jsfiddle.net/Lg7r3jmy/)\n    - [Variable Widths on Each Row](https://jsfiddle.net/qymhootd/)\n22. [Recreating Codepen](https://jsfiddle.net/br6n54qt/)\n23. [Bootstrappy Grid with CSS Variables](https://jsfiddle.net/gLLht2hd/)\n24. [Responsive Website](https://jsfiddle.net/bh16ofp8/)\n25. [Full Bleed Blog Layout](https://jsfiddle.net/j8w6v3mh/)\n"}, {"repo": "/facebookarchive/f8DeveloperConferenceApp", "language": "HTML", "readme_contents": "# [Archive] f8 app #\n\n**Note:** *This repository is not under active development.*\n\nThis is the entire source code of the official [f8 2014](http://www.fbf8.com) apps, available on the [App Store](https://itunes.apple.com/us/app/f8/id853467066?mt=8) as well as on [Google Play](https://play.google.com/store/apps/details?id=com.parse.f8).\n\nRead more about these apps on our blog: [Open Sourcing the f8 Conference Apps](http://blog.parse.com/2014/08/28/open-sourcing-the-f8-conference-apps/)\n\n## Initial Setup ##\n\nFirst, you need to clone the repository.\n\nNext, you'll need to create a new Parse app. For simplicity, we've included a JSON export of the f8 app which you can use for an initial import of data into your own app.\n\nYou'll also need to create a Facebook app and configure it for the platforms you wish to test on.\n\n### Parse App Setup ###\n\n1. Go to your [Parse Dashboard](https://parse.com/apps) and create a new Parse app.\n2. Copy your new Parse application id and client key. You will need these later. Remember that you can always get your keys from your app's Settings page.\n3. Locate the `data` folder in your local clone of the repo. Here you will find `GeneralInfo.json`, `Message.json`, `Room.json`, `Slot.json`, `Speaker.json`, and `Talk.json` . These can be imported into your brand new Parse app.\n4. Go to your app's Data Browser, and click on the \"Import\" button. Choose `GeneralInfo.json` and give your new class the name \"GeneralInfo\". Repeat this for each of the json files in the `data` folder, giving them the appropriate class name.\n5. When the data is imported, images files are not brought over. We've provided images for the `Room` icons that you can use. To add these:\n    1. Locate the `assets` folder in your local repo.\n    2. Go to `Room` class in your Data Browser.\n    3. Delete the `gameslounge.png` entry in the `icon` field.\n    4. Upload the `gameslounge.png` file from the `assets` folder.\n    5. Repeat these steps for all other images you find in the `assets` folder.\n\n6. We've also provided images for the `Talk` class `icon` fields that are set. Replace these images in the `Talk` class with the corresponding ones in the `assets` folder: `afterparty.png`, `registration.png`, and `lunch.png`.\n\nOther images, such as speaker images will show up as blank. You can upload your own images to make them visible.\n\n### Facebook App Setup ###\n\n1. Go to the [Facebook App Dashboard](https://developers.facebook.com/apps) and create a new Facebook app.\n2. Configure your Facebook app:\n\n    + [iOS Setup](https://developers.facebook.com/docs/ios/getting-started#appid). During this step, you may initially set the `Bundle Identifier` to \"com.parse.f8\". If you later change the bundle identifier in your Xcode project, be sure to return to the app dashboard and modify this setting.\n    + [Android Setup](https://developers.facebook.com/docs/android/getting-started#create-app). During this step, you may initially set `Package Name` to \"com.parse.f8\" and `Clas Name` to \"com.parse.f8.DispatchActivity\". If you later change the Android package name in the code, be sure to return to the app dashboard and modify these settings.\n\n3. Add your Facebook app id and app secret to your Parse app's `Settings > User authentication > Facebook` properties.\n4. Note your Facebook `App ID` and `Display Name`. You will need these later.\n\nNext, go through the setup instructions for iOS and/or Android.\n\n## iOS Setup ##\n\nFirst, make sure you've gone through the \"Initial Setup\" instructions.\n\nThen, to install the f8 app on iOS you need to configure the project with your app keys:\n\n1. Open `ios/F8 Developer Conference.xcodeproj` in Xcode.\n2. Modify `PDDAppDelegate.m` to use your Parse application id and client key.\n3. Modify `F8 Developer Conference-Info.plist` to configure your Facebook settings:\n    + Set your Facebook app id in the `FacebookAppID` property.\n    + Set your Facebook app id in the `URL types > Item 0 > URL Schemes > Item 0` using the format fbYour_App_id (ex. for 12345, enter fb12345).\n    + Set the `Bundle identifier` property to match your Facebook app dashboard's `Bundle ID` setting.\n    + Set the `FacebookDisplayName` property to match your Facebook app dashboard's `Display Name` setting.\n4. Build and Run.\n\nOnce you've confirmed that everything is working correctly, you may modify the general conference info and the list of Talks, Speakers, and Rooms to suit your conference.\n\n## Android Setup ##\n\nFirst, make sure you've gone through the \"Initial Setup\" instructions.\n\nThen to install the f8 app on Android, you need to import the f8 project and supporting library projects. You'll then configure the f8 project with your app keys. You also need to obtain a YouTube API key from Google if you wish to see video playback in action:\n\nyou need to configure the project with your app keys. The app depends on Android's [v7 appcompat Support Library](http://developer.android.com/tools/support-library/features.html#v7) so you'll need to set that up. You also need to obtain a YouTube API key from Google if you wish to see video playback in action:\n\n1. Import the `android` f8 project in your IDE of choice, such as Eclipse.\n2. Import the `appcompat` Android Support library project from the local repo.\n3. Import the `facebook-android-sdk` Facebook SDK library project from the local repo.\n3. Follow the instructions on Google's developer site to [register your application and obtain a YouTube developer key](https://developers.google.com/youtube/android/player/register). Set up an API key for Android.\n4. Modify the f8 project's `strings.xml` file to use your Parse application id, Parse client key, Facebook app id, and YouTube developer key.\n5. Build and Run.\n\n## Further Customizations ##\n\nOnce you've confirmed that everything is working correctly, you may  modify the general conference info, the list of Talks, Speakers, and Rooms to suit your conference.\n"}, {"repo": "/Netflix/netflix.github.com", "language": "HTML", "readme_contents": "Source for the Netflix OSS Hub : http://netflix.github.io/\n"}, {"repo": "/Miserlou/Zappa", "language": "Python", "readme_contents": "<p align=\"center\">\n  <img src=\"http://i.imgur.com/oePnHJn.jpg\" alt=\"Zappa Rocks!\"/>\n</p>\n\n## Zappa - Serverless Python\n\n[![Build Status](https://travis-ci.org/Miserlou/Zappa.svg)](https://travis-ci.org/Miserlou/Zappa)\n[![Coverage](https://img.shields.io/coveralls/Miserlou/Zappa.svg)](https://coveralls.io/github/Miserlou/Zappa)\n[![PyPI](https://img.shields.io/pypi/v/Zappa.svg)](https://pypi.python.org/pypi/zappa)\n[![Slack](https://img.shields.io/badge/chat-slack-ff69b4.svg)](https://slack.zappa.io/)\n[![Gun.io](https://img.shields.io/badge/made%20by-gun.io-blue.svg)](https://gun.io/)\n[![Patreon](https://img.shields.io/badge/support-patreon-brightgreen.svg)](https://patreon.com/zappa)\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n\n- [About](#about)\n- [Installation and Configuration](#installation-and-configuration)\n  - [Running the Initial Setup / Settings](#running-the-initial-setup--settings)\n- [Basic Usage](#basic-usage)\n  - [Initial Deployments](#initial-deployments)\n  - [Updates](#updates)\n  - [Rollback](#rollback)\n  - [Scheduling](#scheduling)\n    - [Advanced Scheduling](#advanced-scheduling)\n  - [Undeploy](#undeploy)\n  - [Package](#package)\n    - [How Zappa Makes Packages](#how-zappa-makes-packages)\n  - [Template](#template)\n  - [Status](#status)\n  - [Tailing Logs](#tailing-logs)\n  - [Remote Function Invocation](#remote-function-invocation)\n  - [Django Management Commands](#django-management-commands)\n  - [SSL Certification](#ssl-certification)\n    - [Deploying to a Domain With AWS Certificate Manager](#deploying-to-a-domain-with-aws-certificate-manager)\n    - [Deploying to a Domain With a Let's Encrypt Certificate (DNS Auth)](#deploying-to-a-domain-with-a-lets-encrypt-certificate-dns-auth)\n    - [Deploying to a Domain With a Let's Encrypt Certificate (HTTP Auth)](#deploying-to-a-domain-with-a-lets-encrypt-certificate-http-auth)\n    - [Deploying to a Domain With Your Own SSL Certs](#deploying-to-a-domain-with-your-own-ssl-certs)\n- [Executing in Response to AWS Events](#executing-in-response-to-aws-events)\n- [Asynchronous Task Execution](#asynchronous-task-execution)\n  - [Catching Exceptions](#catching-exceptions)\n  - [Task Sources](#task-sources)\n  - [Direct Invocation](#direct-invocation)\n  - [Remote Invocations](#remote-invocations)\n  - [Restrictions](#restrictions)\n  - [Running Tasks in a VPC](#running-tasks-in-a-vpc)\n  - [Responses](#responses)\n- [Advanced Settings](#advanced-settings)\n    - [YAML Settings](#yaml-settings)\n- [Advanced Usage](#advanced-usage)\n  - [Keeping The Server Warm](#keeping-the-server-warm)\n    - [Serving Static Files / Binary Uploads](#serving-static-files--binary-uploads)\n  - [Enabling CORS](#enabling-cors)\n  - [Large Projects](#large-projects)\n  - [Enabling Bash Completion](#enabling-bash-completion)\n  - [Enabling Secure Endpoints on API Gateway](#enabling-secure-endpoints-on-api-gateway)\n    - [API Key](#api-key)\n    - [IAM Policy](#iam-policy)\n    - [API Gateway Lambda Authorizers](#api-gateway-lambda-authorizers)\n    - [Cognito User Pool Authorizer](#cognito-user-pool-authorizer)\n    - [API Gateway Resource Policy](#api-gateway-resource-policy)\n  - [Setting Environment Variables](#setting-environment-variables)\n    - [Local Environment Variables](#local-environment-variables)\n    - [Remote AWS Environment Variables](#remote-aws-environment-variables)\n    - [Remote Environment Variables](#remote-environment-variables)\n    - [Remote Environment Variables (via an S3 file)](#remote-environment-variables-via-an-s3-file)\n  - [API Gateway Context Variables](#api-gateway-context-variables)\n  - [Catching Unhandled Exceptions](#catching-unhandled-exceptions)\n  - [Using Custom AWS IAM Roles and Policies](#using-custom-aws-iam-roles-and-policies)\n    - [Custom AWS IAM Roles and Policies for Deployment](#custom-aws-iam-roles-and-policies-for-deployment)\n    - [Custom AWS IAM Roles and Policies for Execution](#custom-aws-iam-roles-and-policies-for-execution)\n  - [AWS X-Ray](#aws-x-ray)\n  - [Globally Available Server-less Architectures](#globally-available-server-less-architectures)\n  - [Raising AWS Service Limits](#raising-aws-service-limits)\n  - [Using Zappa With Docker](#using-zappa-with-docker)\n  - [Dead Letter Queues](#dead-letter-queues)\n  - [Unique Package ID](#unique-package-id)\n  - [Application Load Balancer Event Source](#application-load-balancer-event-source)\n  - [Endpoint Configuration](#endpoint-configuration)\n    - [Example Private API Gateway configuration](#example-private-api-gateway-configuration)\n- [Zappa Guides](#zappa-guides)\n- [Zappa in the Press](#zappa-in-the-press)\n- [Sites Using Zappa](#sites-using-zappa)\n- [Related Projects](#related-projects)\n- [Hacks](#hacks)\n- [Contributing](#contributing)\n    - [Using a Local Repo](#using-a-local-repo)\n- [Patrons](#patrons)\n- [Merch](#merch)\n- [Support / Development / Training / Consulting](#support--development--training--consulting)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## About\n\n<p align=\"center\">\n  <a href=\"https://htmlpreview.github.io/?https://raw.githubusercontent.com/Miserlou/Talks/master/serverless-sf/big.quickstart.html\"><img src=\"http://i.imgur.com/c23kDNT.png?1\" alt=\"Zappa Slides\"/></a>\n</p>\n<p align=\"center\">\n  <i>In a hurry? Click to see <a href=\"https://htmlpreview.github.io/?https://raw.githubusercontent.com/Miserlou/Talks/master/serverless-sf/big.quickstart.html\">(now slightly out-dated) slides from Serverless SF</a>!</i>\n</p>\n\n**Zappa** makes it super easy to build and deploy server-less, event-driven Python applications (including, but not limited to, WSGI web apps) on AWS Lambda + API Gateway. Think of it as \"serverless\" web hosting for your Python apps. That means **infinite scaling**, **zero downtime**, **zero maintenance** - and at a fraction of the cost of your current deployments!\n\nIf you've got a Python web app (including Django and Flask apps), it's as easy as:\n\n```\n$ pip install zappa\n$ zappa init\n$ zappa deploy\n```\n\nand now you're server-less! _Wow!_\n\n> What do you mean \"serverless\"?\n\nOkay, so there still is a server - but it only has a _40 millisecond_ life cycle! Serverless in this case means **\"without any permanent infrastructure.\"**\n\nWith a traditional HTTP server, the server is online 24/7, processing requests one by one as they come in. If the queue of incoming requests grows too large, some requests will time out. With Zappa, **each request is given its own virtual HTTP \"server\"** by Amazon API Gateway. AWS handles the horizontal scaling automatically, so no requests ever time out. Each request then calls your application from a memory cache in AWS Lambda and returns the response via Python's WSGI interface. After your app returns, the \"server\" dies.\n\nBetter still, with Zappa you only pay for the milliseconds of server time that you use, so it's many **orders of magnitude cheaper** than VPS/PaaS hosts like Linode or Heroku - and in most cases, it's completely free. Plus, there's no need to worry about load balancing or keeping servers online ever again.\n\nIt's great for deploying serverless microservices with frameworks like Flask and Bottle, and for hosting larger web apps and CMSes with Django. Or, you can use any WSGI-compatible app you like! You **probably don't need to change your existing applications** to use it, and you're not locked into using it.\n\nZappa also lets you build hybrid event-driven applications that can scale to **trillions of events** a year with **no additional effort** on your part! You also get **free SSL certificates**, **global app deployment**, **API access management**, **automatic security policy generation**, **precompiled C-extensions**, **auto keep-warms**, **oversized Lambda packages**, and **many other exclusive features**!\n\nAnd finally, Zappa is **super easy to use**. You can deploy your application with a single command out of the box!\n\n__Awesome!__\n\n<p align=\"center\">\n  <img src=\"http://i.imgur.com/f1PJxCQ.gif\" alt=\"Zappa Demo Gif\"/>\n</p>\n\n## Installation and Configuration\n\n_Before you begin, make sure you are running Python 2.7 or Python 3.6 and you have a valid AWS account and your [AWS credentials file](https://blogs.aws.amazon.com/security/post/Tx3D6U6WSFGOK2H/A-New-and-Standardized-Way-to-Manage-Credentials-in-the-AWS-SDKs) is properly installed._\n\n**Zappa** can easily be installed through pip, like so:\n\n    $ pip install zappa\n\nPlease note that Zappa _**must**_ be installed into your project's [virtual environment](http://docs.python-guide.org/en/latest/dev/virtualenvs/). The virtual environment name should not be the same as the Zappa project name, as this may cause errors.\n\n_(If you use [pyenv](https://github.com/yyuu/pyenv) and love to manage virtualenvs with **pyenv-virtualenv**, you just have to call `pyenv local [your_venv_name]` and it's ready. [Conda](http://conda.pydata.org/docs/) users should comment [here](https://github.com/Miserlou/Zappa/pull/108).)_\n\nNext, you'll need to define your local and server-side settings.\n\n### Running the Initial Setup / Settings\n\n**Zappa** can automatically set up your deployment settings for you with the `init` command:\n\n    $ zappa init\n\nThis will automatically detect your application type (Flask/Django - Pyramid users [see here](https://github.com/Miserlou/Zappa/issues/278#issuecomment-241917956)) and help you define your deployment configuration settings. Once you finish initialization, you'll have a file named *zappa_settings.json* in your project directory defining your basic deployment settings. It will probably look something like this for most WSGI apps:\n\n```javascript\n{\n    // The name of your stage\n    \"dev\": {\n        // The name of your S3 bucket\n        \"s3_bucket\": \"lambda\",\n\n        // The modular python path to your WSGI application function.\n        // In Flask and Bottle, this is your 'app' object.\n        // Flask (your_module.py):\n        // app = Flask()\n        // Bottle (your_module.py):\n        // app = bottle.default_app()\n        \"app_function\": \"your_module.app\"\n    }\n}\n```\n\nor for Django:\n\n```javascript\n{\n    \"dev\": { // The name of your stage\n       \"s3_bucket\": \"lambda\", // The name of your S3 bucket\n       \"django_settings\": \"your_project.settings\" // The python path to your Django settings.\n    }\n}\n```\n\n_Psst: If you're deploying a Django application with Zappa for the first time, you might want to read Edgar Roman's [Django Zappa Guide](https://edgarroman.github.io/zappa-django-guide/)._\n\nYou can define as many stages as your like - we recommend having _dev_, _staging_, and _production_.\n\nNow, you're ready to deploy!\n\n## Basic Usage\n\n### Initial Deployments\n\nOnce your settings are configured, you can package and deploy your application to a stage called \"production\" with a single command:\n\n    $ zappa deploy production\n    Deploying..\n    Your application is now live at: https://7k6anj0k99.execute-api.us-east-1.amazonaws.com/production\n\nAnd now your app is **live!** How cool is that?!\n\nTo explain what's going on, when you call `deploy`, Zappa will automatically package up your application and local virtual environment into a Lambda-compatible archive, replace any dependencies with versions [precompiled for Lambda](https://github.com/Miserlou/lambda-packages), set up the function handler and necessary WSGI Middleware, upload the archive to S3, create and manage the necessary Amazon IAM policies and roles, register it as a new Lambda function, create a new API Gateway resource, create WSGI-compatible routes for it, link it to the new Lambda function, and finally delete the archive from your S3 bucket. Handy!\n\nBe aware that the default IAM role and policy created for executing Lambda applies a liberal set of permissions.\nThese are most likely not appropriate for production deployment of important applications.  See the section\n[Custom AWS IAM Roles and Policies for Execution](#custom-aws-iam-roles-and-policies-for-execution) for more detail.\n\n### Updates\n\nIf your application has already been deployed and you only need to upload new Python code, but not touch the underlying routes, you can simply:\n\n    $ zappa update production\n    Updating..\n    Your application is now live at: https://7k6anj0k99.execute-api.us-east-1.amazonaws.com/production\n\nThis creates a new archive, uploads it to S3 and updates the Lambda function to use the new code, but doesn't touch the API Gateway routes.\n\n### Rollback\n\nYou can also `rollback` the deployed code to a previous version by supplying the number of revisions to return to. For instance, to rollback to the version deployed 3 versions ago:\n\n    $ zappa rollback production -n 3\n\n### Scheduling\n\nZappa can be used to easily schedule functions to occur on regular intervals. This provides a much nicer, maintenance-free alternative to Celery!\nThese functions will be packaged and deployed along with your `app_function` and called from the handler automatically.\nJust list your functions and the expression to schedule them using [cron or rate syntax](http://docs.aws.amazon.com/lambda/latest/dg/tutorial-scheduled-events-schedule-expressions.html) in your *zappa_settings.json* file:\n\n```javascript\n{\n    \"production\": {\n       ...\n       \"events\": [{\n           \"function\": \"your_module.your_function\", // The function to execute\n           \"expression\": \"rate(1 minute)\" // When to execute it (in cron or rate format)\n       }],\n       ...\n    }\n}\n```\n\nAnd then:\n\n    $ zappa schedule production\n\nAnd now your function will execute every minute!\n\nIf you want to cancel these, you can simply use the `unschedule` command:\n\n    $ zappa unschedule production\n\nAnd now your scheduled event rules are deleted.\n\nSee the [example](example/) for more details.\n\n#### Advanced Scheduling\n\nSometimes a function needs multiple expressions to describe its schedule. To set multiple expressions, simply list your functions, and the list of expressions to schedule them using [cron or rate syntax](http://docs.aws.amazon.com/lambda/latest/dg/tutorial-scheduled-events-schedule-expressions.html) in your *zappa_settings.json* file:\n\n```javascript\n{\n    \"production\": {\n       ...\n       \"events\": [{\n           \"function\": \"your_module.your_function\", // The function to execute\n           \"expressions\": [\"cron(0 20-23 ? * SUN-THU *)\", \"cron(0 0-8 ? * MON-FRI *)\"] // When to execute it (in cron or rate format)\n       }],\n       ...\n    }\n}\n```\n\nThis can be used to deal with issues arising from the UTC timezone crossing midnight during business hours in your local timezone.\n\nIt should be noted that overlapping expressions will not throw a warning, and should be checked for, to prevent duplicate triggering of functions.\n\n### Undeploy\n\nIf you need to remove the API Gateway and Lambda function that you have previously published, you can simply:\n\n    $ zappa undeploy production\n\nYou will be asked for confirmation before it executes.\n\nIf you enabled CloudWatch Logs for your API Gateway service and you don't\nwant to keep those logs, you can specify the `--remove-logs` argument to purge the logs for your API Gateway and your Lambda function:\n\n    $ zappa undeploy production --remove-logs\n\n### Package\n\nIf you want to build your application package without actually uploading and registering it as a Lambda function, you can use the `package` command:\n\n    $ zappa package production\n\nIf you have a `zip` callback in your `callbacks` setting, this will also be invoked.\n\n```javascript\n{\n    \"production\": { // The name of your stage\n        \"callbacks\": {\n            \"zip\": \"my_app.zip_callback\"// After creating the package\n        }\n    }\n}\n```\n\nYou can also specify the output filename of the package with `-o`:\n\n    $ zappa package production -o my_awesome_package.zip\n\n#### How Zappa Makes Packages\n\nZappa will automatically package your active virtual environment into a package which runs smoothly on AWS Lambda.\n\nDuring this process, it will replace any local dependencies with AWS Lambda compatible versions. Dependencies are included in this order:\n\n  * Lambda-compatible `manylinux` wheels from a local cache\n  * Lambda-compatible `manylinux` wheels from PyPI\n  * Lambda-specific versions from [lambda-package](https://github.com/Miserlou/lambda-packages)\n  * Packages from the active virtual environment\n  * Packages from the local project directory\n\nIt also skips certain unnecessary files, and ignores any .py files if .pyc files are available.\n\nIn addition, Zappa will also automatically set the correct execution permissions, configure package settings, and create a unique, auditable package manifest file.\n\nTo further reduce the final package file size, you can:\n\n* Set `slim_handler` to `True` to upload a small handler to Lambda and the rest of the package to S3. For more details, see the [merged pull request](https://github.com/Miserlou/Zappa/pull/548) and the [discussion in the original issue](https://github.com/Miserlou/Zappa/issues/510). See also: [Large Projects](#large-projects).\n* Use the `exclude` setting and provide a list of regex patterns to exclude from the archive. By default, Zappa will exclude Boto, because [it's already available in the Lambda execution environment](http://docs.aws.amazon.com/lambda/latest/dg/current-supported-versions.html).\n\n### Template\n\nSimilarly to `package`, if you only want the API Gateway CloudFormation template, use the `template` command:\n\n    $ zappa template production --l your-lambda-arn -r your-role-arn\n\nNote that you must supply your own Lambda ARN and Role ARNs in this case, as they may not have been created for you.\n\nYou can get the JSON output directly with `--json`, and specify the output file with `--output`.\n\n### Status\n\nIf you need to see the status of your deployment and event schedules, simply use the `status` command.\n\n    $ zappa status production\n\n### Tailing Logs\n\nYou can watch the logs of a deployment by calling the `tail` management command.\n\n    $ zappa tail production\n\nBy default, this will show all log items. In addition to HTTP and other events, anything `print`ed to `stdout` or `stderr` will be shown in the logs.\n\nYou can use the argument `--http` to filter for HTTP requests, which will be in the Apache Common Log Format.\n\n    $ zappa tail production --http\n\nSimilarly, you can do the inverse and only show non-HTTP events and log messages:\n\n    $ zappa tail production --non-http\n\nIf you don't like the default log colors, you can turn them off with `--no-color`.\n\nYou can also limit the length of the tail with `--since`, which accepts a simple duration string:\n\n    $ zappa tail production --since 4h # 4 hours\n    $ zappa tail production --since 1m # 1 minute\n    $ zappa tail production --since 1mm # 1 month\n\nYou can filter out the contents of the logs with `--filter`, like so:\n\n    $ zappa tail production --http --filter \"POST\" # Only show POST HTTP requests\n\nNote that this uses the [CloudWatch Logs filter syntax](http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html).\n\nTo tail logs without following (to exit immediately after displaying the end of the requested logs), pass `--disable-keep-open`:\n\n    $ zappa tail production --since 1h --disable-keep-open\n\n\n### Remote Function Invocation\n\nYou can execute any function in your application directly at any time by using the `invoke` command.\n\nFor instance, suppose you have a basic application in a file called \"my_app.py\", and you want to invoke a function in it called \"my_function\". Once your application is deployed, you can invoke that function at any time by calling:\n\n    $ zappa invoke production 'my_app.my_function'\n\nAny remote print statements made and the value the function returned will then be printed to your local console. **Nifty!**\n\nYou can also invoke interpretable Python 2.7 or Python 3.6 strings directly by using `--raw`, like so:\n\n    $ zappa invoke production \"print 1 + 2 + 3\" --raw\n\nFor instance, it can come in handy if you want to create your first `superuser` on a RDS database running in a VPC (like Serverless Aurora):\n    $ zappa invoke staging \"from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('username', 'email', 'password')\" --raw\n\n### Django Management Commands\n\nAs a convenience, Zappa can also invoke remote Django 'manage.py' commands with the `manage` command. For instance, to perform the basic Django status check:\n\n    $ zappa manage production showmigrations admin\n\nObviously, this only works for Django projects which have their settings properly defined.\n\nFor commands which have their own arguments, you can also pass the command in as a string, like so:\n\n    $ zappa manage production \"shell --version\"\n\nCommands which require direct user input, such as `createsuperuser`, should be [replaced by commands](http://stackoverflow.com/a/26091252) which use `zappa invoke <env> --raw`.\n\nFor more Django integration, take a look at the [zappa-django-utils](https://github.com/Miserlou/zappa-django-utils) project.\n\n_(Please note that commands which take over 30 seconds to execute may time-out preventing output from being returned - but the command may continue to run. See [this related issue](https://github.com/Miserlou/Zappa/issues/205#issuecomment-236391248) for a work-around.)_\n\n### SSL Certification\n\nZappa can be deployed to custom domain names and subdomains with custom SSL certificates, Let's Encrypt certificates, and [AWS Certificate Manager](https://aws.amazon.com/certificate-manager/) (ACM) certificates.\n\nCurrently, the easiest of these to use are the AWS Certificate Manager certificates, as they are free, self-renewing, and require the least amount of work.\n\nOnce configured as described below, all of these methods use the same command:\n\n    $ zappa certify\n\nWhen deploying from a CI/CD system, you can use:\n\n    $ zappa certify --yes\n\nto skip the confirmation prompt.\n\n#### Deploying to a Domain With AWS Certificate Manager\n\nAmazon provides their own free alternative to Let's Encrypt called [AWS Certificate Manager](https://aws.amazon.com/certificate-manager/) (ACM). To use this service with Zappa:\n\n1. Verify your domain in the AWS Certificate Manager console.\n2. In the console, select the N. Virginia (us-east-1) region and request a certificate for your domain or subdomain (`sub.yourdomain.tld`), or request a wildcard domain (`*.yourdomain.tld`).\n3. Copy the entire ARN of that certificate and place it in the Zappa setting `certificate_arn`.\n4. Set your desired domain in the `domain` setting.\n5. Call `$ zappa certify` to create and associate the API Gateway distribution using that certificate.\n\n#### Deploying to a Domain With a Let's Encrypt Certificate (DNS Auth)\n\nIf you want to use Zappa on a domain with a free Let's Encrypt certificate using automatic Route 53 based DNS Authentication, you can follow [this handy guide](https://github.com/Miserlou/Zappa/blob/master/docs/domain_with_free_ssl_dns.md).\n\n#### Deploying to a Domain With a Let's Encrypt Certificate (HTTP Auth)\n\nIf you want to use Zappa on a domain with a free Let's Encrypt certificate using HTTP Authentication, you can follow [this guide](https://github.com/Miserlou/Zappa/blob/master/docs/domain_with_free_ssl_http.md).\n\nHowever, it's now far easier to use Route 53-based DNS authentication, which will allow you to use a Let's Encrypt certificate with a single `$ zappa certify` command.\n\n#### Deploying to a Domain With Your Own SSL Certs\n\n1. The first step is to create a custom domain and obtain your SSL cert / key / bundle.\n2. Ensure you have set the `domain` setting within your Zappa settings JSON - this will avoid problems with the Base Path mapping between the Custom Domain and the API invoke URL, which gets the Stage Name appended in the URI\n3. Add the paths to your SSL cert / key / bundle to the `certificate`, `certificate_key`, and `certificate_chain` settings, respectively, in your Zappa settings JSON\n4. Set `route53_enabled` to `false` if you plan on using your own DNS provider, and not an AWS Route53 Hosted zone.\n5. Deploy or update your app using Zappa\n6. Run `$ zappa certify` to upload your certificates and register the custom domain name with your API gateway.\n\n## Executing in Response to AWS Events\n\nSimilarly, you can have your functions execute in response to events that happen in the AWS ecosystem, such as S3 uploads, DynamoDB entries, Kinesis streams, SNS messages, and SQS queues.\n\nIn your *zappa_settings.json* file, define your [event sources](http://docs.aws.amazon.com/lambda/latest/dg/invoking-lambda-function.html) and the function you wish to execute. For instance, this will execute `your_module.process_upload_function` in response to new objects in your `my-bucket` S3 bucket. Note that `process_upload_function` must accept `event` and `context` parameters.\n\n```javascript\n{\n    \"production\": {\n       ...\n       \"events\": [{\n            \"function\": \"your_module.process_upload_function\",\n            \"event_source\": {\n                  \"arn\":  \"arn:aws:s3:::my-bucket\",\n                  \"events\": [\n                    \"s3:ObjectCreated:*\" // Supported event types: http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#supported-notification-event-types\n                  ]\n               }\n            }],\n       ...\n    }\n}\n```\n\nAnd then:\n\n    $ zappa schedule production\n\nAnd now your function will execute every time a new upload appears in your bucket!\n\nTo access the key's information in your application context, you'll want `process_upload_function` to look something like this:\n\n```python\nimport boto3\ns3_client = boto3.client('s3')\n\ndef process_upload_function(event, context):\n    \"\"\"\n    Process a file upload.\n    \"\"\"\n\n    # Get the uploaded file's information\n    bucket = event['Records'][0]['s3']['bucket']['name'] # Will be `my-bucket`\n    key = event['Records'][0]['s3']['object']['key'] # Will be the file path of whatever file was uploaded.\n\n    # Get the bytes from S3\n    s3_client.download_file(bucket, key, '/tmp/' + key) # Download this file to writable tmp space.\n    file_bytes = open('/tmp/' + key).read()\n```\n\nSimilarly, for a [Simple Notification Service](https://aws.amazon.com/sns/) event:\n\n```javascript\n        \"events\": [\n            {\n                \"function\": \"your_module.your_function\",\n                \"event_source\": {\n                    \"arn\":  \"arn:aws:sns:::your-event-topic-arn\",\n                    \"events\": [\n                        \"sns:Publish\"\n                    ]\n                }\n            }\n        ]\n```\n\nOptionally you can add [SNS message filters](http://docs.aws.amazon.com/sns/latest/dg/message-filtering.html):\n\n```javascript\n        \"events\": [\n            {\n                \"function\": \"your_module.your_function\",\n                \"event_source\": {\n                    \"arn\":  \"arn:aws:sns:::your-event-topic-arn\",\n                    \"filters\": {\n                        \"interests\": [\"python\", \"aws\", \"zappa\"],\n                        \"version\": [\"1.0\"]\n                    },\n                    ...\n                }\n            }\n        ]\n```\n\n[DynamoDB](http://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html) and [Kinesis](http://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html) are slightly different as it is not event based but pulling from a stream:\n\n```javascript\n       \"events\": [\n           {\n               \"function\": \"replication.replicate_records\",\n               \"event_source\": {\n                    \"arn\":  \"arn:aws:dynamodb:us-east-1:1234554:table/YourTable/stream/2016-05-11T00:00:00.000\",\n                    \"starting_position\": \"TRIM_HORIZON\", // Supported values: TRIM_HORIZON, LATEST\n                    \"batch_size\": 50, // Max: 1000\n                    \"enabled\": true // Default is false\n               }\n           }\n       ]\n```\n\n[SQS](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html) is also pulling messages from a stream.  At this time, [only \"Standard\" queues can trigger lambda events, not \"FIFO\" queues](https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html).  Read the AWS Documentation carefully since Lambda calls the SQS DeleteMessage API on your behalf once your function completes successfully.\n\n```javascript\n       \"events\": [\n           {\n               \"function\": \"your_module.process_messages\",\n               \"event_source\": {\n                    \"arn\":  \"arn:aws:sqs:us-east-1:12341234:your-queue-name-arn\",\n                    \"batch_size\": 10, // Max: 10. Use 1 to trigger immediate processing\n                    \"enabled\": true // Default is false\n               }\n           }\n       ]\n```\n\nFor configuring Lex Bot's intent triggered events:\n```javascript\n    \"bot_events\": [\n        {\n            \"function\": \"lexbot.handlers.book_appointment.handler\",\n            \"event_source\": {\n                \"arn\": \"arn:aws:lex:us-east-1:01234123123:intent:TestLexEventNames:$LATEST\", // optional. In future it will be used to configure the intent\n                \"intent\":\"intentName\", // name of the bot event configured\n                \"invocation_source\":\"DialogCodeHook\", // either FulfillmentCodeHook or DialogCodeHook\n            }\n        }\n    ]\n\n```\n\nEvents can also take keyword arguments:\n```javascript\n       \"events\": [\n            {\n                \"function\": \"your_module.your_recurring_function\", // The function to execute\n                \"kwargs\": {\"key\": \"val\", \"key2\": \"val2\"},  // Keyword arguments to pass. These are available in the event\n                \"expression\": \"rate(1 minute)\" // When to execute it (in cron or rate format)\n            }\n       ]\n```\n\nTo get the keyword arguments you will need to look inside the event dictionary:\n\n```python\ndef your_recurring_function(event, context):\n    my_kwargs = event.get(\"kwargs\")  # dict of kwargs given in zappa_settings file\n\n```\n\n\nYou can find more [example event sources here](http://docs.aws.amazon.com/lambda/latest/dg/eventsources.html).\n\n## Asynchronous Task Execution\n\nZappa also now offers the ability to seamlessly execute functions asynchronously in a completely separate AWS Lambda instance!\n\nFor example, if you have a Flask API for ordering a pie, you can call your `bake` function seamlessly in a completely separate Lambda instance by using the `zappa.asynchronous.task` decorator like so:\n\n```python\nfrom flask import Flask\nfrom zappa.asynchronous import task\napp = Flask(__name__)\n\n@task\ndef make_pie():\n    \"\"\" This takes a long time! \"\"\"\n    ingredients = get_ingredients()\n    pie = bake(ingredients)\n    deliver(pie)\n\n@app.route('/api/order/pie')\ndef order_pie():\n    \"\"\" This returns immediately! \"\"\"\n    make_pie()\n    return \"Your pie is being made!\"\n\n```\n\nAnd that's it! Your API response will return immediately, while the `make_pie` function executes in a completely different Lambda instance.\n\nWhen calls to @task decorated functions or the zappa.asynchronous.run command occur outside of Lambda, such as your local dev environment,\nthe functions will execute immediately and locally. The zappa asynchronous functionality only works\nwhen in the Lambda environment or when specifying [Remote Invocations](https://github.com/Miserlou/zappa#remote-invocations).\n\n### Catching Exceptions\nPutting a try..except block on an asynchronous task like this:\n\n```python\n@task\ndef make_pie():\n    try:\n        ingredients = get_ingredients()\n        pie = bake(ingredients)\n        deliver(pie)\n    except Fault as error:\n        \"\"\"send an email\"\"\"\n    ...\n    return Response('Web services down', status=503)\n```\n\nwill cause an email to be sent twice for the same error. See [asynchronous retries at AWS](https://docs.aws.amazon.com/lambda/latest/dg/retries-on-errors.html). To work around this side-effect, and have the fault handler execute only once, change the return value to:\n\n```python\n@task\ndef make_pie():\n    try:\n        \"\"\"code block\"\"\"\n    except Fault as error:\n        \"\"\"send an email\"\"\"\n    ...\n    return {} #or return True\n```\n\n### Task Sources\n\nBy default, this feature uses direct AWS Lambda invocation. You can instead use AWS Simple Notification Service as the task event source by using the `task_sns` decorator, like so:\n\n```python\nfrom zappa.asynchronous import task_sns\n@task_sns\n```\n\nUsing SNS also requires setting the following settings in your `zappa_settings`:\n\n```javascript\n{\n  \"dev\": {\n    ..\n      \"async_source\": \"sns\", // Source of async tasks. Defaults to \"lambda\"\n      \"async_resources\": true, // Create the SNS topic to use. Defaults to true.\n    ..\n    }\n}\n```\n\nThis will automatically create and subscribe to the SNS topic the code will use when you call the `zappa schedule` command.\n\nUsing SNS will also return a message ID in case you need to track your invocations.\n\n### Direct Invocation\n\nYou can also use this functionality without a decorator by passing your function to `zappa.asynchronous.run`, like so:\n\n```python\nfrom zappa.asynchronous import run\n\nrun(your_function, args, kwargs) # Using Lambda\nrun(your_function, args, kwargs, service='sns') # Using SNS\n```\n\n### Remote Invocations\n\nBy default, Zappa will use lambda's current function name and current AWS region. If you wish to invoke a lambda with\n  a different function name/region or invoke your lambda from outside of lambda, you must specify the\n  `remote_aws_lambda_function_name` and `remote_aws_region` arguments so that the application knows which function and\n  region to use. For example, if some part of our pizza making application had to live on an EC2 instance, but we\n  wished to call the make_pie() function on its own Lambda instance, we would do it as follows:\n\n ```python\n@task(remote_aws_lambda_function_name='pizza-pie-prod', remote_aws_region='us-east-1')\ndef make_pie():\n    \"\"\" This takes a long time! \"\"\"\n    ingredients = get_ingredients()\n    pie = bake(ingredients)\n    deliver(pie)\n\n```\nIf those task() parameters were not used, then EC2 would execute the function locally. These same\n `remote_aws_lambda_function_name` and `remote_aws_region` arguments can be used on the zappa.asynchronous.run() function as well.\n\n### Restrictions\n\nThe following restrictions to this feature apply:\n\n* Functions must have a clean import path -- i.e. no closures, lambdas, or methods.\n* `args` and `kwargs` must be JSON-serializable.\n* The JSON-serialized arguments must be within the size limits for Lambda (256K) or SNS (256K) events.\n\nAll of this code is still backwards-compatible with non-Lambda environments - it simply executes in a blocking fashion and returns the result.\n\n### Running Tasks in a VPC\n\nIf you're running Zappa in a Virtual Private Cloud (VPC), you'll need to configure your subnets to allow your lambda to communicate with services inside your VPC as well as the public Internet. A minimal setup requires two subnets.\n\nIn __subnet-a__:\n* Create a NAT\n* Create an Internet gateway\n* In the route table, create a route pointing the Internet gateway to 0.0.0.0/0.\n\nIn __subnet-b__:\n* Place your lambda function\n* In the route table, create a route pointing the NAT that belongs to __subnet-a__ to 0.0.0.0/0.\n\nYou can place your lambda in multiple subnets that are configured the same way as __subnet-b__ for high availability.\n\nSome helpful resources are [this tutorial](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateVPC.html), [this other tutorial](https://gist.github.com/reggi/dc5f2620b7b4f515e68e46255ac042a7) and [this AWS doc page](http://docs.aws.amazon.com/lambda/latest/dg/vpc.html#vpc-internet).\n\n### Responses\n\nIt is possible to capture the responses of Asynchronous tasks.\n\nZappa uses DynamoDB as the backend for these.\n\nTo capture responses, you must configure a `async_response_table` in `zappa_settings`. This is the DynamoDB table name. Then, when decorating with `@task`, pass `capture_response=True`.\n\nAsync responses are assigned a `response_id`. This is returned as a property of the `LambdaAsyncResponse` (or `SnsAsyncResponse`) object that is returned by the `@task` decorator.\n\nExample:\n\n```python\nfrom zappa.asynchronous import task, get_async_response\nfrom flask import Flask, make_response, abort, url_for, redirect, request, jsonify\nfrom time import sleep\n\napp = Flask(__name__)\n\n@app.route('/payload')\ndef payload():\n    delay = request.args.get('delay', 60)\n    x = longrunner(delay)\n    return redirect(url_for('response', response_id=x.response_id))\n\n@app.route('/async-response/<response_id>')\ndef response(response_id):\n    response = get_async_response(response_id)\n    if response is None:\n        abort(404)\n\n    if response['status'] == 'complete':\n        return jsonify(response['response'])\n\n    sleep(5)\n\n    return \"Not yet ready. Redirecting.\", 302, {\n        'Content-Type': 'text/plain; charset=utf-8',\n        'Location': url_for('response', response_id=response_id, backoff=5),\n        'X-redirect-reason': \"Not yet ready.\",\n    }\n\n@task(capture_response=True)\ndef longrunner(delay):\n    sleep(float(delay))\n    return {'MESSAGE': \"It took {} seconds to generate this.\".format(delay)}\n\n```\n\n## Advanced Settings\n\nThere are other settings that you can define in your local settings\nto change Zappa's behavior. Use these at your own risk!\n\n```javascript\n {\n    \"dev\": {\n        \"alb_enabled\": false, // enable provisioning of application load balancing resources. If set to true, you _must_ fill out the alb_vpc_config option as well.\n        \"alb_vpc_config\": {\n            \"CertificateArn\": \"your_acm_certificate_arn\", // ACM certificate ARN for ALB\n            \"SubnetIds\": [], // list of subnets for ALB\n            \"SecurityGroupIds\": [] // list of security groups for ALB\n        },\n        \"api_key_required\": false, // enable securing API Gateway endpoints with x-api-key header (default False)\n        \"api_key\": \"your_api_key_id\", // optional, use an existing API key. The option \"api_key_required\" must be true to apply\n        \"apigateway_enabled\": true, // Set to false if you don't want to create an API Gateway resource. Default true.\n        \"apigateway_description\": \"My funky application!\", // Define a custom description for the API Gateway console. Default None.\n        \"assume_policy\": \"my_assume_policy.json\", // optional, IAM assume policy JSON file\n        \"attach_policy\": \"my_attach_policy.json\", // optional, IAM attach policy JSON file\n        \"apigateway_policy\": \"my_apigateway_policy.json\", // optional, API Gateway resource policy JSON file\n        \"async_source\": \"sns\", // Source of async tasks. Defaults to \"lambda\"\n        \"async_resources\": true, // Create the SNS topic and DynamoDB table to use. Defaults to true.\n        \"async_response_table\": \"your_dynamodb_table_name\",  // the DynamoDB table name to use for captured async responses; defaults to None (can't capture)\n        \"async_response_table_read_capacity\": 1,  // DynamoDB table read capacity; defaults to 1\n        \"async_response_table_write_capacity\": 1,  // DynamoDB table write capacity; defaults to 1\n        \"aws_endpoint_urls\": { \"aws_service_name\": \"endpoint_url\" }, // a dictionary of endpoint_urls that emulate the appropriate service.  Usually used for testing, for instance with `localstack`.\n        \"aws_environment_variables\" : {\"your_key\": \"your_value\"}, // A dictionary of environment variables that will be available to your deployed app via AWS Lambdas native environment variables. See also \"environment_variables\" and \"remote_env\" . Default {}.\n        \"aws_kms_key_arn\": \"your_aws_kms_key_arn\", // Your AWS KMS Key ARN\n        \"aws_region\": \"aws-region-name\", // optional, uses region set in profile or environment variables if not set here,\n        \"binary_support\": true, // Enable automatic MIME-type based response encoding through API Gateway. Default true.\n        \"callbacks\": { // Call custom functions during the local Zappa deployment/update process\n            \"settings\": \"my_app.settings_callback\", // After loading the settings\n            \"zip\": \"my_app.zip_callback\", // After creating the package\n            \"post\": \"my_app.post_callback\", // After command has executed\n        },\n        \"cache_cluster_enabled\": false, // Use APIGW cache cluster (default False)\n        \"cache_cluster_size\": 0.5, // APIGW Cache Cluster size (default 0.5)\n        \"cache_cluster_ttl\": 300, // APIGW Cache Cluster time-to-live (default 300)\n        \"cache_cluster_encrypted\": false, // Whether or not APIGW Cache Cluster encrypts data (default False)\n        \"certificate\": \"my_cert.crt\", // SSL certificate file location. Used to manually certify a custom domain\n        \"certificate_key\": \"my_key.key\", // SSL key file location. Used to manually certify a custom domain\n        \"certificate_chain\": \"my_cert_chain.pem\", // SSL certificate chain file location. Used to manually certify a custom domain\n        \"certificate_arn\": \"arn:aws:acm:us-east-1:1234512345:certificate/aaaa-bbb-cccc-dddd\", // ACM certificate ARN (needs to be in us-east-1 region).\n        \"cloudwatch_log_level\": \"OFF\", // Enables/configures a level of logging for the given staging. Available options: \"OFF\", \"INFO\", \"ERROR\", default \"OFF\".\n        \"cloudwatch_data_trace\": false, // Logs all data about received events. Default false.\n        \"cloudwatch_metrics_enabled\": false, // Additional metrics for the API Gateway. Default false.\n        \"cognito\": { // for Cognito event triggers\n            \"user_pool\": \"user-pool-id\", // User pool ID from AWS Cognito\n            \"triggers\": [{\n                \"source\": \"PreSignUp_SignUp\", // triggerSource from http://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html#cognito-user-pools-lambda-trigger-syntax-pre-signup\n                \"function\": \"my_app.pre_signup_function\"\n            }]\n        },\n        \"context_header_mappings\": { \"HTTP_header_name\": \"API_Gateway_context_variable\" }, // A dictionary mapping HTTP header names to API Gateway context variables\n        \"cors\": false, // Enable Cross-Origin Resource Sharing. Default false. If true, simulates the \"Enable CORS\" button on the API Gateway console. Can also be a dictionary specifying lists of \"allowed_headers\", \"allowed_methods\", and string of \"allowed_origin\"\n        \"dead_letter_arn\": \"arn:aws:<sns/sqs>:::my-topic/queue\", // Optional Dead Letter configuration for when Lambda async invoke fails thrice\n        \"debug\": true, // Print Zappa configuration errors tracebacks in the 500. Default true.\n        \"delete_local_zip\": true, // Delete the local zip archive after code updates. Default true.\n        \"delete_s3_zip\": true, // Delete the s3 zip archive. Default true.\n        \"django_settings\": \"your_project.production_settings\", // The modular path to your Django project's settings. For Django projects only.\n        \"domain\": \"yourapp.yourdomain.com\", // Required if you're using a domain\n        \"base_path\": \"your-base-path\", // Optional base path for API gateway custom domain base path mapping. Default None. Not supported for use with Application Load Balancer event sources.\n        \"environment_variables\": {\"your_key\": \"your_value\"}, // A dictionary of environment variables that will be available to your deployed app. See also \"remote_env\" and \"aws_environment_variables\". Default {}.\n        \"events\": [\n            {   // Recurring events\n                \"function\": \"your_module.your_recurring_function\", // The function to execute\n                \"expression\": \"rate(1 minute)\" // When to execute it (in cron or rate format)\n            },\n            {   // AWS Reactive events\n                \"function\": \"your_module.your_reactive_function\", // The function to execute\n                \"event_source\": {\n                    \"arn\":  \"arn:aws:s3:::my-bucket\", // The ARN of this event source\n                    \"events\": [\n                        \"s3:ObjectCreated:*\" // The specific event to execute in response to.\n                    ]\n                }\n            }\n        ],\n        \"endpoint_configuration\": [\"EDGE\", \"REGIONAL\", \"PRIVATE\"],  // Specify APIGateway endpoint None (default) or list `EDGE`, `REGION`, `PRIVATE`\n        \"exception_handler\": \"your_module.report_exception\", // function that will be invoked in case Zappa sees an unhandled exception raised from your code\n        \"exclude\": [\"*.gz\", \"*.rar\"], // A list of regex patterns to exclude from the archive. To exclude boto3 and botocore (available in an older version on Lambda), add \"boto3*\" and \"botocore*\".\n        \"extends\": \"stage_name\", // Duplicate and extend another stage's settings. For example, `dev-asia` could extend from `dev-common` with a different `s3_bucket` value.\n        \"extra_permissions\": [{ // Attach any extra permissions to this policy. Default None\n            \"Effect\": \"Allow\",\n            \"Action\": [\"rekognition:*\"], // AWS Service ARN\n            \"Resource\": \"*\"\n        }],\n        \"iam_authorization\": false, // optional, use IAM to require request signing. Default false. Note that enabling this will override the authorizer configuration.\n        \"include\": [\"your_special_library_to_load_at_handler_init\"], // load special libraries into PYTHONPATH at handler init that certain modules cannot find on path\n        \"authorizer\": {\n            \"function\": \"your_module.your_auth_function\", // Local function to run for token validation. For more information about the function see below.\n            \"arn\": \"arn:aws:lambda:<region>:<account_id>:function:<function_name>\", // Existing Lambda function to run for token validation.\n            \"result_ttl\": 300, // Optional. Default 300. The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches authorizer results. Currently, the maximum TTL value is 3600 seconds.\n            \"token_header\": \"Authorization\", // Optional. Default 'Authorization'. The name of a custom authorization header containing the token that clients submit as part of their requests.\n            \"validation_expression\": \"^Bearer \\\\w+$\", // Optional. A validation expression for the incoming token, specify a regular expression.\n        },\n        \"keep_warm\": true, // Create CloudWatch events to keep the server warm. Default true. To remove, set to false and then `unschedule`.\n        \"keep_warm_expression\": \"rate(4 minutes)\", // How often to execute the keep-warm, in cron and rate format. Default 4 minutes.\n        \"lambda_description\": \"Your Description\", // However you want to describe your project for the AWS console. Default \"Zappa Deployment\".\n        \"lambda_handler\": \"your_custom_handler\", // The name of Lambda handler. Default: handler.lambda_handler\n        \"lets_encrypt_key\": \"s3://your-bucket/account.key\", // Let's Encrypt account key path. Can either be an S3 path or a local file path.\n        \"log_level\": \"DEBUG\", // Set the Zappa log level. Can be one of CRITICAL, ERROR, WARNING, INFO and DEBUG. Default: DEBUG\n        \"manage_roles\": true, // Have Zappa automatically create and define IAM execution roles and policies. Default true. If false, you must define your own IAM Role and role_name setting.\n        \"memory_size\": 512, // Lambda function memory in MB. Default 512.\n        \"num_retained_versions\":null, // Indicates the number of old versions to retain for the lambda. If absent, keeps all the versions of the function.\n        \"payload_compression\": true, // Whether or not to enable API gateway payload compression (default: true)\n        \"payload_minimum_compression_size\": 0, // The threshold size (in bytes) below which payload compression will not be applied (default: 0)\n        \"prebuild_script\": \"your_module.your_function\", // Function to execute before uploading code\n        \"profile_name\": \"your-profile-name\", // AWS profile credentials to use. Default 'default'. Removing this setting will use the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables instead.\n        \"project_name\": \"MyProject\", // The name of the project as it appears on AWS. Defaults to a slugified `pwd`.\n        \"remote_env\": \"s3://my-project-config-files/filename.json\", // optional file in s3 bucket containing a flat json object which will be used to set custom environment variables.\n        \"role_name\": \"MyLambdaRole\", // Name of Zappa execution role. Default <project_name>-<env>-ZappaExecutionRole. To use a different, pre-existing policy, you must also set manage_roles to false.\n        \"role_arn\": \"arn:aws:iam::12345:role/app-ZappaLambdaExecutionRole\", // ARN of Zappa execution role. Default to None. To use a different, pre-existing policy, you must also set manage_roles to false. This overrides role_name. Use with temporary credentials via GetFederationToken.\n        \"route53_enabled\": true, // Have Zappa update your Route53 Hosted Zones when certifying with a custom domain. Default true.\n        \"runtime\": \"python2.7\", // Python runtime to use on Lambda. Can be one of \"python2.7\", \"python3.6\" or \"python3.7\". Defaults to whatever the current Python being used is.\n        \"s3_bucket\": \"dev-bucket\", // Zappa zip bucket,\n        \"slim_handler\": false, // Useful if project >50M. Set true to just upload a small handler to Lambda and load actual project from S3 at runtime. Default false.\n        \"settings_file\": \"~/Projects/MyApp/settings/dev_settings.py\", // Server side settings file location,\n        \"tags\": { // Attach additional tags to AWS Resources\n            \"Key\": \"Value\",  // Example Key and value\n            \"Key2\": \"Value2\",\n            },\n        \"timeout_seconds\": 30, // Maximum lifespan for the Lambda function (default 30, max 900.)\n        \"touch\": true, // GET the production URL upon initial deployment (default True)\n        \"touch_path\": \"/\", // The endpoint path to GET when checking the initial deployment (default \"/\")\n        \"use_precompiled_packages\": true, // If possible, use C-extension packages which have been pre-compiled for AWS Lambda. Default true.\n        \"vpc_config\": { // Optional Virtual Private Cloud (VPC) configuration for Lambda function\n            \"SubnetIds\": [ \"subnet-12345678\" ], // Note: not all availability zones support Lambda!\n            \"SecurityGroupIds\": [ \"sg-12345678\" ]\n        },\n        \"xray_tracing\": false // Optional, enable AWS X-Ray tracing on your lambda function.\n    }\n}\n```\n\n#### YAML Settings\n\nIf you prefer YAML over JSON, you can also use a `zappa_settings.yml`, like so:\n\n```yaml\n---\ndev:\n  app_function: your_module.your_app\n  s3_bucket: your-code-bucket\n  events:\n  - function: your_module.your_function\n    event_source:\n      arn: arn:aws:s3:::your-event-bucket\n      events:\n      - s3:ObjectCreated:*\n```\n\nYou can also supply a custom settings file at any time with the `-s` argument, ex:\n\n```\n$ zappa deploy dev -s my-custom-settings.yml\n```\n\nSimilarly, you can supply a `zappa_settings.toml` file:\n\n```toml\n[dev]\n  app_function = \"your_module.your_app\"\n  s3_bucket = \"your-code-bucket\"\n```\n\n## Advanced Usage\n\n### Keeping The Server Warm\n\nZappa will automatically set up a regularly occurring execution of your application in order to keep the Lambda function warm. This can be disabled via the `keep_warm` setting.\n\n#### Serving Static Files / Binary Uploads\n\nZappa is now able to serve and receive binary files, as detected by their MIME-type.\n\nHowever, generally Zappa is designed for running your application code, not for serving static web assets. If you plan on serving custom static assets in your web application (CSS/JavaScript/images/etc.,), you'll likely want to use a combination of AWS S3 and AWS CloudFront.\n\nYour web application framework will likely be able to handle this for you automatically. For Flask, there is [Flask-S3](https://github.com/e-dard/flask-s3), and for Django, there is [Django-Storages](https://django-storages.readthedocs.io/en/latest/).\n\nSimilarly, you may want to design your application so that static binary uploads go [directly to S3](http://docs.aws.amazon.com/AWSJavaScriptSDK/guide/browser-examples.html#Uploading_a_local_file_using_the_File_API), which then triggers an event response defined in your `events` setting! That's thinking serverlessly!\n\n### Enabling CORS\n\nThe simplest way to enable CORS (Cross-Origin Resource Sharing) for your Zappa application is to set `cors` to `true` in your Zappa settings file and update, which is the equivalent of pushing the \"Enable CORS\" button in the AWS API Gateway console. This is disabled by default, but you may wish to enable it for APIs which are accessed from other domains, etc.\n\nYou can also simply handle CORS directly in your application. Your web framework will probably have an extension to do this, such as [django-cors-headers](https://github.com/ottoyiu/django-cors-headers) or [Flask-CORS](https://github.com/corydolphin/flask-cors). Using these will make your code more portable.\n\n### Large Projects\n\nAWS currently limits Lambda zip sizes to 50 megabytes. If your project is larger than that, set `slim_handler: true` in your `zappa_settings.json`. In this case, your fat application package will be replaced with a small handler-only package. The handler file then pulls the rest of the large project down from S3 at run time! The initial load of the large project may add to startup overhead, but the difference should be minimal on a warm lambda function. Note that this will also eat into the storage space of your application function. Note that AWS currently [limits](https://docs.aws.amazon.com/lambda/latest/dg/limits.html) the `/tmp` directory storage to 512 MB, so your project must still be smaller than that.\n\n### Enabling Bash Completion\n\nBash completion can be enabled by adding the following to your .bashrc:\n\n```bash\n  eval \"$(register-python-argcomplete zappa)\"\n```\n\n`register-python-argcomplete` is provided by the argcomplete Python package. If this package was installed in a virtualenv\nthen the command must be run there. Alternatively you can execute:\n\n  activate-global-python-argcomplete --dest=- > file\n\nThe file's contents should then be sourced in e.g. ~/.bashrc.\n\n### Enabling Secure Endpoints on API Gateway\n\n#### API Key\n\nYou can use the `api_key_required` setting to generate an API key to all the routes of your API Gateway. The process is as follows:\n1. Deploy/redeploy (update won't work) and write down the *id* for the key that has been created\n2. Go to AWS console > Amazon API Gateway and\n    * select \"API Keys\" and find the key *value* (for example `key_value`)\n    * select \"Usage Plans\", create a new usage plan and link the API Key and the API that Zappa has created for you\n3. Send a request where you pass the key value as a header called `x-api-key` to access the restricted endpoints (for example with curl: `curl --header \"x-api-key: key_value\"`). Note that without the x-api-key header, you will receive a 403.\n\n#### IAM Policy\n\nYou can enable IAM-based (v4 signing) authorization on an API by setting the `iam_authorization` setting to `true`. Your API will then require signed requests and access can be controlled via [IAM policy](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-iam-policy-examples.html). Unsigned requests will receive a 403 response, as will requesters who are not authorized to access the API. Enabling this will override the Authorizer configuration (see below).\n\n#### API Gateway Lambda Authorizers\nIf you deploy an API endpoint with Zappa, you can take advantage of [API Gateway Lambda Authorizers](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-use-lambda-authorizer.html) to implement a token-based authentication - all you need to do is to provide a function to create the required output, Zappa takes care of the rest. A good start for the function is the [AWS Labs blueprint example](https://github.com/awslabs/aws-apigateway-lambda-authorizer-blueprints/blob/master/blueprints/python/api-gateway-authorizer-python.py).\n\nIf you are wondering for what you would use an Authorizer, here are some potential use cases:\n\n1. Call out to OAuth provider\n2. Decode a JWT token inline\n3. Lookup in a self-managed DB (for example DynamoDB)\n\nZappa can be configured to call a function inside your code to do the authorization, or to call some other existing lambda function (which lets you share the authorizer between multiple lambdas). You control the behavior by specifying either the `arn` or `function_name` values in the `authorizer` settings block.\n\nFor example, to get the Cognito identity, add this to a `zappa_settings.yaml`:\n\n```yaml\n  context_header_mappings:\n    user_id: authorizer.user_id\n```\n\nWhich can now be accessed in Flask like this:\n\n```python\nfrom flask import request\n\n@route('/hello')\ndef hello_world:\n   print(request.headers.get('user_id'))\n```\n\n#### Cognito User Pool Authorizer\n\nYou can also use AWS Cognito User Pool Authorizer by adding:\n\n```javascript\n{\n    \"authorizer\": {\n        \"type\": \"COGNITO_USER_POOLS\",\n        \"provider_arns\": [\n            \"arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}\"\n        ]\n    }\n}\n```\n\n#### API Gateway Resource Policy\n\nYou can also use API Gateway Resource Policies. Example of IP Whitelisting:\n\n```javascript\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"execute-api:Invoke\",\n            \"Resource\": \"execute-api:/*\",\n            \"Condition\": {\n                \"IpAddress\": {\n                    \"aws:SourceIp\": [\n                        \"1.2.3.4/32\"\n                    ]\n                }\n            }\n        }\n    ]\n}\n```\n\n### Setting Environment Variables\n\n#### Local Environment Variables\n\nIf you want to set local environment variables for a deployment stage, you can simply set them in your `zappa_settings.json`:\n\n```javascript\n{\n    \"dev\": {\n        ...\n        \"environment_variables\": {\n            \"your_key\": \"your_value\"\n        }\n    },\n    ...\n}\n```\n\nYou can then access these inside your application with:\n\n```python\nimport os\nyour_value = os.environ.get('your_key')\n```\n\nIf your project needs to be aware of the type of environment you're deployed to, you'll also be able to get `SERVERTYPE` (AWS Lambda), `FRAMEWORK` (Zappa), `PROJECT` (your project name) and `STAGE` (_dev_, _production_, etc.) variables at any time.\n\n#### Remote AWS Environment Variables\n\nIf you want to use native AWS Lambda environment variables you can use the `aws_environment_variables` configuration setting. These are useful as you can easily change them via the AWS Lambda console or cli at runtime. They are also useful for storing sensitive credentials and to take advantage of KMS encryption of environment variables.\n\n\nDuring development, you can add your Zappa defined variables to your locally running app by, for example, using the below (for Django, to manage.py).\n\n```python\nif 'SERVERTYPE' in os.environ and os.environ['SERVERTYPE'] == 'AWS Lambda':\n    import json\n    import os\n    json_data = open('zappa_settings.json')\n    env_vars = json.load(json_data)['dev']['environment_variables']\n    for key, val in env_vars.items():\n        os.environ[key] = val\n\n```\n\n#### Remote Environment Variables\n\nAny environment variables that you have set outside of Zappa (via AWS Lambda console or cli) will remain as they are when running `update`, unless they are also in `aws_environment_variables`, in which case the remote value will be overwritten by the one in the settings file. If you are using KMS-encrypted AWS environment variables, you can set your KMS Key ARN in the `aws_kms_key_arn` setting. Make sure that the values you set are encrypted in such case.\n\n_Note: if you rely on these as well as `environment_variables`, and you have the same key names, then those in `environment_variables` will take precedence as they are injected in the lambda handler._\n\n#### Remote Environment Variables (via an S3 file)\n\n_S3 remote environment variables were added to Zappa before AWS introduced native environment variables for Lambda (via the console and cli). Before going down this route check if above make more sense for your usecase._\n\n\nIf you want to use remote environment variables to configure your application (which is especially useful for things like sensitive credentials), you can create a file and place it in an S3 bucket to which your Zappa application has access. To do this, add the `remote_env` key to zappa_settings pointing to a file containing a flat JSON object, so that each key-value pair on the object will be set as an environment variable and value whenever a new lambda instance spins up.\n\nFor example, to ensure your application has access to the database credentials without storing them in your version control, you can add a file to S3 with the connection string and load it into the lambda environment using the `remote_env` configuration setting.\n\nsuper-secret-config.json (uploaded to my-config-bucket):\n```javascript\n{\n    \"DB_CONNECTION_STRING\": \"super-secret:database\"\n}\n```\n\nzappa_settings.json:\n```javascript\n{\n    \"dev\": {\n        ...\n        \"remote_env\": \"s3://my-config-bucket/super-secret-config.json\",\n    },\n    ...\n}\n```\n\nNow in your application you can use:\n```python\nimport os\ndb_string = os.environ.get('DB_CONNECTION_STRING')\n```\n\n### API Gateway Context Variables\n\nIf you want to map an API Gateway context variable (http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html) to an HTTP header you can set up the mapping in `zappa_settings.json`:\n\n```javascript\n{\n    \"dev\": {\n        ...\n        \"context_header_mappings\": {\n            \"HTTP_header_name\": \"API_Gateway_context_variable\"\n        }\n    },\n    ...\n}\n```\n\nFor example, if you want to expose the $context.identity.cognitoIdentityId variable as the HTTP header CognitoIdentityId, and $context.stage as APIStage, you would have:\n\n```javascript\n{\n    \"dev\": {\n        ...\n        \"context_header_mappings\": {\n            \"CognitoIdentityId\": \"identity.cognitoIdentityId\",\n            \"APIStage\": \"stage\"\n        }\n    },\n    ...\n}\n```\n\n### Catching Unhandled Exceptions\n\nBy default, if an _unhandled_ exception happens in your code, Zappa will just print the stacktrace into a CloudWatch log. If you wish to use an external reporting tool to take note of those exceptions, you can use the `exception_handler` configuration option.\n\nzappa_settings.json:\n```javascript\n{\n    \"dev\": {\n        ...\n        \"exception_handler\": \"your_module.unhandled_exceptions\",\n    },\n    ...\n}\n```\n\nThe function has to accept three arguments: exception, event, and context:\n\nyour_module.py\n```python\ndef unhandled_exceptions(e, event, context):\n    send_to_raygun(e, event)  # gather data you need and send\n    return True # Prevent invocation retry\n```\nYou may still need a similar exception handler inside your application, this is just a way to catch exception which happen at the Zappa/WSGI layer (typically event-based invocations, misconfigured settings, bad Lambda packages, and permissions issues).\n\nBy default, AWS Lambda will attempt to retry an event based (non-API Gateway, e.g. CloudWatch) invocation if an exception has been thrown. However, you can prevent this by returning True, as in example above, so Zappa that will not re-raise the uncaught exception, thus preventing AWS Lambda from retrying the current invocation.\n\n### Using Custom AWS IAM Roles and Policies\n\n#### Custom AWS IAM Roles and Policies for Deployment\n\nYou can specify which _local_ profile to use for deploying your Zappa application by defining\nthe `profile_name` setting, which will correspond to a profile in your AWS credentials file.\n\n#### Custom AWS IAM Roles and Policies for Execution\n\nThe default IAM policy created by Zappa for executing the Lambda is very permissive.\nIt grants access to all actions for\nall resources for types CloudWatch, S3, Kinesis, SNS, SQS, DynamoDB, and Route53; lambda:InvokeFunction\nfor all Lambda resources; Put to all X-Ray resources; and all Network Interface operations to all EC2\nresources. While this allows most Lambdas to work correctly with no extra permissions, it is\ngenerally not an acceptable set of permissions for most continuous integration pipelines or\nproduction deployments. Instead, you will probably want to manually manage your IAM policies.\n\nTo manually define the policy of your Lambda execution role, you must set *manage_roles* to false and define\neither the *role_name* or *role_arn* in your Zappa settings file.\n\n```javascript\n{\n    \"dev\": {\n        ...\n        \"manage_roles\": false, // Disable Zappa client managing roles.\n        \"role_name\": \"MyLambdaRole\", // Name of your Zappa execution role. Optional, default: <project_name>-<env>-ZappaExecutionRole.\n        \"role_arn\": \"arn:aws:iam::12345:role/app-ZappaLambdaExecutionRole\", // ARN of your Zappa execution role. Optional.\n        ...\n    },\n    ...\n}\n```\n\nOngoing discussion about the minimum policy requirements necessary for a Zappa deployment [can be found here](https://github.com/Miserlou/Zappa/issues/244).\nA more robust solution to managing these entitlements will likely be implemented soon.\n\nTo add permissions to the default Zappa execution policy, use the `extra_permissions` setting:\n\n```javascript\n{\n    \"dev\": {\n        ...\n        \"extra_permissions\": [{ // Attach any extra permissions to this policy.\n            \"Effect\": \"Allow\",\n            \"Action\": [\"rekognition:*\"], // AWS Service ARN\n            \"Resource\": \"*\"\n        }]\n    },\n    ...\n}\n```\n\n### AWS X-Ray\n\nZappa can enable [AWS X-Ray](https://aws.amazon.com/xray/) support on your function with a configuration setting:\n\n```javascript\n{\n    \"dev\": {\n        ...\n        \"xray_tracing\": true\n    },\n    ...\n}\n```\n\nThis will enable it on the Lambda function and allow you to instrument your code with X-Ray.\nFor example, with Flask:\n\n```python\nfrom aws_xray_sdk.core import xray_recorder\n\napp = Flask(__name__)\n\nxray_recorder.configure(service='my_app_name')\n\n@route('/hello')\n@xray_recorder.capture('hello')\ndef hello_world:\n    return 'Hello'\n```\n\nYou may use the capture decorator to create subsegments around functions, or `xray_recorder.begin_subsegment('subsegment_name')` and `xray_recorder.end_subsegment()` within a function. The official [X-Ray documentation for Python](http://docs.aws.amazon.com/xray-sdk-for-python/latest/reference/) has more information on how to use this with your code.\n\nNote that you may create subsegments in your code but an exception will be raised if you try to create a segment, as it is [created by the lambda worker](https://github.com/aws/aws-xray-sdk-python/issues/2). This also means that if you use Flask you must not use the [XRayMiddleware the documentation suggests](https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-python-middleware.html).\n\n### Globally Available Server-less Architectures\n\n\n<p align=\"center\">\n  <a href=\"https://htmlpreview.github.io/?https://github.com/Miserlou/Talks/blob/master/serverless-london/global.html#0\"><img src=\"http://i.imgur.com/oR61Qau.png\" alt=\"Global Zappa Slides\"/></a>\n</p>\n<p align=\"center\">\n  <i>Click to see <a href=\"https://htmlpreview.github.io/?https://github.com/Miserlou/Talks/blob/master/serverless-london/global.html#0\">slides from ServerlessConf London</a>!</i>\n</p>\n\nDuring the `init` process, you will be given the option to deploy your application \"globally.\" This will allow you to deploy your application to all available AWS regions simultaneously in order to provide a consistent global speed, increased redundancy, data isolation, and legal compliance. You can also choose to deploy only to \"primary\" locations, the AWS regions with `-1` in their names.\n\nTo learn more about these capabilities, see [these slides](https://htmlpreview.github.io/?https://github.com/Miserlou/Talks/blob/master/serverless-london/global.html#0) from ServerlessConf London.\n\n### Raising AWS Service Limits\n\nOut of the box, AWS sets a limit of [1000 concurrent executions](http://docs.aws.amazon.com/lambda/latest/dg/limits.html) for your functions. If you start to breach these limits, you may start to see errors like `ClientError: An error occurred (LimitExceededException) when calling the PutTargets..\"` or something similar.\n\nTo avoid this, you can file a [service ticket](https://console.aws.amazon.com/support/home#/) with Amazon to raise your limits up to the many tens of thousands of concurrent executions which you may need. This is a fairly common practice with Amazon, designed to prevent you from accidentally creating extremely expensive bug reports. So, before raising your service limits, make sure that you don't have any rogue scripts which could accidentally create tens of thousands of parallel executions that you don't want to pay for.\n\n### Using Zappa With Docker\n\nIf Docker is part of your team's CI, testing, or deployments, you may want to check out [this handy guide](https://blog.zappa.io/posts/simplified-aws-lambda-deployments-with-docker-and-zappa) on using Zappa with Docker.\n\n### Dead Letter Queues\n\nIf you want to utilise [AWS Lambda's Dead Letter Queue feature](http://docs.aws.amazon.com/lambda/latest/dg/dlq.html) simply add the key `dead_letter_arn`, with the value being the complete ARN to the corresponding SNS topic or SQS queue in your `zappa_settings.json`.\n\nYou must have already created the corresponding SNS/SQS topic/queue, and the Lambda function execution role must have been provisioned with read/publish/sendMessage access to the DLQ resource.\n\n### Unique Package ID\n\nFor monitoring of different deployments, a unique UUID for each package is available in `package_info.json` in the root directory of your application's package.  You can use this information or a hash of this file for such things as tracking errors across different deployments, monitoring status of deployments and other such things on services such as Sentry and New Relic. The package will contain:\n\n```json\n{\n  \"build_platform\": \"darwin\",\n  \"build_user\": \"frank\",\n  \"build_time\": \"1509732511\",\n  \"uuid\": \"9c2df9e6-30f4-4c0a-ac4d-4ecb51831a74\"\n}\n```\n\n### Application Load Balancer Event Source\n\nZappa can be used to handle events triggered by Application Load Balancers (ALB). This can be useful in a few circumstances:\n- Since API Gateway has a hard limit of 30 seconds before timing out, you can use an ALB for longer running requests.\n- API Gateway is billed per-request; therefore, costs can become excessive with high throughput services. ALBs pricing model makes much more sense financially if you're expecting a lot of traffic to your Lambda.\n- ALBs can be placed within a VPC, which may make more sense for private endpoints than using API Gateway's private model (using AWS PrivateLink).\n\nLike API Gateway, Zappa can automatically provision ALB resources for you.  You'll need to add the following to your `zappa_settings`:\n```\n\"alb_enabled\": true,\n\"alb_vpc_config\": {\n    \"CertificateArn\": \"arn:aws:acm:us-east-1:[your-account-id]:certificate/[certificate-id]\",\n    \"SubnetIds\": [\n        // Here, you'll want to provide a list of subnets for your ALB, eg. 'subnet-02a58266'\n    ],\n    \"SecurityGroupIds\": [\n        // And here, a list of security group IDs, eg. 'sg-fbacb791'\n    ]\n}\n```\n\nMore information on using ALB as an event source for Lambda can be found [here](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/lambda-functions.html).\n\n*An important note*: right now, Zappa will provision ONE lambda to ONE load balancer, which means using `base_path` along with ALB configuration is currently unsupported.\n\n### Endpoint Configuration\n\nAPI Gateway can be configured to be only accessible in a VPC. To enable this; [configure your VPC to support](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-private-apis.html) then set the `endpoint_configuration` to `PRIVATE` and set up Resource Policy on the API Gateway. A note about this; if you're using a private endpoint, Zappa won't be able to tell if the API is returning a successful status code upon deploy or update, so you'll have to check it manually to ensure your setup is working properly.\n\nFor full list of options for endpoint configuration refer to [API Gateway EndpointConfiguration documentation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html)\n\n#### Example Private API Gateway configuration\n\nzappa_settings.json:\n```json\n{\n    \"dev\": {\n        ...\n        \"endpoint_configuration\": [\"PRIVATE\"],\n        \"apigateway_policy\": \"apigateway_resource_policy.json\",\n        ...\n    },\n    ...\n}\n```\n\napigateway_resource_policy.json:\n```json\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Deny\",\n            \"Principal\": \"*\",\n            \"Action\": \"execute-api:Invoke\",\n            \"Resource\": \"execute-api:/*\",\n            \"Condition\": {\n                \"StringNotEquals\": {\n                    \"aws:sourceVpc\": \"{{vpcID}}\" // UPDATE ME\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"execute-api:Invoke\",\n            \"Resource\": \"execute-api:/*\"\n        }\n    ]\n}\n```\n\n## Zappa Guides\n\n* [Django-Zappa tutorial (screencast)](https://www.youtube.com/watch?v=plUrbPN0xc8&feature=youtu.be).\n* [Using Django-Zappa, Part 1](https://serverlesscode.com/post/zappa-wsgi-for-python/).\n* [Using Django-Zappa, Part 2: VPCs](https://serverlesscode.com/post/zappa-wsgi-for-python-pt-2/).\n* [Building Serverless Microservices with Zappa and Flask](https://gun.io/blog/serverless-microservices-with-zappa-and-flask/)\n* [Zappa \u3067 Hello World \u3059\u308b\u307e\u3067 (Japanese)](http://qiita.com/satoshi_iwashita/items/505492193317819772c7)\n* [How to Deploy Zappa with CloudFront, RDS and VPC](https://jinwright.net/how-deploy-serverless-wsgi-app-using-zappa/)\n* [Secure 'Serverless' File Uploads with AWS Lambda, S3, and Zappa](http://blog.stratospark.com/secure-serverless-file-uploads-with-aws-lambda-s3-zappa.html)\n* [Deploy a Serverless WSGI App using Zappa, CloudFront, RDS, and VPC](https://docs.google.com/presentation/d/1aYeOMgQl4V_fFgT5VNoycdXtob1v6xVUWlyxoTEiTw0/edit#slide=id.p)\n* [AWS: Deploy Alexa Ask Skills with Flask-Ask and Zappa](https://developer.amazon.com/blogs/post/8e8ad73a-99e9-4c0f-a7b3-60f92287b0bf/New-Alexa-Tutorial-Deploy-Flask-Ask-Skills-to-AWS-Lambda-with-Zappa)\n* [Guide to using Django with Zappa](https://edgarroman.github.io/zappa-django-guide/)\n* [Zappa and LambCI](https://seancoates.com/blogs/zappa-and-lambci/)\n* [Building A Serverless Image Processing SaaS using Zappa](https://medium.com/99serverless/building-a-serverless-image-processing-saas-9ef68b594076)\n* [Serverless Slack Slash Commands with Python and Zappa](https://renzo.lucioni.xyz/serverless-slash-commands-with-python/)\n* [Bringing Tokusatsu to AWS using Python, Flask, Zappa and Contentful](https://www.contentful.com/blog/2018/03/07/bringing-tokusatsu-to-aws-using-python-flask-zappa-and-contentful/)\n* [AWS Summit 2018 Seoul - Zappa\uc640 \ud568\uaed8\ud558\ub294 Serverless Microservice](https://www.slideshare.net/YunSeopSong/zappa-serverless-microservice-94410308/)\n* [Book - Building Serverless Python Web Services with Zappa](https://github.com/PacktPublishing/Building-Serverless-Python-Web-Services-with-Zappa)\n* _Your guide here?_\n\n## Zappa in the Press\n\n* _[Zappa Serves Python, Minus the Servers](http://www.infoworld.com/article/3031665/application-development/zappa-serves-python-web-apps-minus-the-servers.html)_\n* _[Zappa lyfter serverl\u00f6sa applikationer med Python](http://computersweden.idg.se/2.2683/1.649895/zappa-lyfter-python)_\n* _[Interview: Rich Jones on Zappa](https://serverlesscode.com/post/rich-jones-interview-django-zappa/)_\n* [Top 10 Python Libraries of 2016](https://tryolabs.com/blog/2016/12/20/top-10-python-libraries-of-2016/)\n\n## Sites Using Zappa\n\n* [Zappa.io](https://www.zappa.io) - A simple Zappa homepage\n* [Zappatista!](https://blog.zappa.io) - The official Zappa blog!\n* [Mailchimp Signup Utility](https://github.com/sasha42/Mailchimp-utility) - A microservice for adding people to a mailing list via API.\n* [Zappa Slack Inviter](https://github.com/Miserlou/zappa-slack-inviter) - A tiny, server-less service for inviting new users to your Slack channel.\n* [Serverless Image Host](https://github.com/Miserlou/serverless-imagehost) - A thumbnailing service with Flask, Zappa and Pillow.\n* [Zappa BitTorrent Tracker](https://github.com/Miserlou/zappa-bittorrent-tracker) - An experimental server-less BitTorrent tracker. Work in progress.\n* [JankyGlance](https://github.com/Miserlou/JankyGlance) - A server-less Yahoo! Pipes replacement.\n* [LambdaMailer](https://github.com/tryolabs/lambda-mailer) - A server-less endpoint for processing a contact form.\n* [Voter Registration Microservice](https://topics.arlingtonva.us/2016/11/voter-registration-search-microservice/) - Official backup to to the Virginia Department of Elections portal.\n* [FreePoll Online](https://www.freepoll.online) - A simple and awesome say for groups to make decisions.\n* [PasteOfCode](https://paste.ofcode.org/) - A Zappa-powered paste bin.\n* And many more, including banks, governments, startups, enterprises and schools!\n\nAre you using Zappa? Let us know and we'll list your site here!\n\n## Related Projects\n\n* [lambda-packages](http://github.com/Miserlou/lambda-packages) - Precompiled C-extension packages for AWS Lambda. Used automatically by Zappa.\n* [Mackenzie](http://github.com/Miserlou/Mackenzie) - AWS Lambda Infection Toolkit\n* [NoDB](https://github.com/Miserlou/NoDB) - A simple, server-less, Pythonic object store based on S3.\n* [zappa-cms](http://github.com/Miserlou/zappa-cms) - A tiny server-less CMS for busy hackers. Work in progress.\n* [zappa-django-utils](https://github.com/Miserlou/zappa-django-utils) - Utility commands to help Django deployments.\n* [flask-ask](https://github.com/johnwheeler/flask-ask) - A framework for building Amazon Alexa applications. Uses Zappa for deployments.\n* [zappa-file-widget](https://github.com/anush0247/zappa-file-widget) - A Django plugin for supporting binary file uploads in Django on Zappa.\n* [zops](https://github.com/bjinwright/zops) - Utilities for teams and continuous integrations using Zappa.\n* [cookiecutter-mobile-backend](https://github.com/narfman0/cookiecutter-mobile-backend/) - A `cookiecutter` Django project with Zappa and S3 uploads support.\n* [zappa-examples](https://github.com/narfman0/zappa-examples/) - Flask, Django, image uploads, and more!\n* [zappa-hug-example](https://github.com/mcrowson/zappa-hug-example) - Example of a Hug application using Zappa.\n* [Zappa Docker Image](https://github.com/danielwhatmuff/zappa) - A Docker image for running Zappa locally, based on Lambda Docker.\n* [zappa-dashing](https://github.com/nikos/zappa-dashing) - Monitor your AWS environment (health/metrics) with Zappa and CloudWatch.\n* [s3env](https://github.com/cameronmaske/s3env) - Manipulate a remote Zappa environment variable key/value JSON object file in an S3 bucket through the CLI.\n* [zappa_resize_image_on_fly](https://github.com/wobeng/zappa_resize_image_on_fly) - Resize images on the fly using Flask, Zappa, Pillow, and OpenCV-python.\n* [zappa-ffmpeg](https://github.com/ubergarm/zappa-ffmpeg) - Run ffmpeg inside a lambda for serverless transformations.\n* [gdrive-lambda](https://github.com/richiverse/gdrive-lambda) - pass json data to a csv file for end users who use Gdrive across the organization.\n* [travis-build-repeat](https://github.com/bcongdon/travis-build-repeat) - Repeat TravisCI builds to avoid stale test results.\n* [wunderskill-alexa-skill](https://github.com/mcrowson/wunderlist-alexa-skill) - An Alexa skill for adding to a Wunderlist.\n* [xrayvision](https://github.com/mathom/xrayvision) - Utilities and wrappers for using AWS X-Ray with Zappa.\n* [terraform-aws-zappa](https://github.com/dpetzold/terraform-aws-zappa) - Terraform modules for creating a VPC, RDS instance, ElastiCache Redis and CloudFront Distribution for use with Zappa.\n* [zappa-sentry](https://github.com/jneves/zappa-sentry) - Integration with Zappa and Sentry\n* [IOpipe](https://github.com/iopipe/iopipe-python#zappa) - Monitor, profile and analyze your Zappa apps.\n\n\n## Hacks\n\nZappa goes quite far beyond what Lambda and API Gateway were ever intended to handle. As a result, there are quite a few hacks in here that allow it to work. Some of those include, but aren't limited to..\n\n* Using VTL to map body, headers, method, params and query strings into JSON, and then turning that into valid WSGI.\n* Attaching response codes to response bodies, Base64 encoding the whole thing, using that as a regex to route the response code, decoding the body in VTL, and mapping the response body to that.\n* Packing and _Base58_ encoding multiple cookies into a single cookie because we can only map one kind.\n* Forcing the case permutations of \"Set-Cookie\" in order to return multiple headers at the same time.\n* Turning cookie-setting 301/302 responses into 200 responses with HTML redirects, because we have no way to set headers on redirects.\n\n## Contributing\n\nThis project is still young, so there is still plenty to be done. Contributions are more than welcome!\n\nPlease file tickets for discussion before submitting patches. Pull requests should target `master` and should leave Zappa in a \"shippable\" state if merged.\n\nIf you are adding a non-trivial amount of new code, please include a functioning test in your PR. For AWS calls, we use the `placebo` library, which you can learn to use [in their README](https://github.com/garnaat/placebo#usage-as-a-decorator). The test suite will be run by [Travis CI](https://travis-ci.org/Miserlou/Zappa) once you open a pull request.\n\nPlease include the GitHub issue or pull request URL that has discussion related to your changes as a comment in the code ([example](https://github.com/Miserlou/Zappa/blob/fae2925431b820eaedf088a632022e4120a29f89/zappa/zappa.py#L241-L243)). This greatly helps for project maintainability, as it allows us to trace back use cases and explain decision making. Similarly, please make sure that you meet all of the requirements listed in the [pull request template](https://raw.githubusercontent.com/Miserlou/Zappa/master/.github/PULL_REQUEST_TEMPLATE.md).\n\nPlease feel free to work on any open ticket, especially any ticket marked with the \"help-wanted\" label. If you get stuck or want to discuss an issue further, please join [our Slack channel](https://slack.zappa.io), where you'll find a community of smart and interesting people working dilligently on hard problems.\n\nZappa does not intend to conform to PEP8, isolate your commits so that changes to functionality with changes made by your linter.\n\n#### Using a Local Repo\n\nTo use the git HEAD, you *probably can't* use `pip install -e `. Instead, you should clone the repo to your machine and then `pip install /path/to/zappa/repo` or `ln -s /path/to/zappa/repo/zappa zappa` in your local project.\n\n## Patrons\n\nIf you or your company uses **Zappa**, please consider giving what you can to support the ongoing development of the project!\n\nYou can become a patron by **[visiting our Patreon page](https://patreon.com/zappa)**.\n\nZappa is currently supported by these awesome individuals and companies:\n\n  * Nathan Lawrence\n  * LaunchLab\n  * Sean Paley\n  * Theo Chitayat\n  * George Sibble\n  * Joe Weiss\n  * Nik Bora\n  * Zerong Toby Wang\n  * Gareth E\n  * Matt Jackson\n  * Sean Coates\n  * Alexander Loschilov\n  * Korey Peters\n  * Joe Weiss\n  * Kimmo Parvianen-Jalanko\n  * Patrick Agin\n  * Roberto Martinez\n  * Charles Dimino\n  * Doug Beney\n  * Dan \"The Man\" Gayle\n  * Juancito\n  * Will Childs-Klein\n  * Efi Merdler Kravitz\n  * **Philippe Trounev**\n\nThank you very, very much!\n\n## Merch\n\n<br />\n<p align=\"center\">\n  <a href=\"https://blog.zappa.io/posts/weve-got-merch-now-introducing-zappa-tshirts\"><img src=\"https://i.imgur.com/jYZ7aUR.png\" alt=\"Merch!\"/></a>\n</p>\n\n## Support / Development / Training / Consulting\n\nDo you need help with..\n\n  * Porting existing Flask and Django applications to Zappa?\n  * Building new applications and services that scale infinitely?\n  * Reducing your operations and hosting costs?\n  * Adding new custom features into Zappa?\n  * Training your team to use AWS and other server-less paradigms?\n\nGood news! We're currently available for remote and on-site consulting for small, large and enterprise teams. Please contact <miserlou@gmail.com> with your needs and let's work together!\n\n<br />\n<p align=\"center\">\n  <a href=\"https://gun.io\"><img src=\"http://i.imgur.com/M7wJipR.png\" alt=\"Made by Gun.io\"/></a>\n</p>\n"}, {"repo": "/catapult-project/catapult", "language": "HTML", "readme_contents": "\n<!-- Copyright 2015 The Chromium Authors. All rights reserved.\n     Use of this source code is governed by a BSD-style license that can be\n     found in the LICENSE file.\n-->\nCatapult\n========\n\nCatapult is the home for several performance tools that span from gathering,\ndisplaying and analyzing performance data. This includes:\n\n * [Trace-viewer](/tracing/README.md)\n * [Telemetry](/telemetry/README.md)\n * [Performance Dashboard](/dashboard/README.md)\n * [Systrace](/systrace/README.md)\n * [Web Page Replay](/web_page_replay_go/README.md)\n\nThese tools were created by Chromium developers for performance analysis,\ntesting, and monitoring of Chrome, but they can also be used for analyzing and\nmonitoring websites, and eventually Android apps.\n\nContributing\n============\nPlease see [our contributor's guide](/CONTRIBUTING.md)\n\n**[Current build status](https://build.chromium.org/p/client.catapult/waterfall)**\n"}, {"repo": "/sammchardy/python-binance", "language": "Python", "readme_contents": "================================\nWelcome to python-binance v0.7.4\n================================\n\nNote\n----\n\nI am working on a python3 version with async support to remove legacy dependencies and their related issues.\n\nI would appreciate if you could try out the `feature/asyncio <https://github.com/sammchardy/python-binance/tree/feature/asyncio>`_ branch and give your feedback.\n\n\n.. image:: https://img.shields.io/pypi/v/python-binance.svg\n    :target: https://pypi.python.org/pypi/python-binance\n\n.. image:: https://img.shields.io/pypi/l/python-binance.svg\n    :target: https://pypi.python.org/pypi/python-binance\n\n.. image:: https://img.shields.io/travis/sammchardy/python-binance.svg\n    :target: https://travis-ci.org/sammchardy/python-binance\n\n.. image:: https://img.shields.io/coveralls/sammchardy/python-binance.svg\n    :target: https://coveralls.io/github/sammchardy/python-binance\n\n.. image:: https://img.shields.io/pypi/wheel/python-binance.svg\n    :target: https://pypi.python.org/pypi/python-binance\n\n.. image:: https://img.shields.io/pypi/pyversions/python-binance.svg\n    :target: https://pypi.python.org/pypi/python-binance\n\nThis is an unofficial Python wrapper for the `Binance exchange REST API v1/3 <https://github.com/binance-exchange/binance-official-api-docs>`_. I am in no way affiliated with Binance, use at your own risk.\n\nIf you came here looking for the `Binance exchange <https://www.binance.com/?ref=10099792>`_ to purchase cryptocurrencies, then `go here <https://www.binance.com/?ref=10099792>`_. If you want to automate interactions with Binance stick around.\n\nIf you're interested in Binance's new DEX Binance Chain see my `python-binance-chain library <https://github.com/sammchardy/python-binance-chain>`_\n\nSource code\n  https://github.com/sammchardy/python-binance\n\nDocumentation\n  https://python-binance.readthedocs.io/en/latest/\n\nBinance API Telegram\n  https://t.me/binance_api_english\n\nBlog with examples\n  https://sammchardy.github.io\n\nMake sure you update often and check the `Changelog <https://python-binance.readthedocs.io/en/latest/changelog.html>`_ for new features and bug fixes.\n\nFeatures\n--------\n\n- Implementation of all General, Market Data and Account endpoints.\n- Simple handling of authentication\n- No need to generate timestamps yourself, the wrapper does it for you\n- Response exception handling\n- Websocket handling with reconnection and multiplexed connections\n- Symbol Depth Cache\n- Historical Kline/Candle fetching function\n- Withdraw functionality\n- Deposit addresses\n- Margin Trading\n\nQuick Start\n-----------\n\n`Register an account with Binance <https://www.binance.com/register.html?ref=10099792>`_.\n\n`Generate an API Key <https://www.binance.com/userCenter/createApi.html>`_ and assign relevant permissions.\n\n.. code:: bash\n\n    pip install python-binance\n\n\n.. code:: python\n\n    from binance.client import Client\n    client = Client(api_key, api_secret)\n\n    # get market depth\n    depth = client.get_order_book(symbol='BNBBTC')\n\n    # place a test market buy order, to place an actual order use the create_order function\n    order = client.create_test_order(\n        symbol='BNBBTC',\n        side=Client.SIDE_BUY,\n        type=Client.ORDER_TYPE_MARKET,\n        quantity=100)\n\n    # get all symbol prices\n    prices = client.get_all_tickers()\n\n    # withdraw 100 ETH\n    # check docs for assumptions around withdrawals\n    from binance.exceptions import BinanceAPIException, BinanceWithdrawException\n    try:\n        result = client.withdraw(\n            asset='ETH',\n            address='<eth_address>',\n            amount=100)\n    except BinanceAPIException as e:\n        print(e)\n    except BinanceWithdrawException as e:\n        print(e)\n    else:\n        print(\"Success\")\n\n    # fetch list of withdrawals\n    withdraws = client.get_withdraw_history()\n\n    # fetch list of ETH withdrawals\n    eth_withdraws = client.get_withdraw_history(asset='ETH')\n\n    # get a deposit address for BTC\n    address = client.get_deposit_address(asset='BTC')\n\n    # start aggregated trade websocket for BNBBTC\n    def process_message(msg):\n        print(\"message type: {}\".format(msg['e']))\n        print(msg)\n        # do something\n\n    from binance.websockets import BinanceSocketManager\n    bm = BinanceSocketManager(client)\n    bm.start_aggtrade_socket('BNBBTC', process_message)\n    bm.start()\n\n    # get historical kline data from any date range\n\n    # fetch 1 minute klines for the last day up until now\n    klines = client.get_historical_klines(\"BNBBTC\", Client.KLINE_INTERVAL_1MINUTE, \"1 day ago UTC\")\n\n    # fetch 30 minute klines for the last month of 2017\n    klines = client.get_historical_klines(\"ETHBTC\", Client.KLINE_INTERVAL_30MINUTE, \"1 Dec, 2017\", \"1 Jan, 2018\")\n\n    # fetch weekly klines since it listed\n    klines = client.get_historical_klines(\"NEOBTC\", Client.KLINE_INTERVAL_1WEEK, \"1 Jan, 2017\")\n\nFor more `check out the documentation <https://python-binance.readthedocs.io/en/latest/>`_.\n\nDonate\n------\n\nIf this library helped you out feel free to donate.\n\n- ETH: 0xD7a7fDdCfA687073d7cC93E9E51829a727f9fE70\n- LTC: LPC5vw9ajR1YndE1hYVeo3kJ9LdHjcRCUZ\n- NEO: AVJB4ZgN7VgSUtArCt94y7ZYT6d5NDfpBo\n- BTC: 1Dknp6L6oRZrHDECRedihPzx2sSfmvEBys\n\nOther Exchanges\n---------------\n\nIf you use `Binance Chain <https://testnet.binance.org/>`_ check out my `python-binance-chain <https://github.com/sammchardy/python-binance-chain>`_ library.\n\nIf you use `Kucoin <https://www.kucoin.com/?rcode=E42cWB>`_ check out my `python-kucoin <https://github.com/sammchardy/python-kucoin>`_ library.\n\nIf you use `Allcoin <https://www.allcoin.com/Account/RegisterByPhoneNumber/?InviteCode=MTQ2OTk4MDgwMDEzNDczMQ==>`_ check out my `python-allucoin <https://github.com/sammchardy/python-allcoin>`_ library.\n\nIf you use `IDEX <https://idex.market>`_ check out my `python-idex <https://github.com/sammchardy/python-idex>`_ library.\n\nIf you use `Quoinex <https://accounts.quoinex.com/sign-up?affiliate=PAxghztC67615>`_\nor `Qryptos <https://accounts.qryptos.com/sign-up?affiliate=PAxghztC67615>`_ check out my `python-quoine <https://github.com/sammchardy/python-quoine>`_ library.\n\nIf you use `BigONE <https://big.one>`_ check out my `python-bigone <https://github.com/sammchardy/python-bigone>`_ library.\n\n.. image:: https://analytics-pixel.appspot.com/UA-111417213-1/github/python-binance?pixel&useReferer\n"}, {"repo": "/angular/angular-cn", "language": "HTML", "readme_contents": "# Angular.io\nAngular.io is site for Angular 2 **documentation** . \n\nThis site also includes links to other helpful angular resources including \nAngular 2, Angular 1, Angular Material, and AngularFire.\n\n## Issues\n\nPlease file **Developer Guide, Cookbook, and code sample issues _only_** in this \n[Angular.io](https://github.com/angular/angular.io/issues) github repo.\n\n**Angular API issues, cheatsheet corrections, feature requests, defect reports, and technical questions** concerning Angular itself\nbelong in the [**angular source code**](https://github.com/angular/angular/issues) github repo.\nWe can't handle those topics here and will ask you to re-post them on the angular repo.\n\n## How you can help\n\nFiling issues is helpful but **pull requests** that improve the docs are even better!\n\nLearn how to [contribute to Angular.io](https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md).\n\n## Development Setup\nThis site relies heavily on node and npm.\n\n1. Make sure you are using the latest node and npm; \nif not install [nvm](https://github.com/creationix/nvm) to get node going on your machine.\n\n1. install these npm packages *globally*: `npm install -g harp gulp protractor`\n\n1. clone this repo and the [angular source code repo](https://github.com/angular/angular) to the same parent directory.\nThe two cloned repo directories must be sibling.\n\n1. cd into root directory `Angular.io/`\n\n1. install the *all-docs* local packages by running `npm install`\n> If running node v.5+, you probably must rebuild `node-sass` in a separate step: `npm rebuild node-sass`\n\n1. See [below](#code-sample-development) for code sample development preparation.\n\n## Content Development\nAll documentation content is written in Jade which has [its own syntax](http://jade-lang.com/reference/).\nBe aware of the strict demands imposed by this significant-whitespace language.\nWe strongly recommend running one of the gulp `serve-and-sync` commands [described below](#serve-and-sync)\nwhile editing content so you can see the effect of your changes *as you type*.\n\nThe documentation relies on specific styles and mixins. \nLearn about those in the [documentation styleguide](https://angular.io/docs/ts/latest/styleguide.html).\n\nThe jade documentation files are language-specific directories under either `public/docs/`.\nFor example, all of the TypeScript docs are in `public/docs/ts/latest`, e.g.\n- `public/docs/ts/latest/quickstart.jade`\n- `public/docs/ts/latest/guide/architecture.jade`\n- `public/docs/ts/latest/cookbook/component-communication.jade`\n- `public/docs/ts/latest/tutorial/toh-pt5.jade`\n\n### Local server with watches and browser reload\n 1. cd into root directory `Angular.io/`\n 1. run `gulp serve-and-sync`\n 1. browser will launch on localhost:3000 and stay refreshed automatically.\n\n<a id=\"serve-and-sync\"></a>\nIf you are only going to work on a specific part of the docs, such as the dev guide, then you can use one of the more specific gulp tasks to only watch those parts of the file system:\n\n* `gulp serve-and-sync` : watch all the local Jade/Sass files, the API source and examples, and the dev guide files\n* `gulp serve-and-sync-api` : watch only the API source and example files\n* `gulp serve-and-sync-devguide` : watch only the dev guide files\n* `gulp build-and-serve` : watch only the local Jade/Sass files\n\n## Code Sample Development\n\nAll documentation is supported by sample code and plunkers. \nSuch code resides in the `public/docs/_examples` directory, under chapter-specific directories, further divided by language track.\n\nFor example, the TypeScript QuickStart sample is in `public/docs/_examples/quickstart/ts`.\n\nAll samples are in a consistent directory structure using the same styles and the same npm packages, including the latest release of Angular 2.\nThis consistency is possible in part thanks to gulp-driven tooling. \nTo run the samples locally and confirm that they work properly, \ntake the following extra steps to prepare the environment:\n\n1. cd to `public/docs/_examples`\n\n1. install the canonical node packages for all samples by running `npm install`\n\n1. cd back up to `Angular.io` root: `cd ../../..`\n\n1. run `gulp add-example-boilerplate` (elevate to admin on Windows) \nto copy canonical files to the sample directories and create symlinks there for node_modules and typings. \n\nNow cd into any particular sample's language directory (e.g., `public/docs/_examples/quickstart/ts`) and try:\n- `npm start`  to simultaneously compile-with-watch and serve-in-browser-with-watch\n- `npm run tsc` to compile only\n- `npm run lite` to serve-and-watch in browser\n\nLook at the scripts in `package.json` for other options.\nAlso, open any `plunkr.no-link.html` to see the code execute in plunker\n(you may have to run `gulp build-plunkers` first to create/update).\n\n### Sample end-to-end tests\n\nAll samples should be covered to some degree by end-to-end tests:\n- `gulp run-e2e-tests` to run all TypeScript and JavaScript tests\n- `gulp run-e2e-tests --lang=dart` to run all Dart tests\n- `gulp run-e2e-tests --lang=all` to run TypeScript, JavaScript, and Dart tests\n- `gulp run-e2e-tests --filter=quickstart` to filter the examples to run, by name\n- `gulp run-e2e-tests --fast` to ignore npm install, webdriver update and boilerplate copy\n\nAny combination of options is possible.\n\n\n## Technology Used\n- Angular 1.x: The production ready version of Angular\n- Angular Material: An implementation of Material Design in Angular.js\n- Gulp: node-based tooling\n- Harp: The static web server with built-in preprocessing.\n- Sass: A professional grade CSS extension language\n- Normalize: A modern, HTML5-ready alternative to CSS resets\n- Grids: A highly customizable CSS Grid Framework built with Sass\n- Prettify: A JS module and CSS for syntax highlighting of source code snippets.\n- Icomoon: Custom built icon fonts\n\n\n## License\nPowered by Google \u00a92010-2016. Code licensed under an [MIT-style License](https://github.com/angular.io/blob/master/LICENSE). Documentation licensed under [CC BY 4.0](http://creativecommons.org/licenses/by/4.0/).\n"}, {"repo": "/joestump/python-oauth2", "language": "Python", "readme_contents": "[![Join the chat at https://gitter.im/joestump/python-oauth2](https://img.shields.io/badge/gitter-join%20chat-1dce73.svg?style=flat-square)](https://gitter.im/joestump/python-oauth2?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![Build Status](http://img.shields.io/travis-ci/joestump/python-oauth2.png?branch=master&style=flat-square)](https://travis-ci.org/joestump/python-oauth2) [![Coverage](https://img.shields.io/codecov/c/github/joestump/python-oauth2.svg?style=flat-square)](https://codecov.io/gh/joestump/python-oauth2) ![Number of issues](https://img.shields.io/github/issues/joestump/python-oauth2.svg?style=flat-square) ![Licence MIT](https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square)\n\n## Note: This library implements OAuth 1.0 and *not OAuth 2.0*. \n\n# Overview\npython-oauth2 is a python oauth library fully compatible with python versions: 2.6, 2.7, 3.3 and 3.4. This library is depended on by many other downstream packages such as Flask-Oauth.\n\n# Installing\n\nYou can install `oauth2` via [the PIP package](https://pypi.python.org/pypi/oauth2). \n\n    $ pip install oauth2\n    \nWe recommend using [virtualenv](https://virtualenv.pypa.io/en/latest/).\n\n# Examples\n\nExamples can be found in the [wiki](https://github.com/joestump/python-oauth2/wiki)\n\n# Running tests\nYou can run tests using the following at the command line:\n\n    $ pip install -r requirements.txt\n    $ python setup.py test\n\n\n# History\n\nThis code was originally forked from [Leah Culver and Andy Smith's oauth.py code](http://github.com/leah/python-oauth/). Some of the tests come from a [fork by Vic Fryzel](http://github.com/shellsage/python-oauth), while a revamped Request class and more tests were merged in from [Mark Paschal's fork](http://github.com/markpasc/python-oauth). A number of notable differences exist between this code and its forefathers:\n\n* 100% unit test coverage.\n* The <code>DataStore</code> object has been completely ripped out. While creating unit tests for the library I found several substantial bugs with the implementation and confirmed with Andy Smith that it was never fully baked.\n* Classes are no longer prefixed with <code>OAuth</code>.\n* The <code>Request</code> class now extends from <code>dict</code>.\n* The library is likely no longer compatible with Python 2.3.\n* The <code>Client</code> class works and extends from <code>httplib2</code>. It's a thin wrapper that handles automatically signing any normal HTTP request you might wish to make.\n"}, {"repo": "/kaiye/kaiye.github.com", "language": "HTML", "readme_contents": "![](https://img.shields.io/badge/\u6709\u7406\u60f3-+1-brightgreen.svg)\n![](https://img.shields.io/badge/\u7231\u5b66\u4e60-+1-brightgreen.svg)\n![](https://img.shields.io/badge/\u5b9e\u529b\u6d3e-+1-brightgreen.svg)\n\n## \u7b80\u4ecb\n\n\u7ad9\u70b9\uff1a [yekai.net](http://yekai.net)\n\n\u5fae\u4fe1\u516c\u4f17\u53f7\uff1a \u300c\u732b\u54e5\u5b66\u524d\u73ed\u300d   \n![](img/imgxqb.jpg)\n\n"}, {"repo": "/css-modules/css-modules", "language": null, "readme_contents": "<img src=\"https://raw.githubusercontent.com/css-modules/logos/master/css-modules-logo.png\" width=\"150\" height=\"150\" />\n\n# CSS Modules\n\nA **CSS Module** is a CSS file in which all class names and animation names are scoped locally by default. All URLs (`url(...)`) and `@imports` are in module request format (`./xxx` and `../xxx` means relative, `xxx` and `xxx/yyy` means in modules folder, i. e. in `node_modules`).\n\nCSS Modules compile to a low-level interchange format called ICSS or [Interoperable CSS](https://github.com/css-modules/icss), but are written like normal CSS files:\n\n``` css\n/* style.css */\n.className {\n  color: green;\n}\n```\n\nWhen importing the **CSS Module** from a JS Module, it exports an object with all mappings from local names to global names.\n\n``` js\nimport styles from \"./style.css\";\n// import { className } from \"./style.css\";\n\nelement.innerHTML = '<div class=\"' + styles.className + '\">';\n```\n\n## Naming\n\nFor local class names camelCase naming is recommended, but not enforced.\n\n> This is recommended because the common alternative, kebab-casing may cause unexpected behavior when trying to access style.class-name as a dot notation. You can still work around kebab-case with bracket notation (eg. `style['class-name']`) but `style.className` is cleaner.\n\n## Exceptions\n\n`:global` switches to global scope for the current selector respective identifier. `:global(.xxx)` respective `@keyframes :global(xxx)` declares the stuff in parenthesis in the global scope.\n\nSimilarly, `:local` and `:local(...)` for local scope.\n\nIf the selector is switched into global mode, global mode is also activated for the rules. (This allows us to make `animation: abc;` local.)\n\nExample: `.localA :global .global-b .global-c :local(.localD.localE) .global-d`\n\n## Composition\n\nIt's possible to compose selectors.\n\n``` css\n.className {\n  color: green;\n  background: red;\n}\n\n.otherClassName {\n  composes: className;\n  color: yellow;\n}\n```\n\nThere can be multiple `composes` rules, but `composes` rules must be before other rules. Extending works only for local-scoped selectors and only if the selector is a single class name. When a class name composes another class name, the **CSS Module** exports both class names for the local class. This can add up to multiple class names.\n\nIt's possible to compose multiple classes with `composes: classNameA classNameB;`.\n\n## Dependencies\n\n### Composing from other files\n\nIt's possible to compose class names from other **CSS Modules**.\n\n``` css\n.otherClassName {\n  composes: className from \"./style.css\";\n}\n```\n\nNote that when composing multiple classes from different files the order of appliance is *undefined*. Make sure to not define different values for the same property in multiple class names from different files when they are composed in a single class.\n\nNote that composing should not form a circular dependency. Elsewise it's *undefined* whether properties of a rule override properties of a composed rule. The module system may emit an error.\n\nBest if classes do a single thing and dependencies are hierarchic.\n\n### Composing from global class names\n\nIt's possible to compose from **global** class names.\n\n```css\n.otherClassName {\n  composes: globalClassName from global;\n}\n```\n\n## Usage with preprocessors\n\nPreprocessors can make it easy to define a block global or local.\n\ni. e. with less.js\n\n``` less\n:global {\n  .global-class-name {\n    color: green;\n  }\n}\n```\n\n## Why?\n\n**modular** and **reusable** CSS!\n\n* No more conflicts.\n* Explicit dependencies.\n* No global scope.\n\n## Examples\n\n* [css-modules/webpack-demo](https://github.com/css-modules/webpack-demo)\n* [outpunk/postcss-modules-example](https://github.com/outpunk/postcss-modules-example)\n* [Theming](docs/theming.md)\n* [css-modules/browserify-demo](https://github.com/css-modules/browserify-demo)\n* [x-team/starting-css-modules](https://github.com/x-team/starting-css-modules)\n\n## History\n\n* 04/2015: `placeholders` feature in css-loader (webpack) allows local scoped selectors (later renamed to `local scope`) by @sokra\n* 05/2015: `postcss-local-scope` enables `local scope` by default (see [blog post](https://medium.com/seek-ui-engineering/the-end-of-global-css-90d2a4a06284)) by @markdalgleish\n* 05/2015: `extends` feature in css-loader allow to compose local or imported class names by @sokra\n* 05/2015: First CSS Modules spec document and github organization with @sokra, @markdalgleish and @geelen\n* 06/2015: `extends` renamed to `composes`\n* 06/2015: PostCSS transformations to transform CSS Modules into an intermediate format (ICSS)\n* 06/2015: Spec for ICSS as common implementation format for multiple module systems by @geelen\n* 06/2015: Implementation for jspm by @geelen and @guybedford\n* 06/2015: Implementation for browserify by @joshwnj, @joshgillies and @markdalgleish\n* 06/2015: webpack's css-loader implementation  updated to latest spec by @sokra\n\n\n## Implementations\n\n### webpack\n\nWebpack's [css-loader](https://github.com/webpack/css-loader) in module mode replaces every local-scoped identifier with a global unique name (hashed from module name and local identifier by default) and exports the used identifier.\n\nExtending adds the source class name(s) to the exports.\n\nExtending from other modules first imports the other module and then adds the class name(s) to the exports.\n\n### Server-side and static websites\n\n[PostCSS-Modules](https://github.com/outpunk/postcss-modules) allows to use CSS Modules for static builds and the server side with Ruby, PHP or any other language or framework.\n"}, {"repo": "/curl/curl", "language": "C", "readme_contents": "                                  _   _ ____  _\n                              ___| | | |  _ \\| |\n                             / __| | | | |_) | |\n                            | (__| |_| |  _ <| |___\n                             \\___|\\___/|_| \\_\\_____|\n\nREADME\n\n  Curl is a command line tool for transferring data specified with URL\n  syntax. Find out how to use curl by reading the curl.1 man page or the\n  MANUAL document. Find out how to install Curl by reading the INSTALL\n  document.\n\n  libcurl is the library curl is using to do its job. It is readily\n  available to be used by your software. Read the libcurl.3 man page to\n  learn how!\n\n  You find answers to the most frequent questions we get in the FAQ document.\n\n  Study the COPYING file for distribution terms and similar. If you distribute\n  curl binaries or other binaries that involve libcurl, you might enjoy the\n  LICENSE-MIXING document.\n\nCONTACT\n\n  If you have problems, questions, ideas or suggestions, please contact us\n  by posting to a suitable mailing list. See https://curl.haxx.se/mail/\n\n  All contributors to the project are listed in the THANKS document.\n\nWEB SITE\n\n  Visit the curl web site for the latest news and downloads:\n\n        https://curl.haxx.se/\n\nGIT\n\n  To download the very latest source off the GIT server do this:\n\n    git clone https://github.com/curl/curl.git\n\n  (you'll get a directory named curl created, filled with the source code)\n\nSECURITY PROBLEMS\n\n  Report suspected security problems via our HackerOne page and not in public!\n\n    https://hackerone.com/curl\n\nNOTICE\n\n  Curl contains pieces of source code that is Copyright (c) 1998, 1999\n  Kungliga Tekniska H\u00f6gskolan. This notice is included here to comply with the\n  distribution terms.\n"}, {"repo": "/yasoob/intermediatePython", "language": "Python", "readme_contents": "![Intermediate Python Book Cover](_static/cover.png)\n\nIntermediate Python\n===================\n\nPython is an amazing language with a strong and friendly community of programmers. However, there is a lack of documentation on what to learn after getting the basics of Python down your throat. Through this book I aim to solve this problem. I will give you bits of information about some interesting topics which you can further explore.\n\nThe topics which are discussed in this book will open your mind to some nice corners of Python language. This book is an outcome of my desire to have something like this when I was beginning to learn Python.\n\nIf you are a beginner, intermediate or even an advanced programmer there is something for you in this book.\n\nPlease note that this book is not a tutorial and does not teach you Python. The topics are not explained in-depth and only the minimum required information is given.\n\nI am sure you are as excited as I am. So, let\u2019s start!\n\nNote: This book is a work in progress. If you find anything which you can further improve (I know you will find a lot of stuff) then kindly submit a pull request. :)\n\nMoreover, if you want to add more content to this book then kindly submit a pull request and I will be more than happy to merge it. :+1:\n\n-------------------\n\n**Note:** If you want to tip me for my work then you can buy the donation version of this book from [Gumroad](https://gum.co/intermediate_python). Apart from that, if this book somehow helps you then kindly share your experience with [me](mailto:yasoob.khld@gmail.com). I would really appreciate it.\n\n-------------------\n\nTable of Contents:\n------------------\n1) Programmer tools\n    - [Virtual Environment](virtual_environment.rst)\n    - [Debugging](debugging.rst)\n    - [Object introspection](object_introspection.rst)\n2) Syntax\n    - [Exceptions](exceptions.rst)\n    - [For - Else](for_-_else.rst)\n    - [Ternary Operators](ternary_operators.rst)\n    - [Global & Return](global_&_return.rst)\n    - [Open function](open_function.rst)\n    - [\\*args and \\*\\*kwargs](args_and_kwargs.rst)\n    - [Context managers](context_managers.rst)\n3) Functional programming\n    - [Enumerate](enumerate.rst)\n    - [Lambdas](lambdas.rst)\n    - [``set`` Data Structure](set_-_data_structure.rst)\n    - [Map & Filter](map_filter.rst)\n    - [Comprehensions](comprehensions.rst)\n4) Data structures\n    - [Generators](generators.rst)\n    - [Coroutines](coroutines.rst)\n    - [Classes](classes.rst)\n5) Data types\n    - [Collections](collections.rst)\n    - [Mutation](mutation.rst)\n    - [\\_\\_slots\\_\\_ Magic](__slots__magic.rst)\n6) Decorators\n    - [What is a decorator?](decorators.rst)\n    - [Function caching](function_caching.rst)\n7) Extras\n    - [One Liners](one_liners.rst)\n    - [Targeting Python 2+3](targeting_python_2_3.rst)\n    - [Python C extensions](python_c_extension.rst)\n\nAuthor:\n------\n\n- [Muhammad Yasoob Ullah Khalid](https://github.com/yasoob)\n\nAcknowledgement:\n----------------\n\n- [Philipp Hagemeister](https://github.com/phihag):\n\nHe wrote the chapter on Open function. Thanks Philipp! :+1:\n\nTranslation:\n------------\nIf you want to translate this book in any other language then kindly let [me know](mailto:yasoob.khld@gmail.com). I would love your contribution. The currently translated versions are listed below:\n\n- [Chinese](https://github.com/eastlakeside/interpy-zh)\n- [Russian](https://github.com/lancelote/interpy-ru)\n- [Korean](https://github.com/DDanggle/interpy-kr)\n- [Portuguese](https://github.com/joanasouza/intermediatePython)\n\nLicense:\n-------\n\nThis book is released under the [following](http://creativecommons.org/licenses/by-nc-sa/4.0/) CC license (CC BY-NC-SA 4.0).\n\nIf you end up using/recommending this book to someone then kindly [let me know](mailto:yasoob.khld@gmail.com). :smile:\n\n\n"}, {"repo": "/lzjqsdd/scikit-learn-doc-cn", "language": "HTML", "readme_contents": "# scikit-learn-doc-cn\n\n[![Build Status](https://travis-ci.org/lzjqsdd/scikit-learn-doc-cn.svg?branch=master)](https://travis-ci.org/lzjqsdd/scikit-learn-doc-cn) ![Build Status](https://img.shields.io/badge/sklearn-0.17stable-brightgreen.svg)\t![Build Status](https://img.shields.io/badge/python-2.7.6-brightgreen.svg)\n\nsklearn\u5e93\u4f5c\u4e3a\u76ee\u524d\u673a\u5668\u5b66\u4e60\u975e\u5e38\u6d41\u884c\u7684python\u5e93\uff0c\u4e00\u4e2a\u6613\u8bfb\u7684\u6587\u6863\u66f4\u6709\u52a9\u4e8e\u5de5\u5177\u5e93\u7684\u7406\u89e3\u548c\u4f7f\u7528\uff0c\u867d\u7136\u505a\u673a\u5668\u5b66\u4e60\u65b9\u9762\u7684\u5b66\u751f\u548c\u5de5\u7a0b\u5e08\u9605\u8bfb\u82f1\u6587\u5e76\u6ca1\u6709\u5f88\u5927\u538b\u529b\uff0c\u4f46\u662f\u5728\u9605\u8bfb\u901f\u5ea6\u4e0a\u8fd8\u662f\u4f1a\u6709\u4e9b\u5f71\u54cd\u3002\n\u5bfb\u627e\u5df2\u4e45\u6ca1\u627e\u5230\u76f8\u5173\u7684\u4e2d\u6587\u6587\u6863\uff0c\u800c\u4e14\u7ffb\u8bd1\u7684\u8fc7\u7a0b\u4e5f\u662f\u5bf9\u77e5\u8bc6\u719f\u6089\u7684\u8fc7\u7a0b\uff0c\u60a8\u53ef\u4ee5\u5728\u5b66\u4e60\u67d0\u4e00\u4e2a\u7ae0\u8282\u7684\u8fc7\u7a0b\u987a\u4fbf\u7ffb\u8bd1\u4e00\u4e0b\u5c31\u53ef\u4ee5\u8d21\u732e\u81ea\u5df1\u7684\u529b\u91cf\u3002\n\n*\u6b22\u8fce\u5927\u5bb6\u8e0a\u8dc3\u52a0\u5165\uff01\u5982\u679c\u6709\u66f4\u597d\u7684\u7ffb\u8bd1\u7ec4\u7ec7\u5f62\u5f0f\u4e5f\u6b22\u8fce\u63d0\u51fa\uff01*\n\n**\u52a0\u5165\u5fae\u4fe1\u7fa4**\n\n![sklearn_wechat](https://raw.githubusercontent.com/lzjqsdd/scikit-learn-doc-cn/master/sklearn.PNG)\n\n*\u4e2d\u6587\u6587\u6863\u5730\u5740:[sklearn.lzjqsdd.com](http://sklearn.lzjqsdd.com)\n\n# \u7ffb\u8bd1\u8ba1\u5212\n\n| \u56fe\u6807  |  \u72b6\u6001 |\n|:----------------|:------------:|\n| ![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)| \u7ffb\u8bd1\u4e2d|\n| ![Build Status](https://img.shields.io/badge/translate-done-blue.svg)| \u7ffb\u8bd1\u7ed3\u675f|\n| ![Build Status](https://img.shields.io/badge/translate-undo-lightgray.svg)| \u6682\u672a\u5f00\u59cb|\n\n\n## \u7b2c\u4e00\u9636\u6bb5\n\u76f8\u5173\u7b97\u6cd5\u793a\u4f8b\u7a0b\u5e8f\u7684\u7ffb\u8bd1\uff0c\u4f4d\u4e8emodules\u4e0b\uff0c\u5177\u4f53\u5217\u8868\u5982\u4e0b\uff1a\n\n\n| \u6587\u4ef6                | \u7ffb\u8bd1\u72b6\u6001        | \u8d21\u732e\u8005\n|:------------------- |:-------------| :-------:|\n| linear_model.rst    | ![Build Status](https://img.shields.io/badge/translate-done-blue.svg) | lzjqsdd |\n| biclustering.rst    | ![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)    | alingse |\n| calibration.rst | ![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg) |woshikangfei| \n| classes.rst |![Build Status](https://img.shields.io/badge/translate-done-blue.svg) |woshikangfei|\n| clustering.rst | ![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|huangbinapple|\n| computational_performance.rst |![Build Status](https://img.shields.io/badge/translate-done-blue.svg) | iphyer |\n| covariance.rst |![Build Status](https://img.shields.io/badge/translate-done-blue.svg)| RobinSeaside |\n| cross_decomposition.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|muyeby|\n| cross_validation.rst |![Build Status](https://img.shields.io/badge/translate-done-blue.svg)| LianYun |\n| decomposition.rst |![Build Status](https://img.shields.io/badge/translate-undo-lightgray.svg)| heyuanhao |\n| density.rst |![Build Status](https://img.shields.io/badge/translate-done-blue.svg)| RobinSeaside |\n| dp-derivation.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg) | leavesandflowers |\n| ensemble.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|ustblzj|\n| feature_extraction.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)| minoriwww |\n| feature_selection.rst |![Build Status](https://img.shields.io/badge/translate-done-blue.svg)| taoyizhi68 |\n| gaussian_process.rst |![Build Status](https://img.shields.io/badge/translate-done-blue.svg)|alingse|\n| grid_search.rst | ![Build Status](https://img.shields.io/badge/translate-done-blue.svg) | LianYun |\n| isotonic.rst | ![Build Status](https://img.shields.io/badge/translate-done-blue.svg) | LinXueyuanStdio|\n| kernel_approximation.rst |![Build Status](https://img.shields.io/badge/translate-undo-lightgray.svg)|heyuanhao|\n| kernel_ridge.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|[nevertiree](https://github.com/nevertiree)|\n| label_propagation.rst |![Build Status](https://img.shields.io/badge/translate-done-blue.svg)| lihao1992 |\n| lda_qda.rst |![Build Status](https://img.shields.io/badge/translate-done-blue.svg)|ShangruZhong|\n| learning_curve.rst |![Build Status](https://img.shields.io/badge/translate-done-blue.svg)| taoyizhi68 |\n| manifold.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|[nevertiree](https://github.com/nevertiree)|\n| metrics.rst |![Build Status](https://img.shields.io/badge/translate-done-blue.svg)|[frankchen0130](https://frankchen0130.github.io/)|\n| mixture.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|haisheng-zhang|\n| model_evaluation.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|ShangruZhong|\n| model_persistence.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|iphyer|\n| multiclass.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|iphyer|\n| naive_bayes.rst |![Build Status](https://img.shields.io/badge/translate-done-blue.svg)| minoriwww |\n| neighbors.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|zhongyu211|\n| neural_networks_supervised.rst |![Build Status](https://img.shields.io/badge/translate-done-blue.svg)|RobinSeaside|\n| neural_networks_unsupervised.rst |![Build Status](https://img.shields.io/badge/translate-done-blue.svg)|RobinSeaside|\n| outlier_detection.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|iphyer|\n| pipeline.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|bwanglzu|\n| preprocessing.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|Perfe|\n| preprocessing_targets.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|Perfe|\n| random_projection.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|iphyer|\n| scaling_strategies.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|iphyer|\n| sgd.rst |![Build Status](https://img.shields.io/badge/translate-done-blue.svg)|lzjqsdd|\n| tree.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|RobinSeaside|\n| unsupervised_reduction.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|iphyer|\n| svm.rst |![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|lzjqsdd|\n| decomposition.rst|![Build Status](https://img.shields.io/badge/translate-doing-brightgreen.svg)|[Stephen.Z](https://github.com/StephenZMZ/)|\n\n\u9996\u5148fork\u8be5\u9879\u76ee\u5230\u4e2a\u4ebagithub\uff0cclone\u5230\u672c\u5730\uff0c\u4fee\u6539README\u4e2d\u8981\u7533\u9886\u7684\u7ffb\u8bd1\u5185\u5bb9\u7684\u72b6\u6001\uff0c\u63d0\u4ea4pull request,\u63a5\u53d7\u4e4b\u540e\u5373\u53ef\u5f00\u59cb\u7ffb\u8bd1\u5de5\u4f5c\u3002\n\u7ffb\u8bd1\u7ed3\u675f\u540e\u786e\u4fdd\u53ef\u6b63\u5e38\u7f16\u8bd1\u6210html\uff0c\u7136\u540e\u53ea\u63d0\u4ea4rst\u6587\u4ef6\u7684\u4fee\u6539\uff0c\u4e0d\u8981\u6dfb\u52a0sphinx\u751f\u6210\u7684\u6587\u4ef6\u3002\n**\u6240\u6709\u7ffb\u8bd1\u540e\u7684\u6587\u6863\u4ee5\u540c\u540d\u7684\u65b9\u5f0f\u6dfb\u52a0\u5230translate/\u540c\u76ee\u5f55\u6587\u4ef6\u5939\u4e0b,\u4f8b\u5982\uff1a**  \n\n    svm.rst\u7684\u7ffb\u8bd1\u6587\u6863 \u63d0\u4ea4\u5230\u9879\u76eetranslate/modules/svm.rst\u4e0b,\u7ffb\u8bd1\u5b8c\u6210\u4e4b\u540e\u8986\u76d6doc/modules/svm.rst\u3002\n\n*\u5efa\u8bae\u7ffb\u8bd1\u65f6\u53c2\u8003[wiki](https://github.com/lzjqsdd/scikit-learn-doc-cn/wiki/%E5%B8%B8%E8%A7%81%E7%BF%BB%E8%AF%91%E5%AF%B9%E5%BA%94%E8%A1%A8)\u4e2d\u7684\u672f\u8bed\u5bf9\u7167\u8868*\n*\u63a8\u8350\u6587\u672c\u7f16\u8f91\u5668:vscode+Preview\u63d2\u4ef6 \u6216 vim \uff0c\u53ef\u4ee5\u5bf9rst\u6587\u4ef6\u8bed\u6cd5\u9ad8\u4eae\uff0c\u907f\u514d\u7ffb\u8bd1\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u8bed\u6cd5\u9519\u8bef*\n\n\n## \u9636\u6bb5\u4e8c\n\u5b98\u65b9\u6846\u67b6\u7ffb\u8bd1\n\n# \u914d\u7f6e\u53ca\u7f16\u8bd1\n\n### \u81ea\u52a8\u90e8\u7f72\n\n    \u672c\u9879\u76ee\u91c7\u7528travis-ci\u6301\u7eed\u96c6\u6210\u6765\u5b9e\u73b0\u81ea\u52a8\u7f16\u8bd1\u90e8\u7f72\uff0c\u7ffb\u8bd1\u7684\u6587\u6863\u63d0\u4ea4pull request\u5230master\uff0c\u5408\u5e76\u540e\u4f1a\u81ea\u52a8\u628ahtml\u90e8\u7f72\u5230gh-pages\u5206\u652f\u4e0a\uff0c\u7f51\u7ad9\u6258\u7ba1\u5728sklearn.lzjqsdd.com\n\n### \u672c\u5730\u7f16\u8bd1\n\u5b89\u88c5\u5fc5\u8981\u7684\u73af\u5883:\n\n\tsudo pip install numpy\n    sudo pip install scipy\n    sudo pip install sphinx\n    #\u4e0a\u8ff0\u4e3a\u4f9d\u8d56\u7684\u5305\n    sudo pip install -U scikit-learn\n\n\u751f\u6210html\uff08\u548c\u5b98\u7f51web\u9875\u4e00\u6837\uff09\n\n    make html\n\n\u751f\u6210\u6587\u4ef6\u4f1a\u5728\u5728_build/html\u76ee\u5f55\u4e0b:\n\n\u5982\u679c\u8981\u751f\u6210PDF\u624b\u518c\u7684\u8bdd\uff1a\n\n    make latexpdf\n\n\u90e8\u7f72gh-pages\uff1a\n\n\t\u7531\u4e8eSphinx\u751f\u6210\u7684html\u6709\u81ea\u5df1\u7684\u9759\u6001\u8d44\u6e90\uff0c\u9700\u8981\u5728gh-pages\u5206\u652f\u52a0\u5165.nojekyll\u6587\u4ef6\u3002\n\n\u914d\u7f6e\u4e2d\u5176\u4ed6\u7684\u95ee\u9898\uff1a\n\t[Issue](https://github.com/lzjqsdd/scikit-learn-doc-cn/blob/master/issue.md)\n"}, {"repo": "/scikit-learn/scikit-learn", "language": "Python", "readme_contents": ".. -*- mode: rst -*-\n\n|Azure|_ |Travis|_ |Codecov|_ |CircleCI|_ |PythonVersion|_ |PyPi|_ |DOI|_\n\n.. |Azure| image:: https://dev.azure.com/scikit-learn/scikit-learn/_apis/build/status/scikit-learn.scikit-learn?branchName=master\n.. _Azure: https://dev.azure.com/scikit-learn/scikit-learn/_build/latest?definitionId=1&branchName=master\n\n.. |Travis| image:: https://api.travis-ci.org/scikit-learn/scikit-learn.svg?branch=master\n.. _Travis: https://travis-ci.org/scikit-learn/scikit-learn\n\n.. |Codecov| image:: https://codecov.io/github/scikit-learn/scikit-learn/badge.svg?branch=master&service=github\n.. _Codecov: https://codecov.io/github/scikit-learn/scikit-learn?branch=master\n\n.. |CircleCI| image:: https://circleci.com/gh/scikit-learn/scikit-learn/tree/master.svg?style=shield&circle-token=:circle-token\n.. _CircleCI: https://circleci.com/gh/scikit-learn/scikit-learn\n\n.. |PythonVersion| image:: https://img.shields.io/pypi/pyversions/scikit-learn.svg\n.. _PythonVersion: https://img.shields.io/pypi/pyversions/scikit-learn.svg\n\n.. |PyPi| image:: https://badge.fury.io/py/scikit-learn.svg\n.. _PyPi: https://badge.fury.io/py/scikit-learn\n\n.. |DOI| image:: https://zenodo.org/badge/21369/scikit-learn/scikit-learn.svg\n.. _DOI: https://zenodo.org/badge/latestdoi/21369/scikit-learn/scikit-learn\n\nscikit-learn\n============\n\nscikit-learn is a Python module for machine learning built on top of\nSciPy and is distributed under the 3-Clause BSD license.\n\nThe project was started in 2007 by David Cournapeau as a Google Summer\nof Code project, and since then many volunteers have contributed. See\nthe `About us <http://scikit-learn.org/dev/about.html#authors>`__ page\nfor a list of core contributors.\n\nIt is currently maintained by a team of volunteers.\n\nWebsite: http://scikit-learn.org\n\n\nInstallation\n------------\n\nDependencies\n~~~~~~~~~~~~\n\nscikit-learn requires:\n\n- Python (>= 3.5)\n- NumPy (>= 1.11.0)\n- SciPy (>= 0.17.0)\n- joblib (>= 0.11)\n\n**Scikit-learn 0.20 was the last version to support Python 2.7 and Python 3.4.**\nscikit-learn 0.21 and later require Python 3.5 or newer.\n\nScikit-learn plotting capabilities (i.e., functions start with ``plot_``\nand classes end with \"Display\") require Matplotlib (>= 1.5.1). For running the\nexamples Matplotlib >= 1.5.1 is required. A few examples require\nscikit-image >= 0.12.3, a few examples require pandas >= 0.18.0.\n\nUser installation\n~~~~~~~~~~~~~~~~~\n\nIf you already have a working installation of numpy and scipy,\nthe easiest way to install scikit-learn is using ``pip``   ::\n\n    pip install -U scikit-learn\n\nor ``conda``::\n\n    conda install scikit-learn\n\nThe documentation includes more detailed `installation instructions <http://scikit-learn.org/stable/install.html>`_.\n\n\nChangelog\n---------\n\nSee the `changelog <http://scikit-learn.org/dev/whats_new.html>`__\nfor a history of notable changes to scikit-learn.\n\nDevelopment\n-----------\n\nWe welcome new contributors of all experience levels. The scikit-learn\ncommunity goals are to be helpful, welcoming, and effective. The\n`Development Guide <http://scikit-learn.org/stable/developers/index.html>`_\nhas detailed information about contributing code, documentation, tests, and\nmore. We've included some basic information in this README.\n\nImportant links\n~~~~~~~~~~~~~~~\n\n- Official source code repo: https://github.com/scikit-learn/scikit-learn\n- Download releases: https://pypi.org/project/scikit-learn/\n- Issue tracker: https://github.com/scikit-learn/scikit-learn/issues\n\nSource code\n~~~~~~~~~~~\n\nYou can check the latest sources with the command::\n\n    git clone https://github.com/scikit-learn/scikit-learn.git\n\nContributing\n~~~~~~~~~~~~\n\nTo learn more about making a contribution to scikit-learn, please see our\n`Contributing guide\n<https://scikit-learn.org/dev/developers/contributing.html>`_.\n\nTesting\n~~~~~~~\n\nAfter installation, you can launch the test suite from outside the\nsource directory (you will need to have ``pytest`` >= 3.3.0 installed)::\n\n    pytest sklearn\n\nSee the web page http://scikit-learn.org/dev/developers/advanced_installation.html#testing\nfor more information.\n\n    Random number generation can be controlled during testing by setting\n    the ``SKLEARN_SEED`` environment variable.\n\nSubmitting a Pull Request\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBefore opening a Pull Request, have a look at the\nfull Contributing page to make sure your code complies\nwith our guidelines: http://scikit-learn.org/stable/developers/index.html\n\n\nProject History\n---------------\n\nThe project was started in 2007 by David Cournapeau as a Google Summer\nof Code project, and since then many volunteers have contributed. See\nthe `About us <http://scikit-learn.org/dev/about.html#authors>`__ page\nfor a list of core contributors.\n\nThe project is currently maintained by a team of volunteers.\n\n**Note**: `scikit-learn` was previously referred to as `scikits.learn`.\n\n\nHelp and Support\n----------------\n\nDocumentation\n~~~~~~~~~~~~~\n\n- HTML documentation (stable release): http://scikit-learn.org\n- HTML documentation (development version): http://scikit-learn.org/dev/\n- FAQ: http://scikit-learn.org/stable/faq.html\n\nCommunication\n~~~~~~~~~~~~~\n\n- Mailing list: https://mail.python.org/mailman/listinfo/scikit-learn\n- IRC channel: ``#scikit-learn`` at ``webchat.freenode.net``\n- Stack Overflow: https://stackoverflow.com/questions/tagged/scikit-learn\n- Website: http://scikit-learn.org\n\nCitation\n~~~~~~~~\n\nIf you use scikit-learn in a scientific publication, we would appreciate citations: http://scikit-learn.org/stable/about.html#citing-scikit-learn\n"}, {"repo": "/rauchg/chat-example", "language": "HTML", "readme_contents": "Now maintained here: https://github.com/socketio/chat-example\n"}, {"repo": "/adobe-fonts/source-code-pro", "language": "CSS", "readme_contents": "# Source Code Pro\n\n[Source Code Pro](http://adobe-fonts.github.io/source-code-pro/)\nis a set of OpenType fonts that have been designed to work well\nin user interface (UI) environments.\n\n## Open source files\n\nThe fonts' source files and build instructions are available in the [repository's `master` branch](https://github.com/adobe-fonts/source-code-pro/tree/master).\n\n## Getting involved\n\n[Open an issue](https://github.com/adobe-fonts/source-code-pro/issues) or send a suggestion to Source Code's designer [Paul D. Hunt](mailto:opensourcefonts@adobe.com?subject=[GitHub]%20Source%20Code%20Pro), for consideration.\n\n## Releases\n\n* [Latest release](../../releases/latest)\n* [All releases](../../releases)\n"}, {"repo": "/WICG/change-password-url", "language": "HTML", "readme_contents": "# A Well-Known URL for Changing Passwords\n\nThis [specification](https://wicg.github.io/change-password-url/index.html) defines the <code>/.well-known/change-password</code>\n[well-known resource](https://tools.ietf.org/html/rfc5785).\n\nFor more context, please read the [explainer](explainer.md).\n\nAll [participation](CONTRIBUTING.md) is governed by the\n[W3C Community Group Participation Policies](https://www.w3.org/community/about/agreements/#policies), the\n[Web Platform Incubator Community Group Charter](https://wicg.github.io/admin/charter.html), and the\n[W3C Code of Ethics and Professional Conduct](https://www.w3.org/Consortium/cepc/).\n"}, {"repo": "/kenwoodjw/python_interview_question", "language": null, "readme_contents": "<!-- TOC -->\n\n- [Python\u57fa\u7840](#python\u57fa\u7840)\n    - [\u6587\u4ef6\u64cd\u4f5c](#\u6587\u4ef6\u64cd\u4f5c)\n        - [1.\u6709\u4e00\u4e2ajsonline\u683c\u5f0f\u7684\u6587\u4ef6file.txt\u5927\u5c0f\u7ea6\u4e3a10K](#1\u6709\u4e00\u4e2ajsonline\u683c\u5f0f\u7684\u6587\u4ef6filetxt\u5927\u5c0f\u7ea6\u4e3a10k)\n        - [2.\u8865\u5145\u7f3a\u5931\u7684\u4ee3\u7801](#2\u8865\u5145\u7f3a\u5931\u7684\u4ee3\u7801)\n    - [\u6a21\u5757\u4e0e\u5305](#\u6a21\u5757\u4e0e\u5305)\n        - [3.\u8f93\u5165\u65e5\u671f\uff0c \u5224\u65ad\u8fd9\u4e00\u5929\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929\uff1f](#3\u8f93\u5165\u65e5\u671f-\u5224\u65ad\u8fd9\u4e00\u5929\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929)\n        - [4.\u6253\u4e71\u4e00\u4e2a\u6392\u597d\u5e8f\u7684list\u5bf9\u8c61alist\uff1f](#4\u6253\u4e71\u4e00\u4e2a\u6392\u597d\u5e8f\u7684list\u5bf9\u8c61alist)\n    - [\u6570\u636e\u7c7b\u578b](#\u6570\u636e\u7c7b\u578b)\n        - [5.\u73b0\u6709\u5b57\u5178 d= {'a':24,'g':52,'i':12,'k':33}\u8bf7\u6309value\u503c\u8fdb\u884c\u6392\u5e8f?](#5\u73b0\u6709\u5b57\u5178-d-a24g52i12k33\u8bf7\u6309value\u503c\u8fdb\u884c\u6392\u5e8f)\n        - [6.\u5b57\u5178\u63a8\u5bfc\u5f0f](#6\u5b57\u5178\u63a8\u5bfc\u5f0f)\n        - [7.\u8bf7\u53cd\u8f6c\u5b57\u7b26\u4e32 \"aStr\"?](#7\u8bf7\u53cd\u8f6c\u5b57\u7b26\u4e32-astr)\n        - [8.\u5c06\u5b57\u7b26\u4e32 \"k:1 |k1:2|k2:3|k3:4\"\uff0c\u5904\u7406\u6210\u5b57\u5178 {k:1,k1:2,...}](#8\u5c06\u5b57\u7b26\u4e32-k1-k12k23k34\u5904\u7406\u6210\u5b57\u5178-k1k12)\n        - [9.\u8bf7\u6309alist\u4e2d\u5143\u7d20\u7684age\u7531\u5927\u5230\u5c0f\u6392\u5e8f](#9\u8bf7\u6309alist\u4e2d\u5143\u7d20\u7684age\u7531\u5927\u5230\u5c0f\u6392\u5e8f)\n        - [10.\u4e0b\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5c06\u662f\u4ec0\u4e48\uff1f](#10\u4e0b\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5c06\u662f\u4ec0\u4e48)\n        - [11.\u5199\u4e00\u4e2a\u5217\u8868\u751f\u6210\u5f0f\uff0c\u4ea7\u751f\u4e00\u4e2a\u516c\u5dee\u4e3a11\u7684\u7b49\u5dee\u6570\u5217](#11\u5199\u4e00\u4e2a\u5217\u8868\u751f\u6210\u5f0f\u4ea7\u751f\u4e00\u4e2a\u516c\u5dee\u4e3a11\u7684\u7b49\u5dee\u6570\u5217)\n        - [12.\u7ed9\u5b9a\u4e24\u4e2a\u5217\u8868\uff0c\u600e\u4e48\u627e\u51fa\u4ed6\u4eec\u76f8\u540c\u7684\u5143\u7d20\u548c\u4e0d\u540c\u7684\u5143\u7d20\uff1f](#12\u7ed9\u5b9a\u4e24\u4e2a\u5217\u8868\u600e\u4e48\u627e\u51fa\u4ed6\u4eec\u76f8\u540c\u7684\u5143\u7d20\u548c\u4e0d\u540c\u7684\u5143\u7d20)\n        - [13.\u8bf7\u5199\u51fa\u4e00\u6bb5python\u4ee3\u7801\u5b9e\u73b0\u5220\u9664list\u91cc\u9762\u7684\u91cd\u590d\u5143\u7d20\uff1f](#13\u8bf7\u5199\u51fa\u4e00\u6bb5python\u4ee3\u7801\u5b9e\u73b0\u5220\u9664list\u91cc\u9762\u7684\u91cd\u590d\u5143\u7d20)\n        - [14.\u7ed9\u5b9a\u4e24\u4e2alist A\uff0cB ,\u8bf7\u7528\u627e\u51faA\uff0cB\u4e2d\u76f8\u540c\u4e0e\u4e0d\u540c\u7684\u5143\u7d20](#14\u7ed9\u5b9a\u4e24\u4e2alist-ab-\u8bf7\u7528\u627e\u51faab\u4e2d\u76f8\u540c\u4e0e\u4e0d\u540c\u7684\u5143\u7d20)\n    - [\u4f01\u4e1a\u9762\u8bd5\u9898](#\u4f01\u4e1a\u9762\u8bd5\u9898)\n        - [15.python\u65b0\u5f0f\u7c7b\u548c\u7ecf\u5178\u7c7b\u7684\u533a\u522b\uff1f](#15python\u65b0\u5f0f\u7c7b\u548c\u7ecf\u5178\u7c7b\u7684\u533a\u522b)\n        - [16.python\u4e2d\u5185\u7f6e\u7684\u6570\u636e\u7ed3\u6784\u6709\u51e0\u79cd\uff1f](#16python\u4e2d\u5185\u7f6e\u7684\u6570\u636e\u7ed3\u6784\u6709\u51e0\u79cd)\n        - [17.python\u5982\u4f55\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f?\u8bf7\u5199\u51fa\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f?](#17python\u5982\u4f55\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f\u8bf7\u5199\u51fa\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f)\n        - [18.\u53cd\u8f6c\u4e00\u4e2a\u6574\u6570\uff0c\u4f8b\u5982-123 --> -321](#18\u53cd\u8f6c\u4e00\u4e2a\u6574\u6570\u4f8b\u5982-123-----321)\n        - [19.\u8bbe\u8ba1\u5b9e\u73b0\u904d\u5386\u76ee\u5f55\u4e0e\u5b50\u76ee\u5f55\uff0c\u6293\u53d6.pyc\u6587\u4ef6](#19\u8bbe\u8ba1\u5b9e\u73b0\u904d\u5386\u76ee\u5f55\u4e0e\u5b50\u76ee\u5f55\u6293\u53d6pyc\u6587\u4ef6)\n        - [20.\u4e00\u884c\u4ee3\u7801\u5b9e\u73b01-100\u4e4b\u548c](#20\u4e00\u884c\u4ee3\u7801\u5b9e\u73b01-100\u4e4b\u548c)\n        - [21.Python-\u904d\u5386\u5217\u8868\u65f6\u5220\u9664\u5143\u7d20\u7684\u6b63\u786e\u505a\u6cd5](#21python-\u904d\u5386\u5217\u8868\u65f6\u5220\u9664\u5143\u7d20\u7684\u6b63\u786e\u505a\u6cd5)\n        - [22.\u5b57\u7b26\u4e32\u7684\u64cd\u4f5c\u9898\u76ee](#22\u5b57\u7b26\u4e32\u7684\u64cd\u4f5c\u9898\u76ee)\n        - [23.\u53ef\u53d8\u7c7b\u578b\u548c\u4e0d\u53ef\u53d8\u7c7b\u578b](#23\u53ef\u53d8\u7c7b\u578b\u548c\u4e0d\u53ef\u53d8\u7c7b\u578b)\n        - [24.is\u548c==\u6709\u4ec0\u4e48\u533a\u522b\uff1f](#24is\u548c\u6709\u4ec0\u4e48\u533a\u522b)\n        - [25.\u6c42\u51fa\u5217\u8868\u6240\u6709\u5947\u6570\u5e76\u6784\u9020\u65b0\u5217\u8868](#25\u6c42\u51fa\u5217\u8868\u6240\u6709\u5947\u6570\u5e76\u6784\u9020\u65b0\u5217\u8868)\n        - [26.\u7528\u4e00\u884cpython\u4ee3\u7801\u5199\u51fa1+2+3+10248](#26\u7528\u4e00\u884cpython\u4ee3\u7801\u5199\u51fa12310248)\n        - [27.Python\u4e2d\u53d8\u91cf\u7684\u4f5c\u7528\u57df\uff1f\uff08\u53d8\u91cf\u67e5\u627e\u987a\u5e8f)](#27python\u4e2d\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u53d8\u91cf\u67e5\u627e\u987a\u5e8f)\n        - [28.\u5b57\u7b26\u4e32 `\"123\"` \u8f6c\u6362\u6210 `123`\uff0c\u4e0d\u4f7f\u7528\u5185\u7f6eapi\uff0c\u4f8b\u5982 `int()`](#28\u5b57\u7b26\u4e32-123-\u8f6c\u6362\u6210-123\u4e0d\u4f7f\u7528\u5185\u7f6eapi\u4f8b\u5982-int)\n        - [29.Given an array of integers](#29given-an-array-of-integers)\n        - [30.python\u4ee3\u7801\u5b9e\u73b0\u5220\u9664\u4e00\u4e2alist\u91cc\u9762\u7684\u91cd\u590d\u5143\u7d20](#30python\u4ee3\u7801\u5b9e\u73b0\u5220\u9664\u4e00\u4e2alist\u91cc\u9762\u7684\u91cd\u590d\u5143\u7d20)\n        - [31.\u7edf\u8ba1\u4e00\u4e2a\u6587\u672c\u4e2d\u5355\u8bcd\u9891\u6b21\u6700\u9ad8\u768410\u4e2a\u5355\u8bcd\uff1f](#31\u7edf\u8ba1\u4e00\u4e2a\u6587\u672c\u4e2d\u5355\u8bcd\u9891\u6b21\u6700\u9ad8\u768410\u4e2a\u5355\u8bcd)\n        - [32.\u8bf7\u5199\u51fa\u4e00\u4e2a\u51fd\u6570\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6](#32\u8bf7\u5199\u51fa\u4e00\u4e2a\u51fd\u6570\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6)\n        - [33.\u4f7f\u7528\u5355\u4e00\u7684\u5217\u8868\u751f\u6210\u5f0f\u6765\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5217\u8868](#33\u4f7f\u7528\u5355\u4e00\u7684\u5217\u8868\u751f\u6210\u5f0f\u6765\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5217\u8868)\n        - [34.\u7528\u4e00\u884c\u4ee3\u7801\u751f\u6210[1,4,9,16,25,36,49,64,81,100]](#34\u7528\u4e00\u884c\u4ee3\u7801\u751f\u6210149162536496481100)\n        - [35.\u8f93\u5165\u67d0\u5e74\u67d0\u6708\u67d0\u65e5\uff0c\u5224\u65ad\u8fd9\u4e00\u5929\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929\uff1f](#35\u8f93\u5165\u67d0\u5e74\u67d0\u6708\u67d0\u65e5\u5224\u65ad\u8fd9\u4e00\u5929\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929)\n        - [36.\u4e24\u4e2a\u6709\u5e8f\u5217\u8868\uff0cl1,l2\uff0c\u5bf9\u8fd9\u4e24\u4e2a\u5217\u8868\u8fdb\u884c\u5408\u5e76\u4e0d\u53ef\u4f7f\u7528extend](#36\u4e24\u4e2a\u6709\u5e8f\u5217\u8868l1l2\u5bf9\u8fd9\u4e24\u4e2a\u5217\u8868\u8fdb\u884c\u5408\u5e76\u4e0d\u53ef\u4f7f\u7528extend)\n        - [37.\u7ed9\u5b9a\u4e00\u4e2a\u4efb\u610f\u957f\u5ea6\u6570\u7ec4\uff0c\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570](#37\u7ed9\u5b9a\u4e00\u4e2a\u4efb\u610f\u957f\u5ea6\u6570\u7ec4\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570)\n        - [38.\u5199\u4e00\u4e2a\u51fd\u6570\u627e\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u4e2d\uff0c\u7b2c\u4e8c\u5927\u7684\u6570](#38\u5199\u4e00\u4e2a\u51fd\u6570\u627e\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u4e2d\u7b2c\u4e8c\u5927\u7684\u6570)\n        - [39.\u9605\u8bfb\u4e00\u4e0b\u4ee3\u7801\u4ed6\u4eec\u7684\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f](#39\u9605\u8bfb\u4e00\u4e0b\u4ee3\u7801\u4ed6\u4eec\u7684\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48)\n        - [40.\u7edf\u8ba1\u4e00\u6bb5\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570](#40\u7edf\u8ba1\u4e00\u6bb5\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570)\n        - [41.super\u51fd\u6570\u7684\u5177\u4f53\u7528\u6cd5\u548c\u573a\u666f](#41super\u51fd\u6570\u7684\u5177\u4f53\u7528\u6cd5\u548c\u573a\u666f)\n- [Python\u9ad8\u7ea7](#python\u9ad8\u7ea7)\n    - [\u5143\u7c7b](#\u5143\u7c7b)\n        - [42.Python\u4e2d\u7c7b\u65b9\u6cd5\u3001\u7c7b\u5b9e\u4f8b\u65b9\u6cd5\u3001\u9759\u6001\u65b9\u6cd5\u6709\u4f55\u533a\u522b\uff1f](#42python\u4e2d\u7c7b\u65b9\u6cd5\u7c7b\u5b9e\u4f8b\u65b9\u6cd5\u9759\u6001\u65b9\u6cd5\u6709\u4f55\u533a\u522b)\n        - [43.\u904d\u5386\u4e00\u4e2aobject\u7684\u6240\u6709\u5c5e\u6027\uff0c\u5e76print\u6bcf\u4e00\u4e2a\u5c5e\u6027\u540d\uff1f](#43\u904d\u5386\u4e00\u4e2aobject\u7684\u6240\u6709\u5c5e\u6027\u5e76print\u6bcf\u4e00\u4e2a\u5c5e\u6027\u540d)\n        - [44.\u5199\u4e00\u4e2a\u7c7b\uff0c\u5e76\u8ba9\u5b83\u5c3d\u53ef\u80fd\u591a\u7684\u652f\u6301\u64cd\u4f5c\u7b26?](#44\u5199\u4e00\u4e2a\u7c7b\u5e76\u8ba9\u5b83\u5c3d\u53ef\u80fd\u591a\u7684\u652f\u6301\u64cd\u4f5c\u7b26)\n        - [45.\u4ecb\u7ecdCython\uff0cPypy Cpython Numba\u5404\u6709\u4ec0\u4e48\u7f3a\u70b9](#45\u4ecb\u7ecdcythonpypy-cpython-numba\u5404\u6709\u4ec0\u4e48\u7f3a\u70b9)\n        - [46.\u8bf7\u63cf\u8ff0\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u7c7b\u7684\u533a\u522b\u548c\u8054\u7cfb](#46\u8bf7\u63cf\u8ff0\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u7c7b\u7684\u533a\u522b\u548c\u8054\u7cfb)\n        - [47.Python\u4e2d\u5982\u4f55\u52a8\u6001\u83b7\u53d6\u548c\u8bbe\u7f6e\u5bf9\u8c61\u7684\u5c5e\u6027\uff1f](#47python\u4e2d\u5982\u4f55\u52a8\u6001\u83b7\u53d6\u548c\u8bbe\u7f6e\u5bf9\u8c61\u7684\u5c5e\u6027)\n    - [\u5185\u5b58\u7ba1\u7406\u4e0e\u5783\u573e\u56de\u6536\u673a\u5236](#\u5185\u5b58\u7ba1\u7406\u4e0e\u5783\u573e\u56de\u6536\u673a\u5236)\n        - [48.\u54ea\u4e9b\u64cd\u4f5c\u4f1a\u5bfc\u81f4Python\u5185\u5b58\u6ea2\u51fa\uff0c\u600e\u4e48\u5904\u7406\uff1f](#48\u54ea\u4e9b\u64cd\u4f5c\u4f1a\u5bfc\u81f4python\u5185\u5b58\u6ea2\u51fa\u600e\u4e48\u5904\u7406)\n        - [49.\u5173\u4e8ePython\u5185\u5b58\u7ba1\u7406,\u4e0b\u5217\u8bf4\u6cd5\u9519\u8bef\u7684\u662f  B](#49\u5173\u4e8epython\u5185\u5b58\u7ba1\u7406\u4e0b\u5217\u8bf4\u6cd5\u9519\u8bef\u7684\u662f--b)\n        - [50.Python\u7684\u5185\u5b58\u7ba1\u7406\u673a\u5236\u53ca\u8c03\u4f18\u624b\u6bb5\uff1f](#50python\u7684\u5185\u5b58\u7ba1\u7406\u673a\u5236\u53ca\u8c03\u4f18\u624b\u6bb5)\n        - [51.\u5185\u5b58\u6cc4\u9732\u662f\u4ec0\u4e48\uff1f\u5982\u4f55\u907f\u514d\uff1f](#51\u5185\u5b58\u6cc4\u9732\u662f\u4ec0\u4e48\u5982\u4f55\u907f\u514d)\n    - [\u51fd\u6570](#\u51fd\u6570)\n        - [52.python\u5e38\u89c1\u7684\u5217\u8868\u63a8\u5bfc\u5f0f\uff1f](#52python\u5e38\u89c1\u7684\u5217\u8868\u63a8\u5bfc\u5f0f)\n        - [53.\u7b80\u8ff0read\u3001readline\u3001readlines\u7684\u533a\u522b\uff1f](#53\u7b80\u8ff0readreadlinereadlines\u7684\u533a\u522b)\n        - [54.\u4ec0\u4e48\u662fHash\uff08\u6563\u5217\u51fd\u6570\uff09\uff1f](#54\u4ec0\u4e48\u662fhash\u6563\u5217\u51fd\u6570)\n        - [55.python\u51fd\u6570\u91cd\u8f7d\u673a\u5236\uff1f](#55python\u51fd\u6570\u91cd\u8f7d\u673a\u5236)\n        - [56.\u5199\u4e00\u4e2a\u51fd\u6570\u627e\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u4e2d\uff0c\u7b2c\u4e8c\u5927\u7684\u6570](#56\u5199\u4e00\u4e2a\u51fd\u6570\u627e\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u4e2d\u7b2c\u4e8c\u5927\u7684\u6570)\n        - [57.\u624b\u5199\u4e00\u4e2a\u5224\u65ad\u65f6\u95f4\u7684\u88c5\u9970\u5668](#57\u624b\u5199\u4e00\u4e2a\u5224\u65ad\u65f6\u95f4\u7684\u88c5\u9970\u5668)\n        - [58.\u4f7f\u7528Python\u5185\u7f6e\u7684filter()\u65b9\u6cd5\u6765\u8fc7\u6ee4\uff1f](#58\u4f7f\u7528python\u5185\u7f6e\u7684filter\u65b9\u6cd5\u6765\u8fc7\u6ee4)\n        - [59.\u7f16\u5199\u51fd\u6570\u76844\u4e2a\u539f\u5219](#59\u7f16\u5199\u51fd\u6570\u76844\u4e2a\u539f\u5219)\n        - [60.\u51fd\u6570\u8c03\u7528\u53c2\u6570\u7684\u4f20\u9012\u65b9\u5f0f\u662f\u503c\u4f20\u9012\u8fd8\u662f\u5f15\u7528\u4f20\u9012\uff1f](#60\u51fd\u6570\u8c03\u7528\u53c2\u6570\u7684\u4f20\u9012\u65b9\u5f0f\u662f\u503c\u4f20\u9012\u8fd8\u662f\u5f15\u7528\u4f20\u9012)\n        - [61.\u5982\u4f55\u5728function\u91cc\u9762\u8bbe\u7f6e\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf](#61\u5982\u4f55\u5728function\u91cc\u9762\u8bbe\u7f6e\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf)\n        - [62.\u5bf9\u7f3a\u7701\u53c2\u6570\u7684\u7406\u89e3 \uff1f](#62\u5bf9\u7f3a\u7701\u53c2\u6570\u7684\u7406\u89e3-)\n        - [63.Mysql\u600e\u4e48\u9650\u5236IP\u8bbf\u95ee\uff1f](#63mysql\u600e\u4e48\u9650\u5236ip\u8bbf\u95ee)\n        - [64.\u5e26\u53c2\u6570\u7684\u88c5\u9970\u5668?](#64\u5e26\u53c2\u6570\u7684\u88c5\u9970\u5668)\n        - [65.\u4e3a\u4ec0\u4e48\u51fd\u6570\u540d\u5b57\u53ef\u4ee5\u5f53\u505a\u53c2\u6570\u7528?](#65\u4e3a\u4ec0\u4e48\u51fd\u6570\u540d\u5b57\u53ef\u4ee5\u5f53\u505a\u53c2\u6570\u7528)\n        - [66.Python\u4e2dpass\u8bed\u53e5\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f](#66python\u4e2dpass\u8bed\u53e5\u7684\u4f5c\u7528\u662f\u4ec0\u4e48)\n        - [67.\u6709\u8fd9\u6837\u4e00\u6bb5\u4ee3\u7801\uff0cprint c\u4f1a\u8f93\u51fa\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\uff1f](#67\u6709\u8fd9\u6837\u4e00\u6bb5\u4ee3\u7801print-c\u4f1a\u8f93\u51fa\u4ec0\u4e48\u4e3a\u4ec0\u4e48)\n        - [68.\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\uff1f](#68\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c)\n        - [69.map\u51fd\u6570\u548creduce\u51fd\u6570\uff1f](#69map\u51fd\u6570\u548creduce\u51fd\u6570)\n        - [70.\u56de\u8c03\u51fd\u6570\uff0c\u5982\u4f55\u901a\u4fe1\u7684?](#70\u56de\u8c03\u51fd\u6570\u5982\u4f55\u901a\u4fe1\u7684)\n        - [71.Python\u4e3b\u8981\u7684\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u90fd\u6709\u54ea\u4e9b\uff1f print dir( \u2018a \u2019) \u7684\u8f93\u51fa\uff1f](#71python\u4e3b\u8981\u7684\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u90fd\u6709\u54ea\u4e9b-print-dir-a--\u7684\u8f93\u51fa)\n        - [72.map(lambda x:xx\uff0c[y for y in range(3)])\u7684\u8f93\u51fa\uff1f](#72maplambda-xxxy-for-y-in-range3\u7684\u8f93\u51fa)\n        - [73.hasattr() getattr() setattr() \u51fd\u6570\u4f7f\u7528\u8be6\u89e3\uff1f](#73hasattr-getattr-setattr-\u51fd\u6570\u4f7f\u7528\u8be6\u89e3)\n        - [74.\u4e00\u53e5\u8bdd\u89e3\u51b3\u9636\u4e58\u51fd\u6570\uff1f](#74\u4e00\u53e5\u8bdd\u89e3\u51b3\u9636\u4e58\u51fd\u6570)\n        - [75.\u4ec0\u4e48\u662flambda\u51fd\u6570\uff1f \u6709\u4ec0\u4e48\u597d\u5904\uff1f](#75\u4ec0\u4e48\u662flambda\u51fd\u6570-\u6709\u4ec0\u4e48\u597d\u5904)\n        - [76.\u9012\u5f52\u51fd\u6570\u505c\u6b62\u7684\u6761\u4ef6\uff1f](#76\u9012\u5f52\u51fd\u6570\u505c\u6b62\u7684\u6761\u4ef6)\n        - [77.\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5c06\u662f\u4ec0\u4e48\uff1f\u8bf7\u89e3\u91ca\u3002](#77\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5c06\u662f\u4ec0\u4e48\u8bf7\u89e3\u91ca)\n        - [78.\u4ec0\u4e48\u662flambda\u51fd\u6570\uff1f\u5b83\u6709\u4ec0\u4e48\u597d\u5904\uff1f\u5199\u4e00\u4e2a\u533f\u540d\u51fd\u6570\u6c42\u4e24\u4e2a\u6570\u7684\u548c](#78\u4ec0\u4e48\u662flambda\u51fd\u6570\u5b83\u6709\u4ec0\u4e48\u597d\u5904\u5199\u4e00\u4e2a\u533f\u540d\u51fd\u6570\u6c42\u4e24\u4e2a\u6570\u7684\u548c)\n    - [\u8bbe\u8ba1\u6a21\u5f0f](#\u8bbe\u8ba1\u6a21\u5f0f)\n        - [79.\u5bf9\u8bbe\u8ba1\u6a21\u5f0f\u7684\u7406\u89e3\uff0c\u7b80\u8ff0\u4f60\u4e86\u89e3\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff1f](#79\u5bf9\u8bbe\u8ba1\u6a21\u5f0f\u7684\u7406\u89e3\u7b80\u8ff0\u4f60\u4e86\u89e3\u7684\u8bbe\u8ba1\u6a21\u5f0f)\n        - [80.\u8bf7\u624b\u5199\u4e00\u4e2a\u5355\u4f8b](#80\u8bf7\u624b\u5199\u4e00\u4e2a\u5355\u4f8b)\n        - [81.\u5355\u4f8b\u6a21\u5f0f\u7684\u5e94\u7528\u573a\u666f\u6709\u90a3\u4e9b\uff1f](#81\u5355\u4f8b\u6a21\u5f0f\u7684\u5e94\u7528\u573a\u666f\u6709\u90a3\u4e9b)\n        - [82.\u7528\u4e00\u884c\u4ee3\u7801\u751f\u6210[1,4,9,16,25,36,49,64,81,100]](#82\u7528\u4e00\u884c\u4ee3\u7801\u751f\u6210149162536496481100)\n        - [83.\u5bf9\u88c5\u9970\u5668\u7684\u7406\u89e3\uff0c\u5e76\u5199\u51fa\u4e00\u4e2a\u8ba1\u65f6\u5668\u8bb0\u5f55\u65b9\u6cd5\u6267\u884c\u6027\u80fd\u7684\u88c5\u9970\u5668\uff1f](#83\u5bf9\u88c5\u9970\u5668\u7684\u7406\u89e3\u5e76\u5199\u51fa\u4e00\u4e2a\u8ba1\u65f6\u5668\u8bb0\u5f55\u65b9\u6cd5\u6267\u884c\u6027\u80fd\u7684\u88c5\u9970\u5668)\n        - [84.\u89e3\u91ca\u4ee5\u4e0b\u4ec0\u4e48\u662f\u95ed\u5305\uff1f](#84\u89e3\u91ca\u4ee5\u4e0b\u4ec0\u4e48\u662f\u95ed\u5305)\n        - [85.\u51fd\u6570\u88c5\u9970\u5668\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f](#85\u51fd\u6570\u88c5\u9970\u5668\u6709\u4ec0\u4e48\u4f5c\u7528)\n        - [86.\u751f\u6210\u5668\uff0c\u8fed\u4ee3\u5668\u7684\u533a\u522b\uff1f](#86\u751f\u6210\u5668\u8fed\u4ee3\u5668\u7684\u533a\u522b)\n        - [87.X\u662f\u4ec0\u4e48\u7c7b\u578b?](#87x\u662f\u4ec0\u4e48\u7c7b\u578b)\n        - [88.\u8bf7\u7528\u4e00\u884c\u4ee3\u7801 \u5b9e\u73b0\u5c061-N \u7684\u6574\u6570\u5217\u8868\u4ee53\u4e3a\u5355\u4f4d\u5206\u7ec4](#88\u8bf7\u7528\u4e00\u884c\u4ee3\u7801-\u5b9e\u73b0\u5c061-n-\u7684\u6574\u6570\u5217\u8868\u4ee53\u4e3a\u5355\u4f4d\u5206\u7ec4)\n        - [89.Python\u4e2dyield\u7684\u7528\u6cd5?](#89python\u4e2dyield\u7684\u7528\u6cd5)\n    - [\u9762\u5411\u5bf9\u8c61](#\u9762\u5411\u5bf9\u8c61)\n        - [90.Python\u4e2d\u7684\u53ef\u53d8\u5bf9\u8c61\u548c\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff1f](#90python\u4e2d\u7684\u53ef\u53d8\u5bf9\u8c61\u548c\u4e0d\u53ef\u53d8\u5bf9\u8c61)\n        - [91.Python\u7684\u9b54\u6cd5\u65b9\u6cd5](#91python\u7684\u9b54\u6cd5\u65b9\u6cd5)\n        - [92.\u9762\u5411\u5bf9\u8c61\u4e2d\u600e\u4e48\u5b9e\u73b0\u53ea\u8bfb\u5c5e\u6027?](#92\u9762\u5411\u5bf9\u8c61\u4e2d\u600e\u4e48\u5b9e\u73b0\u53ea\u8bfb\u5c5e\u6027)\n        - [93.\u8c08\u8c08\u4f60\u5bf9\u9762\u5411\u5bf9\u8c61\u7684\u7406\u89e3\uff1f](#93\u8c08\u8c08\u4f60\u5bf9\u9762\u5411\u5bf9\u8c61\u7684\u7406\u89e3)\n    - [\u6b63\u5219\u8868\u8fbe\u5f0f](#\u6b63\u5219\u8868\u8fbe\u5f0f)\n        - [94.\u8bf7\u5199\u51fa\u4e00\u6bb5\u4ee3\u7801\u7528\u6b63\u5219\u5339\u914d\u51faip\uff1f](#94\u8bf7\u5199\u51fa\u4e00\u6bb5\u4ee3\u7801\u7528\u6b63\u5219\u5339\u914d\u51faip)\n        - [95.a = \u201cabbbccc\u201d\uff0c\u7528\u6b63\u5219\u5339\u914d\u4e3aabccc,\u4e0d\u7ba1\u6709\u591a\u5c11b\uff0c\u5c31\u51fa\u73b0\u4e00\u6b21\uff1f](#95a--abbbccc\u7528\u6b63\u5219\u5339\u914d\u4e3aabccc\u4e0d\u7ba1\u6709\u591a\u5c11b\u5c31\u51fa\u73b0\u4e00\u6b21)\n        - [96.Python\u5b57\u7b26\u4e32\u67e5\u627e\u548c\u66ff\u6362\uff1f](#96python\u5b57\u7b26\u4e32\u67e5\u627e\u548c\u66ff\u6362)\n        - [97.\u7528Python\u5339\u914dHTML g tag\u7684\u65f6\u5019\uff0c<.> \u548c <.*?> \u6709\u4ec0\u4e48\u533a\u522b](#97\u7528python\u5339\u914dhtml-g-tag\u7684\u65f6\u5019-\u548c--\u6709\u4ec0\u4e48\u533a\u522b)\n        - [98.\u6b63\u5219\u8868\u8fbe\u5f0f\u8d2a\u5a6a\u4e0e\u975e\u8d2a\u5a6a\u6a21\u5f0f\u7684\u533a\u522b\uff1f](#98\u6b63\u5219\u8868\u8fbe\u5f0f\u8d2a\u5a6a\u4e0e\u975e\u8d2a\u5a6a\u6a21\u5f0f\u7684\u533a\u522b)\n        - [99.\u5199\u51fa\u5f00\u5934\u5339\u914d\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf\uff0c\u672b\u5c3e\u662f\u6570\u5b57\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff1f](#99\u5199\u51fa\u5f00\u5934\u5339\u914d\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf\u672b\u5c3e\u662f\u6570\u5b57\u7684\u6b63\u5219\u8868\u8fbe\u5f0f)\n        - [100.\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c](#100\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c)\n        - [101.\u8bf7\u5339\u914d\u51fa\u53d8\u91cfA \u4e2d\u7684json\u5b57\u7b26\u4e32\u3002](#101\u8bf7\u5339\u914d\u51fa\u53d8\u91cfa-\u4e2d\u7684json\u5b57\u7b26\u4e32)\n        - [102.\u600e\u4e48\u8fc7\u6ee4\u8bc4\u8bba\u4e2d\u7684\u8868\u60c5\uff1f](#102\u600e\u4e48\u8fc7\u6ee4\u8bc4\u8bba\u4e2d\u7684\u8868\u60c5)\n        - [103.\u7b80\u8ff0Python\u91cc\u9762search\u548cmatch\u7684\u533a\u522b](#103\u7b80\u8ff0python\u91cc\u9762search\u548cmatch\u7684\u533a\u522b)\n        - [104.\u8bf7\u5199\u51fa\u5339\u914dip\u7684Python\u6b63\u5219\u8868\u8fbe\u5f0f](#104\u8bf7\u5199\u51fa\u5339\u914dip\u7684python\u6b63\u5219\u8868\u8fbe\u5f0f)\n        - [105.Python\u91ccmatch\u4e0esearch\u7684\u533a\u522b\uff1f](#105python\u91ccmatch\u4e0esearch\u7684\u533a\u522b)\n    - [\u7cfb\u7edf\u7f16\u7a0b](#\u7cfb\u7edf\u7f16\u7a0b)\n        - [106.\u8fdb\u7a0b\u603b\u7ed3](#106\u8fdb\u7a0b\u603b\u7ed3)\n        - [107.\u8c08\u8c08\u4f60\u5bf9\u591a\u8fdb\u7a0b\uff0c\u591a\u7ebf\u7a0b\uff0c\u4ee5\u53ca\u534f\u7a0b\u7684\u7406\u89e3\uff0c\u9879\u76ee\u662f\u5426\u7528\uff1f](#107\u8c08\u8c08\u4f60\u5bf9\u591a\u8fdb\u7a0b\u591a\u7ebf\u7a0b\u4ee5\u53ca\u534f\u7a0b\u7684\u7406\u89e3\u9879\u76ee\u662f\u5426\u7528)\n        - [108.Python\u5f02\u5e38\u4f7f\u7528\u573a\u666f\u6709\u90a3\u4e9b\uff1f](#108python\u5f02\u5e38\u4f7f\u7528\u573a\u666f\u6709\u90a3\u4e9b)\n        - [109.\u591a\u7ebf\u7a0b\u5171\u540c\u64cd\u4f5c\u540c\u4e00\u4e2a\u6570\u636e\u4e92\u65a5\u9501\u540c\u6b65\uff1f](#109\u591a\u7ebf\u7a0b\u5171\u540c\u64cd\u4f5c\u540c\u4e00\u4e2a\u6570\u636e\u4e92\u65a5\u9501\u540c\u6b65)\n        - [110.\u4ec0\u4e48\u662f\u591a\u7ebf\u7a0b\u7ade\u4e89\uff1f](#110\u4ec0\u4e48\u662f\u591a\u7ebf\u7a0b\u7ade\u4e89)\n        - [111.\u8bf7\u4ecb\u7ecd\u4e00\u4e0bPython\u7684\u7ebf\u7a0b\u540c\u6b65\uff1f](#111\u8bf7\u4ecb\u7ecd\u4e00\u4e0bpython\u7684\u7ebf\u7a0b\u540c\u6b65)\n        - [112.\u89e3\u91ca\u4ee5\u4e0b\u4ec0\u4e48\u662f\u9501\uff0c\u6709\u54ea\u51e0\u79cd\u9501\uff1f](#112\u89e3\u91ca\u4ee5\u4e0b\u4ec0\u4e48\u662f\u9501\u6709\u54ea\u51e0\u79cd\u9501)\n        - [113.\u4ec0\u4e48\u662f\u6b7b\u9501\uff1f](#113\u4ec0\u4e48\u662f\u6b7b\u9501)\n        - [114.\u591a\u7ebf\u7a0b\u4ea4\u4e92\u8bbf\u95ee\u6570\u636e\uff0c\u5982\u679c\u8bbf\u95ee\u5230\u4e86\u5c31\u4e0d\u8bbf\u95ee\u4e86\uff1f](#114\u591a\u7ebf\u7a0b\u4ea4\u4e92\u8bbf\u95ee\u6570\u636e\u5982\u679c\u8bbf\u95ee\u5230\u4e86\u5c31\u4e0d\u8bbf\u95ee\u4e86)\n        - [115.\u4ec0\u4e48\u662f\u7ebf\u7a0b\u5b89\u5168\uff0c\u4ec0\u4e48\u662f\u4e92\u65a5\u9501\uff1f](#115\u4ec0\u4e48\u662f\u7ebf\u7a0b\u5b89\u5168\u4ec0\u4e48\u662f\u4e92\u65a5\u9501)\n        - [116.\u8bf4\u8bf4\u4e0b\u9762\u51e0\u4e2a\u6982\u5ff5\uff1a\u540c\u6b65\uff0c\u5f02\u6b65\uff0c\u963b\u585e\uff0c\u975e\u963b\u585e\uff1f](#116\u8bf4\u8bf4\u4e0b\u9762\u51e0\u4e2a\u6982\u5ff5\u540c\u6b65\u5f02\u6b65\u963b\u585e\u975e\u963b\u585e)\n        - [117.\u4ec0\u4e48\u662f\u50f5\u5c38\u8fdb\u7a0b\u548c\u5b64\u513f\u8fdb\u7a0b\uff1f\u600e\u4e48\u907f\u514d\u50f5\u5c38\u8fdb\u7a0b\uff1f](#117\u4ec0\u4e48\u662f\u50f5\u5c38\u8fdb\u7a0b\u548c\u5b64\u513f\u8fdb\u7a0b\u600e\u4e48\u907f\u514d\u50f5\u5c38\u8fdb\u7a0b)\n        - [118.python\u4e2d\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u7684\u4f7f\u7528\u573a\u666f\uff1f](#118python\u4e2d\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u7684\u4f7f\u7528\u573a\u666f)\n        - [119.\u7ebf\u7a0b\u662f\u5e76\u53d1\u8fd8\u662f\u5e76\u884c\uff0c\u8fdb\u7a0b\u662f\u5e76\u53d1\u8fd8\u662f\u5e76\u884c\uff1f](#119\u7ebf\u7a0b\u662f\u5e76\u53d1\u8fd8\u662f\u5e76\u884c\u8fdb\u7a0b\u662f\u5e76\u53d1\u8fd8\u662f\u5e76\u884c)\n        - [120.\u5e76\u884c(parallel)\u548c\u5e76\u53d1\uff08concurrency)?](#120\u5e76\u884cparallel\u548c\u5e76\u53d1concurrency)\n        - [121.IO\u5bc6\u96c6\u578b\u548cCPU\u5bc6\u96c6\u578b\u533a\u522b\uff1f](#121io\u5bc6\u96c6\u578b\u548ccpu\u5bc6\u96c6\u578b\u533a\u522b)\n        - [122.python asyncio\u7684\u539f\u7406\uff1f](#122python-asyncio\u7684\u539f\u7406)\n    - [\u7f51\u7edc\u7f16\u7a0b](#\u7f51\u7edc\u7f16\u7a0b)\n        - [123.\u600e\u4e48\u5b9e\u73b0\u5f3a\u884c\u5173\u95ed\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u8fde\u63a5?](#123\u600e\u4e48\u5b9e\u73b0\u5f3a\u884c\u5173\u95ed\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u8fde\u63a5)\n        - [124.\u7b80\u8ff0TCP\u548cUDP\u7684\u533a\u522b\u4ee5\u53ca\u4f18\u7f3a\u70b9?](#124\u7b80\u8ff0tcp\u548cudp\u7684\u533a\u522b\u4ee5\u53ca\u4f18\u7f3a\u70b9)\n        - [125.\u7b80\u8ff0\u6d4f\u89c8\u5668\u901a\u8fc7WSGI\u8bf7\u6c42\u52a8\u6001\u8d44\u6e90\u7684\u8fc7\u7a0b?](#125\u7b80\u8ff0\u6d4f\u89c8\u5668\u901a\u8fc7wsgi\u8bf7\u6c42\u52a8\u6001\u8d44\u6e90\u7684\u8fc7\u7a0b)\n        - [126.\u63cf\u8ff0\u7528\u6d4f\u89c8\u5668\u8bbf\u95eewww.baidu.com\u7684\u8fc7\u7a0b](#126\u63cf\u8ff0\u7528\u6d4f\u89c8\u5668\u8bbf\u95eewwwbaiducom\u7684\u8fc7\u7a0b)\n        - [127.Post\u548cGet\u8bf7\u6c42\u7684\u533a\u522b?](#127post\u548cget\u8bf7\u6c42\u7684\u533a\u522b)\n        - [128.cookie \u548csession \u7684\u533a\u522b\uff1f](#128cookie-\u548csession-\u7684\u533a\u522b)\n        - [129.\u5217\u51fa\u4f60\u77e5\u9053\u7684HTTP\u534f\u8bae\u7684\u72b6\u6001\u7801\uff0c\u8bf4\u51fa\u8868\u793a\u4ec0\u4e48\u610f\u601d\uff1f](#129\u5217\u51fa\u4f60\u77e5\u9053\u7684http\u534f\u8bae\u7684\u72b6\u6001\u7801\u8bf4\u51fa\u8868\u793a\u4ec0\u4e48\u610f\u601d)\n        - [130.\u8bf7\u7b80\u5355\u8bf4\u4e00\u4e0b\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b\uff1f](#130\u8bf7\u7b80\u5355\u8bf4\u4e00\u4e0b\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b)\n        - [131.\u8bf4\u4e00\u4e0b\u4ec0\u4e48\u662ftcp\u76842MSL\uff1f](#131\u8bf4\u4e00\u4e0b\u4ec0\u4e48\u662ftcp\u76842msl)\n        - [132.\u4e3a\u4ec0\u4e48\u5ba2\u6237\u7aef\u5728TIME-WAIT\u72b6\u6001\u5fc5\u987b\u7b49\u5f852MSL\u7684\u65f6\u95f4\uff1f](#132\u4e3a\u4ec0\u4e48\u5ba2\u6237\u7aef\u5728time-wait\u72b6\u6001\u5fc5\u987b\u7b49\u5f852msl\u7684\u65f6\u95f4)\n        - [133.\u8bf4\u8bf4HTTP\u548cHTTPS\u533a\u522b\uff1f](#133\u8bf4\u8bf4http\u548chttps\u533a\u522b)\n        - [134.\u8c08\u4e00\u4e0bHTTP\u534f\u8bae\u4ee5\u53ca\u534f\u8bae\u5934\u90e8\u4e2d\u8868\u793a\u6570\u636e\u7c7b\u578b\u7684\u5b57\u6bb5\uff1f](#134\u8c08\u4e00\u4e0bhttp\u534f\u8bae\u4ee5\u53ca\u534f\u8bae\u5934\u90e8\u4e2d\u8868\u793a\u6570\u636e\u7c7b\u578b\u7684\u5b57\u6bb5)\n        - [135.HTTP\u8bf7\u6c42\u65b9\u6cd5\u90fd\u6709\u4ec0\u4e48\uff1f](#135http\u8bf7\u6c42\u65b9\u6cd5\u90fd\u6709\u4ec0\u4e48)\n        - [136.\u4f7f\u7528Socket\u5957\u63a5\u5b57\u9700\u8981\u4f20\u5165\u54ea\u4e9b\u53c2\u6570 \uff1f](#136\u4f7f\u7528socket\u5957\u63a5\u5b57\u9700\u8981\u4f20\u5165\u54ea\u4e9b\u53c2\u6570-)\n        - [137.HTTP\u5e38\u89c1\u8bf7\u6c42\u5934\uff1f](#137http\u5e38\u89c1\u8bf7\u6c42\u5934)\n        - [138.\u4e03\u5c42\u6a21\u578b\uff1f](#138\u4e03\u5c42\u6a21\u578b)\n        - [139.url\u7684\u5f62\u5f0f\uff1f](#139url\u7684\u5f62\u5f0f)\n- [Web](#web)\n    - [Flask](#flask)\n        - [140.\u5bf9Flask\u84dd\u56fe(Blueprint)\u7684\u7406\u89e3\uff1f](#140\u5bf9flask\u84dd\u56feblueprint\u7684\u7406\u89e3)\n        - [141.Flask \u548c Django \u8def\u7531\u6620\u5c04\u7684\u533a\u522b\uff1f](#141flask-\u548c-django-\u8def\u7531\u6620\u5c04\u7684\u533a\u522b)\n    - [Django](#django)\n        - [142.\u4ec0\u4e48\u662fwsgi,uwsgi,uWSGI?](#142\u4ec0\u4e48\u662fwsgiuwsgiuwsgi)\n        - [143.Django\u3001Flask\u3001Tornado\u7684\u5bf9\u6bd4\uff1f](#143djangoflasktornado\u7684\u5bf9\u6bd4)\n        - [144.CORS \u548c CSRF\u7684\u533a\u522b\uff1f](#144cors-\u548c-csrf\u7684\u533a\u522b)\n        - [145.Session,Cookie,JWT\u7684\u7406\u89e3](#145sessioncookiejwt\u7684\u7406\u89e3)\n        - [146.\u7b80\u8ff0Django\u8bf7\u6c42\u751f\u547d\u5468\u671f](#146\u7b80\u8ff0django\u8bf7\u6c42\u751f\u547d\u5468\u671f)\n        - [147.\u7528\u7684restframework\u5b8c\u6210api\u53d1\u9001\u65f6\u95f4\u65f6\u533a](#147\u7528\u7684restframework\u5b8c\u6210api\u53d1\u9001\u65f6\u95f4\u65f6\u533a)\n        - [148.nginx,tomcat,apach\u5230\u90fd\u662f\u4ec0\u4e48\uff1f](#148nginxtomcatapach\u5230\u90fd\u662f\u4ec0\u4e48)\n        - [149.\u8bf7\u7ed9\u51fa\u4f60\u719f\u6089\u5173\u7cfb\u6570\u636e\u5e93\u8303\u5f0f\u6709\u54ea\u4e9b\uff0c\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f](#149\u8bf7\u7ed9\u51fa\u4f60\u719f\u6089\u5173\u7cfb\u6570\u636e\u5e93\u8303\u5f0f\u6709\u54ea\u4e9b\u6709\u4ec0\u4e48\u4f5c\u7528)\n        - [150.\u7b80\u8ff0QQ\u767b\u9646\u8fc7\u7a0b](#150\u7b80\u8ff0qq\u767b\u9646\u8fc7\u7a0b)\n        - [151.post \u548c get\u7684\u533a\u522b?](#151post-\u548c-get\u7684\u533a\u522b)\n        - [152.\u9879\u76ee\u4e2d\u65e5\u5fd7\u7684\u4f5c\u7528](#152\u9879\u76ee\u4e2d\u65e5\u5fd7\u7684\u4f5c\u7528)\n        - [153.django\u4e2d\u95f4\u4ef6\u7684\u4f7f\u7528\uff1f](#153django\u4e2d\u95f4\u4ef6\u7684\u4f7f\u7528)\n        - [154.\u8c08\u4e00\u4e0b\u4f60\u5bf9uWSGI\u548cnginx\u7684\u7406\u89e3\uff1f](#154\u8c08\u4e00\u4e0b\u4f60\u5bf9uwsgi\u548cnginx\u7684\u7406\u89e3)\n        - [155.Python\u4e2d\u4e09\u5927\u6846\u67b6\u5404\u81ea\u7684\u5e94\u7528\u573a\u666f\uff1f](#155python\u4e2d\u4e09\u5927\u6846\u67b6\u5404\u81ea\u7684\u5e94\u7528\u573a\u666f)\n        - [156.Django\u4e2d\u54ea\u91cc\u7528\u5230\u4e86\u7ebf\u7a0b\uff1f\u54ea\u91cc\u7528\u5230\u4e86\u534f\u7a0b\uff1f\u54ea\u91cc\u7528\u5230\u4e86\u8fdb\u7a0b\uff1f](#156django\u4e2d\u54ea\u91cc\u7528\u5230\u4e86\u7ebf\u7a0b\u54ea\u91cc\u7528\u5230\u4e86\u534f\u7a0b\u54ea\u91cc\u7528\u5230\u4e86\u8fdb\u7a0b)\n        - [157.\u6709\u7528\u8fc7Django REST framework\u5417\uff1f](#157\u6709\u7528\u8fc7django-rest-framework\u5417)\n        - [158.\u5bf9cookies\u4e0esession\u7684\u4e86\u89e3\uff1f\u4ed6\u4eec\u80fd\u5355\u72ec\u7528\u5417\uff1f](#158\u5bf9cookies\u4e0esession\u7684\u4e86\u89e3\u4ed6\u4eec\u80fd\u5355\u72ec\u7528\u5417)\n    - [\u722c\u866b](#\u722c\u866b)\n        - [159.\u8bd5\u5217\u51fa\u81f3\u5c11\u4e09\u79cd\u76ee\u524d\u6d41\u884c\u7684\u5927\u578b\u6570\u636e\u5e93](#159\u8bd5\u5217\u51fa\u81f3\u5c11\u4e09\u79cd\u76ee\u524d\u6d41\u884c\u7684\u5927\u578b\u6570\u636e\u5e93)\n        - [160.\u5217\u4e3e\u60a8\u4f7f\u7528\u8fc7\u7684Python\u7f51\u7edc\u722c\u866b\u6240\u7528\u5230\u7684\u7f51\u7edc\u6570\u636e\u5305?](#160\u5217\u4e3e\u60a8\u4f7f\u7528\u8fc7\u7684python\u7f51\u7edc\u722c\u866b\u6240\u7528\u5230\u7684\u7f51\u7edc\u6570\u636e\u5305)\n        - [161.\u722c\u53d6\u6570\u636e\u540e\u4f7f\u7528\u54ea\u4e2a\u6570\u636e\u5e93\u5b58\u50a8\u6570\u636e\u7684\uff0c\u4e3a\u4ec0\u4e48\uff1f](#161\u722c\u53d6\u6570\u636e\u540e\u4f7f\u7528\u54ea\u4e2a\u6570\u636e\u5e93\u5b58\u50a8\u6570\u636e\u7684\u4e3a\u4ec0\u4e48)\n        - [162.\u4f60\u7528\u8fc7\u7684\u722c\u866b\u6846\u67b6\u6216\u8005\u6a21\u5757\u6709\u54ea\u4e9b\uff1f\u4f18\u7f3a\u70b9\uff1f](#162\u4f60\u7528\u8fc7\u7684\u722c\u866b\u6846\u67b6\u6216\u8005\u6a21\u5757\u6709\u54ea\u4e9b\u4f18\u7f3a\u70b9)\n        - [163.\u5199\u722c\u866b\u662f\u7528\u591a\u8fdb\u7a0b\u597d\uff1f\u8fd8\u662f\u591a\u7ebf\u7a0b\u597d\uff1f](#163\u5199\u722c\u866b\u662f\u7528\u591a\u8fdb\u7a0b\u597d\u8fd8\u662f\u591a\u7ebf\u7a0b\u597d)\n        - [164.\u5e38\u89c1\u7684\u53cd\u722c\u866b\u548c\u5e94\u5bf9\u65b9\u6cd5\uff1f](#164\u5e38\u89c1\u7684\u53cd\u722c\u866b\u548c\u5e94\u5bf9\u65b9\u6cd5)\n        - [165.\u89e3\u6790\u7f51\u9875\u7684\u89e3\u6790\u5668\u4f7f\u7528\u6700\u591a\u7684\u662f\u54ea\u51e0\u4e2a?](#165\u89e3\u6790\u7f51\u9875\u7684\u89e3\u6790\u5668\u4f7f\u7528\u6700\u591a\u7684\u662f\u54ea\u51e0\u4e2a)\n        - [166.\u9700\u8981\u767b\u5f55\u7684\u7f51\u9875\uff0c\u5982\u4f55\u89e3\u51b3\u540c\u65f6\u9650\u5236ip\uff0ccookie,session](#166\u9700\u8981\u767b\u5f55\u7684\u7f51\u9875\u5982\u4f55\u89e3\u51b3\u540c\u65f6\u9650\u5236ipcookiesession)\n        - [167.\u9a8c\u8bc1\u7801\u7684\u89e3\u51b3?](#167\u9a8c\u8bc1\u7801\u7684\u89e3\u51b3)\n        - [168.\u4f7f\u7528\u6700\u591a\u7684\u6570\u636e\u5e93\uff0c\u5bf9\u4ed6\u4eec\u7684\u7406\u89e3\uff1f](#168\u4f7f\u7528\u6700\u591a\u7684\u6570\u636e\u5e93\u5bf9\u4ed6\u4eec\u7684\u7406\u89e3)\n        - [169.\u7f16\u5199\u8fc7\u54ea\u4e9b\u722c\u866b\u4e2d\u95f4\u4ef6\uff1f](#169\u7f16\u5199\u8fc7\u54ea\u4e9b\u722c\u866b\u4e2d\u95f4\u4ef6)\n        - [170.\u201c\u6781\u9a8c\u201d\u6ed1\u52a8\u9a8c\u8bc1\u7801\u5982\u4f55\u7834\u89e3\uff1f](#170\u6781\u9a8c\u6ed1\u52a8\u9a8c\u8bc1\u7801\u5982\u4f55\u7834\u89e3)\n        - [171.\u722c\u866b\u591a\u4e45\u722c\u4e00\u6b21\uff0c\u722c\u4e0b\u6765\u7684\u6570\u636e\u662f\u600e\u4e48\u5b58\u50a8\uff1f](#171\u722c\u866b\u591a\u4e45\u722c\u4e00\u6b21\u722c\u4e0b\u6765\u7684\u6570\u636e\u662f\u600e\u4e48\u5b58\u50a8)\n        - [172.cookie\u8fc7\u671f\u7684\u5904\u7406\u95ee\u9898\uff1f](#172cookie\u8fc7\u671f\u7684\u5904\u7406\u95ee\u9898)\n        - [173.\u52a8\u6001\u52a0\u8f7d\u53c8\u5bf9\u53ca\u65f6\u6027\u8981\u6c42\u5f88\u9ad8\u600e\u4e48\u5904\u7406\uff1f](#173\u52a8\u6001\u52a0\u8f7d\u53c8\u5bf9\u53ca\u65f6\u6027\u8981\u6c42\u5f88\u9ad8\u600e\u4e48\u5904\u7406)\n        - [174.HTTPS\u6709\u4ec0\u4e48\u4f18\u70b9\u548c\u7f3a\u70b9\uff1f](#174https\u6709\u4ec0\u4e48\u4f18\u70b9\u548c\u7f3a\u70b9)\n        - [175.HTTPS\u662f\u5982\u4f55\u5b9e\u73b0\u5b89\u5168\u4f20\u8f93\u6570\u636e\u7684\uff1f](#175https\u662f\u5982\u4f55\u5b9e\u73b0\u5b89\u5168\u4f20\u8f93\u6570\u636e\u7684)\n        - [176.TTL\uff0cMSL\uff0cRTT\u5404\u662f\u4ec0\u4e48\uff1f](#176ttlmslrtt\u5404\u662f\u4ec0\u4e48)\n        - [177.\u8c08\u4e00\u8c08\u4f60\u5bf9Selenium\u548cPhantomJS\u4e86\u89e3](#177\u8c08\u4e00\u8c08\u4f60\u5bf9selenium\u548cphantomjs\u4e86\u89e3)\n        - [178.\u5e73\u5e38\u600e\u4e48\u4f7f\u7528\u4ee3\u7406\u7684 \uff1f](#178\u5e73\u5e38\u600e\u4e48\u4f7f\u7528\u4ee3\u7406\u7684-)\n        - [179.\u5b58\u653e\u5728\u6570\u636e\u5e93(redis\u3001mysql\u7b49)\u3002](#179\u5b58\u653e\u5728\u6570\u636e\u5e93redismysql\u7b49)\n        - [180.\u600e\u4e48\u76d1\u63a7\u722c\u866b\u7684\u72b6\u6001?](#180\u600e\u4e48\u76d1\u63a7\u722c\u866b\u7684\u72b6\u6001)\n        - [181.\u63cf\u8ff0\u4e0bscrapy\u6846\u67b6\u8fd0\u884c\u7684\u673a\u5236\uff1f](#181\u63cf\u8ff0\u4e0bscrapy\u6846\u67b6\u8fd0\u884c\u7684\u673a\u5236)\n        - [182.\u8c08\u8c08\u4f60\u5bf9Scrapy\u7684\u7406\u89e3\uff1f](#182\u8c08\u8c08\u4f60\u5bf9scrapy\u7684\u7406\u89e3)\n        - [183.\u600e\u4e48\u6837\u8ba9 scrapy \u6846\u67b6\u53d1\u9001\u4e00\u4e2a post \u8bf7\u6c42\uff08\u5177\u4f53\u5199\u51fa\u6765\uff09](#183\u600e\u4e48\u6837\u8ba9-scrapy-\u6846\u67b6\u53d1\u9001\u4e00\u4e2a-post-\u8bf7\u6c42\u5177\u4f53\u5199\u51fa\u6765)\n        - [184.\u600e\u4e48\u76d1\u63a7\u722c\u866b\u7684\u72b6\u6001 \uff1f](#184\u600e\u4e48\u76d1\u63a7\u722c\u866b\u7684\u72b6\u6001-)\n        - [185.\u600e\u4e48\u5224\u65ad\u7f51\u7ad9\u662f\u5426\u66f4\u65b0\uff1f](#185\u600e\u4e48\u5224\u65ad\u7f51\u7ad9\u662f\u5426\u66f4\u65b0)\n        - [186.\u56fe\u7247\u3001\u89c6\u9891\u722c\u53d6\u600e\u4e48\u7ed5\u8fc7\u9632\u76d7\u8fde\u63a5](#186\u56fe\u7247\u89c6\u9891\u722c\u53d6\u600e\u4e48\u7ed5\u8fc7\u9632\u76d7\u8fde\u63a5)\n        - [187.\u4f60\u722c\u51fa\u6765\u7684\u6570\u636e\u91cf\u5927\u6982\u6709\u591a\u5927\uff1f\u5927\u6982\u591a\u957f\u65f6\u95f4\u722c\u4e00\u6b21\uff1f](#187\u4f60\u722c\u51fa\u6765\u7684\u6570\u636e\u91cf\u5927\u6982\u6709\u591a\u5927\u5927\u6982\u591a\u957f\u65f6\u95f4\u722c\u4e00\u6b21)\n        - [188.\u7528\u4ec0\u4e48\u6570\u636e\u5e93\u5b58\u722c\u4e0b\u6765\u7684\u6570\u636e\uff1f\u90e8\u7f72\u662f\u4f60\u505a\u7684\u5417\uff1f\u600e\u4e48\u90e8\u7f72\uff1f](#188\u7528\u4ec0\u4e48\u6570\u636e\u5e93\u5b58\u722c\u4e0b\u6765\u7684\u6570\u636e\u90e8\u7f72\u662f\u4f60\u505a\u7684\u5417\u600e\u4e48\u90e8\u7f72)\n        - [189.\u589e\u91cf\u722c\u53d6](#189\u589e\u91cf\u722c\u53d6)\n        - [190.\u722c\u53d6\u4e0b\u6765\u7684\u6570\u636e\u5982\u4f55\u53bb\u91cd\uff0c\u8bf4\u4e00\u4e0bscrapy\u7684\u5177\u4f53\u7684\u7b97\u6cd5\u4f9d\u636e\u3002](#190\u722c\u53d6\u4e0b\u6765\u7684\u6570\u636e\u5982\u4f55\u53bb\u91cd\u8bf4\u4e00\u4e0bscrapy\u7684\u5177\u4f53\u7684\u7b97\u6cd5\u4f9d\u636e)\n        - [191.Scrapy\u7684\u4f18\u7f3a\u70b9?](#191scrapy\u7684\u4f18\u7f3a\u70b9)\n        - [192.\u600e\u4e48\u8bbe\u7f6e\u722c\u53d6\u6df1\u5ea6\uff1f](#192\u600e\u4e48\u8bbe\u7f6e\u722c\u53d6\u6df1\u5ea6)\n        - [193.scrapy\u548cscrapy-redis\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u4e3a\u4ec0\u4e48\u9009\u62e9redis\u6570\u636e\u5e93\uff1f](#193scrapy\u548cscrapy-redis\u6709\u4ec0\u4e48\u533a\u522b\u4e3a\u4ec0\u4e48\u9009\u62e9redis\u6570\u636e\u5e93)\n        - [194.\u5206\u5e03\u5f0f\u722c\u866b\u4e3b\u8981\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\uff1f](#194\u5206\u5e03\u5f0f\u722c\u866b\u4e3b\u8981\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898)\n        - [195.\u4ec0\u4e48\u662f\u5206\u5e03\u5f0f\u5b58\u50a8\uff1f](#195\u4ec0\u4e48\u662f\u5206\u5e03\u5f0f\u5b58\u50a8)\n        - [196.\u4f60\u6240\u77e5\u9053\u7684\u5206\u5e03\u5f0f\u722c\u866b\u65b9\u6848\u6709\u54ea\u4e9b\uff1f](#196\u4f60\u6240\u77e5\u9053\u7684\u5206\u5e03\u5f0f\u722c\u866b\u65b9\u6848\u6709\u54ea\u4e9b)\n        - [197.scrapy-redis\uff0c\u6709\u505a\u8fc7\u5176\u4ed6\u7684\u5206\u5e03\u5f0f\u722c\u866b\u5417\uff1f](#197scrapy-redis\u6709\u505a\u8fc7\u5176\u4ed6\u7684\u5206\u5e03\u5f0f\u722c\u866b\u5417)\n- [\u6570\u636e\u5e93](#\u6570\u636e\u5e93)\n    - [MySQL](#mysql)\n        - [198.\u4e3b\u952e \u8d85\u952e \u5019\u9009\u952e \u5916\u952e](#198\u4e3b\u952e-\u8d85\u952e-\u5019\u9009\u952e-\u5916\u952e)\n        - [199.\u89c6\u56fe\u7684\u4f5c\u7528\uff0c\u89c6\u56fe\u53ef\u4ee5\u66f4\u6539\u4e48\uff1f](#199\u89c6\u56fe\u7684\u4f5c\u7528\u89c6\u56fe\u53ef\u4ee5\u66f4\u6539\u4e48)\n        - [200.drop,delete\u4e0etruncate\u7684\u533a\u522b](#200dropdelete\u4e0etruncate\u7684\u533a\u522b)\n        - [201.\u7d22\u5f15\u7684\u5de5\u4f5c\u539f\u7406\u53ca\u5176\u79cd\u7c7b](#201\u7d22\u5f15\u7684\u5de5\u4f5c\u539f\u7406\u53ca\u5176\u79cd\u7c7b)\n        - [202.\u8fde\u63a5\u7684\u79cd\u7c7b](#202\u8fde\u63a5\u7684\u79cd\u7c7b)\n        - [203.\u6570\u636e\u5e93\u4f18\u5316\u7684\u601d\u8def](#203\u6570\u636e\u5e93\u4f18\u5316\u7684\u601d\u8def)\n        - [204.\u5b58\u50a8\u8fc7\u7a0b\u4e0e\u89e6\u53d1\u5668\u7684\u533a\u522b](#204\u5b58\u50a8\u8fc7\u7a0b\u4e0e\u89e6\u53d1\u5668\u7684\u533a\u522b)\n        - [205.\u60b2\u89c2\u9501\u548c\u4e50\u89c2\u9501\u662f\u4ec0\u4e48\uff1f](#205\u60b2\u89c2\u9501\u548c\u4e50\u89c2\u9501\u662f\u4ec0\u4e48)\n        - [206.\u4f60\u5e38\u7528\u7684mysql\u5f15\u64ce\u6709\u54ea\u4e9b?\u5404\u5f15\u64ce\u95f4\u6709\u4ec0\u4e48\u533a\u522b?](#206\u4f60\u5e38\u7528\u7684mysql\u5f15\u64ce\u6709\u54ea\u4e9b\u5404\u5f15\u64ce\u95f4\u6709\u4ec0\u4e48\u533a\u522b)\n    - [Redis](#redis)\n        - [207.Redis\u5b95\u673a\u600e\u4e48\u89e3\u51b3?](#207redis\u5b95\u673a\u600e\u4e48\u89e3\u51b3)\n        - [208.redis\u548cmecached\u7684\u533a\u522b\uff0c\u4ee5\u53ca\u4f7f\u7528\u573a\u666f](#208redis\u548cmecached\u7684\u533a\u522b\u4ee5\u53ca\u4f7f\u7528\u573a\u666f)\n        - [209.Redis\u96c6\u7fa4\u65b9\u6848\u8be5\u600e\u4e48\u505a?\u90fd\u6709\u54ea\u4e9b\u65b9\u6848?](#209redis\u96c6\u7fa4\u65b9\u6848\u8be5\u600e\u4e48\u505a\u90fd\u6709\u54ea\u4e9b\u65b9\u6848)\n        - [210.Redis\u56de\u6536\u8fdb\u7a0b\u662f\u5982\u4f55\u5de5\u4f5c\u7684](#210redis\u56de\u6536\u8fdb\u7a0b\u662f\u5982\u4f55\u5de5\u4f5c\u7684)\n    - [MongoDB](#mongodb)\n        - [211.MongoDB\u4e2d\u5bf9\u591a\u6761\u8bb0\u5f55\u505a\u66f4\u65b0\u64cd\u4f5c\u547d\u4ee4\u662f\u4ec0\u4e48\uff1f](#211mongodb\u4e2d\u5bf9\u591a\u6761\u8bb0\u5f55\u505a\u66f4\u65b0\u64cd\u4f5c\u547d\u4ee4\u662f\u4ec0\u4e48)\n        - [212.MongoDB\u5982\u4f55\u624d\u4f1a\u62d3\u5c55\u5230\u591a\u4e2ashard\u91cc\uff1f](#212mongodb\u5982\u4f55\u624d\u4f1a\u62d3\u5c55\u5230\u591a\u4e2ashard\u91cc)\n    - [\u6d4b\u8bd5](#\u6d4b\u8bd5)\n        - [213.\u7f16\u5199\u6d4b\u8bd5\u8ba1\u5212\u7684\u76ee\u7684\u662f](#213\u7f16\u5199\u6d4b\u8bd5\u8ba1\u5212\u7684\u76ee\u7684\u662f)\n        - [214.\u5bf9\u5173\u952e\u8bcd\u89e6\u53d1\u6a21\u5757\u8fdb\u884c\u6d4b\u8bd5](#214\u5bf9\u5173\u952e\u8bcd\u89e6\u53d1\u6a21\u5757\u8fdb\u884c\u6d4b\u8bd5)\n        - [215.\u5176\u4ed6\u5e38\u7528\u7b14\u8bd5\u9898\u76ee\u7f51\u5740\u6c47\u603b](#215\u5176\u4ed6\u5e38\u7528\u7b14\u8bd5\u9898\u76ee\u7f51\u5740\u6c47\u603b)\n        - [216.\u6d4b\u8bd5\u4eba\u5458\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u4efb\u52a1\u662f\u4ec0\u4e48](#216\u6d4b\u8bd5\u4eba\u5458\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u4efb\u52a1\u662f\u4ec0\u4e48)\n        - [217.\u4e00\u6761\u8f6f\u4ef6Bug\u8bb0\u5f55\u90fd\u5305\u542b\u4e86\u54ea\u4e9b\u5185\u5bb9\uff1f](#217\u4e00\u6761\u8f6f\u4ef6bug\u8bb0\u5f55\u90fd\u5305\u542b\u4e86\u54ea\u4e9b\u5185\u5bb9)\n        - [218.\u7b80\u8ff0\u9ed1\u76d2\u6d4b\u8bd5\u548c\u767d\u76d2\u6d4b\u8bd5\u7684\u4f18\u7f3a\u70b9](#218\u7b80\u8ff0\u9ed1\u76d2\u6d4b\u8bd5\u548c\u767d\u76d2\u6d4b\u8bd5\u7684\u4f18\u7f3a\u70b9)\n        - [219.\u8bf7\u5217\u51fa\u4f60\u6240\u77e5\u9053\u7684\u8f6f\u4ef6\u6d4b\u8bd5\u79cd\u7c7b\uff0c\u81f3\u5c115\u9879](#219\u8bf7\u5217\u51fa\u4f60\u6240\u77e5\u9053\u7684\u8f6f\u4ef6\u6d4b\u8bd5\u79cd\u7c7b\u81f3\u5c115\u9879)\n        - [220.Alpha\u6d4b\u8bd5\u4e0eBeta\u6d4b\u8bd5\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f](#220alpha\u6d4b\u8bd5\u4e0ebeta\u6d4b\u8bd5\u7684\u533a\u522b\u662f\u4ec0\u4e48)\n        - [221.\u4e3e\u4f8b\u8bf4\u660e\u4ec0\u4e48\u662fBug\uff1f\u4e00\u4e2abug report\u5e94\u5305\u542b\u4ec0\u4e48\u5173\u952e\u5b57\uff1f](#221\u4e3e\u4f8b\u8bf4\u660e\u4ec0\u4e48\u662fbug\u4e00\u4e2abug-report\u5e94\u5305\u542b\u4ec0\u4e48\u5173\u952e\u5b57)\n    - [\u6570\u636e\u7ed3\u6784](#\u6570\u636e\u7ed3\u6784)\n        - [222.\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u6570\u5b57-Python\u7248](#222\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u6570\u5b57-python\u7248)\n        - [223.\u6c42100\u4ee5\u5185\u7684\u8d28\u6570](#223\u6c42100\u4ee5\u5185\u7684\u8d28\u6570)\n        - [224.\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32-Python\u5b9e\u73b0](#224\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32-python\u5b9e\u73b0)\n        - [225.\u901a\u8fc72\u4e2a5/6\u5347\u5f97\u6c34\u58f6\u4ece\u6c60\u5858\u5f97\u52303\u5347\u6c34](#225\u901a\u8fc72\u4e2a56\u5347\u5f97\u6c34\u58f6\u4ece\u6c60\u5858\u5f97\u52303\u5347\u6c34)\n        - [226.\u4ec0\u4e48\u662fMD5\u52a0\u5bc6\uff0c\u6709\u4ec0\u4e48\u7279\u70b9\uff1f](#226\u4ec0\u4e48\u662fmd5\u52a0\u5bc6\u6709\u4ec0\u4e48\u7279\u70b9)\n        - [227.\u4ec0\u4e48\u662f\u5bf9\u79f0\u52a0\u5bc6\u548c\u975e\u5bf9\u79f0\u52a0\u5bc6](#227\u4ec0\u4e48\u662f\u5bf9\u79f0\u52a0\u5bc6\u548c\u975e\u5bf9\u79f0\u52a0\u5bc6)\n        - [228.\u5192\u6ce1\u6392\u5e8f\u7684\u601d\u60f3\uff1f](#228\u5192\u6ce1\u6392\u5e8f\u7684\u601d\u60f3)\n        - [229.\u5feb\u901f\u6392\u5e8f\u7684\u601d\u60f3\uff1f](#229\u5feb\u901f\u6392\u5e8f\u7684\u601d\u60f3)\n        - [230.\u5982\u4f55\u5224\u65ad\u5355\u5411\u94fe\u8868\u4e2d\u662f\u5426\u6709\u73af\uff1f](#230\u5982\u4f55\u5224\u65ad\u5355\u5411\u94fe\u8868\u4e2d\u662f\u5426\u6709\u73af)\n        - [231.\u4f60\u77e5\u9053\u54ea\u4e9b\u6392\u5e8f\u7b97\u6cd5\uff08\u4e00\u822c\u662f\u901a\u8fc7\u95ee\u9898\u8003\u7b97\u6cd5\uff09](#231\u4f60\u77e5\u9053\u54ea\u4e9b\u6392\u5e8f\u7b97\u6cd5\u4e00\u822c\u662f\u901a\u8fc7\u95ee\u9898\u8003\u7b97\u6cd5)\n        - [232.\u6590\u6ce2\u90a3\u5951\u6570\u5217](#232\u6590\u6ce2\u90a3\u5951\u6570\u5217)\n        - [233.\u5982\u4f55\u7ffb\u8f6c\u4e00\u4e2a\u5355\u94fe\u8868\uff1f](#233\u5982\u4f55\u7ffb\u8f6c\u4e00\u4e2a\u5355\u94fe\u8868)\n        - [234.\u9752\u86d9\u8df3\u53f0\u9636\u95ee\u9898](#234\u9752\u86d9\u8df3\u53f0\u9636\u95ee\u9898)\n        - [235.\u4e24\u6570\u4e4b\u548c Two Sum](#235\u4e24\u6570\u4e4b\u548c-two-sum)\n        - [236.\u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4 Search in Rotated Sorted Array](#236\u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4-search-in-rotated-sorted-array)\n        - [237.Python\u5b9e\u73b0\u4e00\u4e2aStack\u7684\u6570\u636e\u7ed3\u6784](#237python\u5b9e\u73b0\u4e00\u4e2astack\u7684\u6570\u636e\u7ed3\u6784)\n        - [238.\u5199\u4e00\u4e2a\u4e8c\u5206\u67e5\u627e](#238\u5199\u4e00\u4e2a\u4e8c\u5206\u67e5\u627e)\n        - [239.set \u7528 in \u65f6\u95f4\u590d\u6742\u5ea6\u662f\u591a\u5c11\uff0c\u4e3a\u4ec0\u4e48\uff1f](#239set-\u7528-in-\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u591a\u5c11\u4e3a\u4ec0\u4e48)\n        - [240.\u5217\u8868\u4e2d\u6709n\u4e2a\u6b63\u6574\u6570\u8303\u56f4\u5728[0\uff0c1000]\uff0c\u8fdb\u884c\u6392\u5e8f\uff1b](#240\u5217\u8868\u4e2d\u6709n\u4e2a\u6b63\u6574\u6570\u8303\u56f4\u572801000\u8fdb\u884c\u6392\u5e8f)\n        - [241.\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u6709\u7ec4\u5408\u548c\u7ee7\u627f\u7684\u65b9\u6cd5\u5b9e\u73b0\u65b0\u7684\u7c7b](#241\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u6709\u7ec4\u5408\u548c\u7ee7\u627f\u7684\u65b9\u6cd5\u5b9e\u73b0\u65b0\u7684\u7c7b)\n    - [\u5927\u6570\u636e](#\u5927\u6570\u636e)\n        - [242.\u627e\u51fa1G\u7684\u6587\u4ef6\u4e2d\u9ad8\u9891\u8bcd](#242\u627e\u51fa1g\u7684\u6587\u4ef6\u4e2d\u9ad8\u9891\u8bcd)\n        - [243.\u4e00\u4e2a\u5927\u7ea6\u6709\u4e00\u4e07\u884c\u7684\u6587\u672c\u6587\u4ef6\u7edf\u8ba1\u9ad8\u9891\u8bcd](#243\u4e00\u4e2a\u5927\u7ea6\u6709\u4e00\u4e07\u884c\u7684\u6587\u672c\u6587\u4ef6\u7edf\u8ba1\u9ad8\u9891\u8bcd)\n        - [244.\u600e\u4e48\u5728\u6d77\u91cf\u6570\u636e\u4e2d\u627e\u51fa\u91cd\u590d\u6b21\u6570\u6700\u591a\u7684\u4e00\u4e2a\uff1f](#244\u600e\u4e48\u5728\u6d77\u91cf\u6570\u636e\u4e2d\u627e\u51fa\u91cd\u590d\u6b21\u6570\u6700\u591a\u7684\u4e00\u4e2a)\n        - [245.\u5224\u65ad\u6570\u636e\u662f\u5426\u5728\u5927\u91cf\u6570\u636e\u4e2d](#245\u5224\u65ad\u6570\u636e\u662f\u5426\u5728\u5927\u91cf\u6570\u636e\u4e2d)\n\n\n\n<!-- /TOC -->\n\n# Python\u57fa\u7840\n## \u6587\u4ef6\u64cd\u4f5c\n### 1.\u6709\u4e00\u4e2ajsonline\u683c\u5f0f\u7684\u6587\u4ef6file.txt\u5927\u5c0f\u7ea6\u4e3a10K\n```python\ndef get_lines():\n    with open('file.txt','rb') as f:\n        return f.readlines()\n\nif __name__ == '__main__':\n    for e in get_lines():\n        process(e) # \u5904\u7406\u6bcf\u4e00\u884c\u6570\u636e\n```\n\u73b0\u5728\u8981\u5904\u7406\u4e00\u4e2a\u5927\u5c0f\u4e3a10G\u7684\u6587\u4ef6\uff0c\u4f46\u662f\u5185\u5b58\u53ea\u67094G\uff0c\u5982\u679c\u5728\u53ea\u4fee\u6539get_lines \u51fd\u6570\u800c\u5176\u4ed6\u4ee3\u7801\u4fdd\u6301\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u5e94\u8be5\u5982\u4f55\u5b9e\u73b0\uff1f\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\u90fd\u6709\u90a3\u4e9b\uff1f\n```python\ndef get_lines():\n    with open('file.txt','rb') as f:\n        for i in f:\n            yield i\n```\n\u4e2a\u4eba\u8ba4\u4e3a\uff1a\u8fd8\u662f\u8bbe\u7f6e\u4e0b\u6bcf\u6b21\u8fd4\u56de\u7684\u884c\u6570\u8f83\u597d\uff0c\u5426\u5219\u8bfb\u53d6\u6b21\u6570\u592a\u591a\u3002\n```\ndef get_lines():\n    l = []\n    with open('file.txt','rb') as f:\n      data = f.readlines(60000)\n    l.append(data)\n    yield l\n```\nPandaaaa906\u63d0\u4f9b\u7684\u65b9\u6cd5\n```python\nfrom mmap import mmap\n\n\ndef get_lines(fp):\n    with open(fp,\"r+\") as f:\n        m = mmap(f.fileno(), 0)\n        tmp = 0\n        for i, char in enumerate(m):\n            if char==b\"\\n\":\n                yield m[tmp:i+1].decode()\n                tmp = i+1\n\nif __name__==\"__main__\":\n    for i in get_lines(\"fp_some_huge_file\"):\n        print(i)\n```\n\u8981\u8003\u8651\u7684\u95ee\u9898\u6709\uff1a\u5185\u5b58\u53ea\u67094G\u65e0\u6cd5\u4e00\u6b21\u6027\u8bfb\u516510G\u6587\u4ef6\uff0c\u9700\u8981\u5206\u6279\u8bfb\u5165\u5206\u6279\u8bfb\u5165\u6570\u636e\u8981\u8bb0\u5f55\u6bcf\u6b21\u8bfb\u5165\u6570\u636e\u7684\u4f4d\u7f6e\u3002\u5206\u6279\u6bcf\u6b21\u8bfb\u53d6\u6570\u636e\u7684\u5927\u5c0f\uff0c\u592a\u5c0f\u4f1a\u5728\u8bfb\u53d6\u64cd\u4f5c\u82b1\u8d39\u8fc7\u591a\u65f6\u95f4\u3002\nhttps://stackoverflow.com/questions/30294146/python-fastest-way-to-process-large-file\n\n###  2.\u8865\u5145\u7f3a\u5931\u7684\u4ee3\u7801\n```python\ndef print_directory_contents(sPath):\n\"\"\"\n\u8fd9\u4e2a\u51fd\u6570\u63a5\u6536\u6587\u4ef6\u5939\u7684\u540d\u79f0\u4f5c\u4e3a\u8f93\u5165\u53c2\u6570\n\u8fd4\u56de\u8be5\u6587\u4ef6\u5939\u4e2d\u6587\u4ef6\u7684\u8def\u5f84\n\u4ee5\u53ca\u5176\u5305\u542b\u6587\u4ef6\u5939\u4e2d\u6587\u4ef6\u7684\u8def\u5f84\n\"\"\"\nimport os\nfor s_child in os.listdir(s_path):\n    s_child_path = os.path.join(s_path, s_child)\n    if os.path.isdir(s_child_path):\n        print_directory_contents(s_child_path)\n    else:\n        print(s_child_path)\n```\n## \u6a21\u5757\u4e0e\u5305\n### 3.\u8f93\u5165\u65e5\u671f\uff0c \u5224\u65ad\u8fd9\u4e00\u5929\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929\uff1f\n```python\nimport datetime\ndef dayofyear():\n    year = input(\"\u8bf7\u8f93\u5165\u5e74\u4efd: \")\n    month = input(\"\u8bf7\u8f93\u5165\u6708\u4efd: \")\n    day = input(\"\u8bf7\u8f93\u5165\u5929: \")\n    date1 = datetime.date(year=int(year),month=int(month),day=int(day))\n    date2 = datetime.date(year=int(year),month=1,day=1)\n    return (date1-date2).days+1\n```\n### 4.\u6253\u4e71\u4e00\u4e2a\u6392\u597d\u5e8f\u7684list\u5bf9\u8c61alist\uff1f\n```python\nimport random\nalist = [1,2,3,4,5]\nrandom.shuffle(alist)\nprint(alist)\n```\n## \u6570\u636e\u7c7b\u578b\n### 5.\u73b0\u6709\u5b57\u5178 d= {'a':24,'g':52,'i':12,'k':33}\u8bf7\u6309value\u503c\u8fdb\u884c\u6392\u5e8f?\n```python\nsorted(d.items(),key=lambda x:x[1])\n```\n    x[0]\u4ee3\u8868\u7528key\u8fdb\u884c\u6392\u5e8f\uff1bx[1]\u4ee3\u8868\u7528value\u8fdb\u884c\u6392\u5e8f\u3002\n### 6.\u5b57\u5178\u63a8\u5bfc\u5f0f\n```python\nd = {key:value for (key,value) in iterable}\n```\n### 7.\u8bf7\u53cd\u8f6c\u5b57\u7b26\u4e32 \"aStr\"?\n```python\nprint(\"aStr\"[::-1])\n```\n### 8.\u5c06\u5b57\u7b26\u4e32 \"k:1 |k1:2|k2:3|k3:4\"\uff0c\u5904\u7406\u6210\u5b57\u5178 {k:1,k1:2,...}\n```python\nstr1 = \"k:1|k1:2|k2:3|k3:4\"\ndef str2dict(str1):\n    dict1 = {}\n    for iterms in str1.split('|'):\n        key,value = iterms.split(':')\n        dict1[key] = value\n    return dict1\n#\u5b57\u5178\u63a8\u5bfc\u5f0f\nd = {k:int(v) for t in str1.split(\"|\") for k, v in (t.split(\":\"), )}\n```\n### 9.\u8bf7\u6309alist\u4e2d\u5143\u7d20\u7684age\u7531\u5927\u5230\u5c0f\u6392\u5e8f\n```python\nalist = [{'name':'a','age':20},{'name':'b','age':30},{'name':'c','age':25}]\ndef sort_by_age(list1):\n    return sorted(alist,key=lambda x:x['age'],reverse=True)\n```\n### 10.\u4e0b\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5c06\u662f\u4ec0\u4e48\uff1f\n```python\nlist = ['a','b','c','d','e']\nprint(list[10:])\n```\n\u4ee3\u7801\u5c06\u8f93\u51fa[],\u4e0d\u4f1a\u4ea7\u751fIndexError\u9519\u8bef\uff0c\u5c31\u50cf\u6240\u671f\u671b\u7684\u90a3\u6837\uff0c\u5c1d\u8bd5\u7528\u8d85\u51fa\u6210\u5458\u7684\u4e2a\u6570\u7684index\u6765\u83b7\u53d6\u67d0\u4e2a\u5217\u8868\u7684\u6210\u5458\u3002\u4f8b\u5982\uff0c\u5c1d\u8bd5\u83b7\u53d6list[10]\u548c\u4e4b\u540e\u7684\u6210\u5458\uff0c\u4f1a\u5bfc\u81f4IndexError\u3002\u7136\u800c\uff0c\u5c1d\u8bd5\u83b7\u53d6\u5217\u8868\u7684\u5207\u7247\uff0c\u5f00\u59cb\u7684index\u8d85\u8fc7\u4e86\u6210\u5458\u4e2a\u6570\u4e0d\u4f1a\u4ea7\u751fIndexError\uff0c\u800c\u662f\u4ec5\u4ec5\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5217\u8868\u3002\u8fd9\u6210\u4e3a\u7279\u522b\u8ba9\u4eba\u6076\u5fc3\u7684\u7591\u96be\u6742\u75c7\uff0c\u56e0\u4e3a\u8fd0\u884c\u7684\u65f6\u5019\u6ca1\u6709\u9519\u8bef\u4ea7\u751f\uff0c\u5bfc\u81f4Bug\u5f88\u96be\u88ab\u8ffd\u8e2a\u5230\u3002\n### 11.\u5199\u4e00\u4e2a\u5217\u8868\u751f\u6210\u5f0f\uff0c\u4ea7\u751f\u4e00\u4e2a\u516c\u5dee\u4e3a11\u7684\u7b49\u5dee\u6570\u5217\n```python\nprint([x*11 for x in range(10)])\n```\n### 12.\u7ed9\u5b9a\u4e24\u4e2a\u5217\u8868\uff0c\u600e\u4e48\u627e\u51fa\u4ed6\u4eec\u76f8\u540c\u7684\u5143\u7d20\u548c\u4e0d\u540c\u7684\u5143\u7d20\uff1f\n```python\nlist1 = [1,2,3]\nlist2 = [3,4,5]\nset1 = set(list1)\nset2 = set(list2)\nprint(set1 & set2)\nprint(set1 ^ set2)\n```\n### 13.\u8bf7\u5199\u51fa\u4e00\u6bb5python\u4ee3\u7801\u5b9e\u73b0\u5220\u9664list\u91cc\u9762\u7684\u91cd\u590d\u5143\u7d20\uff1f\n```python\nl1 = ['b','c','d','c','a','a']\nl2 = list(set(l1))\nprint(l2)\n```\n\u7528list\u7c7b\u7684sort\u65b9\u6cd5:\n```python\nl1 = ['b','c','d','c','a','a']\nl2 = list(set(l1))\nl2.sort(key=l1.index)\nprint(l2)\n```\n\u4e5f\u53ef\u4ee5\u8fd9\u6837\u5199:\n```python\nl1 = ['b','c','d','c','a','a']\nl2 = sorted(set(l1),key=l1.index)\nprint(l2)\n```\n\u4e5f\u53ef\u4ee5\u7528\u904d\u5386\uff1a\n```python\nl1 = ['b','c','d','c','a','a']\nl2 = []\nfor i in l1:\n    if not i in l2:\n        l2.append(i)\nprint(l2)\n```\n### 14.\u7ed9\u5b9a\u4e24\u4e2alist A\uff0cB ,\u8bf7\u7528\u627e\u51faA\uff0cB\u4e2d\u76f8\u540c\u4e0e\u4e0d\u540c\u7684\u5143\u7d20\n```python\nA,B \u4e2d\u76f8\u540c\u5143\u7d20\uff1a print(set(A)&set(B))\nA,B \u4e2d\u4e0d\u540c\u5143\u7d20:  print(set(A)^set(B))\n```\n## \u4f01\u4e1a\u9762\u8bd5\u9898\n### 15.python\u65b0\u5f0f\u7c7b\u548c\u7ecf\u5178\u7c7b\u7684\u533a\u522b\uff1f\na. \u5728python\u91cc\u51e1\u662f\u7ee7\u627f\u4e86object\u7684\u7c7b\uff0c\u90fd\u662f\u65b0\u5f0f\u7c7b\n\nb. Python3\u91cc\u53ea\u6709\u65b0\u5f0f\u7c7b\n\nc. Python2\u91cc\u9762\u7ee7\u627fobject\u7684\u662f\u65b0\u5f0f\u7c7b\uff0c\u6ca1\u6709\u5199\u7236\u7c7b\u7684\u662f\u7ecf\u5178\u7c7b\n\nd. \u7ecf\u5178\u7c7b\u76ee\u524d\u5728Python\u91cc\u57fa\u672c\u6ca1\u6709\u5e94\u7528\n\ne. \u4fdd\u6301class\u4e0etype\u7684\u7edf\u4e00\u5bf9\u65b0\u5f0f\u7c7b\u7684\u5b9e\u4f8b\u6267\u884ca.__class__\u4e0etype(a)\u7684\u7ed3\u679c\u662f\u4e00\u81f4\u7684\uff0c\u5bf9\u4e8e\u65e7\u5f0f\u7c7b\u6765\u8bf4\u5c31\u4e0d\u4e00\u6837\u4e86\u3002\n\nf.\u5bf9\u4e8e\u591a\u91cd\u7ee7\u627f\u7684\u5c5e\u6027\u641c\u7d22\u987a\u5e8f\u4e0d\u4e00\u6837\u65b0\u5f0f\u7c7b\u662f\u91c7\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u65e7\u5f0f\u7c7b\u91c7\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3002\n\n### 16.python\u4e2d\u5185\u7f6e\u7684\u6570\u636e\u7ed3\u6784\u6709\u51e0\u79cd\uff1f\na. \u6574\u578b int\u3001 \u957f\u6574\u578b long\u3001\u6d6e\u70b9\u578b float\u3001 \u590d\u6570 complex\n\nb. \u5b57\u7b26\u4e32 str\u3001 \u5217\u8868 list\u3001 \u5143\u7956 tuple\n\nc. \u5b57\u5178 dict \u3001 \u96c6\u5408 set\n\nd. Python3 \u4e2d\u6ca1\u6709 long\uff0c\u53ea\u6709\u65e0\u9650\u7cbe\u5ea6\u7684 int\n\n### 17.python\u5982\u4f55\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f?\u8bf7\u5199\u51fa\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f?\n\u7b2c\u4e00\u79cd\u65b9\u6cd5:\u4f7f\u7528\u88c5\u9970\u5668\n```python\ndef singleton(cls):\n    instances = {}\n    def wrapper(*args, **kwargs):\n        if cls not in instances:\n            instances[cls] = cls(*args, **kwargs)\n        return instances[cls]\n    return wrapper\n    \n    \n@singleton\nclass Foo(object):\n    pass\nfoo1 = Foo()\nfoo2 = Foo()\nprint(foo1 is foo2)  # True\n```\n\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff1a\u4f7f\u7528\u57fa\u7c7b\nNew \u662f\u771f\u6b63\u521b\u5efa\u5b9e\u4f8b\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u91cd\u5199\u57fa\u7c7b\u7684new \u65b9\u6cd5\uff0c\u4ee5\u6b64\u4fdd\u8bc1\u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u5019\u53ea\u751f\u6210\u4e00\u4e2a\u5b9e\u4f8b\n```python\nclass Singleton(object):\n    def __new__(cls, *args, **kwargs):\n        if not hasattr(cls, '_instance'):\n            cls._instance = super(Singleton, cls).__new__(cls, *args, **kwargs)\n        return cls._instance\n    \n    \nclass Foo(Singleton):\n    pass\n\nfoo1 = Foo()\nfoo2 = Foo()\n\nprint(foo1 is foo2)  # True\n```\n\u7b2c\u4e09\u79cd\u65b9\u6cd5\uff1a\u5143\u7c7b\uff0c\u5143\u7c7b\u662f\u7528\u4e8e\u521b\u5efa\u7c7b\u5bf9\u8c61\u7684\u7c7b\uff0c\u7c7b\u5bf9\u8c61\u521b\u5efa\u5b9e\u4f8b\u5bf9\u8c61\u65f6\u4e00\u5b9a\u8981\u8c03\u7528call\u65b9\u6cd5\uff0c\u56e0\u6b64\u5728\u8c03\u7528call\u65f6\u5019\u4fdd\u8bc1\u59cb\u7ec8\u53ea\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\u5373\u53ef\uff0ctype\u662fpython\u7684\u5143\u7c7b\n```python\nclass Singleton(type):\n    def __call__(cls, *args, **kwargs):\n        if not hasattr(cls, '_instance'):\n            cls._instance = super(Singleton, cls).__call__(*args, **kwargs)\n        return cls._instance\n\n\n# Python2\nclass Foo(object):\n    __metaclass__ = Singleton\n\n# Python3\nclass Foo(metaclass=Singleton):\n    pass\n\nfoo1 = Foo()\nfoo2 = Foo()\nprint(foo1 is foo2)  # True\n\n```\n### 18.\u53cd\u8f6c\u4e00\u4e2a\u6574\u6570\uff0c\u4f8b\u5982-123 --> -321 \n```python\nclass Solution(object):\n    def reverse(self,x):\n        if -10<x<10:\n            return x\n        str_x = str(x)\n        if str_x[0] !=\"-\":\n            str_x = str_x[::-1]\n            x = int(str_x)\n        else:\n            str_x = str_x[1:][::-1]\n            x = int(str_x)\n            x = -x\n        return x if -2147483648<x<2147483647 else 0\nif __name__ == '__main__':\n    s = Solution()\n    reverse_int = s.reverse(-120)\n    print(reverse_int)\n```\n### 19.\u8bbe\u8ba1\u5b9e\u73b0\u904d\u5386\u76ee\u5f55\u4e0e\u5b50\u76ee\u5f55\uff0c\u6293\u53d6.pyc\u6587\u4ef6\n\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff1a\n```python\nimport os\n\ndef get_files(dir,suffix):\n    res = []\n    for root,dirs,files in os.walk(dir):\n        for filename in files:\n            name,suf = os.path.splitext(filename)\n            if suf == suffix:\n                res.append(os.path.join(root,filename))\n\n    print(res)\n\nget_files(\"./\",'.pyc')\n```\n\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff1a\n```python\nimport os\n\ndef pick(obj):\n    if obj.endswith(\".pyc\"):\n        print(obj)\n    \ndef scan_path(ph):\n    file_list = os.listdir(ph)\n    for obj in file_list:\n        if os.path.isfile(obj):\n            pick(obj)\n        elif os.path.isdir(obj):\n            scan_path(obj)\n    \nif __name__=='__main__':\n    path = input('\u8f93\u5165\u76ee\u5f55')\n    scan_path(path)\n```\n\u7b2c\u4e09\u79cd\u65b9\u6cd5\n```python\nfrom glob import iglob\n\n\ndef func(fp, postfix):\n    for i in iglob(f\"{fp}/**/*{postfix}\", recursive=True):\n        print(i)\n\nif __name__ == \"__main__\":\n    postfix = \".pyc\"\n    func(\"K:\\Python_script\", postfix)\n```\n### 20.\u4e00\u884c\u4ee3\u7801\u5b9e\u73b01-100\u4e4b\u548c\n```python\ncount = sum(range(0,101))\nprint(count)\n```\n### 21.Python-\u904d\u5386\u5217\u8868\u65f6\u5220\u9664\u5143\u7d20\u7684\u6b63\u786e\u505a\u6cd5\n\u904d\u5386\u5728\u65b0\u5728\u5217\u8868\u64cd\u4f5c\uff0c\u5220\u9664\u65f6\u5728\u539f\u6765\u7684\u5217\u8868\u64cd\u4f5c\n```python\na = [1,2,3,4,5,6,7,8]\nprint(id(a))\nprint(id(a[:]))\nfor i in a[:]:\n    if i>5:\n        pass\n    else:\n        a.remove(i)\n    print(a)\nprint('-----------')\nprint(id(a))\n\n```\n```python\n#filter\na=[1,2,3,4,5,6,7,8]\nb = filter(lambda x: x>5,a)\nprint(list(b))\n```\n\u5217\u8868\u89e3\u6790\n```python\na=[1,2,3,4,5,6,7,8]\nb = [i for i in a if i>5]\nprint(b)\n```\n\u5012\u5e8f\u5220\u9664\n\u56e0\u4e3a\u5217\u8868\u603b\u662f\u2018\u5411\u524d\u79fb\u2019\uff0c\u6240\u4ee5\u53ef\u4ee5\u5012\u5e8f\u904d\u5386\uff0c\u5373\u4f7f\u540e\u9762\u7684\u5143\u7d20\u88ab\u4fee\u6539\u4e86\uff0c\u8fd8\u6ca1\u6709\u88ab\u904d\u5386\u7684\u5143\u7d20\u548c\u5176\u5750\u6807\u8fd8\u662f\u4fdd\u6301\u4e0d\u53d8\u7684\n```python\na=[1,2,3,4,5,6,7,8]\nprint(id(a))\nfor i in range(len(a)-1,-1,-1):\n    if a[i]>5:\n        pass\n    else:\n        a.remove(a[i])\nprint(id(a))\nprint('-----------')\nprint(a)\n```\n### 22.\u5b57\u7b26\u4e32\u7684\u64cd\u4f5c\u9898\u76ee\n\u5168\u5b57\u6bcd\u77ed\u53e5 PANGRAM \u662f\u5305\u542b\u6240\u6709\u82f1\u6587\u5b57\u6bcd\u7684\u53e5\u5b50\uff0c\u6bd4\u5982\uff1aA QUICK BROWN FOX JUMPS OVER THE LAZY DOG. \u5b9a\u4e49\u5e76\u5b9e\u73b0\u4e00\u4e2a\u65b9\u6cd5 get_missing_letter, \u4f20\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u91c7\u7eb3\u6570\uff0c\u8fd4\u56de\u53c2\u6570\u5b57\u7b26\u4e32\u53d8\u6210\u4e00\u4e2a PANGRAM \u4e2d\u6240\u7f3a\u5931\u7684\u5b57\u7b26\u3002\u5e94\u8be5\u5ffd\u7565\u4f20\u5165\u5b57\u7b26\u4e32\u53c2\u6570\u4e2d\u7684\u5927\u5c0f\u5199\uff0c\u8fd4\u56de\u5e94\u8be5\u90fd\u662f\u5c0f\u5199\u5b57\u7b26\u5e76\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5e8f\uff08\u8bf7\u5ffd\u7565\u6240\u6709\u975e ACSII \u5b57\u7b26\uff09\n\n**\u4e0b\u9762\u793a\u4f8b\u662f\u7528\u6765\u89e3\u91ca\uff0c\u53cc\u5f15\u53f7\u4e0d\u9700\u8981\u8003\u8651:**\n\n(0)\u8f93\u5165: \"A quick brown for jumps over the lazy dog\"\n\n\u8fd4\u56de\uff1a \"\"\n\n(1)\u8f93\u5165: \"A slow yellow fox crawls under the proactive dog\" \n\n\u8fd4\u56de: \"bjkmqz\"\n\n(2)\u8f93\u5165: \"Lions, and tigers, and bears, oh my!\"\n\n\u8fd4\u56de: \"cfjkpquvwxz\" \n\n(3)\u8f93\u5165: \"\"\n\n\u8fd4\u56de\uff1a\"abcdefghijklmnopqrstuvwxyz\"\n\n```python\ndef get_missing_letter(a):\n    s1 = set(\"abcdefghijklmnopqrstuvwxyz\")\n    s2 = set(a.lower())\n    ret = \"\".join(sorted(s1-s2))\n    return ret\n    \nprint(get_missing_letter(\"python\"))\n\n# other ways to generate letters\n# range(\"a\", \"z\")\n# \u65b9\u6cd5\u4e00:\nimport string\nletters = string.ascii_lowercase\n# \u65b9\u6cd5\u4e8c:\nletters = \"\".join(map(chr, range(ord('a'), ord('z') + 1)))\n```\n\n### 23.\u53ef\u53d8\u7c7b\u578b\u548c\u4e0d\u53ef\u53d8\u7c7b\u578b\n1,\u53ef\u53d8\u7c7b\u578b\u6709list,dict.\u4e0d\u53ef\u53d8\u7c7b\u578b\u6709string\uff0cnumber,tuple.\n\n2,\u5f53\u8fdb\u884c\u4fee\u6539\u64cd\u4f5c\u65f6\uff0c\u53ef\u53d8\u7c7b\u578b\u4f20\u9012\u7684\u662f\u5185\u5b58\u4e2d\u7684\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u76f4\u63a5\u4fee\u6539\u5185\u5b58\u4e2d\u7684\u503c\uff0c\u5e76\u6ca1\u6709\u5f00\u8f9f\u65b0\u7684\u5185\u5b58\u3002\n\n3,\u4e0d\u53ef\u53d8\u7c7b\u578b\u88ab\u6539\u53d8\u65f6\uff0c\u5e76\u6ca1\u6709\u6539\u53d8\u539f\u5185\u5b58\u5730\u5740\u4e2d\u7684\u503c\uff0c\u800c\u662f\u5f00\u8f9f\u4e00\u5757\u65b0\u7684\u5185\u5b58\uff0c\u5c06\u539f\u5730\u5740\u4e2d\u7684\u503c\u590d\u5236\u8fc7\u53bb\uff0c\u5bf9\u8fd9\u5757\u65b0\u5f00\u8f9f\u7684\u5185\u5b58\u4e2d\u7684\u503c\u8fdb\u884c\u64cd\u4f5c\u3002\n\n### 24.is\u548c==\u6709\u4ec0\u4e48\u533a\u522b\uff1f\nis\uff1a\u6bd4\u8f83\u7684\u662f\u4e24\u4e2a\u5bf9\u8c61\u7684id\u503c\u662f\u5426\u76f8\u7b49\uff0c\u4e5f\u5c31\u662f\u6bd4\u8f83\u4fe9\u5bf9\u8c61\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u3002\u662f\u5426\u6307\u5411\u540c\u4e00\u4e2a\u5185\u5b58\u5730\u5740\n\n== \uff1a \u6bd4\u8f83\u7684\u4e24\u4e2a\u5bf9\u8c61\u7684\u5185\u5bb9/\u503c\u662f\u5426\u76f8\u7b49\uff0c\u9ed8\u8ba4\u4f1a\u8c03\u7528\u5bf9\u8c61\u7684eq()\u65b9\u6cd5\n### 25.\u6c42\u51fa\u5217\u8868\u6240\u6709\u5947\u6570\u5e76\u6784\u9020\u65b0\u5217\u8868\n```python\na = [1,2,3,4,5,6,7,8,9,10]\nres = [ i for i in a if i%2==1]\nprint(res)\n```\n### 26.\u7528\u4e00\u884cpython\u4ee3\u7801\u5199\u51fa1+2+3+10248\n```python\nfrom functools import reduce\n#1.\u4f7f\u7528sum\u5185\u7f6e\u6c42\u548c\u51fd\u6570\nnum = sum([1,2,3,10248])\nprint(num)\n#2.reduce \u51fd\u6570\nnum1 = reduce(lambda x,y :x+y,[1,2,3,10248])\nprint(num1)\n```\n### 27.Python\u4e2d\u53d8\u91cf\u7684\u4f5c\u7528\u57df\uff1f\uff08\u53d8\u91cf\u67e5\u627e\u987a\u5e8f)\n\u51fd\u6570\u4f5c\u7528\u57df\u7684LEGB\u987a\u5e8f\n\n1.\u4ec0\u4e48\u662fLEGB?\n\nL\uff1a local \u51fd\u6570\u5185\u90e8\u4f5c\u7528\u57df\n\nE: enclosing \u51fd\u6570\u5185\u90e8\u4e0e\u5185\u5d4c\u51fd\u6570\u4e4b\u95f4\n\nG: global \u5168\u5c40\u4f5c\u7528\u57df\n\nB\uff1a build-in \u5185\u7f6e\u4f5c\u7528\n\npython\u5728\u51fd\u6570\u91cc\u9762\u7684\u67e5\u627e\u5206\u4e3a4\u79cd\uff0c\u79f0\u4e4b\u4e3aLEGB\uff0c\u4e5f\u6b63\u662f\u6309\u7167\u8fd9\u662f\u987a\u5e8f\u6765\u67e5\u627e\u7684\n### 28.\u5b57\u7b26\u4e32 `\"123\"` \u8f6c\u6362\u6210 `123`\uff0c\u4e0d\u4f7f\u7528\u5185\u7f6eapi\uff0c\u4f8b\u5982 `int()`\n\u65b9\u6cd5\u4e00\uff1a \u5229\u7528 `str` \u51fd\u6570\n```python\ndef atoi(s):\n    num = 0\n    for v in s:\n        for j in range(10):\n            if v == str(j):\n                num = num * 10 + j\n    return num\n```\n\u65b9\u6cd5\u4e8c\uff1a \u5229\u7528 `ord` \u51fd\u6570\n```python\ndef atoi(s):\n    num = 0\n    for v in s:\n        num = num * 10 + ord(v) - ord('0')\n    return num\n```\n\u65b9\u6cd5\u4e09: \u5229\u7528 `eval` \u51fd\u6570\n```python\ndef atoi(s):\n    num = 0\n    for v in s:\n        t = \"%s * 1\" % v\n        n = eval(t)\n        num = num * 10 + n\n    return num\n```\n\u65b9\u6cd5\u56db: \u7ed3\u5408\u65b9\u6cd5\u4e8c\uff0c\u4f7f\u7528 `reduce`\uff0c\u4e00\u884c\u89e3\u51b3\n```python\nfrom functools import reduce\ndef atoi(s):\n    return reduce(lambda num, v: num * 10 + ord(v) - ord('0'), s, 0)\n```\n### 29.Given an array of integers\n\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u548c\u4e00\u4e2a\u76ee\u6807\u503c\uff0c\u627e\u51fa\u6570\u7ec4\u4e2d\u548c\u4e3a\u76ee\u6807\u503c\u7684\u4e24\u4e2a\u6570\u3002\u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u4e2a\u8f93\u5165\u53ea\u5bf9\u5e94\u4e00\u79cd\u7b54\u6848\uff0c\u4e14\u540c\u6837\u7684\u5143\u7d20\u4e0d\u80fd\u88ab\u91cd\u590d\u5229\u7528\u3002\u793a\u4f8b:\u7ed9\u5b9anums = [2,7,11,15],target=9 \u56e0\u4e3a nums[0]+nums[1] = 2+7 =9,\u6240\u4ee5\u8fd4\u56de[0,1]\n```python\nclass Solution:\n    def twoSum(self,nums,target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        d = {}\n        size = 0\n        while size < len(nums):\n            if target-nums[size] in d:\n                if d[target-nums[size]] <size:\n                    return [d[target-nums[size]],size]\n                else:\n                    d[nums[size]] = size\n                size = size +1\nsolution = Solution()\nlist = [2,7,11,15]\ntarget = 9\nnums = solution.twoSum(list,target)\nprint(nums)\n```\n\n```\n\nclass Solution(object):\n    def twoSum(self, nums, target):\n        for i in range(len(nums)):\n            num = target - nums[i]\n            if num in nums[i+1:]:\n                return [i, nums.index(num,i+1)]\n\n```\n\u7ed9\u5217\u8868\u4e2d\u7684\u5b57\u5178\u6392\u5e8f\uff1a\u5047\u8bbe\u6709\u5982\u4e0blist\u5bf9\u8c61\uff0calist=[{\"name\":\"a\",\"age\":20},{\"name\":\"b\",\"age\":30},{\"name\":\"c\",\"age\":25}],\u5c06alist\u4e2d\u7684\u5143\u7d20\u6309\u7167age\u4ece\u5927\u5230\u5c0f\u6392\u5e8f alist=[{\"name\":\"a\",\"age\":20},{\"name\":\"b\",\"age\":30},{\"name\":\"c\",\"age\":25}]\n```python\nalist_sort = sorted(alist,key=lambda e: e.__getitem__('age'),reverse=True)\n```\n\n### 30.python\u4ee3\u7801\u5b9e\u73b0\u5220\u9664\u4e00\u4e2alist\u91cc\u9762\u7684\u91cd\u590d\u5143\u7d20\n```python\ndef distFunc1(a):\n    \"\"\"\u4f7f\u7528\u96c6\u5408\u53bb\u91cd\"\"\"\n    a = list(set(a))\n    print(a)\n\ndef distFunc2(a):\n    \"\"\"\u5c06\u4e00\u4e2a\u5217\u8868\u7684\u6570\u636e\u53d6\u51fa\u653e\u5230\u53e6\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u4e2d\u95f4\u4f5c\u5224\u65ad\"\"\"\n    list = []\n    for i in a:\n        if i not in list:\n            list.append(i)\n    #\u5982\u679c\u9700\u8981\u6392\u5e8f\u7684\u8bdd\u7528sort\n    list.sort()\n    print(list)\n\ndef distFunc3(a):\n    \"\"\"\u4f7f\u7528\u5b57\u5178\"\"\"\n    b = {}\n    b = b.fromkeys(a)\n    c = list(b.keys())\n    print(c)\n\nif __name__ == \"__main__\":\n    a = [1,2,4,2,4,5,7,10,5,5,7,8,9,0,3]\n    distFunc1(a)\n    distFunc2(a)\n    distFunc3(a)\n  \n```\n### 31.\u7edf\u8ba1\u4e00\u4e2a\u6587\u672c\u4e2d\u5355\u8bcd\u9891\u6b21\u6700\u9ad8\u768410\u4e2a\u5355\u8bcd\uff1f\n```python\nimport re\n\n# \u65b9\u6cd5\u4e00\ndef test(filepath):\n    \n    distone = {}\n\n    with open(filepath) as f:\n        for line in f:\n            line = re.sub(\"\\W+\", \" \", line)\n            lineone = line.split()\n            for keyone in lineone:\n                if not distone.get(keyone):\n                    distone[keyone] = 1\n                else:\n                    distone[keyone] += 1\n    num_ten = sorted(distone.items(), key=lambda x:x[1], reverse=True)[:10]\n    num_ten =[x[0] for x in num_ten]\n    return num_ten\n    \n \n# \u65b9\u6cd5\u4e8c \n# \u4f7f\u7528 built-in \u7684 Counter \u91cc\u9762\u7684 most_common\nimport re\nfrom collections import Counter\n\n\ndef test2(filepath):\n    with open(filepath) as f:\n        return list(map(lambda c: c[0], Counter(re.sub(\"\\W+\", \" \", f.read()).split()).most_common(10)))\n```\n### 32.\u8bf7\u5199\u51fa\u4e00\u4e2a\u51fd\u6570\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\n\u8be5\u51fd\u6570\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u4ec5\u5305\u542b\u6570\u5b57\u7684list,\u8f93\u51fa\u4e00\u4e2a\u65b0\u7684list\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n1\u3001\u8be5\u5143\u7d20\u662f\u5076\u6570\n\n2\u3001\u8be5\u5143\u7d20\u5728\u539flist\u4e2d\u662f\u5728\u5076\u6570\u7684\u4f4d\u7f6e(index\u662f\u5076\u6570)\n\n```python\ndef num_list(num):\n    return [i for i in num if i %2 ==0 and num.index(i)%2==0]\n\nnum = [0,1,2,3,4,5,6,7,8,9,10]\nresult = num_list(num)\nprint(result)\n```\n### 33.\u4f7f\u7528\u5355\u4e00\u7684\u5217\u8868\u751f\u6210\u5f0f\u6765\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5217\u8868\n\u8be5\u5217\u8868\u53ea\u5305\u542b\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u503c\uff0c\u5143\u7d20\u4e3a\u539f\u59cb\u5217\u8868\u4e2d\u5076\u6570\u5207\u7247\n```python\nlist_data = [1,2,5,8,10,3,18,6,20]\nres = [x for x in list_data[::2] if x %2 ==0]\nprint(res)\n```\n### 34.\u7528\u4e00\u884c\u4ee3\u7801\u751f\u6210[1,4,9,16,25,36,49,64,81,100]\n```python\n[x * x for x in range(1,11)]\n```\n### 35.\u8f93\u5165\u67d0\u5e74\u67d0\u6708\u67d0\u65e5\uff0c\u5224\u65ad\u8fd9\u4e00\u5929\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929\uff1f\n```python\nimport datetime\n\ny = int(input(\"\u8bf7\u8f93\u51654\u4f4d\u6570\u5b57\u7684\u5e74\u4efd:\"))\nm = int(input(\"\u8bf7\u8f93\u5165\u6708\u4efd:\"))\nd = int(input(\"\u8bf7\u8f93\u5165\u662f\u54ea\u4e00\u5929\"))\n\ntargetDay = datetime.date(y,m,d)\ndayCount = targetDay - datetime.date(targetDay.year -1,12,31)\nprint(\"%s\u662f %s\u5e74\u7684\u7b2c%s\u5929\u3002\"%(targetDay,y,dayCount.days))\n```\n### 36.\u4e24\u4e2a\u6709\u5e8f\u5217\u8868\uff0cl1,l2\uff0c\u5bf9\u8fd9\u4e24\u4e2a\u5217\u8868\u8fdb\u884c\u5408\u5e76\u4e0d\u53ef\u4f7f\u7528extend\n```python\ndef loop_merge_sort(l1,l2):\n    tmp = []\n    while len(l1)>0 and len(l2)>0:\n        if l1[0] <l2[0]:\n            tmp.append(l1[0])\n            del l1[0]\n        else:\n            tmp.append(l2[0])\n            del l2[0]\n    while len(l1)>0:\n        tmp.append(l1[0])\n        del l1[0]\n    while len(l2)>0:\n        tmp.append(l2[0])\n        del l2[0]\n    return tmp\n```\n### 37.\u7ed9\u5b9a\u4e00\u4e2a\u4efb\u610f\u957f\u5ea6\u6570\u7ec4\uff0c\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\n\u8ba9\u6240\u6709\u5947\u6570\u90fd\u5728\u5076\u6570\u524d\u9762\uff0c\u800c\u4e14\u5947\u6570\u5347\u5e8f\u6392\u5217\uff0c\u5076\u6570\u964d\u5e8f\u6392\u5e8f\uff0c\u5982\u5b57\u7b26\u4e32'1982376455',\u53d8\u6210'1355798642'\n```python\n# \u65b9\u6cd5\u4e00\ndef func1(l):\n    if isinstance(l, str):\n        l = [int(i) for i in l]\n    l.sort(reverse=True)\n    for i in range(len(l)):\n        if l[i] % 2 > 0:\n            l.insert(0, l.pop(i))\n    print(''.join(str(e) for e in l))\n\n# \u65b9\u6cd5\u4e8c\ndef func2(l):\n    print(\"\".join(sorted(l, key=lambda x: int(x) % 2 == 0 and 20 - int(x) or int(x))))\n```\n### 38.\u5199\u4e00\u4e2a\u51fd\u6570\u627e\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u4e2d\uff0c\u7b2c\u4e8c\u5927\u7684\u6570\n```python\ndef find_second_large_num(num_list):\n    \"\"\"\n    \u627e\u51fa\u6570\u7ec4\u7b2c2\u5927\u7684\u6570\u5b57\n    \"\"\"\n    # \u65b9\u6cd5\u4e00\n    # \u76f4\u63a5\u6392\u5e8f\uff0c\u8f93\u51fa\u5012\u6570\u7b2c\u4e8c\u4e2a\u6570\u5373\u53ef\n    tmp_list = sorted(num_list)\n    print(\"\u65b9\u6cd5\u4e00\\nSecond_large_num is :\", tmp_list[-2])\n    \n    # \u65b9\u6cd5\u4e8c\n    # \u8bbe\u7f6e\u4e24\u4e2a\u6807\u5fd7\u4f4d\u4e00\u4e2a\u5b58\u50a8\u6700\u5927\u6570\u4e00\u4e2a\u5b58\u50a8\u6b21\u5927\u6570\n    # two \u5b58\u50a8\u6b21\u5927\u503c\uff0cone \u5b58\u50a8\u6700\u5927\u503c\uff0c\u904d\u5386\u4e00\u6b21\u6570\u7ec4\u5373\u53ef\uff0c\u5148\u5224\u65ad\u662f\u5426\u5927\u4e8e one\uff0c\u82e5\u5927\u4e8e\u5c06 one \u7684\u503c\u7ed9 two\uff0c\u5c06 num_list[i] \u7684\u503c\u7ed9 one\uff0c\u5426\u5219\u6bd4\u8f83\u662f\u5426\u5927\u4e8etwo\uff0c\u82e5\u5927\u4e8e\u76f4\u63a5\u5c06 num_list[i] \u7684\u503c\u7ed9two\uff0c\u5426\u5219pass\n    one = num_list[0]\n    two = num_list[0]\n    for i in range(1, len(num_list)):\n        if num_list[i] > one:\n            two = one\n            one = num_list[i]\n        elif num_list[i] > two:\n            two = num_list[i]\n    print(\"\u65b9\u6cd5\u4e8c\\nSecond_large_num is :\", two)\n    \n    # \u65b9\u6cd5\u4e09\n    # \u7528 reduce \u4e0e\u903b\u8f91\u7b26\u53f7 (and, or)\n    # \u57fa\u672c\u601d\u8def\u4e0e\u65b9\u6cd5\u4e8c\u4e00\u6837\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u7528 if \u8fdb\u884c\u5224\u65ad\u3002\n    from functools import reduce\n    num = reduce(lambda ot, x: ot[1] < x and (ot[1], x) or ot[0] < x and (x, ot[1]) or ot, num_list, (0, 0))[0]\n    print(\"\u65b9\u6cd5\u4e09\\nSecond_large_num is :\", num)\n    \n    \nif __name__ == '__main___':\n    num_list = [34, 11, 23, 56, 78, 0, 9, 12, 3, 7, 5]\n    find_second_large_num(num_list)\n```\n### 39.\u9605\u8bfb\u4e00\u4e0b\u4ee3\u7801\u4ed6\u4eec\u7684\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f\n```python\ndef multi():\n    return [lambda x : i*x for i in range(4)]\nprint([m(3) for m in multi()])\n```\n\u6b63\u786e\u7b54\u6848\u662f[9,9,9,9]\uff0c\u800c\u4e0d\u662f[0,3,6,9]\u4ea7\u751f\u7684\u539f\u56e0\u662fPython\u7684\u95ed\u5305\u7684\u540e\u671f\u7ed1\u5b9a\u5bfc\u81f4\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5728\u95ed\u5305\u4e2d\u7684\u53d8\u91cf\u662f\u5728\u5185\u90e8\u51fd\u6570\u88ab\u8c03\u7528\u7684\u65f6\u5019\u88ab\u67e5\u627e\u7684\uff0c\u56e0\u4e3a\uff0c\u6700\u540e\u51fd\u6570\u88ab\u8c03\u7528\u7684\u65f6\u5019\uff0cfor\u5faa\u73af\u5df2\u7ecf\u5b8c\u6210, i \u7684\u503c\u6700\u540e\u662f3,\u56e0\u6b64\u6bcf\u4e00\u4e2a\u8fd4\u56de\u503c\u7684i\u90fd\u662f3,\u6240\u4ee5\u6700\u540e\u7684\u7ed3\u679c\u662f[9,9,9,9]\n### 40.\u7edf\u8ba1\u4e00\u6bb5\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\n```python\n# \u65b9\u6cd5\u4e00\ndef count_str(str_data):\n    \"\"\"\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\u7684\u51fd\u6570\"\"\"\n    dict_str = {} \n    for i in str_data:\n        dict_str[i] = dict_str.get(i, 0) + 1\n    return dict_str\ndict_str = count_str(\"AAABBCCAC\")\nstr_count_data = \"\"\nfor k, v in dict_str.items():\n    str_count_data += k + str(v)\nprint(str_count_data)\n\n# \u65b9\u6cd5\u4e8c\nfrom collections import Counter\n\nprint(\"\".join(map(lambda x: x[0] + str(x[1]), Counter(\"AAABBCCAC\").most_common())))\n```\n### 41.super\u51fd\u6570\u7684\u5177\u4f53\u7528\u6cd5\u548c\u573a\u666f\nhttps://python3-cookbook.readthedocs.io/zh_CN/latest/c08/p07_calling_method_on_parent_class.html\n\n# Python\u9ad8\u7ea7\n## \u5143\u7c7b\n### 42.Python\u4e2d\u7c7b\u65b9\u6cd5\u3001\u7c7b\u5b9e\u4f8b\u65b9\u6cd5\u3001\u9759\u6001\u65b9\u6cd5\u6709\u4f55\u533a\u522b\uff1f\n\u7c7b\u65b9\u6cd5: \u662f\u7c7b\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u5728\u5b9a\u4e49\u65f6\u9700\u8981\u5728\u4e0a\u65b9\u4f7f\u7528 @classmethod \u8fdb\u884c\u88c5\u9970,\u5f62\u53c2\u4e3acls\uff0c\u8868\u793a\u7c7b\u5bf9\u8c61\uff0c\u7c7b\u5bf9\u8c61\u548c\u5b9e\u4f8b\u5bf9\u8c61\u90fd\u53ef\u8c03\u7528\n\n\u7c7b\u5b9e\u4f8b\u65b9\u6cd5: \u662f\u7c7b\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u65b9\u6cd5,\u53ea\u6709\u5b9e\u4f8b\u5bf9\u8c61\u53ef\u4ee5\u8c03\u7528\uff0c\u5f62\u53c2\u4e3aself,\u6307\u4ee3\u5bf9\u8c61\u672c\u8eab;\n\n\u9759\u6001\u65b9\u6cd5: \u662f\u4e00\u4e2a\u4efb\u610f\u51fd\u6570\uff0c\u5728\u5176\u4e0a\u65b9\u4f7f\u7528 @staticmethod \u8fdb\u884c\u88c5\u9970\uff0c\u53ef\u4ee5\u7528\u5bf9\u8c61\u76f4\u63a5\u8c03\u7528\uff0c\u9759\u6001\u65b9\u6cd5\u5b9e\u9645\u4e0a\u8ddf\u8be5\u7c7b\u6ca1\u6709\u592a\u5927\u5173\u7cfb\n### 43.\u904d\u5386\u4e00\u4e2aobject\u7684\u6240\u6709\u5c5e\u6027\uff0c\u5e76print\u6bcf\u4e00\u4e2a\u5c5e\u6027\u540d\uff1f\n```python\nclass Car:\n    def __init__(self,name,loss): # loss [\u4ef7\u683c\uff0c\u6cb9\u8017\uff0c\u516c\u91cc\u6570]\n        self.name = name\n        self.loss = loss\n    \n    def getName(self):\n        return self.name\n    \n    def getPrice(self):\n        # \u83b7\u53d6\u6c7d\u8f66\u4ef7\u683c\n        return self.loss[0]\n    \n    def getLoss(self):\n        # \u83b7\u53d6\u6c7d\u8f66\u635f\u8017\u503c\n        return self.loss[1] * self.loss[2]\n\nBmw = Car(\"\u5b9d\u9a6c\",[60,9,500]) # \u5b9e\u4f8b\u5316\u4e00\u4e2a\u5b9d\u9a6c\u8f66\u5bf9\u8c61\nprint(getattr(Bmw,\"name\")) # \u4f7f\u7528getattr()\u4f20\u5165\u5bf9\u8c61\u540d\u5b57,\u5c5e\u6027\u503c\u3002\nprint(dir(Bmw)) # \u83b7Bmw\u6240\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\n```\n### 44.\u5199\u4e00\u4e2a\u7c7b\uff0c\u5e76\u8ba9\u5b83\u5c3d\u53ef\u80fd\u591a\u7684\u652f\u6301\u64cd\u4f5c\u7b26?\n```python\nclass Array:\n    __list = []\n    \n    def __init__(self):\n        print \"constructor\"\n    \n    def __del__(self):\n        print \"destruct\"\n    \n    def __str__(self):\n        return \"this self-defined array class\"\n\n    def __getitem__(self,key):\n        return self.__list[key]\n    \n    def __len__(self):\n        return len(self.__list)\n\n    def Add(self,value):\n        self.__list.append(value)\n    \n    def Remove(self,index):\n        del self.__list[index]\n    \n    def DisplayItems(self):\n        print \"show all items---\"\n        for item in self.__list:\n            print item\n    \n        \n```\n### 45.\u4ecb\u7ecdCython\uff0cPypy Cpython Numba\u5404\u6709\u4ec0\u4e48\u7f3a\u70b9\nCython\n### 46.\u8bf7\u63cf\u8ff0\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u7c7b\u7684\u533a\u522b\u548c\u8054\u7cfb\n\n1.\u62bd\u8c61\u7c7b\uff1a \u89c4\u5b9a\u4e86\u4e00\u7cfb\u5217\u7684\u65b9\u6cd5\uff0c\u5e76\u89c4\u5b9a\u4e86\u5fc5\u987b\u7531\u7ee7\u627f\u7c7b\u5b9e\u73b0\u7684\u65b9\u6cd5\u3002\u7531\u4e8e\u6709\u62bd\u8c61\u65b9\u6cd5\u7684\u5b58\u5728\uff0c\u6240\u4ee5\u62bd\u8c61\u7c7b\u4e0d\u80fd\u5b9e\u4f8b\u5316\u3002\u53ef\u4ee5\u5c06\u62bd\u8c61\u7c7b\u7406\u89e3\u4e3a\u6bdb\u576f\u623f\uff0c\u95e8\u7a97\uff0c\u5899\u9762\u7684\u6837\u5f0f\u7531\u4f60\u81ea\u5df1\u6765\u5b9a\uff0c\u6240\u4ee5\u62bd\u8c61\u7c7b\u4e0e\u4f5c\u4e3a\u57fa\u7c7b\u7684\u666e\u901a\u7c7b\u7684\u533a\u522b\u5728\u4e8e\u7ea6\u675f\u6027\u66f4\u5f3a\n\n2.\u63a5\u53e3\u7c7b\uff1a\u4e0e\u62bd\u8c61\u7c7b\u5f88\u76f8\u4f3c\uff0c\u8868\u73b0\u5728\u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\uff0c\u5fc5\u987b\u7531\u5f15\u7528\u7c7b\u5b9e\u73b0\uff0c\u4f46\u4ed6\u4e0e\u62bd\u8c61\u7c7b\u7684\u6839\u672c\u533a\u522b\u5728\u4e8e\u7528\u9014\uff1a\u4e0e\u4e0d\u540c\u4e2a\u4f53\u95f4\u6c9f\u901a\u7684\u89c4\u5219\uff0c\u4f60\u8981\u8fdb\u5bbf\u820d\u9700\u8981\u6709\u94a5\u5319\uff0c\u8fd9\u4e2a\u94a5\u5319\u5c31\u662f\u4f60\u4e0e\u5bbf\u820d\u7684\u63a5\u53e3\uff0c\u4f60\u7684\u820d\u53cb\u4e5f\u6709\u8fd9\u4e2a\u63a5\u53e3\uff0c\u6240\u4ee5\u4ed6\u4e5f\u80fd\u8fdb\u5165\u5bbf\u820d\uff0c\u4f60\u7528\u624b\u673a\u901a\u8bdd\uff0c\u90a3\u4e48\u624b\u673a\u5c31\u662f\u4f60\u4e0e\u4ed6\u4eba\u4ea4\u6d41\u7684\u63a5\u53e3\n\n3.\u533a\u522b\u548c\u5173\u8054\uff1a\n\n1.\u63a5\u53e3\u662f\u62bd\u8c61\u7c7b\u7684\u53d8\u4f53\uff0c\u63a5\u53e3\u4e2d\u6240\u6709\u7684\u65b9\u6cd5\u90fd\u662f\u62bd\u8c61\u7684\uff0c\u800c\u62bd\u8c61\u7c7b\u4e2d\u53ef\u4ee5\u6709\u975e\u62bd\u8c61\u65b9\u6cd5\uff0c\u62bd\u8c61\u7c7b\u662f\u58f0\u660e\u65b9\u6cd5\u7684\u5b58\u5728\u800c\u4e0d\u53bb\u5b9e\u73b0\u5b83\u7684\u7c7b\n\n2.\u63a5\u53e3\u53ef\u4ee5\u7ee7\u627f\uff0c\u62bd\u8c61\u7c7b\u4e0d\u884c\n\n3.\u63a5\u53e3\u5b9a\u4e49\u65b9\u6cd5\uff0c\u6ca1\u6709\u5b9e\u73b0\u7684\u4ee3\u7801\uff0c\u800c\u62bd\u8c61\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u90e8\u5206\u65b9\u6cd5\n\n4.\u63a5\u53e3\u4e2d\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e3astatic\u800c\u62bd\u8c61\u7c7b\u4e0d\u662f\n\n### 47.Python\u4e2d\u5982\u4f55\u52a8\u6001\u83b7\u53d6\u548c\u8bbe\u7f6e\u5bf9\u8c61\u7684\u5c5e\u6027\uff1f\n\n```python\nif hasattr(Parent, 'x'):\n    print(getattr(Parent, 'x'))\n    setattr(Parent, 'x',3)\nprint(getattr(Parent,'x'))\n```\n\n\n\n## \u5185\u5b58\u7ba1\u7406\u4e0e\u5783\u573e\u56de\u6536\u673a\u5236\n### 48.\u54ea\u4e9b\u64cd\u4f5c\u4f1a\u5bfc\u81f4Python\u5185\u5b58\u6ea2\u51fa\uff0c\u600e\u4e48\u5904\u7406\uff1f\n### 49.\u5173\u4e8ePython\u5185\u5b58\u7ba1\u7406,\u4e0b\u5217\u8bf4\u6cd5\u9519\u8bef\u7684\u662f  B\n\nA,\u53d8\u91cf\u4e0d\u5fc5\u4e8b\u5148\u58f0\u660e                                   B,\u53d8\u91cf\u65e0\u987b\u5148\u521b\u5efa\u548c\u8d4b\u503c\u800c\u76f4\u63a5\u4f7f\u7528\n\nC,\u53d8\u91cf\u65e0\u987b\u6307\u5b9a\u7c7b\u578b                                   D,\u53ef\u4ee5\u4f7f\u7528del\u91ca\u653e\u8d44\u6e90\n\n### 50.Python\u7684\u5185\u5b58\u7ba1\u7406\u673a\u5236\u53ca\u8c03\u4f18\u624b\u6bb5\uff1f\n\n\u5185\u5b58\u7ba1\u7406\u673a\u5236: \u5f15\u7528\u8ba1\u6570\u3001\u5783\u573e\u56de\u6536\u3001\u5185\u5b58\u6c60\n\n\u5f15\u7528\u8ba1\u6570\uff1a\u5f15\u7528\u8ba1\u6570\u662f\u4e00\u79cd\u975e\u5e38\u9ad8\u6548\u7684\u5185\u5b58\u7ba1\u7406\u624b\u6bb5\uff0c\u5f53\u4e00\u4e2aPython\u5bf9\u8c61\u88ab\u5f15\u7528\u65f6\u5176\u5f15\u7528\u8ba1\u6570\u589e\u52a01,\n\n\u5f53\u5176\u4e0d\u518d\u88ab\u4e00\u4e2a\u53d8\u91cf\u5f15\u7528\u65f6\u5219\u8ba1\u6570\u51cf1,\u5f53\u5f15\u7528\u8ba1\u6570\u7b49\u4e8e0\u65f6\u5bf9\u8c61\u88ab\u5220\u9664\u3002\u5f31\u5f15\u7528\u4e0d\u4f1a\u589e\u52a0\u5f15\u7528\u8ba1\u6570\n\n\u5783\u573e\u56de\u6536\uff1a\n\n1.\u5f15\u7528\u8ba1\u6570\n\n\u5f15\u7528\u8ba1\u6570\u4e5f\u662f\u4e00\u79cd\u5783\u573e\u6536\u96c6\u673a\u5236\uff0c\u800c\u4e14\u4e5f\u662f\u4e00\u79cd\u6700\u76f4\u89c2\u3001\u6700\u7b80\u5355\u7684\u5783\u573e\u6536\u96c6\u6280\u672f\u3002\u5f53Python\u7684\u67d0\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u964d\u4e3a0\u65f6\uff0c\u8bf4\u660e\u6ca1\u6709\u4efb\u4f55\u5f15\u7528\u6307\u5411\u8be5\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u5c31\u6210\u4e3a\u8981\u88ab\u56de\u6536\u7684\u5783\u573e\u4e86\u3002\u6bd4\u5982\u67d0\u4e2a\u65b0\u5efa\u5bf9\u8c61\uff0c\u5b83\u88ab\u5206\u914d\u7ed9\u67d0\u4e2a\u5f15\u7528\uff0c\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u53d8\u4e3a1\uff0c\u5982\u679c\u5f15\u7528\u88ab\u5220\u9664\uff0c\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u4e3a0,\u90a3\u4e48\u8be5\u5bf9\u8c61\u5c31\u53ef\u4ee5\u88ab\u5783\u573e\u56de\u6536\u3002\u4e0d\u8fc7\u5982\u679c\u51fa\u73b0\u5faa\u73af\u5f15\u7528\u7684\u8bdd\uff0c\u5f15\u7528\u8ba1\u6570\u673a\u5236\u5c31\u4e0d\u518d\u8d77\u6709\u6548\u7684\u4f5c\u7528\u4e86\u3002\n\n2.\u6807\u8bb0\u6e05\u9664\n\nhttps://foofish.net/python-gc.html\n\n\u8c03\u4f18\u624b\u6bb5\n\n1.\u624b\u52a8\u5783\u573e\u56de\u6536\n\n2.\u8c03\u9ad8\u5783\u573e\u56de\u6536\u9608\u503c\n\n3.\u907f\u514d\u5faa\u73af\u5f15\u7528\n\n### 51.\u5185\u5b58\u6cc4\u9732\u662f\u4ec0\u4e48\uff1f\u5982\u4f55\u907f\u514d\uff1f\n\n**\u5185\u5b58\u6cc4\u6f0f**\u6307\u7531\u4e8e\u758f\u5ffd\u6216\u9519\u8bef\u9020\u6210\u7a0b\u5e8f\u672a\u80fd\u91ca\u653e\u5df2\u7ecf\u4e0d\u518d\u4f7f\u7528\u7684\u5185\u5b58\u3002\u5185\u5b58\u6cc4\u6f0f\u5e76\u975e\u6307\u5185\u5b58\u5728\u7269\u7406\u4e0a\u7684\u6d88\u5931\uff0c\u800c\u662f\u5e94\u7528\u7a0b\u5e8f\u5206\u914d\u67d0\u6bb5\u5185\u5b58\u540e\uff0c\u7531\u4e8e\u8bbe\u8ba1\u9519\u8bef\uff0c\u5bfc\u81f4\u5728\u91ca\u653e\u8be5\u6bb5\u5185\u5b58\u4e4b\u524d\u5c31\u5931\u53bb\u4e86\u5bf9\u8be5\u6bb5\u5185\u5b58\u7684\u63a7\u5236\uff0c\u4ece\u800c\u9020\u6210\u4e86\u5185\u5b58\u7684\u6d6a\u8d39\u3002\n\n\u6709`__del__()`\u51fd\u6570\u7684\u5bf9\u8c61\u95f4\u7684\u5faa\u73af\u5f15\u7528\u662f\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\u7684\u4e3b\u51f6\u3002\u4e0d\u4f7f\u7528\u4e00\u4e2a\u5bf9\u8c61\u65f6\u4f7f\u7528: del object \u6765\u5220\u9664\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u5c31\u53ef\u4ee5\u6709\u6548\u9632\u6b62\u5185\u5b58\u6cc4\u9732\u95ee\u9898\u3002\n\n\u901a\u8fc7Python\u6269\u5c55\u6a21\u5757gc \u6765\u67e5\u770b\u4e0d\u80fd\u56de\u6536\u7684\u5bf9\u8c61\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\n\n\u53ef\u4ee5\u901a\u8fc7 sys.getrefcount(obj) \u6765\u83b7\u53d6\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\uff0c\u5e76\u6839\u636e\u8fd4\u56de\u503c\u662f\u5426\u4e3a0\u6765\u5224\u65ad\u662f\u5426\u5185\u5b58\u6cc4\u9732\n\n## \u51fd\u6570\n### 52.python\u5e38\u89c1\u7684\u5217\u8868\u63a8\u5bfc\u5f0f\uff1f\n\n[\u8868\u8fbe\u5f0f for \u53d8\u91cf in \u5217\u8868] \u6216\u8005 [\u8868\u8fbe\u5f0f for \u53d8\u91cf in \u5217\u8868 if  \u6761\u4ef6]\n\n### 53.\u7b80\u8ff0read\u3001readline\u3001readlines\u7684\u533a\u522b\uff1f\n\nread                           \u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\n\nreadline                     \u8bfb\u53d6\u4e0b\u4e00\u884c\n\nreadlines                   \u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\u5230\u4e00\u4e2a\u8fed\u4ee3\u5668\u4ee5\u4f9b\u6211\u4eec\u904d\u5386\n\n### 54.\u4ec0\u4e48\u662fHash\uff08\u6563\u5217\u51fd\u6570\uff09\uff1f\n\n**\u6563\u5217\u51fd\u6570**\uff08\u82f1\u8bed\uff1aHash function\uff09\u53c8\u79f0**\u6563\u5217\u7b97\u6cd5**\u3001**\u54c8\u5e0c\u51fd\u6570**\uff0c\u662f\u4e00\u79cd\u4ece\u4efb\u4f55\u4e00\u79cd\u6570\u636e\u4e2d\u521b\u5efa\u5c0f\u7684\u6570\u5b57\u201c\u6307\u7eb9\u201d\u7684\u65b9\u6cd5\u3002\u6563\u5217\u51fd\u6570\u628a\u6d88\u606f\u6216\u6570\u636e\u538b\u7f29\u6210\u6458\u8981\uff0c\u4f7f\u5f97\u6570\u636e\u91cf\u53d8\u5c0f\uff0c\u5c06\u6570\u636e\u7684\u683c\u5f0f\u56fa\u5b9a\u4e0b\u6765\u3002\u8be5\u51fd\u6570\u5c06\u6570\u636e\u6253\u4e71\u6df7\u5408\uff0c\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u53eb\u505a**\u6563\u5217\u503c**\uff08hash values\uff0chash codes\uff0chash sums\uff0c\u6216hashes\uff09\u7684\u6307\u7eb9\u3002\u6563\u5217\u503c\u901a\u5e38\u7528\u4e00\u4e2a\u77ed\u7684\u968f\u673a\u5b57\u6bcd\u548c\u6570\u5b57\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u6765\u4ee3\u8868\n\n### 55.python\u51fd\u6570\u91cd\u8f7d\u673a\u5236\uff1f\n\n\u51fd\u6570\u91cd\u8f7d\u4e3b\u8981\u662f\u4e3a\u4e86\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\u3002\n1\u3002\u53ef\u53d8\u53c2\u6570\u7c7b\u578b\u3002\n2\u3002\u53ef\u53d8\u53c2\u6570\u4e2a\u6570\u3002\n\n\u53e6\u5916\uff0c\u4e00\u4e2a\u57fa\u672c\u7684\u8bbe\u8ba1\u539f\u5219\u662f\uff0c\u4ec5\u4ec5\u5f53\u4e24\u4e2a\u51fd\u6570\u9664\u4e86\u53c2\u6570\u7c7b\u578b\u548c\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\u4ee5\u5916\uff0c\u5176\u529f\u80fd\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u6b64\u65f6\u624d\u4f7f\u7528\u51fd\u6570\u91cd\u8f7d\uff0c\u5982\u679c\u4e24\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u5176\u5b9e\u4e0d\u540c\uff0c\u90a3\u4e48\u4e0d\u5e94\u5f53\u4f7f\u7528\u91cd\u8f7d\uff0c\u800c\u5e94\u5f53\u4f7f\u7528\u4e00\u4e2a\u540d\u5b57\u4e0d\u540c\u7684\u51fd\u6570\u3002\n\n\u597d\u5427\uff0c\u90a3\u4e48\u5bf9\u4e8e\u60c5\u51b5 1 \uff0c\u51fd\u6570\u529f\u80fd\u76f8\u540c\uff0c\u4f46\u662f\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\uff0cpython \u5982\u4f55\u5904\u7406\uff1f\u7b54\u6848\u662f\u6839\u672c\u4e0d\u9700\u8981\u5904\u7406\uff0c\u56e0\u4e3a python \u53ef\u4ee5\u63a5\u53d7\u4efb\u4f55\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u5982\u679c\u51fd\u6570\u7684\u529f\u80fd\u76f8\u540c\uff0c\u90a3\u4e48\u4e0d\u540c\u7684\u53c2\u6570\u7c7b\u578b\u5728 python \u4e2d\u5f88\u53ef\u80fd\u662f\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u6ca1\u6709\u5fc5\u8981\u505a\u6210\u4e24\u4e2a\u4e0d\u540c\u51fd\u6570\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u60c5\u51b5 2 \uff0c\u51fd\u6570\u529f\u80fd\u76f8\u540c\uff0c\u4f46\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\uff0cpython \u5982\u4f55\u5904\u7406\uff1f\u5927\u5bb6\u77e5\u9053\uff0c\u7b54\u6848\u5c31\u662f\u7f3a\u7701\u53c2\u6570\u3002\u5bf9\u90a3\u4e9b\u7f3a\u5c11\u7684\u53c2\u6570\u8bbe\u5b9a\u4e3a\u7f3a\u7701\u53c2\u6570\u5373\u53ef\u89e3\u51b3\u95ee\u9898\u3002\u56e0\u4e3a\u4f60\u5047\u8bbe\u51fd\u6570\u529f\u80fd\u76f8\u540c\uff0c\u90a3\u4e48\u90a3\u4e9b\u7f3a\u5c11\u7684\u53c2\u6570\u7ec8\u5f52\u662f\u9700\u8981\u7528\u7684\u3002\n\n\u597d\u4e86\uff0c\u9274\u4e8e\u60c5\u51b5 1 \u8ddf \u60c5\u51b5 2 \u90fd\u6709\u4e86\u89e3\u51b3\u65b9\u6848\uff0cpython \u81ea\u7136\u5c31\u4e0d\u9700\u8981\u51fd\u6570\u91cd\u8f7d\u4e86\u3002\n\n### 56.\u5199\u4e00\u4e2a\u51fd\u6570\u627e\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u4e2d\uff0c\u7b2c\u4e8c\u5927\u7684\u6570\n### 57.\u624b\u5199\u4e00\u4e2a\u5224\u65ad\u65f6\u95f4\u7684\u88c5\u9970\u5668\n```python\nimport datetime\n\n\nclass TimeException(Exception):\n    def __init__(self, exception_info):\n        super().__init__()\n        self.info = exception_info\n\n    def __str__(self):\n        return self.info\n\n\ndef timecheck(func):\n    def wrapper(*args, **kwargs):\n        if datetime.datetime.now().year == 2019:\n            func(*args, **kwargs)\n        else:\n            raise TimeException(\"\u51fd\u6570\u5df2\u8fc7\u65f6\")\n\n    return wrapper\n\n\n@timecheck\ndef test(name):\n    print(\"Hello {}, 2019 Happy\".format(name))\n\n\nif __name__ == \"__main__\":\n    test(\"backbp\")\n```\n### 58.\u4f7f\u7528Python\u5185\u7f6e\u7684filter()\u65b9\u6cd5\u6765\u8fc7\u6ee4\uff1f\n```python\nlist(filter(lambda x: x % 2 == 0, range(10)))\n```\n### 59.\u7f16\u5199\u51fd\u6570\u76844\u4e2a\u539f\u5219\n\n1.\u51fd\u6570\u8bbe\u8ba1\u8981\u5c3d\u91cf\u77ed\u5c0f\n\n2.\u51fd\u6570\u58f0\u660e\u8981\u505a\u5230\u5408\u7406\u3001\u7b80\u5355\u3001\u6613\u4e8e\u4f7f\u7528\n\n3.\u51fd\u6570\u53c2\u6570\u8bbe\u8ba1\u5e94\u8be5\u8003\u8651\u5411\u4e0b\u517c\u5bb9\n\n4.\u4e00\u4e2a\u51fd\u6570\u53ea\u505a\u4e00\u4ef6\u4e8b\u60c5\uff0c\u5c3d\u91cf\u4fdd\u8bc1\u51fd\u6570\u8bed\u53e5\u7c92\u5ea6\u7684\u4e00\u81f4\u6027\n\n### 60.\u51fd\u6570\u8c03\u7528\u53c2\u6570\u7684\u4f20\u9012\u65b9\u5f0f\u662f\u503c\u4f20\u9012\u8fd8\u662f\u5f15\u7528\u4f20\u9012\uff1f\n\nPython\u7684\u53c2\u6570\u4f20\u9012\u6709\uff1a\u4f4d\u7f6e\u53c2\u6570\u3001\u9ed8\u8ba4\u53c2\u6570\u3001\u53ef\u53d8\u53c2\u6570\u3001\u5173\u952e\u5b57\u53c2\u6570\u3002\n\n\u51fd\u6570\u7684\u4f20\u503c\u5230\u5e95\u662f\u503c\u4f20\u9012\u8fd8\u662f\u5f15\u7528\u4f20\u9012\u3001\u8981\u5206\u60c5\u51b5\uff1a\n\n\u4e0d\u53ef\u53d8\u53c2\u6570\u7528\u503c\u4f20\u9012\uff1a\u50cf\u6574\u6570\u548c\u5b57\u7b26\u4e32\u8fd9\u6837\u7684\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u662f\u901a\u8fc7\u62f7\u8d1d\u8fdb\u884c\u4f20\u9012\u7684\uff0c\u56e0\u4e3a\u4f60\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u53ef\u80fd\u5728\u539f\u5904\u6539\u53d8\u4e0d\u53ef\u53d8\u5bf9\u8c61\u3002\n\n\u53ef\u53d8\u53c2\u6570\u662f\u5f15\u7528\u4f20\u9012\uff1a\u6bd4\u5982\u50cf\u5217\u8868\uff0c\u5b57\u5178\u8fd9\u6837\u7684\u5bf9\u8c61\u662f\u901a\u8fc7\u5f15\u7528\u4f20\u9012\u3001\u548cC\u8bed\u8a00\u91cc\u9762\u7684\u7528\u6307\u9488\u4f20\u9012\u6570\u7ec4\u5f88\u76f8\u4f3c\uff0c\u53ef\u53d8\u5bf9\u8c61\u80fd\u5728\u51fd\u6570\u5185\u90e8\u6539\u53d8\u3002\n\n### 61.\u5982\u4f55\u5728function\u91cc\u9762\u8bbe\u7f6e\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\n\n```python\nglobals() # \u8fd4\u56de\u5305\u542b\u5f53\u524d\u4f5c\u7528\u4f59\u5168\u5c40\u53d8\u91cf\u7684\u5b57\u5178\u3002\nglobal \u53d8\u91cf \u8bbe\u7f6e\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\n```\n\n### 62.\u5bf9\u7f3a\u7701\u53c2\u6570\u7684\u7406\u89e3 \uff1f\n\n\u7f3a\u7701\u53c2\u6570\u6307\u5728\u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\u6ca1\u6709\u4f20\u5165\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528\u9ed8\u8ba4\u7684\u53c2\u6570\uff0c\u5728\u8c03\u7528\u51fd\u6570\u7684\u540c\u65f6\u8d4b\u503c\u65f6\uff0c\u6240\u4f20\u5165\u7684\u53c2\u6570\u4f1a\u66ff\u4ee3\u9ed8\u8ba4\u53c2\u6570\u3002\n\n*args\u662f\u4e0d\u5b9a\u957f\u53c2\u6570\uff0c\u5b83\u53ef\u4ee5\u8868\u793a\u8f93\u5165\u53c2\u6570\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u53ef\u4ee5\u662f\u4efb\u610f\u591a\u4e2a\u3002\n\n**kwargs\u662f\u5173\u952e\u5b57\u53c2\u6570\uff0c\u8d4b\u503c\u7684\u65f6\u5019\u662f\u4ee5\u952e\u503c\u5bf9\u7684\u65b9\u5f0f\uff0c\u53c2\u6570\u53ef\u4ee5\u662f\u4efb\u610f\u591a\u5bf9\u5728\u5b9a\u4e49\u51fd\u6570\u7684\u65f6\u5019\n\n\u4e0d\u786e\u5b9a\u4f1a\u6709\u591a\u5c11\u53c2\u6570\u4f1a\u4f20\u5165\u65f6\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u53c2\u6570\n\n### 63.Mysql\u600e\u4e48\u9650\u5236IP\u8bbf\u95ee\uff1f\n\n\n\n### 64.\u5e26\u53c2\u6570\u7684\u88c5\u9970\u5668?\n\n\u5e26\u5b9a\u957f\u53c2\u6570\u7684\u88c5\u9970\u5668\n\n```python\ndef new_func(func):\n    def wrappedfun(username, passwd):\n        if username == 'root' and passwd == '123456789':\n            print('\u901a\u8fc7\u8ba4\u8bc1')\n            print('\u5f00\u59cb\u6267\u884c\u9644\u52a0\u529f\u80fd')\n            return func()\n       \telse:\n            print('\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef')\n            return\n    return wrappedfun\n\n@new_func\ndef origin():\n    print('\u5f00\u59cb\u6267\u884c\u51fd\u6570')\norigin('root','123456789')\n```\n\n\u5e26\u4e0d\u5b9a\u957f\u53c2\u6570\u7684\u88c5\u9970\u5668\n\n```python\ndef new_func(func):\n    def wrappedfun(*parts):\n        if parts:\n            counts = len(parts)\n            print('\u672c\u7cfb\u7edf\u5305\u542b ', end='')\n            for part in parts:\n                print(part, ' ',end='')\n            print('\u7b49', counts, '\u90e8\u5206')\n            return func()\n        else:\n            print('\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef')\n            return func()\n   return wrappedfun\n\n```\n\n### 65.\u4e3a\u4ec0\u4e48\u51fd\u6570\u540d\u5b57\u53ef\u4ee5\u5f53\u505a\u53c2\u6570\u7528?\n\nPython\u4e2d\u4e00\u5207\u7686\u5bf9\u8c61\uff0c\u51fd\u6570\u540d\u662f\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u7684\u7a7a\u95f4\uff0c\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\n\n### 66.Python\u4e2dpass\u8bed\u53e5\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f\n\n\u5728\u7f16\u5199\u4ee3\u7801\u65f6\u53ea\u5199\u6846\u67b6\u601d\u8def\uff0c\u5177\u4f53\u5b9e\u73b0\u8fd8\u672a\u7f16\u5199\u5c31\u53ef\u4ee5\u7528pass\u8fdb\u884c\u5360\u4f4d\uff0c\u662f\u7a0b\u5e8f\u4e0d\u62a5\u9519\uff0c\u4e0d\u4f1a\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\n\n### 67.\u6709\u8fd9\u6837\u4e00\u6bb5\u4ee3\u7801\uff0cprint c\u4f1a\u8f93\u51fa\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\uff1f\n\n```python\na = 10\nb = 20\nc = [a]\na = 15\n```\n\n\u7b54\uff1a10\u5bf9\u4e8e\u5b57\u7b26\u4e32\uff0c\u6570\u5b57\uff0c\u4f20\u9012\u662f\u76f8\u5e94\u7684\u503c\n\n\n\n### 68.\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\uff1f\n\n```python\na, b = b, a\n```\n\n\n\n### 69.map\u51fd\u6570\u548creduce\u51fd\u6570\uff1f\n\n```python\nmap(lambda x: x * x, [1, 2, 3, 4])   # \u4f7f\u7528 lambda\n# [1, 4, 9, 16]\nreduce(lambda x, y: x * y, [1, 2, 3, 4])  # \u76f8\u5f53\u4e8e ((1 * 2) * 3) * 4\n# 24\n```\n\n\n\n### 70.\u56de\u8c03\u51fd\u6570\uff0c\u5982\u4f55\u901a\u4fe1\u7684?\n\n\u56de\u8c03\u51fd\u6570\u662f\u628a\u51fd\u6570\u7684\u6307\u9488(\u5730\u5740)\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u6574\u4e2a\u51fd\u6570\u5f53\u4f5c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8d4b\u503c\u7ed9\u8c03\u7528\u7684\u51fd\u6570\u3002\n\n### 71.Python\u4e3b\u8981\u7684\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u90fd\u6709\u54ea\u4e9b\uff1f print dir( \u2018a \u2019) \u7684\u8f93\u51fa\uff1f\n\n\u5185\u5efa\u7c7b\u578b\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u6570\u5b57\uff0c\u5b57\u7b26\u4e32\uff0c\u5217\u8868\uff0c\u5143\u7ec4\uff0c\u5b57\u5178\uff0c\u96c6\u5408\n\n\u8f93\u51fa\u5b57\u7b26\u4e32'a'\u7684\u5185\u5efa\u65b9\u6cd5\n\n### 72.map(lambda x:xx\uff0c[y for y in range(3)])\u7684\u8f93\u51fa\uff1f\n\n```\n[0, 1, 4]\n```\n\n### 73.hasattr() getattr() setattr() \u51fd\u6570\u4f7f\u7528\u8be6\u89e3\uff1f\n\nhasattr(object,name)\u51fd\u6570:\n\n\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u91cc\u9762\u662f\u5426\u6709name\u5c5e\u6027\u6216\u8005name\u65b9\u6cd5\uff0c\u8fd4\u56debool\u503c\uff0c\u6709name\u5c5e\u6027\uff08\u65b9\u6cd5\uff09\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse\u3002\n\n```python\nclass function_demo(object):\n    name = 'demo'\n    def run(self):\n        return \"hello function\"\nfunctiondemo = function_demo()\nres = hasattr(functiondemo, \"name\") # \u5224\u65ad\u5bf9\u8c61\u662f\u5426\u6709name\u5c5e\u6027\uff0cTrue\nres = hasattr(functiondemo, \"run\") # \u5224\u65ad\u5bf9\u8c61\u662f\u5426\u6709run\u65b9\u6cd5\uff0cTrue\nres = hasattr(functiondemo, \"age\") # \u5224\u65ad\u5bf9\u8c61\u662f\u5426\u6709age\u5c5e\u6027\uff0cFalse\nprint(res)\n```\n\ngetattr(object, name[,default])\u51fd\u6570\uff1a\n\n\u83b7\u53d6\u5bf9\u8c61object\u7684\u5c5e\u6027\u6216\u8005\u65b9\u6cd5\uff0c\u5982\u679c\u5b58\u5728\u5219\u6253\u5370\u51fa\u6765\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u6253\u5370\u9ed8\u8ba4\u503c\uff0c\u9ed8\u8ba4\u503c\u53ef\u9009\u3002\u6ce8\u610f\uff1a\u5982\u679c\u8fd4\u56de\u7684\u662f\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u5219\u6253\u5370\u7ed3\u679c\u662f\uff1a\u65b9\u6cd5\u7684\u5185\u5b58\u5730\u5740\uff0c\u5982\u679c\u9700\u8981\u8fd0\u884c\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u540e\u9762\u6dfb\u52a0\u62ec\u53f7().\n\n```python\nfunctiondemo = function_demo()\ngetattr(functiondemo, \"name\")# \u83b7\u53d6name\u5c5e\u6027\uff0c\u5b58\u5728\u5c31\u6253\u5370\u51fa\u6765 --- demo\ngetattr(functiondemo, \"run\") # \u83b7\u53d6run \u65b9\u6cd5\uff0c\u5b58\u5728\u6253\u5370\u51fa\u65b9\u6cd5\u7684\u5185\u5b58\u5730\u5740\ngetattr(functiondemo, \"age\") # \u83b7\u53d6\u4e0d\u5b58\u5728\u7684\u5c5e\u6027\uff0c\u62a5\u9519\ngetattr(functiondemo, \"age\", 18)# \u83b7\u53d6\u4e0d\u5b58\u5728\u7684\u5c5e\u6027\uff0c\u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u503c\n```\n\nsetattr(object, name, values)\u51fd\u6570\uff1a\n\n\u7ed9\u5bf9\u8c61\u7684\u5c5e\u6027\u8d4b\u503c\uff0c\u82e5\u5c5e\u6027\u4e0d\u5b58\u5728\uff0c\u5148\u521b\u5efa\u518d\u8d4b\u503c\n\n```python\nclass function_demo(object):\n    name = \"demo\"\n    def run(self):\n        return \"hello function\"\nfunctiondemo = function_demo()\nres = hasattr(functiondemo, \"age\") # \u5224\u65adage\u5c5e\u6027\u662f\u5426\u5b58\u5728\uff0cFalse\nprint(res)\nsetattr(functiondemo, \"age\", 18) # \u5bf9age\u5c5e\u6027\u8fdb\u884c\u8d4b\u503c\uff0c\u65e0\u8fd4\u56de\u503c\nres1 = hasattr(functiondemo, \"age\") # \u518d\u6b21\u5224\u65ad\u5c5e\u6027\u662f\u5426\u5b58\u5728\uff0cTrue\n```\n\n\u7efc\u5408\u4f7f\u7528\n\n```python\nclass function_demo(object):\n    name = \"demo\"\n    def run(self):\n        return \"hello function\"\nfunctiondemo = function_demo()\nres = hasattr(functiondemo, \"addr\") # \u5148\u5224\u65ad\u662f\u5426\u5b58\u5728\nif res:\n    addr = getattr(functiondemo, \"addr\")\n    print(addr)\nelse:\n    addr = getattr(functiondemo, \"addr\", setattr(functiondemo, \"addr\", \"\u5317\u4eac\u9996\u90fd\"))\n    print(addr)\n```\n\n\n\n### 74.\u4e00\u53e5\u8bdd\u89e3\u51b3\u9636\u4e58\u51fd\u6570\uff1f\n\n```\nreduce(lambda x,y : x*y,range(1,n+1))\n```\n\n\n\n### 75.\u4ec0\u4e48\u662flambda\u51fd\u6570\uff1f \u6709\u4ec0\u4e48\u597d\u5904\uff1f\n\nlambda \u51fd\u6570\u662f\u4e00\u4e2a\u53ef\u4ee5\u63a5\u6536\u4efb\u610f\u591a\u4e2a\u53c2\u6570(\u5305\u62ec\u53ef\u9009\u53c2\u6570)\u5e76\u4e14\u8fd4\u56de\u5355\u4e2a\u8868\u8fbe\u5f0f\u503c\u7684\u51fd\u6570\n\n1.lambda\u51fd\u6570\u6bd4\u8f83\u8f7b\u4fbf\uff0c\u5373\u7528\u5373\u4ecd\uff0c\u5f88\u9002\u5408\u9700\u8981\u5b8c\u6210\u4e00\u9879\u529f\u80fd\uff0c\u4f46\u662f\u6b64\u529f\u80fd\u53ea\u5728\u6b64\u4e00\u5904\u4f7f\u7528\uff0c\u8fde\u540d\u5b57\u90fd\u5f88\u968f\u610f\u7684\u60c5\u51b5\u4e0b\n\n2.\u533f\u540d\u51fd\u6570\uff0c\u4e00\u822c\u7528\u6765\u7ed9filter\uff0cmap\u8fd9\u6837\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u670d\u52a1\n\n3.\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\uff0c\u4f20\u9012\u7ed9\u67d0\u4e9b\u5e94\u7528\uff0c\u6bd4\u5982\u6d88\u606f\u5904\u7406\n\n### 76.\u9012\u5f52\u51fd\u6570\u505c\u6b62\u7684\u6761\u4ef6\uff1f\n\n\u9012\u5f52\u7684\u7ec8\u6b62\u6761\u4ef6\u4e00\u822c\u5b9a\u4e49\u5728\u9012\u5f52\u51fd\u6570\u5185\u90e8\uff0c\u5728\u9012\u5f52\u8c03\u7528\u524d\u8981\u505a\u4e00\u4e2a\u6761\u4ef6\u5224\u65ad\uff0c\u6839\u636e\u5224\u65ad\u7684\u7ed3\u679c\u9009\u62e9\u662f\u7ee7\u7eed\u8c03\u7528\u81ea\u8eab\uff0c\u8fd8\u662freturn\uff0c\uff0c\u8fd4\u56de\u7ec8\u6b62\u9012\u5f52\u3002\n\n\u7ec8\u6b62\u7684\u6761\u4ef6\uff1a\u5224\u65ad\u9012\u5f52\u7684\u6b21\u6570\u662f\u5426\u8fbe\u5230\u67d0\u4e00\u9650\u5b9a\u503c\n\n2.\u5224\u65ad\u8fd0\u7b97\u7684\u7ed3\u679c\u662f\u5426\u8fbe\u5230\u67d0\u4e2a\u8303\u56f4\u7b49\uff0c\u6839\u636e\u8bbe\u8ba1\u7684\u76ee\u7684\u6765\u9009\u62e9\n\n### 77.\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5c06\u662f\u4ec0\u4e48\uff1f\u8bf7\u89e3\u91ca\u3002\n\n```python\ndef multipliers():\n    return [lambda x: i *x for i in range(4)]\n\tprint([m(2) for m in multipliers()])\n\n```\n\n\u4e0a\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u662f[6,6,6,6]\uff0c\u4e0d\u662f\u6211\u4eec\u60f3\u7684[0,2,4,6]\n\n\u4f60\u5982\u4f55\u4fee\u6539\u4e0a\u9762\u7684multipliers\u7684\u5b9a\u4e49\u4ea7\u751f\u60f3\u8981\u7684\u7ed3\u679c\uff1f\n\n\u4e0a\u8ff0\u95ee\u9898\u4ea7\u751f\u7684\u539f\u56e0\u662fpython\u95ed\u5305\u7684\u5ef6\u8fdf\u7ed1\u5b9a\u3002\u8fd9\u610f\u5473\u7740\u5185\u90e8\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u53c2\u6570\u7684\u503c\u5728\u95ed\u5305\u5185\u8fdb\u884c\u67e5\u627e\u3002\u56e0\u6b64\uff0c\u5f53\u4efb\u4f55\u7531multipliers()\u8fd4\u56de\u7684\u51fd\u6570\u88ab\u8c03\u7528\u65f6,i\u7684\u503c\u5c06\u5728\u9644\u8fd1\u7684\u8303\u56f4\u8fdb\u884c\u67e5\u627e\u3002\u90a3\u65f6\uff0c\u4e0d\u7ba1\u8fd4\u56de\u7684\u51fd\u6570\u662f\u5426\u88ab\u8c03\u7528\uff0cfor\u5faa\u73af\u5df2\u7ecf\u5b8c\u6210\uff0ci\u88ab\u8d4b\u4e88\u4e86\u6700\u7ec8\u7684\u503c3.\n\n```python\ndef multipliers():\n    for i in range(4):\n        yield lambda x: i *x\n```\n\n```python\ndef multipliers():\n    return [lambda x,i = i: i*x for i in range(4)]\n\n```\n\n\n\n\n\n### 78.\u4ec0\u4e48\u662flambda\u51fd\u6570\uff1f\u5b83\u6709\u4ec0\u4e48\u597d\u5904\uff1f\u5199\u4e00\u4e2a\u533f\u540d\u51fd\u6570\u6c42\u4e24\u4e2a\u6570\u7684\u548c\n\nlambda\u51fd\u6570\u662f\u533f\u540d\u51fd\u6570\uff0c\u4f7f\u7528lambda\u51fd\u6570\u80fd\u521b\u5efa\u5c0f\u578b\u533f\u540d\u51fd\u6570\uff0c\u8fd9\u79cd\u51fd\u6570\u5f97\u540d\u4e8e\u7701\u7565\u4e86\u7528def\u58f0\u660e\u51fd\u6570\u7684\u6807\u51c6\u6b65\u9aa4\n\n\n##  \u8bbe\u8ba1\u6a21\u5f0f\n### 79.\u5bf9\u8bbe\u8ba1\u6a21\u5f0f\u7684\u7406\u89e3\uff0c\u7b80\u8ff0\u4f60\u4e86\u89e3\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff1f\n\u8bbe\u8ba1\u6a21\u5f0f\u662f\u7ecf\u8fc7\u603b\u7ed3\uff0c\u4f18\u5316\u7684\uff0c\u5bf9\u6211\u4eec\u7ecf\u5e38\u4f1a\u78b0\u5230\u7684\u4e00\u4e9b\u7f16\u7a0b\u95ee\u9898\u7684\u53ef\u91cd\u7528\u89e3\u51b3\u65b9\u6848\u3002\u4e00\u4e2a\u8bbe\u8ba1\u6a21\u5f0f\u5e76\u4e0d\u50cf\u4e00\u4e2a\u7c7b\u6216\u4e00\u4e2a\u5e93\u90a3\u6837\u80fd\u591f\u76f4\u63a5\u4f5c\u7528\u4e8e\u6211\u4eec\u7684\u4ee3\u7801\uff0c\u53cd\u4e4b\uff0c\u8bbe\u8ba1\u6a21\u5f0f\u66f4\u4e3a\u9ad8\u7ea7\uff0c\u5b83\u662f\u4e00\u79cd\u5fc5\u987b\u5728\u7279\u5b9a\u60c5\u5f62\u4e0b\u5b9e\u73b0\u7684\u4e00\u79cd\u65b9\u6cd5\u6a21\u677f\u3002\n\u5e38\u89c1\u7684\u662f\u5de5\u5382\u6a21\u5f0f\u548c\u5355\u4f8b\u6a21\u5f0f\n\n### 80.\u8bf7\u624b\u5199\u4e00\u4e2a\u5355\u4f8b\n```python\n#python2\nclass A(object):\n    __instance = None\n    def __new__(cls,*args,**kwargs):\n        if cls.__instance is None:\n            cls.__instance = objecet.__new__(cls)\n            return cls.__instance\n        else:\n            return cls.__instance\n```\n### 81.\u5355\u4f8b\u6a21\u5f0f\u7684\u5e94\u7528\u573a\u666f\u6709\u90a3\u4e9b\uff1f\n\u5355\u4f8b\u6a21\u5f0f\u5e94\u7528\u7684\u573a\u666f\u4e00\u822c\u53d1\u73b0\u5728\u4ee5\u4e0b\u6761\u4ef6\u4e0b\uff1a\n\u8d44\u6e90\u5171\u4eab\u7684\u60c5\u51b5\u4e0b\uff0c\u907f\u514d\u7531\u4e8e\u8d44\u6e90\u64cd\u4f5c\u65f6\u5bfc\u81f4\u7684\u6027\u80fd\u6216\u635f\u8017\u7b49\uff0c\u5982\u65e5\u5fd7\u6587\u4ef6\uff0c\u5e94\u7528\u914d\u7f6e\u3002\n\u63a7\u5236\u8d44\u6e90\u7684\u60c5\u51b5\u4e0b\uff0c\u65b9\u4fbf\u8d44\u6e90\u4e4b\u95f4\u7684\u4e92\u76f8\u901a\u4fe1\u3002\u5982\u7ebf\u7a0b\u6c60\u7b49\uff0c1,\u7f51\u7ad9\u7684\u8ba1\u6570\u5668 2,\u5e94\u7528\u914d\u7f6e 3.\u591a\u7ebf\u7a0b\u6c60 4\u6570\u636e\u5e93\u914d\u7f6e \u6570\u636e\u5e93\u8fde\u63a5\u6c60 5.\u5e94\u7528\u7a0b\u5e8f\u7684\u65e5\u5fd7\u5e94\u7528...\n### 82.\u7528\u4e00\u884c\u4ee3\u7801\u751f\u6210[1,4,9,16,25,36,49,64,81,100]\n```python\nprint([x*x for x in range(1, 11)])\n```\n### 83.\u5bf9\u88c5\u9970\u5668\u7684\u7406\u89e3\uff0c\u5e76\u5199\u51fa\u4e00\u4e2a\u8ba1\u65f6\u5668\u8bb0\u5f55\u65b9\u6cd5\u6267\u884c\u6027\u80fd\u7684\u88c5\u9970\u5668\uff1f\n\u88c5\u9970\u5668\u672c\u8d28\u4e0a\u662f\u4e00\u4e2acallable object \uff0c\u5b83\u53ef\u4ee5\u8ba9\u5176\u4ed6\u51fd\u6570\u5728\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4ee3\u7801\u53d8\u52a8\u7684\u524d\u63d0\u4e0b\u589e\u52a0\u989d\u5916\u529f\u80fd\uff0c\u88c5\u9970\u5668\u7684\u8fd4\u56de\u503c\u4e5f\u662f\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u3002\n\n```python\nimport time\nfrom functools import wraps\n\ndef timeit(func):\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        start = time.clock()\n        ret = func(*args, **kwargs)\n        end = time.clock()\n        print('used:',end-start)\n        return ret\n    \n    return wrapper\n@timeit\ndef foo():\n    print('in foo()'foo())\n```\n### 84.\u89e3\u91ca\u4ee5\u4e0b\u4ec0\u4e48\u662f\u95ed\u5305\uff1f\n\u5728\u51fd\u6570\u5185\u90e8\u518d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5e76\u4e14\u8fd9\u4e2a\u51fd\u6570\u7528\u5230\u4e86\u5916\u8fb9\u51fd\u6570\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u5c06\u8fd9\u4e2a\u51fd\u6570\u4ee5\u53ca\u7528\u5230\u7684\u4e00\u4e9b\u53d8\u91cf\u79f0\u4e4b\u4e3a\u95ed\u5305\u3002\n\n### 85.\u51fd\u6570\u88c5\u9970\u5668\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f\n\u88c5\u9970\u5668\u672c\u8d28\u4e0a\u662f\u4e00\u4e2acallable object\uff0c\u5b83\u53ef\u4ee5\u5728\u8ba9\u5176\u4ed6\u51fd\u6570\u5728\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4ee3\u7801\u7684\u53d8\u52a8\u7684\u524d\u63d0\u4e0b\u589e\u52a0\u989d\u5916\u7684\u529f\u80fd\u3002\u88c5\u9970\u5668\u7684\u8fd4\u56de\u503c\u4e5f\u662f\u4e00\u4e2a\u51fd\u6570\u7684\u5bf9\u8c61\uff0c\u5b83\u7ecf\u5e38\u7528\u4e8e\u6709\u5207\u9762\u9700\u6c42\u7684\u573a\u666f\u3002\u6bd4\u5982\uff1a\u63d2\u5165\u65e5\u5fd7\uff0c\u6027\u80fd\u6d4b\u8bd5\uff0c\u4e8b\u52a1\u5904\u7406\uff0c\u7f13\u5b58\u3002\u6743\u9650\u7684\u6821\u9a8c\u7b49\u573a\u666f\uff0c\u6709\u4e86\u88c5\u9970\u5668\u5c31\u53ef\u4ee5\u62bd\u79bb\u51fa\u5927\u91cf\u7684\u4e0e\u51fd\u6570\u529f\u80fd\u672c\u8eab\u65e0\u5173\u7684\u96f7\u540c\u4ee3\u7801\u5e76\u53d1\u5e76\u7ee7\u7eed\u4f7f\u7528\u3002\n\u8be6\u7ec6\u53c2\u8003\uff1ahttps://manjusaka.itscoder.com/2018/02/23/something-about-decorator/\n\n### 86.\u751f\u6210\u5668\uff0c\u8fed\u4ee3\u5668\u7684\u533a\u522b\uff1f\n\u8fed\u4ee3\u5668\u662f\u9075\u5faa\u8fed\u4ee3\u534f\u8bae\u7684\u5bf9\u8c61\u3002\u7528\u6237\u53ef\u4ee5\u4f7f\u7528 iter() \u4ee5\u4ece\u4efb\u4f55\u5e8f\u5217\u5f97\u5230\u8fed\u4ee3\u5668\uff08\u5982 list, tuple, dictionary, set \u7b49\uff09\u3002\u53e6\u4e00\u4e2a\u65b9\u6cd5\u5219\u662f\u521b\u5efa\u4e00\u4e2a\u53e6\u4e00\u79cd\u5f62\u5f0f\u7684\u8fed\u4ee3\u5668 \u2014\u2014 generator \u3002\u8981\u83b7\u53d6\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f7f\u7528\u6210\u5458\u51fd\u6570 next()\uff08Python 2\uff09\u6216\u51fd\u6570 next() function \uff08Python 3\uff09 \u3002\u5f53\u6ca1\u6709\u5143\u7d20\u65f6\uff0c\u5219\u5f15\u53d1 StopIteration \u6b64\u4f8b\u5916\u3002\u82e5\u8981\u5b9e\u73b0\u81ea\u5df1\u7684\u8fed\u4ee3\u5668\uff0c\u5219\u53ea\u8981\u5b9e\u73b0 next()\uff08Python 2\uff09\u6216 `__next__`()\uff08 Python 3\uff09\n\n\u751f\u6210\u5668\uff08Generator\uff09\uff0c\u53ea\u662f\u5728\u9700\u8981\u8fd4\u56de\u6570\u636e\u7684\u65f6\u5019\u4f7f\u7528yield\u8bed\u53e5\u3002\u6bcf\u6b21next()\u88ab\u8c03\u7528\u65f6\uff0c\u751f\u6210\u5668\u4f1a\u8fd4\u56de\u5b83\u8131\u79bb\u7684\u4f4d\u7f6e\uff08\u5b83\u8bb0\u5fc6\u8bed\u53e5\u6700\u540e\u4e00\u6b21\u6267\u884c\u7684\u4f4d\u7f6e\u548c\u6240\u6709\u7684\u6570\u636e\u503c\uff09\n\n\n\u533a\u522b\uff1a \u751f\u6210\u5668\u80fd\u505a\u5230\u8fed\u4ee3\u5668\u80fd\u505a\u7684\u6240\u6709\u4e8b\uff0c\u800c\u4e14\u56e0\u4e3a\u81ea\u52a8\u521b\u5efaiter()\u548cnext()\u65b9\u6cd5\uff0c\u751f\u6210\u5668\u663e\u5f97\u7279\u522b\u7b80\u6d01\uff0c\u800c\u4e14\u751f\u6210\u5668\u4e5f\u662f\u9ad8\u6548\u7684\uff0c\u4f7f\u7528\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u53d6\u4ee3\u5217\u8868\u89e3\u6790\u53ef\u4ee5\u540c\u65f6\u8282\u7701\u5185\u5b58\u3002\u9664\u4e86\u521b\u5efa\u548c\u4fdd\u5b58\u7a0b\u5e8f\u72b6\u6001\u7684\u81ea\u52a8\u65b9\u6cd5\uff0c\u5f53\u53d1\u751f\u5668\u7ec8\u7ed3\u65f6\uff0c\u8fd8\u4f1a\u81ea\u52a8\u629b\u51faStopIteration\u5f02\u5e38\u3002\n\n\u5b98\u65b9\u4ecb\u7ecd\uff1ahttps://docs.python.org/3/tutorial/classes.html#iterators\n### 87.X\u662f\u4ec0\u4e48\u7c7b\u578b?\n    X= (i for i in range(10))\n    X\u662f generator\u7c7b\u578b\n### 88.\u8bf7\u7528\u4e00\u884c\u4ee3\u7801 \u5b9e\u73b0\u5c061-N \u7684\u6574\u6570\u5217\u8868\u4ee53\u4e3a\u5355\u4f4d\u5206\u7ec4\n```python\nN =100\nprint ([[x for x in range(1,100)] [i:i+3] for i in range(0,100,3)])\n```\n### 89.Python\u4e2dyield\u7684\u7528\u6cd5?\nyield\u5c31\u662f\u4fdd\u5b58\u5f53\u524d\u7a0b\u5e8f\u6267\u884c\u72b6\u6001\u3002\u4f60\u7528for\u5faa\u73af\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u53d6\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u5019\u5c31\u4f1a\u8ba1\u7b97\u4e00\u6b21\u3002\u7528yield\u7684\u51fd\u6570\u53ebgenerator,\u548citerator\u4e00\u6837\uff0c\u5b83\u7684\u597d\u5904\u662f\u4e0d\u7528\u4e00\u6b21\u8ba1\u7b97\u6240\u6709\u5143\u7d20\uff0c\u800c\u662f\u7528\u4e00\u6b21\u7b97\u4e00\u6b21\uff0c\u53ef\u4ee5\u8282\u7701\u5f88\u591a\u7a7a\u95f4\uff0cgenerator\u6bcf\u6b21\u8ba1\u7b97\u9700\u8981\u4e0a\u4e00\u6b21\u8ba1\u7b97\u7ed3\u679c\uff0c\u6240\u4ee5\u7528yield,\u5426\u5219\u4e00return\uff0c\u4e0a\u6b21\u8ba1\u7b97\u7ed3\u679c\u5c31\u6ca1\u4e86\n## \u9762\u5411\u5bf9\u8c61\n### 90.Python\u4e2d\u7684\u53ef\u53d8\u5bf9\u8c61\u548c\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff1f\n\n\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u6240\u6307\u5411\u7684\u5185\u5b58\u4e2d\u7684\u503c\u4e0d\u80fd\u88ab\u6539\u53d8\u3002\u5f53\u6539\u53d8\u67d0\u4e2a\u53d8\u91cf\u65f6\u5019\uff0c\u7531\u4e8e\u5176\u6240\u6307\u7684\u503c\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u76f8\u5f53\u4e8e\u628a\u539f\u6765\u7684\u503c\u590d\u5236\u4e00\u4efd\u540e\u518d\u6539\u53d8\uff0c\u8fd9\u4f1a\u5f00\u8f9f\u4e00\u4e2a\u65b0\u7684\u5730\u5740\uff0c\u53d8\u91cf\u518d\u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u5730\u5740\u3002\n\n\u53ef\u53d8\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u6240\u6307\u5411\u7684\u5185\u5b58\u4e2d\u7684\u503c\u53ef\u4ee5\u88ab\u6539\u53d8\u3002\u53d8\u91cf\uff08\u51c6\u786e\u7684\u8bf4\u662f\u5f15\u7528\uff09\u6539\u53d8\u540e\uff0c\u5b9e\u9645\u4e0a\u5176\u6240\u6307\u7684\u503c\u76f4\u63a5\u53d1\u751f\u6539\u53d8\uff0c\u5e76\u6ca1\u6709\u53d1\u751f\u590d\u5236\u884c\u4e3a\uff0c\u4e5f\u6ca1\u6709\u5f00\u8f9f\u51fa\u65b0\u7684\u5730\u5740\uff0c\u901a\u4fd7\u70b9\u8bf4\u5c31\u662f\u539f\u5730\u6539\u53d8\u3002\n\nPyhton\u4e2d\uff0c\u6570\u503c\u7c7b\u578b(int \u548cfloat)\uff0c\u5b57\u7b26\u4e32str\u3001\u5143\u7956tuple\u90fd\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\u3002\u800c\u5217\u8868list\u3001\u5b57\u5178dict\u3001\u96c6\u5408set\u662f\u53ef\u53d8\u7c7b\u578b\n\n### 91.Python\u7684\u9b54\u6cd5\u65b9\u6cd5\n\n\u9b54\u6cd5\u65b9\u6cd5\u5c31\u662f\u53ef\u4ee5\u7ed9\u4f60\u7684\u7c7b\u589e\u52a0\u9b54\u529b\u7684\u7279\u6b8a\u65b9\u6cd5\uff0c\u5982\u679c\u4f60\u7684\u5bf9\u8c61\u5b9e\u73b0\uff08\u91cd\u8f7d\uff09\u4e86\u8fd9\u4e9b\u65b9\u6cd5\u4e2d\u7684\u67d0\u4e00\u4e2a\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u4f1a\u5728\u7279\u6b8a\u7684\u60c5\u51b5\u4e0b\u88abPython\u6240\u8c03\u7528\uff0c\u4f60\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u60f3\u8981\u7684\u884c\u4e3a\uff0c\u800c\u8fd9\u4e00\u5207\u90fd\u662f\u81ea\u52a8\u53d1\u751f\u7684\uff0c\u5b83\u4eec\u7ecf\u5e38\u662f\u4e24\u4e2a\u4e0b\u5212\u7ebf\u5305\u56f4\u6765\u547d\u540d\u7684\uff08\u6bd4\u5982`__init___`,`__len__`),Python\u7684\u9b54\u6cd5\u65b9\u6cd5\u662f\u975e\u5e38\u5f3a\u5927\u7684\u6240\u4ee5\u4e86\u89e3\u5176\u4f7f\u7528\u65b9\u6cd5\u4e5f\u53d8\u5f97\u5c24\u4e3a\u91cd\u8981!\n\n`__init__`\u6784\u9020\u5668\uff0c\u5f53\u4e00\u4e2a\u5b9e\u4f8b\u88ab\u521b\u5efa\u7684\u65f6\u5019\u521d\u59cb\u5316\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u5b83\u5e76\u4e0d\u662f\u5b9e\u4f8b\u5316\u8c03\u7528\u7684\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u3002\n\n`__new__`\u624d\u662f\u5b9e\u4f8b\u5316\u5bf9\u8c61\u8c03\u7528\u7684\u7b2c\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5b83\u53ea\u53d6\u4e0bcls\u53c2\u6570\uff0c\u5e76\u628a\u5176\u4ed6\u53c2\u6570\u4f20\u7ed9`__init___`.\n\n`___new__`\u5f88\u5c11\u4f7f\u7528\uff0c\u4f46\u662f\u4e5f\u6709\u5b83\u9002\u5408\u7684\u573a\u666f\uff0c\u5c24\u5176\u662f\u5f53\u7c7b\u7ee7\u627f\u81ea\u4e00\u4e2a\u50cf\u5143\u7956\u6216\u8005\u5b57\u7b26\u4e32\u8fd9\u6837\u4e0d\u7ecf\u5e38\u6539\u53d8\u7684\u7c7b\u578b\u7684\u65f6\u5019\u3002\n\n`__call__`\u8ba9\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u50cf\u51fd\u6570\u4e00\u6837\u88ab\u8c03\u7528\n\n`__getitem__`\u5b9a\u4e49\u83b7\u53d6\u5bb9\u5668\u4e2d\u6307\u5b9a\u5143\u7d20\u7684\u884c\u4e3a\uff0c\u76f8\u5f53\u4e8eself[key]\n\n`__getattr__`\u5b9a\u4e49\u5f53\u7528\u6237\u8bd5\u56fe\u8bbf\u95ee\u4e00\u4e2a\u4e0d\u5b58\u5728\u5c5e\u6027\u7684\u65f6\u5019\u7684\u884c\u4e3a\u3002\n\n`__setattr__`\u5b9a\u4e49\u5f53\u4e00\u4e2a\u5c5e\u6027\u88ab\u8bbe\u7f6e\u7684\u65f6\u5019\u7684\u884c\u4e3a\n\n`__getattribute___`\u5b9a\u4e49\u5f53\u4e00\u4e2a\u5c5e\u6027\u88ab\u8bbf\u95ee\u7684\u65f6\u5019\u7684\u884c\u4e3a\n\n### 92.\u9762\u5411\u5bf9\u8c61\u4e2d\u600e\u4e48\u5b9e\u73b0\u53ea\u8bfb\u5c5e\u6027?\n\n\u5c06\u5bf9\u8c61\u79c1\u6709\u5316\uff0c\u901a\u8fc7\u5171\u6709\u65b9\u6cd5\u63d0\u4f9b\u4e00\u4e2a\u8bfb\u53d6\u6570\u636e\u7684\u63a5\u53e3\n\n```python\nclass person:\n    def __init__(self, x):\n        self.__age = 10\n    def age(self):\n        return self.__age\nt = person(22)\n# t.__age =100\nprint(t.age())\n```\n\n\u6700\u597d\u7684\u65b9\u6cd5\n\n```python\nclass MyCls(object):\n    __weight = 50\n    \n    @property\n    def weight(self):\n        return self.__weight\n   \n```\n\n### 93.\u8c08\u8c08\u4f60\u5bf9\u9762\u5411\u5bf9\u8c61\u7684\u7406\u89e3\uff1f\n\n\u9762\u5411\u5bf9\u8c61\u662f\u76f8\u5f53\u4e8e\u9762\u5411\u8fc7\u7a0b\u800c\u8a00\u7684\uff0c\u9762\u5411\u8fc7\u7a0b\u8bed\u8a00\u662f\u4e00\u79cd\u57fa\u4e8e\u529f\u80fd\u5206\u6790\u7684\uff0c\u4ee5\u7b97\u6cd5\u4e3a\u4e2d\u5fc3\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u800c\u9762\u5411\u5bf9\u8c61\u662f\u4e00\u79cd\u57fa\u4e8e\u7ed3\u6784\u5206\u6790\u7684\uff0c\u4ee5\u6570\u636e\u4e3a\u4e2d\u5fc3\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u601d\u60f3\u3002\u5728\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u4e2d\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u4e1c\u897f\uff0c\u53eb\u505a\u7c7b\u3002\u9762\u5411\u5bf9\u8c61\u6709\u4e09\u5927\u7279\u6027\uff1a\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001\u3002\n\n## \u6b63\u5219\u8868\u8fbe\u5f0f\n### 94.\u8bf7\u5199\u51fa\u4e00\u6bb5\u4ee3\u7801\u7528\u6b63\u5219\u5339\u914d\u51faip\uff1f\n\n### 95.a = \u201cabbbccc\u201d\uff0c\u7528\u6b63\u5219\u5339\u914d\u4e3aabccc,\u4e0d\u7ba1\u6709\u591a\u5c11b\uff0c\u5c31\u51fa\u73b0\u4e00\u6b21\uff1f\n    \u601d\u8def\uff1a\u4e0d\u7ba1\u6709\u591a\u5c11\u4e2ab\u66ff\u6362\u6210\u4e00\u4e2a\n\n    re.sub(r'b+', 'b', a)\n### 96.Python\u5b57\u7b26\u4e32\u67e5\u627e\u548c\u66ff\u6362\uff1f\n    a\u3001str.find()\uff1a\u6b63\u5e8f\u5b57\u7b26\u4e32\u67e5\u627e\u51fd\u6570\n    \u51fd\u6570\u539f\u578b\uff1a\n    str.find(substr [,pos_start [,pos_end ] ] )\n    \u8fd4\u56destr\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684substr\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u7684\u6807\u53f7\uff0c\u5982\u679cstr\u4e2d\u6ca1\u6709substr\u5219\u8fd4\u56de-1\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ece\u5de6\u8fb9\u7b97\u8d77\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684substr\u7684\u9996\u5b57\u6bcd\u6807\u53f7\u3002\n\n    \u53c2\u6570\u8bf4\u660e\uff1a\n    str\uff1a\u4ee3\u8868\u539f\u5b57\u7b26\u4e32\n    substr\uff1a\u4ee3\u8868\u8981\u67e5\u627e\u7684\u5b57\u7b26\u4e32\n    pos_start\uff1a\u4ee3\u8868\u67e5\u627e\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u662f\u4ece\u4e0b\u68070\u5f00\u59cb\u67e5\u627e\n    pos_end\uff1a\u4ee3\u8868\u67e5\u627e\u7684\u7ed3\u675f\u4f4d\u7f6e\n\n    \u4f8b\u5b50\uff1a\n    'aabbcc.find('bb')' # 2\n\n    b\u3001str.index()\uff1a\u6b63\u5e8f\u5b57\u7b26\u4e32\u67e5\u627e\u51fd\u6570\n    index()\u51fd\u6570\u7c7b\u4f3c\u4e8efind()\u51fd\u6570\uff0c\u5728Python\u4e2d\u4e5f\u662f\u5728\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u5b50\u4e32\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u8ddffind()\u4e0d\u540c\u7684\u662f\uff0c\u672a\u627e\u5230\u5219\u629b\u51fa\u5f02\u5e38\u3002\n\n    \u51fd\u6570\u539f\u578b\uff1a\n    str.index(substr [, pos_start, [ pos_end ] ] )\n\n    \u53c2\u6570\u8bf4\u660e\uff1a\n    str\uff1a\u4ee3\u8868\u539f\u5b57\u7b26\u4e32\n    substr\uff1a\u4ee3\u8868\u8981\u67e5\u627e\u7684\u5b57\u7b26\u4e32\n    pos_start\uff1a\u4ee3\u8868\u67e5\u627e\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u662f\u4ece\u4e0b\u68070\u5f00\u59cb\u67e5\u627e\n    pos_end\uff1a\u4ee3\u8868\u67e5\u627e\u7684\u7ed3\u675f\u4f4d\u7f6e\n\n    \u4f8b\u5b50\uff1a\n    'acdd l1 23'.index(' ') # 4\n\n    c\u3001str.rfind()\uff1a\u5012\u5e8f\u5b57\u7b26\u4e32\u67e5\u627e\u51fd\u6570\n\n    \u51fd\u6570\u539f\u578b\uff1a\n    str.rfind( substr [, pos_start [,pos_ end ] ])\n    \u8fd4\u56destr\u4e2d\u6700\u540e\u51fa\u73b0\u7684substr\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u7684\u6807\u53f7\uff0c\u5982\u679cstr\u4e2d\u6ca1\u6709substr\u5219\u8fd4\u56de-1\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ece\u53f3\u8fb9\u7b97\u8d77\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684substr\u7684\u9996\u5b57\u6bcd\u6807\u53f7\u3002\n\n    \u53c2\u6570\u8bf4\u660e\uff1a\n    str\uff1a\u4ee3\u8868\u539f\u5b57\u7b26\u4e32\n    substr\uff1a\u4ee3\u8868\u8981\u67e5\u627e\u7684\u5b57\u7b26\u4e32\n    pos_start\uff1a\u4ee3\u8868\u67e5\u627e\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u662f\u4ece\u4e0b\u68070\u5f00\u59cb\u67e5\u627e\n    pos_end\uff1a\u4ee3\u8868\u67e5\u627e\u7684\u7ed3\u675f\u4f4d\u7f6e\n\n    \u4f8b\u5b50\uff1a\n    'adsfddf'.rfind('d') # 5\n\n    d\u3001str.rindex()\uff1a\u5012\u5e8f\u5b57\u7b26\u4e32\u67e5\u627e\u51fd\u6570\n    rindex()\u51fd\u6570\u7c7b\u4f3c\u4e8erfind()\u51fd\u6570\uff0c\u5728Python\u4e2d\u4e5f\u662f\u5728\u5b57\u7b26\u4e32\u4e2d\u5012\u5e8f\u67e5\u627e\u5b50\u4e32\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u8ddfrfind()\u4e0d\u540c\u7684\u662f\uff0c\u672a\u627e\u5230\u5219\u629b\u51fa\u5f02\u5e38\u3002\n\n    \u51fd\u6570\u539f\u578b\uff1a\n    str.rindex(substr [, pos_start, [ pos_end ] ] )\n\n    \u53c2\u6570\u8bf4\u660e\uff1a\n    str\uff1a\u4ee3\u8868\u539f\u5b57\u7b26\u4e32\n    substr\uff1a\u4ee3\u8868\u8981\u67e5\u627e\u7684\u5b57\u7b26\u4e32\n    pos_start\uff1a\u4ee3\u8868\u67e5\u627e\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u662f\u4ece\u4e0b\u68070\u5f00\u59cb\u67e5\u627e\n    pos_end\uff1a\u4ee3\u8868\u67e5\u627e\u7684\u7ed3\u675f\u4f4d\u7f6e\n\n    \u4f8b\u5b50\uff1a\n     'adsfddf'.rindex('d') # 5\n\n    e\u3001\u4f7f\u7528re\u6a21\u5757\u8fdb\u884c\u67e5\u627e\u548c\u66ff\u6362\uff1a\n\u51fd\u6570 | \u8bf4\u660e\n---|---\nre.match(pat, s) | \u53ea\u4ece\u5b57\u7b26\u4e32s\u7684\u5934\u5f00\u59cb\u5339\u914d\uff0c\u6bd4\u5982(\u2018123\u2019, \u201812345\u2019)\u5339\u914d\u4e0a\u4e86\uff0c\u800c(\u2018123\u2019,\u201901234\u2019)\u5c31\u662f\u6ca1\u6709\u5339\u914d\u4e0a\uff0c\u6ca1\u6709\u5339\u914d\u4e0a\u8fd4\u56deNone\uff0c\u5339\u914d\u4e0a\u8fd4\u56dematchobject\nre.search(pat, s) | \u4ece\u5b57\u7b26\u4e32s\u7684\u4efb\u610f\u4f4d\u7f6e\u90fd\u8fdb\u884c\u5339\u914d\uff0c\u6bd4\u5982(\u2018123\u2019,\u201901234\u2019)\u5c31\u662f\u5339\u914d\u4e0a\u4e86\uff0c\u53ea\u8981s\u53ea\u80fd\u5b58\u5728\u7b26\u5408pat\u7684\u8fde\u7eed\u5b57\u7b26\u4e32\u5c31\u7b97\u5339\u914d\u4e0a\u4e86\uff0c\u6ca1\u6709\u5339\u914d\u4e0a\u8fd4\u56deNone\uff0c\u5339\u914d\u4e0a\u8fd4\u56dematchobject\nre.sub(pat,newpat,s) | re.sub(pat,newpat,s)\t\u5bf9\u5b57\u7b26\u4e32\u4e2ds\u7684\u5305\u542b\u7684\u6240\u6709\u7b26\u5408pat\u7684\u8fde\u7eed\u5b57\u7b26\u4e32\u8fdb\u884c\u66ff\u6362\uff0c\u5982\u679cnewpat\u4e3astr,\u90a3\u4e48\u5c31\u662f\u66ff\u6362\u4e3anewpat,\u5982\u679cnewpat\u662f\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u6309\u7167\u51fd\u6570\u8fd4\u56de\u503c\u66ff\u6362\u3002sub\u51fd\u6570\u4e24\u4e2a\u6709\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u5206\u522b\u662fcount\u8868\u793a\u6700\u591a\u53ea\u5904\u7406\u524d\u51e0\u4e2a\u5339\u914d\u7684\u5b57\u7b26\u4e32\uff0c\u9ed8\u8ba4\u4e3a0\u8868\u793a\u5168\u90e8\u5904\u7406\uff1b\u6700\u540e\u4e00\u4e2a\u662fflags\uff0c\u9ed8\u8ba4\u4e3a0\n\n    f\u3001\u4f7f\u7528replace()\u8fdb\u884c\u66ff\u6362\uff1a\n    \u57fa\u672c\u7528\u6cd5\uff1a\u5bf9\u8c61.replace(rgExp,replaceText,max)\n\n    \u5176\u4e2d\uff0crgExp\u548creplaceText\u662f\u5fc5\u987b\u8981\u6709\u7684\uff0cmax\u662f\u53ef\u9009\u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u4e0d\u52a0\u3002\n    rgExp\u662f\u6307\u6b63\u5219\u8868\u8fbe\u5f0f\u6a21\u5f0f\u6216\u53ef\u7528\u6807\u5fd7\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u662f String \u5bf9\u8c61\u6216\u6587\u5b57\uff1b\n    replaceText\u662f\u4e00\u4e2aString \u5bf9\u8c61\u6216\u5b57\u7b26\u4e32\u6587\u5b57\uff1b\n    max\u662f\u4e00\u4e2a\u6570\u5b57\u3002\n    \u5bf9\u4e8e\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5728\u5bf9\u8c61\u7684\u6bcf\u4e2argExp\u90fd\u66ff\u6362\u6210replaceText\uff0c\u4ece\u5de6\u5230\u53f3\u6700\u591amax\u6b21\u3002\n\n    s1='hello world'\n    s1.replace('world','liming')\n\n### 97.\u7528Python\u5339\u914dHTML tag\u7684\u65f6\u5019\uff0c<.*> \u548c <.*?> \u6709\u4ec0\u4e48\u533a\u522b\n    \u7b2c\u4e00\u4e2a\u4ee3\u8868\u8d2a\u5fc3\u5339\u914d\uff0c\u7b2c\u4e8c\u4e2a\u4ee3\u8868\u975e\u8d2a\u5fc3\uff1b\n    ?\u5728\u4e00\u822c\u6b63\u5219\u8868\u8fbe\u5f0f\u91cc\u7684\u8bed\u6cd5\u662f\u6307\u7684\"\u96f6\u6b21\u6216\u4e00\u6b21\u5339\u914d\u5de6\u8fb9\u7684\u5b57\u7b26\u6216\u8868\u8fbe\u5f0f\"\u76f8\u5f53\u4e8e{0,1}\n    \u800c\u5f53?\u540e\u7f00\u4e8e*,+,?,{n},{n,},{n,m}\u4e4b\u540e\uff0c\u5219\u4ee3\u8868\u975e\u8d2a\u5fc3\u5339\u914d\u6a21\u5f0f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c3d\u53ef\u80fd\u5c11\u7684\u5339\u914d\u5de6\u8fb9\u7684\u5b57\u7b26\u6216\u8868\u8fbe\u5f0f\uff0c\u8fd9\u91cc\u662f\u5c3d\u53ef\u80fd\u5c11\u7684\u5339\u914d.(\u4efb\u610f\u5b57\u7b26)\n\n    \u6240\u4ee5\uff1a\u7b2c\u4e00\u79cd\u5199\u6cd5\u662f\uff0c\u5c3d\u53ef\u80fd\u591a\u7684\u5339\u914d\uff0c\u5c31\u662f\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32\u5c3d\u91cf\u957f\uff0c\u7b2c\u4e8c\u4e2d\u5199\u6cd5\u662f\u5c3d\u53ef\u80fd\u5c11\u7684\u5339\u914d\uff0c\u5c31\u662f\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32\u5c3d\u91cf\u77ed\u3002\n    \u6bd4\u5982<tag>tag>tag>end\uff0c\u7b2c\u4e00\u4e2a\u4f1a\u5339\u914d<tag>tag>tag>,\u7b2c\u4e8c\u4e2a\u4f1a\u5339\u914d<tag>\u3002\n### 98.\u6b63\u5219\u8868\u8fbe\u5f0f\u8d2a\u5a6a\u4e0e\u975e\u8d2a\u5a6a\u6a21\u5f0f\u7684\u533a\u522b\uff1f\n    \u8d2a\u5a6a\u6a21\u5f0f\uff1a\n    \u5b9a\u4e49\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\u53bb\u5339\u914d\u65f6\uff0c\u4f1a\u5c3d\u91cf\u591a\u7684\u5339\u914d\u7b26\u5408\u6761\u4ef6\u7684\u5185\u5bb9\n    \u6807\u8bc6\u7b26\uff1a+\uff0c?\uff0c*\uff0c{n}\uff0c{n,}\uff0c{n,m}\n    \u5339\u914d\u65f6\uff0c\u5982\u679c\u9047\u5230\u4e0a\u8ff0\u6807\u8bc6\u7b26\uff0c\u4ee3\u8868\u662f\u8d2a\u5a6a\u5339\u914d\uff0c\u4f1a\u5c3d\u53ef\u80fd\u591a\u7684\u53bb\u5339\u914d\u5185\u5bb9\n\n    \u975e\u8d2a\u5a6a\u6a21\u5f0f\uff1a\n    \u5b9a\u4e49\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\u53bb\u5339\u914d\u65f6\uff0c\u4f1a\u5c3d\u91cf\u5c11\u7684\u5339\u914d\u7b26\u5408\u6761\u4ef6\u7684\u5185\u5bb9 \u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u65e6\u53d1\u73b0\u5339\u914d\u7b26\u5408\u8981\u6c42\uff0c\u7acb\u9a6c\u5c31\u5339\u914d\u6210\u529f\uff0c\u800c\u4e0d\u4f1a\u7ee7\u7eed\u5339\u914d\u4e0b\u53bb(\u9664\u975e\u6709g\uff0c\u5f00\u542f\u4e0b\u4e00\u7ec4\u5339\u914d)\n    \u6807\u8bc6\u7b26\uff1a+?\uff0c??\uff0c*?\uff0c{n}?\uff0c{n,}?\uff0c{n,m}?\n    \u53ef\u4ee5\u770b\u5230\uff0c\u975e\u8d2a\u5a6a\u6a21\u5f0f\u7684\u6807\u8bc6\u7b26\u5f88\u6709\u89c4\u5f8b\uff0c\u5c31\u662f\u8d2a\u5a6a\u6a21\u5f0f\u7684\u6807\u8bc6\u7b26\u540e\u9762\u52a0\u4e0a\u4e00\u4e2a?\n\n    \u53c2\u8003\u6587\u7ae0\uff1ahttps://dailc.github.io/2017/07/06/regularExpressionGreedyAndLazy.html\n\n### 99.\u5199\u51fa\u5f00\u5934\u5339\u914d\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf\uff0c\u672b\u5c3e\u662f\u6570\u5b57\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff1f\n    s1='_aai0efe00'\n    res=re.findall('^[a-zA-Z_]?[a-zA-Z0-9_]{1,}\\d$',s1)\n    print(res)\n\n### 100.\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\n### 101.\u8bf7\u5339\u914d\u51fa\u53d8\u91cfA \u4e2d\u7684json\u5b57\u7b26\u4e32\u3002\n### 102.\u600e\u4e48\u8fc7\u6ee4\u8bc4\u8bba\u4e2d\u7684\u8868\u60c5\uff1f\n    \u601d\u8def\uff1a\u4e3b\u8981\u662f\u5339\u914d\u8868\u60c5\u5305\u7684\u8303\u56f4\uff0c\u5c06\u8868\u60c5\u5305\u7684\u8303\u56f4\u7528\u7a7a\u66ff\u6362\u6389\n```\nimport re\npattern = re.compile(u'[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]')\npattern.sub('',text)\n\n```\n### 103.\u7b80\u8ff0Python\u91cc\u9762search\u548cmatch\u7684\u533a\u522b\n    match()\u51fd\u6570\u53ea\u68c0\u6d4b\u5b57\u7b26\u4e32\u5f00\u5934\u4f4d\u7f6e\u662f\u5426\u5339\u914d\uff0c\u5339\u914d\u6210\u529f\u624d\u4f1a\u8fd4\u56de\u7ed3\u679c\uff0c\u5426\u5219\u8fd4\u56deNone\uff1b\n    search()\u51fd\u6570\u4f1a\u5728\u6574\u4e2a\u5b57\u7b26\u4e32\u5185\u67e5\u627e\u6a21\u5f0f\u5339\u914d,\u53ea\u5230\u627e\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u5339\u914d\u4fe1\u606f\u7684\u5bf9\u8c61,\u8be5\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528group()\u65b9\u6cd5\u5f97\u5230\u5339\u914d\u7684\u5b57\u7b26\u4e32,\u5982\u679c\u5b57\u7b26\u4e32\u6ca1\u6709\u5339\u914d\uff0c\u5219\u8fd4\u56deNone\u3002\n\n### 104.\u8bf7\u5199\u51fa\u5339\u914dip\u7684Python\u6b63\u5219\u8868\u8fbe\u5f0f\n### 105.Python\u91ccmatch\u4e0esearch\u7684\u533a\u522b\uff1f\n    \u89c1103\u9898\n\n## \u7cfb\u7edf\u7f16\u7a0b\n### 106.\u8fdb\u7a0b\u603b\u7ed3\n\u8fdb\u7a0b\uff1a\u7a0b\u5e8f\u8fd0\u884c\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5c31\u79f0\u4e4b\u4e3a\u8fdb\u7a0b\u3002\u8fdb\u7a0b\u9700\u8981\u76f8\u5e94\u7684\u7cfb\u7edf\u8d44\u6e90\uff1a\u5185\u5b58\u3001\u65f6\u95f4\u7247\u3001pid\u3002\n\u521b\u5efa\u8fdb\u7a0b\uff1a\n\u9996\u5148\u8981\u5bfc\u5165multiprocessing\u4e2d\u7684Process\uff1a\n\u521b\u5efa\u4e00\u4e2aProcess\u5bf9\u8c61;\n\u521b\u5efaProcess\u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u4f20\u9012\u53c2\u6570;\n```python\np = Process(target=XXX,args=(tuple,),kwargs={key:value})\ntarget = XXX \u6307\u5b9a\u7684\u4efb\u52a1\u51fd\u6570\uff0c\u4e0d\u7528\u52a0(),\nargs=(tuple,)kwargs={key:value}\u7ed9\u4efb\u52a1\u51fd\u6570\u4f20\u9012\u7684\u53c2\u6570\n```\n\u4f7f\u7528start()\u542f\u52a8\u8fdb\u7a0b\n\u7ed3\u675f\u8fdb\u7a0b\n\u7ed9\u5b50\u8fdb\u7a0b\u6307\u5b9a\u51fd\u6570\u4f20\u9012\u53c2\u6570Demo\n```python\nimport os\nfrom mulitprocessing import Process\nimport time\n\ndef pro_func(name,age,**kwargs):\n    for i in range(5):\n        print(\"\u5b50\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\u4e2d\uff0cname=%s,age=%d,pid=%d\"%(name,age,os.getpid()))\n        print(kwargs)\n        time.sleep(0.2)\nif __name__ ==\"__main__\":\n    #\u521b\u5efaProcess\u5bf9\u8c61\n    p = Process(target=pro_func,args=('\u5c0f\u660e',18),kwargs={'m':20})\n    #\u542f\u52a8\u8fdb\u7a0b\n    p.start()\n    time.sleep(1)\n    #1\u79d2\u949f\u4e4b\u540e\uff0c\u7acb\u523b\u7ed3\u675f\u5b50\u8fdb\u7a0b\n    p.terminate()\n    p.join()\n```\n\u6ce8\u610f\uff1a\u8fdb\u7a0b\u95f4\u4e0d\u5171\u4eab\u5168\u5c40\u53d8\u91cf\n\n\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1-Queue\n\n\u5728\u521d\u59cb\u5316Queue()\u5bf9\u8c61\u65f6\uff08\u4f8b\u5982q=Queue(),\u82e5\u5728\u62ec\u53f7\u4e2d\u6ca1\u6709\u6307\u5b9a\u6700\u5927\u53ef\u63a5\u53d7\u7684\u6d88\u606f\u6570\u91cf\uff0c\u83b7\u6570\u91cf\u4e3a\u8d1f\u503c\u65f6\uff0c\u90a3\u4e48\u5c31\u4ee3\u8868\u53ef\u63a5\u53d7\u7684\u6d88\u606f\u6570\u91cf\u6ca1\u6709\u4e0a\u9650\u4e00\u76f4\u5230\u5185\u5b58\u5c3d\u5934\uff09\n\nQueue.qsize():\u8fd4\u56de\u5f53\u524d\u961f\u5217\u5305\u542b\u7684\u6d88\u606f\u6570\u91cf\n\nQueue.empty():\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u8fd4\u56deTrue\uff0c\u53cd\u4e4bFalse\n\nQueue.full():\u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u8fd4\u56deTrue,\u53cd\u4e4bFalse\n\nQueue.get([block[,timeout]]):\u83b7\u53d6\u961f\u5217\u4e2d\u7684\u4e00\u6761\u6d88\u606f\uff0c\u7136\u540e\u5c06\u5176\u4ece\u961f\u5217\u4e2d\u79fb\u9664\uff0c\n\nblock\u9ed8\u8ba4\u503c\u4e3aTrue\u3002\n\n\u5982\u679cblock\u4f7f\u7528\u9ed8\u8ba4\u503c\uff0c\u4e14\u6ca1\u6709\u8bbe\u7f6etimeout\uff08\u5355\u4f4d\u79d2),\u6d88\u606f\u961f\u5217\u5982\u679c\u4e3a\u7a7a\uff0c\u6b64\u65f6\u7a0b\u5e8f\u5c06\u88ab\u963b\u585e\uff08\u505c\u5728\u8bfb\u4e2d\u72b6\u6001\uff09\uff0c\u76f4\u5230\u6d88\u606f\u961f\u5217\u8bfb\u5230\u6d88\u606f\u4e3a\u6b62\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86timeout\uff0c\u5219\u4f1a\u7b49\u5f85timeout\u79d2\uff0c\u82e5\u8fd8\u6ca1\u8bfb\u53d6\u5230\u4efb\u4f55\u6d88\u606f\uff0c\u5219\u629b\u51fa\u201cQueue.Empty\"\u5f02\u5e38\uff1a\n\nQueue.get_nowait()\u76f8\u5f53\u4e8eQueue.get(False)\n\nQueue.put(item,[block[,timeout]]):\u5c06item\u6d88\u606f\u5199\u5165\u961f\u5217\uff0cblock\u9ed8\u8ba4\u503c\u4e3aTrue;\n\u5982\u679cblock\u4f7f\u7528\u9ed8\u8ba4\u503c\uff0c\u4e14\u6ca1\u6709\u8bbe\u7f6etimeout\uff08\u5355\u4f4d\u79d2\uff09\uff0c\u6d88\u606f\u961f\u5217\u5982\u679c\u5df2\u7ecf\u6ca1\u6709\u7a7a\u95f4\u53ef\u5199\u5165\uff0c\u6b64\u65f6\u7a0b\u5e8f\u5c06\u88ab\u963b\u585e\uff08\u505c\u5728\u5199\u5165\u72b6\u6001\uff09\uff0c\u76f4\u5230\u4ece\u6d88\u606f\u961f\u5217\u817e\u51fa\u7a7a\u95f4\u4e3a\u6b62\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86timeout\uff0c\u5219\u4f1a\u7b49\u5f85timeout\u79d2\uff0c\u82e5\u8fd8\u6ca1\u7a7a\u95f4\uff0c\u5219\u629b\u51fa\u201dQueue.Full\"\u5f02\u5e38\n\u5982\u679cblock\u503c\u4e3aFalse\uff0c\u6d88\u606f\u961f\u5217\u5982\u679c\u6ca1\u6709\u7a7a\u95f4\u53ef\u5199\u5165\uff0c\u5219\u4f1a\u7acb\u523b\u629b\u51fa\"Queue.Full\"\u5f02\u5e38;\nQueue.put_nowait(item):\u76f8\u5f53Queue.put(item,False)\n\n\u8fdb\u7a0b\u95f4\u901a\u4fe1Demo:\n```python\nfrom multiprocessing import Process.Queue\nimport os,time,random\n#\u5199\u6570\u636e\u8fdb\u7a0b\u6267\u884c\u7684\u4ee3\u7801\uff1a\ndef write(q):\n    for value in ['A','B','C']:\n        print(\"Put %s to queue...\",%value)\n        q.put(value)\n        time.sleep(random.random())\n#\u8bfb\u6570\u636e\u8fdb\u7a0b\u6267\u884c\u7684\u4ee3\u7801\ndef read(q):\n    while True:\n        if not q.empty():\n            value = q.get(True)\n            print(\"Get %s from queue.\",%value)\n            time.sleep(random.random())\n        else:\n            break\nif __name__=='__main__':\n    #\u7236\u8fdb\u7a0b\u521b\u5efaQueue\uff0c\u5e76\u4f20\u7ed9\u5404\u4e2a\u5b50\u8fdb\u7a0b\n    q = Queue()\n    pw = Process(target=write,args=(q,))\n    pr = Process(target=read,args=(q,))\n    #\u542f\u52a8\u5b50\u8fdb\u7a0bpw \uff0c\u5199\u5165\uff1a\n    pw.start()\n    #\u7b49\u5f85pw\u7ed3\u675f\n    pw.join()\n    #\u542f\u52a8\u5b50\u8fdb\u7a0bpr\uff0c\u8bfb\u53d6\uff1a\n    pr.start()\n    pr.join()\n    #pr \u8fdb\u7a0b\u91cc\u662f\u6b7b\u5faa\u73af\uff0c\u65e0\u6cd5\u7b49\u5f85\u5176\u7ed3\u675f\uff0c\u53ea\u80fd\u5f3a\u884c\u7ec8\u6b62:\n    print('')\n    print('\u6240\u6709\u6570\u636e\u90fd\u5199\u5165\u5e76\u4e14\u8bfb\u5b8c')\n```\n    \u8fdb\u7a0b\u6c60Pool\n```python\n#coding:utf-8\nfrom multiprocessing import Pool\nimport os,time,random\n\ndef worker(msg):\n    t_start = time.time()\n    print(\"%s \u5f00\u59cb\u6267\u884c\uff0c\u8fdb\u7a0b\u53f7\u4e3a%d\"%(msg,os.getpid()))\n    # random.random()\u968f\u673a\u751f\u62100-1\u4e4b\u95f4\u7684\u6d6e\u70b9\u6570\n    time.sleep(random.random()*2)\n    t_stop = time.time()\n    print(msg,\"\u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6%0.2f\u201d%\uff08t_stop-t_start))\n\npo = Pool(3)#\u5b9a\u4e49\u4e00\u4e2a\u8fdb\u7a0b\u6c60\uff0c\u6700\u5927\u8fdb\u7a0b\u65703\nfor i in range(0,10):\n    po.apply_async(worker,(i,))\nprint(\"---start----\")\npo.close()\npo.join()\nprint(\"----end----\")\n```\n\u8fdb\u7a0b\u6c60\u4e2d\u4f7f\u7528Queue\n\n\u5982\u679c\u8981\u4f7f\u7528Pool\u521b\u5efa\u8fdb\u7a0b\uff0c\u5c31\u9700\u8981\u4f7f\u7528multiprocessing.Manager()\u4e2d\u7684Queue(),\u800c\u4e0d\u662fmultiprocessing.Queue(),\u5426\u5219\u4f1a\u5f97\u5230\u5982\u4e0b\u7684\u9519\u8bef\u4fe1\u606f\uff1a\n\nRuntimeError\uff1a Queue objects should only be shared between processs through inheritance\n```python\nfrom multiprocessing import Manager,Pool\nimport os,time,random\ndef reader(q):\n    print(\"reader \u542f\u52a8(%s),\u7236\u8fdb\u7a0b\u4e3a\uff08%s)\"%(os.getpid(),os.getpid()))\n    for i in range(q.qsize()):\n        print(\"reader \u4eceQueue\u83b7\u53d6\u5230\u6d88\u606f:%s\"%q.get(True))\n\ndef writer(q):\n    print(\"writer \u542f\u52a8\uff08%s),\u7236\u8fdb\u7a0b\u4e3a(%s)\"%(os.getpid(),os.getpid()))\n    for i ini \"itcast\":\n        q.put(i)\nif __name__ == \"__main__\":\n    print(\"(%s)start\"%os.getpid())\n    q = Manager().Queue()#\u4f7f\u7528Manager\u4e2d\u7684Queue\n    po = Pool()\n    po.apply_async(wrtier,(q,))\n    time.sleep(1)\n    po.apply_async(reader,(q,))\n    po.close()\n    po.join()\n    print(\"(%s)End\"%os.getpid())\n```\n### 107.\u8c08\u8c08\u4f60\u5bf9\u591a\u8fdb\u7a0b\uff0c\u591a\u7ebf\u7a0b\uff0c\u4ee5\u53ca\u534f\u7a0b\u7684\u7406\u89e3\uff0c\u9879\u76ee\u662f\u5426\u7528\uff1f\n\u8fd9\u4e2a\u95ee\u9898\u88ab\u95ee\u7684\u6982\u5ff5\u76f8\u5f53\u4e4b\u5927\uff0c\n\u8fdb\u7a0b\uff1a\u4e00\u4e2a\u8fd0\u884c\u7684\u7a0b\u5e8f\uff08\u4ee3\u7801\uff09\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u6ca1\u6709\u8fd0\u884c\u7684\u4ee3\u7801\u53eb\u7a0b\u5e8f\uff0c\u8fdb\u7a0b\u662f\u7cfb\u7edf\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u8fdb\u7a0b\u62e5\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u6240\u6709\u8fdb\u7a0b\u95f4\u6570\u636e\u4e0d\u5171\u4eab\uff0c\u5f00\u9500\u5927\u3002\n\n\u7ebf\u7a0b: cpu\u8c03\u5ea6\u6267\u884c\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u4e5f\u53eb\u6267\u884c\u8def\u5f84\uff0c\u4e0d\u80fd\u72ec\u7acb\u5b58\u5728\uff0c\u4f9d\u8d56\u8fdb\u7a0b\u5b58\u5728\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u81f3\u5c11\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u53eb\u4e3b\u7ebf\u7a0b\uff0c\u800c\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u5185\u5b58\uff08\u6570\u636e\u5171\u4eab\uff0c\u5171\u4eab\u5168\u5c40\u53d8\u91cf),\u4ece\u800c\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\u3002\n\n\u534f\u7a0b: \u662f\u4e00\u79cd\u7528\u6237\u6001\u7684\u8f7b\u91cf\u7ea7\u7ebf\u7a0b\uff0c\u534f\u7a0b\u7684\u8c03\u5ea6\u5b8c\u5168\u7531\u7528\u6237\u63a7\u5236\u3002\u534f\u7a0b\u62e5\u6709\u81ea\u5df1\u7684\u5bc4\u5b58\u5668\u4e0a\u4e0b\u6587\u548c\u6808\u3002\u534f\u7a0b\u8c03\u5ea6\u65f6\uff0c\u5c06\u5bc4\u5b58\u5668\u4e0a\u4e0b\u6587\u548c\u6808\u4fdd\u5b58\u5230\u5176\u4ed6\u5730\u65b9\uff0c\u5728\u5207\u56de\u6765\u7684\u65f6\u5019\uff0c\u6062\u590d\u5148\u524d\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668\u4e0a\u4e0b\u6587\u548c\u6808\uff0c\u76f4\u63a5\u64cd\u4e2d\u6808\u5219\u57fa\u672c\u6ca1\u6709\u5185\u6838\u5207\u6362\u7684\u5f00\u9500\uff0c\u53ef\u4ee5\u4e0d\u52a0\u9501\u7684\u8bbf\u95ee\u5168\u5c40\u53d8\u91cf\uff0c\u6240\u4ee5\u4e0a\u4e0b\u6587\u7684\u5207\u6362\u975e\u5e38\u5feb\u3002\n\n### 108.Python\u5f02\u5e38\u4f7f\u7528\u573a\u666f\u6709\u90a3\u4e9b\uff1f\n\u5f02\u6b65\u7684\u4f7f\u7528\u573a\u666f:\n\n1\u3001 \u4e0d\u6d89\u53ca\u5171\u4eab\u8d44\u6e90\uff0c\u83b7\u5bf9\u5171\u4eab\u8d44\u6e90\u53ea\u8bfb\uff0c\u5373\u975e\u4e92\u65a5\u64cd\u4f5c\n\n2\u3001 \u6ca1\u6709\u65f6\u5e8f\u4e0a\u7684\u4e25\u683c\u5173\u7cfb\n\n3\u3001 \u4e0d\u9700\u8981\u539f\u5b50\u64cd\u4f5c\uff0c\u6216\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u63a7\u5236\u539f\u5b50\u6027\n\n4\u3001 \u5e38\u7528\u4e8eIO\u64cd\u4f5c\u7b49\u8017\u65f6\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6bd4\u8f83\u5f71\u54cd\u5ba2\u6237\u4f53\u9a8c\u548c\u4f7f\u7528\u6027\u80fd\n\n5\u3001 \u4e0d\u5f71\u54cd\u4e3b\u7ebf\u7a0b\u903b\u8f91\n\n### 109.\u591a\u7ebf\u7a0b\u5171\u540c\u64cd\u4f5c\u540c\u4e00\u4e2a\u6570\u636e\u4e92\u65a5\u9501\u540c\u6b65\uff1f\n```python\nimport threading\nimport time\nclass MyThread(threading.Thread):\n    def run(self):\n        global num\n        time.sleep(1)\n    \n        if mutex.acquire(1):\n            num +=1\n            msg = self.name + 'set num to ' +str(num)\n            print msg\n            mutex.release()\nnum = 0\nmutex = threading.Lock()\ndef test():\n    for i in range(5):\n        t = MyThread()\n        t.start()\nif __name__==\"__main__\":\n    test()\n```\n### 110.\u4ec0\u4e48\u662f\u591a\u7ebf\u7a0b\u7ade\u4e89\uff1f\n\u7ebf\u7a0b\u662f\u975e\u72ec\u7acb\u7684\uff0c\u540c\u4e00\u4e2a\u8fdb\u7a0b\u91cc\u7ebf\u7a0b\u662f\u6570\u636e\u5171\u4eab\u7684\uff0c\u5f53\u5404\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u6570\u636e\u8d44\u6e90\u65f6\u4f1a\u51fa\u73b0\u7ade\u4e89\u72b6\u6001\u5373\uff1a\u6570\u636e\u51e0\u4e4e\u540c\u6b65\u4f1a\u88ab\u591a\u4e2a\u7ebf\u7a0b\u5360\u7528\uff0c\u9020\u6210\u6570\u636e\u6df7\u4e71\uff0c\u5373\u6240\u8c13\u7684\u7ebf\u7a0b\u4e0d\u5b89\u5168\n\n\u90a3\u4e48\u600e\u4e48\u89e3\u51b3\u591a\u7ebf\u7a0b\u7ade\u4e89\u95ee\u9898\uff1f---\u9501\n\n\u9501\u7684\u597d\u5904\uff1a \u786e\u4fdd\u4e86\u67d0\u6bb5\u5173\u952e\u4ee3\u7801\uff08\u5171\u4eab\u6570\u636e\u8d44\u6e90\uff09\u53ea\u80fd\u7531\u4e00\u4e2a\u7ebf\u7a0b\u4ece\u5934\u5230\u5c3e\u5b8c\u6574\u5730\u6267\u884c\u80fd\u89e3\u51b3\u591a\u7ebf\u7a0b\u8d44\u6e90\u7ade\u4e89\u4e0b\u7684\u539f\u5b50\u64cd\u4f5c\u95ee\u9898\u3002\n\n\u9501\u7684\u574f\u5904\uff1a \u963b\u6b62\u4e86\u591a\u7ebf\u7a0b\u5e76\u53d1\u6267\u884c\uff0c\u5305\u542b\u9501\u7684\u67d0\u6bb5\u4ee3\u7801\u5b9e\u9645\u4e0a\u53ea\u80fd\u4ee5\u5355\u7ebf\u7a0b\u6a21\u5f0f\u6267\u884c\uff0c\u6548\u7387\u5c31\u5927\u5927\u5730\u4e0b\u964d\u4e86\n\n\u9501\u7684\u81f4\u547d\u95ee\u9898: \u6b7b\u9501\n### 111.\u8bf7\u4ecb\u7ecd\u4e00\u4e0bPython\u7684\u7ebf\u7a0b\u540c\u6b65\uff1f\n \u4e00\u3001 setDaemon(False)\n\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u542f\u52a8\u4e4b\u540e\uff0c\u4f1a\u9ed8\u8ba4\u4ea7\u751f\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\uff0c\u56e0\u4e3a\u7ebf\u7a0b\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u5f53\u8bbe\u7f6e\u591a\u7ebf\u7a0b\u65f6\uff0c\u4e3b\u7ebf\u7a0b\u4f1a\u521b\u5efa\u591a\u4e2a\u5b50\u7ebf\u7a0b\uff0c\u5728Python\u4e2d\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5c31\u662fsetDaemon(False),\u4e3b\u7ebf\u7a0b\u6267\u884c\u5b8c\u81ea\u5df1\u7684\u4efb\u52a1\u4ee5\u540e\uff0c\u5c31\u9000\u51fa\u4e86\uff0c\u6b64\u65f6\u5b50\u7ebf\u7a0b\u4f1a\u7ee7\u7eed\u6267\u884c\u81ea\u5df1\u7684\u4efb\u52a1\uff0c\u76f4\u5230\u81ea\u5df1\u7684\u4efb\u52a1\u7ed3\u675f\u3002\n\n\u4f8b\u5b50\n```python\nimport threading \nimport time\n\ndef thread():\n    time.sleep(2)\n    print('---\u5b50\u7ebf\u7a0b\u7ed3\u675f---')\n\ndef main():\n    t1 = threading.Thread(target=thread)\n    t1.start()\n    print('---\u4e3b\u7ebf\u7a0b--\u7ed3\u675f')\n\nif __name__ =='__main__':\n    main()\n#\u6267\u884c\u7ed3\u679c\n---\u4e3b\u7ebf\u7a0b--\u7ed3\u675f\n---\u5b50\u7ebf\u7a0b\u7ed3\u675f---\n```\n\u4e8c\u3001 setDaemon\uff08True)\n\u5f53\u6211\u4eec\u4f7f\u7528setDaemon(True)\u65f6\uff0c\u8fd9\u662f\u5b50\u7ebf\u7a0b\u4e3a\u5b88\u62a4\u7ebf\u7a0b\uff0c\u4e3b\u7ebf\u7a0b\u4e00\u65e6\u6267\u884c\u7ed3\u675f\uff0c\u5219\u5168\u90e8\u5b50\u7ebf\u7a0b\u88ab\u5f3a\u5236\u7ec8\u6b62\n\n\u4f8b\u5b50\n```python\nimport threading\nimport time\ndef thread():\n    time.sleep(2)\n    print(\u2019---\u5b50\u7ebf\u7a0b\u7ed3\u675f---')\ndef main():\n    t1 = threading.Thread(target=thread)\n    t1.setDaemon(True)#\u8bbe\u7f6e\u5b50\u7ebf\u7a0b\u5b88\u62a4\u4e3b\u7ebf\u7a0b\n    t1.start()\n    print('---\u4e3b\u7ebf\u7a0b\u7ed3\u675f---')\n\nif __name__ =='__main__':\n    main()\n#\u6267\u884c\u7ed3\u679c\n---\u4e3b\u7ebf\u7a0b\u7ed3\u675f--- #\u53ea\u6709\u4e3b\u7ebf\u7a0b\u7ed3\u675f\uff0c\u5b50\u7ebf\u7a0b\u6765\u4e0d\u53ca\u6267\u884c\u5c31\u88ab\u5f3a\u5236\u7ed3\u675f\n```\n\u4e09\u3001 join\uff08\u7ebf\u7a0b\u540c\u6b65)\njoin \u6240\u5b8c\u6210\u7684\u5de5\u4f5c\u5c31\u662f\u7ebf\u7a0b\u540c\u6b65\uff0c\u5373\u4e3b\u7ebf\u7a0b\u4efb\u52a1\u7ed3\u675f\u4ee5\u540e\uff0c\u8fdb\u5165\u5835\u585e\u72b6\u6001\uff0c\u4e00\u76f4\u7b49\u5f85\u6240\u6709\u7684\u5b50\u7ebf\u7a0b\u7ed3\u675f\u4ee5\u540e\uff0c\u4e3b\u7ebf\u7a0b\u518d\u7ec8\u6b62\u3002\n\n\u5f53\u8bbe\u7f6e\u5b88\u62a4\u7ebf\u7a0b\u65f6\uff0c\u542b\u4e49\u662f\u4e3b\u7ebf\u7a0b\u5bf9\u4e8e\u5b50\u7ebf\u7a0b\u7b49\u5f85timeout\u7684\u65f6\u95f4\u5c06\u4f1a\u6740\u6b7b\u8be5\u5b50\u7ebf\u7a0b\uff0c\u6700\u540e\u9000\u51fa\u7a0b\u5e8f\uff0c\u6240\u4ee5\u8bf4\uff0c\u5982\u679c\u670910\u4e2a\u5b50\u7ebf\u7a0b\uff0c\u5168\u90e8\u7684\u7b49\u5f85\u65f6\u95f4\u5c31\u662f\u6bcf\u4e2atimeout\u7684\u7d2f\u52a0\u548c\uff0c\u7b80\u5355\u7684\u6765\u8bf4\uff0c\u5c31\u662f\u7ed9\u6bcf\u4e2a\u5b50\u7ebf\u7a0b\u4e00\u4e2atimeou\u7684\u65f6\u95f4\uff0c\u8ba9\u4ed6\u53bb\u6267\u884c\uff0c\u65f6\u95f4\u4e00\u5230\uff0c\u4e0d\u7ba1\u4efb\u52a1\u6709\u6ca1\u6709\u5b8c\u6210\uff0c\u76f4\u63a5\u6740\u6b7b\u3002\n\n\u6ca1\u6709\u8bbe\u7f6e\u5b88\u62a4\u7ebf\u7a0b\u65f6\uff0c\u4e3b\u7ebf\u7a0b\u5c06\u4f1a\u7b49\u5f85timeout\u7684\u7d2f\u52a0\u548c\u8fd9\u6837\u7684\u4e00\u6bb5\u65f6\u95f4\uff0c\u65f6\u95f4\u4e00\u5230\uff0c\u4e3b\u7ebf\u7a0b\u7ed3\u675f\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u6740\u6b7b\u5b50\u7ebf\u7a0b\uff0c\u5b50\u7ebf\u7a0b\u4f9d\u7136\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230\u5b50\u7ebf\u7a0b\u5168\u90e8\u7ed3\u675f\uff0c\u7a0b\u5e8f\u9000\u51fa\u3002\n\n\u4f8b\u5b50\n```python\nimport threading\nimport time\n\ndef thread():\n    time.sleep(2)\n    print('---\u5b50\u7ebf\u7a0b\u7ed3\u675f---')\n\ndef main():\n    t1 = threading.Thread(target=thread)\n    t1.setDaemon(True)\n    t1.start()\n    t1.join(timeout=1)#1 \u7ebf\u7a0b\u540c\u6b65\uff0c\u4e3b\u7ebf\u7a0b\u5835\u585e1s \u7136\u540e\u4e3b\u7ebf\u7a0b\u7ed3\u675f\uff0c\u5b50\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c\n                        #2 \u5982\u679c\u4e0d\u8bbe\u7f6etimeout\u53c2\u6570\u5c31\u7b49\u5b50\u7ebf\u7a0b\u7ed3\u675f\u4e3b\u7ebf\u7a0b\u518d\u7ed3\u675f\n                        #3 \u5982\u679c\u8bbe\u7f6e\u4e86setDaemon=True\u548ctimeout=1\u4e3b\u7ebf\u7a0b\u7b49\u5f851s\u540e\u4f1a\u5f3a\u5236\u6740\u6b7b\u5b50\u7ebf\u7a0b\uff0c\u7136\u540e\u4e3b\u7ebf\u7a0b\u7ed3\u675f\n    print('---\u4e3b\u7ebf\u7a0b\u7ed3\u675f---')\n\nif __name__=='__main___':\n    main()\n```\n### 112.\u89e3\u91ca\u4ee5\u4e0b\u4ec0\u4e48\u662f\u9501\uff0c\u6709\u54ea\u51e0\u79cd\u9501\uff1f\n\u9501(Lock)\u662fpython\u63d0\u4f9b\u7684\u5bf9\u7ebf\u7a0b\u63a7\u5236\u7684\u5bf9\u8c61\u3002\u6709\u4e92\u65a5\u9501\uff0c\u53ef\u91cd\u5165\u9501\uff0c\u6b7b\u9501\u3002\n\n### 113.\u4ec0\u4e48\u662f\u6b7b\u9501\uff1f\n\u82e5\u5e72\u5b50\u7ebf\u7a0b\u5728\u7cfb\u7edf\u8d44\u6e90\u7ade\u4e89\u65f6\uff0c\u90fd\u5728\u7b49\u5f85\u5bf9\u65b9\u5bf9\u67d0\u90e8\u5206\u8d44\u6e90\u89e3\u9664\u5360\u7528\u72b6\u6001\uff0c\u7ed3\u679c\u662f\u8c01\u4e5f\u4e0d\u613f\u5148\u89e3\u9501\uff0c\u4e92\u76f8\u5e72\u7b49\u7740\uff0c\u7a0b\u5e8f\u65e0\u6cd5\u6267\u884c\u4e0b\u53bb\uff0c\u8fd9\u5c31\u662f\u6b7b\u9501\u3002\n\nGIL\u9501 \u5168\u5c40\u89e3\u91ca\u5668\u9501\n\n\u4f5c\u7528\uff1a \u9650\u5236\u591a\u7ebf\u7a0b\u540c\u65f6\u6267\u884c\uff0c\u4fdd\u8bc1\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\uff0c\u6240\u4ee5cython\u91cc\u7684\u591a\u7ebf\u7a0b\u5176\u5b9e\u662f\u4f2a\u591a\u7ebf\u7a0b\uff01\n\n\u6240\u4ee5python\u91cc\u5e38\u5e38\u4f7f\u7528\u534f\u7a0b\u6280\u672f\u6765\u4ee3\u66ff\u591a\u7ebf\u7a0b\uff0c\u534f\u7a0b\u662f\u4e00\u79cd\u66f4\u8f7b\u91cf\u7ea7\u7684\u7ebf\u7a0b\u3002\n\n\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u5207\u6362\u65f6\u7531\u7cfb\u7edf\u51b3\u5b9a\uff0c\u800c\u534f\u7a0b\u7531\u6211\u4eec\u7a0b\u5e8f\u5458\u81ea\u5df1\u51b3\u5b9a\uff0c\u800c\u6a21\u5757gevent\u4e0b\u5207\u6362\u662f\u9047\u5230\u4e86\u8017\u65f6\u64cd\u4f5c\u65f6\u624d\u4f1a\u5207\u6362\n\n\u4e09\u8005\u7684\u5173\u7cfb\uff1a\u8fdb\u7a0b\u91cc\u6709\u7ebf\u7a0b\uff0c\u7ebf\u7a0b\u91cc\u6709\u534f\u7a0b\u3002\n### 114.\u591a\u7ebf\u7a0b\u4ea4\u4e92\u8bbf\u95ee\u6570\u636e\uff0c\u5982\u679c\u8bbf\u95ee\u5230\u4e86\u5c31\u4e0d\u8bbf\u95ee\u4e86\uff1f\n\u600e\u4e48\u907f\u514d\u91cd\u8bfb\uff1f\n\n\u521b\u5efa\u4e00\u4e2a\u5df2\u8bbf\u95ee\u6570\u636e\u5217\u8868\uff0c\u7528\u4e8e\u5b58\u50a8\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u7684\u6570\u636e\uff0c\u5e76\u52a0\u4e0a\u4e92\u65a5\u9501\uff0c\u5728\u591a\u7ebf\u7a0b\u8bbf\u95ee\u6570\u636e\u7684\u65f6\u5019\u5148\u67e5\u770b\u6570\u636e\u662f\u5426\u5728\u5df2\u8bbf\u95ee\u7684\u5217\u8868\u4e2d\uff0c\u82e5\u5df2\u5b58\u5728\u5c31\u76f4\u63a5\u8df3\u8fc7\u3002\n\n### 115.\u4ec0\u4e48\u662f\u7ebf\u7a0b\u5b89\u5168\uff0c\u4ec0\u4e48\u662f\u4e92\u65a5\u9501\uff1f\n\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u53ef\u79f0\u4e3a\u2019\u4e92\u65a5\u9501\u2018\u7684\u6807\u8bb0\uff0c\u8fd9\u4e2a\u6807\u8bb0\u7528\u6765\u4fdd\u8bc1\u5728\u4efb\u4e00\u65f6\u523b\uff0c\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u8be5\u5bf9\u8c61\u3002\n\n\u540c\u4e00\u8fdb\u7a0b\u4e2d\u7684\u591a\u7ebf\u7a0b\u4e4b\u95f4\u662f\u5171\u4eab\u7cfb\u7edf\u8d44\u6e90\u7684\uff0c\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c\u64cd\u4f5c\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u64cd\u4f5c\u5c1a\u672a\u7ed3\u675f\uff0c\u53e6\u4e00\u7ebf\u7a0b\u5df2\u7ecf\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\uff0c\u5bfc\u81f4\u6700\u7ec8\u7ed3\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u6b64\u65f6\u9700\u8981\u5bf9\u88ab\u64cd\u4f5c\u5bf9\u8c61\u6dfb\u52a0\u4e92\u65a5\u9501\uff0c\u4fdd\u8bc1\u6bcf\u4e2a\u7ebf\u7a0b\u5bf9\u8be5\u5bf9\u8c61\u7684\u64cd\u4f5c\u90fd\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\u3002\n\n### 116.\u8bf4\u8bf4\u4e0b\u9762\u51e0\u4e2a\u6982\u5ff5\uff1a\u540c\u6b65\uff0c\u5f02\u6b65\uff0c\u963b\u585e\uff0c\u975e\u963b\u585e\uff1f\n\u540c\u6b65\uff1a \u591a\u4e2a\u4efb\u52a1\u4e4b\u95f4\u6709\u5148\u540e\u987a\u5e8f\u6267\u884c\uff0c\u4e00\u4e2a\u6267\u884c\u5b8c\u4e0b\u4e2a\u624d\u80fd\u6267\u884c\u3002\n\n\u5f02\u6b65\uff1a \u591a\u4e2a\u4efb\u52a1\u4e4b\u95f4\u6ca1\u6709\u5148\u540e\u987a\u5e8f\uff0c\u53ef\u4ee5\u540c\u65f6\u6267\u884c\uff0c\u6709\u65f6\u5019\u4e00\u4e2a\u4efb\u52a1\u53ef\u80fd\u8981\u5728\u5fc5\u8981\u7684\u65f6\u5019\u83b7\u53d6\u53e6\u4e00\u4e2a\u540c\u65f6\u6267\u884c\u7684\u4efb\u52a1\u7684\u7ed3\u679c\uff0c\u8fd9\u4e2a\u5c31\u53eb\u56de\u8c03\uff01\n\n\u963b\u585e\uff1a \u5982\u679c\u5361\u4f4f\u4e86\u8c03\u7528\u8005\uff0c\u8c03\u7528\u8005\u4e0d\u80fd\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c\uff0c\u5c31\u662f\u8bf4\u8c03\u7528\u8005\u963b\u585e\u4e86\u3002\n\n\u975e\u963b\u585e\uff1a \u5982\u679c\u4e0d\u4f1a\u5361\u4f4f\uff0c\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\uff0c\u5c31\u662f\u8bf4\u975e\u963b\u585e\u7684\u3002\n\n\u540c\u6b65\u5f02\u6b65\u76f8\u5bf9\u4e8e\u591a\u4efb\u52a1\u800c\u8a00\uff0c\u963b\u585e\u975e\u963b\u585e\u76f8\u5bf9\u4e8e\u4ee3\u7801\u6267\u884c\u800c\u8a00\u3002\n\n### 117.\u4ec0\u4e48\u662f\u50f5\u5c38\u8fdb\u7a0b\u548c\u5b64\u513f\u8fdb\u7a0b\uff1f\u600e\u4e48\u907f\u514d\u50f5\u5c38\u8fdb\u7a0b\uff1f\n\u5b64\u513f\u8fdb\u7a0b\uff1a \u7236\u8fdb\u7a0b\u9000\u51fa\uff0c\u5b50\u8fdb\u7a0b\u8fd8\u5728\u8fd0\u884c\u7684\u8fd9\u4e9b\u5b50\u8fdb\u7a0b\u90fd\u662f\u5b64\u513f\u8fdb\u7a0b\uff0c\u5b64\u513f\u8fdb\u7a0b\u5c06\u88abinit \u8fdb\u7a0b\uff08\u8fdb\u7a0b\u53f7\u4e3a1\uff09\u6240\u6536\u517b\uff0c\u5e76\u7531init \u8fdb\u7a0b\u5bf9\u4ed6\u4eec\u5b8c\u6210\u72b6\u6001\u6536\u96c6\u5de5\u4f5c\u3002\n\n\u50f5\u5c38\u8fdb\u7a0b\uff1a \u8fdb\u7a0b\u4f7f\u7528fork \u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u5982\u679c\u5b50\u8fdb\u7a0b\u9000\u51fa\uff0c\u800c\u7236\u8fdb\u7a0b\u5e76\u6ca1\u6709\u8c03\u7528wait \u83b7waitpid \u83b7\u53d6\u5b50\u8fdb\u7a0b\u7684\u72b6\u6001\u4fe1\u606f\uff0c\u90a3\u4e48\u5b50\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u4ecd\u7136\u4fdd\u5b58\u5728\u7cfb\u7edf\u4e2d\u7684\u8fd9\u4e9b\u8fdb\u7a0b\u662f\u50f5\u5c38\u8fdb\u7a0b\u3002\n\n\u907f\u514d\u50f5\u5c38\u8fdb\u7a0b\u7684\u65b9\u6cd5\uff1a\n\n1.fork \u4e24\u6b21\u7528\u5b59\u5b50\u8fdb\u7a0b\u53bb\u5b8c\u6210\u5b50\u8fdb\u7a0b\u7684\u4efb\u52a1\n\n2.\u7528wait()\u51fd\u6570\u4f7f\u7236\u8fdb\u7a0b\u963b\u585e\n\n3.\u4f7f\u7528\u4fe1\u53f7\u91cf\uff0c\u5728signal handler \u4e2d\u8c03\u7528waitpid,\u8fd9\u6837\u7236\u8fdb\u7a0b\u4e0d\u7528\u963b\u585e\n###  118.python\u4e2d\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u7684\u4f7f\u7528\u573a\u666f\uff1f\n\u591a\u8fdb\u7a0b\u9002\u5408\u5728CPU\u5bc6\u96c6\u64cd\u4f5c\uff08cpu\u64cd\u4f5c\u6307\u4ee4\u6bd4\u8f83\u591a\uff0c\u5982\u4f4d\u591a\u7684\u7684\u6d6e\u70b9\u8fd0\u7b97\uff09\u3002\n\n\u591a\u7ebf\u7a0b\u9002\u5408\u5728IO\u5bc6\u6027\u578b\u64cd\u4f5c\uff08\u8bfb\u5199\u6570\u636e\u64cd\u4f5c\u6bd4\u591a\u7684\u7684\uff0c\u6bd4\u5982\u722c\u866b\uff09\n\n###  119.\u7ebf\u7a0b\u662f\u5e76\u53d1\u8fd8\u662f\u5e76\u884c\uff0c\u8fdb\u7a0b\u662f\u5e76\u53d1\u8fd8\u662f\u5e76\u884c\uff1f\n\u7ebf\u7a0b\u662f\u5e76\u53d1\uff0c\u8fdb\u7a0b\u662f\u5e76\u884c;\n\n\u8fdb\u7a0b\u4e4b\u95f4\u4e92\u76f8\u72ec\u7acb\uff0c\u662f\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u540c\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u8d44\u6e90\u3002\n\n### 120.\u5e76\u884c(parallel)\u548c\u5e76\u53d1\uff08concurrency)?\n\u5e76\u884c\uff1a \u540c\u4e00\u65f6\u523b\u591a\u4e2a\u4efb\u52a1\u540c\u65f6\u5728\u8fd0\u884c\n\n\u4e0d\u4f1a\u5728\u540c\u4e00\u65f6\u523b\u540c\u65f6\u8fd0\u884c\uff0c\u5b58\u5728\u4ea4\u66ff\u6267\u884c\u7684\u60c5\u51b5\u3002\n\n\u5b9e\u73b0\u5e76\u884c\u7684\u5e93\u6709\uff1a multiprocessing\n\n\u5b9e\u73b0\u5e76\u53d1\u7684\u5e93\u6709:  threading\n\n\u7a0b\u5e8f\u9700\u8981\u6267\u884c\u8f83\u591a\u7684\u8bfb\u5199\u3001\u8bf7\u6c42\u548c\u56de\u590d\u4efb\u52a1\u7684\u9700\u8981\u5927\u91cf\u7684IO\u64cd\u4f5c\uff0cIO\u5bc6\u96c6\u578b\u64cd\u4f5c\u4f7f\u7528\u5e76\u53d1\u66f4\u597d\u3002\n\nCPU\u8fd0\u7b97\u91cf\u5927\u7684\u7a0b\u5e8f\uff0c\u4f7f\u7528\u5e76\u884c\u4f1a\u66f4\u597d\n### 121.IO\u5bc6\u96c6\u578b\u548cCPU\u5bc6\u96c6\u578b\u533a\u522b\uff1f\nIO\u5bc6\u96c6\u578b\uff1a \u7cfb\u7edf\u8fd0\u884c\uff0c\u5927\u90e8\u5206\u7684\u72b6\u51b5\u662fCPU\u5728\u7b49 I/O\uff08\u786c\u76d8/\u5185\u5b58\uff09\u7684\u8bfb/\u5199\n\nCPU\u5bc6\u96c6\u578b\uff1a \u5927\u90e8\u5206\u65f6\u95f4\u7528\u6765\u505a\u8ba1\u7b97\uff0c\u903b\u8f91\u5224\u65ad\u7b49CPU\u52a8\u4f5c\u7684\u7a0b\u5e8f\u79f0\u4e4bCPU\u5bc6\u96c6\u578b\u3002\n### 122.python asyncio\u7684\u539f\u7406\uff1f\nasyncio\u8fd9\u4e2a\u5e93\u5c31\u662f\u4f7f\u7528python\u7684yield\u8fd9\u4e2a\u53ef\u4ee5\u6253\u65ad\u4fdd\u5b58\u5f53\u524d\u51fd\u6570\u7684\u4e0a\u4e0b\u6587\u7684\u673a\u5236\uff0c \u5c01\u88c5\u597d\u4e86selector \u6446\u8131\u6389\u4e86\u590d\u6742\u7684\u56de\u8c03\u5173\u7cfb\n\n## \u7f51\u7edc\u7f16\u7a0b\n### 123.\u600e\u4e48\u5b9e\u73b0\u5f3a\u884c\u5173\u95ed\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u8fde\u63a5?\n### 124.\u7b80\u8ff0TCP\u548cUDP\u7684\u533a\u522b\u4ee5\u53ca\u4f18\u7f3a\u70b9?\n### 125.\u7b80\u8ff0\u6d4f\u89c8\u5668\u901a\u8fc7WSGI\u8bf7\u6c42\u52a8\u6001\u8d44\u6e90\u7684\u8fc7\u7a0b?\n\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u8bf7\u6c42\u88abNginx\u76d1\u542c\u5230\uff0cNginx\u6839\u636e\u8bf7\u6c42\u7684URL\u7684PATH\u6216\u8005\u540e\u7f00\u628a\u8bf7\u6c42\u9759\u6001\u8d44\u6e90\u7684\u5206\u53d1\u5230\u9759\u6001\u8d44\u6e90\u7684\u76ee\u5f55\uff0c\u522b\u7684\u8bf7\u6c42\u6839\u636e\u914d\u7f6e\u597d\u7684\u8f6c\u53d1\u5230\u76f8\u5e94\u7aef\u53e3\u3002\n\u5b9e\u73b0\u4e86WSGI\u7684\u7a0b\u5e8f\u4f1a\u76d1\u542c\u67d0\u4e2a\u7aef\u53e3\uff0c\u76d1\u542c\u5230Nginx\u8f6c\u53d1\u8fc7\u6765\u7684\u8bf7\u6c42\u63a5\u6536\u540e(\u4e00\u822c\u7528socket\u7684recv\u6765\u63a5\u6536HTTP\u7684\u62a5\u6587)\u4ee5\u540e\u628a\u8bf7\u6c42\u7684\u62a5\u6587\u5c01\u88c5\u6210`environ`\u7684\u5b57\u5178\u5bf9\u8c61\uff0c\u7136\u540e\u518d\u63d0\u4f9b\u4e00\u4e2a`start_response`\u7684\u65b9\u6cd5\u3002\u628a\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u5f53\u6210\u53c2\u6570\u4f20\u5165\u67d0\u4e2a\u65b9\u6cd5\u6bd4\u5982`wsgi_app(environ, start_response)`\u6216\u8005\u5b9e\u73b0\u4e86`__call__(self, environ, start_response)`\u65b9\u6cd5\u7684\u67d0\u4e2a\u5b9e\u4f8b\u3002\u8fd9\u4e2a\u5b9e\u4f8b\u518d\u8c03\u7528`start_response`\u8fd4\u56de\u7ed9\u5b9e\u73b0\u4e86WSGI\u7684\u4e2d\u95f4\u4ef6\uff0c\u518d\u7531\u4e2d\u95f4\u4ef6\u8fd4\u56de\u7ed9Nginx\u3002\n### 126.\u63cf\u8ff0\u7528\u6d4f\u89c8\u5668\u8bbf\u95eewww.baidu.com\u7684\u8fc7\u7a0b\n### 127.Post\u548cGet\u8bf7\u6c42\u7684\u533a\u522b?\n### 128.cookie \u548csession \u7684\u533a\u522b\uff1f\n### 129.\u5217\u51fa\u4f60\u77e5\u9053\u7684HTTP\u534f\u8bae\u7684\u72b6\u6001\u7801\uff0c\u8bf4\u51fa\u8868\u793a\u4ec0\u4e48\u610f\u601d\uff1f\n### 130.\u8bf7\u7b80\u5355\u8bf4\u4e00\u4e0b\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b\uff1f\n### 131.\u8bf4\u4e00\u4e0b\u4ec0\u4e48\u662ftcp\u76842MSL\uff1f\n### 132.\u4e3a\u4ec0\u4e48\u5ba2\u6237\u7aef\u5728TIME-WAIT\u72b6\u6001\u5fc5\u987b\u7b49\u5f852MSL\u7684\u65f6\u95f4\uff1f\n### 133.\u8bf4\u8bf4HTTP\u548cHTTPS\u533a\u522b\uff1f\n### 134.\u8c08\u4e00\u4e0bHTTP\u534f\u8bae\u4ee5\u53ca\u534f\u8bae\u5934\u90e8\u4e2d\u8868\u793a\u6570\u636e\u7c7b\u578b\u7684\u5b57\u6bb5\uff1f\n### 135.HTTP\u8bf7\u6c42\u65b9\u6cd5\u90fd\u6709\u4ec0\u4e48\uff1f\n### 136.\u4f7f\u7528Socket\u5957\u63a5\u5b57\u9700\u8981\u4f20\u5165\u54ea\u4e9b\u53c2\u6570 \uff1f\n### 137.HTTP\u5e38\u89c1\u8bf7\u6c42\u5934\uff1f\n### 138.\u4e03\u5c42\u6a21\u578b\uff1f\n### 139.url\u7684\u5f62\u5f0f\uff1f\n\n# Web\n## Flask\n### 140.\u5bf9Flask\u84dd\u56fe(Blueprint)\u7684\u7406\u89e3\uff1f\n\u84dd\u56fe\u7684\u5b9a\u4e49\n\n\u84dd\u56fe /Blueprint \u662fFlask\u5e94\u7528\u7a0b\u5e8f\u7ec4\u4ef6\u5316\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2a\u5e94\u7528\u5185\u6216\u8de8\u8d8a\u591a\u4e2a\u9879\u76ee\u5171\u7528\u84dd\u56fe\u3002\u4f7f\u7528\u84dd\u56fe\u53ef\u4ee5\u6781\u5927\u7b80\u5316\u5927\u578b\u5e94\u7528\u7684\u5f00\u53d1\u96be\u5ea6\uff0c\u4e5f\u4e3aFlask\u6269\u5c55\u63d0\u4f9b\u4e86\u4e00\u79cd\u5728\u5e94\u7528\u4e2d\u6ce8\u518c\u670d\u52a1\u7684\u96c6\u4e2d\u5f0f\u673a\u5236\u3002\n\n\u84dd\u56fe\u7684\u5e94\u7528\u573a\u666f\uff1a\n\n\u628a\u4e00\u4e2a\u5e94\u7528\u5206\u89e3\u4e3a\u4e00\u4e2a\u84dd\u56fe\u7684\u96c6\u5408\u3002\u8fd9\u5bf9\u5927\u578b\u5e94\u7528\u662f\u7406\u60f3\u7684\u3002\u4e00\u4e2a\u9879\u76ee\u53ef\u4ee5\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5e94\u7528\u5bf9\u8c61\uff0c\u521d\u59cb\u5316\u51e0\u4e2a\u6269\u5c55\uff0c\u5e76\u6ce8\u518c\u4e00\u96c6\u5408\u7684\u84dd\u56fe\u3002\n\n\u4ee5URL\u524d\u7f00\u548c/\u6216\u5b50\u57df\u540d\uff0c\u5728\u5e94\u7528\u4e0a\u6ce8\u518c\u4e00\u4e2a\u84dd\u56fe\u3002URL\u524d\u7f00/\u5b50\u57df\u540d\u4e2d\u7684\u53c2\u6570\u5373\u6210\u4e3a\u8fd9\u4e2a\u84dd\u56fe\u4e0b\u7684\u6240\u6709\u89c6\u56fe\u51fd\u6570\u7684\u5171\u540c\u7684\u89c6\u56fe\u53c2\u6570\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff09\n\u5728\u4e00\u4e2a\u5e94\u7528\u4e2d\u7528\u4e0d\u540c\u7684URL\u89c4\u5219\u591a\u6b21\u6ce8\u518c\u4e00\u4e2a\u84dd\u56fe\u3002\n\n\u901a\u8fc7\u84dd\u56fe\u63d0\u4f9b\u6a21\u677f\u8fc7\u6ee4\u5668\u3001\u9759\u6001\u6587\u4ef6\u3001\u6a21\u677f\u548c\u5176\u4ed6\u529f\u80fd\u3002\u4e00\u4e2a\u84dd\u56fe\u4e0d\u4e00\u5b9a\u8981\u5b9e\u73b0\u5e94\u7528\u6216\u89c6\u56fe\u51fd\u6570\u3002\n\n\u521d\u59cb\u5316\u4e00\u4e2aFlask\u6269\u5c55\u65f6\uff0c\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e2d\u6ce8\u518c\u4e00\u4e2a\u84dd\u56fe\u3002\n\n\u84dd\u56fe\u7684\u7f3a\u70b9\uff1a\n\n\u4e0d\u80fd\u5728\u5e94\u7528\u521b\u5efa\u540e\u64a4\u9500\u6ce8\u518c\u4e00\u4e2a\u84dd\u56fe\u800c\u4e0d\u9500\u6bc1\u6574\u4e2a\u5e94\u7528\u5bf9\u8c61\u3002\n\n\u4f7f\u7528\u84dd\u56fe\u7684\u4e09\u4e2a\u6b65\u9aa4\n\n1.\u521b\u5efa\u4e00\u4e2a\u84dd\u56fe\u5bf9\u8c61\n```python\nblue = Blueprint(\"blue\",__name__)\n```\n2.\u5728\u8fd9\u4e2a\u84dd\u56fe\u5bf9\u8c61\u4e0a\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f8b\u5982\u6ce8\u518c\u8def\u7531\u3001\u6307\u5b9a\u9759\u6001\u6587\u4ef6\u5939\u3001\u6ce8\u518c\u6a21\u677f\u8fc7\u6ee4\u5668...\n```python\n@blue.route('/')\ndef blue_index():\n    return \"Welcome to my blueprint\"\n```\n3.\u5728\u5e94\u7528\u5bf9\u8c61\u4e0a\u6ce8\u518c\u8fd9\u4e2a\u84dd\u56fe\u5bf9\u8c61\n```python\napp.register_blueprint(blue,url_prefix=\"/blue\")\n```\n\n### 141.Flask \u548c Django \u8def\u7531\u6620\u5c04\u7684\u533a\u522b\uff1f\n  \u5728django\u4e2d\uff0c\u8def\u7531\u662f\u6d4f\u89c8\u5668\u8bbf\u95ee\u670d\u52a1\u5668\u65f6\uff0c\u5148\u8bbf\u95ee\u7684\u9879\u76ee\u4e2d\u7684url\uff0c\u518d\u7531\u9879\u76ee\u4e2d\u7684url\u627e\u5230\u5e94\u7528\u4e2durl\uff0c\u8fd9\u4e9burl\u662f\u653e\u5728\u4e00\u4e2a\u5217\u8868\u91cc\uff0c\u9075\u4ece\u4ece\u524d\u5f80\u540e\u5339\u914d\u7684\u89c4\u5219\u3002\u5728flask\u4e2d\uff0c\u8def\u7531\u662f\u901a\u8fc7\u88c5\u9970\u5668\u7ed9\u6bcf\u4e2a\u89c6\u56fe\u51fd\u6570\u63d0\u4f9b\u7684\uff0c\u800c\u4e14\u6839\u636e\u8bf7\u6c42\u65b9\u5f0f\u7684\u4e0d\u540c\u53ef\u4ee5\u4e00\u4e2aurl\u7528\u4e8e\u4e0d\u540c\u7684\u4f5c\u7528\u3002\n\n## Django\n### 142.\u4ec0\u4e48\u662fwsgi,uwsgi,uWSGI?\nWSGI:\n\nweb\u670d\u52a1\u5668\u7f51\u5173\u63a5\u53e3\uff0c\u662f\u4e00\u5957\u534f\u8bae\u3002\u7528\u4e8e\u63a5\u6536\u7528\u6237\u8bf7\u6c42\u5e76\u5c06\u8bf7\u6c42\u8fdb\u884c\u521d\u6b21\u5c01\u88c5\uff0c\u7136\u540e\u5c06\u8bf7\u6c42\u4ea4\u7ed9web\u6846\u67b6\u3002\n\n\u5b9e\u73b0wsgi\u534f\u8bae\u7684\u6a21\u5757\uff1awsgiref,\u672c\u8d28\u4e0a\u5c31\u662f\u7f16\u5199\u4e00socket\u670d\u52a1\u7aef\uff0c\u7528\u4e8e\u63a5\u6536\u7528\u6237\u8bf7\u6c42\uff08django)\n\nwerkzeug,\u672c\u8d28\u4e0a\u5c31\u662f\u7f16\u5199\u4e00\u4e2asocket\u670d\u52a1\u7aef\uff0c\u7528\u4e8e\u63a5\u6536\u7528\u6237\u8bf7\u6c42(flask)\n\nuwsgi:\n\n\u4e0eWSGI\u4e00\u6837\u662f\u4e00\u79cd\u901a\u4fe1\u534f\u8bae\uff0c\u5b83\u662fuWSGI\u670d\u52a1\u5668\u7684\u72ec\u5360\u534f\u8bae\uff0c\u7528\u4e8e\u5b9a\u4e49\u4f20\u8f93\u4fe1\u606f\u7684\u7c7b\u578b\u3002\nuWSGI:\n\n\u662f\u4e00\u4e2aweb\u670d\u52a1\u5668\uff0c\u5b9e\u73b0\u4e86WSGI\u7684\u534f\u8bae\uff0cuWSGI\u534f\u8bae\uff0chttp\u534f\u8bae\n\n### 143.Django\u3001Flask\u3001Tornado\u7684\u5bf9\u6bd4\uff1f\n1\u3001 Django\u8d70\u7684\u5927\u800c\u5168\u7684\u65b9\u5411\uff0c\u5f00\u53d1\u6548\u7387\u9ad8\u3002\u5b83\u7684MTV\u6846\u67b6\uff0c\u81ea\u5e26\u7684ORM,admin\u540e\u53f0\u7ba1\u7406,\u81ea\u5e26\u7684sqlite\u6570\u636e\u5e93\u548c\u5f00\u53d1\u6d4b\u8bd5\u7528\u7684\u670d\u52a1\u5668\uff0c\u7ed9\u5f00\u53d1\u8005\u63d0\u9ad8\u4e86\u8d85\u9ad8\u7684\u5f00\u53d1\u6548\u7387\u3002\n\u91cd\u91cf\u7ea7web\u6846\u67b6\uff0c\u529f\u80fd\u9f50\u5168\uff0c\u63d0\u4f9b\u4e00\u7ad9\u5f0f\u89e3\u51b3\u7684\u601d\u8def\uff0c\u80fd\u8ba9\u5f00\u53d1\u8005\u4e0d\u7528\u5728\u9009\u62e9\u4e0a\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u3002\n\n\u81ea\u5e26ORM\u548c\u6a21\u677f\u5f15\u64ce\uff0c\u652f\u6301jinja\u7b49\u975e\u5b98\u65b9\u6a21\u677f\u5f15\u64ce\u3002\n\n\u81ea\u5e26ORM\u4f7fDjango\u548c\u5173\u7cfb\u578b\u6570\u636e\u5e93\u8026\u5408\u5ea6\u9ad8\uff0c\u5982\u679c\u8981\u4f7f\u7528\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u9700\u8981\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\n\n\u81ea\u5e26\u6570\u636e\u5e93\u7ba1\u7406app\n\n\u6210\u719f\uff0c\u7a33\u5b9a\uff0c\u5f00\u53d1\u6548\u7387\u9ad8\uff0c\u76f8\u5bf9\u4e8eFlask\uff0cDjango\u7684\u6574\u4f53\u5c01\u95ed\u6027\u6bd4\u8f83\u597d\uff0c\u9002\u5408\u505a\u4f01\u4e1a\u7ea7\u7f51\u7ad9\u7684\u5f00\u53d1\u3002python web\u6846\u67b6\u7684\u5148\u9a71\uff0c\u7b2c\u4e09\u65b9\u5e93\u4e30\u5bcc\n\n2\u3001 Flask \u662f\u8f7b\u91cf\u7ea7\u7684\u6846\u67b6\uff0c\u81ea\u7531\uff0c\u7075\u6d3b\uff0c\u53ef\u6269\u5c55\u6027\u5f3a\uff0c\u6838\u5fc3\u57fa\u4e8eWerkzeug WSGI\u5de5\u5177 \u548cjinja2 \u6a21\u677f\u5f15\u64ce\n\n\u9002\u7528\u4e8e\u505a\u5c0f\u7f51\u7ad9\u4ee5\u53caweb\u670d\u52a1\u7684API,\u5f00\u53d1\u5927\u578b\u7f51\u7ad9\u65e0\u538b\u529b\uff0c\u4f46\u67b6\u6784\u9700\u8981\u81ea\u5df1\u8bbe\u8ba1\n\n\u4e0e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u7ed3\u5408\u4e0d\u5f31\u4e8eDjango\uff0c\u800c\u4e0e\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u7ed3\u5408\u8fdc\u8fdc\u4f18\u4e8eDjango\n\n3\u3001 Tornado\u8d70\u7684\u662f\u5c11\u800c\u7cbe\u7684\u65b9\u5411\uff0c\u6027\u80fd\u4f18\u8d8a\uff0c\u5b83\u6700\u51fa\u540d\u7684\u5f02\u6b65\u975e\u963b\u585e\u7684\u8bbe\u8ba1\u65b9\u5f0f\n\nTornado\u7684\u4e24\u5927\u6838\u5fc3\u6a21\u5757\uff1a\n\niostraem:\u5bf9\u975e\u963b\u585e\u7684socket\u8fdb\u884c\u7b80\u5355\u7684\u5c01\u88c5\n\nioloop: \u5bf9I/O \u591a\u8def\u590d\u7528\u7684\u5c01\u88c5,\u5b83\u5b9e\u73b0\u4e00\u4e2a\u5355\u4f8b\n\n### 144.CORS \u548c CSRF\u7684\u533a\u522b\uff1f\n\u4ec0\u4e48\u662fCORS\uff1f\n\nCORS\u662f\u4e00\u4e2aW3C\u6807\u51c6,\u5168\u79f0\u662f\u201c\u8de8\u57df\u8d44\u6e90\u5171\u4eab\"(Cross-origin resoure sharing).\n\u5b83\u5141\u8bb8\u6d4f\u89c8\u5668\u5411\u8de8\u6e90\u670d\u52a1\u5668\uff0c\u53d1\u51faXMLHttpRequest\u8bf7\u6c42\uff0c\u4ece\u800c\u5ba2\u670d\u4e86AJAX\u53ea\u80fd\u540c\u6e90\u4f7f\u7528\u7684\u9650\u5236\u3002\n\n\u4ec0\u4e48\u662fCSRF\uff1f\n\nCSRF\u4e3b\u6d41\u9632\u5fa1\u65b9\u5f0f\u662f\u5728\u540e\u7aef\u751f\u6210\u8868\u5355\u7684\u65f6\u5019\u751f\u6210\u4e00\u4e32\u968f\u673atoken,\u5185\u7f6e\u5230\u8868\u5355\u91cc\u6210\u4e3a\u4e00\u4e2a\u5b57\u6bb5\uff0c\u540c\u65f6\uff0c\u5c06\u6b64\u4e32token\u7f6e\u5165session\u4e2d\u3002\u6bcf\u6b21\u8868\u5355\u63d0\u4ea4\u5230\u540e\u7aef\u65f6\u90fd\u4f1a\u68c0\u67e5\u8fd9\u4e24\u4e2a\u503c\u662f\u5426\u4e00\u81f4\uff0c\u4ee5\u6b64\u6765\u5224\u65ad\u6b64\u6b21\u8868\u5355\u63d0\u4ea4\u662f\u5426\u662f\u53ef\u4fe1\u7684\uff0c\u63d0\u4ea4\u8fc7\u4e00\u6b21\u4e4b\u540e\uff0c\u5982\u679c\u8fd9\u4e2a\u9875\u9762\u6ca1\u6709\u751f\u6210CSRF token,\u90a3\u4e48token\u5c06\u4f1a\u88ab\u6e05\u7a7a,\u5982\u679c\u6709\u65b0\u7684\u9700\u6c42\uff0c\u90a3\u4e48token\u4f1a\u88ab\u66f4\u65b0\u3002\n\u653b\u51fb\u8005\u53ef\u4ee5\u4f2a\u9020POST\u8868\u5355\u63d0\u4ea4\uff0c\u4f46\u662f\u4ed6\u6ca1\u6709\u540e\u7aef\u751f\u6210\u7684\u5185\u7f6e\u4e8e\u8868\u5355\u7684token\uff0csession\u4e2d\u6ca1\u6709token\u90fd\u65e0\u6d4e\u4e8e\u4e8b\u3002\n\n### 145.Session,Cookie,JWT\u7684\u7406\u89e3\n\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u4f1a\u8bdd\u7ba1\u7406\n\n\u4f17\u6240\u5468\u77e5\uff0cHTTP\u534f\u8bae\u662f\u4e00\u4e2a\u65e0\u72b6\u6001\u7684\u534f\u8bae\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u8bf7\u6c42\uff0c\u8bf7\u6c42\u4e0e\u8bf7\u6c42\u4e4b\u95f4\u5e76\u65e0\u5173\u7cfb\u3002\u4f46\u5728\u5b9e\u9645\u7684\u5e94\u7528\u573a\u666f\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5e76\u4e0d\u80fd\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\u3002\u4e3e\u4e2a\u5927\u5bb6\u90fd\u559c\u6b22\u7528\u7684\u4f8b\u5b50\uff0c\u628a\u5546\u54c1\u52a0\u5165\u8d2d\u7269\u8f66\uff0c\u5355\u72ec\u8003\u8651\u8fd9\u4e2a\u8bf7\u6c42\uff0c\u670d\u52a1\u7aef\u5e76\u4e0d\u77e5\u9053\u8fd9\u4e2a\u5546\u54c1\u662f\u8c01\u7684\uff0c\u5e94\u8be5\u52a0\u5165\u8c01\u7684\u8d2d\u7269\u8f66\uff1f\u56e0\u6b64\u8fd9\u4e2a\u8bf7\u6c42\u7684\u4e0a\u4e0b\u6587\u73af\u5883\u5b9e\u9645\u4e0a\u5e94\u8be5\u5305\u542b\u7528\u6237\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5728\u6bcf\u6b21\u7528\u6237\u53d1\u51fa\u8bf7\u6c42\u65f6\u628a\u8fd9\u4e00\u5c0f\u90e8\u5206\u989d\u5916\u4fe1\u606f\uff0c\u4e5f\u505a\u4e3a\u8bf7\u6c42\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u6837\u670d\u52a1\u7aef\u5c31\u53ef\u4ee5\u6839\u636e\u4e0a\u4e0b\u6587\u4e2d\u7684\u4fe1\u606f\uff0c\u9488\u5bf9\u5177\u4f53\u7684\u7528\u6237\u8fdb\u884c\u64cd\u4f5c\u3002\u6240\u4ee5\u8fd9\u51e0\u79cd\u6280\u672f\u7684\u51fa\u73b0\u90fd\u662f\u5bf9HTTP\u534f\u8bae\u7684\u4e00\u4e2a\u8865\u5145\uff0c\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u7528HTTP\u534f\u8bae+\u72b6\u6001\u7ba1\u7406\u6784\u5efa\u4e00\u4e2a\u7684\u9762\u5411\u7528\u6237\u7684WEB\u5e94\u7528\u3002\n\nSession \u548cCookie\u7684\u533a\u522b\n\n  \u8fd9\u91cc\u6211\u60f3\u5148\u8c08\u8c08session\u4e0ecookies,\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u6280\u672f\u662f\u505a\u4e3a\u5f00\u53d1\u6700\u4e3a\u5e38\u89c1\u7684\u3002\u90a3\u4e48session\u4e0ecookies\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f\u4e2a\u4eba\u8ba4\u4e3asession\u4e0ecookies\u6700\u6838\u5fc3\u533a\u522b\u5728\u4e8e\u989d\u5916\u4fe1\u606f\u7531\u8c01\u6765\u7ef4\u62a4\u3002\u5229\u7528cookies\u6765\u5b9e\u73b0\u4f1a\u8bdd\u7ba1\u7406\u65f6\uff0c\u7528\u6237\u7684\u76f8\u5173\u4fe1\u606f\u6216\u8005\u5176\u4ed6\u6211\u4eec\u60f3\u8981\u4fdd\u6301\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e2d\u7684\u4fe1\u606f\uff0c\u90fd\u662f\u653e\u5728cookies\u4e2d,\u800ccookies\u662f\u7531\u5ba2\u6237\u7aef\u6765\u4fdd\u5b58\uff0c\u6bcf\u5f53\u5ba2\u6237\u7aef\u53d1\u51fa\u65b0\u8bf7\u6c42\u65f6\uff0c\u5c31\u4f1a\u7a0d\u5e26\u4e0acookies,\u670d\u52a1\u7aef\u4f1a\u6839\u636e\u5176\u4e2d\u7684\u4fe1\u606f\u8fdb\u884c\u64cd\u4f5c\u3002\n  \u5f53\u5229\u7528session\u6765\u8fdb\u884c\u4f1a\u8bdd\u7ba1\u7406\u65f6\uff0c\u5ba2\u6237\u7aef\u5b9e\u9645\u4e0a\u53ea\u5b58\u4e86\u4e00\u4e2a\u7531\u670d\u52a1\u7aef\u53d1\u9001\u7684session_id,\u800c\u7531\u8fd9\u4e2asession_id,\u53ef\u4ee5\u5728\u670d\u52a1\u7aef\u8fd8\u539f\u51fa\u6240\u9700\u8981\u7684\u6240\u6709\u72b6\u6001\u4fe1\u606f\uff0c\u4ece\u8fd9\u91cc\u53ef\u4ee5\u770b\u51fa\u8fd9\u90e8\u5206\u4fe1\u606f\u662f\u7531\u670d\u52a1\u7aef\u6765\u7ef4\u62a4\u7684\u3002\n\n\u9664\u6b64\u4ee5\u5916\uff0csession\u4e0ecookies\u90fd\u6709\u4e00\u4e9b\u81ea\u5df1\u7684\u7f3a\u70b9\uff1a\n    \ncookies\u7684\u5b89\u5168\u6027\u4e0d\u597d\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u83b7\u53d6\u672c\u5730cookies\u8fdb\u884c\u6b3a\u9a97\u6216\u8005\u5229\u7528cookies\u8fdb\u884cCSRF\u653b\u51fb\u3002\u4f7f\u7528cookies\u65f6,\u5728\u591a\u4e2a\u57df\u540d\u4e0b\uff0c\u4f1a\u5b58\u5728\u8de8\u57df\u95ee\u9898\u3002\nsession \u5728\u4e00\u5b9a\u7684\u65f6\u95f4\u91cc\uff0c\u9700\u8981\u5b58\u653e\u5728\u670d\u52a1\u7aef\uff0c\u56e0\u6b64\u5f53\u62e5\u6709\u5927\u91cf\u7528\u6237\u65f6\uff0c\u4e5f\u4f1a\u5927\u5e45\u5ea6\u964d\u4f4e\u670d\u52a1\u7aef\u7684\u6027\u80fd\uff0c\u5f53\u6709\u591a\u53f0\u673a\u5668\u65f6\uff0c\u5982\u4f55\u5171\u4eabsession\u4e5f\u4f1a\u662f\u4e00\u4e2a\u95ee\u9898.(redis\u96c6\u7fa4)\u4e5f\u5c31\u662f\u8bf4\uff0c\u7528\u6237\u7b2c\u4e00\u4e2a\u8bbf\u95ee\u7684\u65f6\u5019\u662f\u670d\u52a1\u5668A\uff0c\u800c\u7b2c\u4e8c\u4e2a\u8bf7\u6c42\u88ab\u8f6c\u53d1\u7ed9\u4e86\u670d\u52a1\u5668B\uff0c\u90a3\u670d\u52a1\u5668B\u5982\u4f55\u5f97\u77e5\u5176\u72b6\u6001\u3002\u5b9e\u9645\u4e0a\uff0csession\u4e0ecookies\u662f\u6709\u8054\u7cfb\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u628asession_id\u5b58\u653e\u5728cookies\u4e2d\u7684\u3002\n\nJWT\u662f\u5982\u4f55\u5de5\u4f5c\u7684\n\n\u9996\u5148\u7528\u6237\u53d1\u51fa\u767b\u5f55\u8bf7\u6c42\uff0c\u670d\u52a1\u7aef\u6839\u636e\u7528\u6237\u7684\u767b\u5f55\u8bf7\u6c42\u8fdb\u884c\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5c06\u76f8\u5173\u7684\u4fe1\u606f\u653e\u5165payload\u4e2d\uff0c\u5229\u7528\u7b97\u6cd5\uff0c\u52a0\u4e0a\u670d\u52a1\u7aef\u7684\u5bc6\u94a5\u751f\u6210token\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662fsecret_key\u5f88\u91cd\u8981\uff0c\u5982\u679c\u8fd9\u4e2a\u6cc4\u9732\u7684\u8bdd\uff0c\u5ba2\u6237\u7aef\u5c31\u53ef\u4ee5\u968f\u673a\u7be1\u6539\u53d1\u9001\u7684\u989d\u5916\u4fe1\u606f\uff0c\u5b83\u662f\u4fe1\u606f\u5b8c\u6574\u6027\u7684\u4fdd\u8bc1\u3002\u751f\u6210token\u540e\u670d\u52a1\u7aef\u5c06\u5176\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u5728\u4e0b\u6b21\u8bf7\u6c42\u65f6\uff0c\u5c06token\u4e00\u8d77\u4ea4\u7ed9\u670d\u52a1\u7aef\uff0c\u4e00\u822c\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u653e\u5728Authorization\u9996\u90e8\u4e2d\uff0c\u8fd9\u6837\u4e5f\u5c31\u53ef\u4ee5\u907f\u514d\u8de8\u57df\u95ee\u9898\u3002\n\n### 146.\u7b80\u8ff0Django\u8bf7\u6c42\u751f\u547d\u5468\u671f\n\u4e00\u822c\u662f\u7528\u6237\u901a\u8fc7\u6d4f\u89c8\u5668\u5411\u6211\u4eec\u7684\u670d\u52a1\u5668\u53d1\u8d77\u4e00\u4e2a\u8bf7\u6c42(request),\u8fd9\u4e2a\u8bf7\u6c42\u4f1a\u53bb\u8bbf\u95ee\u89c6\u56fe\u51fd\u6570\uff0c\u5982\u679c\u4e0d\u6d89\u53ca\u5230\u6570\u636e\u8c03\u7528\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u89c6\u56fe\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6a21\u677f\u4e5f\u5c31\u662f\u4e00\u4e2a\u7f51\u9875\u7ed9\u7528\u6237\uff09\n\u89c6\u56fe\u51fd\u6570\u8c03\u7528\u6a21\u578b\u6bdb\u6a21\u578b\u53bb\u6570\u636e\u5e93\u67e5\u627e\u6570\u636e\uff0c\u7136\u540e\u9010\u7ea7\u8fd4\u56de\uff0c\u89c6\u56fe\u51fd\u6570\u628a\u8fd4\u56de\u7684\u6570\u636e\u586b\u5145\u5230\u6a21\u677f\u4e2d\u7a7a\u683c\u4e2d\uff0c\u6700\u540e\u8fd4\u56de\u7f51\u9875\u7ed9\u7528\u6237\u3002\n\n1.wsgi ,\u8bf7\u6c42\u5c01\u88c5\u540e\u4ea4\u7ed9web\u6846\u67b6\uff08Flask\uff0cDjango)\n\n2.\u4e2d\u95f4\u4ef6\uff0c\u5bf9\u8bf7\u6c42\u8fdb\u884c\u6821\u9a8c\u6216\u5728\u8bf7\u6c42\u5bf9\u8c61\u4e2d\u6dfb\u52a0\u5176\u4ed6\u76f8\u5173\u6570\u636e\uff0c\u4f8b\u5982\uff1acsrf,request.session\n\n3.\u8def\u7531\u5339\u914d \u6839\u636e\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u4e0d\u540curl\u53bb\u5339\u914d\u4e0d\u540c\u7684\u89c6\u56fe\u51fd\u6570\n\n4.\u89c6\u56fe\u51fd\u6570\uff0c\u5728\u89c6\u56fe\u51fd\u6570\u4e2d\u8fdb\u884c\u4e1a\u52a1\u903b\u8f91\u7684\u5904\u7406\uff0c\u53ef\u80fd\u6d89\u53ca\u5230\uff1aorm\uff0ctemplates \n\n5.\u4e2d\u95f4\u4ef6\uff0c\u5bf9\u54cd\u5e94\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\n\n6.wsgi\uff0c\u5c06\u54cd\u5e94\u7684\u5185\u5bb9\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\n\n### 147.\u7528\u7684restframework\u5b8c\u6210api\u53d1\u9001\u65f6\u95f4\u65f6\u533a\n\u5f53\u524d\u7684\u95ee\u9898\u662f\u7528django\u7684rest framework\u6a21\u5757\u505a\u4e00\u4e2aget\u8bf7\u6c42\u7684\u53d1\u9001\u65f6\u95f4\u4ee5\u53ca\u65f6\u533a\u4fe1\u606f\u7684api\n```python\nclass getCurrenttime(APIView):\n    def get(self,request):\n        local_time = time.localtime()\n        time_zone =settings.TIME_ZONE\n        temp = {'localtime':local_time,'timezone':time_zone}\n        return Response(temp)\n```\n### 148.nginx,tomcat,apach\u5230\u90fd\u662f\u4ec0\u4e48\uff1f\nNginx\uff08engine x)\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684HTTP\u548c\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u4e5f\u662f \u4e00\u4e2aIMAP/POP3/SMTP\u670d\u52a1\u5668\uff0c\u5de5\u4f5c\u5728OSI\u4e03\u5c42\uff0c\u8d1f\u8f7d\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a\u8f6e\u8be2\uff0cIP_HASH,fair,session_sticky.\nApache HTTP Server\u662f\u4e00\u4e2a\u6a21\u5757\u5316\u7684\u670d\u52a1\u5668\uff0c\u6e90\u4e8eNCSAhttpd\u670d\u52a1\u5668\nTomcat \u670d\u52a1\u5668\u662f\u4e00\u4e2a\u514d\u8d39\u7684\u5f00\u653e\u6e90\u4ee3\u7801\u7684Web\u5e94\u7528\u670d\u52a1\u5668\uff0c\u5c5e\u4e8e\u8f7b\u91cf\u7ea7\u5e94\u7528\u670d\u52a1\u5668\uff0c\u662f\u5f00\u53d1\u548c\u8c03\u8bd5JSP\u7a0b\u5e8f\u7684\u9996\u9009\u3002\n\n### 149.\u8bf7\u7ed9\u51fa\u4f60\u719f\u6089\u5173\u7cfb\u6570\u636e\u5e93\u8303\u5f0f\u6709\u54ea\u4e9b\uff0c\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f\n\u5728\u8fdb\u884c\u6570\u636e\u5e93\u7684\u8bbe\u8ba1\u65f6\uff0c\u6240\u9075\u5faa\u7684\u4e00\u4e9b\u89c4\u8303\uff0c\u53ea\u8981\u6309\u7167\u8bbe\u8ba1\u89c4\u8303\u8fdb\u884c\u8bbe\u8ba1\uff0c\u5c31\u80fd\u8bbe\u8ba1\u51fa\u6ca1\u6709\u6570\u636e\u5197\u4f59\u548c\u6570\u636e\u7ef4\u62a4\u5f02\u5e38\u7684\u6570\u636e\u5e93\u7ed3\u6784\u3002\n\n\u6570\u636e\u5e93\u7684\u8bbe\u8ba1\u7684\u89c4\u8303\u6709\u5f88\u591a\uff0c\u901a\u5e38\u6765\u8bf4\u6211\u4eec\u5728\u8bbe\u662f\u6570\u636e\u5e93\u65f6\u53ea\u8981\u8fbe\u5230\u5176\u4e2d\u4e00\u4e9b\u89c4\u8303\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u4e9b\u89c4\u8303\u53c8\u79f0\u4e4b\u4e3a\u6570\u636e\u5e93\u7684\u4e09\u8303\u5f0f\uff0c\u4e00\u5171\u6709\u4e09\u6761\uff0c\u4e5f\u5b58\u5728\u7740\u5176\u4ed6\u8303\u5f0f\uff0c\u6211\u4eec\u53ea\u8981\u505a\u5230\u6ee1\u8db3\u524d\u4e09\u4e2a\u8303\u5f0f\u7684\u8981\u6c42\uff0c\u5c31\u80fd\u8bbe\u9648\u51fa\u7b26\u5408\u6211\u4eec\u7684\u6570\u636e\u5e93\u4e86\uff0c\u6211\u4eec\u4e5f\u4e0d\u80fd\u5168\u90e8\u6765\u6309\u7167\u8303\u5f0f\u7684\u8981\u6c42\u6765\u505a\uff0c\u8fd8\u8981\u8003\u8651\u5b9e\u9645\u7684\u4e1a\u52a1\u4f7f\u7528\u60c5\u51b5\uff0c\u6240\u4ee5\u6709\u65f6\u5019\u4e5f\u9700\u8981\u505a\u4e00\u4e9b\u8fdd\u53cd\u8303\u5f0f\u7684\u8981\u6c42\u3002\n1.\u6570\u636e\u5e93\u8bbe\u8ba1\u7684\u7b2c\u4e00\u8303\u5f0f(\u6700\u57fa\u672c)\uff0c\u57fa\u672c\u4e0a\u6240\u6709\u6570\u636e\u5e93\u7684\u8303\u5f0f\u90fd\u662f\u7b26\u5408\u7b2c\u4e00\u8303\u5f0f\u7684\uff0c\u7b26\u5408\u7b2c\u4e00\u8303\u5f0f\u7684\u8868\u5177\u6709\u4ee5\u4e0b\u51e0\u4e2a\u7279\u70b9\uff1a\n\n\u6570\u636e\u5e93\u8868\u4e2d\u7684\u6240\u6709\u5b57\u6bb5\u90fd\u53ea\u5177\u6709\u5355\u4e00\u5c5e\u6027\uff0c\u5355\u4e00\u5c5e\u6027\u7684\u5217\u662f\u7531\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b\uff08\u6574\u578b\uff0c\u6d6e\u70b9\u578b\uff0c\u5b57\u7b26\u578b\u7b49\uff09\u6240\u6784\u6210\u7684\u8bbe\u8ba1\u51fa\u6765\u7684\u8868\u90fd\u662f\u7b80\u5355\u7684\u4e8c\u6bd4\u8868\n\n2.\u6570\u636e\u5e93\u8bbe\u8ba1\u7684\u7b2c\u4e8c\u8303\u5f0f(\u662f\u5728\u7b2c\u4e00\u8303\u5f0f\u7684\u57fa\u7840\u4e0a\u8bbe\u8ba1\u7684)\uff0c\u8981\u6c42\u4e00\u4e2a\u8868\u4e2d\u53ea\u5177\u6709\u4e00\u4e2a\u4e1a\u52a1\u4e3b\u952e\uff0c\u4e5f\u5c31\u662f\u8bf4\u7b26\u5408\u7b2c\u4e8c\u8303\u5f0f\u7684\u8868\u4e2d\u4e0d\u80fd\u5b58\u5728\u975e\u4e3b\u952e\u5217\u5bf9\u53ea\u5bf9\u90e8\u5206\u4e3b\u952e\u7684\u4f9d\u8d56\u5173\u7cfb\n\n3.\u6570\u636e\u5e93\u8bbe\u8ba1\u7684\u7b2c\u4e09\u8303\u5f0f\uff0c\u6307\u6bcf\u4e00\u4e2a\u975e\u4e3b\u5c5e\u6027\u65e2\u4e0d\u90e8\u5206\u4f9d\u8d56\u4e0e\u4e5f\u4e0d\u4f20\u9012\u4f9d\u8d56\u4e8e\u4e1a\u52a1\u4e3b\u952e\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e8c\u8303\u5f0f\u7684\u57fa\u7840\u4e0a\u6d88\u9664\u4e86\u975e\u4e3b\u5c5e\u6027\u5bf9\u4e3b\u952e\u7684\u4f20\u9012\u4f9d\u8d56\n\n### 150.\u7b80\u8ff0QQ\u767b\u9646\u8fc7\u7a0b\nqq\u767b\u5f55\uff0c\u5728\u6211\u4eec\u7684\u9879\u76ee\u4e2d\u5206\u4e3a\u4e86\u4e09\u4e2a\u63a5\u53e3\uff0c\n\n\u7b2c\u4e00\u4e2a\u63a5\u53e3\u662f\u8bf7\u6c42qq\u670d\u52a1\u5668\u8fd4\u56de\u4e00\u4e2aqq\u767b\u5f55\u7684\u754c\u9762;\n\n\u7b2c\u4e8c\u4e2a\u63a5\u53e3\u662f\u901a\u8fc7\u626b\u7801\u6216\u8d26\u53f7\u767b\u9646\u8fdb\u884c\u9a8c\u8bc1\uff0cqq\u670d\u52a1\u5668\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668\u4e00\u4e2acode\u548cstate,\u5229\u7528\u8fd9\u4e2acode\u901a\u8fc7\u672c\u5730\u670d\u52a1\u5668\u53bb\u5411qq\u670d\u52a1\u5668\u83b7\u53d6access_token\u8986\u8fd4\u56de\u7ed9\u672c\u5730\u670d\u52a1\u5668\uff0c\u51ed\u501faccess_token\u518d\u5411qq\u670d\u52a1\u5668\u83b7\u53d6\u7528\u6237\u7684openid(openid\u7528\u6237\u7684\u552f\u4e00\u6807\u8bc6)\n\n\u7b2c\u4e09\u4e2a\u63a5\u53e3\u662f\u5224\u65ad\u7528\u6237\u662f\u5426\u662f\u7b2c\u4e00\u6b21qq\u767b\u5f55\uff0c\u5982\u679c\u4e0d\u662f\u7684\u8bdd\u76f4\u63a5\u767b\u5f55\u8fd4\u56de\u7684jwt-token\u7ed9\u7528\u6237\uff0c\u5bf9\u6ca1\u6709\u7ed1\u5b9a\u8fc7\u672c\u7f51\u7ad9\u7684\u7528\u6237\uff0c\u5bf9openid\u8fdb\u884c\u52a0\u5bc6\u751f\u6210token\u8fdb\u884c\u7ed1\u5b9a\n\n### 151.post \u548c get\u7684\u533a\u522b?\n1.GET\u662f\u4ece\u670d\u52a1\u5668\u4e0a\u83b7\u53d6\u6570\u636e\uff0cPOST\u662f\u5411\u670d\u52a1\u5668\u4f20\u9001\u6570\u636e\n\n2.\u5728\u5ba2\u6237\u7aef\uff0cGET\u65b9\u5f0f\u5728\u901a\u8fc7URL\u63d0\u4ea4\u6570\u636e\uff0c\u6570\u636e\u5728URL\u4e2d\u53ef\u4ee5\u770b\u5230\uff0cPOST\u65b9\u5f0f\uff0c\u6570\u636e\u653e\u7f6e\u5728HTML\u2014\u2014HEADER\u5185\u63d0\u4ea4\n\n3.\u5bf9\u4e8eGET\u65b9\u5f0f\uff0c\u670d\u52a1\u5668\u7aef\u7528Request.QueryString\u83b7\u53d6\u53d8\u91cf\u7684\u503c\uff0c\u5bf9\u4e8ePOST\u65b9\u5f0f\uff0c\u670d\u52a1\u5668\u7aef\u7528Request.Form\u83b7\u53d6\u63d0\u4ea4\u7684\u6570\u636e\n\n\n### 152.\u9879\u76ee\u4e2d\u65e5\u5fd7\u7684\u4f5c\u7528\n\u4e00\u3001\u65e5\u5fd7\u76f8\u5173\u6982\u5ff5\n\n1.\u65e5\u5fd7\u662f\u4e00\u79cd\u53ef\u4ee5\u8ffd\u8e2a\u67d0\u4e9b\u8f6f\u4ef6\u8fd0\u884c\u65f6\u6240\u53d1\u751f\u4e8b\u4ef6\u7684\u65b9\u6cd5\n\n2.\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5411\u4ed6\u4eec\u7684\u4ee3\u7801\u4e2d\u8c03\u7528\u65e5\u5fd7\u8bb0\u5f55\u76f8\u5173\u7684\u65b9\u6cd5\u6765\u8868\u660e\u53d1\u751f\u4e86\u67d0\u4e9b\u4e8b\u60c5\n\n3.\u4e00\u4e2a\u4e8b\u4ef6\u53ef\u4ee5\u7528\u4e00\u4e2a\u5305\u542b\u53ef\u9009\u53d8\u91cf\u6570\u636e\u7684\u6d88\u606f\u6765\u63cf\u8ff0\n\n4.\u6b64\u5916\uff0c\u4e8b\u4ef6\u4e5f\u6709\u91cd\u8981\u6027\u7684\u6982\u5ff5\uff0c\u8fd9\u4e2a\u91cd\u8981\u6027\u4e5f\u53ef\u4ee5\u88ab\u6210\u4e3a\u4e25\u91cd\u6027\u7ea7\u522b(level)\n\n\u4e8c\u3001\u65e5\u5fd7\u7684\u4f5c\u7528\n\n1.\u901a\u8fc7log\u7684\u5206\u6790\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7528\u6237\u4e86\u89e3\u7cfb\u7edf\u6216\u8f6f\u4ef6\u3001\u5e94\u7528\u7684\u8fd0\u884c\u60c5\u51b5;\n\n2.\u5982\u679c\u4f60\u7684\u5e94\u7528log\u8db3\u591f\u4e30\u5bcc\uff0c\u53ef\u4ee5\u5206\u6790\u4ee5\u5f80\u7528\u6237\u7684\u64cd\u4f5c\u884c\u4e3a\u3001\u7c7b\u578b\u559c\u597d\uff0c\u5730\u57df\u5206\u5e03\u6216\u5176\u4ed6\u66f4\u591a\u4fe1\u606f;\n\n3.\u5982\u679c\u4e00\u4e2a\u5e94\u7528\u7684log\u540c\u65f6\u4e5f\u5206\u4e86\u591a\u4e2a\u7ea7\u522b\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f88\u8f7b\u6613\u5730\u5206\u6790\u5f97\u5230\u8be5\u5e94\u7528\u7684\u5065\u5eb7\u72b6\u51b5\uff0c\u53ca\u65f6\u53d1\u73b0\u95ee\u9898\u5e76\u5feb\u901f\u5b9a\u4f4d\u3001\u89e3\u51b3\u95ee\u9898\uff0c\u8865\u6551\u635f\u5931\u3002\n\n4.\u7b80\u5355\u6765\u8bb2\u5c31\u662f\u6211\u4eec\u901a\u8fc7\u8bb0\u5f55\u548c\u5206\u6790\u65e5\u5fd7\u53ef\u4ee5\u4e86\u89e3\u4e00\u4e2a\u7cfb\u7edf\u6216\u8f6f\u4ef6\u7a0b\u5e8f\u8fd0\u884c\u60c5\u51b5\u662f\u5426\u6b63\u5e38\uff0c\u4e5f\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u51fa\u73b0\u6545\u969c\u65f6\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898\u3002\u4e0d\u4ec5\u5728\u5f00\u53d1\u4e2d\uff0c\u5728\u8fd0\u7ef4\u4e2d\u65e5\u5fd7\u4e5f\u5f88\u91cd\u8981\uff0c\u65e5\u5fd7\u7684\u4f5c\u7528\u4e5f\u53ef\u4ee5\u7b80\u5355\u3002\u603b\u7ed3\u4e3a\u4ee5\u4e0b\u51e0\u70b9\uff1a\n\n1.\u7a0b\u5e8f\u8c03\u8bd5\n\n2.\u4e86\u89e3\u8f6f\u4ef6\u7a0b\u5e8f\u8fd0\u884c\u60c5\u51b5\uff0c\u662f\u5426\u6b63\u5e38\n\n3,\u8f6f\u4ef6\u7a0b\u5e8f\u8fd0\u884c\u6545\u969c\u5206\u6790\u4e0e\u95ee\u9898\u5b9a\u4f4d\n\n4,\u5982\u679c\u5e94\u7528\u7684\u65e5\u5fd7\u4fe1\u606f\u8db3\u591f\u8be6\u7ec6\u548c\u4e30\u5bcc\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u505a\u7528\u6237\u884c\u4e3a\u5206\u6790\n\n### 153.django\u4e2d\u95f4\u4ef6\u7684\u4f7f\u7528\uff1f\nDjango\u5728\u4e2d\u95f4\u4ef6\u4e2d\u9884\u7f6e\u4e86\u516d\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u516d\u4e2a\u65b9\u6cd5\u7684\u533a\u522b\u5728\u4e8e\u4e0d\u540c\u7684\u9636\u6bb5\u6267\u884c\uff0c\u5bf9\u8f93\u5165\u6216\u8f93\u51fa\u8fdb\u884c\u5e72\u9884\uff0c\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n1.\u521d\u59cb\u5316\uff1a\u65e0\u9700\u4efb\u4f55\u53c2\u6570\uff0c\u670d\u52a1\u5668\u54cd\u5e94\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u7684\u65f6\u5019\u8c03\u7528\u4e00\u6b21\uff0c\u7528\u4e8e\u786e\u5b9a\u662f\u5426\u542f\u7528\u5f53\u524d\u4e2d\u95f4\u4ef6\n```python\ndef __init__():\n    pass\n```\n2.\u5904\u7406\u8bf7\u6c42\u524d\uff1a\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e0a\u8c03\u7528\uff0c\u8fd4\u56deNone\u6216HttpResponse\u5bf9\u8c61\u3002\n```python\ndef process_request(request):\n    pass\n```\n3.\u5904\u7406\u89c6\u56fe\u524d:\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e0a\u8c03\u7528\uff0c\u8fd4\u56deNone\u6216HttpResponse\u5bf9\u8c61\u3002\n```python\ndef process_view(request,view_func,view_args,view_kwargs):\n    pass\n```\n4.\u5904\u7406\u6a21\u677f\u54cd\u5e94\u524d\uff1a\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e0a\u8c03\u7528\uff0c\u8fd4\u56de\u5b9e\u73b0\u4e86render\u65b9\u6cd5\u7684\u54cd\u5e94\u5bf9\u8c61\u3002\n```python\ndef process_template_response(request,response):\n    pass\n```\n5.\u5904\u7406\u54cd\u5e94\u540e\uff1a\u6240\u6709\u54cd\u5e94\u8fd4\u56de\u6d4f\u89c8\u5668\u4e4b\u524d\u88ab\u8c03\u7528\uff0c\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e0a\u8c03\u7528\uff0c\u8fd4\u56deHttpResponse\u5bf9\u8c61\u3002\n```python\ndef process_response(request,response):\n    pass\n```\n6.\u5f02\u5e38\u5904\u7406\uff1a\u5f53\u89c6\u56fe\u629b\u51fa\u5f02\u5e38\u65f6\u8c03\u7528\uff0c\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e0a\u8c03\u7528\uff0c\u8fd4\u56de\u4e00\u4e2aHttpResponse\u5bf9\u8c61\u3002\n```python\ndef process_exception(request,exception):\n    pass\n```\n### 154.\u8c08\u4e00\u4e0b\u4f60\u5bf9uWSGI\u548cnginx\u7684\u7406\u89e3\uff1f\n1.uWSGI\u662f\u4e00\u4e2aWeb\u670d\u52a1\u5668\uff0c\u5b83\u5b9e\u73b0\u4e86WSGI\u534f\u8bae\u3001uwsgi\u3001http\u7b49\u534f\u8bae\u3002Nginx\u4e2dHttpUwsgiModule\u7684\u4f5c\u7528\u662f\u4e0euWSGI\u670d\u52a1\u5668\u8fdb\u884c\u4ea4\u6362\u3002WSGI\u662f\u4e00\u79cdWeb\u670d\u52a1\u5668\u7f51\u5173\u63a5\u53e3\u3002\u5b83\u662f\u4e00\u4e2aWeb\u670d\u52a1\u5668\uff08\u5982nginx\uff0cuWSGI\u7b49\u670d\u52a1\u5668\uff09\u4e0eweb\u5e94\u7528\uff08\u5982\u7528Flask\u6846\u67b6\u5199\u7684\u7a0b\u5e8f\uff09\u901a\u4fe1\u7684\u4e00\u79cd\u89c4\u8303\u3002\n\n\u8981\u6ce8\u610fWSGI/uwsgi/uWSGI\u8fd9\u4e09\u4e2a\u6982\u5ff5\u7684\u533a\u5206\u3002\n\nWSGI\u662f\u4e00\u79cd\u901a\u4fe1\u534f\u8bae\u3002\n\nuwsgi\u662f\u4e00\u79cd\u7ebf\u8def\u534f\u8bae\u800c\u4e0d\u662f\u901a\u4fe1\u534f\u8bae\uff0c\u5728\u6b64\u5e38\u7528\u4e8e\u5728uWSGI\u670d\u52a1\u5668\u4e0e\u5176\u4ed6\u7f51\u7edc\u670d\u52a1\u5668\u7684\u6570\u636e\u901a\u4fe1\u3002\n\nuWSGI\u662f\u5b9e\u73b0\u4e86uwsgi\u548cWSGI\u4e24\u79cd\u534f\u8bae\u7684Web\u670d\u52a1\u5668\u3002\n\nnginx \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u9ad8\u6027\u80fd\u7684HTTP\u670d\u52a1\u5668\u548c\u53cd\u5411\u4ee3\u7406\uff1a\n\n1.\u4f5c\u4e3aweb\u670d\u52a1\u5668\uff0c\u5b83\u5904\u7406\u9759\u6001\u6587\u4ef6\u548c\u7d22\u5f15\u6587\u4ef6\u6548\u679c\u975e\u5e38\u9ad8\n\n2.\u5b83\u7684\u8bbe\u8ba1\u975e\u5e38\u6ce8\u91cd\u6548\u7387\uff0c\u6700\u5927\u652f\u63015\u4e07\u4e2a\u5e76\u53d1\u8fde\u63a5\uff0c\u4f46\u53ea\u5360\u7528\u5f88\u5c11\u7684\u5185\u5b58\u7a7a\u95f4\n\n3.\u7a33\u5b9a\u6027\u9ad8\uff0c\u914d\u7f6e\u7b80\u6d01\u3002\n\n4.\u5f3a\u5927\u7684\u53cd\u5411\u4ee3\u7406\u548c\u8d1f\u8f7d\u5747\u8861\u529f\u80fd\uff0c\u5e73\u8861\u96c6\u7fa4\u4e2d\u5404\u4e2a\u670d\u52a1\u5668\u7684\u8d1f\u8f7d\u538b\u529b\u5e94\u7528\n\n### 155.Python\u4e2d\u4e09\u5927\u6846\u67b6\u5404\u81ea\u7684\u5e94\u7528\u573a\u666f\uff1f\ndjango:\u4e3b\u8981\u662f\u7528\u6765\u641e\u5feb\u901f\u5f00\u53d1\u7684\uff0c\u4ed6\u7684\u4eae\u70b9\u5c31\u662f\u5feb\u901f\u5f00\u53d1\uff0c\u8282\u7ea6\u6210\u672c\uff0c,\u5982\u679c\u8981\u5b9e\u73b0\u9ad8\u5e76\u53d1\u7684\u8bdd\uff0c\u5c31\u8981\u5bf9django\u8fdb\u884c\u4e8c\u6b21\u5f00\u53d1\uff0c\u6bd4\u5982\u628a\u6574\u4e2a\u7b28\u91cd\u7684\u6846\u67b6\u7ed9\u62c6\u6389\u81ea\u5df1\u5199socket\u5b9e\u73b0http\u7684\u901a\u4fe1,\u5e95\u5c42\u7528\u7eafc,c++\u5199\u63d0\u5347\u6548\u7387\uff0cORM\u6846\u67b6\u7ed9\u5e72\u6389\uff0c\u81ea\u5df1\u7f16\u5199\u5c01\u88c5\u4e0e\u6570\u636e\u5e93\u4ea4\u4e92\u7684\u6846\u67b6,ORM\u867d\u7136\u9762\u5411\u5bf9\u8c61\u6765\u64cd\u4f5c\u6570\u636e\u5e93\uff0c\u4f46\u662f\u5b83\u7684\u6548\u7387\u5f88\u4f4e\uff0c\u4f7f\u7528\u5916\u952e\u6765\u8054\u7cfb\u8868\u4e0e\u8868\u4e4b\u95f4\u7684\u67e5\u8be2;\nflask: \u8f7b\u91cf\u7ea7\uff0c\u4e3b\u8981\u662f\u7528\u6765\u5199\u63a5\u53e3\u7684\u4e00\u4e2a\u6846\u67b6\uff0c\u5b9e\u73b0\u524d\u540e\u7aef\u5206\u79bb\uff0c\u63d0\u8003\u5f00\u53d1\u6548\u7387\uff0cFlask\u672c\u8eab\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5185\u6838\uff0c\u5176\u4ed6\u51e0\u4e4e\u6240\u6709\u7684\u529f\u80fd\u90fd\u8981\u7528\u5230\u6269\u5c55(\u90ae\u4ef6\u6269\u5c55Flask-Mail\uff0c\u7528\u6237\u8ba4\u8bc1Flask-Login),\u90fd\u9700\u8981\u7528\u7b2c\u4e09\u65b9\u7684\u6269\u5c55\u6765\u5b9e\u73b0\u3002\u6bd4\u5982\u53ef\u4ee5\u7528Flask-extension\u52a0\u5165ORM\u3001\u6587\u4ef6\u4e0a\u4f20\u3001\u8eab\u4efd\u9a8c\u8bc1\u7b49\u3002Flask\u6ca1\u6709\u9ed8\u8ba4\u4f7f\u7528\u7684\u6570\u636e\u5e93\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9MySQL\uff0c\u4e5f\u53ef\u4ee5\u7528NoSQL\u3002\n\n\u5176WSGI\u5de5\u5177\u7bb1\u7528Werkzeug(\u8def\u7531\u6a21\u5757)\uff0c\u6a21\u677f\u5f15\u64ce\u5219\u4f7f\u7528Jinja2,\u8fd9\u4e24\u4e2a\u4e5f\u662fFlask\u6846\u67b6\u7684\u6838\u5fc3\u3002\n\nTornado\uff1a Tornado\u662f\u4e00\u79cdWeb\u670d\u52a1\u5668\u8f6f\u4ef6\u7684\u5f00\u6e90\u7248\u672c\u3002Tornado\u548c\u73b0\u5728\u7684\u4e3b\u6d41Web\u670d\u52a1\u5668\u6846\u67b6\uff08\u5305\u62ec\u5927\u591a\u6570Python\u7684\u6846\u67b6\uff09\u6709\u7740\u660e\u663e\u7684\u533a\u522b\uff1a\u5b83\u662f\u975e\u963b\u585e\u5f0f\u670d\u52a1\u5668\uff0c\u800c\u4e14\u901f\u5ea6\u76f8\u5f53\u5feb\u3002\u5f97\u5229\u4e8e\u5176\u975e\u963b\u585e\u7684\u65b9\u5f0f\u548c\u5bf9epoll\u7684\u8fd0\u7528\uff0cTornado\u6bcf\u79d2\u53ef\u4ee5\u5904\u7406\u6570\u4ee5\u5343\u8ba1\u7684\u8fde\u63a5\u56e0\u6b64Tornado\u662f\u5b9e\u65f6Web\u670d\u52a1\u7684\u4e00\u4e2a\u7406\u60f3\u6846\u67b6\n### 156.Django\u4e2d\u54ea\u91cc\u7528\u5230\u4e86\u7ebf\u7a0b\uff1f\u54ea\u91cc\u7528\u5230\u4e86\u534f\u7a0b\uff1f\u54ea\u91cc\u7528\u5230\u4e86\u8fdb\u7a0b\uff1f\n1.Django\u4e2d\u8017\u65f6\u7684\u4efb\u52a1\u7528\u4e00\u4e2a\u8fdb\u7a0b\u6216\u8005\u7ebf\u7a0b\u6765\u6267\u884c\uff0c\u6bd4\u5982\u53d1\u90ae\u4ef6\uff0c\u4f7f\u7528celery.\n\n2.\u90e8\u7f72django\u9879\u76ee\u662f\u65f6\u5019\uff0c\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u4e86\u8fdb\u7a0b\u548c\u534f\u7a0b\u7684\u76f8\u5173\u914d\u7f6e\u3002\n\n### 157.\u6709\u7528\u8fc7Django REST framework\u5417\uff1f\nDjango REST framework\u662f\u4e00\u4e2a\u5f3a\u5927\u800c\u7075\u6d3b\u7684Web API\u5de5\u5177\u3002\u4f7f\u7528RESTframework\u7684\u7406\u7531\u6709\uff1a\n\nWeb browsable API\u5bf9\u5f00\u53d1\u8005\u6709\u6781\u5927\u7684\u597d\u5904\n\n\u5305\u62ecOAuth1a\u548cOAuth2\u7684\u8ba4\u8bc1\u7b56\u7565\n\n\u652f\u6301ORM\u548c\u975eORM\u6570\u636e\u8d44\u6e90\u7684\u5e8f\u5217\u5316\n\n\u5168\u7a0b\u81ea\u5b9a\u4e49\u5f00\u53d1--\u5982\u679c\u4e0d\u60f3\u4f7f\u7528\u66f4\u52a0\u5f3a\u5927\u7684\u529f\u80fd\uff0c\u53ef\u4ec5\u4ec5\u4f7f\u7528\u5e38\u89c4\u7684function-based views\u989d\u5916\u7684\u6587\u6863\u548c\u5f3a\u5927\u7684\u793e\u533a\u652f\u6301\n### 158.\u5bf9cookies\u4e0esession\u7684\u4e86\u89e3\uff1f\u4ed6\u4eec\u80fd\u5355\u72ec\u7528\u5417\uff1f\nSession\u91c7\u7528\u7684\u662f\u5728\u670d\u52a1\u5668\u7aef\u4fdd\u6301\u72b6\u6001\u7684\u65b9\u6848\uff0c\u800cCookie\u91c7\u7528\u7684\u662f\u5728\u5ba2\u6237\u7aef\u4fdd\u6301\u72b6\u6001\u7684\u65b9\u6848\u3002\u4f46\u662f\u7981\u7528Cookie\u5c31\u4e0d\u80fd\u5f97\u5230Session\u3002\u56e0\u4e3aSession\u662f\u7528Session ID\u6765\u786e\u5b9a\u5f53\u524d\u5bf9\u8bdd\u6240\u5bf9\u5e94\u7684\u670d\u52a1\u5668Session\uff0c\u800cSession ID\u662f\u901a\u8fc7Cookie\u6765\u4f20\u9012\u7684\uff0c\u7981\u7528Cookie\u76f8\u5f53\u4e8eSessionID,\u4e5f\u5c31\u5f97\u4e0d\u5230Session\u3002\n\n## \u722c\u866b\n### 159.\u8bd5\u5217\u51fa\u81f3\u5c11\u4e09\u79cd\u76ee\u524d\u6d41\u884c\u7684\u5927\u578b\u6570\u636e\u5e93\n### 160.\u5217\u4e3e\u60a8\u4f7f\u7528\u8fc7\u7684Python\u7f51\u7edc\u722c\u866b\u6240\u7528\u5230\u7684\u7f51\u7edc\u6570\u636e\u5305?\n\nrequests, urllib,urllib2, httplib2\n\n### 161.\u722c\u53d6\u6570\u636e\u540e\u4f7f\u7528\u54ea\u4e2a\u6570\u636e\u5e93\u5b58\u50a8\u6570\u636e\u7684\uff0c\u4e3a\u4ec0\u4e48\uff1f\n\n### 162.\u4f60\u7528\u8fc7\u7684\u722c\u866b\u6846\u67b6\u6216\u8005\u6a21\u5757\u6709\u54ea\u4e9b\uff1f\u4f18\u7f3a\u70b9\uff1f\n\nPython\u81ea\u5e26\uff1aurllib,urllib2\n\n\u7b2c\u4e09\u65b9\uff1arequests\n\n\u6846\u67b6\uff1a Scrapy\n\nurllib \u548curllib2\u6a21\u5757\u90fd\u505a\u4e0e\u8bf7\u6c42URL\u76f8\u5173\u7684\u64cd\u4f5c\uff0c\u4f46\u4ed6\u4eec\u63d0\u4f9b\u4e0d\u540c\u7684\u529f\u80fd\u3002\n\nurllib2: urllib2.urlopen\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2aRequest\u5bf9\u8c61\u6216\u8005url,(\u5728\u63a5\u53d7Request\u5bf9\u8c61\u65f6\uff0c\u5e76\u4ee5\u6b64\u53ef\u4ee5\u6765\u8bbe\u7f6e\u4e00\u4e2aURL\u7684headers),urllib.urlopen\u53ea\u63a5\u6536\u4e00\u4e2aurl\u3002\n\nurllib \u6709urlencode,urllib2\u6ca1\u6709\uff0c\u56e0\u6b64\u603b\u662furllib, urllib2\u5e38\u4f1a\u4e00\u8d77\u4f7f\u7528\u7684\u539f\u56e0\n\nscrapy\u662f\u5c01\u88c5\u8d77\u6765\u7684\u6846\u67b6\uff0c\u4ed6\u5305\u542b\u4e86\u4e0b\u8f7d\u5668\uff0c\u89e3\u6790\u5668\uff0c\u65e5\u5fd7\u53ca\u5f02\u5e38\u5904\u7406\uff0c\u57fa\u4e8e\u591a\u7ebf\u7a0b\uff0ctwisted\u7684\u65b9\u5f0f\u5904\u7406\uff0c\u5bf9\u4e8e\u56fa\u5b9a\u5355\u4e2a\u7f51\u7ad9\u7684\u722c\u53d6\u5f00\u53d1\uff0c\u6709\u4f18\u52bf\uff0c\u4f46\u662f\u5bf9\u4e8e\u591a\u7f51\u7ad9\u722c\u53d6100\u4e2a\u7f51\u7ad9\uff0c\u5e76\u53d1\u53ca\u5206\u5e03\u5f0f\u5904\u7406\u4e0d\u591f\u7075\u6d3b\uff0c\u4e0d\u4fbf\u8c03\u6574\u4e0e\u6269\u5c55\n\nrequests\u662f\u4e00\u4e2aHTTP\u5e93\uff0c\u5b83\u53ea\u662f\u7528\u6765\u8bf7\u6c42\uff0c\u5b83\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5e93\uff0c\u4e0b\u8f7d\uff0c\u89e3\u6790\u5168\u90e8\u81ea\u5df1\u5904\u7406\uff0c\u7075\u6d3b\u6027\u9ad8\n\nScrapy\u4f18\u70b9\uff1a\u5f02\u6b65\uff0cxpath\uff0c\u5f3a\u5927\u7684\u7edf\u8ba1\u548clog\u7cfb\u7edf\uff0c\u652f\u6301\u4e0d\u540curl\u3002shell\u65b9\u4fbf\u72ec\u7acb\u8c03\u8bd5\u3002\u5199middleware\u65b9\u4fbf\u8fc7\u6ee4\u3002\u901a\u8fc7\u7ba1\u9053\u5b58\u5165\u6570\u636e\u5e93\n\n### 163.\u5199\u722c\u866b\u662f\u7528\u591a\u8fdb\u7a0b\u597d\uff1f\u8fd8\u662f\u591a\u7ebf\u7a0b\u597d\uff1f\n### 164.\u5e38\u89c1\u7684\u53cd\u722c\u866b\u548c\u5e94\u5bf9\u65b9\u6cd5\uff1f\n### 165.\u89e3\u6790\u7f51\u9875\u7684\u89e3\u6790\u5668\u4f7f\u7528\u6700\u591a\u7684\u662f\u54ea\u51e0\u4e2a?\n### 166.\u9700\u8981\u767b\u5f55\u7684\u7f51\u9875\uff0c\u5982\u4f55\u89e3\u51b3\u540c\u65f6\u9650\u5236ip\uff0ccookie,session\n### 167.\u9a8c\u8bc1\u7801\u7684\u89e3\u51b3?\n### 168.\u4f7f\u7528\u6700\u591a\u7684\u6570\u636e\u5e93\uff0c\u5bf9\u4ed6\u4eec\u7684\u7406\u89e3\uff1f\n### 169.\u7f16\u5199\u8fc7\u54ea\u4e9b\u722c\u866b\u4e2d\u95f4\u4ef6\uff1f\n### 170.\u201c\u6781\u9a8c\u201d\u6ed1\u52a8\u9a8c\u8bc1\u7801\u5982\u4f55\u7834\u89e3\uff1f\n### 171.\u722c\u866b\u591a\u4e45\u722c\u4e00\u6b21\uff0c\u722c\u4e0b\u6765\u7684\u6570\u636e\u662f\u600e\u4e48\u5b58\u50a8\uff1f\n### 172.cookie\u8fc7\u671f\u7684\u5904\u7406\u95ee\u9898\uff1f\n### 173.\u52a8\u6001\u52a0\u8f7d\u53c8\u5bf9\u53ca\u65f6\u6027\u8981\u6c42\u5f88\u9ad8\u600e\u4e48\u5904\u7406\uff1f\n### 174.HTTPS\u6709\u4ec0\u4e48\u4f18\u70b9\u548c\u7f3a\u70b9\uff1f\n### 175.HTTPS\u662f\u5982\u4f55\u5b9e\u73b0\u5b89\u5168\u4f20\u8f93\u6570\u636e\u7684\uff1f\n### 176.TTL\uff0cMSL\uff0cRTT\u5404\u662f\u4ec0\u4e48\uff1f\n### 177.\u8c08\u4e00\u8c08\u4f60\u5bf9Selenium\u548cPhantomJS\u4e86\u89e3\n### 178.\u5e73\u5e38\u600e\u4e48\u4f7f\u7528\u4ee3\u7406\u7684 \uff1f\n### 179.\u5b58\u653e\u5728\u6570\u636e\u5e93(redis\u3001mysql\u7b49)\u3002\n### 180.\u600e\u4e48\u76d1\u63a7\u722c\u866b\u7684\u72b6\u6001?\n### 181.\u63cf\u8ff0\u4e0bscrapy\u6846\u67b6\u8fd0\u884c\u7684\u673a\u5236\uff1f\n### 182.\u8c08\u8c08\u4f60\u5bf9Scrapy\u7684\u7406\u89e3\uff1f\n### 183.\u600e\u4e48\u6837\u8ba9 scrapy \u6846\u67b6\u53d1\u9001\u4e00\u4e2a post \u8bf7\u6c42\uff08\u5177\u4f53\u5199\u51fa\u6765\uff09\n### 184.\u600e\u4e48\u76d1\u63a7\u722c\u866b\u7684\u72b6\u6001 \uff1f\n### 185.\u600e\u4e48\u5224\u65ad\u7f51\u7ad9\u662f\u5426\u66f4\u65b0\uff1f\n### 186.\u56fe\u7247\u3001\u89c6\u9891\u722c\u53d6\u600e\u4e48\u7ed5\u8fc7\u9632\u76d7\u8fde\u63a5\n### 187.\u4f60\u722c\u51fa\u6765\u7684\u6570\u636e\u91cf\u5927\u6982\u6709\u591a\u5927\uff1f\u5927\u6982\u591a\u957f\u65f6\u95f4\u722c\u4e00\u6b21\uff1f\n### 188.\u7528\u4ec0\u4e48\u6570\u636e\u5e93\u5b58\u722c\u4e0b\u6765\u7684\u6570\u636e\uff1f\u90e8\u7f72\u662f\u4f60\u505a\u7684\u5417\uff1f\u600e\u4e48\u90e8\u7f72\uff1f\n### 189.\u589e\u91cf\u722c\u53d6\n### 190.\u722c\u53d6\u4e0b\u6765\u7684\u6570\u636e\u5982\u4f55\u53bb\u91cd\uff0c\u8bf4\u4e00\u4e0bscrapy\u7684\u5177\u4f53\u7684\u7b97\u6cd5\u4f9d\u636e\u3002\n### 191.Scrapy\u7684\u4f18\u7f3a\u70b9?\n### 192.\u600e\u4e48\u8bbe\u7f6e\u722c\u53d6\u6df1\u5ea6\uff1f\n### 193.scrapy\u548cscrapy-redis\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u4e3a\u4ec0\u4e48\u9009\u62e9redis\u6570\u636e\u5e93\uff1f\n### 194.\u5206\u5e03\u5f0f\u722c\u866b\u4e3b\u8981\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\uff1f\n### 195.\u4ec0\u4e48\u662f\u5206\u5e03\u5f0f\u5b58\u50a8\uff1f\n### 196.\u4f60\u6240\u77e5\u9053\u7684\u5206\u5e03\u5f0f\u722c\u866b\u65b9\u6848\u6709\u54ea\u4e9b\uff1f\n### 197.scrapy-redis\uff0c\u6709\u505a\u8fc7\u5176\u4ed6\u7684\u5206\u5e03\u5f0f\u722c\u866b\u5417\uff1f\n\n# \u6570\u636e\u5e93\n## MySQL\n### 198.\u4e3b\u952e \u8d85\u952e \u5019\u9009\u952e \u5916\u952e\n\n\u4e3b\u952e\uff1a\u6570\u636e\u5e93\u8868\u4e2d\u5bf9\u5b58\u50a8\u6570\u636e\u5bf9\u8c61\u4e88\u4ee5\u552f\u4e00\u548c\u5b8c\u6574\u6807\u8bc6\u7684\u6570\u636e\u5217\u6216\u5c5e\u6027\u7684\u7ec4\u5408\u3002\u4e00\u4e2a\u6570\u636e\u5217\u53ea\u80fd\u6709\u4e00\u4e2a\u4e3b\u952e\uff0c\u4e14\u4e3b\u952e\u7684\u53d6\u503c\u4e0d\u80fd\u7f3a\u5931\uff0c\u5373\u4e0d\u80fd\u4e3a\u7a7a\u503c(Null).\n\n\u8d85\u952e\uff1a\u5728\u5173\u7cfb\u4e2d\u80fd\u552f\u4e00\u6807\u8bc6\u5143\u7ec4\u7684\u5c5e\u6027\u96c6\u79f0\u4e3a\u5173\u7cfb\u6a21\u5f0f\u7684\u8d85\u952e\u3002\u4e00\u4e2a\u5c5e\u6027\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u8d85\u952e\uff0c\u591a\u4e2a\u5c5e\u6027\u7ec4\u5408\u5728\u4e00\u8d77\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u8d85\u952e\u3002\u8d85\u952e\u5305\u542b\u5019\u9009\u952e\u548c\u4e3b\u952e\u3002\n\n\u5019\u9009\u952e\uff1a\u662f\u6700\u5c0f\u8d85\u952e\uff0c\u5373\u6ca1\u6709\u5197\u4f59\u5143\u7d20\u7684\u8d85\u952e\u3002\n\n\u5916\u952e\uff1a\u5728\u4e00\u4e2a\u8868\u4e2d\u5b58\u5728\u7684\u53e6\u4e00\u4e2a\u8868\u7684\u4e3b\u952e\u79f0\u6b64\u8868\u7684\u5916\u952e\u3002\n\n### 199.\u89c6\u56fe\u7684\u4f5c\u7528\uff0c\u89c6\u56fe\u53ef\u4ee5\u66f4\u6539\u4e48\uff1f\n\n\u89c6\u56fe\u662f\u865a\u62df\u7684\u8868\uff0c\u4e0e\u5305\u542b\u6570\u636e\u7684\u8868\u4e0d\u4e00\u6837\uff0c\u89c6\u56fe\u53ea\u5305\u542b\u4f7f\u7528\u65f6\u52a8\u6001\u68c0\u7d22\u6570\u636e\u7684\u67e5\u8be2;\u4e0d\u5305\u542b\u4efb\u4f55\u5217\u6216\u6570\u636e\u3002\u4f7f\u7528\u89c6\u56fe\u53ef\u4ee5\u7b80\u5316\u590d\u6742\u7684sql\u64cd\u4f5c\uff0c\u9690\u85cf\u5177\u4f53\u7684\u7ec6\u8282\uff0c\u4fdd\u62a4\u6570\u636e;\u89c6\u56fe\u521b\u5efa\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0e\u8868\u76f8\u540c\u7684\u65b9\u5f0f\u5229\u7528\u5b83\u4eec\u3002\n\n\u89c6\u56fe\u4e0d\u80fd\u88ab\u7d22\u5f15\uff0c\u4e5f\u4e0d\u80fd\u6709\u5173\u8054\u7684\u89e6\u53d1\u5668\u6216\u9ed8\u8ba4\u503c\uff0c\u5982\u679c\u89c6\u56fe\u672c\u8eab\u5185\u6709order by\u5219\u5bf9\u89c6\u56fe\u518d\u6b21order by\u5c06\u88ab\u8986\u76d6\u3002\n\n\u521b\u5efa\u89c6\u56fe\uff1a create view xxx as xxxxxx\n\n\u5bf9\u4e8e\u67d0\u4e9b\u89c6\u56fe\u6bd4\u5982\u672a\u4f7f\u7528\u8054\u7ed3\u5b50\u67e5\u8be2\u5206\u7ec4\u805a\u96c6\u51fd\u6570Distinct Union\u7b49\uff0c\u662f\u53ef\u4ee5\u5bf9\u5176\u66f4\u65b0\u7684\uff0c\u5bf9\u89c6\u56fe\u7684\u66f4\u65b0\u5c06\u5bf9\u57fa\u8868\u8fdb\u884c\u66f4\u65b0;\u4f46\u662f\u89c6\u56fe\u4e3b\u8981\u7528\u4e8e\u7b80\u5316\u68c0\u7d22\uff0c\u4fdd\u62a4\u6570\u636e\uff0c\u5e76\u4e0d\u7528\u4e8e\u66f4\u65b0\uff0c\u800c\u4e14\u5927\u90e8\u5206\u89c6\u56fe\u90fd\u4e0d\u53ef\u4ee5\u66f4\u65b0\u3002\n\n### 200.drop,delete\u4e0etruncate\u7684\u533a\u522b\n\ndrop\u76f4\u63a5\u5220\u6389\u8868\uff0ctruncate\u5220\u9664\u8868\u4e2d\u6570\u636e\uff0c\u518d\u63d2\u5165\u65f6\u81ea\u589e\u957fid\u53c8\u4ece1\u5f00\u59cb\uff0cdelete\u5220\u9664\u8868\u4e2d\u6570\u636e\uff0c\u53ef\u4ee5\u52a0where\u5b57\u53e5\u3002\n\n1.delete \u8bed\u53e5\u6267\u884c\u5220\u9664\u7684\u8fc7\u7a0b\u662f\u6bcf\u6b21\u4ece\u8868\u4e2d\u5220\u9664\u4e00\u884c\uff0c\u5e76\u4e14\u540c\u65f6\u5c06\u8be5\u884c\u7684\u5220\u9664\u64cd\u4f5c\u4f5c\u4e3a\u4e8b\u52a1\u8bb0\u5f55\u5728\u65e5\u5fd7\u4e2d\u4fdd\u5b58\u4ee5\u4fbf\u8fdb\u884c\u56de\u6eda\u64cd\u4f5c\u3002truncate table\u5219\u4e00\u6b21\u6027\u5730\u4ece\u8868\u4e2d\u5220\u9664\u6240\u6709\u7684\u6570\u636e\u5e76\u4e0d\u628a\u5355\u72ec\u7684\u5220\u9664\u64cd\u4f5c\u8bb0\u5f55\u8bb0\u5165\u65e5\u5fd7\u4fdd\u5b58\uff0c\u5220\u9664\u884c\u662f\u4e0d\u80fd\u6062\u590d\u7684\u3002\u5e76\u4e14\u5728\u5220\u9664\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u6fc0\u6d3b\u4e0e\u8868\u6709\u5173\u7684\u5220\u9664\u89e6\u53d1\u5668\uff0c\u6267\u884c\u901f\u5ea6\u5feb\u3002\n\n2.\u8868\u548c\u7d22\u5f15\u6240\u5360\u7a7a\u95f4\u3002\u5f53\u8868\u88abtruncate\u540e\uff0c\u8fd9\u4e2a\u8868\u548c\u7d22\u5f15\u6240\u5360\u7528\u7684\u7a7a\u95f4\u4f1a\u6062\u590d\u5230\u521d\u59cb\u5927\u5c0f\uff0c\u800cdelete\u64cd\u4f5c\u4e0d\u4f1a\u51cf\u5c11\u8868\u6216\u7d22\u5f15\u6240\u5360\u7528\u7684\u7a7a\u95f4\u3002drop\u8bed\u53e5\u5c06\u8868\u6240\u5360\u7528\u7684\u7a7a\u95f4\u5168\u91ca\u653e\u6389\u3002\n\n3.\u4e00\u822c\u800c\u8a00\uff0cdrop>truncate>delete\n\n4.\u5e94\u7528\u8303\u56f4\u3002truncate\u53ea\u80fd\u5bf9table\uff0cdelete\u53ef\u4ee5\u662ftable\u548cview\n\n5.truncate\u548cdelete\u53ea\u5220\u9664\u6570\u636e\uff0c\u800cdrop\u5219\u5220\u9664\u6574\u4e2a\u8868\uff08\u7ed3\u6784\u548c\u6570\u636e)\n\n6.truncate\u4e0e\u4e0d\u5e26where\u7684delete:\u53ea\u5220\u9664\u6570\u636e\uff0c\u800c\u4e0d\u5220\u9664\u8868\u7684\u7ed3\u6784\uff08\u5b9a\u4e49\uff09drop\u8bed\u53e5\u5c06\u5220\u9664\u8868\u7684\u7ed3\u6784\u88ab\u4f9d\u8d56\u7684\u7ea6\u675f(constrain),\u89e6\u53d1\u5668\uff08trigger)\u7d22\u5f15(index);\u4f9d\u8d56\u4e8e\u8be5\u8868\u7684\u5b58\u50a8\u8fc7\u7a0b/\u51fd\u6570\u5c06\u88ab\u4fdd\u7559\uff0c\u4f46\u5176\u72b6\u6001\u4f1a\u53d8\u4e3a:invalid.\n\n### 201.\u7d22\u5f15\u7684\u5de5\u4f5c\u539f\u7406\u53ca\u5176\u79cd\u7c7b\n\n\u6570\u636e\u5e93\u7d22\u5f15\uff0c\u662f\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u6392\u5e8f\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u534f\u52a9\u5feb\u901f\u67e5\u8be2\uff0c\u66f4\u65b0\u6570\u636e\u5e93\u8868\u4e2d\u6570\u636e\u3002\u7d22\u5f15\u7684\u5b9e\u73b0\u901a\u5e38\u4f7f\u7528B\u6811\u4ee5\u5176\u53d8\u79cdB+\u6811\u3002\n\n\u5728\u6570\u636e\u4e4b\u5916\uff0c\u6570\u636e\u5e93\u7cfb\u7edf\u8fd8\u7ef4\u62a4\u7740\u6ee1\u8db3\u7279\u5b9a\u67e5\u627e\u7b97\u6cd5\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5f15\u7528\uff08\u6307\u5411\uff09\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u4e0a\u5b9e\u73b0\u9ad8\u7ea7\u67e5\u627e\u7b97\u6cd5\u3002\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5c31\u662f\u7d22\u5f15\u3002\n\n\u4e3a\u8868\u8bbe\u7f6e\u7d22\u5f15\u8981\u4ed8\u51fa\u4ee3\u4ef7\u7684\uff1a\u4e00\u662f\u589e\u52a0\u4e86\u6570\u636e\u5e93\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e8c\u662f\u5728\u63d2\u5165\u548c\u4fee\u6539\u6570\u636e\u65f6\u8981\u82b1\u8d39\u8f83\u591a\u7684\u65f6\u95f4\uff08\u56e0\u4e3a\u7d22\u5f15\u4e5f\u8981\u968f\u4e4b\u53d8\u52a8\uff09\n\n### 202.\u8fde\u63a5\u7684\u79cd\u7c7b\n### 203.\u6570\u636e\u5e93\u4f18\u5316\u7684\u601d\u8def\n### 204.\u5b58\u50a8\u8fc7\u7a0b\u4e0e\u89e6\u53d1\u5668\u7684\u533a\u522b\n### 205.\u60b2\u89c2\u9501\u548c\u4e50\u89c2\u9501\u662f\u4ec0\u4e48\uff1f\n### 206.\u4f60\u5e38\u7528\u7684mysql\u5f15\u64ce\u6709\u54ea\u4e9b?\u5404\u5f15\u64ce\u95f4\u6709\u4ec0\u4e48\u533a\u522b?\n\n## Redis\n### 207.Redis\u5b95\u673a\u600e\u4e48\u89e3\u51b3?\n\n\u5b95\u673a:\u670d\u52a1\u5668\u505c\u6b62\u670d\u52a1\u2018\n\n\u5982\u679c\u53ea\u6709\u4e00\u53f0redis\uff0c\u80af\u5b9a \u4f1a\u9020\u6210\u6570\u636e\u4e22\u5931\uff0c\u65e0\u6cd5\u633d\u6551\n\n\u591a\u53f0redis\u6216\u8005\u662fredis\u96c6\u7fa4\uff0c\u5b95\u673a\u5219\u9700\u8981\u5206\u4e3a\u5728\u4e3b\u4ece\u6a21\u5f0f\u4e0b\u533a\u5206\u6765\u770b\uff1a\n\nslave\u4eceredis\u5b95\u673a\uff0c\u914d\u7f6e\u4e3b\u4ece\u590d\u5236\u7684\u65f6\u5019\u624d\u914d\u7f6e\u4ece\u7684redis\uff0c\u4ece\u7684\u4f1a\u4ece\u4e3b\u7684redis\u4e2d\u8bfb\u53d6\u4e3b\u7684redis\u7684\u64cd\u4f5c\u65e5\u5fd71\uff0c\u5728redis\u4e2d\u4ece\u5e93\u91cd\u65b0\u542f\u52a8\u540e\u4f1a\u81ea\u52a8\u52a0\u5165\u5230\u4e3b\u4ece\u67b6\u6784\u4e2d\uff0c\u81ea\u52a8\u5b8c\u6210\u540c\u6b65\u6570\u636e;\n\n2, \u5982\u679c\u4ece\u6570\u636e\u5e93\u5b9e\u73b0\u4e86\u6301\u4e45\u5316\uff0c\u6b64\u65f6\u5343\u4e07\u4e0d\u8981\u7acb\u9a6c\u91cd\u542f\u670d\u52a1\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u9020\u6210\u6570\u636e\u4e22\u5931\uff0c\u6b63\u786e\u7684\u64cd\u4f5c\u5982\u4e0b\uff1a\u5728slave\u6570\u636e\u4e0a\u6267\u884cSLAVEOF ON ONE,\u6765\u65ad\u5f00\u4e3b\u4ece\u5173\u7cfb\u5e76\u628aslave\u5347\u7ea7\u4e3a\u4e3b\u5e93\uff0c\u6b64\u65f6\u91cd\u65b0\u542f\u52a8\u4e3b\u6570\u636e\u5e93\uff0c\u6267\u884cSLAVEOF\uff0c\u628a\u5b83\u8bbe\u7f6e\u4e3a\u4ece\u5e93\uff0c\u8fde\u63a5\u5230\u4e3b\u7684redis\u4e0a\u9762\u505a\u4e3b\u4ece\u590d\u5236\uff0c\u81ea\u52a8\u5907\u4efd\u6570\u636e\u3002\n\n\u4ee5\u4e0a\u8fc7\u7a0b\u5f88\u5bb9\u6613\u914d\u7f6e\u9519\u8bef\uff0c\u53ef\u4ee5\u4f7f\u7528redis\u63d0\u4f9b\u7684\u54e8\u5175\u673a\u5236\u6765\u7b80\u5316\u4e0a\u9762\u7684\u64cd\u4f5c\u3002\u7b80\u5355\u7684\u65b9\u6cd5:redis\u7684\u54e8\u5175(sentinel)\u7684\u529f\u80fd\n\n### 208.redis\u548cmecached\u7684\u533a\u522b\uff0c\u4ee5\u53ca\u4f7f\u7528\u573a\u666f\n\n\u533a\u522b\n\n1\u3001redis\u548cMemcache\u90fd\u662f\u5c06\u6570\u636e\u5b58\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u90fd\u662f\u5185\u5b58\u6570\u636e\u5e93\u3002\u4e0d\u8fc7memcache\u8fd8\u53ef\u4ee5\u7528\u4e8e\u7f13\u5b58\u5176\u4ed6\u4e1c\u897f\uff0c\u4f8b\u5982\u56fe\u7247\uff0c\u89c6\u9891\u7b49\u7b49\n\n2\u3001Redis\u4e0d\u4ec5\u4ec5\u652f\u6301\u7b80\u5355\u7684k/v\u7c7b\u578b\u7684\u6570\u636e\uff0c\u540c\u65f6\u8fd8\u63d0\u4f9blist,set,hash\u7b49\u6570\u636e\u7ed3\u6784\u7684\u5b58\u50a8\n\n3\u3001\u865a\u62df\u5185\u5b58-redis\u5f53\u7269\u6d41\u5185\u5b58\u7528\u5b8c\u65f6\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e9b\u5f88\u4e45\u6ca1\u7528\u7684value\u4ea4\u6362\u5230\u78c1\u76d8\n\n4\u3001\u8fc7\u671f\u7b56\u7565-memcache\u5728set\u65f6\u5c31\u6307\u5b9a\uff0c\u4f8b\u5982set key1 0 0 8\uff0c\u5373\u6c38\u4e0d\u8fc7\u671f\u3002Redis\u53ef\u4ee5\u901a\u8fc7\u4f8b\u5982expire\u8bbe\u5b9a\uff0c\u4f8b\u5982expire name 10\n\n5\u3001\u5206\u5e03\u5f0f-\u8bbe\u5b9amemcache\u96c6\u7fa4\uff0c\u5229\u7528magent\u505a\u4e00\u4e3b\u591a\u4ece\uff0credis\u53ef\u4ee5\u505a\u4e00\u4e3b\u591a\u4ece\u3002\u90fd\u53ef\u4ee5\u4e00\u4e3b\u4e00\u4e1b\n\n6\u3001\u5b58\u50a8\u6570\u636e\u5b89\u5168-memcache\u6302\u6389\u540e\uff0c\u6570\u636e\u6ca1\u4e86\uff0credis\u53ef\u4ee5\u5b9a\u671f\u4fdd\u5b58\u5230\u78c1\u76d8(\u6301\u4e45\u5316)\n\n7\u3001\u707e\u96be\u6062\u590d-memcache\u6302\u6389\u540e\uff0c\u6570\u636e\u4e0d\u53ef\u6062\u590d\uff0credis\u6570\u636e\u4e22\u5931\u540e\u53ef\u4ee5\u901a\u8fc7aof\u6062\u590d\n\n8\u3001Redis\u652f\u6301\u6570\u636e\u7684\u5907\u4efd\uff0c\u5373master-slave\u6a21\u5f0f\u7684\u6570\u636e\u5907\u4efd\n\n9\u3001\u5e94\u7528\u573a\u666f\u4e0d\u4e00\u6837\uff0credis\u9664\u4e86\u4f5c\u4e3aNoSQL\u6570\u636e\u5e93\u4f7f\u7528\u5916\uff0c\u8fd8\u80fd\u7528\u505a\u6d88\u606f\u961f\u5217\uff0c\u6570\u636e\u5806\u6808\u548c\u6570\u636e\u7f13\u5b58\u7b49;Memcache\u9002\u5408\u4e8e\u7f13\u5b58SQL\u8bed\u53e5\uff0c\u6570\u636e\u96c6\uff0c\u7528\u6237\u4e34\u65f6\u6027\u6570\u636e\uff0c\u5ef6\u8fdf\u67e5\u8be2\u6570\u636e\u548csession\u7b49\n\n\u4f7f\u7528\u573a\u666f\n\n1,\u5982\u679c\u6709\u6301\u4e45\u65b9\u9762\u7684\u9700\u6c42\u6216\u5bf9\u6570\u636e\u7c7b\u578b\u548c\u5904\u7406\u6709\u8981\u6c42\u7684\u5e94\u8be5\u9009\u62e9redis\n\n2,\u5982\u679c\u7b80\u5355\u7684key/value\u5b58\u50a8\u5e94\u8be5\u9009\u62e9memcached.\n\n### 209.Redis\u96c6\u7fa4\u65b9\u6848\u8be5\u600e\u4e48\u505a?\u90fd\u6709\u54ea\u4e9b\u65b9\u6848?\n\n1,codis\n\n\u76ee\u524d\u7528\u7684\u6700\u591a\u7684\u96c6\u7fa4\u65b9\u6848\uff0c\u57fa\u672c\u548ctwemproxy\u4e00\u81f4\u7684\u6548\u679c\uff0c\u4f46\u5b83\u652f\u6301\u5728\u8282\u70b9\u6570\u91cf\u6539\u53d8\u60c5\u51b5\u4e0b\uff0c\u65e7\u8282\u70b9\u6570\u636e\u5ba2\u6062\u590d\u5230\u65b0hash\u8282\u70b9\n\n2redis cluster3.0\u81ea\u5e26\u7684\u96c6\u7fa4\uff0c\u7279\u70b9\u5728\u4e8e\u4ed6\u7684\u5206\u5e03\u5f0f\u7b97\u6cd5\u4e0d\u662f\u4e00\u81f4\u6027hash\uff0c\u800c\u662fhash\u69fd\u7684\u6982\u5ff5\uff0c\u4ee5\u53ca\u81ea\u8eab\u652f\u6301\u8282\u70b9\u8bbe\u7f6e\u4ece\u8282\u70b9\u3002\u5177\u4f53\u770b\u5b98\u65b9\u4ecb\u7ecd\n\n3.\u5728\u4e1a\u52a1\u4ee3\u7801\u5c42\u5b9e\u73b0\uff0c\u8d77\u51e0\u4e2a\u6beb\u65e0\u5173\u8054\u7684redis\u5b9e\u4f8b\uff0c\u5728\u4ee3\u7801\u5c42\uff0c\u5bf9key\u8fdb\u884chash\u8ba1\u7b97\uff0c\u7136\u540e\u53bb\u5bf9\u5e94\u7684redis\u5b9e\u4f8b\u64cd\u4f5c\u6570\u636e\u3002\u8fd9\u79cd\u65b9\u5f0f\u5bf9hash\u5c42\u4ee3\u7801\u8981\u6c42\u6bd4\u8f83\u9ad8\uff0c\u8003\u8651\u90e8\u5206\u5305\u62ec\uff0c\u8282\u70b9\u5931\u6548\u540e\u7684\u66ff\u4ee3\u7b97\u6cd5\u65b9\u6848\uff0c\u6570\u636e\u9707\u8361\u540e\u7684\u5b57\u5178\u811a\u672c\u6062\u590d\uff0c\u5b9e\u4f8b\u7684\u76d1\u63a7\uff0c\u7b49\u7b49\n\n### 210.Redis\u56de\u6536\u8fdb\u7a0b\u662f\u5982\u4f55\u5de5\u4f5c\u7684\n\n\u4e00\u4e2a\u5ba2\u6237\u7aef\u8fd0\u884c\u4e86\u65b0\u7684\u547d\u4ee4\uff0c\u6dfb\u52a0\u4e86\u65b0\u7684\u6570\u636e\u3002\n\nredis\u68c0\u67e5\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff0c\u5982\u679c\u5927\u4e8emaxmemory\u7684\u9650\u5236\uff0c\u5219\u6839\u636e\u8bbe\u5b9a\u597d\u7684\u7b56\u7565\u8fdb\u884c\u56de\u6536\u3002\n\n\u4e00\u4e2a\u65b0\u7684\u547d\u4ee4\u88ab\u6267\u884c\u7b49\u7b49\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u65ad\u5730\u7a7f\u8d8a\u5185\u5b58\u9650\u5236\u7684\u8fb9\u754c\uff0c\u901a\u8fc7\u4e0d\u65ad\u8fbe\u5230\u8fb9\u754c\u7136\u540e\u4e0d\u65ad\u56de\u6536\u56de\u5230\u8fb9\u754c\u4ee5\u4e0b\u3002\n\n\u5982\u679c\u4e00\u4e2a\u547d\u4ee4\u7684\u7ed3\u679c\u5bfc\u81f4\u5927\u91cf\u5185\u5b58\u88ab\u4f7f\u7528(\u4f8b\u5982\u5f88\u5927\u7684\u96c6\u5408\u7684\u4ea4\u96c6\u4fdd\u5b58\u5230\u4e00\u4e2a\u65b0\u7684\u952e)\uff0c\u4e0d\u7528\u591a\u4e45\u5185\u5b58\u9650\u5236\u5c31\u4f1a\u88ab\u8fd9\u4e2a\u5185\u5b58\u4f7f\u7528\u91cf\u8d85\u8d8a\u3002\n\n## MongoDB\n### 211.MongoDB\u4e2d\u5bf9\u591a\u6761\u8bb0\u5f55\u505a\u66f4\u65b0\u64cd\u4f5c\u547d\u4ee4\u662f\u4ec0\u4e48\uff1f\n### 212.MongoDB\u5982\u4f55\u624d\u4f1a\u62d3\u5c55\u5230\u591a\u4e2ashard\u91cc\uff1f\n\n## \u6d4b\u8bd5\n### 213.\u7f16\u5199\u6d4b\u8bd5\u8ba1\u5212\u7684\u76ee\u7684\u662f\n### 214.\u5bf9\u5173\u952e\u8bcd\u89e6\u53d1\u6a21\u5757\u8fdb\u884c\u6d4b\u8bd5\n### 215.\u5176\u4ed6\u5e38\u7528\u7b14\u8bd5\u9898\u76ee\u7f51\u5740\u6c47\u603b\n### 216.\u6d4b\u8bd5\u4eba\u5458\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u4efb\u52a1\u662f\u4ec0\u4e48\n### 217.\u4e00\u6761\u8f6f\u4ef6Bug\u8bb0\u5f55\u90fd\u5305\u542b\u4e86\u54ea\u4e9b\u5185\u5bb9\uff1f\n### 218.\u7b80\u8ff0\u9ed1\u76d2\u6d4b\u8bd5\u548c\u767d\u76d2\u6d4b\u8bd5\u7684\u4f18\u7f3a\u70b9\n### 219.\u8bf7\u5217\u51fa\u4f60\u6240\u77e5\u9053\u7684\u8f6f\u4ef6\u6d4b\u8bd5\u79cd\u7c7b\uff0c\u81f3\u5c115\u9879\n### 220.Alpha\u6d4b\u8bd5\u4e0eBeta\u6d4b\u8bd5\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f\n### 221.\u4e3e\u4f8b\u8bf4\u660e\u4ec0\u4e48\u662fBug\uff1f\u4e00\u4e2abug report\u5e94\u5305\u542b\u4ec0\u4e48\u5173\u952e\u5b57\uff1f\n\n## \u6570\u636e\u7ed3\u6784\n### 222.\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u6570\u5b57-Python\u7248\n### 223.\u6c42100\u4ee5\u5185\u7684\u8d28\u6570\n### 224.\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32-Python\u5b9e\u73b0\n### 225.\u901a\u8fc72\u4e2a5/6\u5347\u5f97\u6c34\u58f6\u4ece\u6c60\u5858\u5f97\u52303\u5347\u6c34\n### 226.\u4ec0\u4e48\u662fMD5\u52a0\u5bc6\uff0c\u6709\u4ec0\u4e48\u7279\u70b9\uff1f\n### 227.\u4ec0\u4e48\u662f\u5bf9\u79f0\u52a0\u5bc6\u548c\u975e\u5bf9\u79f0\u52a0\u5bc6\n### 228.\u5192\u6ce1\u6392\u5e8f\u7684\u601d\u60f3\uff1f\n### 229.\u5feb\u901f\u6392\u5e8f\u7684\u601d\u60f3\uff1f\n### 230.\u5982\u4f55\u5224\u65ad\u5355\u5411\u94fe\u8868\u4e2d\u662f\u5426\u6709\u73af\uff1f\n### 231.\u4f60\u77e5\u9053\u54ea\u4e9b\u6392\u5e8f\u7b97\u6cd5\uff08\u4e00\u822c\u662f\u901a\u8fc7\u95ee\u9898\u8003\u7b97\u6cd5\uff09\n### 232.\u6590\u6ce2\u90a3\u5951\u6570\u5217\n\n**\u6570\u5217\u5b9a\u4e49: **\n\nf 0 = f 1 = 1\nf n = f (n-1) + f (n-2)\n\n#### \u6839\u636e\u5b9a\u4e49\n\n\u901f\u5ea6\u5f88\u6162\uff0c\u53e6\u5916(\u66b4\u6808\u6ce8\u610f\uff01\u26a0\ufe0f\ufe0f\uff09 `O(fibonacci n)`\n\n```python\ndef fibonacci(n):\n    if n == 0 or n == 1:\n        return 1\n    return fibonacci(n - 1) + fibonacci(n - 2)\n```\n\n#### \u7ebf\u6027\u65f6\u95f4\u7684\n\n**\u72b6\u6001/\u5faa\u73af**\n\n```python\ndef fibonacci(n):\n   a, b = 1, 1\n   for _ in range(n):\n       a, b = b, a + b\n   return a\n```\n\n**\u9012\u5f52**\n\n```python\ndef fibonacci(n):\n    def fib(n_, s):\n        if n_ == 0:\n            return s[0]\n        a, b = s\n        return fib(n_ - 1, (b, a + b))\n    return fib(n, (1, 1))\n```\n\n**map(zipwith)**\n\n```python\ndef fibs():\n    yield 1\n    fibs_ = fibs()\n    yield next(fibs_)\n    fibs__ = fibs()\n    for fib in map(lambad a, b: a + b, fibs_, fibs__):\n        yield fib\n        \n        \ndef fibonacci(n):\n    fibs_ = fibs()\n    for _ in range(n):\n        next(fibs_)\n    return next(fibs)\n```\n\n**\u505a\u7f13\u5b58**\n\n```python\ndef cache(fn):\n    cached = {}\n    def wrapper(*args):\n        if args not in cached:\n            cached[args] = fn(*args)\n        return cached[args]\n    wrapper.__name__ = fn.__name__\n    return wrapper\n\n@cache\ndef fib(n):\n    if n < 2:\n        return 1\n    return fib(n-1) + fib(n-2)\n```\n\n**\u5229\u7528 funtools.lru_cache \u505a\u7f13\u5b58**\n\n```python\nfrom functools import lru_cache\n\n@lru_cache(maxsize=32)\ndef fib(n):\n    if n < 2:\n        return 1\n    return fib(n-1) + fib(n-2)\n```\n\n#### Logarithmic\n\n**\u77e9\u9635**\n\n```python\nimport numpy as np\ndef fibonacci(n):\n    return (np.matrix([[0, 1], [1, 1]]) ** n)[1, 1]\n```\n\n**\u4e0d\u662f\u77e9\u9635**\n\n```python\ndef fibonacci(n):\n    def fib(n):\n        if n == 0:\n            return (1, 1)\n        elif n == 1:\n            return (1, 2)\n        a, b = fib(n // 2 - 1)\n        c = a + b\n        if n % 2 == 0:\n            return (a * a + b * b, c * c - a * a)\n        return (c * c - a * a, b * b + c * c)\n    return fib(n)[0]\n```\n\n### 233.\u5982\u4f55\u7ffb\u8f6c\u4e00\u4e2a\u5355\u94fe\u8868\uff1f\n\n```python\nclass Node:\n    def __init__(self,data=None,next=None):\n        self.data = data\n        self.next = next\n        \ndef rev(link):\n    pre = link\n    cur = link.next\n    pre.next = None\n    while cur:\n        temp  = cur.next\n        cur.next = pre\n        pre = cur\n        cur = tmp\n    return pre\n\nif __name__ == '__main__':\n    link = Node(1,Node(2,Node(3,Node(4,Node(5,Node(6,Node7,Node(8.Node(9))))))))\n    root = rev(link)\n    while root:\n        print(roo.data)\n        root = root.next\n```\n\n\n\n### 234.\u9752\u86d9\u8df3\u53f0\u9636\u95ee\u9898\n\n\u4e00\u53ea\u9752\u86d9\u8981\u8df3\u4e0an\u5c42\u9ad8\u7684\u53f0\u9636\uff0c\u4e00\u6b21\u80fd\u8df3\u4e00\u7ea7\uff0c\u4e5f\u53ef\u4ee5\u8df3\u4e24\u7ea7\uff0c\u8bf7\u95ee\u8fd9\u53ea\u9752\u86d9\u6709\u591a\u5c11\u79cd\u8df3\u4e0a\u8fd9\u4e2an\u5c42\u53f0\u9636\u7684\u65b9\u6cd5\uff1f\n\n\u65b9\u6cd51\uff1a\u9012\u5f52\n\n\u8bbe\u9752\u86d9\u8df3\u4e0an\u7ea7\u53f0\u9636\u6709f(n)\u79cd\u65b9\u6cd5\uff0c\u628a\u8fd9n\u79cd\u65b9\u6cd5\u5206\u4e3a\u4e24\u5927\u7c7b\uff0c\u7b2c\u4e00\u79cd\u6700\u540e\u4e00\u6b21\u8df3\u4e86\u4e00\u7ea7\u53f0\u9636\uff0c\u8fd9\u7c7b\u5171\u6709f(n-1)\u79cd\uff0c\u7b2c\u4e8c\u79cd\u6700\u540e\u4e00\u6b21\u8df3\u4e86\u4e24\u7ea7\u53f0\u9636\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5171\u6709f(n-2)\u79cd\uff0c\u5219\u5f97\u51fa\u9012\u63a8\u516c\u5f0ff(n)=f(n-1) + f(n-2),\u663e\u7136f(1)=1,f(2)=2\uff0c\u8fd9\u79cd\u65b9\u6cd5\u867d\u7136\u4ee3\u7801\u7b80\u5355\uff0c\u4f46\u6548\u7387\u4f4e\uff0c\u4f1a\u8d85\u51fa\u65f6\u95f4\u4e0a\u9650\n\n```python\nclass Solution:\n    def climbStairs(self,n):\n        if n ==1:\n            return 1\n        elif n==2:\n            return 2\n        else:\n            return self.climbStairs(n-1) + self.climbStairs(n-2)\n```\n\n\u65b9\u6cd52\uff1a\u7528\u5faa\u73af\u6765\u4ee3\u66ff\u9012\u5f52\n\n```python\nclass Solution:\n    def climbStairs(self,n):\n        if n==1 or n==2:\n            return n\n        a,b,c = 1,2,3\n        for i in range(3,n+1):\n            c = a+b\n            a = b\n            b = c\n        return c\n```\n\n### 235.\u4e24\u6570\u4e4b\u548c Two Sum\n\n\n\n### 236.\u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4 Search in Rotated Sorted Array\n### 237.Python\u5b9e\u73b0\u4e00\u4e2aStack\u7684\u6570\u636e\u7ed3\u6784\n### 238.\u5199\u4e00\u4e2a\u4e8c\u5206\u67e5\u627e\n### 239.set \u7528 in \u65f6\u95f4\u590d\u6742\u5ea6\u662f\u591a\u5c11\uff0c\u4e3a\u4ec0\u4e48\uff1f\n### 240.\u5217\u8868\u4e2d\u6709n\u4e2a\u6b63\u6574\u6570\u8303\u56f4\u5728[0\uff0c1000]\uff0c\u8fdb\u884c\u6392\u5e8f\uff1b\n### 241.\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u6709\u7ec4\u5408\u548c\u7ee7\u627f\u7684\u65b9\u6cd5\u5b9e\u73b0\u65b0\u7684\u7c7b\n## \u5927\u6570\u636e\n### 242.\u627e\u51fa1G\u7684\u6587\u4ef6\u4e2d\u9ad8\u9891\u8bcd\n### 243.\u4e00\u4e2a\u5927\u7ea6\u6709\u4e00\u4e07\u884c\u7684\u6587\u672c\u6587\u4ef6\u7edf\u8ba1\u9ad8\u9891\u8bcd\n### 244.\u600e\u4e48\u5728\u6d77\u91cf\u6570\u636e\u4e2d\u627e\u51fa\u91cd\u590d\u6b21\u6570\u6700\u591a\u7684\u4e00\u4e2a\uff1f\n### 245.\u5224\u65ad\u6570\u636e\u662f\u5426\u5728\u5927\u91cf\u6570\u636e\u4e2d\n\n## \u67b6\u6784\n\n### [Python\u540e\u7aef\u67b6\u6784\u6f14\u8fdb](<https://zhu327.github.io/2018/07/19/python%E5%90%8E%E7%AB%AF%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B/>)\n\n\u8fd9\u7bc7\u6587\u7ae0\u51e0\u4e4e\u6db5\u76d6\u4e86python\u4f1a\u7528\u7684\u67b6\u6784\uff0c\u5728\u9762\u8bd5\u53ef\u4ee5\u624b\u753b\u67b6\u6784\u56fe\uff0c\u6839\u636e\u81ea\u5df1\u7684\u9879\u76ee\u8c08\u4e0b\u6280\u672f\u9009\u578b\u548c\u4f18\u52a3\uff0c\u9047\u5230\u7684\u5751\u7b49\u3002\u7edd\u5bf9\u52a0\u5206\n"}, {"repo": "/pythonnet/pythonnet", "language": "C#", "readme_contents": "pythonnet - Python for .NET\n===========================\n\n|Join the chat at https://gitter.im/pythonnet/pythonnet|\n\n|appveyor shield| |travis shield| |codecov shield|\n\n|license shield| |pypi package version| |conda-forge version| |python supported shield|\n|stackexchange shield|\n\nPython for .NET is a package that gives Python programmers nearly\nseamless integration with the .NET Common Language Runtime (CLR) and\nprovides a powerful application scripting tool for .NET developers. It\nallows Python code to interact with the CLR, and may also be used to\nembed Python into a .NET application.\n\nCalling .NET code from Python\n-----------------------------\n\nPython for .NET allows CLR namespaces to be treated essentially as\nPython packages.\n\n.. code-block::\n\n   import clr\n   from System import String\n   from System.Collections import *\n\nTo load an assembly, use the ``AddReference`` function in the ``clr``\nmodule:\n\n.. code-block::\n\n   import clr\n   clr.AddReference(\"System.Windows.Forms\")\n   from System.Windows.Forms import Form\n\nEmbedding Python in .NET\n------------------------\n\n-  All calls to python should be inside a\n   ``using (Py.GIL()) {/* Your code here */}`` block.\n-  Import python modules using ``dynamic mod = Py.Import(\"mod\")``, then\n   you can call functions as normal, eg ``mod.func(args)``.\n-  Use ``mod.func(args, Py.kw(\"keywordargname\", keywordargvalue))`` or\n   ``mod.func(args, keywordargname: keywordargvalue)`` to apply keyword\n   arguments.\n-  All python objects should be declared as ``dynamic`` type.\n-  Mathematical operations involving python and literal/managed types\n   must have the python object first, eg. ``np.pi * 2`` works,\n   ``2 * np.pi`` doesn't.\n\nExample\n~~~~~~~\n\n.. code-block:: csharp\n\n   static void Main(string[] args)\n   {\n       using (Py.GIL())\n       {\n           dynamic np = Py.Import(\"numpy\");\n           Console.WriteLine(np.cos(np.pi * 2));\n\n           dynamic sin = np.sin;\n           Console.WriteLine(sin(5));\n\n           double c = np.cos(5) + sin(5);\n           Console.WriteLine(c);\n\n           dynamic a = np.array(new List<float> { 1, 2, 3 });\n           Console.WriteLine(a.dtype);\n\n           dynamic b = np.array(new List<float> { 6, 5, 4 }, dtype: np.int32);\n           Console.WriteLine(b.dtype);\n\n           Console.WriteLine(a * b);\n           Console.ReadKey();\n       }\n   }\n\nOutput:\n\n.. code::\n\n   1.0\n   -0.958924274663\n   -0.6752620892\n   float64\n   int32\n   [  6.  10.  12.]\n\nInformation on installation, FAQ, troubleshooting, debugging, and\nprojects using pythonnet can be found in the Wiki:\n\nhttps://github.com/pythonnet/pythonnet/wiki\n\nPython 3.8.0 support\n--------------------\n\nSome features are disabled in Python 3.8.0 because of\n`this bug in Python <https://bugs.python.org/issue37633>`_. The error is\n``System.EntryPointNotFoundException : Unable to find an entry point named\n'Py_CompileString' in DLL 'python38'``. This will be fixed in Python 3.8.1.\n\n.. |Join the chat at https://gitter.im/pythonnet/pythonnet| image:: https://badges.gitter.im/pythonnet/pythonnet.svg\n   :target: https://gitter.im/pythonnet/pythonnet?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n.. |appveyor shield| image:: https://img.shields.io/appveyor/ci/pythonnet/pythonnet/master.svg?label=AppVeyor\n   :target: https://ci.appveyor.com/project/pythonnet/pythonnet/branch/master\n.. |travis shield| image:: https://img.shields.io/travis/pythonnet/pythonnet/master.svg?label=Travis\n   :target: https://travis-ci.org/pythonnet/pythonnet\n.. |codecov shield| image:: https://img.shields.io/codecov/c/github/pythonnet/pythonnet/master.svg?label=Codecov\n   :target: https://codecov.io/github/pythonnet/pythonnet\n.. |license shield| image:: https://img.shields.io/badge/license-MIT-blue.svg?maxAge=3600\n   :target: ./LICENSE\n.. |pypi package version| image:: https://img.shields.io/pypi/v/pythonnet.svg\n   :target: https://pypi.python.org/pypi/pythonnet\n.. |python supported shield| image:: https://img.shields.io/pypi/pyversions/pythonnet.svg\n   :target: https://pypi.python.org/pypi/pythonnet\n.. |stackexchange shield| image:: https://img.shields.io/badge/StackOverflow-python.net-blue.svg\n   :target: http://stackoverflow.com/questions/tagged/python.net\n.. |conda-forge version| image:: https://img.shields.io/conda/vn/conda-forge/pythonnet.svg\n   :target: https://anaconda.org/conda-forge/pythonnet\n\nResources\n---------\nMailing list: https://mail.python.org/mailman/listinfo/pythondotnet\nChat: https://gitter.im/pythonnet/pythonnet\n"}, {"repo": "/Galeas/CocoaPodUI", "language": "HTML", "readme_contents": "***The project support is stopped due to incompatibility of Xcode 8+ with \"classic\" plugins.***\n\nCocoaPodUI\n----------\n\nXcode plugin that implements CocoaPods GUI.\n\nInstallation Guide\n------------------\n\nOpen and build CocoaPodUI project, it will be installed automatically.\n\nUninstall\n---------\nJust remove CocoaPodUI.xcplugin from ~/Library/Application Support/Developer/Shared/Xcode/Plug-ins\n\nVersion History\n---------------\n\n\n- **v.1.2.4**\n    * (no new features, compatibility fixes) Xcode 6.3.2 and 6.4-beta-3 (6E23).\n- **v.1.2.3**\n    * (no new features, compatibility fixes) Xcode 6.3.1 and 6.4-beta-2 support.\n- **v.1.2.2**\n    * (no new features, compatibility fixes) Xcode 6.2 and 6.3-beta-3 support.\n- **v.1.2.1**\n    * Add Xcode 6-beta support.\n- **v.1.2**\n    * New podspec format support.\n    * Checking for outdated Pods and it\u2019s updating.\n    * Badge on Xcode Dock icon with outdated Pods count\n- **v.1.1**\n    * Added multi-target support.\n    * Adding pods to the \u00abInstalled\u00bb-table by drag\u2019n\u2019drop.\n    * Extended editing capabilities of pods.\n- **v.1.0.4 hotfix 2**\n    * Fixed crash when Cocoapods gem file path is not defined and equals nil.\n    * Fixed forming of incorrect text for Podfile.\n- **v.1.0.4 hotfix 1**\n    * \u00abmust provide a launch path\u00bb crash fix.\n- **v.1.0.4**\n    * Avoid complete overwriting an existing Podfile.\n- **v.1.0.3**\n    * Added console output for during pods install.\n- **v.1.0.2 hotfix 2**\n    * Small bug-fix.\n- **v.1.0.2 hotfix 1**\n    * Cocoapod gem search optimization.\n- **v.1.0.2**\n    * Added mechanism that allows user manually define location of Cocoapods\ngem file.\n- **v.1.0.1**\n    * Critical bug fixes.\n        * Fixed crash when Cocoapod gem placed in non-default folder.\n        * Fixed crash when Podfile contains additional pre- or post-install\nscenarios.\n    * Global improvements.\n- **v.1.0**\n    * Basic capabilities: \u00abPodfile\u00bb creation and pods installation. Cleaning up project from pods.\n\n<img src=\"http://i1199.photobucket.com/albums/aa470/Akki-87/readme.png\">\n\nSpecial thanks to [kodlian (JMModalOverlay)](https://github.com/kodlian/JMModalOverlay)\n\nAdding support for new builds of XCode\n--------------------------------------\n\nAdd the build UUIDs for the versions of Xcode you wish to support to DVTPlugInCompatibilityUUIDs in CocoaPodUI-Info.plist. This UUID can be found by running command in Terminal:\n\n    defaults read /Applications/Xcode.app/Contents/Info DVTPlugInCompatibilityUUID\n\n\nSee template project at https://github.com/kattrali/Xcode-Plugin-Template\n\n"}, {"repo": "/yoksel/flex-cheatsheet", "language": "HTML", "readme_contents": "# Flexbox cheatsheet\n\nhttp://yoksel.github.io/flex-cheatsheet/\n\nThe list of Flexbox properties with:\n\n* live demos\n* code snippets\n* definitions from the [W3C Flexbox specification](https://www.w3.org/TR/css-flexbox-1/)\n"}, {"repo": "/amueller/introduction_to_ml_with_python", "language": "Jupyter Notebook", "readme_contents": "[![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/amueller/introduction_to_ml_with_python/master)\n\n# Introduction to Machine Learning with Python\n\nThis repository holds the code for the forthcoming book \"Introduction to Machine\nLearning with Python\" by [Andreas Mueller](http://amueller.io) and [Sarah Guido](https://twitter.com/sarah_guido).\nYou can find details about the book on the [O'Reilly website](http://shop.oreilly.com/product/0636920030515.do).\n\nThe books requires the current stable version of scikit-learn, that is\n0.20.0.  Most of the book can also be used with previous versions of\nscikit-learn, though you need to adjust the import for everything from the\n``model_selection`` module, mostly ``cross_val_score``, ``train_test_split``\nand ``GridSearchCV``.\n\n\nThis repository provides the notebooks from which the book is created, together\nwith the ``mglearn`` library of helper functions to create figures and\ndatasets.\n\nFor the curious ones, the cover depicts a [hellbender](https://en.wikipedia.org/wiki/Hellbender).\n\nAll datasets are included in the repository, with the exception of the aclImdb dataset, which you can download from\nthe page of [Andrew Maas](http://ai.stanford.edu/~amaas/data/sentiment/). See the book for details.\n\nIf you get ``ImportError: No module named mglearn`` you can try to install mglearn into your python environment using\nthe command ``pip install mglearn`` in your terminal or ``!pip install mglearn`` in Jupyter Notebook.\n\n\n## Errata\nPlease note that the first print of the book is missing the following line when listing the assumed imports:\n\n```python\nfrom IPython.display import display\n```\nPlease add this line if you see an error involving ``display``.\n\n\nThe first print of the book used a function called ``plot_group_kfold``.\nThis has been renamed to ``plot_label_kfold`` because of a rename in\nscikit-learn.\n\n## Setup\n\nTo run the code, you need the packages ``numpy``, ``scipy``, ``scikit-learn``, ``matplotlib``, ``pandas`` and ``pillow``.\nSome of the visualizations of decision trees and neural networks structures also require ``graphviz``. The chapter\non text processing also requirs ``nltk`` and ``spacy``.\n\nThe easiest way to set up an environment is by installing [Anaconda](https://www.continuum.io/downloads).\n\n### Installing packages with conda:\nIf you already have a Python environment set up, and you are using the ``conda`` package manager, you can get all packages by running\n\n    conda install numpy scipy scikit-learn matplotlib pandas pillow graphviz python-graphviz\n\nFor the chapter on text processing you also need to install ``nltk`` and ``spacy``:\n\n    conda install nltk spacy\n\n\n### Installing packages with pip\nIf you already have a Python environment and are using pip to install packages, you need to run\n\n    pip install numpy scipy scikit-learn matplotlib pandas pillow graphviz\n\nYou also need to install the graphiz C-library, which is easiest using a package manager.\nIf you are using OS X and homebrew, you can ``brew install graphviz``. If you are on Ubuntu or debian, you can ``apt-get install graphviz``.\nInstalling graphviz on Windows can be tricky and using conda / anaconda is recommended.\nFor the chapter on text processing you also need to install ``nltk`` and ``spacy``:\n\n    pip install nltk spacy\n\n### Downloading English language model\nFor the text processing chapter, you need to download the English language model for spacy using\n\n    python -m spacy download en\n\n## Submitting Errata\n\nIf you have errata for the (e-)book, please submit them via the [O'Reilly Website](http://www.oreilly.com/catalog/errata.csp?isbn=0636920030515).\nYou can submit fixed to the code as pull-requests here, but I'd appreciate it if you would also submit them there, as this repository doesn't hold the\n\"master notebooks\".\n\n![cover](cover.jpg)\n"}, {"repo": "/jashkenas/coffeescript", "language": "CoffeeScript", "readme_contents": "```\n      @@@@@@@                @@@@  @@@@@\n     @@@@@@@@@@              @@@   @@@                                           {\n    @@@@     @@              @@@   @@@                                        }   }   {\n   @@@@          @@@@@@@    @@@   @@@     @@@@@@    @@@@@@                   {   {  }  }\n  @@@@          @@@   @@  @@@@@  @@@@@@  @@@   @@  @@@@  @@                   }   }{  {\n  @@@@         @@@@   @@   @@@    @@@   @@@   @@@ @@@   @@@                  {  }{  }  }\n  @@@@        @@@@    @@   @@@    @@@   @@@@@@@@  @@@@@@@@                  { }{ }{  { }\n  @@@@@       @@@@   @@    @@@    @@@   @@@       @@@                     {  { } { } { }  }\n   @@@@@@@@@@ @@@@@@@@    @@@    @@@    @@@@@@@@  @@@@@@@@                 { }   { }   { }\n      @@@@@               @@@    @@@      @@@@@     @@@@@           @@@@@@   { }   { }    @@@@@@@\n                         @@@    @@@                                 @@@@@@@@@@@@@@@@@@@@@@@@@@@@\n      @@@@@@            @@@    @@@                                @@ @@@@@@@@@@@@@@@@@@@@@@@@@@\n   @@@@    @@          @@@   @@@@                                @@   @@@@@@@@@@@@@@@@@@@@@@@@\n   @@@@   @@@                       @@                  @@@@     @@@   @@@@@@@@@@@@@@@@@@@@@\n   @@@@@          @@@@@   @@  @@   @@@     @@@@@@@     @@@@@      @@@    @@@@@@@@@@@@@@@@@@\n     @@@@@      @@@  @@@ @@@@@@@@         @@@@  @@@@  @@@@@@@       @@@   @@@@@@@@@@@@@@@@\n       @@@@@   @@@       @@@@     @@@@    @@@    @@@   @@@                 @@@@@@@@@@@@@@\n @@@@@  @@@@  @@@@      @@@@      @@@@   @@@@   @@@@  @@@@\n@@@     @@@@  @@@       @@@@     @@@@    @@@    @@@@  @@@@\n@@@     @@@@  @@@@     @@@@      @@@@   @@@@   @@@@  @@@@\n @@@@@@@@@     @@@@@@  @@@@       @@@@  @@@@@@@@@    @@@@\n                                       @@@          @@@@\n                                      @@@\n                                      @@@\n```\n\nCoffeeScript is a little language that compiles into JavaScript.\n\n## Installation\n\nOnce you have Node.js installed:\n\n```shell\n# Install locally for a project:\nnpm install --save-dev coffeescript\n\n# Install globally to execute .coffee files anywhere:\nnpm install --global coffeescript\n```\n\n## Getting Started\n\nExecute a script:\n\n```shell\ncoffee /path/to/script.coffee\n```\n\nCompile a script:\n\n```shell\ncoffee -c /path/to/script.coffee\n```\n\nFor documentation, usage, and examples, see: https://coffeescript.org/\n\nTo suggest a feature or report a bug: https://github.com/jashkenas/coffeescript/issues\n\nIf you\u2019d like to chat, drop by #coffeescript on Freenode IRC.\n\nThe source repository: https://github.com/jashkenas/coffeescript.git\n\nChangelog: https://coffeescript.org/#changelog\n\nOur lovely and talented contributors are listed here: https://github.com/jashkenas/coffeescript/contributors\n"}, {"repo": "/dotnet/roslyn", "language": "C#", "readme_contents": "## Welcome to the .NET Compiler Platform (\"Roslyn\")\n\n[//]: # (Begin current test results)\n\n### Desktop Unit Tests\n|Branch|Debug x86|Debug x64|Release x86|Release x64|\n|:--:|:--:|:--:|:--:|:--:|\n**master**|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master&jobname=Windows_Desktop_Unit_Tests&configuration=Windows_Desktop_Unit_Tests%20debug_32&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master&jobname=Windows_Desktop_Unit_Tests&configuration=Windows_Desktop_Unit_Tests%20debug_64&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master&jobname=Windows_Desktop_Unit_Tests&configuration=Windows_Desktop_Unit_Tests%20release_32&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master&jobname=Windows_Desktop_Unit_Tests&configuration=Windows_Desktop_Unit_Tests%20release_64&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master&view=logs)|\n**master-vs-deps**|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master-vs-deps&jobname=Windows_Desktop_Unit_Tests&configuration=Windows_Desktop_Unit_Tests%20debug_32&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master-vs-deps&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master-vs-deps&jobname=Windows_Desktop_Unit_Tests&configuration=Windows_Desktop_Unit_Tests%20debug_64&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master-vs-deps&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master-vs-deps&jobname=Windows_Desktop_Unit_Tests&configuration=Windows_Desktop_Unit_Tests%20release_32&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master-vs-deps&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master-vs-deps&jobname=Windows_Desktop_Unit_Tests&configuration=Windows_Desktop_Unit_Tests%20release_64&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master-vs-deps&view=logs)|\n\n### CoreClr Unit Tests\n|Branch|Windows Debug|Windows Release|Linux|\n|:--:|:--:|:--:|:--:|\n**master**|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master&jobname=Windows_CoreClr_Unit_Tests&configuration=Windows_CoreClr_Unit_Tests%20debug&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master&jobname=Windows_CoreClr_Unit_Tests&configuration=Windows_CoreClr_Unit_Tests%20release&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master&jobname=Linux_Test&configuration=Linux_Test%20coreclr&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master&view=logs)|\n**master-vs-deps**|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master-vs-deps&jobname=Windows_CoreClr_Unit_Tests&configuration=Windows_CoreClr_Unit_Tests%20debug&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master-vs-deps&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master-vs-deps&jobname=Windows_CoreClr_Unit_Tests&configuration=Windows_CoreClr_Unit_Tests%20release&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master-vs-deps&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master-vs-deps&jobname=Linux_Test&configuration=Linux_Test%20coreclr&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master-vs-deps&view=logs)|\n\n### Integration Tests\n|Branch|Debug|Release\n|:--:|:--:|:--:|\n**master**|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-integration-CI?branchname=master&jobname=VS_Integration&configuration=VS_Integration%20debug_async&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=245&branchname=master&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-integration-CI?branchname=master&jobname=VS_Integration&configuration=VS_Integration%20release_async&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=245&branchname=master&view=logs)|\n**master-vs-deps**|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-integration-CI?branchname=master-vs-deps&jobname=VS_Integration&configuration=VS_Integration%20debug_async&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=245&branchname=master-vs-deps&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-integration-CI?branchname=master-vs-deps&jobname=VS_Integration&configuration=VS_Integration%20release_async&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=245&branchname=master-vs-deps&view=logs)|\n\n### Misc Tests\n|Branch|Determinism|Build Correctness|Mono|Spanish|\n|:--:|:--:|:--:|:--:|:--:|\n**master**|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master&jobname=Windows_Determinism_Test&configuration=Windows_Determinism_Test&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master&jobname=Windows_Correctness_Test&configuration=Windows_Correctness_Test&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master&jobname=Windows_Desktop_Spanish_Unit_Tests&configuration=Windows_Desktop_Spanish_Unit_Tests&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master&jobname=Linux_Test&configuration=Linux_Test%20mono&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master&view=logs)|\n**master-vs-deps**|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master-vs-deps&jobname=Windows_Determinism_Test&configuration=Windows_Determinism_Test&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master-vs-deps&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master-vs-deps&jobname=Windows_Correctness_Test&configuration=Windows_Correctness_Test&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master-vs-deps&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master-vs-deps&jobname=Windows_Desktop_Spanish_Unit_Tests&configuration=Windows_Desktop_Spanish_Unit_Tests&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master-vs-deps&view=logs)|[![Build Status](https://dev.azure.com/dnceng/public/_apis/build/status/dotnet/roslyn/roslyn-CI?branchname=master-vs-deps&jobname=Linux_Test&configuration=Linux_Test%20mono&label=build)](https://dev.azure.com/dnceng/public/_build/latest?definitionId=15&branchname=master-vs-deps&view=logs)|\n\n\n[//]: # (End current test results)\n\n[![Join the chat at https://gitter.im/dotnet/roslyn](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/dotnet/roslyn?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n\nRoslyn provides open-source C# and Visual Basic compilers with rich code analysis APIs.  It enables building code analysis tools with the same APIs that are used by Visual Studio.\n\n### Language Design Discussion\n\nWe are now taking language feature discussion in other repositories:\n- https://github.com/dotnet/csharplang for C# specific issues\n- https://github.com/dotnet/vblang for VB-specific features\n- https://github.com/dotnet/csharplang for features that affect both languages\n\nDiscussion about the transition of language design to the new repos is at https://github.com/dotnet/roslyn/issues/18002.\n\n### Download C# and Visual Basic\n\nWant to start developing in C# and Visual Basic? Download [Visual Studio 2019](https://www.visualstudio.com/downloads/), which has the latest features built-in. There are \nalso [prebuilt Azure VM images](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/category/compute?search=visual%20studio%202019) available with \nVisual Studio 2019 already installed.\n\nTo install the latest release without Visual Studio, run one of the following [nuget](https://dist.nuget.org/index.html) command lines:\n\n```\nnuget install Microsoft.Net.Compilers   # Install C# and VB compilers\nnuget install Microsoft.CodeAnalysis    # Install Language APIs and Services\n```\n\nDaily NuGet builds of the project are also available in our MyGet feed:\n\n> [https://dotnet.myget.org/F/roslyn/api/v3/index.json](https://dotnet.myget.org/F/roslyn/api/v3/index.json)\n\nSee [what's new with the C# and VB compilers](https://github.com/dotnet/roslyn/wiki/Changelog-for-C%23-and-VB-compilers).\n\n### Source code\n\n* Clone the sources: `git clone https://github.com/dotnet/roslyn.git`\n* [Enhanced source view](http://sourceroslyn.io/), powered by Roslyn \n* [Building, testing and debugging the sources](https://github.com/dotnet/roslyn/wiki/Building%20Testing%20and%20Debugging)\n\n### Get started\n\n* Tutorial articles by Alex Turner in MSDN Magazine\n  - [Use Roslyn to Write a Live Code Analyzer for Your API](https://msdn.microsoft.com/en-us/magazine/dn879356)\n  - [Adding a Code Fix to your Roslyn Analyzer](https://msdn.microsoft.com/en-us/magazine/dn904670.aspx)\n* [Roslyn Overview](https://github.com/dotnet/roslyn/wiki/Roslyn%20Overview) \n* [API Changes between CTP 6 and RC](https://github.com/dotnet/roslyn/wiki/VS-2015-RC-API-Changes)\n* [Samples and Walkthroughs](https://github.com/dotnet/roslyn/wiki/Samples-and-Walkthroughs)\n* [Documentation](https://github.com/dotnet/roslyn/tree/master/docs)\n* [Analyzer documentation](https://github.com/dotnet/roslyn/tree/master/docs/analyzers)\n* [Syntax Visualizer Tool](https://github.com/dotnet/roslyn/wiki/Syntax%20Visualizer)\n* [Syntax Quoter Tool](http://roslynquoter.azurewebsites.net)\n* [Roadmap](https://github.com/dotnet/roslyn/wiki/Roadmap) \n* [Language Design Notes](https://github.com/dotnet/roslyn/issues?q=label%3A%22Design+Notes%22+)\n* [FAQ](https://github.com/dotnet/roslyn/wiki/FAQ)\n* Also take a look at our [Wiki](https://github.com/dotnet/roslyn/wiki) for more information on how to contribute, what the labels on issue mean, etc.\n\n### Contribute!\n\nSome of the best ways to contribute are to try things out, file bugs, and join in design conversations. \n\n* [How to Contribute](https://github.com/dotnet/roslyn/wiki/Contributing-Code)\n* [Pull requests](https://github.com/dotnet/roslyn/pulls): [Open](https://github.com/dotnet/roslyn/pulls?q=is%3Aopen+is%3Apr)/[Closed](https://github.com/dotnet/roslyn/pulls?q=is%3Apr+is%3Aclosed)\n\nLooking for something to work on? The list of [up for grabs issues](https://github.com/dotnet/roslyn/labels/help%20wanted) is a great place to start.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).  For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n### .NET Foundation\n\nThis project is part of the [.NET Foundation](http://www.dotnetfoundation.org/projects) along with other\nprojects like [the class libraries for .NET Core](https://github.com/dotnet/corefx/).\n"}, {"repo": "/Alfred1984/interesting-python", "language": "Jupyter Notebook", "readme_contents": "# <p align=\"center\">interesting-python: \u6709\u8da3\u7684Python\u722c\u866b\u548c\u6570\u636e\u5206\u6790\u5c0f\u9879\u76ee</p>\n\n<p align=\"center\">\n    <a href=\"\">\n        <img src=\"https://img.shields.io/badge/\u72b6\u6001-\u6301\u7eed\u66f4\u65b0\u4e2d-brightgreen.svg\">\n        </a>\n    <a href=\"https://github.com/python/cpython\">\n        <img src=\"https://img.shields.io/badge/Python-3.6-blue.svg\">\n        </a>\n    <a href=\"https://wx1.sinaimg.cn/mw690/007yVcwsgy1g03lo67ikoj30u00f0ta0.jpg\">\n        <img src=\"https://img.shields.io/static/v1.svg?label=%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7&message=Alfred%E6%95%B0%E6%8D%AE%E5%AE%A4&color=ff69b4\">\n        </a>\n    <a href=\"https://github.com/Alfred1984/interesting-python\">\n    <img src=\"https://img.shields.io/github/stars/Alfred1984/interesting-python.svg?style=social\">\n        </a>\n    <a href=\"https://github.com/Alfred1984/interesting-python\">\n    <img src=\"https://img.shields.io/github/forks/Alfred1984/interesting-python.svg?style=social\">\n        </a>\n</p>\n\n\n\n## \u7b80\u4ecb\n\n\u53ef\u4ee5\u7528Python\u5b9e\u73b0\u7684\u6709\u8da3\u7684\u5c0f\u9879\u76ee\uff0c\u5185\u5bb9\u5305\u62ecPython\u722c\u866b\u3001Python\u6570\u636e\u5206\u6790\u3001\u673a\u5668\u5b66\u4e60\u3001\u6df1\u5ea6\u5b66\u4e60\u7b49\uff0c\u6301\u7eed\u66f4\u65b0\u4e2d\u3002  \n\u672cRepository\u4e3b\u8981\u7528\u4e8e\u5b58\u653e\u9879\u76ee\u4ee3\u7801\uff0c\u5bf9\u5e94\u7684\u9879\u76ee\u6587\u7ae0\u53ef\u4ee5\u5173\u6ce8\u516c\u4f17\u53f7\u3002  \n</br>\n\n\u4f5c\u8005\uff1aAlfred  \n\u5fae\u4fe1\u516c\u4f17\u53f7\uff1a[Alfred\u6570\u636e\u5ba4](https://wx1.sinaimg.cn/mw690/007yVcwsgy1g03lo67ikoj30u00f0ta0.jpg)\uff08\u539f\u540d\u4e3aAlfred\u5728\u7ebd\u897f\u5170\uff09  \n\u5408\u4f5c\u8bf7\u52a0\u5fae\u4fe1\u53f7\uff1aJuly-december\n\n</br>\n\n\n## Alfred\u6570\u636e\u5ba4\u8bfe\u7a0b\n\n\u5e94\u8bf8\u4f4d\u8bfb\u8005\u670b\u53cb\u7684\u8981\u6c42\uff0cAlfred\u6570\u636e\u5ba4\u5c06\u9646\u7eed\u63a8\u51fa **\u300a\u5b9e\u6218\u73a9\u8f6c\u6570\u636e\u79d1\u5b66\u300b** \u7cfb\u5217\u8bfe\u7a0b\uff0c\u8bfe\u7a0b\u5206\u4e3a\u6570\u636e\u83b7\u53d6\u3001\u6570\u636e\u5206\u6790\u3001\u5927\u6570\u636e\u5206\u6790\u4e09\u4e2a\u90e8\u5206\uff0c\u4ece\u5982\u4f55\u83b7\u53d6\u6570\u636e\u3001\u600e\u4e48\u5206\u6790\u6570\u636e\u3001\u901a\u8fc7\u4ec0\u4e48\u65b9\u6cd5\u5206\u6790\u6d77\u91cf\u6570\u636e\u4e09\u65b9\u9762\u5e26\u5927\u5bb6\u73a9\u8f6c\u6570\u636e\u5206\u6790\u3002\n \n\u6570\u636e\u83b7\u53d6\u90e8\u5206\u5b50\u8bfe\u7a0b **[\u300a\u5b9e\u6218\u73a9\u8f6cPython\u722c\u866b\u300b](https://study.163.com/course/introduction/1209511875.htm?share=2&shareId=480000001946441)** \u73b0\u5df2\u6b63\u5f0f\u4e0a\u7ebf\u3002\u8bfe\u7a0b\u4ee5\u76ee\u6807\u4e3a\u5bfc\u5411\uff0c\u4ece\u9879\u76ee\u51fa\u53d1\uff0c\u5341\u5927\u6848\u4f8b\u638c\u63e1\u6570\u636e\u83b7\u53d6\uff0c\u8ba9Python\u722c\u866b\u5b66\u4e60\u601d\u8def\u66f4\u6e05\u6670\uff0c\u8def\u5f84\u66f4\u660e\u786e\u3002\u8be6\u60c5\u53ef\u70b9\u51fb\uff1a[\u5b9e\u6218\u73a9\u8f6cPython\u722c\u866b](https://study.163.com/course/introduction/1209511875.htm?share=2&shareId=480000001946441)\n \n \u53ef\u4ee5\u626b\u63cf\u4ee5\u4e0b\u4e8c\u7ef4\u7801\u8fdb\u884c\u8bfe\u7a0b\u54a8\u8be2\u54e6\uff1a\n \n <img src=\"https://github.com/Alfred1984/interesting-python/blob/master/Mia%E4%BA%8C%E7%BB%B4%E7%A0%81.jpg\" width=\"150\" />\n\n</br>\n\n\n### \u9879\u76ee\u4ecb\u7ecd\n1. **LiveStreaming**:\n- \u5185\u5bb9\uff1a \u722c\u53d6\u4e86\u897f\u74dc\u76f4\u64ad\uff08\u4eca\u65e5\u5934\u6761\u65d7\u4e0bAPP\uff09\u5404\u7c7b\u578b\u6e38\u620f\u7684\u4e3b\u64ad\u76f4\u64ad\u6570\u636e107.5\u4e07\u6761\uff0c\u5e76\u5206\u6790\u76f4\u64ad\u5e73\u53f0\u548c\u6e38\u620f\u4e3b\u64ad\u884c\u4e1a\u662f\u5426\u771f\u5982\u6211\u4eec\u60f3\u8c61\u822c\u7684\u66b4\u5229\n- \u5bf9\u5e94\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff1a\u300a[\u6e38\u620f\u76f4\u64ad\u884c\u4e1a\u771f\u7684\u5982\u4f60\u60f3\u8c61\u822c\u66b4\u5229\uff1f](https://mp.weixin.qq.com/s/-B8cWjB6db6t0gNmqJ34GQ)\u300b\n- \u9002\u5408\u4eba\u7fa4\uff1aPython\u722c\u866b\u5b66\u4e60\u8005\u3001Python\u6570\u636e\u5206\u6790\u5b66\u4e60\u8005\u3001Pandas\u4f7f\u7528\u8005\u3001\u6570\u636e\u53ef\u89c6\u5316\u5b66\u4e60\u8005\n- \u96be\u5ea6\uff1a\u2605\u2605\u2605\u2605\u2606\n\n</br>\n\n\n2. **LaborDay**:\n- \u5185\u5bb9\uff1a \u6309\u5168\u56fd\u5404\u4e2a\u57ce\u5e02\u6293\u53d6\u98de\u732a\u201c\u666f\u70b9\u95e8\u7968\u201d\u680f\u7684\u666f\u70b9\u95e8\u7968\u9500\u552e\u6570\u636e\uff0c\u5e76\u4e14\u5206\u6790\u4e94\u4e00\u54ea\u4e9b\u666f\u70b9\u4f1a\u4eba\u6324\u4eba\uff0c\u54ea\u4e9b\u666f\u70b9\u503c\u5f97\u4e00\u53bb\n- \u5bf9\u5e94\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff1a\u300a[\u4e94\u4e00\u4e0d\u770b\u4eba\u4eba\u4eba\u4eba\u4eba\u4eba\uff0c\u54ea\u513f\u800d\u5408\u9002\uff1f](https://mp.weixin.qq.com/s/iuCNreCuKzrggdXtvurpkQ)\u300b\n- \u9002\u5408\u4eba\u7fa4\uff1aPython\u722c\u866b\u5b66\u4e60\u8005\u3001Python\u6570\u636e\u5206\u6790\u5b66\u4e60\u8005\u3001Pandas\u4f7f\u7528\u8005\u3001\u6570\u636e\u53ef\u89c6\u5316\u5b66\u4e60\u8005\n- \u96be\u5ea6\uff1a\u2605\u2605\u2606\u2606\u2606\n\n</br>\n\n\n3. **KrisWu**:\n- \u5185\u5bb9\uff1a \u968f\u673a\u6293\u53d6\u5434\u4ea6\u51e1\u53d1\u8868\u300a\u5927\u7897\u5bbd\u9762\u300b\u5fae\u535a\u7684\u5fae\u535a\u8f6c\u53d1\u6570\u636e10\u4e07\u6761\uff0c\u5e76\u5206\u6790\u8be5\u6761\u5fae\u535a\u7684\u771f\u5047\u8f6c\u53d1\u6bd4\u4f8b\uff0c\u4ee5\u53ca\u5927\u5bb6\u5bf9\u4e8e\u8fd9\u9996\u6b4c\u7684\u60c5\u611f\u503e\u5411\u5982\u4f55\n- \u5bf9\u5e94\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff1a\u300a[\u5927\u7897\u5bbd\u9762 VS \u5f8b\u5e08\u51fd\u8b66\u544a\uff0c\u60c5\u611f\u5206\u6790\u5434\u4ea6\u51e1\u81ea\u9ed1\u5f0f\u5708\u7c89\uff01](https://mp.weixin.qq.com/s/Neh3asFZAtcIzywwXstBYQ)\u300b\n- \u9002\u5408\u4eba\u7fa4\uff1aPython\u722c\u866b\u5b66\u4e60\u8005\u3001Python\u6570\u636e\u5206\u6790\u5b66\u4e60\u8005\u3001Pandas\u4f7f\u7528\u8005\u3001\u6570\u636e\u53ef\u89c6\u5316\u5b66\u4e60\u8005\n- \u96be\u5ea6\uff1a\u2605\u2605\u2605\u2606\u2606\n\n</br>\n\n\n4. **ESL**:\n- \u5185\u5bb9\uff1a \u722c\u53d6\u5916\u7c4d\u4eba\u5458\u62db\u8058\u7f51\u7ad9JobLEADChina\u4e0a\u7684\u5916\u7c4d\u82f1\u8bed\u8001\u5e08\u62db\u8058\u6570\u636e945\u6761\uff0c\u4e07\u884c\u6559\u5e08\u4eba\u624d\u7f51\u4e0a\u7684\u82f1\u8bed\u8001\u5e08\u62db\u8058\u6570\u636e5780\u6761\uff0c\u4ee5\u53ca\u5fae\u4fe1\u7fa4\u6210\u5458\u4fe1\u606f498\u6761\uff0c\u5206\u6790\u5916\u6559\u6559\u5e08\u7684\u62db\u8058\u72b6\u51b5\n- \u5bf9\u5e94\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff1a\u300a[\u6ca1\u7ecf\u9a8c\u6ca1\u5b66\u5386\u7684\u5916\u6559\u4e3a\u5565\u80fd\u62ff1.4W+\u7684\u9ad8\u85aa\uff1f](https://mp.weixin.qq.com/s/BMfiB08gWy66zzvCe2lJmQ)\u300b\n- \u9002\u5408\u4eba\u7fa4\uff1aPython\u722c\u866b\u5b66\u4e60\u8005\u3001Python\u6570\u636e\u5206\u6790\u5b66\u4e60\u8005\u3001Pandas\u4f7f\u7528\u8005\u3001\u6570\u636e\u53ef\u89c6\u5316\u5b66\u4e60\u8005\n- \u96be\u5ea6\uff1a\u2605\u2606\u2606\u2606\u2606\n\n</br>\n\n5. **ICU996**:\n- \u5185\u5bb9\uff1a \u722c\u53d6\u7a0b\u5e8f\u5458\u96c6\u4f53\u62b5\u5236996\u7684Github\u70ed\u95e8\u9879\u76ee[996.ICU](996.ICU)\u4e2d\uff0cIssues\u9875\u9762\u8ba8\u8bba\u6570\u636e\u548c\u70b9\u4e86star\u7684\u7a0b\u5e8f\u5458Github\u4e2a\u4eba\u4fe1\u606f\u6570\u636e\uff0c\u5e76\u4e14\u5206\u6790\u8fd9\u7fa4\u62b5\u5236996\u7684\u7a0b\u5e8f\u5458\u90fd\u662f\u4f55\u65b9\u795e\u5723\n- \u5bf9\u5e94\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff1a\u300a[\u5927\u80c6\uff0c\u90fd\u662f\u54ea\u4e9b\u7a0b\u5e8f\u5458\u5728\u53cd\u5bf9996\uff1f\uff01](https://mp.weixin.qq.com/s/BZhHcEwdUJNJRVFix8NRSQ)\u300b\n- \u9002\u5408\u4eba\u7fa4\uff1aPython\u722c\u866b\u5b66\u4e60\u8005\u3001Python\u6570\u636e\u5206\u6790\u5b66\u4e60\u8005\u3001Pandas\u4f7f\u7528\u8005\u3001\u6570\u636e\u53ef\u89c6\u5316\u5b66\u4e60\u8005\n- \u96be\u5ea6\uff1a\u2605\u2605\u2606\u2606\u2606\n\n</br>\n\n6. **Paediatrician**:\n- \u5185\u5bb9\uff1a \u722c\u53d6[\u4e01\u9999\u4eba\u624d\u7f51](https://www.jobmd.cn/)10950\u6761\u6db5\u76d6\u513f\u79d1\u3001\u5185\u79d1\u3001\u5916\u79d1\u3001\u5987\u4ea7\u79d1\u3001\u773c\u79d1\u7684\u62db\u8058\u6570\u636e\uff0c\u5e76\u4e14\u5206\u6790\u513f\u79d1\u533b\u751f\u7684\u751f\u5b58\u5904\u5883\n- \u5bf9\u5e94\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff1a\u300a[\u513f\u79d1\u533b\u751f\u7684\u773c\u6cea\uff0c\u5168\u88ab\u6570\u636e\u770b\u89c1\u4e86](https://mp.weixin.qq.com/s/3SCI4kL-YX-9q1WDY23J-A)\u300b\n- \u9002\u5408\u4eba\u7fa4\uff1aPython\u722c\u866b\u5b66\u4e60\u8005\u3001Python\u6570\u636e\u5206\u6790\u5b66\u4e60\u8005\u3001Pandas\u4f7f\u7528\u8005\u3001\u6570\u636e\u53ef\u89c6\u5316\u5b66\u4e60\u8005\n- \u96be\u5ea6\uff1a\u2605\u2605\u2605\u2606\u2606\n\n</br>\n\n7. **CaiXuKun**:\n- \u5185\u5bb9\uff1a \u968f\u673a\u6293\u53d6\u8521\u5f90\u5764100\u4e07+\u8f6c\u53d1\u7684\u5fae\u535a\u300a\u518d\u89c1\uff0c\u201c\u4efb\u6027\u7684\u201d\u5343\u5343\u2026\u300b\u768410\u4e07\u6761\u8f6c\u53d1\u6570\u636e\uff0c\u5e76\u4e14\u5206\u6790\u8521\u5f90\u5764\u771f\u5047\u8f6c\u53d1\u6d41\u91cf\u7684\u6bd4\u4f8b\u4ee5\u53ca\u771f\u5047\u7c89\u4e1d\u7684\u7528\u6237\u753b\u50cf\n- \u5bf9\u5e94\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff1a\u300a[\u7528\u5927\u6570\u636e\u6252\u4e00\u6252\u8521\u5f90\u5764\u7684\u771f\u5047\u6d41\u91cf\u7c89](https://mp.weixin.qq.com/s/j1kgf2RR7jssbWa7uWC-uA)\u300b\n- \u9002\u5408\u4eba\u7fa4\uff1aPython\u722c\u866b\u5b66\u4e60\u8005\u3001Python\u6570\u636e\u5206\u6790\u5b66\u4e60\u8005\u3001Pandas\u4f7f\u7528\u8005\u3001\u6570\u636e\u53ef\u89c6\u5316\u5b66\u4e60\u8005\n- \u96be\u5ea6\uff1a\u2605\u2605\u2605\u2606\u2606\n\n</br>\n\n8. **BSGS_Rent**:\n- \u5185\u5bb9\uff1a \u722c\u53d6\u5317\u4e0a\u5e7f\u6df1\u56db\u4e2a\u57ce\u5e02\u7684\u94fe\u5bb6\u79df\u623f\u623f\u6e90\u4fe1\u606f\uff0c\u5e76\u4e14\u5206\u6790\u56db\u4e2a\u57ce\u5e02\u7684\u79df\u623f\u73b0\u72b6\u548c\u8003\u8651\u56e0\u7d20\n- \u5bf9\u5e94\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff1a\u300a[\u5317\u4e0a\u5e7f\u6df1\u79df\u623f\u56fe\u9274](https://mp.weixin.qq.com/s/sb-g7sGmPJPIsfF23INlmQ)\u300b\n- \u9002\u5408\u4eba\u7fa4\uff1aPython\u722c\u866b\u5b66\u4e60\u8005\u3001Python\u6570\u636e\u5206\u6790\u5b66\u4e60\u8005\u3001Pandas\u4f7f\u7528\u8005\u3001\u6570\u636e\u53ef\u89c6\u5316\u5b66\u4e60\u8005\n- \u96be\u5ea6\uff1a\u2605\u2605\u2605\u2606\u2606\n</br>\n\n\n9. **Fireworks_and_Pm2.5**:\n- \u5185\u5bb9\uff1a \u722c\u53d6\u5168\u56fd367\u4e2a\u57ce\u5e02\u7684\u7a7a\u6c14\u8d28\u91cf\u6307\u6570\u6570\u636e\uff0c\u5e76\u5206\u6790\u70df\u82b1\u7206\u7af9\u5bf9\u7a7a\u6c14\u8d28\u91cf\u7684\u5f71\u54cd\uff0c\u4ee5\u53ca\u57ce\u5e02\u7981\u653e\u70df\u82b1\u7206\u7af9\u662f\u5426\u6709\u6548\n- \u5bf9\u5e94\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff1a\u300a[\u516d\u4e07\u6761\u6570\u636e\u5168\u9762\u89e3\u6790\uff0c\u57ce\u5e02\u6625\u8282\u7981\u653e\u70df\u82b1\u7206\u7af9\u771f\u7684\u6709\u7528\u5417\uff1f](https://mp.weixin.qq.com/s/TO9ouZXOThiM5iOHqt0i0A)\u300b\n- \u9002\u5408\u4eba\u7fa4\uff1aPython\u722c\u866b\u5b66\u4e60\u8005\u3001Python\u6570\u636e\u5206\u6790\u5b66\u4e60\u8005\u3001Pandas\u4f7f\u7528\u8005\u3001\u6570\u636e\u53ef\u89c6\u5316\u5b66\u4e60\u8005\n- \u96be\u5ea6\uff1a\u2605\u2605\u2605\u2606\u2606\n</br>\n\n\n10. **TheWanderingEarth**:\n- \u5185\u5bb9\uff1a \u722c\u53d6\u7535\u5f71\u300a\u6d41\u6d6a\u5730\u7403\u300b\u7684\u732b\u773c\u8bc4\u8bba\u548c\u8bc4\u5206\uff0c\u5e76\u5206\u6790\u8be5\u7535\u5f71\u51fa\u73b0\u4f4e\u5206\u7684\u539f\u56e0\n- \u5bf9\u5e94\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff1a\u300a[\u5341\u4e07\u6761\u8bc4\u8bba\u544a\u8bc9\u4f60\uff0c\u7ed9\u300a\u6d41\u6d6a\u5730\u7403\u300b\u8bc41\u661f\u7684\u90fd\u662f\u4ec0\u4e48\u5fc3\u6001\uff1f](https://mp.weixin.qq.com/s/3d_ycK0D1KfbjQJ3m7FhEQ)\u300b\n- \u9002\u5408\u4eba\u7fa4\uff1aPython\u722c\u866b\u5b66\u4e60\u8005\u3001Python\u6570\u636e\u5206\u6790\u5b66\u4e60\u8005\u3001Pandas\u4f7f\u7528\u8005\u3001\u6570\u636e\u53ef\u89c6\u5316\u5b66\u4e60\u8005\n- \u96be\u5ea6\uff1a\u2605\u2605\u2605\u2606\u2606\n</br>\n\n\n11. **Weibo_Comment_Pics**:\n- \u5185\u5bb9\uff1a \u6a21\u62df\u767b\u9646\u5fae\u535a\u624b\u673a\u7aef\u722c\u53d6\u6d77\u91cf\u8868\u60c5\u5305\n- \u5bf9\u5e94\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff1a\u300a[\u5f00\u5e74\u8868\u60c5\u5305\u5c40\u90e8\u5bcc\u6709\u6307\u5357\uff0c\u76d8\u5b83\uff01](https://mp.weixin.qq.com/s/iTtVXMVdoTBxWHzEzbQH1Q)\u300b\n- \u9002\u5408\u4eba\u7fa4\uff1aPython\u722c\u866b\u5b66\u4e60\u8005\n- \u96be\u5ea6\uff1a\u2605\u2605\u2605\u2606\u2606\n</br>\n\n12. **English_names**: \n- \u5185\u5bb9\uff1a \u5206\u6790\u7f8e\u56fd\u5a74\u513f\u53d6\u540d\u6570\u636e\uff0c\u4e3a\u53d6\u82f1\u6587\u540d\u63d0\u4f9b\u4e00\u4e9b\u5efa\u8bae\n- \u5bf9\u5e94\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff1a\u300a[\u770b\u5b8c\u8fd9\u7bc7\u5206\u6790\uff0c\u697c\u4e0b\u7684Tony\u548cKevin\u90fd\u6539\u540d\u4e86\uff01](https://mp.weixin.qq.com/s/7dGJbueO-_cLuw9d8mPUyg)\u300b\n- \u9002\u5408\u4eba\u7fa4\uff1aPython\u6570\u636e\u5206\u6790\u5b66\u4e60\u8005\u3001Pandas\u4f7f\u7528\u8005\u3001\u6570\u636e\u53ef\u89c6\u5316\u5b66\u4e60\u8005\n- \u96be\u5ea6\uff1a\u2605\u2605\u2605\u2606\u2606\n</br>\n\n13. **shixiseng_packet_capture**\n- \u5185\u5bb9\uff1a\u4e3b\u8981\u901a\u8fc7\u624b\u673a\u6293\u5305\u5206\u6790\u548c\u83b7\u53d6\u201c\u5b9e\u4e60\u50e7\u201d\u7f51\u7ad9iso\u7aef\u7684\u6570\u636e\u63a5\u53e3\uff0c\u6709\u4e86\u63a5\u53e3\u4fbf\u53ef\u4ee5\u76f4\u63a5\u7f16\u5199\u4ee3\u7801\u722c\u53d6\u6570\u636e\n- \u5bf9\u5e94\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff1a\u300a[\u56de\u590d\u201c\u5b9e\u4e60\u50e7\u201dCTO\u4e4b\u6362\u79cd\u59ff\u52bf\u722c\u53d6\u5b9e\u4e60\u50e7\u7f51\u7ad9](https://mp.weixin.qq.com/s/UF3SF_cpbx8PFkva7rWW3Q)\u300b\n- \u9002\u5408\u4eba\u7fa4\uff1aPython\u722c\u866b\u5b66\u4e60\u8005\u3001\u624b\u673a\u6293\u5305\u5b66\u4e60\u8005\n- \u96be\u5ea6\uff1a\u2605\u2606\u2606\u2606\u2606\n</br>\n\n14. **PUBG-juediqiusheng-data_analysis**\n- \u5185\u5bb9\uff1a\u4e3b\u8981\u5206\u6790\u7edd\u5730\u6c42\u751f72\u4e07\u573a\u6bd4\u8d5b\u7684\u6570\u636e\uff0c\u5e76\u7ed3\u5408\u6570\u636e\u7ed9\u51fa\u5403\u9e21\u653b\u7565\uff0c\u7528\u6570\u636e\u5403\u9e21\uff01\n- \u5bf9\u5e94\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff1a\u300a[\u301020G\u3011Kaggle\u6570\u636e\u96c6\u5f3a\u52bf\u5206\u6790\u201c\u7edd\u5730\u6c42\u751f\u201d\uff0c\u653b\u7565\u5403\u9e21\uff01](https://mp.weixin.qq.com/s/FednLB6IIQFBmMYv3udm0A)\u300b\n- \u9002\u5408\u4eba\u7fa4\uff1aPython\u6570\u636e\u5206\u6790\u5b66\u4e60\u8005\u3001Pandas\u4f7f\u7528\u8005\u3001\u5404\u4f4d\u5403\u9e21\u89c2\u4f17\n- \u96be\u5ea6\uff1a\u2605\u2605\u2605\u2606\u2606\n</br>\n\n15. **Wechat_article_collector**\uff1a\n- \u5185\u5bb9\uff1a\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u91c7\u96c6\u5668\uff0c\u7528\u4e8e\u91c7\u96c6\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\u5e76\u4fdd\u5b58\u81f3word\u6587\u6863\n- \u5bf9\u5e94\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff1a\u300a[50\u884c\u4ee3\u7801\u6559\u4f60\u6253\u9020\u4e00\u4e2a\u516c\u4f17\u53f7\u6587\u7ae0\u91c7\u96c6\u5668](https://mp.weixin.qq.com/s/Yt4Gde2TuCWvK8pPCiZZRQ)\u300b\n- \u9002\u5408\u4eba\u7fa4\uff1aPython\u5b66\u4e60\u8005\u3001\u65b0\u5a92\u4f53\u8fd0\u8425\u4eba\u7fa4\uff1f\n- \u96be\u5ea6\uff1a\u2605\u2605\u2606\u2606\u2606\n- \u6ce8\uff1a\u8be5\u9879\u76ee\u7531\u4e8e\u4f9d\u8d56\u5305[WechatSogou](https://github.com/Chyroc/WechatSogou)\u758f\u4e8e\u7ef4\u62a4\uff0c\u76ee\u524d\u6682\u65f6\u4e0d\u80fd\u4f7f\u7528\u4e86\u3002\uff082019-04-02 updated\uff09\n\n</br>\n\n16. **mongoTV**\uff1a\n- \u5185\u5bb9\uff1a\u722c\u53d6\u8292\u679cTV\u7684\u300a\u6211\u662f\u5927\u4fa6\u63a2\u300b\u8282\u76ee\u8bc4\u8bba\u6570\u636e\uff0c\u5e76\u8fdb\u884c\u60c5\u611f\u5206\u6790\n- \u5bf9\u5e94\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff1a\u300a[\u300a\u6211\u662f\u5927\u4fa6\u63a2\u300b\u5230\u5e95\u600e\u4e48\u4e86\uff1f(\u4e0a\uff1a\u6570\u636e\u722c\u53d6\u7bc7)\u300b](https://mp.weixin.qq.com/s/XmPXUIWfIJGH6AARKltEtQ)\u300b\u3001\u300a[\u300a\u6211\u662f\u5927\u4fa6\u63a2\u300b\u5230\u5e95\u600e\u4e48\u4e86\uff1f\uff08\u4e0b\uff1a\u60c5\u611f\u5206\u6790\u7bc7\uff09](https://mp.weixin.qq.com/s/bm9GKl2ovB91U9_uI48Now)\u300b\n- \u9002\u5408\u4eba\u7fa4\uff1aPython scrapy\u722c\u866b\u5b66\u4e60\u8005\u3001Python\u6570\u636e\u5206\u6790\u5b66\u4e60\u8005\u3001Pandas\u4f7f\u7528\u8005\n- \u96be\u5ea6\uff1a\u2605\u2605\u2605\u2606\u2606\n</br>\n\n17. **shixiseng**: \n- \u5185\u5bb9\uff1a\u722c\u53d6\u5b9e\u4e60\u50e7\u7f51\u7ad9\u4e2d\u201c\u6570\u636e\u6316\u6398\u201d\u7b49\u76f8\u5173\u5c97\u4f4d\u7684\u6570\u636e\uff0c\u5e76\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u6790\n- \u5bf9\u5e94\u5fae\u4fe1\u516c\u4f17\u53f7\u6587\u7ae0\uff1a\u300a[\u5e2e\u4e86\u4e2a\u5c0f\u5fd9|\u7834\u89e3\u201c\u5b9e\u4e60\u50e7\u201d\u7f51\u7ad9\u5b57\u4f53\u52a0\u5bc6](https://mp.weixin.qq.com/s/e56flQKah104IVwd0VfoIQ)\u300b\u3001\u300a[\u201c\u5c0f\u5fd9\u201d\u8fde\u8f7d\u7bc7|\u5b9e\u4e60\u50e7\u7f51\u7ad9\u6570\u636e\u5206\u6790](https://mp.weixin.qq.com/s/FS70XOhmF2w4J3EghCzZfw)\u300b\n- \u9002\u5408\u4eba\u7fa4\uff1aPython\u722c\u866b\u5b66\u4e60\u8005\u3001Python\u6570\u636e\u5206\u6790\u5b66\u4e60\u8005\u3001Pandas\u4f7f\u7528\u8005\n- \u96be\u5ea6\uff1a\u2605\u2605\u2605\u2606\u2606\n</br>\n\n### \u652f\u6301\u4f5c\u8005\n\u71ac\u591c\u6572\u4ee3\u7801\u5199\u7a3f\u4ef6\uff0c\u5496\u5561\u624d\u662f\u7b2c\u4e00\u751f\u4ea7\u529b\u3002\n\n<img src=\"https://github.com/Alfred1984/interesting-python/blob/master/coffee.png\" width=\"300\" />\n\n\u559c\u6b22\u4f5c\u8005\u7684\u5206\u4eab\uff0c\u5982\u4f55\u652f\u6301\u4f5c\u8005\uff1f\n\nMaybe you could buy me a cup of coffee. Salute!\n\n<img src=\"https://github.com/Alfred1984/interesting-python/blob/master/reward.jpg\" width=\"550\" />\n"}, {"repo": "/sixu05202004/pythontutorial3", "language": null, "readme_contents": "pythontutorial3\n===============\n\npython 3.5.1 tutorial\u4e2d\u6587\u7248\n\n\u539f\u5730\u5740\uff1ahttp://docs.python.org/3/tutorial/index.html\n\n\u4e2d\u6587\u5730\u5740\uff1ahttp://www.pythondoc.com/pythontutorial3/index.html\n\n**source** \u6587\u4ef6\u5939\u4e0b\u4e3a rst \u683c\u5f0f\u7684\u6587\u6863\uff1b\n\n**html** \u6587\u4ef6\u5939\u4e0b\u4e3a\u4f7f\u7528 Sphinx \u751f\u6210\u7684 html \u683c\u5f0f\u7684\u6587\u6863\uff1b \n\n**docs** \u6587\u4ef6\u5939\u4e3a\u539f\u59cb\u7248\u4e2d\u6587\u7ffb\u8bd1\uff1b\n\n\n\u5907\u6ce8\uff1a\u56e0\u4e3a\u5e73\u65f6\u5de5\u4f5c\u6bd4\u8f83\u5fd9\uff0c\u5982\u679c\u7248\u672c\u6709\u66f4\u65b0\u7684\u8bdd\uff0c\u8bf7\u76f4\u63a5\u63d0\u4ea4 issues\uff0c\u8c22\u8c22\uff01\n"}, {"repo": "/doyoe/css-handbook", "language": "HTML", "readme_contents": "# CSS\u53c2\u8003\u624b\u518c\n\n[![AppVeyor](https://img.shields.io/appveyor/ci/doyoe/css-handbook.svg)](https://ci.appveyor.com/project/doyoe/css-handbook)\n\n\u56fd\u5185\u6700\u597d\u7684CSS\u53c2\u8003\u624b\u518c\uff0c\u6301\u7eed\u5c0f\u6b65\u66f4\u65b0\u3002\u3002\u3002\n\n## \u6d4f\u89c8\u5668\u652f\u6301\u7b56\u7565\n\n\u624b\u518c\u5728\u63a5\u4e0b\u6765\u5c06\u53ea\u66f4\u65b0 `IE8.0+`, `Firefox40.0+`, `Chrome40.0+`, `iOS8.0+`, `Android4.4+`, `Android Chrome28.0+`, `Opera40.0+`\uff08Opera\u4ece15.0\u5f00\u59cb\u8f6c\u5165webkit\u9635\u8425\uff09\u7684\u652f\u6301\u6570\u636e\uff0c\u4f4e\u4e8e\u8fd9\u4e9b\u7248\u672c\u7684\u6570\u636e\u5c06\u4e0d\u518d\u66f4\u65b0\uff0c\u5171\u540c\u671f\u671b\u672a\u6765\u524d\u7aef\u7684\u73af\u5883\u8d8a\u6765\u8d8a\u597d\u3002\n\n\u5bf9\u4e8e `IE` \u548c `Edge`\uff0c\u624b\u518c\u662f\u5408\u5e76\u5230\u4e00\u8d77\u4f53\u73b0\u7684\u3002`IE11.0 \u53ca\u4e4b\u524d` \u7684\u7248\u672c\u4e3a `IE \u6d4f\u89c8\u5668`\uff0c`IE12.0 \u53ca\u4ee5\u540e` \u7684\u7248\u672c\u4e3a `Edge \u6d4f\u89c8\u5668`\uff0c\u9605\u8bfb\u8005\u53ef\u6839\u636e\u7248\u672c\u6765\u786e\u5b9a\u3002\n\n## \u7248\u672c\u66f4\u65b0\n\n\u624b\u518c\u7684\u53d1\u7248\u5468\u671f\u4e0d\u56fa\u5b9a\uff0c\u4f1a\u89c6\u4e2a\u4eba\u7cbe\u529b\u6216\u66f4\u65b0\u5185\u5bb9\u7684\u91cd\u8981\u6027\u6765\u51b3\u5b9a\u662f\u5426\u53d1\u5e03\u65b0\u7248\u672c\u3002\n\n### \u5386\u53f2\u7248\u672c\uff1a\n\n\u5982\u60f3\u67e5\u770b\u66f4\u591a\u7248\u672c\u53d8\u66f4\u5386\u53f2\uff0c\u8bf7\u67e5\u770b [\u7248\u672c\u53d8\u66f4\u8bb0\u5f55](http://css.doyoe.com/introduction/change-list.htm)\n\n\n## \u95ee\u9898\u53ca\u53cd\u9988\n\n\u5982\u679c\u60a8\u5728\u4f7f\u7528CSS\u53c2\u8003\u624b\u518c\u65f6\u53d1\u73b0\u4e86\u4efb\u4f55\u95ee\u9898\uff0c\u6216\u8005\u6709\u4efb\u4f55\u5e2e\u52a9\u624b\u518c\u66f4\u5b8c\u5584\u7684\u60f3\u6cd5\u548c\u5efa\u8bae\uff0c\u8bf7\u76f4\u63a5\u7ed9\u6211\u4eec\u63d0 [Issues](https://github.com/doyoe/css-handbook/issues/new) \u548c [Pull Requests](https://github.com/doyoe/css-handbook/pulls)\u3002\n\n\n## \u4f5c\u8005\n\n\u675c\u7476\uff0c\u6211\u76ee\u524d\u5c45\u4f4f\u5728\u5317\u4eac\uff0c\u5c31\u804c\u4e8e [Qunar](http://www.qunar.com)\uff0c\u60a8\u53ef\u4ee5\u5728 [Github](https://github.com/doyoe) \u6216\u8005 [Weibo](http://weibo.com/doyoe) \u770b\u5230\u6211\u7684\u6700\u8fd1\u52a8\u6001\u3002\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6211\u7684[\u4e2a\u4eba\u7ad9\u70b9](http://www.doyoe.com)\uff0c\u535a\u5ba2\uff1a[CSS\u63a2\u7d22\u4e4b\u65c5](http://blog.doyoe.com)\uff0c[CSS\u53c2\u8003\u624b\u518c](http://css.doyoe.com) \u548c [Web\u524d\u7aef\u5b9e\u9a8c\u5ba4](http://demo.doyoe.com) \u7b49\u4fe1\u606f\u4e86\u89e3\u66f4\u591a\u3002\n\n\n## \u7248\u672c\u8bb8\u53ef\n\n\u6e90\u7801\u548c\u6587\u6863\u7248\u6743\u5c5e\u4e8e [doyoe.com](http://www.doyoe.com)\u3002\u6587\u6863\u53d1\u5e03\u57fa\u4e8e [Apache License 2.0](http://www.apache.org/licenses/LICENSE-2.0) \u5f00\u6e90\u534f\u8bae\u3002"}, {"repo": "/michaelliao/awesome-python-webapp", "language": null, "readme_contents": "awesome-python-webapp\n=====================\n\n\u8fd9\u662f\u201c[\u5c0f\u767d\u7684Python\u6559\u7a0b](http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000)\u201d\u4e2d\u201c[\u5b9e\u6218](http://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/001397616003925a3d157284cd24bc0952d6c4a7c9d8c55000)\u201d\u7ae0\u7684\u5b8c\u6574\u7f51\u7ad9 + iOS App\u6e90\u7801\u3002\n\n\u8981\u67e5\u770b\u793a\u4f8b\u7f51\u7ad9\u8fd0\u884c\u6548\u679c\uff0c\u731b\u51fb\uff1a\n\n[http://awesome.liaoxuefeng.com/](http://awesome.liaoxuefeng.com/)\n\n\u793a\u4f8b\u7f51\u7ad9\u7531[Sina AppEngine](http://sae.sina.com.cn/)\u6258\u7ba1\u3002\n\n\u8981\u4e0b\u8f7d\u6e90\u7801\uff0c\u8bf7\u76f4\u63a5\u901a\u8fc7Git\u83b7\u53d6\u6e90\u7801\u3002\n\n\u5b9e\u6218\u7ae0\u8282\u7684\u6bcf\u5929\u7684\u589e\u91cf\u6e90\u7801\u5728\u5206\u652f\u201cday-xx\u201d\u4e2d\u3002\n"}, {"repo": "/jerrywu2013/Python", "language": "Jupyter Notebook", "readme_contents": "Python tutorial in ubuntu\n==========\n####Installation and quick start\nWin: http://continuum.io/downloads#py34\n####How do I install additional packages into Anaconda?\n```\nconda install pymysql\nbinstar search -t conda psycopg2\nconda install binstar\n````\n#####https://binstar.org/search?q=psycopg2\n```\nconda install -c https://conda.binstar.org/jonrowland psycopg2\n```\n```\nsudo apt-get install python3-all\nwhereis python3\nalias python=python3\napt-get -y install python-pip\npip install \"ipython[notebook]\"\npip install --upgrade ipython[notebook]\n\n```\n\n#### Reference\nhttps://iampennywu.gitbooks.io/introducing-python/content/\n\nhttps://github.com/HuskyHsu/Introducing-Python\n\n####Python with Tensorflow\n\n1.CNN_for_textile <https://github.com/jerrywu2013/Python/tree/master/2019/CNN_for_textile>\n\n2.Chinese Visual understanding <https://github.com/jerrywu2013/Python/tree/master/2019/Chinese%20Visual%20understanding>\n\n3.GPU_TF <https://github.com/jerrywu2013/Python/tree/master/2019/GPU_TF>\n\n4.Sentiment analysis <https://github.com/jerrywu2013/Python/tree/master/2019/Sentiment%20analysis>\n\n"}, {"repo": "/kailashahirwar/cheatsheets-ai", "language": null, "readme_contents": "# AI Cheatsheets\n\nEssential Cheat Sheets for deep learning and machine learning engineers\n\nWebsite: https://aicheatsheets.com\n\n<p align=\"center\">\n  <img width=\"50%\" height=\"auto\" src=\"Triplebyte_logo.png\">\n</p>\n<p align=\"center\">\nLooking for a new job? Take Triplebyte\u2019s <a href=\"https://triplebyte.com/a/ZYAvvEc/d\">quiz</a> and get a job at top companies like Adobe, Dropbox and Instacart!\n</p>\n\n![website-1](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/screenshots/website.png)\n\n![website-2](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/screenshots/website-2.png)\n\n![tensorflow-1](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/screenshots/tensorflow1.png)\n\nMedium Article: https://medium.com/@kailashahirwar/essential-cheat-sheets-for-machine-learning-and-deep-learning-researchers-efb6a8ebd2e5\n\n![medium-article](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/screenshots/medium-article.png)\n\nReddit Thread: https://www.reddit.com/r/Python/comments/cyslju/ai_cheatsheets_now_learn_tensorflow_keras_pytorch/?utm_source=share&utm_medium=web2x\n\n![reddit-post](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/screenshots/reddit-post.png)\n  \n    \n  - [**Tensorflow**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/PDFs/Tensorflow.pdf)<br>\n  - [**Keras**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Keras.jpg)<br>\n  - [**Neural Networks Zoo**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Neural%20Networks%20Zoo.png)<br>\n  - [**Numpy**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Numpy.png)<br>\n  - [**Scipy**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Scipy.png)<br>\n  - [**Pandas-1**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Pandas-1.jpg)<br>\n  - [**Pandas-2**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Pandas-2.jpg)<br>\n  - [**Pandas-3**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Pandas-3.png)<br>\n  - [**Scikit-learn**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Scikit%20Learn.png)<br>\n  - [**Matplotlib**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Matplotlib.png)<br>\n  - [**Seaborn**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/seaborn.png)<br>\n  - [**ggplot2-1**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/ggplot2-1.jpg)<br>\n  - [**ggplot2-2**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/ggplot2-2.jpg)<br>\n  - [**PySpark**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/PySpark.jpg)<br>\n  - [**PySpark-RDD**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/PySpark-RDD.png)<br>\n  - [**PySpark-SQL**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/PySpark-SQL.png)<br>\n  - [**R Studio(dplyr & tidyr)-1**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Data%20Wrangling%20with%20dplyr%20and%20tidyr%20-%20R%20Studio-1.jpg)<br>\n  - [**R Studio(dplyr & tidyr)-2**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Data%20Wrangling%20with%20dplyr%20and%20tidyr%20-%20R%20Studio-2.jpg)<br>\n  - [**Neural Network Cells**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Neural%20Network%20Cells.png)<br>\n  - [**Neural Network Graphs**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Neural%20Network%20Graphs.png)<br>\n  - [**Deep Learning Cheat Sheet**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Deep%20Learning%20Cheat%20Sheet-Hacker%20Noon.pdf)<br>\n  - [**Dask1**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Dask1.png)\n  - [**Dask2**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Dask2.png)\n  - [**Dask3**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Dask3.png)\n  - [**Dask4**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/Dask4.png)\n  - [**All Cheat Sheets(PDF)**](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/All%20Cheat%20Sheets.pdf)<br>\n  \n[**Medium Article**](https://medium.com/@kailashahirwar/essential-cheat-sheets-for-machine-learning-and-deep-learning-researchers-efb6a8ebd2e5)\n  \nLicense\n-----------------\n\n[MIT License](https://github.com/kailashahirwar/cheatsheets-ai/blob/master/LICENSE.md)\n\n[AI Cheatsheets](https://aicheatsheets.com)"}, {"repo": "/ccg2018/ClashA", "language": "HTML", "readme_contents": "<h1 align=\"center\">\n  <img src=\"https://github.com/Dreamacro/clash/raw/master/docs/logo.png\" alt=\"Clash\" width=\"200\">\n  <br>\n  ClashA\n  <br>\n</h1>\n\n<h4 align=\"center\">An Android GUI for Clash.</h4>\n\n### ClashA will be deprecated soon. For a Clash GUI on Android in active development, use **Clash for Android** developed by Kr328 instead, [Telegram Channel](https://t.me/clash_for_android_channel).\n\nClashA final version: 0.0.3+\n\n### Keywords and Useful Links\n- Clash : A multi-platform & rule-base tunnel, [Github](https://github.com/Dreamacro/clash)\n- ClashX for Mac : A GUI of Clash on macOS, [Github](https://github.com/yichengchen/clashX)\n- Clash for Windows :  a GUI of Clash on Windows, [Github](https://raw.githubusercontent.com/Fndroid/clash_for_windows_pkg)\n\n\n### Build\n\n#### Build Dependencies\n\n* JDK 1.8\n* Android SDK\n  - Android NDK\n#### Steps\n* Clone the repo using `git clone --recurse-submodules <repo>` or update submodules using `git submodule update --init --recursive`\n* Build it using Android Studio or gradle script\n\n"}, {"repo": "/tweepy/tweepy", "language": "Python", "readme_contents": "Tweepy: Twitter for Python!\n======\n\n[![Build Status](http://img.shields.io/travis/tweepy/tweepy/master.svg?style=flat)](https://travis-ci.org/tweepy/tweepy)\n[![Documentation Status](http://img.shields.io/badge/docs-v3.8.0-brightgreen.svg?style=flat)](http://docs.tweepy.org)\n[![Version](http://img.shields.io/pypi/v/tweepy.svg?style=flat)](https://pypi.org/project/tweepy/)\n[![Coverage Status](https://img.shields.io/coveralls/tweepy/tweepy/master.svg?style=flat)](https://coveralls.io/github/tweepy/tweepy?branch=master)\n[![Discord](https://img.shields.io/discord/432685901596852224.svg)](https://discord.gg/bJvqnhg)\n\nInstallation\n------------\nThe easiest way to install the latest version\nis by using pip/easy_install to pull it from PyPI:\n\n    pip install tweepy\n\nYou may also use Git to clone the repository from\nGitHub and install it manually:\n\n    git clone https://github.com/tweepy/tweepy.git\n    cd tweepy\n    python setup.py install\n\nPython 2.7, 3.5, 3.6, 3.7, & 3.8 are supported.\n\nCommunity\n---------\n- [Discord Chat](https://discord.gg/bJvqnhg)\n\n"}, {"repo": "/kivy/python-for-android", "language": "Python", "readme_contents": "python-for-android\n==================\n\n[![Build Status](https://travis-ci.org/kivy/python-for-android.svg?branch=develop)](https://travis-ci.org/kivy/python-for-android)\n[![Coverage Status](https://coveralls.io/repos/github/kivy/python-for-android/badge.svg?branch=develop&kill_cache=1)](https://coveralls.io/github/kivy/python-for-android?branch=develop)\n[![Backers on Open Collective](https://opencollective.com/kivy/backers/badge.svg)](#backers)\n[![Sponsors on Open Collective](https://opencollective.com/kivy/sponsors/badge.svg)](#sponsors)\n\npython-for-android is a packaging tool for Python apps on Android. You can\ncreate your own Python distribution including the modules and\ndependencies you want, and bundle it in an APK along with your own code.\n\nFeatures include:\n\n-  Support for building with both Python 2 and Python 3.\n-  Different app backends including Kivy, PySDL2, and a WebView with\n   Python webserver.\n-  Automatic support for most pure Python modules, and built in support\n   for many others, including popular dependencies such as numpy and\n   sqlalchemy.\n-  Multiple architecture targets, for APKs optimised on any given\n   device.\n\nFor documentation and support, see:\n\n-  Website: http://python-for-android.readthedocs.io\n-  Mailing list: https://groups.google.com/forum/#!forum/kivy-users or\n   https://groups.google.com/forum/#!forum/python-android.\n\n## Documentation\n\nFollow the [quickstart\ninstructions](<https://python-for-android.readthedocs.org/en/latest/quickstart/>)\nto install and begin creating APKs.\n\n**Quick instructions**: install python-for-android with:\n\n    pip install python-for-android\n\n(for the develop branch: `pip install git+https://github.com/kivy/python-for-android.git`)\n\nTest that the install works with:\n\n    p4a --version\n\nTo build any actual apps, **set up the Android SDK and NDK**\nas described in the [quickstart](\n<https://python-for-android.readthedocs.org/en/latest/quickstart/#installing-android-sdk>).\n**Use the SDK/NDK API level & NDK version as in the quickstart,**\nother API levels may not work.\n\nWith everything installed, build an APK with SDL2 with e.g.:\n\n    p4a apk --requirements=kivy --private /home/username/devel/planewave_frozen/ --package=net.inclem.planewavessdl2 --name=\"planewavessdl2\" --version=0.5 --bootstrap=sdl2\n\n**For full instructions and parameter options,** see [the\ndocumentation](https://python-for-android.readthedocs.io/en/latest/quickstart/#usage).\n\n## Support\n\nIf you need assistance, you can ask for help on our mailing list:\n\n-  User Group: https://groups.google.com/group/kivy-users\n-  Email: kivy-users@googlegroups.com\n\nWe also have [#support Discord channel](https://chat.kivy.org/).\n\n## Contributing\n\nWe love pull requests and discussing novel ideas. Check out the Kivy\nproject [contribution guide](http://kivy.org/docs/contribute.html) and\nfeel free to improve python-for-android.\n\nSee [our\ndocumentation](https://python-for-android.readthedocs.io/en/latest/contribute/)\nfor more information about the python-for-android development and\nrelease model, but don't worry about the details. You just need to\nmake a pull request, we'll take care of the rest.\n\nThe following mailing list and IRC channel are used exclusively for\ndiscussions about developing the Kivy framework and its sister projects:\n\n-  Dev Group: https://groups.google.com/group/kivy-dev\n-  Email: kivy-dev@googlegroups.com\n\nWe also have [#dev Discord channel](https://chat.kivy.org/).\n\n## License\n\npython-for-android is released under the terms of the MIT License.\nPlease refer to the LICENSE file.\n\n## History\n\nIn 2015 these tools were rewritten to provide a new, easier-to-use and\neasier-to-extend interface. If you'd like to browse the old toolchain, its\nstatus is recorded for posterity at at\nhttps://github.com/kivy/python-for-android/tree/old_toolchain.\n\nIn the last quarter of 2018 the python recipes were changed. The\nnew recipe for python3 (3.7.1) had a new build system which was\napplied to the ancient python recipe, allowing us to bump the python2\nversion number to 2.7.15. This change unified the build process for\nboth python recipes, and probably solved various issues detected over the\nyears. It should also be mentioned that these **unified python recipes**\nrequire a **minimum target api level of 21**,\n*Android 5.0 - Lollipop*, so in the case that you need to build targeting an\napi level below 21, you should use an older version of python-for-android\n(<=0.7.1).\n\nBe aware that this project is in constant development so, as per time of writing,\nyou should use a minimum on Android's NDK r19, and ``we recommend using NDK r19b``.\nThis is because the toolchains installed by\ndefault with the NDK can be used *in-place* and the python-for-android project\nhas been adapted for that feature. Also be aware that more recent versions of the\nAndroid's NDK may not work.\n\nThose mentioned changes has been done this way to make easier the transition\nbetween python3 and python2. We will slowly phase out python2 support\ntowards 2020...so...if you are using python2 in your projects you should\nconsider migrating it into python3.\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href=\"https://github.com/kivy/python-for-android/graphs/contributors\"><img src=\"https://opencollective.com/kivy/contributors.svg?width=890&button=false\" /></a>\n\n\n## Backers\n\nThank you to all our backers! \ud83d\ude4f [[Become a backer](https://opencollective.com/kivy#backer)]\n\n<a href=\"https://opencollective.com/kivy#backers\" target=\"_blank\"><img src=\"https://opencollective.com/kivy/backers.svg?width=890\"></a>\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/kivy#sponsor)]\n\n<a href=\"https://opencollective.com/kivy/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/kivy/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/kivy/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/kivy/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/kivy/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/kivy/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/kivy/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/kivy/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/kivy/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/kivy/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/kivy/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/kivy/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/kivy/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/kivy/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/kivy/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/kivy/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/kivy/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/kivy/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/kivy/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/kivy/sponsor/9/avatar.svg\"></a>\n"}, {"repo": "/jamiebuilds/the-super-tiny-compiler", "language": "JavaScript", "readme_contents": "[![The Super Tiny Compiler](https://cloud.githubusercontent.com/assets/952783/21579290/5755288a-cf75-11e6-90e0-029529a44a38.png)](the-super-tiny-compiler.js)\n\n***Welcome to The Super Tiny Compiler!***\n\nThis is an ultra-simplified example of all the major pieces of a modern compiler\nwritten in easy to read JavaScript.\n\nReading through the guided code will help you learn about how *most* compilers\nwork from end to end.\n\n### [Want to jump into the code? Click here](the-super-tiny-compiler.js)\n\n### [You can also check it out on Glitch](https://the-super-tiny-compiler.glitch.me/)\n\n---\n\n### Why should I care?\n\nThat's fair, most people don't really have to think about compilers in their day\njobs. However, compilers are all around you, tons of the tools you use are based\non concepts borrowed from compilers.\n\n### But compilers are scary!\n\nYes, they are. But that's our fault (the people who write compilers), we've\ntaken something that is reasonably straightforward and made it so scary that\nmost think of it as this totally unapproachable thing that only the nerdiest of\nthe nerds are able to understand.\n\n### Okay so where do I begin?\n\nAwesome! Head on over to the [the-super-tiny-compiler.js](the-super-tiny-compiler.js)\nfile.\n\n### I'm back, that didn't make sense\n\nOuch, I'm really sorry. Let me know how it can be improved.\n\n### Tests\n\nRun with `node test.js`\n\n---\n\n[![cc-by-4.0](https://licensebuttons.net/l/by/4.0/80x15.png)](http://creativecommons.org/licenses/by/4.0/)\n"}, {"repo": "/30-seconds/30-seconds-of-python", "language": "Python", "readme_contents": "[![Logo](/logo.png)](https://30secondsofcode.org/python/p/1)\n\n## 30 seconds of Python\n\n> Short Python code snippets for all your development needs\n\n* Visit [our website](https://30secondsofcode.org) to view our snippet collection.\n* Use the [Search page](https://30secondsofcode.org/search) to find snippets that suit your needs. You can search by name, tag, language or using a snippet's description. Just start typing a term and see what comes up.\n* Browse the [Python Snippet List](https://30secondsofcode.org/python/p/1) to see all the snippets in this project or click individual tags at the top of the same page to narrow down your search to a specific tag.\n* Click on each snippet card to view the whole snippet, including code, explanation and examples.\n* You can use the button on the right side of a snippet card to copy the code to clipboard.\n* If you like the project, give it a star. It means a lot to the people maintaining it.\n\n## Want to contribute?\n\n* If you want to help us improve, take a minute to read the [Contribution Guidelines](/CONTRIBUTING.md) first.\n* Use the [Snippet Template](/snippet_template.md) to add new snippets to the collection.\n* If you find a problem with a specific snippet, please [open an issue](https://github.com/30-seconds/30-seconds-of-python/issues/new).\n* If you find a problem with the website, please [report it in the web repository](https://github.com/30-seconds/30-seconds-web/issues/new).\n\n## Credits & Sponsors\n\n* This repository is maintained by the [30-seconds organization on GitHub](https://github.com/30-seconds).\n* All snippets are licensed under the CC0-1.0 License, unless explicitly stated otherwise.\n* Logos, names and trademarks are not to be used without the explicit consent of the maintainers or owners of the 30 seconds GitHub organization.\n* Our website is powered by [Netlify](https://www.netlify.com/), [Gatsby](https://www.gatsbyjs.org/), [Travis CI](https://travis-ci.com/) & [GitHub](https://github.com/\n"}, {"repo": "/egrcc/zhihu-python", "language": "Python", "readme_contents": "zhihu-python\uff1a\u83b7\u53d6\u77e5\u4e4e\u4fe1\u606f\n===============================\n\n**\u6ce8\u610f: \u672c\u9879\u76ee\u4e0d\u518d\u7ef4\u62a4\u66f4\u65b0\uff01**\n\n.. contents::\n\n\n\u4ecb\u7ecd\n----\n\nzhihu-python \u91c7\u7528 Python2.7 \u7f16\u5199\uff0c\u7528\u6765\u65b9\u4fbf\u5730\u83b7\u53d6\u77e5\u4e4e\u4e0a\u5404\u79cd\u5185\u5bb9\u7684\u4fe1\u606f\uff0c\u5e76\u4e14\u53ef\u4ee5\u65b9\u4fbf\u5730\u5c06\u7b54\u6848\u5907\u4efd\u5bfc\u51fa\u4e3a txt \u6216 markdown \u6587\u4ef6\u3002\u7531\u4e8e\u77e5\u4e4e\u5b98\u65b9\u76ee\u524d\u6ca1\u6709\u63d0\u4f9b api\uff0c\u6240\u4ee5\u6709\u4e86\u6b64\u9879\u76ee\u7684\u5b58\u5728\u3002\n\n\u4f7f\u7528 Python3 \u7684\u7c7b\u4f3c\u9879\u76ee\u53ef\u4ee5\u53c2\u89c1\uff1a`zhihu-py3 <https://github.com/7sDream/zhihu-py3>`_ \u3002\u4f7f\u7528 PHP \u7684\u7c7b\u4f3c\u9879\u76ee\u53ef\u4ee5\u53c2\u89c1\uff1a`zhihu-php <https://github.com/ahonn/zhihu-php>`_ \u3002\u4f7f\u7528 Go \u7684\u7c7b\u4f3c\u9879\u76ee\u53ef\u4ee5\u53c2\u89c1\uff1a`zhihu-go <https://github.com/DeanThompson/zhihu-go>`_ \u3002\n\n**\u6ce8: \u672c\u9879\u76ee\u4ee3\u7801\u5747\u5728 Ubuntu14.04 \u4e0a\u4f7f\u7528 python2.7.6 \u7f16\u5199\u548c\u6d4b\u8bd5\u901a\u8fc7\uff0c\u5176\u4ed6\u73af\u5883\u53ef\u80fd\u5b58\u5728\u4e00\u5b9a\u95ee\u9898\u3002**\n\n\u83b7\u53d6\u67d0\u4e2a\u95ee\u9898\u4e0b\u7684\u5168\u90e8\u56de\u7b54\u5e76\u5bfc\u51fa\uff0c\u5f88\u7b80\u5355\uff1a\n\n.. code-block:: python\n\n    from zhihu import Question\n    \n    url = \"http://www.zhihu.com/question/24269892\"\n    question = Question(url)\n    answers = question.get_all_answers()\n    for answer in answers:\n        answer.to_txt()\n        answer.to_md()\n \n\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u65b0\u5efatext\uff0cmarkdown\u4e24\u4e2a\u6587\u4ef6\u5939\uff0c\u5e76\u5c06\u6240\u6709txt\u6587\u4ef6\u4fdd\u5b58\u5230text\u6587\u4ef6\u5939\uff0c\u6240\u6709markdown\u6587\u4ef6\u4fdd\u5b58\u5230markdown\u6587\u4ef6\u5939\u3002\n\n\u5907\u4efd\u67d0\u5927V\u7684\u5168\u90e8\u56de\u7b54\uff0c\u4e5f\u5f88\u7b80\u5355\uff1a\n\n.. code-block:: python\n    \n    from zhihu import User\n    \n    user_url = \"http://www.zhihu.com/people/jixin\"\n    user = User(user_url)\n    answers = user.get_answers()\n    for answer in answers:\n        answer.to_txt()\n        answer.to_md()\n        \n\u5bfc\u51fa\u7684markdown\uff0ctxt\u6587\u4ef6\u793a\u4f8b\u8bf7\u89c1\u8be5\u9879\u76ee\u7684markdown\uff0ctext\u6587\u4ef6\u5939\u3002\u5f53\u7136\uff0c\u60f3\u8981\u77e5\u9053\u67d0\u5927V\u5173\u6ce8\u4e86\u90a3\u4e9b\u4eba\uff0c\u63d0\u4e86\u4ec0\u4e48\u95ee\u9898\u4e5f\u4e0d\u5728\u8bdd\u4e0b\uff0c\u8be6\u60c5\u8bf7\u89c1\uff1a\u5feb\u901f\u5f00\u59cb\u3002        \n\n\n\n\u5feb\u901f\u5f00\u59cb\n---------\n\n\u51c6\u5907\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n**Tips** :\n\n1.  \u786e\u4fdd\u4f60\u7684\u7cfb\u7edf\u91cc\u9762\u5df2\u7ecf\u5b89\u88c5\u4e86 `Python2.7 <https://www.python.org/>`_ \uff0c\u4e0d\u540c\u4f5c\u4e1a\u7cfb\u7edf\u5982\u4f55\u5b89\u88c5\u4e0d\u518d\u8d58\u8ff0\u3002\n2.  \u68c0\u67e5\u4f60\u7cfb\u7edf\u4e2d `python` \u548c `pip` \u7684\u7248\u672c, \u5982\u679c\u4e0d\u5c5e\u4e8e `python2.7` , \u8bf7\u5728\u6267\u884c\u4ee3\u7801\u8303\u4f8b\u65f6\uff0c\u81ea\u884c\u5c06 `python` \u548c `pip` \u5206\u522b\u66ff\u6362\u6210 `python2.7` \u548c `pip2` \u3002\n3.  \u786e\u4fdd\u4f60\u7684\u7cfb\u7edf\u4e2d\u5b89\u88c5\u4e86 `git` \u7a0b\u5e8f \u4ee5\u53ca `python-pip` \u3002\n\n\n**\u514b\u9686\u672c\u9879\u76ee**\n\n\n.. code:: bash\n\n  git clone git@github.com:egrcc/zhihu-python.git\n  cd zhihu-python\n\n\n**\u89e3\u51b3\u4f9d\u8d56**\n\n* `Beautiful Soup 4 <http://www.crummy.com/software/BeautifulSoup/>`_\n* `requests <https://github.com/kennethreitz/requests>`_\n* `html2text <https://github.com/aaronsw/html2text>`_\n* `termcolor <https://pypi.python.org/pypi/termcolor>`_\n* `lxml <https://github.com/lxml/lxml>`_\n\n.. code:: bash\n\n  sudo pip install -r requirements.txt\n\n\nor\n\n.. code:: bash\n\n  sudo pip2 install -r requirements.txt\n\n\n\n**\u767b\u5f55\u77e5\u4e4e**\n\n\n\u767b\u5f55 `\u77e5\u4e4e` \u751f\u6210\u8eab\u4efd\u4fe1\u606f, \u4fdd\u5b58\u5728\u5f53\u524d\u76ee\u5f55\u7684 `cookies` \u6587\u4ef6\u4e2d\u3002\n\n.. code:: bash\n  \n  python auth.py\n\n\n**\u6267\u884c\u6d4b\u8bd5**\n\n\n.. code:: bash\n\n  python test.py\n\n\u4e0d\u51fa\u610f\u5916\uff0c\u4e00\u5207\u5e94\u8be5\u5b8c\u7f8e\u8fd0\u884c :))\n\n\n\nQuestion\uff1a\u83b7\u53d6\u95ee\u9898\u4fe1\u606f\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nQuestion \u4ee3\u8868\u4e00\u4e2a\u95ee\u9898\uff0c\u5904\u7406\u77e5\u4e4e\u95ee\u9898\u76f8\u5173\u64cd\u4f5c\u3002\u521b\u5efa\u4e00\u4e2a Question \u5bf9\u8c61\u9700\u4f20\u5165\u8be5\u95ee\u9898\u7684 url \uff0c\u5982\uff1a\n\n.. code-block:: python\n\n    from zhihu import Question\n    \n    url = \"http://www.zhihu.com/question/24269892\"\n    question = Question(url)\n\n\u5f97\u5230 Question \u5bf9\u8c61\u540e\uff0c\u53ef\u4ee5\u83b7\u53d6\u8be5\u95ee\u9898\u7684\u4e00\u4e9b\u4fe1\u606f\uff1a\n\n.. code-block:: python\n\n    # -*- coding: utf-8 -*-\n    from zhihu import Question\n    \n    url = \"http://www.zhihu.com/question/24269892\"\n    question = Question(url)\n\n    # \u83b7\u53d6\u8be5\u95ee\u9898\u7684\u6807\u9898\n    title = question.get_title()\n    # \u83b7\u53d6\u8be5\u95ee\u9898\u7684\u8be6\u7ec6\u63cf\u8ff0\n    detail = question.get_detail()\n    # \u83b7\u53d6\u56de\u7b54\u4e2a\u6570\n    answers_num = question.get_answers_num()\n    # \u83b7\u53d6\u5173\u6ce8\u8be5\u95ee\u9898\u7684\u4eba\u6570\n    followers_num = question.get_followers_num()\n    # \u83b7\u53d6\u8be5\u95ee\u9898\u6240\u5c5e\u8bdd\u9898\n    topics = question.get_topics()\n    # \u83b7\u53d6\u8be5\u95ee\u9898\u88ab\u6d4f\u89c8\u6b21\u6570\n    visit_times = question.get_visit_times()\n    # \u83b7\u53d6\u6392\u540d\u7b2c\u4e00\u7684\u56de\u7b54\n    top_answer = question.get_top_answer()\n    # \u83b7\u53d6\u6392\u540d\u524d\u5341\u7684\u5341\u4e2a\u56de\u7b54\n    top_answers = question.get_top_i_answers(10)\n    # \u83b7\u53d6\u6240\u6709\u56de\u7b54\n    answers = question.get_all_answers()\n\n    print title  # \u8f93\u51fa\uff1a\u73b0\u5b9e\u53ef\u4ee5\u6709\u591a\u7f8e\u597d\uff1f\n    print detail\n    # \u8f93\u51fa\uff1a\n    # \u672c\u95ee\u9898\u76f8\u5bf9\u4e8e\u201c\u73b0\u5b9e\u53ef\u4ee5\u591a\u6b8b\u9177\uff1f\u4f20\u9001\u95e8\uff1a\u73b0\u5b9e\u53ef\u4ee5\u6709\u591a\u6b8b\u9177\uff1f\n    # \u9898\u4e3b\uff1a       \u6628\u5929\u770b\u4e86\u201c\u73b0\u5b9e\u53ef\u4ee5\u6709\u591a\u6b8b\u9177\u201c\u3002\u611f\u89c9\u4e0d\u592a\u597d\uff0c\u6240\u4ee5\u6211\n    # \u5f00\u4e86\u8fd9\u4e2a\u95ee\u9898\u4ee5\u76f8\u5bf9\u5e94\uff0c\u5e0c\u671b\u80fd\u591f\u201c\u4e2d\u548c\u4e00\u4e0b\u201c\u3002\u548c\u90a3\u4e2a\u95ee\u9898\u9898\u4e3b\u4e0d\u60f3\n    # \u628a\u5b83\u53d8\u6210\u201c\u6bd4\u60e8\u5927\u4f1a\u201c\u4e00\u6837\uff0c\u6211\u4e5f\u4e0d\u60f3\u628a\u8fd9\u4e2a\u53d8\u6210\u201c\u9e21\u6c64\u6545\u4e8b\u4f1a\u201c\uff0c\u6216\u8005\n    # \u662f\u201c\u6652\u5e78\u798f\u201c\u6bd4\u8d5b\u3002\u6240\u4ee5\u5927\u5bb6\u4ece\u201c\u73b0\u5b9e\uff0c\u5b9e\u9645\u201d\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u8bb2\u8ff0\u81ea\u5df1\u7684\n    # \u7f8e\u597d\u6545\u4e8b\uff0c\u8ba9\u5927\u5bb6\u770b\u770b\u793e\u4f1a\u7684\u51b7\u548c\u6696\uff0c\u80fd\u66f4\u52a0\u8fa8\u8bc1\u5730\u770b\u5f85\u4e16\u754c\uff0c\u662f\u6b64\n    # \u9898\u548c\u5f7c\u9898\u5171\u540c\u7684\u201c\u5fc3\u613f\u201c\u5427\u3002\n    print answers_num  # \u8f93\u51fa\uff1a2441\n    print followers_num  # \u8f93\u51fa\uff1a26910\n    for topic in topics:\n        print topic,  # \u8f93\u51fa\uff1a\u60c5\u611f\u514b\u5236 \u73b0\u5b9e \u793e\u4f1a \u4e2a\u4eba\u7ecf\u5386\n    print visit_times  # \u8f93\u51fa: \u8be5\u95ee\u9898\u5f53\u524d\u88ab\u6d4f\u89c8\u7684\u6b21\u6570\n    print top_answer  \n    # \u8f93\u51fa\uff1a<zhihu.Answer instance at 0x7f8b6582d0e0>\n    # Answer\u7c7b\u5bf9\u8c61\n    print top_answers  \n    # \u8f93\u51fa\uff1a<generator object get_top_i_answers at 0x7fed676eb320>\n    # \u4ee3\u8868\u524d\u5341\u7684Answer\u7684\u751f\u6210\u5668\n    print answers  \n    # \u8f93\u51fa\uff1a<generator object get_all_answer at 0x7f8b66ba30a0>\n    # \u4ee3\u8868\u6240\u6709Answer\u7684\u751f\u6210\u5668\n\n   \nAnswer\uff1a\u83b7\u53d6\u7b54\u6848\u4fe1\u606f\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAnswer \u4ee3\u8868\u4e86\u4e00\u4e2a\u7b54\u6848\uff0c\u5904\u7406\u77e5\u4e4e\u7b54\u6848\u76f8\u5173\u64cd\u4f5c\u3002\u521b\u5efa\u4e00\u4e2a Answer \u5bf9\u8c61\u9700\u4f20\u5165\u8be5\u7b54\u6848\u7684 url \uff0c\u5982\uff1a\n\n.. code-block:: python\n\n    from zhihu import Answer\n    \n    answer_url = \"http://www.zhihu.com/question/24269892/answer/29960616\"\n    answer = Answer(answer_url)\n\n\u5f97\u5230 Answer \u5bf9\u8c61\u540e\uff0c\u53ef\u4ee5\u83b7\u53d6\u8be5\u7b54\u6848\u7684\u4e00\u4e9b\u4fe1\u606f\uff1a\n\n.. code-block:: python\n    \n    # -*- coding: utf-8 -*-\n    from zhihu import Answer\n    \n    answer_url = \"http://www.zhihu.com/question/24269892/answer/29960616\"\n    answer = Answer(answer_url)\n    # \u83b7\u53d6\u8be5\u7b54\u6848\u56de\u7b54\u7684\u95ee\u9898\n    question = answer.get_question()\n    # \u83b7\u53d6\u8be5\u7b54\u6848\u7684\u4f5c\u8005\n    author = answer.get_author()\n    # \u83b7\u53d6\u8be5\u7b54\u6848\u83b7\u5f97\u7684\u8d5e\u540c\u6570\n    upvote = answer.get_upvote()\n    # \u83b7\u53d6\u8be5\u7b54\u6848\u6240\u5c5e\u95ee\u9898\u88ab\u6d4f\u89c8\u6b21\u6570\n    visit_times = answer.get_visit_times()\n    # \u83b7\u53d6\u6240\u6709\u7ed9\u8be5\u7b54\u6848\u70b9\u8d5e\u7684\u7528\u6237\u4fe1\u606f\n    voters = answer.get_voters()\n    # \u628a\u7b54\u6848\u8f93\u51fa\u4e3atxt\u6587\u4ef6\n    answer.to_txt()\n    # \u628a\u7b54\u6848\u8f93\u51fa\u4e3amarkdown\u6587\u4ef6\n    answer.to_md()\n\n    print question\n    # <zhihu.Question instance at 0x7f0b25d13f80>\n    # \u4e00\u4e2aQuestion\u5bf9\u8c61\n    print question.get_title()  # \u8f93\u51fa\uff1a\u73b0\u5b9e\u53ef\u4ee5\u6709\u591a\u7f8e\u597d\uff1f\n    print author\n    # <zhihu.User instance at 0x7f0b25425b90>\n    # \u4e00\u4e2aUser\u5bf9\u8c61\n    print voters \n    # <generator object get_voters at 0x7f32fbe55730>\n    # \u4ee3\u8868\u6240\u6709\u8be5\u7b54\u6848\u70b9\u8d5e\u7684\u7528\u6237\u7684\u751f\u6210\u5668\n    print author.get_user_id()  # \u8f93\u51fa\uff1a\u7530\u6d69\n    print upvote  # \u8f93\u51fa\uff1a9320\n    print visit_times  # \u8f93\u51fa: \u6539\u7b54\u6848\u6240\u5c5e\u95ee\u9898\u88ab\u6d4f\u89c8\u6b21\u6570\n\n\nUser\uff1a\u83b7\u53d6\u7528\u6237\u4fe1\u606f\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nUser \u4ee3\u8868\u4e00\u4e2a\u7528\u6237\uff0c\u5904\u7406\u7528\u6237\u76f8\u5173\u64cd\u4f5c\u3002\u521b\u5efa\u4e00\u4e2a User \u5bf9\u8c61\u9700\u4f20\u5165\u8be5\u7528\u6237\u7684 url \uff0c\u5982\uff1a\n\n.. code-block:: python\n    \n    from zhihu import User\n    \n    user_url = \"http://www.zhihu.com/people/jixin\"\n    user = User(user_url)\n\n\u5f97\u5230 User \u5bf9\u8c61\u540e\uff0c\u53ef\u4ee5\u83b7\u53d6\u8be5\u7528\u6237\u7684\u4e00\u4e9b\u4fe1\u606f\uff1a\n\n.. code-block:: python\n    \n    # -*- coding: utf-8 -*-\n    from zhihu import User\n    \n    user_url = \"http://www.zhihu.com/people/jixin\"\n    user = User(user_url)\n    # \u83b7\u53d6\u7528\u6237ID\n    user_id = user.get_user_id()\n    # \u83b7\u53d6\u7528\u6237\u6027\u522b\n    user_gender = user.get_gender()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u7684\u5173\u6ce8\u8005\u4eba\u6570\n    followers_num = user.get_followers_num()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u5173\u6ce8\u7684\u4eba\u6570\n    followees_num =user.get_followees_num()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u63d0\u95ee\u7684\u4e2a\u6570\n    asks_num = user.get_asks_num()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u56de\u7b54\u7684\u4e2a\u6570\n    answers_num = user.get_answers_num()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u6536\u85cf\u5939\u4e2a\u6570\n    collections_num = user.get_collections_num()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u83b7\u5f97\u7684\u8d5e\u540c\u6570\n    agree_num = user.get_agree_num()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u83b7\u5f97\u7684\u611f\u8c22\u6570\n    thanks_num = user.get_thanks_num()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u7684\u5934\u50cfurl\n    head_img_url = user.get_head_img_url()\n    \n    # \u83b7\u53d6\u8be5\u7528\u6237\u5173\u6ce8\u7684\u4eba\n    followees = user.get_followees()\n    # \u83b7\u53d6\u5173\u6ce8\u8be5\u7528\u6237\u7684\u4eba\n    followers = user.get_followers()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u63d0\u7684\u95ee\u9898\n    asks = user.get_asks()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u56de\u7b54\u7684\u95ee\u9898\u7684\u7b54\u6848\n    answers = user.get_answers()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u7684\u6536\u85cf\u5939\n    collections = user.get_collections()\n    \n    print user_id # \u9ec4\u7ee7\u65b0\n    print followers_num # 614840\n    print followees_num # 8408\n    print asks_num # 1323\n    print answers_num # 786\n    print collections_num # 44\n    print agree_num # 46387\n    print thanks_num # 11477\n    print head_img_url  # https://pic2.zhimg.com/0626f4164009f291b26a79d96c6962c5_l.jpg\n    \n    print followees\n    # <generator object get_followee at 0x7ffcac3af050>\n    # \u4ee3\u8868\u6240\u6709\u8be5\u7528\u6237\u5173\u6ce8\u7684\u4eba\u7684\u751f\u6210\u5668\u5bf9\u8c61\n    print followers\n    # <generator object get_follower at 0x7ffcac3af0f0>\n    # \u4ee3\u8868\u6240\u6709\u5173\u6ce8\u8be5\u7528\u6237\u7684\u4eba\u7684\u751f\u6210\u5668\u5bf9\u8c61\n    print asks\n    # <generator object get_ask at 0x7ffcab9db780>\n    # \u4ee3\u8868\u8be5\u7528\u6237\u63d0\u7684\u6240\u6709\u95ee\u9898\u7684\u751f\u6210\u5668\u5bf9\u8c61\n    print answers\n    # <generator object get_answer at 0x7ffcab9db7d0>\n    # \u4ee3\u8868\u8be5\u7528\u6237\u56de\u7b54\u7684\u6240\u6709\u95ee\u9898\u7684\u7b54\u6848\u7684\u751f\u6210\u5668\u5bf9\u8c61\n    print collections\n    # <generator object get_collection at 0x7ffcab9db820>\n    # \u4ee3\u8868\u8be5\u7528\u6237\u6536\u85cf\u5939\u7684\u751f\u6210\u5668\u5bf9\u8c61\n\n\nCollection\uff1a\u83b7\u53d6\u6536\u85cf\u5939\u4fe1\u606f\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCollection \u4ee3\u8868\u4e00\u4e2a\u6536\u85cf\u5939\uff0c\u5904\u7406\u6536\u85cf\u5939\u76f8\u5173\u64cd\u4f5c\u3002\u521b\u5efa\u4e00\u4e2a Collection \u5bf9\u8c61\u9700\u4f20\u5165\u8be5\u6536\u85cf\u5939\u7684 url \uff0c\u5982\uff1a\n\n.. code-block:: python\n\n    from zhihu import Collection\n    \n    collection_url = \"http://www.zhihu.com/collection/36750683\"\n    collection = Collection(collection_url)\n\n\u5f97\u5230 Collection \u5bf9\u8c61\u540e\uff0c\u53ef\u4ee5\u83b7\u53d6\u8be5\u6536\u85cf\u5939\u7684\u4e00\u4e9b\u4fe1\u606f\uff1a\n\n.. code-block:: python\n    \n    # -*- coding: utf-8 -*-\n    from zhihu import Collection\n    \n    collection_url = \"http://www.zhihu.com/collection/36750683\"\n    collection = Collection(collection_url)\n    \n    # \u83b7\u53d6\u8be5\u6536\u85cf\u5939\u7684\u521b\u5efa\u8005\n    creator = collection.get_creator()\n    # \u83b7\u53d6\u8be5\u6536\u85cf\u5939\u7684\u540d\u5b57\n    name = collection.get_name()\n    # \u83b7\u53d6\u8be5\u6536\u85cf\u5939\u4e0b\u7684\u524d\u5341\u4e2a\u7b54\u6848\n    top_answers = collection.get_top_i_answers(10)\n    # \u83b7\u53d6\u8be5\u6536\u85cf\u5939\u4e0b\u7684\u6240\u6709\u7b54\u6848\n    answers = collection.get_all_answers()\n    \n    print creator \n    # <zhihu.User instance at 0x7fe1296f29e0>\n    # \u4e00\u4e2aUser\u5bf9\u8c61\n    print creator.get_user_id() # \u7a37\u9ecd\n    print name # \u7ed9\u4f60\u4e00\u4e2a\u4e0d\u540c\u7684\u89c6\u89d2\n    print top_answers\n    # <generator object get_top_i_answers at 0x7f378465dc80>\n    # \u4ee3\u8868\u524d\u5341\u4e2a\u7b54\u6848\u7684\u751f\u6210\u5668\u5bf9\u8c61\n    print answers \n    # <generator object get_all_answer at 0x7fe12a29b280>\n    # \u4ee3\u8868\u6240\u6709\u7b54\u6848\u7684\u751f\u6210\u5668\u5bf9\u8c61\n\n\nColumn\uff1a\u83b7\u53d6\u4e13\u680f\u4fe1\u606f\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nColumn \u4ee3\u8868\u4e00\u4e2a\u4e13\u680f\uff0c\u5904\u7406\u4e13\u680f\u76f8\u5173\u64cd\u4f5c\u3002\u521b\u5efa\u4e00\u4e2a Column \u5bf9\u8c61\u9700\u4f20\u5165\u8be5\u4e13\u680f\u7684 url \uff0c\u5982\uff1a\n\n.. code-block:: python\n\n    from zhihu import Column\n    \n    url = \"http://zhuanlan.zhihu.com/daily\"\n    column = Column(url)\n\n\u5f97\u5230 Column \u5bf9\u8c61\u540e\uff0c\u53ef\u4ee5\u83b7\u53d6\u8be5\u4e13\u680f\u7684\u4e00\u4e9b\u4fe1\u606f\uff1a\n\n.. code-block:: python\n\n    # -*- coding: utf-8 -*-\n    from zhihu import Column\n    \n    url = \"http://zhuanlan.zhihu.com/daily\"\n    column = Column(url)\n\n    # \u83b7\u53d6\u8be5\u4e13\u680f\u7684\u6807\u9898\n    title = column.get_title()\n    # \u83b7\u53d6\u8be5\u4e13\u680f\u7684\u63cf\u8ff0\n    description = column.get_description()\n    # \u83b7\u53d6\u8be5\u4e13\u680f\u7684\u4f5c\u8005\n    creator = column.get_creator()\n    # \u83b7\u53d6\u8be5\u4e13\u680f\u7684\u6587\u7ae0\u6570\n    posts_num = column.get_posts_num()\n    # \u83b7\u53d6\u8be5\u4e13\u680f\u7684\u6240\u6709\u6587\u7ae0\n    posts = column.get_all_posts()\n\n    print title  # \u8f93\u51fa\uff1a\u77e5\u4e4e\u65e5\u62a5\n    print description\n    # \u8f93\u51fa\uff1a\n    # \u77e5\u4e4e\u65e5\u62a5\u542f\u52a8\u753b\u9762\u63a5\u53d7\u6240\u6709\u6444\u5f71\u5e08\u670b\u53cb\u4eec\u7684\u6295\u7a3f\uff0c\u5c06\u4f5c\u54c1\u94fe\u63a5\n    #\uff08\u5982 Flickr\u3001LOFTER \u7b49\u7b49\uff09\uff0c\u53d1\u81f3\u90ae\u7bb1 qidong (at) zhihu.com\uff0c\n    # \u5e76\u9644\u4e0a\u60a8\u7684\u77e5\u4e4e\u4e2a\u4eba\u9875\u9762\u5730\u5740\u5373\u53ef\u3002\n    # \n    # \u8be6\u7ec6\u6295\u7a3f\u8981\u6c42: http://t.cn/zQyEpN5\n\n    print creator  \n    # \u8f93\u51fa\uff1a<zhihu.User instance at 0x75e33eb8>\n    # User\u7c7b\u5bf9\u8c61\n    print posts_num # 150 \n    print posts\n    # \u8f93\u51fa\uff1a<generator object get_all_posts at 0x75e33bc0>\n    # Post\u7c7b\u5bf9\u8c61\n\n\nPost\uff1a\u83b7\u53d6\u4e13\u680f\u6587\u7ae0\u4fe1\u606f\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPost \u4ee3\u8868\u4e00\u4e2a\u4e13\u680f\u6587\u7ae0\uff0c\u5904\u7406\u4e13\u680f\u6587\u7ae0\u76f8\u5173\u64cd\u4f5c\u3002\u521b\u5efa\u4e00\u4e2a Post \u5bf9\u8c61\u9700\u4f20\u5165\u8be5\u6587\u7ae0\u7684 url \uff0c\u5982\uff1a\n\n.. code-block:: python\n\n    from zhihu import Post\n    \n    url = \"http://zhuanlan.zhihu.com/p/20235601\"\n    post = Post(url)\n\n\u5f97\u5230 Post \u5bf9\u8c61\u540e\uff0c\u53ef\u4ee5\u83b7\u53d6\u8be5\u6587\u7ae0\u7684\u4e00\u4e9b\u4fe1\u606f\uff1a\n\n.. code-block:: python\n\n    # -*- coding: utf-8 -*-\n    from zhihu import Post\n    \n    url = \"http://zhuanlan.zhihu.com/p/20770968\"\n    post = Post(url)\n\n    # \u83b7\u53d6\u8be5\u6587\u7ae0\u7684\u6807\u9898\n    title = post.get_title()\n    # \u83b7\u53d6\u8be5\u6587\u7ae0\u7684\u5185\u5bb9\n    content = post.get_content()\n    # \u83b7\u53d6\u8be5\u6587\u7ae0\u7684\u4f5c\u8005\n    author = post.get_author()\n    # \u83b7\u53d6\u8be5\u6587\u7ae0\u7684\u6240\u5c5e\u4e13\u680f\n    column = post.get_column()\n    # \u83b7\u53d6\u8be5\u6587\u7ae0\u6240\u5c5e\u8bdd\u9898\n    topics = post.get_topics()\n\n    print title  # \u8f93\u51fa\uff1a\u591c\u8bfb\u4e66|\u56db\u6708\u5341\u4e5d\u65e5\n    print content\n    # \u8f93\u51fa\uff1a\n    # <p>\u5404\u4f4d\uff0c\u665a\u4e0a\u597d\u3002<br> ...\n    # ......\n    print author\n    # \u8f93\u51fa\uff1a <zhihu.User instance at 0x75ec0fd0>\n    for topic in topics:\n        print topic,  # \u8f93\u51fa\uff1a\u9605\u8bfb\n    print column  \n    # \u8f93\u51fa\uff1a<zhihu.Column instance at 0x75eb3eb8>\n    # Column\u7c7b\u5bf9\u8c61\n    \n\n\u7efc\u5408\u5b9e\u4f8b\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\u5c06 Question \uff0c Answer \uff0c User \uff0c Collection \u7ed3\u5408\u8d77\u6765\u4f7f\u7528\u3002\u5b9e\u4f8b\u5982\u4e0b\uff1a\n\n.. code-block:: python\n\n    # -*- coding: utf-8 -*-\n    from zhihu import Question\n    from zhihu import Answer\n    from zhihu import User\n    from zhihu import Collection\n    \n    url = \"http://www.zhihu.com/question/24269892\"\n    question = Question(url)\n    # \u5f97\u5230\u6392\u540d\u7b2c\u4e00\u7684\u7b54\u6848\n    answer = question.get_top_answer()\n    # \u5f97\u5230\u6392\u540d\u7b2c\u4e00\u7684\u7b54\u6848\u7684\u4f5c\u8005\n    user = answer.get_author()\n    # \u5f97\u5230\u8be5\u4f5c\u8005\u56de\u7b54\u8fc7\u7684\u6240\u6709\u95ee\u9898\u7684\u7b54\u6848\n    user_answers = user.get_answers()\n    # \u8f93\u51fa\u8be5\u4f5c\u8005\u56de\u7b54\u8fc7\u7684\u6240\u6709\u95ee\u9898\u7684\u6807\u9898\n    for answer in user_answers:\n        print answer.get_question().get_title()\n    # \u5f97\u5230\u8be5\u7528\u6237\u7684\u6240\u6709\u6536\u85cf\u5939\n    user_collections = user.get_collections()\n    for collection in user_collections:\n\t# \u8f93\u51fa\u6bcf\u4e00\u4e2a\u6536\u85cf\u5939\u7684\u540d\u5b57\n        print collection.get_name()\n\t# \u5f97\u5230\u8be5\u6536\u85cf\u5939\u4e0b\u7684\u524d\u5341\u4e2a\u56de\u7b54\n        top_answers = collection.get_top_i_answers(10)\n\t# \u628a\u7b54\u6848\u5185\u5bb9\u8f6c\u6210txt\uff0cmarkdown\n        for answer in top_answers:\n            answer.to_txt()\n            answer.to_md()\n\n\u4ee5\u4e0a\u793a\u4f8b\u5747\u53ef\u4ee5\u5728test.py\u6587\u4ef6\u4e2d\u627e\u5230\u3002\n\n\u867d\u7136\u662f\u5355\u7ebf\u7a0b\uff0c\u4f46\u901f\u5ea6\u4e0d\u7b97\u592a\u6162\u3002\u6293\u53d6 `\u54ea\u4e9b\u4e1c\u897f\u4e70\u4e86\u4e4b\u540e\uff0c\u4f1a\u8ba9\u4eba\u56e0\u751f\u6d3b\u8d28\u91cf\u548c\u5e78\u798f\u611f\u63d0\u5347\u800c\u611f\u89c9\u76f8\u89c1\u6068\u665a\uff1f <http://www.zhihu.com/question/20840874>`_ \u4e0b\u524d200\u4e2a\u56de\u7b54\uff0c91\u79d2\uff1b\u6293\u53d6 `\u6709\u54ea\u4e9b 100 \u5143\u4ee5\u4e0b\uff0c\u5f88\u5c11\u89c1\u4f46\u9ad8\u5927\u4e0a\u7684\u7269\u4ef6\uff1f <http://www.zhihu.com/question/23054572>`_ \u4e0b\u524d50\u4e2a\u56de\u7b54\uff0c48\u79d2\uff1b\u6293\u53d6 `\u73b0\u5b9e\u53ef\u4ee5\u6709\u591a\u7f8e\u597d\uff1f <http://www.zhihu.com/question/24269892>`_ \u4e0b\u524d200\u4e2a\u56de\u7b54\uff0c69\u79d2\u3002\u751f\u6210\u7684\u6587\u4ef6\u8bf7\u89c1markdown\uff0ctext\u6587\u4ef6\u5939\u3002\u6240\u6709\u533f\u540d\u7528\u6237\u7684\u56de\u7b54\u653e\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\u3002\n\n\nAPI\n-------\n\nzhihu.Question ---- \u77e5\u4e4e\u95ee\u9898\u64cd\u4f5c\u7c7b\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*class* zhihu. **Question** (*url, title = None*)\n\n Question \u4ee5 url \u4e3a\u552f\u4e00\u6807\u8bc6\uff0c\u521b\u5efa\u4e00\u4e2a Question \u5bf9\u8c61\u5b9e\u4f8b\u5fc5\u987b\u4f20\u5165\u4e00\u4e2a\u4ee3\u8868\u77e5\u4e4e\u95ee\u9898\u7684 url \uff08\u5982\uff1a         http://www.zhihu.com/question/26611428\uff09\uff0c\u9700\u5305\u542b\u201chttp://\u201d\u3002\u5982\u679c\u4f20\u5165\u7684\u4e0d\u662f\u4ee3\u8868\u95ee\u9898\u7684 url \uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519\u3002\u901a\u8fc7\u8c03\u7528 Question \u7c7b\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u83b7\u5f97\u8be5\u95ee\u9898\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\n \n **Parameters**\uff1a\n  * **url** -- \u8be5\u95ee\u9898\u7684\u94fe\u63a5\uff0c\u5b57\u7b26\u4e32\n  * **title** -- \u8be5\u95ee\u9898\u7684\u6807\u9898\uff0c\u5b57\u7b26\u4e32\uff0c\u53ef\u9009\n \n **Returns**\uff1a \u4e00\u4e2a Question \u5b9e\u4f8b\u5bf9\u8c61\n \n **get_title** ()\n \n  \u5f97\u5230\u8be5\u95ee\u9898\u7684\u6807\u9898\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u6807\u9898\u7684\u5b57\u7b26\u4e32\n \n **get_detail** ()\n \n  \u5f97\u5230\u8be5\u95ee\u9898\u7684\u8be6\u7ec6\u63cf\u8ff0\u3002\u539f\u95ee\u9898\u7684\u63cf\u8ff0\u53ef\u80fd\u5e26\u6709\u56fe\u7247\u6216\u89c6\u9891\uff0c\u8fd9\u91cc\u5f97\u5230\u7684\u662f\u7eaf\u6587\u5b57\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u8be6\u7ec6\u63cf\u8ff0\u7684\u5b57\u7b26\u4e32\n \n **get_answers_num** ()\n \n  \u5f97\u5230\u8be5\u95ee\u9898\u7684\u56de\u7b54\u4e2a\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u56de\u7b54\u4e2a\u6570\u7684 int \u578b\u6574\u6570\n \n **get_followers_num** ()\n \n  \u5f97\u5230\u5173\u6ce8\u8be5\u95ee\u9898\u7684\u4eba\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u4eba\u6570\u7684 int \u578b\u6574\u6570\n \n **get_topics** ()\n \n  \u5f97\u5230\u8be5\u95ee\u9898\u6240\u5c5e\u7684\u8bdd\u9898\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a list \uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u8bdd\u9898\u7684\u5b57\u7b26\u4e32\n  \n  \u6ce8\uff1a\u4ee5\u540e\u53ef\u80fd\u4f1a\u6dfb\u52a0\u4e00\u4e2a Topic \u7c7b\uff0c\u5230\u65f6\u5019\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u8bdd\u9898\u7684 Topic \u7c7b\u5bf9\u8c61\u3002\n \n **get_all_answers** ()\n \n  \u5f97\u5230\u8be5\u95ee\u9898\u7684\u6240\u6709\u56de\u7b54\u3002\n  \n  **Returns**\uff1a \u5305\u542b\u6240\u6709\u7b54\u6848\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u7b54\u6848\u7684 Answer \u5bf9\u8c61 \n \n **get_top_i_answers** (n)\n \n  \u5f97\u5230\u8be5\u95ee\u9898\u7684\u524d n \u4e2a\u56de\u7b54\u3002\n  \n  **Parameters**\uff1a **n** -- int \u578b\u6574\u6570\n  \n  **Returns**\uff1a \u5305\u542b\u524d n \u4e2a\u7b54\u6848\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u7b54\u6848\u7684 Answer \u5bf9\u8c61\n \n **get_top_answer** ()\n \n  \u5f97\u5230\u76ee\u524d\u6392\u540d\u7b2c\u4e00\u7684\u56de\u7b54\u3002\n \n  **Returns**\uff1a \u4ee3\u8868\u8be5\u7b54\u6848\u7684 Answer \u5bf9\u8c61\n  \n **get_visit_times** ()\n \n  \u5f97\u5230\u8be5\u95ee\u9898\u88ab\u6d4f\u89c8\u6b21\u6570\u3002\u8be5\u65b9\u6cd5\u7531 `@lufo816 <https://github.com/lufo816>`_ \u6dfb\u52a0\u3002\n \n  **Returns**\uff1a \u4ee3\u8868\u6d4f\u89c8\u6b21\u6570\u7684 int \u578b\u6574\u6570\n \n\nzhihu.User ---- \u77e5\u4e4e\u7528\u6237\u64cd\u4f5c\u7c7b\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*class* zhihu. **User** (*user_url, user_id = None*)\n\n User \u4ee5 url \u4e3a\u552f\u4e00\u6807\u8bc6\uff0c\u521b\u5efa\u4e00\u4e2a User \u5bf9\u8c61\u5b9e\u4f8b\u5fc5\u987b\u4f20\u5165\u4e00\u4e2a\u4ee3\u8868\u77e5\u4e4e\u7528\u6237\u7684 url \uff08\u5982\uff1a         http://www.zhihu.com/people/egrcc\uff09\uff0c\u9700\u5305\u542b\u201chttp://\u201d\u3002\u5982\u679c\u4f20\u5165\u7684\u4e0d\u662f\u4ee3\u8868\u7528\u6237\u7684 url \uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519\u3002\u901a\u8fc7\u8c03\u7528 User \u7c7b\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u83b7\u5f97\u8be5\u7528\u6237\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\n \n **Parameters**\uff1a\n  * **user_url** -- \u8be5\u7528\u6237\u7684\u94fe\u63a5\uff0c\u5b57\u7b26\u4e32\n  * **user_id** -- \u8be5\u7528\u6237\u7684 ID \uff0c\u5b57\u7b26\u4e32\uff0c\u53ef\u9009\n  \n **Returns**\uff1a \u4e00\u4e2a User \u5b9e\u4f8b\u5bf9\u8c61\n\n **get_user_id** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u7684ID\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868 ID \u7684\u5b57\u7b26\u4e32\n\n **get_gender** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u7684\u6027\u522b\u3002\n  \n **Returns**\uff1a \u4ee3\u8868 \u6027\u522b \u7684\u5b57\u7b26\u4e32(male/female)  \n  \n **get_followees_num** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u5173\u6ce8\u7684\u4eba\u7684\u4e2a\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u4eba\u6570\u7684 int \u578b\u6574\u6570\n \n **get_followers_num** ()\n \n  \u5f97\u5230\u5173\u6ce8\u8be5\u7528\u6237\u7684\u4eba\u7684\u4e2a\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u4eba\u6570\u7684 int \u578b\u6574\u6570\n \n **get_agree_num** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u83b7\u5f97\u7684\u8d5e\u540c\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u8d5e\u540c\u6570\u7684 int \u578b\u6574\u6570\n \n **get_thanks_num** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u83b7\u5f97\u7684\u611f\u8c22\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u611f\u8c22\u6570\u7684 int \u578b\u6574\u6570\n\n **get_head_img_url** (scale)\n\n  \u83b7\u53d6\u7528\u6237\u5934\u50cfurl\u3002\u8be5\u65b9\u6cd5\u7531 `@liuwons <https://github.com/liuwons>`_ \u6dfb\u52a0\u3002\n\n  **Parameters**\uff1a **scale** int \u578b\u6574\u6570\uff0c\u4ee3\u8868\u5c3a\u5bf8: 1(25\u00d725), 3(75\u00d775), 4(100\u00d7100), 6(150\u00d7150), 10(250\u00d7250)\n\n  **Returns**\uff1a \u5bf9\u5e94\u5c3a\u5bf8\u5934\u50cf\u7684\u56fe\u7247\u94fe\u63a5, \u5b57\u7b26\u4e32\n \n **get_asks_num** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u63d0\u95ee\u9898\u7684\u4e2a\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u95ee\u9898\u6570\u7684 int \u578b\u6574\u6570 \n \n **get_answers_num** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u56de\u7b54\u95ee\u9898\u7684\u4e2a\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u95ee\u9898\u6570\u7684 int \u578b\u6574\u6570 \n \n **get_collections_num** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u6536\u85cf\u5939\u7684\u4e2a\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u6536\u85cf\u5939\u6570\u7684 int \u578b\u6574\u6570 \n \n **get_followees** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u5173\u6ce8\u7684\u4eba\u3002\n  \n  **Returns**\uff1a \u5305\u542b\u6240\u6709\u8be5\u7528\u6237\u5173\u6ce8\u7684\u4eba\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u7528\u6237\u7684 User \u5bf9\u8c61\n \n **get_followers** ()\n \n  \u5f97\u5230\u5173\u6ce8\u8be5\u7528\u6237\u7684\u4eba\u3002\n  \n  **Returns**\uff1a \u5305\u542b\u6240\u6709\u5173\u6ce8\u8be5\u7528\u6237\u7684\u4eba\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u7528\u6237\u7684 User \u5bf9\u8c61\n \n **get_asks** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u63d0\u7684\u6240\u6709\u95ee\u9898\u3002\n  \n  **Returns**\uff1a \u5305\u542b\u6240\u6709\u95ee\u9898\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u95ee\u9898\u7684 Question \u5bf9\u8c61\n \n **get_answers** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u56de\u7b54\u7684\u6240\u6709\u95ee\u9898\u7684\u7b54\u6848\u3002\n  \n  **Returns**\uff1a \u5305\u542b\u6240\u6709\u56de\u7b54\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u56de\u7b54\u7684 Answer \u5bf9\u8c61\n \n **get_collections** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u7684\u6240\u6709\u6536\u85cf\u5939\u3002\n  \n  **Returns**\uff1a \u5305\u542b\u6240\u6709\u6536\u85cf\u5939\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u6536\u85cf\u5939\u7684 Collection \u5bf9\u8c61\n \n\nzhihu.Answer ---- \u77e5\u4e4e\u56de\u7b54\u64cd\u4f5c\u7c7b\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*class* zhihu. **Answer** (*answer_url, question = None, author = None, upvote = None, content = None*)\n\n Answer \u4ee5 url \u4e3a\u552f\u4e00\u6807\u8bc6\uff0c\u521b\u5efa\u4e00\u4e2a Answer \u5bf9\u8c61\u5b9e\u4f8b\u5fc5\u987b\u4f20\u5165\u4e00\u4e2a\u4ee3\u8868\u77e5\u4e4e\u56de\u7b54\u7684 url \uff08\u5982\uff1a         http://www.zhihu.com/question/19878575/answer/14776495\uff09\uff0c\u9700\u5305\u542b\u201chttp://\u201d\u3002\u5982\u679c\u4f20\u5165\u7684\u4e0d\u662f\u4ee3\u8868\u56de\u7b54\u7684 url \uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519\u3002\u901a\u8fc7\u8c03\u7528 Answer \u7c7b\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u83b7\u5f97\u8be5\u56de\u7b54\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\u4e00\u822c\u4e0d\u81ea\u5df1\u521b\u5efaAnswer\u5bf9\u8c61\u3002\n \n **Parameters**\uff1a\n  * **answer_url** -- \u8be5\u7b54\u6848\u7684\u94fe\u63a5\uff0c\u5b57\u7b26\u4e32\n  * **question** -- \u8be5\u7b54\u6848\u56de\u7b54\u7684\u95ee\u9898\uff0c Question \u5bf9\u8c61\uff0c\u53ef\u9009\n  * **author** -- \u8be5\u7b54\u6848\u7684\u4f5c\u8005\uff0c User \u5bf9\u8c61\uff0c\u53ef\u9009\n  * **upvote** -- \u8be5\u7b54\u6848\u83b7\u5f97\u7684\u8d5e\u540c\u6570\uff0c int \u578b\u6574\u6570\uff0c\u53ef\u9009\n  * **content** -- \u8be5\u7b54\u6848\u7684\u5185\u5bb9\uff0c BeautifulSoup \u5bf9\u8c61\uff0c\u53ef\u9009\n  \n **Returns**\uff1a \u4e00\u4e2a Answer \u5b9e\u4f8b\u5bf9\u8c61\n\n **get_question** ()\n \n  \u5f97\u5230\u8be5\u7b54\u6848\u56de\u7b54\u7684\u95ee\u9898\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a Question \u5bf9\u8c61\n \n **get_author** ()\n \n  \u5f97\u5230\u8be5\u7b54\u6848\u7684\u4f5c\u8005 \u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a User \u5bf9\u8c61\n \n **get_upvote** ()\n \n  \u5f97\u5230\u8be5\u7b54\u6848\u83b7\u5f97\u7684\u8d5e\u540c\u6570\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a int \u578b\u6574\u6570\n \n **get_content** ()\n \n  \u5f97\u5230\u8be5\u7b54\u6848\u7684\u5185\u5bb9\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a BeautifulSoup \u5bf9\u8c61\n  \n **get_visit_times** ()\n \n  \u5f97\u5230\u8be5\u7b54\u6848\u6240\u5c5e\u95ee\u9898\u88ab\u6d4f\u89c8\u6b21\u6570\u3002\u8be5\u65b9\u6cd5\u7531 `@lufo816 <https://github.com/lufo816>`_ \u6dfb\u52a0\u3002\n \n  **Returns**\uff1a \u4ee3\u8868\u6d4f\u89c8\u6b21\u6570\u7684 int \u578b\u6574\u6570\n  \n **get_voters** ()\n \n  \u5f97\u5230\u7ed9\u8be5\u7b54\u6848\u70b9\u8d5e\u7684\u7528\u6237\u3002\u8be5\u65b9\u6cd5\u7531 `@lufo816 <https://github.com/lufo816>`_ \u6dfb\u52a0\u3002\n \n  **Returns**\uff1a \u5305\u542b\u6240\u6709\u7ed9\u8be5\u7b54\u6848\u70b9\u8d5e\u7684\u7528\u6237\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u7528\u6237\u7684 User \u5bf9\u8c61\n \n **to_txt** ()\n  \n  \u5c06\u8be5\u7b54\u6848\u8f6c\u6210txt\u6587\u4ef6\uff0c\u5e76\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2atext\u6587\u4ef6\u5939\uff0c\u6240\u751f\u6210\u7684txt\u6587\u4ef6\u5747\u4fdd\u5b58\u5728\u8be5\u6587\u4ef6\u5939\u3002\n \n **to_md** ()\n \n  \u5c06\u8be5\u7b54\u6848\u8f6c\u6210markdown\u6587\u4ef6\uff0c\u5e76\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2amarkdown\u6587\u4ef6\u5939\uff0c\u6240\u751f\u6210\u7684markdown\u6587\u4ef6\u5747\u4fdd\u5b58\u5728\u8be5\u6587\u4ef6\u5939\u3002\n\n\nzhihu.Collection ---- \u77e5\u4e4e\u6536\u85cf\u5939\u64cd\u4f5c\u7c7b\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*class* zhihu. **Collection** (*url, name = None, creator = None*)\n\n Collection \u4ee5 url \u4e3a\u552f\u4e00\u6807\u8bc6\uff0c\u521b\u5efa\u4e00\u4e2a Collection \u5bf9\u8c61\u5b9e\u4f8b\u5fc5\u987b\u4f20\u5165\u4e00\u4e2a\u4ee3\u8868\u77e5\u4e4e\u6536\u85cf\u5939\u7684 url \uff08\u5982\uff1a         http://www.zhihu.com/collection/27053469\uff09\uff0c\u9700\u5305\u542b\u201chttp://\u201d\u3002\u5982\u679c\u4f20\u5165\u7684\u4e0d\u662f\u4ee3\u8868\u6536\u85cf\u5939\u7684 url \uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519\u3002\u901a\u8fc7\u8c03\u7528 Collection \u7c7b\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u83b7\u5f97\u8be5\u6536\u85cf\u5939\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\n \n **Parameters**\uff1a\n  * **url** -- \u8be5\u6536\u85cf\u5939\u7684\u94fe\u63a5\uff0c\u5b57\u7b26\u4e32\n  * **name** -- \u8be5\u6536\u85cf\u5939\u7684\u540d\u5b57\uff0c\u5b57\u7b26\u4e32\uff0c\u53ef\u9009\n  * **creator** -- \u8be5\u6536\u85cf\u5939\u7684\u521b\u5efa\u8005\uff0cUser \u5bf9\u8c61\uff0c\u53ef\u9009\n  \n **Returns**\uff1a \u4e00\u4e2a Collection \u5b9e\u4f8b\u5bf9\u8c61\n\n **get_name** ()\n \n  \u5f97\u5230\u8be5\u6536\u85cf\u5939\u7684\u540d\u5b57\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u540d\u5b57\u7684\u5b57\u7b26\u4e32\n \n **get_creator** ()\n \n  \u5f97\u5230\u8be5\u6536\u85cf\u5939\u7684\u521b\u5efa\u8005\u3002\n  \n  **Returns**\uff1a\u4ee3\u8868\u521b\u5efa\u8005 User \u5bf9\u8c61\n \n **get_all_answers** ()\n \n  \u5f97\u5230\u8be5\u6536\u85cf\u5939\u6536\u85cf\u7684\u6240\u6709\u56de\u7b54\u3002\n  \n  **Returns**\uff1a \u5305\u542b\u8be5\u6536\u85cf\u5939\u4e0b\u6240\u6709\u56de\u7b54\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u56de\u7b54\u7684 Answer \u5bf9\u8c61\n \n **get_top_i_answers** (n)\n \n  \u5f97\u5230\u8be5\u6536\u85cf\u5939\u6536\u85cf\u7684\u524d n \u4e2a\u56de\u7b54\u3002\n  \n  **Parameters**\uff1a **n** -- int \u578b\u6574\u6570\n  \n  **Returns**\uff1a \u5305\u542b\u8be5\u6536\u85cf\u5939\u4e0b\u524d n \u4e2a\u56de\u7b54\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u56de\u7b54\u7684 Answer \u5bf9\u8c61\n\n\nzhihu.Column ---- \u77e5\u4e4e\u4e13\u680f\u64cd\u4f5c\u7c7b\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*class* zhihu. **Column** (*Column_url*)\n\n Column \u4ee5 url \u4e3a\u552f\u4e00\u6807\u8bc6\uff0c\u521b\u5efa\u4e00\u4e2a Column \u5bf9\u8c61\u5b9e\u4f8b\u5fc5\u987b\u4f20\u5165\u4e00\u4e2a\u4ee3\u8868\u77e5\u4e4e\u4e13\u680f\u7684 url \uff08\u5982\uff1ahttp://zhuanlan.zhihu.com/daily\uff09\uff0c\u9700\u5305\u542b\u201chttp(s)://\u201d\u3002\u5982\u679c\u4f20\u5165\u7684\u4e0d\u662f\u4ee3\u8868\u4e13\u680f\u7684 url \uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519\u3002\u901a\u8fc7\u8c03\u7528 Column \u7c7b\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u83b7\u5f97\u8be5\u4e13\u680f\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\u8be5\u7c7b\u7531 `@johnnyluck <https://github.com/johnnyluck>`_ \u6dfb\u52a0\u3002\n \n **Parameters**\uff1a\n  * **column_url** -- \u8be5\u4e13\u680f\u7684\u94fe\u63a5\uff0c\u5b57\u7b26\u4e32\n  \n **Returns**\uff1a \u4e00\u4e2a Column \u5b9e\u4f8b\u5bf9\u8c61\n\n **get_title** ()\n \n  \u5f97\u5230\u8be5\u4e13\u680f\u7684\u9898\u76ee\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a\u4ee3\u8868\u9898\u76ee\u7684\u5b57\u7b26\u4e32 \n \n **get_creator** ()\n \n  \u5f97\u5230\u8be5\u4e13\u680f\u7684\u521b\u5efa\u8005\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a User \u5bf9\u8c61\n \n **get_description** ()\n \n  \u5f97\u5230\u8be5\u4e13\u680f\u7684\u63cf\u8ff0\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a\u4e13\u680f\u63cf\u8ff0\u7684\u5b57\u7b26\u4e32\n\n **get_followers_num** ()\n\n  \u5f97\u5230\u8be5\u4e13\u680f\u7684\u5173\u6ce8\u4eba\u6570\u3002\n\n  **Returns**\uff1a \u4e00\u4e2a int \u578b\u7684\u6574\u6570\n \n **get_posts_num** ()\n\n  \u5f97\u5230\u8be5\u4e13\u680f\u7684\u6240\u6709\u6587\u7ae0\u6570\u3002\n\n  **Returns**\uff1a \u4e00\u4e2a int \u578b\u7684\u6574\u6570\n \n **get_content** ()\n \n  \u5f97\u5230\u8be5\u7b54\u6848\u7684\u5185\u5bb9\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a\u5b57\u7b26\u4e32\n\n **get_posts** ()\n\n  \u5f97\u5230\u8be5\u4e13\u680f\u7684\u6240\u6709\u6587\u7ae0\u3002\n\n  **Returns**\uff1a\u5305\u542b\u6240\u6709\u6587\u7ae0\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u6587\u7ae0 Post \u5bf9\u8c61\n \n\nzhihu.Post ---- \u77e5\u4e4e\u4e13\u680f\u6587\u7ae0\u64cd\u4f5c\u7c7b\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*class* zhihu. **Post** (*Post_url*)\n\n Post \u4ee5 url \u4e3a\u552f\u4e00\u6807\u8bc6\uff0c\u521b\u5efa\u4e00\u4e2a Post \u5bf9\u8c61\u5b9e\u4f8b\u5fc5\u987b\u4f20\u5165\u4e00\u4e2a\u4ee3\u8868\u77e5\u4e4e\u6587\u7ae0\u7684 url \uff08\u5982\uff1ahttp://zhuanlan.zhihu.com/p/20235601\uff09\uff0c\u9700\u5305\u542b\u201chttp(s)://\u201d\u3002\u5982\u679c\u4f20\u5165\u7684\u4e0d\u662f\u4ee3\u8868\u6587\u7ae0\u7684 url \uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519\u3002\u901a\u8fc7\u8c03\u7528 Post \u7c7b\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u83b7\u5f97\u8be5\u6587\u7ae0\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\u8be5\u7c7b\u7531 `@johnnyluck <https://github.com/johnnyluck>`_ \u6dfb\u52a0\u3002\n \n **Parameters**\uff1a\n  * **post_url** -- \u8be5\u6587\u7ae0\u7684\u94fe\u63a5\uff0c\u5b57\u7b26\u4e32\n  \n **Returns**\uff1a \u4e00\u4e2a Post \u5b9e\u4f8b\u5bf9\u8c61\n\n **get_title** ()\n \n  \u5f97\u5230\u8be5\u6587\u7ae0\u7684\u9898\u76ee\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a\u4ee3\u8868\u9898\u76ee\u7684\u5b57\u7b26\u4e32 \n \n **get_author** ()\n \n  \u5f97\u5230\u8be5\u6587\u7ae0\u7684\u4f5c\u8005\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a User \u5bf9\u8c61\n \n **get_content** ()\n \n  \u5f97\u5230\u8be5\u6587\u7ae0\u7684\u5185\u5bb9\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a\u6587\u7ae0\u63cf\u8ff0\u7684\u5b57\u7b26\u4e32\n\n **get_topics** ()\n \n  \u5f97\u5230\u8be5\u6587\u7ae0\u7684\u8bdd\u9898\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a\u5217\u8868\n\n **get_column** ()\n\n  \u5f97\u5230\u8be5\u6587\u7ae0\u7684\u6240\u5c5e\u4e13\u680f\u3002\n\n  **Returns**\uff1a\u4e00\u4e2a Column \u7684\u5b9e\u4f8b\u5bf9\u8c61\n \n\n"}]